

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Sep 05 12:56:54 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F726
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     	;# 
    43  0001                     	;# 
    44  0002                     	;# 
    45  0003                     	;# 
    46  0004                     	;# 
    47  0005                     	;# 
    48  0006                     	;# 
    49  0007                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0013                     	;# 
    62  0014                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001D                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  0089                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0096                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009F                     	;# 
   100  0108                     	;# 
   101  0109                     	;# 
   102  010C                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  0185                     	;# 
   109  0186                     	;# 
   110  018C                     	;# 
   111                           
   112                           	psect	idataBANK0
   113  0898                     __pidataBANK0:	
   114                           
   115                           ;initializer for display_temps_to_screen@F1451
   116  0898  3453               	retlw	83
   117  0899  3431               	retlw	49
   118  089A  3420               	retlw	32
   119  089B  343D               	retlw	61
   120  089C  3420               	retlw	32
   121  089D  3400               	retlw	0
   122                           
   123                           	psect	idataBANK1
   124  0892                     __pidataBANK1:	
   125                           
   126                           ;initializer for display_temps_to_screen@F1454
   127  0892  3453               	retlw	83
   128  0893  3432               	retlw	50
   129  0894  3420               	retlw	32
   130  0895  343D               	retlw	61
   131  0896  3420               	retlw	32
   132  0897  3400               	retlw	0
   133                           
   134                           	psect	idataBANK2
   135  0A59                     __pidataBANK2:	
   136                           
   137                           ;initializer for display_temps_to_screen@F1472
   138  0A59  3446               	retlw	70
   139  0A5A  3441               	retlw	65
   140  0A5B  3455               	retlw	85
   141  0A5C  344C               	retlw	76
   142  0A5D  3454               	retlw	84
   143  0A5E  3420               	retlw	32
   144  0A5F  3420               	retlw	32
   145  0A60  3420               	retlw	32
   146  0A61  3420               	retlw	32
   147  0A62  3420               	retlw	32
   148  0A63  3420               	retlw	32
   149  0A64  3420               	retlw	32
   150  0A65  3420               	retlw	32
   151  0A66  3420               	retlw	32
   152  0A67  3400               	retlw	0
   153                           
   154                           ;initializer for String_test@F1411
   155  0A68  3454               	retlw	84
   156  0A69  3469               	retlw	105
   157  0A6A  346D               	retlw	109
   158  0A6B  3427               	retlw	39
   159  0A6C  3473               	retlw	115
   160  0A6D  3420               	retlw	32
   161  0A6E  3453               	retlw	83
   162  0A6F  3474               	retlw	116
   163  0A70  3472               	retlw	114
   164  0A71  3469               	retlw	105
   165  0A72  346E               	retlw	110
   166  0A73  3467               	retlw	103
   167  0A74  3400               	retlw	0
   168                           
   169                           ;initializer for display_temps_to_screen@F1463
   170  0A75  344F               	retlw	79
   171  0A76  3450               	retlw	80
   172  0A77  3445               	retlw	69
   173  0A78  344E               	retlw	78
   174  0A79  3420               	retlw	32
   175  0A7A  3420               	retlw	32
   176  0A7B  3420               	retlw	32
   177  0A7C  3420               	retlw	32
   178  0A7D  3420               	retlw	32
   179  0A7E  3420               	retlw	32
   180  0A7F  3420               	retlw	32
   181  0A80  3420               	retlw	32
   182  0A81  3400               	retlw	0
   183                           
   184                           ;initializer for display_temps_to_screen@F1460
   185  0A82  3420               	retlw	32
   186  0A83  3443               	retlw	67
   187  0A84  3465               	retlw	101
   188  0A85  346C               	retlw	108
   189  0A86  3473               	retlw	115
   190  0A87  3469               	retlw	105
   191  0A88  3475               	retlw	117
   192  0A89  3473               	retlw	115
   193  0A8A  3420               	retlw	32
   194  0A8B  3420               	retlw	32
   195  0A8C  3420               	retlw	32
   196  0A8D  3400               	retlw	0
   197                           
   198                           ;initializer for display_temps_to_screen@F1466
   199  0A8E  3453               	retlw	83
   200  0A8F  3448               	retlw	72
   201  0A90  344F               	retlw	79
   202  0A91  3452               	retlw	82
   203  0A92  3454               	retlw	84
   204  0A93  3420               	retlw	32
   205  0A94  3456               	retlw	86
   206  0A95  3443               	retlw	67
   207  0A96  3443               	retlw	67
   208  0A97  3420               	retlw	32
   209  0A98  3400               	retlw	0
   210                           
   211                           ;initializer for display_temps_to_screen@F1469
   212  0A99  3453               	retlw	83
   213  0A9A  3448               	retlw	72
   214  0A9B  344F               	retlw	79
   215  0A9C  3452               	retlw	82
   216  0A9D  3454               	retlw	84
   217  0A9E  3420               	retlw	32
   218  0A9F  3447               	retlw	71
   219  0AA0  344E               	retlw	78
   220  0AA1  3444               	retlw	68
   221  0AA2  3420               	retlw	32
   222  0AA3  3400               	retlw	0
   223                           
   224                           ;initializer for display_temps_to_screen@F1457
   225  0AA4  3453               	retlw	83
   226  0AA5  3433               	retlw	51
   227  0AA6  3420               	retlw	32
   228  0AA7  343D               	retlw	61
   229  0AA8  3420               	retlw	32
   230  0AA9  3400               	retlw	0
   231                           
   232                           	psect	stringtext
   233  1000                     __pstringtext:	
   234  1000                     stringtab:	
   235  1000                     __stringtab:	
   236                           
   237                           ;	String table - string pointers are 2 bytes each
   238  1000  1BFF               	btfsc	btemp+1,7
   239  1001  280A               	ljmp	stringcode
   240  1002  1383               	bcf	3,7
   241  1003  187F               	btfsc	btemp+1,0
   242  1004  1783               	bsf	3,7
   243  1005  0800               	movf	0,w
   244  1006  0A84               	incf	4,f
   245  1007  1903               	skipnz
   246  1008  0AFF               	incf	btemp+1,f
   247  1009  0008               	return
   248  100A                     stringcode:	
   249  100A  087F               	movf	btemp+1,w
   250  100B  397F               	andlw	127
   251  100C  008A               	movwf	10
   252  100D  0804               	movf	4,w
   253  100E  0A84               	incf	4,f
   254  100F  1903               	skipnz
   255  1010  0AFF               	incf	btemp+1,f
   256  1011  0082               	movwf	2
   257  1012                     __stringbase:	
   258  1012                     __end_of__stringtab:	
   259  1012                     _fonts:	
   260  1012  3400               	retlw	0
   261  1013  3400               	retlw	0
   262  1014  3400               	retlw	0
   263  1015  3400               	retlw	0
   264  1016  344E               	retlw	78
   265  1017  3400               	retlw	0
   266  1018  3406               	retlw	6
   267  1019  3400               	retlw	0
   268  101A  3406               	retlw	6
   269  101B  34FF               	retlw	255
   270  101C  34FF               	retlw	255
   271  101D  34FF               	retlw	255
   272  101E  3448               	retlw	72
   273  101F  34D6               	retlw	214
   274  1020  3424               	retlw	36
   275  1021  3412               	retlw	18
   276  1022  3408               	retlw	8
   277  1023  3424               	retlw	36
   278  1024  34FF               	retlw	255
   279  1025  34FF               	retlw	255
   280  1026  34FF               	retlw	255
   281  1027  3400               	retlw	0
   282  1028  3406               	retlw	6
   283  1029  3400               	retlw	0
   284  102A  3438               	retlw	56
   285  102B  3444               	retlw	68
   286  102C  3482               	retlw	130
   287  102D  3482               	retlw	130
   288  102E  3444               	retlw	68
   289  102F  3438               	retlw	56
   290  1030  3414               	retlw	20
   291  1031  3408               	retlw	8
   292  1032  343E               	retlw	62
   293  1033  3410               	retlw	16
   294  1034  3438               	retlw	56
   295  1035  3410               	retlw	16
   296  1036  34A0               	retlw	160
   297  1037  3460               	retlw	96
   298  1038  3400               	retlw	0
   299  1039  3410               	retlw	16
   300  103A  3410               	retlw	16
   301  103B  3410               	retlw	16
   302  103C  3460               	retlw	96
   303  103D  3460               	retlw	96
   304  103E  3400               	retlw	0
   305  103F  3460               	retlw	96
   306  1040  3418               	retlw	24
   307  1041  3406               	retlw	6
   308  1042  347C               	retlw	124
   309  1043  3442               	retlw	66
   310  1044  347C               	retlw	124
   311  1045  3444               	retlw	68
   312  1046  347E               	retlw	126
   313  1047  3440               	retlw	64
   314  1048  3464               	retlw	100
   315  1049  3452               	retlw	82
   316  104A  344C               	retlw	76
   317  104B  344A               	retlw	74
   318  104C  344A               	retlw	74
   319  104D  3434               	retlw	52
   320  104E  3438               	retlw	56
   321  104F  3424               	retlw	36
   322  1050  347E               	retlw	126
   323  1051  344E               	retlw	78
   324  1052  344A               	retlw	74
   325  1053  3432               	retlw	50
   326  1054  343C               	retlw	60
   327  1055  344A               	retlw	74
   328  1056  3432               	retlw	50
   329  1057  3462               	retlw	98
   330  1058  341A               	retlw	26
   331  1059  3406               	retlw	6
   332  105A  3476               	retlw	118
   333  105B  344A               	retlw	74
   334  105C  3476               	retlw	118
   335  105D  344C               	retlw	76
   336  105E  3452               	retlw	82
   337  105F  343C               	retlw	60
   338  1060  346C               	retlw	108
   339  1061  346C               	retlw	108
   340  1062  3400               	retlw	0
   341  1063  34AC               	retlw	172
   342  1064  346C               	retlw	108
   343  1065  3400               	retlw	0
   344  1066  3410               	retlw	16
   345  1067  3428               	retlw	40
   346  1068  3444               	retlw	68
   347  1069  3428               	retlw	40
   348  106A  3428               	retlw	40
   349  106B  3428               	retlw	40
   350  106C  3444               	retlw	68
   351  106D  3428               	retlw	40
   352  106E  3410               	retlw	16
   353  106F  3402               	retlw	2
   354  1070  3459               	retlw	89
   355  1071  3406               	retlw	6
   356  1072  34FF               	retlw	255
   357  1073  34FF               	retlw	255
   358  1074  34FF               	retlw	255
   359  1075  347C               	retlw	124
   360  1076  3412               	retlw	18
   361  1077  347C               	retlw	124
   362  1078  347E               	retlw	126
   363  1079  345A               	retlw	90
   364  107A  3434               	retlw	52
   365  107B  343C               	retlw	60
   366  107C  3442               	retlw	66
   367  107D  3442               	retlw	66
   368  107E  347E               	retlw	126
   369  107F  3442               	retlw	66
   370  1080  343C               	retlw	60
   371  1081  347E               	retlw	126
   372  1082  344A               	retlw	74
   373  1083  3442               	retlw	66
   374  1084  347E               	retlw	126
   375  1085  340A               	retlw	10
   376  1086  340A               	retlw	10
   377  1087  343C               	retlw	60
   378  1088  3452               	retlw	82
   379  1089  3434               	retlw	52
   380  108A  347E               	retlw	126
   381  108B  3408               	retlw	8
   382  108C  347E               	retlw	126
   383  108D  3442               	retlw	66
   384  108E  347E               	retlw	126
   385  108F  3442               	retlw	66
   386  1090  3430               	retlw	48
   387  1091  3440               	retlw	64
   388  1092  343E               	retlw	62
   389  1093  347E               	retlw	126
   390  1094  3418               	retlw	24
   391  1095  3466               	retlw	102
   392  1096  347E               	retlw	126
   393  1097  3440               	retlw	64
   394  1098  3440               	retlw	64
   395  1099  347E               	retlw	126
   396  109A  341C               	retlw	28
   397  109B  347E               	retlw	126
   398  109C  347E               	retlw	126
   399  109D  3402               	retlw	2
   400  109E  347E               	retlw	126
   401  109F  343C               	retlw	60
   402  10A0  3442               	retlw	66
   403  10A1  343C               	retlw	60
   404  10A2  347E               	retlw	126
   405  10A3  3412               	retlw	18
   406  10A4  340C               	retlw	12
   407  10A5  347E               	retlw	126
   408  10A6  3462               	retlw	98
   409  10A7  34FE               	retlw	254
   410  10A8  347E               	retlw	126
   411  10A9  3432               	retlw	50
   412  10AA  344E               	retlw	78
   413  10AB  3444               	retlw	68
   414  10AC  344A               	retlw	74
   415  10AD  3432               	retlw	50
   416  10AE  3402               	retlw	2
   417  10AF  347E               	retlw	126
   418  10B0  3402               	retlw	2
   419  10B1  347E               	retlw	126
   420  10B2  3440               	retlw	64
   421  10B3  347E               	retlw	126
   422  10B4  343E               	retlw	62
   423  10B5  3440               	retlw	64
   424  10B6  343E               	retlw	62
   425  10B7  347E               	retlw	126
   426  10B8  3438               	retlw	56
   427  10B9  347E               	retlw	126
   428  10BA  3466               	retlw	102
   429  10BB  3418               	retlw	24
   430  10BC  3466               	retlw	102
   431  10BD  340E               	retlw	14
   432  10BE  3470               	retlw	112
   433  10BF  340E               	retlw	14
   434  10C0  3462               	retlw	98
   435  10C1  345A               	retlw	90
   436  10C2  3446               	retlw	70
   437  10C3  3400               	retlw	0
   438  10C4  347E               	retlw	126
   439  10C5  3442               	retlw	66
   440  10C6  3406               	retlw	6
   441  10C7  3418               	retlw	24
   442  10C8  3460               	retlw	96
   443  10C9  3442               	retlw	66
   444  10CA  347E               	retlw	126
   445  10CB  3400               	retlw	0
   446  10CC  3404               	retlw	4
   447  10CD  3402               	retlw	2
   448  10CE  3404               	retlw	4
   449  10CF  3440               	retlw	64
   450  10D0  3440               	retlw	64
   451  10D1  3440               	retlw	64
   452  10D2  3400               	retlw	0
   453  10D3  3402               	retlw	2
   454  10D4  3404               	retlw	4
   455  10D5  3474               	retlw	116
   456  10D6  3454               	retlw	84
   457  10D7  3478               	retlw	120
   458  10D8  347E               	retlw	126
   459  10D9  3448               	retlw	72
   460  10DA  3430               	retlw	48
   461  10DB  3430               	retlw	48
   462  10DC  3448               	retlw	72
   463  10DD  3448               	retlw	72
   464  10DE  3430               	retlw	48
   465  10DF  3448               	retlw	72
   466  10E0  347E               	retlw	126
   467  10E1  3438               	retlw	56
   468  10E2  3454               	retlw	84
   469  10E3  3458               	retlw	88
   470  10E4  347C               	retlw	124
   471  10E5  340A               	retlw	10
   472  10E6  3402               	retlw	2
   473  10E7  3498               	retlw	152
   474  10E8  34A4               	retlw	164
   475  10E9  347C               	retlw	124
   476  10EA  347E               	retlw	126
   477  10EB  3408               	retlw	8
   478  10EC  3470               	retlw	112
   479  10ED  3448               	retlw	72
   480  10EE  347A               	retlw	122
   481  10EF  3440               	retlw	64
   482  10F0  3488               	retlw	136
   483  10F1  34FA               	retlw	250
   484  10F2  3400               	retlw	0
   485  10F3  347E               	retlw	126
   486  10F4  3418               	retlw	24
   487  10F5  3464               	retlw	100
   488  10F6  3442               	retlw	66
   489  10F7  347E               	retlw	126
   490  10F8  3440               	retlw	64
   491  10F9  347C               	retlw	124
   492  10FA  3438               	retlw	56
   493  10FB  347C               	retlw	124
   494  10FC  347C               	retlw	124
   495  10FD  3404               	retlw	4
   496  10FE  3478               	retlw	120
   497  10FF  3438               	retlw	56
   498  1100  3444               	retlw	68
   499  1101  3438               	retlw	56
   500  1102  34FC               	retlw	252
   501  1103  3424               	retlw	36
   502  1104  3418               	retlw	24
   503  1105  3418               	retlw	24
   504  1106  3424               	retlw	36
   505  1107  34FC               	retlw	252
   506  1108  3478               	retlw	120
   507  1109  3404               	retlw	4
   508  110A  3404               	retlw	4
   509  110B  3448               	retlw	72
   510  110C  3454               	retlw	84
   511  110D  3424               	retlw	36
   512  110E  3404               	retlw	4
   513  110F  343E               	retlw	62
   514  1110  3444               	retlw	68
   515  1111  347C               	retlw	124
   516  1112  3440               	retlw	64
   517  1113  347C               	retlw	124
   518  1114  343C               	retlw	60
   519  1115  3440               	retlw	64
   520  1116  343C               	retlw	60
   521  1117  347C               	retlw	124
   522  1118  3430               	retlw	48
   523  1119  347C               	retlw	124
   524  111A  346C               	retlw	108
   525  111B  3410               	retlw	16
   526  111C  346C               	retlw	108
   527  111D  349C               	retlw	156
   528  111E  34A0               	retlw	160
   529  111F  347C               	retlw	124
   530  1120  3464               	retlw	100
   531  1121  3454               	retlw	84
   532  1122  344C               	retlw	76
   533  1123  340C               	retlw	12
   534  1124  3412               	retlw	18
   535  1125  340C               	retlw	12
   536  1126  34FF               	retlw	255
   537  1127  34FF               	retlw	255
   538  1128  34FF               	retlw	255
   539  1129  34FF               	retlw	255
   540  112A  34FF               	retlw	255
   541  112B  34FF               	retlw	255
   542  112C  34FF               	retlw	255
   543  112D  34FF               	retlw	255
   544  112E  34FF               	retlw	255
   545  112F  34FF               	retlw	255
   546  1130  34FF               	retlw	255
   547  1131  34FF               	retlw	255
   548  1132  34FF               	retlw	255
   549  1133  34FF               	retlw	255
   550  1134  34FF               	retlw	255
   551  1135  34FF               	retlw	255
   552  1136  34FF               	retlw	255
   553  1137  34FF               	retlw	255
   554  1138  34FC               	retlw	252
   555  1139  3440               	retlw	64
   556  113A  347C               	retlw	124
   557  113B  34FF               	retlw	255
   558  113C  34FF               	retlw	255
   559  113D  34FF               	retlw	255
   560  113E  34FF               	retlw	255
   561  113F  34FF               	retlw	255
   562  1140  34FF               	retlw	255
   563  1141                     __end_of_fonts:	
   564  0005                     _PORTA	set	5
   565  0006                     _PORTB	set	6
   566  0007                     _PORTC	set	7
   567  0013                     _SSPBUF	set	19
   568  00A4                     _CKP	set	164
   569  0029                     _RA1	set	41
   570  002A                     _RA2	set	42
   571  0035                     _RB5	set	53
   572  0038                     _RC0	set	56
   573  0039                     _RC1	set	57
   574  003A                     _RC2	set	58
   575  003B                     _RC3	set	59
   576  003E                     _RC6	set	62
   577  003F                     _RC7	set	63
   578  00A5                     _SSPEN	set	165
   579  00A0                     _SSPM0	set	160
   580  00A1                     _SSPM1	set	161
   581  00A2                     _SSPM2	set	162
   582  00A3                     _SSPM3	set	163
   583  00A7                     _WCOL	set	167
   584  0085                     _TRISA	set	133
   585  0086                     _TRISB	set	134
   586  0087                     _TRISC	set	135
   587  04A0                     _BF	set	1184
   588  04A6                     _CKE	set	1190
   589  0484                     _IRCF0	set	1156
   590  0485                     _IRCF1	set	1157
   591  042B                     _TRISA3	set	1067
   592  042C                     _TRISA4	set	1068
   593  043C                     _TRISC4	set	1084
   594  0185                     _ANSELA	set	389
   595  0186                     _ANSELB	set	390
   596                           
   597                           ; #config settings
   598  0000                     
   599                           	psect	cinit
   600  07CD                     start_initialization:	
   601  07CD                     __initialization:	
   602                           
   603                           ; Initialize objects allocated to BANK2
   604  07CD  1783               	bsf	3,7	;select IRP bank2
   605  07CE  3061               	movlw	low (__pdataBANK2+81)
   606  07CF  00FD               	movwf	btemp+-1
   607  07D0  300A               	movlw	high __pidataBANK2
   608  07D1  00FE               	movwf	btemp
   609  07D2  3059               	movlw	low __pidataBANK2
   610  07D3  00FF               	movwf	btemp+1
   611  07D4  3010               	movlw	low __pdataBANK2
   612  07D5  0084               	movwf	4
   613  07D6  120A  158A  20C6  120A  118A  	fcall	init_ram0
   614                           
   615                           ; Initialize objects allocated to BANK1
   616  07DB  1383               	bcf	3,7	;select IRP bank0
   617  07DC  30EE               	movlw	low (__pdataBANK1+6)
   618  07DD  00FD               	movwf	btemp+-1
   619  07DE  3008               	movlw	high __pidataBANK1
   620  07DF  00FE               	movwf	btemp
   621  07E0  3092               	movlw	low __pidataBANK1
   622  07E1  00FF               	movwf	btemp+1
   623  07E2  30E8               	movlw	low __pdataBANK1
   624  07E3  0084               	movwf	4
   625  07E4  120A  158A  20C6  120A  118A  	fcall	init_ram0
   626                           
   627                           ; Initialize objects allocated to BANK0
   628  07E9  306D               	movlw	low (__pdataBANK0+6)
   629  07EA  00FD               	movwf	btemp+-1
   630  07EB  3008               	movlw	high __pidataBANK0
   631  07EC  00FE               	movwf	btemp
   632  07ED  3098               	movlw	low __pidataBANK0
   633  07EE  00FF               	movwf	btemp+1
   634  07EF  3067               	movlw	low __pdataBANK0
   635  07F0  0084               	movwf	4
   636  07F1  120A  158A  20C6  120A  118A  	fcall	init_ram0
   637                           
   638                           ; Clear objects allocated to BANK1
   639  07F6  30A0               	movlw	low __pbssBANK1
   640  07F7  0084               	movwf	4
   641  07F8  30E8               	movlw	low (__pbssBANK1+72)
   642  07F9  120A  158A  209E   	fcall	clear_ram0
   643  07FC                     end_of_initialization:	
   644                           ;End of C runtime variable initialization code
   645                           
   646  07FC                     __end_of__initialization:	
   647  07FC  0183               	clrf	3
   648  07FD  120A  158A  2E95   	ljmp	_main	;jump to C main() function
   649                           
   650                           	psect	dataBANK0
   651  0067                     __pdataBANK0:	
   652  0067                     display_temps_to_screen@F1451:	
   653  0067                     	ds	6
   654                           
   655                           	psect	bssBANK1
   656  00A0                     __pbssBANK1:	
   657  00A0                     _thermocouple_temp:	
   658  00A0                     	ds	72
   659                           
   660                           	psect	dataBANK1
   661  00E8                     __pdataBANK1:	
   662  00E8                     display_temps_to_screen@F1454:	
   663  00E8                     	ds	6
   664                           
   665                           	psect	dataBANK2
   666  0110                     __pdataBANK2:	
   667  0110                     display_temps_to_screen@F1472:	
   668  0110                     	ds	15
   669  011F                     String_test@F1411:	
   670  011F                     	ds	13
   671  012C                     display_temps_to_screen@F1463:	
   672  012C                     	ds	13
   673  0139                     display_temps_to_screen@F1460:	
   674  0139                     	ds	12
   675  0145                     display_temps_to_screen@F1466:	
   676  0145                     	ds	11
   677  0150                     display_temps_to_screen@F1469:	
   678  0150                     	ds	11
   679  015B                     display_temps_to_screen@F1457:	
   680  015B                     	ds	6
   681                           
   682                           	psect	inittext
   683  08C2                     init_fetch0:	
   684                           ;	Called with low address in FSR and high address in W
   685                           
   686  08C2  087E               	movf	126,w
   687  08C3  008A               	movwf	10
   688  08C4  087F               	movf	127,w
   689  08C5  0082               	movwf	2
   690  08C6                     init_ram0:	
   691                           ;Called with:
   692                           ;	high address of idata address in btemp 
   693                           ;	low address of idata address in btemp+1 
   694                           ;	low address of data in FSR
   695                           ;	high address + 1 of data in btemp-1
   696                           
   697  08C6  20C2  120A  158A   	fcall	init_fetch0
   698  08C9  0080               	movwf	0
   699  08CA  0A84               	incf	4,f
   700  08CB  0804               	movf	4,w
   701  08CC  067D               	xorwf	125,w
   702  08CD  1903               	btfsc	3,2
   703  08CE  3400               	retlw	0
   704  08CF  0AFF               	incf	127,f
   705  08D0  1903               	btfsc	3,2
   706  08D1  0AFE               	incf	126,f
   707  08D2  28C6               	goto	init_ram0
   708                           
   709                           	psect	clrtext
   710  089E                     clear_ram0:	
   711                           ;	Called with FSR containing the base address, and
   712                           ;	W with the last address+1
   713                           
   714  089E  0064               	clrwdt	;clear the watchdog before getting into this loop
   715  089F                     clrloop0:	
   716  089F  0180               	clrf	0	;clear RAM location pointed to by FSR
   717  08A0  0A84               	incf	4,f	;increment pointer
   718  08A1  0604               	xorwf	4,w	;XOR with final address
   719  08A2  1903               	btfsc	3,2	;have we reached the end yet?
   720  08A3  3400               	retlw	0	;all done for this memory range, return
   721  08A4  0604               	xorwf	4,w	;XOR again to restore value
   722  08A5  289F               	goto	clrloop0	;do the next byte
   723                           
   724                           	psect	cstackBANK3
   725  0190                     __pcstackBANK3:	
   726  0190                     display_temps_to_screen@sensor_one_string:	
   727                           
   728                           ; 6 bytes @ 0x0
   729  0190                     	ds	6
   730  0196                     display_temps_to_screen@sensor_two_string:	
   731                           
   732                           ; 6 bytes @ 0x6
   733  0196                     	ds	6
   734  019C                     display_temps_to_screen@sensor_three_string:	
   735                           
   736                           ; 6 bytes @ 0xC
   737  019C                     	ds	6
   738  01A2                     display_temps_to_screen@fault_string:	
   739                           
   740                           ; 15 bytes @ 0x12
   741  01A2                     	ds	15
   742  01B1                     display_temps_to_screen@open_string:	
   743                           
   744                           ; 13 bytes @ 0x21
   745  01B1                     	ds	13
   746  01BE                     display_temps_to_screen@celsius_string:	
   747                           
   748                           ; 12 bytes @ 0x2E
   749  01BE                     	ds	12
   750  01CA                     display_temps_to_screen@shortvcc_string:	
   751                           
   752                           ; 11 bytes @ 0x3A
   753  01CA                     	ds	11
   754  01D5                     display_temps_to_screen@shortgnd_string:	
   755                           
   756                           ; 11 bytes @ 0x45
   757  01D5                     	ds	11
   758  01E0                     display_temps_to_screen@sensor_one_string_pointer:	
   759                           
   760                           ; 1 bytes @ 0x50
   761  01E0                     	ds	1
   762  01E1                     display_temps_to_screen@sensor_two_string_pointer:	
   763                           
   764                           ; 1 bytes @ 0x51
   765  01E1                     	ds	1
   766  01E2                     display_temps_to_screen@sensor_three_string_pointer:	
   767                           
   768                           ; 1 bytes @ 0x52
   769  01E2                     	ds	1
   770  01E3                     display_temps_to_screen@position:	
   771                           
   772                           ; 4 bytes @ 0x53
   773  01E3                     	ds	4
   774  01E7                     display_temps_to_screen@celsius_string_pointer:	
   775                           
   776                           ; 1 bytes @ 0x57
   777  01E7                     	ds	1
   778  01E8                     display_temps_to_screen@open_string_pointer:	
   779                           
   780                           ; 1 bytes @ 0x58
   781  01E8                     	ds	1
   782  01E9                     display_temps_to_screen@shortvcc_string_pointer:	
   783                           
   784                           ; 1 bytes @ 0x59
   785  01E9                     	ds	1
   786  01EA                     display_temps_to_screen@shortgnd_string_pointer:	
   787                           
   788                           ; 1 bytes @ 0x5A
   789  01EA                     	ds	1
   790  01EB                     display_temps_to_screen@fault_string_pointer:	
   791                           
   792                           ; 1 bytes @ 0x5B
   793  01EB                     	ds	1
   794  01EC                     display_temps_to_screen@working_register:	
   795                           
   796                           ; 4 bytes @ 0x5C
   797  01EC                     	ds	4
   798                           
   799                           	psect	cstackCOMMON
   800  0070                     __pcstackCOMMON:	
   801  0070                     ?_Init:	
   802  0070                     ??_Init:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_spi_init:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ??_spi_init:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_data_out:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ??_data_out:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_comm_out:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ??_comm_out:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_blank_image:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_LCDWriteCharacter:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_String_test:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_SPI_TRANSFER:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ??_SPI_TRANSFER:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_SPI_DATA_HANDLING:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_chip_select:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_get_temp_from_right_tcs:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_display_temps_to_screen:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_move_temp_to_send:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?___bmul:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_main:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?___wmul:	
   860                           ; 2 bytes @ 0x0
   861                           
   862  0070                     ?___ftpack:	
   863                           ; 2 bytes @ 0x0
   864                           
   865  0070                     ___bmul@multiplicand:	
   866                           ; 3 bytes @ 0x0
   867                           
   868  0070                     chip_select@chip:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ___wmul@multiplier:	
   872                           ; 2 bytes @ 0x0
   873                           
   874  0070                     ___ftpack@arg:	
   875                           ; 2 bytes @ 0x0
   876                           
   877                           
   878                           ; 3 bytes @ 0x0
   879  0070                     	ds	1
   880  0071                     ??___bmul:	
   881  0071                     SPI_TRANSFER@byte_recieved:	
   882                           ; 1 bytes @ 0x1
   883                           
   884                           
   885                           ; 1 bytes @ 0x1
   886  0071                     	ds	1
   887  0072                     ??_chip_select:	
   888  0072                     data_out@i:	
   889                           ; 1 bytes @ 0x2
   890                           
   891  0072                     comm_out@j:	
   892                           ; 1 bytes @ 0x2
   893                           
   894  0072                     SPI_TRANSFER@byte_to_send:	
   895                           ; 1 bytes @ 0x2
   896                           
   897  0072                     ___bmul@product:	
   898                           ; 1 bytes @ 0x2
   899                           
   900  0072                     ___wmul@multiplicand:	
   901                           ; 1 bytes @ 0x2
   902                           
   903                           
   904                           ; 2 bytes @ 0x2
   905  0072                     	ds	1
   906  0073                     ??_blank_image:	
   907  0073                     ?_location:	
   908                           ; 1 bytes @ 0x3
   909                           
   910  0073                     ??_SPI_DATA_HANDLING:	
   911                           ; 1 bytes @ 0x3
   912                           
   913  0073                     ___bmul@multiplier:	
   914                           ; 1 bytes @ 0x3
   915                           
   916  0073                     ___ftpack@exp:	
   917                           ; 1 bytes @ 0x3
   918                           
   919  0073                     location@position:	
   920                           ; 1 bytes @ 0x3
   921                           
   922                           
   923                           ; 2 bytes @ 0x3
   924  0073                     	ds	1
   925  0074                     ??_get_temp_from_right_tcs:	
   926  0074                     ??_move_temp_to_send:	
   927                           ; 1 bytes @ 0x4
   928                           
   929  0074                     ??___wmul:	
   930                           ; 1 bytes @ 0x4
   931                           
   932  0074                     blank_image@page:	
   933                           ; 1 bytes @ 0x4
   934                           
   935  0074                     ___ftpack@sign:	
   936                           ; 1 bytes @ 0x4
   937                           
   938  0074                     ___wmul@product:	
   939                           ; 1 bytes @ 0x4
   940                           
   941                           
   942                           ; 2 bytes @ 0x4
   943  0074                     	ds	1
   944  0075                     ??___ftpack:	
   945  0075                     ??_location:	
   946                           ; 1 bytes @ 0x5
   947                           
   948  0075                     SPI_DATA_HANDLING@byte_to_send:	
   949                           ; 1 bytes @ 0x5
   950                           
   951  0075                     blank_image@i:	
   952                           ; 1 bytes @ 0x5
   953                           
   954                           
   955                           ; 2 bytes @ 0x5
   956  0075                     	ds	1
   957  0076                     ??_LCDWriteCharacter:	
   958  0076                     SPI_DATA_HANDLING@byte_received:	
   959                           ; 1 bytes @ 0x6
   960                           
   961  0076                     move_temp_to_send@working_register:	
   962                           ; 1 bytes @ 0x6
   963                           
   964                           
   965                           ; 2 bytes @ 0x6
   966  0076                     	ds	1
   967  0077                     SPI_DATA_HANDLING@offset:	
   968  0077                     blank_image@j:	
   969                           ; 1 bytes @ 0x7
   970                           
   971                           
   972                           ; 2 bytes @ 0x7
   973  0077                     	ds	1
   974  0078                     ??_String_test:	
   975  0078                     ?_char_to_decimal_print:	
   976                           ; 1 bytes @ 0x8
   977                           
   978  0078                     ?___altoft:	
   979                           ; 1 bytes @ 0x8
   980                           
   981  0078                     ?___awtoft:	
   982                           ; 3 bytes @ 0x8
   983                           
   984  0078                     SPI_DATA_HANDLING@address:	
   985                           ; 3 bytes @ 0x8
   986                           
   987  0078                     move_temp_to_send@byte_to_send:	
   988                           ; 1 bytes @ 0x8
   989                           
   990  0078                     char_to_decimal_print@value:	
   991                           ; 1 bytes @ 0x8
   992                           
   993  0078                     ___awtoft@c:	
   994                           ; 2 bytes @ 0x8
   995                           
   996  0078                     ___altoft@c:	
   997                           ; 2 bytes @ 0x8
   998                           
   999                           
  1000                           ; 4 bytes @ 0x8
  1001  0078                     	ds	1
  1002  0079                     SPI_DATA_HANDLING@offset_pointer:	
  1003  0079                     move_temp_to_send@x:	
  1004                           ; 2 bytes @ 0x9
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x9
  1008  0079                     	ds	1
  1009  007A                     ??_char_to_decimal_print:	
  1010                           
  1011                           ; 1 bytes @ 0xA
  1012  007A                     	ds	1
  1013  007B                     ??___awtoft:	
  1014  007B                     SPI_DATA_HANDLING@data_pointer:	
  1015                           ; 1 bytes @ 0xB
  1016                           
  1017  007B                     char_to_decimal_print@x:	
  1018                           ; 1 bytes @ 0xB
  1019                           
  1020  007B                     move_temp_to_send@reg:	
  1021                           ; 1 bytes @ 0xB
  1022                           
  1023                           
  1024                           ; 1 bytes @ 0xB
  1025  007B                     	ds	1
  1026  007C                     ??___altoft:	
  1027  007C                     move_temp_to_send@data_pointer:	
  1028                           ; 1 bytes @ 0xC
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0xC
  1032  007C                     	ds	1
  1033  007D                     ___awtoft@sign:	
  1034                           
  1035                           ; 1 bytes @ 0xD
  1036  007D                     	ds	1
  1037                           
  1038                           	psect	cstackBANK0
  1039  0020                     __pcstackBANK0:	
  1040  0020                     LCDWriteCharacter@character:	
  1041  0020                     get_temp_from_right_tcs@byte_received:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0020                     ___altoft@exp:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0020                     location@j:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050                           
  1051                           ; 2 bytes @ 0x0
  1052  0020                     	ds	1
  1053  0021                     ___altoft@sign:	
  1054  0021                     LCDWriteCharacter@before_swap:	
  1055                           ; 1 bytes @ 0x1
  1056                           
  1057  0021                     get_temp_from_right_tcs@position:	
  1058                           ; 2 bytes @ 0x1
  1059                           
  1060                           
  1061                           ; 4 bytes @ 0x1
  1062  0021                     	ds	1
  1063  0022                     ?___ftmul:	
  1064  0022                     location@lownib:	
  1065                           ; 3 bytes @ 0x2
  1066                           
  1067  0022                     ___ftmul@f1:	
  1068                           ; 1 bytes @ 0x2
  1069                           
  1070                           
  1071                           ; 3 bytes @ 0x2
  1072  0022                     	ds	1
  1073  0023                     location@upnib:	
  1074  0023                     LCDWriteCharacter@i:	
  1075                           ; 1 bytes @ 0x3
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x3
  1079  0023                     	ds	1
  1080  0024                     location@page:	
  1081                           
  1082                           ; 1 bytes @ 0x4
  1083  0024                     	ds	1
  1084  0025                     get_temp_from_right_tcs@byte1:	
  1085  0025                     location@q:	
  1086                           ; 1 bytes @ 0x5
  1087                           
  1088  0025                     LCDWriteCharacter@j:	
  1089                           ; 2 bytes @ 0x5
  1090                           
  1091  0025                     ___ftmul@f2:	
  1092                           ; 2 bytes @ 0x5
  1093                           
  1094                           
  1095                           ; 3 bytes @ 0x5
  1096  0025                     	ds	1
  1097  0026                     get_temp_from_right_tcs@byte2:	
  1098                           
  1099                           ; 1 bytes @ 0x6
  1100  0026                     	ds	1
  1101  0027                     get_temp_from_right_tcs@byte3:	
  1102  0027                     location@k:	
  1103                           ; 1 bytes @ 0x7
  1104                           
  1105  0027                     LCDWriteCharacter@base:	
  1106                           ; 2 bytes @ 0x7
  1107                           
  1108                           
  1109                           ; 2 bytes @ 0x7
  1110  0027                     	ds	1
  1111  0028                     ??___ftmul:	
  1112  0028                     get_temp_from_right_tcs@byte4:	
  1113                           ; 1 bytes @ 0x8
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x8
  1117  0028                     	ds	1
  1118  0029                     get_temp_from_right_tcs@byte_to_send:	
  1119  0029                     location@i:	
  1120                           ; 1 bytes @ 0x9
  1121                           
  1122  0029                     LCDWriteCharacter@after_swap:	
  1123                           ; 2 bytes @ 0x9
  1124                           
  1125                           
  1126                           ; 2 bytes @ 0x9
  1127  0029                     	ds	1
  1128  002A                     get_temp_from_right_tcs@x:	
  1129                           
  1130                           ; 2 bytes @ 0xA
  1131  002A                     	ds	1
  1132  002B                     String_test@test_string:	
  1133                           
  1134                           ; 13 bytes @ 0xB
  1135  002B                     	ds	1
  1136  002C                     ___ftmul@exp:	
  1137                           
  1138                           ; 1 bytes @ 0xC
  1139  002C                     	ds	1
  1140  002D                     ___ftmul@f3_as_product:	
  1141                           
  1142                           ; 3 bytes @ 0xD
  1143  002D                     	ds	3
  1144  0030                     ___ftmul@cntr:	
  1145                           
  1146                           ; 1 bytes @ 0x10
  1147  0030                     	ds	1
  1148  0031                     ___ftmul@sign:	
  1149                           
  1150                           ; 1 bytes @ 0x11
  1151  0031                     	ds	1
  1152  0032                     ?___fttol:	
  1153  0032                     ___fttol@f1:	
  1154                           ; 4 bytes @ 0x12
  1155                           
  1156                           
  1157                           ; 3 bytes @ 0x12
  1158  0032                     	ds	4
  1159  0036                     ??___fttol:	
  1160                           
  1161                           ; 1 bytes @ 0x16
  1162  0036                     	ds	2
  1163  0038                     String_test@test_pointer:	
  1164                           
  1165                           ; 1 bytes @ 0x18
  1166  0038                     	ds	2
  1167  003A                     ___fttol@sign1:	
  1168                           
  1169                           ; 1 bytes @ 0x1A
  1170  003A                     	ds	1
  1171  003B                     ___fttol@lval:	
  1172                           
  1173                           ; 4 bytes @ 0x1B
  1174  003B                     	ds	4
  1175  003F                     ___fttol@exp1:	
  1176                           
  1177                           ; 1 bytes @ 0x1F
  1178  003F                     	ds	1
  1179  0040                     ??_display_temps_to_screen:	
  1180                           
  1181                           ; 1 bytes @ 0x20
  1182  0040                     	ds	4
  1183  0044                     ??_main:	
  1184                           
  1185                           ; 1 bytes @ 0x24
  1186  0044                     	ds	2
  1187  0046                     main@x:	
  1188                           
  1189                           ; 2 bytes @ 0x26
  1190  0046                     	ds	2
  1191  0048                     main@spi_data:	
  1192                           
  1193                           ; 22 bytes @ 0x28
  1194  0048                     	ds	22
  1195  005E                     main@position:	
  1196                           
  1197                           ; 4 bytes @ 0x3E
  1198  005E                     	ds	4
  1199  0062                     main@data_pointer:	
  1200                           
  1201                           ; 1 bytes @ 0x42
  1202  0062                     	ds	1
  1203  0063                     main@count:	
  1204                           
  1205                           ; 4 bytes @ 0x43
  1206  0063                     	ds	4
  1207                           
  1208                           	psect	maintext
  1209  0E95                     __pmaintext:	
  1210 ;;
  1211 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1212 ;;
  1213 ;; *************** function _main *****************
  1214 ;; Defined at:
  1215 ;;		line 973 in file "Main V4.1.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  spi_data       22   40[BANK0 ] unsigned char [22]
  1220 ;;  display_matr   10    0        unsigned char [10]
  1221 ;;  position        4   62[BANK0 ] int [2]
  1222 ;;  count           4   67[BANK0 ] long 
  1223 ;;  x               2   38[BANK0 ] int 
  1224 ;;  data_pointer    1   66[BANK0 ] PTR unsigned char 
  1225 ;;		 -> main@spi_data(22), 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  2  318[None  ] int 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : B00/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         0       0       0       0       0
  1236 ;;      Locals:         0      33       0       0       0
  1237 ;;      Temps:          0       2       0       0       0
  1238 ;;      Totals:         0      35       0       0       0
  1239 ;;Total ram usage:       35 bytes
  1240 ;; Hardware stack levels required when called:    4
  1241 ;; This function calls:
  1242 ;;		_Init
  1243 ;;		_SPI_DATA_HANDLING
  1244 ;;		_String_test
  1245 ;;		_blank_image
  1246 ;;		_chip_select
  1247 ;;		_comm_out
  1248 ;;		_display_temps_to_screen
  1249 ;;		_get_temp_from_right_tcs
  1250 ;;		_location
  1251 ;;		_move_temp_to_send
  1252 ;;		_spi_init
  1253 ;; This function is called by:
  1254 ;;		Startup code after reset
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _main
  1260  0E95                     _main:	
  1261                           
  1262                           ;Main V4.1.c: 974: Init();
  1263                           
  1264                           ;incstack = 0
  1265                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1266  0E95  120A  158A  213D  120A  158A  	fcall	_Init
  1267                           
  1268                           ;Main V4.1.c: 975: spi_init();
  1269  0E9A  120A  118A  2005  120A  158A  	fcall	_spi_init
  1270                           
  1271                           ;Main V4.1.c: 977: char spi_data[22];
  1272                           ;Main V4.1.c: 978: spi_data[0] = 1;
  1273  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0EA1  01C8               	clrf	main@spi_data
  1276  0EA2  0AC8               	incf	main@spi_data,f
  1277                           
  1278                           ;Main V4.1.c: 979: char *data_pointer;
  1279                           ;Main V4.1.c: 980: data_pointer = &spi_data[0];
  1280  0EA3  3048               	movlw	(low (main@spi_data| 0))& (0+255)
  1281  0EA4  00C4               	movwf	??_main
  1282  0EA5  0844               	movf	??_main,w
  1283  0EA6  00E2               	movwf	main@data_pointer
  1284                           
  1285                           ;Main V4.1.c: 981: spi_data[1] = 0x81;
  1286  0EA7  3081               	movlw	129
  1287  0EA8  00C4               	movwf	??_main
  1288  0EA9  0844               	movf	??_main,w
  1289  0EAA  00C9               	movwf	main@spi_data+1
  1290                           
  1291                           ;Main V4.1.c: 982: spi_data[2] = 0x01;
  1292  0EAB  01CA               	clrf	main@spi_data+2
  1293  0EAC  0ACA               	incf	main@spi_data+2,f
  1294                           
  1295                           ;Main V4.1.c: 983: spi_data[3] = 0x13;
  1296  0EAD  3013               	movlw	19
  1297  0EAE  00C4               	movwf	??_main
  1298  0EAF  0844               	movf	??_main,w
  1299  0EB0  00CB               	movwf	main@spi_data+3
  1300                           
  1301                           ;Main V4.1.c: 984: spi_data[4] = 0x48;
  1302  0EB1  3048               	movlw	72
  1303  0EB2  00C4               	movwf	??_main
  1304  0EB3  0844               	movf	??_main,w
  1305  0EB4  00CC               	movwf	main@spi_data+4
  1306                           
  1307                           ;Main V4.1.c: 985: spi_data[5] = 0xaa;
  1308  0EB5  30AA               	movlw	170
  1309  0EB6  00C4               	movwf	??_main
  1310  0EB7  0844               	movf	??_main,w
  1311  0EB8  00CD               	movwf	main@spi_data+5
  1312                           
  1313                           ;Main V4.1.c: 986: spi_data[6] = 0x48;
  1314  0EB9  3048               	movlw	72
  1315  0EBA  00C4               	movwf	??_main
  1316  0EBB  0844               	movf	??_main,w
  1317  0EBC  00CE               	movwf	main@spi_data+6
  1318                           
  1319                           ;Main V4.1.c: 987: spi_data[7] = 0x48;
  1320  0EBD  3048               	movlw	72
  1321  0EBE  00C4               	movwf	??_main
  1322  0EBF  0844               	movf	??_main,w
  1323  0EC0  00CF               	movwf	main@spi_data+7
  1324                           
  1325                           ;Main V4.1.c: 988: spi_data[8] = 0x48;
  1326  0EC1  3048               	movlw	72
  1327  0EC2  00C4               	movwf	??_main
  1328  0EC3  0844               	movf	??_main,w
  1329  0EC4  00D0               	movwf	main@spi_data+8
  1330                           
  1331                           ;Main V4.1.c: 989: spi_data[9] = 0x48;
  1332  0EC5  3048               	movlw	72
  1333  0EC6  00C4               	movwf	??_main
  1334  0EC7  0844               	movf	??_main,w
  1335  0EC8  00D1               	movwf	main@spi_data+9
  1336                           
  1337                           ;Main V4.1.c: 990: spi_data[10] = 0xaa;
  1338  0EC9  30AA               	movlw	170
  1339  0ECA  00C4               	movwf	??_main
  1340  0ECB  0844               	movf	??_main,w
  1341  0ECC  00D2               	movwf	main@spi_data+10
  1342                           
  1343                           ;Main V4.1.c: 994: int position[2];
  1344                           ;Main V4.1.c: 995: position[0] = 00;
  1345  0ECD  01DE               	clrf	main@position
  1346  0ECE  01DF               	clrf	main@position+1
  1347                           
  1348                           ;Main V4.1.c: 996: position[1] = 24;
  1349  0ECF  3018               	movlw	24
  1350  0ED0  00E0               	movwf	main@position+2
  1351  0ED1  3000               	movlw	0
  1352  0ED2  00E1               	movwf	main@position+3
  1353                           
  1354                           ;Main V4.1.c: 997: char display_matrix[10];
  1355                           ;Main V4.1.c: 998: int x;
  1356                           ;Main V4.1.c: 999: long int count = 0;
  1357  0ED3  3000               	movlw	0
  1358  0ED4  00E6               	movwf	main@count+3
  1359  0ED5  3000               	movlw	0
  1360  0ED6  00E5               	movwf	main@count+2
  1361  0ED7  3000               	movlw	0
  1362  0ED8  00E4               	movwf	main@count+1
  1363  0ED9  3000               	movlw	0
  1364  0EDA  00E3               	movwf	main@count
  1365                           
  1366                           ;Main V4.1.c: 1001: RC1 = 0;
  1367  0EDB  1087               	bcf	7,1	;volatile
  1368                           
  1369                           ;Main V4.1.c: 1002: _delay(100000);
  1370  0EDC  3082               	movlw	130
  1371  0EDD  00C5               	movwf	??_main+1
  1372  0EDE  30DD               	movlw	221
  1373  0EDF  00C4               	movwf	??_main
  1374  0EE0                     u2717:	
  1375  0EE0  0BC4               	decfsz	??_main,f
  1376  0EE1  2EE0               	goto	u2717
  1377  0EE2  0BC5               	decfsz	??_main+1,f
  1378  0EE3  2EE0               	goto	u2717
  1379  0EE4  2EE5               	nop2
  1380                           
  1381                           ;Main V4.1.c: 1003: RC1 = 1;
  1382  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0EE7  1487               	bsf	7,1	;volatile
  1385                           
  1386                           ;Main V4.1.c: 1004: _delay(100000);
  1387  0EE8  3082               	movlw	130
  1388  0EE9  00C5               	movwf	??_main+1
  1389  0EEA  30DD               	movlw	221
  1390  0EEB  00C4               	movwf	??_main
  1391  0EEC                     u2727:	
  1392  0EEC  0BC4               	decfsz	??_main,f
  1393  0EED  2EEC               	goto	u2727
  1394  0EEE  0BC5               	decfsz	??_main+1,f
  1395  0EEF  2EEC               	goto	u2727
  1396  0EF0  2EF1               	nop2
  1397                           
  1398                           ;Main V4.1.c: 1006: comm_out (0xE3);
  1399  0EF1  30E3               	movlw	227
  1400  0EF2  120A  158A  20E7  120A  158A  	fcall	_comm_out
  1401                           
  1402                           ;Main V4.1.c: 1007: comm_out (0xA0);
  1403  0EF7  30A0               	movlw	160
  1404  0EF8  120A  158A  20E7  120A  158A  	fcall	_comm_out
  1405                           
  1406                           ;Main V4.1.c: 1008: comm_out (0xAE);
  1407  0EFD  30AE               	movlw	174
  1408  0EFE  120A  158A  20E7  120A  158A  	fcall	_comm_out
  1409                           
  1410                           ;Main V4.1.c: 1009: comm_out (0xC0);
  1411  0F03  30C0               	movlw	192
  1412  0F04  120A  158A  20E7  120A  158A  	fcall	_comm_out
  1413                           
  1414                           ;Main V4.1.c: 1010: comm_out (0xA2);
  1415  0F09  30A2               	movlw	162
  1416  0F0A  120A  158A  20E7  120A  158A  	fcall	_comm_out
  1417                           
  1418                           ;Main V4.1.c: 1011: comm_out (0x2F);
  1419  0F0F  302F               	movlw	47
  1420  0F10  120A  158A  20E7  120A  158A  	fcall	_comm_out
  1421                           
  1422                           ;Main V4.1.c: 1012: comm_out (0x21);
  1423  0F15  3021               	movlw	33
  1424  0F16  120A  158A  20E7  120A  158A  	fcall	_comm_out
  1425                           
  1426                           ;Main V4.1.c: 1013: comm_out (0x81);
  1427  0F1B  3081               	movlw	129
  1428  0F1C  120A  158A  20E7  120A  158A  	fcall	_comm_out
  1429                           
  1430                           ;Main V4.1.c: 1014: comm_out (0x2F);
  1431  0F21  302F               	movlw	47
  1432  0F22  120A  158A  20E7  120A  158A  	fcall	_comm_out
  1433                           
  1434                           ;Main V4.1.c: 1015: comm_out (0xA6);
  1435  0F27  30A6               	movlw	166
  1436  0F28  120A  158A  20E7  120A  158A  	fcall	_comm_out
  1437                           
  1438                           ;Main V4.1.c: 1018: _delay(100000);
  1439  0F2D  3082               	movlw	130
  1440  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0F30  00C5               	movwf	??_main+1
  1443  0F31  30DD               	movlw	221
  1444  0F32  00C4               	movwf	??_main
  1445  0F33                     u2737:	
  1446  0F33  0BC4               	decfsz	??_main,f
  1447  0F34  2F33               	goto	u2737
  1448  0F35  0BC5               	decfsz	??_main+1,f
  1449  0F36  2F33               	goto	u2737
  1450  0F37  2F38               	nop2
  1451                           
  1452                           ;Main V4.1.c: 1019: _delay(100000);
  1453  0F38  3082               	movlw	130
  1454  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0F3B  00C5               	movwf	??_main+1
  1457  0F3C  30DD               	movlw	221
  1458  0F3D  00C4               	movwf	??_main
  1459  0F3E                     u2747:	
  1460  0F3E  0BC4               	decfsz	??_main,f
  1461  0F3F  2F3E               	goto	u2747
  1462  0F40  0BC5               	decfsz	??_main+1,f
  1463  0F41  2F3E               	goto	u2747
  1464  0F42  2F43               	nop2
  1465                           
  1466                           ;Main V4.1.c: 1020: count = 0;
  1467  0F43  3000               	movlw	0
  1468  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0F46  00E6               	movwf	main@count+3
  1471  0F47  3000               	movlw	0
  1472  0F48  00E5               	movwf	main@count+2
  1473  0F49  3000               	movlw	0
  1474  0F4A  00E4               	movwf	main@count+1
  1475  0F4B  3000               	movlw	0
  1476  0F4C  00E3               	movwf	main@count
  1477                           
  1478                           ;Main V4.1.c: 1022: RB5 = 1;
  1479                           
  1480                           ;Main V4.1.c: 1021: while(1){
  1481  0F4D  1686               	bsf	6,5	;volatile
  1482                           
  1483                           ;Main V4.1.c: 1023: RC7 = 1;
  1484  0F4E  1787               	bsf	7,7	;volatile
  1485                           
  1486                           ;Main V4.1.c: 1024: _delay(100000);
  1487  0F4F  3082               	movlw	130
  1488  0F50  00C5               	movwf	??_main+1
  1489  0F51  30DD               	movlw	221
  1490  0F52  00C4               	movwf	??_main
  1491  0F53                     u2757:	
  1492  0F53  0BC4               	decfsz	??_main,f
  1493  0F54  2F53               	goto	u2757
  1494  0F55  0BC5               	decfsz	??_main+1,f
  1495  0F56  2F53               	goto	u2757
  1496  0F57  2F58               	nop2
  1497                           
  1498                           ;Main V4.1.c: 1025: RB5 = 0;
  1499  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0F5A  1286               	bcf	6,5	;volatile
  1502                           
  1503                           ;Main V4.1.c: 1026: _delay(100000);
  1504  0F5B  3082               	movlw	130
  1505  0F5C  00C5               	movwf	??_main+1
  1506  0F5D  30DD               	movlw	221
  1507  0F5E  00C4               	movwf	??_main
  1508  0F5F                     u2767:	
  1509  0F5F  0BC4               	decfsz	??_main,f
  1510  0F60  2F5F               	goto	u2767
  1511  0F61  0BC5               	decfsz	??_main+1,f
  1512  0F62  2F5F               	goto	u2767
  1513  0F63  2F64               	nop2
  1514                           
  1515                           ;Main V4.1.c: 1029: blank_image();
  1516  0F64  120A  158A  22AA  120A  158A  	fcall	_blank_image
  1517                           
  1518                           ;Main V4.1.c: 1036: location(position);
  1519  0F69  305E               	movlw	(low (main@position| 0))& (0+255)
  1520  0F6A  00F3               	movwf	location@position
  1521  0F6B  3000               	movlw	0
  1522  0F6C  00F4               	movwf	location@position+1
  1523  0F6D  120A  158A  251D  120A  158A  	fcall	_location
  1524                           
  1525                           ;Main V4.1.c: 1038: x = 48;
  1526  0F72  3030               	movlw	48
  1527  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  1529  0F75  00C6               	movwf	main@x
  1530  0F76  3000               	movlw	0
  1531  0F77  00C7               	movwf	main@x+1
  1532                           
  1533                           ;Main V4.1.c: 1043: String_test();
  1534  0F78  120A  158A  219A  120A  158A  	fcall	_String_test
  1535  0F7D                     l2889:	
  1536                           ;Main V4.1.c: 1045: while (1){
  1537                           
  1538                           
  1539                           ;Main V4.1.c: 1047: RB5 = 1;
  1540  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0F7F  1686               	bsf	6,5	;volatile
  1543                           
  1544                           ;Main V4.1.c: 1076: if (count < 20){
  1545  0F80  1BE6               	btfsc	main@count+3,7
  1546  0F81  2F91               	goto	l2893
  1547  0F82  0866               	movf	main@count+3,w
  1548  0F83  1D03               	btfss	3,2
  1549  0F84  2FB6               	goto	l321
  1550  0F85  0865               	movf	main@count+2,w
  1551  0F86  1D03               	btfss	3,2
  1552  0F87  2FB6               	goto	l321
  1553  0F88  0864               	movf	main@count+1,w
  1554  0F89  1D03               	btfss	3,2
  1555  0F8A  2FB6               	goto	l321
  1556  0F8B  3014               	movlw	20
  1557  0F8C  0263               	subwf	main@count,w
  1558  0F8D  1D03               	skipz
  1559  0F8E  2F8F               	goto	u2693
  1560  0F8F                     u2693:	
  1561  0F8F  1803               	btfsc	3,0
  1562  0F90  2FB6               	goto	l321
  1563  0F91                     l2893:	
  1564                           
  1565                           ;Main V4.1.c: 1077: chip_select(1);
  1566  0F91  3001               	movlw	1
  1567  0F92  00F0               	movwf	chip_select@chip
  1568  0F93  3000               	movlw	0
  1569  0F94  00F1               	movwf	chip_select@chip+1
  1570  0F95  120A  158A  20A6  120A  158A  	fcall	_chip_select
  1571                           
  1572                           ;Main V4.1.c: 1078: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1573  0F9A  300D               	movlw	13
  1574  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0F9D  00C4               	movwf	??_main
  1577  0F9E                     u2777:	
  1578  0F9E  0BC4               	decfsz	??_main,f
  1579  0F9F  2F9E               	goto	u2777
  1580                           
  1581                           ;Main V4.1.c: 1080: SPI_DATA_HANDLING(data_pointer);
  1582  0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0FA2  0862               	movf	main@data_pointer,w
  1585  0FA3  120A  158A  220B  120A  158A  	fcall	_SPI_DATA_HANDLING
  1586                           
  1587                           ;Main V4.1.c: 1081: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1588  0FA8  300D               	movlw	13
  1589  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0FAB  00C4               	movwf	??_main
  1592  0FAC                     u2787:	
  1593  0FAC  0BC4               	decfsz	??_main,f
  1594  0FAD  2FAC               	goto	u2787
  1595                           
  1596                           ;Main V4.1.c: 1082: chip_select(0);
  1597  0FAE  3000               	movlw	0
  1598  0FAF  00F0               	movwf	chip_select@chip
  1599  0FB0  00F1               	movwf	chip_select@chip+1
  1600  0FB1  120A  158A  20A6  120A  158A  	fcall	_chip_select
  1601  0FB6                     l321:	
  1602                           
  1603                           ;Main V4.1.c: 1084: }
  1604                           ;Main V4.1.c: 1085: location(position);
  1605  0FB6  305E               	movlw	(low (main@position| 0))& (0+255)
  1606  0FB7  00F3               	movwf	location@position
  1607  0FB8  3000               	movlw	0
  1608  0FB9  00F4               	movwf	location@position+1
  1609  0FBA  120A  158A  251D  120A  158A  	fcall	_location
  1610                           
  1611                           ;Main V4.1.c: 1086: if (count >= 100){
  1612  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0FC1  1BE6               	btfsc	main@count+3,7
  1615  0FC2  2FE9               	goto	l2911
  1616  0FC3  0866               	movf	main@count+3,w
  1617  0FC4  1D03               	btfss	3,2
  1618  0FC5  2FD2               	goto	l2905
  1619  0FC6  0865               	movf	main@count+2,w
  1620  0FC7  1D03               	btfss	3,2
  1621  0FC8  2FD2               	goto	l2905
  1622  0FC9  0864               	movf	main@count+1,w
  1623  0FCA  1D03               	btfss	3,2
  1624  0FCB  2FD2               	goto	l2905
  1625  0FCC  3064               	movlw	100
  1626  0FCD  0263               	subwf	main@count,w
  1627  0FCE  1D03               	skipz
  1628  0FCF  2FD0               	goto	u2703
  1629  0FD0                     u2703:	
  1630  0FD0  1C03               	btfss	3,0
  1631  0FD1  2FE9               	goto	l2911
  1632  0FD2                     l2905:	
  1633                           
  1634                           ;Main V4.1.c: 1087: get_temp_from_right_tcs();
  1635  0FD2  120A  118A  207F  120A  158A  	fcall	_get_temp_from_right_tcs
  1636                           
  1637                           ;Main V4.1.c: 1088: RB5 = 0;
  1638  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0FD9  1286               	bcf	6,5	;volatile
  1641                           
  1642                           ;Main V4.1.c: 1090: display_temps_to_screen();
  1643  0FDA  120A  118A  224E  120A  158A  	fcall	_display_temps_to_screen
  1644                           
  1645                           ;Main V4.1.c: 1091: count = 0;
  1646  0FDF  3000               	movlw	0
  1647  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  1648  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  1649  0FE2  00E6               	movwf	main@count+3
  1650  0FE3  3000               	movlw	0
  1651  0FE4  00E5               	movwf	main@count+2
  1652  0FE5  3000               	movlw	0
  1653  0FE6  00E4               	movwf	main@count+1
  1654  0FE7  3000               	movlw	0
  1655  0FE8  00E3               	movwf	main@count
  1656  0FE9                     l2911:	
  1657                           
  1658                           ;Main V4.1.c: 1092: }
  1659                           ;Main V4.1.c: 1093: move_temp_to_send (data_pointer);
  1660  0FE9  0862               	movf	main@data_pointer,w
  1661  0FEA  120A  158A  248A  120A  158A  	fcall	_move_temp_to_send
  1662                           
  1663                           ;Main V4.1.c: 1096: count++;
  1664  0FEF  3001               	movlw	1
  1665  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0FF2  07E3               	addwf	main@count,f
  1668  0FF3  3000               	movlw	0
  1669  0FF4  1803               	skipnc
  1670  0FF5  3001               	movlw	1
  1671  0FF6  07E4               	addwf	main@count+1,f
  1672  0FF7  3000               	movlw	0
  1673  0FF8  1803               	skipnc
  1674  0FF9  3001               	movlw	1
  1675  0FFA  07E5               	addwf	main@count+2,f
  1676  0FFB  3000               	movlw	0
  1677  0FFC  1803               	skipnc
  1678  0FFD  3001               	movlw	1
  1679  0FFE  07E6               	addwf	main@count+3,f
  1680  0FFF  2F7D               	goto	l2889
  1681  1000                     __end_of_main:	
  1682                           
  1683                           	psect	text1
  1684  0005                     __ptext1:	
  1685 ;; *************** function _spi_init *****************
  1686 ;; Defined at:
  1687 ;;		line 64 in file "Main V4.1.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		None
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _spi_init
  1716  0005                     _spi_init:	
  1717                           
  1718                           ;Main V4.1.c: 65: SSPEN = 1;
  1719                           
  1720                           ;incstack = 0
  1721                           ; Regs used in _spi_init: []
  1722  0005  1283               	bcf	3,5	;RP0=0, select bank0
  1723  0006  1303               	bcf	3,6	;RP1=0, select bank0
  1724  0007  1694               	bsf	20,5	;volatile
  1725                           
  1726                           ;Main V4.1.c: 66: SSPM0 = 0;
  1727  0008  1014               	bcf	20,0	;volatile
  1728                           
  1729                           ;Main V4.1.c: 67: SSPM1 = 1;
  1730  0009  1494               	bsf	20,1	;volatile
  1731                           
  1732                           ;Main V4.1.c: 68: SSPM2 = 0;
  1733  000A  1114               	bcf	20,2	;volatile
  1734                           
  1735                           ;Main V4.1.c: 69: SSPM3 = 0;
  1736  000B  1194               	bcf	20,3	;volatile
  1737                           
  1738                           ;Main V4.1.c: 70: CKE = 1;
  1739  000C  1683               	bsf	3,5	;RP0=1, select bank1
  1740  000D  1303               	bcf	3,6	;RP1=0, select bank1
  1741  000E  1714               	bsf	20,6	;volatile
  1742                           
  1743                           ;Main V4.1.c: 71: CKP = 0;
  1744  000F  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0010  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0011  1214               	bcf	20,4	;volatile
  1747  0012  0008               	return
  1748  0013                     __end_of_spi_init:	
  1749                           
  1750                           	psect	text2
  1751  0C8A                     __ptext2:	
  1752 ;; *************** function _move_temp_to_send *****************
  1753 ;; Defined at:
  1754 ;;		line 944 in file "Main V4.1.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  data_pointer    1    wreg     PTR unsigned char 
  1757 ;;		 -> main@spi_data(22), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  data_pointer    1   12[COMMON] PTR unsigned char 
  1760 ;;		 -> main@spi_data(22), 
  1761 ;;  x               2    9[COMMON] int 
  1762 ;;  working_regi    2    6[COMMON] int 
  1763 ;;  reg             1   11[COMMON] PTR unsigned char 
  1764 ;;		 -> main@spi_data(22), NULL(0), 
  1765 ;;  byte_to_send    1    8[COMMON] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1775 ;;      Params:         0       0       0       0       0
  1776 ;;      Locals:         7       0       0       0       0
  1777 ;;      Temps:          2       0       0       0       0
  1778 ;;      Totals:         9       0       0       0       0
  1779 ;;Total ram usage:        9 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    1
  1782 ;; This function calls:
  1783 ;;		___bmul
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           
  1790                           ;psect for function _move_temp_to_send
  1791  0C8A                     _move_temp_to_send:	
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _move_temp_to_send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1795                           ;move_temp_to_send@data_pointer stored from wreg
  1796  0C8A  00FC               	movwf	move_temp_to_send@data_pointer
  1797                           
  1798                           ;Main V4.1.c: 945: int x = 0;
  1799  0C8B  01F9               	clrf	move_temp_to_send@x
  1800  0C8C  01FA               	clrf	move_temp_to_send@x+1
  1801                           
  1802                           ;Main V4.1.c: 946: char *reg = 0;
  1803  0C8D  01FB               	clrf	move_temp_to_send@reg
  1804                           
  1805                           ;Main V4.1.c: 947: int working_register = 0;
  1806  0C8E  01F6               	clrf	move_temp_to_send@working_register
  1807  0C8F  01F7               	clrf	move_temp_to_send@working_register+1
  1808                           
  1809                           ;Main V4.1.c: 948: char byte_to_send = 0;
  1810  0C90  01F8               	clrf	move_temp_to_send@byte_to_send
  1811                           
  1812                           ;Main V4.1.c: 949: if (*data_pointer == 0){
  1813  0C91  087C               	movf	move_temp_to_send@data_pointer,w
  1814  0C92  0084               	movwf	4
  1815  0C93  1383               	bcf	3,7	;select IRP bank0
  1816  0C94  0800               	movf	0,w
  1817  0C95  1D03               	btfss	3,2
  1818  0C96  0008               	return
  1819                           
  1820                           ;Main V4.1.c: 950: *data_pointer = 1;
  1821  0C97  087C               	movf	move_temp_to_send@data_pointer,w
  1822  0C98  0084               	movwf	4
  1823  0C99  0180               	clrf	0
  1824  0C9A  0A80               	incf	0,f
  1825                           
  1826                           ;Main V4.1.c: 951: reg = data_pointer + 1;
  1827  0C9B  087C               	movf	move_temp_to_send@data_pointer,w
  1828  0C9C  3E01               	addlw	1
  1829  0C9D  00F4               	movwf	??_move_temp_to_send
  1830  0C9E  0874               	movf	??_move_temp_to_send,w
  1831  0C9F  00FB               	movwf	move_temp_to_send@reg
  1832                           
  1833                           ;Main V4.1.c: 952: *reg = 0x81;
  1834  0CA0  3081               	movlw	129
  1835  0CA1  00F4               	movwf	??_move_temp_to_send
  1836  0CA2  087B               	movf	move_temp_to_send@reg,w
  1837  0CA3  0084               	movwf	4
  1838  0CA4  0874               	movf	??_move_temp_to_send,w
  1839  0CA5  0080               	movwf	0
  1840                           
  1841                           ;Main V4.1.c: 953: reg = data_pointer + 2;
  1842  0CA6  087C               	movf	move_temp_to_send@data_pointer,w
  1843  0CA7  3E02               	addlw	2
  1844  0CA8  00F4               	movwf	??_move_temp_to_send
  1845  0CA9  0874               	movf	??_move_temp_to_send,w
  1846  0CAA  00FB               	movwf	move_temp_to_send@reg
  1847                           
  1848                           ;Main V4.1.c: 954: x = *reg;
  1849  0CAB  087B               	movf	move_temp_to_send@reg,w
  1850  0CAC  0084               	movwf	4
  1851  0CAD  0800               	movf	0,w
  1852  0CAE  00F4               	movwf	??_move_temp_to_send
  1853  0CAF  01F5               	clrf	??_move_temp_to_send+1
  1854  0CB0  0874               	movf	??_move_temp_to_send,w
  1855  0CB1  00F9               	movwf	move_temp_to_send@x
  1856  0CB2  0875               	movf	??_move_temp_to_send+1,w
  1857  0CB3  00FA               	movwf	move_temp_to_send@x+1
  1858                           
  1859                           ;Main V4.1.c: 955: x++;
  1860  0CB4  3001               	movlw	1
  1861  0CB5  07F9               	addwf	move_temp_to_send@x,f
  1862  0CB6  1803               	skipnc
  1863  0CB7  0AFA               	incf	move_temp_to_send@x+1,f
  1864  0CB8  3000               	movlw	0
  1865  0CB9  07FA               	addwf	move_temp_to_send@x+1,f
  1866                           
  1867                           ;Main V4.1.c: 956: if (x > 3){
  1868  0CBA  087A               	movf	move_temp_to_send@x+1,w
  1869  0CBB  3A80               	xorlw	128
  1870  0CBC  00FF               	movwf	127
  1871  0CBD  3080               	movlw	128
  1872  0CBE  027F               	subwf	127,w
  1873  0CBF  1D03               	skipz
  1874  0CC0  2CC3               	goto	u2455
  1875  0CC1  3004               	movlw	4
  1876  0CC2  0279               	subwf	move_temp_to_send@x,w
  1877  0CC3                     u2455:	
  1878  0CC3  1C03               	skipc
  1879  0CC4  2CC9               	goto	l2549
  1880                           
  1881                           ;Main V4.1.c: 957: x = 1;
  1882  0CC5  3001               	movlw	1
  1883  0CC6  00F9               	movwf	move_temp_to_send@x
  1884  0CC7  3000               	movlw	0
  1885  0CC8  00FA               	movwf	move_temp_to_send@x+1
  1886  0CC9                     l2549:	
  1887                           
  1888                           ;Main V4.1.c: 959: }
  1889                           ;Main V4.1.c: 960: *reg = x;
  1890  0CC9  0879               	movf	move_temp_to_send@x,w
  1891  0CCA  00F4               	movwf	??_move_temp_to_send
  1892  0CCB  087B               	movf	move_temp_to_send@reg,w
  1893  0CCC  0084               	movwf	4
  1894  0CCD  0874               	movf	??_move_temp_to_send,w
  1895  0CCE  1383               	bcf	3,7	;select IRP bank0
  1896  0CCF  0080               	movwf	0
  1897                           
  1898                           ;Main V4.1.c: 961: reg = data_pointer + 4;
  1899  0CD0  087C               	movf	move_temp_to_send@data_pointer,w
  1900  0CD1  3E04               	addlw	4
  1901  0CD2  00F4               	movwf	??_move_temp_to_send
  1902  0CD3  0874               	movf	??_move_temp_to_send,w
  1903  0CD4  00FB               	movwf	move_temp_to_send@reg
  1904                           
  1905                           ;Main V4.1.c: 962: byte_to_send = thermocouple_temp[x][0] & 0xff;
  1906  0CD5  3006               	movlw	6
  1907  0CD6  00F4               	movwf	??_move_temp_to_send
  1908  0CD7  0874               	movf	??_move_temp_to_send,w
  1909  0CD8  00F0               	movwf	___bmul@multiplicand
  1910  0CD9  0879               	movf	move_temp_to_send@x,w
  1911  0CDA  120A  158A  20B1  120A  158A  	fcall	___bmul
  1912  0CDF  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  1913  0CE0  0084               	movwf	4
  1914  0CE1  1383               	bcf	3,7	;select IRP bank1
  1915  0CE2  0800               	movf	0,w
  1916  0CE3  00F5               	movwf	??_move_temp_to_send+1
  1917  0CE4  0875               	movf	??_move_temp_to_send+1,w
  1918  0CE5  00F8               	movwf	move_temp_to_send@byte_to_send
  1919                           
  1920                           ;Main V4.1.c: 963: *reg = byte_to_send;
  1921  0CE6  0878               	movf	move_temp_to_send@byte_to_send,w
  1922  0CE7  00F4               	movwf	??_move_temp_to_send
  1923  0CE8  087B               	movf	move_temp_to_send@reg,w
  1924  0CE9  0084               	movwf	4
  1925  0CEA  0874               	movf	??_move_temp_to_send,w
  1926  0CEB  0080               	movwf	0
  1927                           
  1928                           ;Main V4.1.c: 964: reg = data_pointer + 3;
  1929  0CEC  087C               	movf	move_temp_to_send@data_pointer,w
  1930  0CED  3E03               	addlw	3
  1931  0CEE  00F4               	movwf	??_move_temp_to_send
  1932  0CEF  0874               	movf	??_move_temp_to_send,w
  1933  0CF0  00FB               	movwf	move_temp_to_send@reg
  1934                           
  1935                           ;Main V4.1.c: 965: working_register = thermocouple_temp[x][0];
  1936  0CF1  3006               	movlw	6
  1937  0CF2  00F4               	movwf	??_move_temp_to_send
  1938  0CF3  0874               	movf	??_move_temp_to_send,w
  1939  0CF4  00F0               	movwf	___bmul@multiplicand
  1940  0CF5  0879               	movf	move_temp_to_send@x,w
  1941  0CF6  120A  158A  20B1  120A  158A  	fcall	___bmul
  1942  0CFB  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  1943  0CFC  0084               	movwf	4
  1944  0CFD  1383               	bcf	3,7	;select IRP bank1
  1945  0CFE  0800               	movf	0,w
  1946  0CFF  00F6               	movwf	move_temp_to_send@working_register
  1947  0D00  0A84               	incf	4,f
  1948  0D01  0800               	movf	0,w
  1949  0D02  00F7               	movwf	move_temp_to_send@working_register+1
  1950                           
  1951                           ;Main V4.1.c: 966: working_register = working_register >> 8;
  1952  0D03  0877               	movf	move_temp_to_send@working_register+1,w
  1953  0D04  00F5               	movwf	??_move_temp_to_send+1
  1954  0D05  0876               	movf	move_temp_to_send@working_register,w
  1955  0D06  00F4               	movwf	??_move_temp_to_send
  1956  0D07  3008               	movlw	8
  1957  0D08  00FF               	movwf	127
  1958  0D09                     u2465:	
  1959  0D09  0D75               	rlf	??_move_temp_to_send+1,w
  1960  0D0A  0CF5               	rrf	??_move_temp_to_send+1,f
  1961  0D0B  0CF4               	rrf	??_move_temp_to_send,f
  1962  0D0C  0BFF               	decfsz	127,f
  1963  0D0D  2D09               	goto	u2465
  1964  0D0E  0874               	movf	??_move_temp_to_send,w
  1965  0D0F  00F6               	movwf	move_temp_to_send@working_register
  1966  0D10  0875               	movf	??_move_temp_to_send+1,w
  1967  0D11  00F7               	movwf	move_temp_to_send@working_register+1
  1968                           
  1969                           ;Main V4.1.c: 967: byte_to_send = working_register & 0xff;
  1970  0D12  0876               	movf	move_temp_to_send@working_register,w
  1971  0D13  00F4               	movwf	??_move_temp_to_send
  1972  0D14  0874               	movf	??_move_temp_to_send,w
  1973  0D15  00F8               	movwf	move_temp_to_send@byte_to_send
  1974                           
  1975                           ;Main V4.1.c: 968: *reg = byte_to_send;
  1976  0D16  0878               	movf	move_temp_to_send@byte_to_send,w
  1977  0D17  00F4               	movwf	??_move_temp_to_send
  1978  0D18  087B               	movf	move_temp_to_send@reg,w
  1979  0D19  0084               	movwf	4
  1980  0D1A  0874               	movf	??_move_temp_to_send,w
  1981  0D1B  0080               	movwf	0
  1982  0D1C  0008               	return
  1983  0D1D                     __end_of_move_temp_to_send:	
  1984                           
  1985                           	psect	text3
  1986  007F                     __ptext3:	
  1987 ;; *************** function _get_temp_from_right_tcs *****************
  1988 ;; Defined at:
  1989 ;;		line 659 in file "Main V4.1.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  position        4    1[BANK0 ] int [2]
  1994 ;;  x               2   10[BANK0 ] int 
  1995 ;;  byte_to_send    1    9[BANK0 ] unsigned char 
  1996 ;;  byte4           1    8[BANK0 ] unsigned char 
  1997 ;;  byte3           1    7[BANK0 ] unsigned char 
  1998 ;;  byte2           1    6[BANK0 ] unsigned char 
  1999 ;;  byte1           1    5[BANK0 ] unsigned char 
  2000 ;;  byte_receive    1    0[BANK0 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2010 ;;      Params:         0       0       0       0       0
  2011 ;;      Locals:         0      12       0       0       0
  2012 ;;      Temps:          6       0       0       0       0
  2013 ;;      Totals:         6      12       0       0       0
  2014 ;;Total ram usage:       18 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    1
  2017 ;; This function calls:
  2018 ;;		_SPI_TRANSFER
  2019 ;;		___bmul
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function _get_temp_from_right_tcs
  2027  007F                     _get_temp_from_right_tcs:	
  2028                           
  2029                           ;Main V4.1.c: 660: char byte_to_send = 0;
  2030                           
  2031                           ;incstack = 0
  2032                           ; Regs used in _get_temp_from_right_tcs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  2033  007F  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0080  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0081  01A9               	clrf	get_temp_from_right_tcs@byte_to_send
  2036                           
  2037                           ;Main V4.1.c: 661: char byte_received = 0;
  2038  0082  01A0               	clrf	get_temp_from_right_tcs@byte_received
  2039                           
  2040                           ;Main V4.1.c: 662: char byte1 = 0;
  2041  0083  01A5               	clrf	get_temp_from_right_tcs@byte1
  2042                           
  2043                           ;Main V4.1.c: 663: char byte2 = 0;
  2044  0084  01A6               	clrf	get_temp_from_right_tcs@byte2
  2045                           
  2046                           ;Main V4.1.c: 664: char byte3 = 0;
  2047  0085  01A7               	clrf	get_temp_from_right_tcs@byte3
  2048                           
  2049                           ;Main V4.1.c: 665: char byte4 = 0;
  2050  0086  01A8               	clrf	get_temp_from_right_tcs@byte4
  2051                           
  2052                           ;Main V4.1.c: 666: int x = 1;
  2053  0087  3001               	movlw	1
  2054  0088  00AA               	movwf	get_temp_from_right_tcs@x
  2055  0089  3000               	movlw	0
  2056  008A  00AB               	movwf	get_temp_from_right_tcs@x+1
  2057                           
  2058                           ;Main V4.1.c: 667: int position[2];
  2059                           ;Main V4.1.c: 669: position[0] = 00;
  2060  008B  01A1               	clrf	get_temp_from_right_tcs@position
  2061  008C  01A2               	clrf	get_temp_from_right_tcs@position+1
  2062                           
  2063                           ;Main V4.1.c: 670: position[1] = 16;
  2064  008D  3010               	movlw	16
  2065  008E  00A3               	movwf	get_temp_from_right_tcs@position+2
  2066  008F  3000               	movlw	0
  2067  0090  00A4               	movwf	get_temp_from_right_tcs@position+3
  2068                           
  2069                           ;Main V4.1.c: 671: RA1 = 0;
  2070  0091  1085               	bcf	5,1	;volatile
  2071                           
  2072                           ;Main V4.1.c: 672: _delay((unsigned long)((30)*(16000000/4000000.0)));
  2073  0092  3027               	movlw	39
  2074  0093  00F4               	movwf	??_get_temp_from_right_tcs
  2075  0094                     u2797:	
  2076  0094  0BF4               	decfsz	??_get_temp_from_right_tcs,f
  2077  0095  2894               	goto	u2797
  2078  0096  2897               	nop2	;nop
  2079                           
  2080                           ;Main V4.1.c: 673: RA1 = 1;
  2081  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0099  1485               	bsf	5,1	;volatile
  2084  009A                     l2271:	
  2085                           ;Main V4.1.c: 674: while (x <= 3){
  2086                           
  2087  009A  1283               	bcf	3,5	;RP0=0, select bank0
  2088  009B  1303               	bcf	3,6	;RP1=0, select bank0
  2089  009C  082B               	movf	get_temp_from_right_tcs@x+1,w
  2090  009D  3A80               	xorlw	128
  2091  009E  00FF               	movwf	127
  2092  009F  3080               	movlw	128
  2093  00A0  027F               	subwf	127,w
  2094  00A1  1D03               	skipz
  2095  00A2  28A5               	goto	u2075
  2096  00A3  3004               	movlw	4
  2097  00A4  022A               	subwf	get_temp_from_right_tcs@x,w
  2098  00A5                     u2075:	
  2099  00A5  1803               	btfsc	3,0
  2100  00A6  2A43               	goto	l211
  2101                           
  2102                           ;Main V4.1.c: 675: RA2 = 0;
  2103  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  2104  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  2105  00A9  1105               	bcf	5,2	;volatile
  2106                           
  2107                           ;Main V4.1.c: 676: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2108  00AA  3085               	movlw	133
  2109  00AB  00F4               	movwf	??_get_temp_from_right_tcs
  2110  00AC                     u2807:	
  2111  00AC  0BF4               	decfsz	??_get_temp_from_right_tcs,f
  2112  00AD  28AC               	goto	u2807
  2113                           
  2114                           ;Main V4.1.c: 678: byte1= SPI_TRANSFER(byte_to_send);
  2115  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2116  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2117  00B0  0829               	movf	get_temp_from_right_tcs@byte_to_send,w
  2118  00B1  120A  158A  216A  120A  118A  	fcall	_SPI_TRANSFER
  2119  00B6  00F4               	movwf	??_get_temp_from_right_tcs
  2120  00B7  0874               	movf	??_get_temp_from_right_tcs,w
  2121  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  2122  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  2123  00BA  00A5               	movwf	get_temp_from_right_tcs@byte1
  2124                           
  2125                           ;Main V4.1.c: 679: byte2 = SPI_TRANSFER(byte_to_send);
  2126  00BB  0829               	movf	get_temp_from_right_tcs@byte_to_send,w
  2127  00BC  120A  158A  216A  120A  118A  	fcall	_SPI_TRANSFER
  2128  00C1  00F4               	movwf	??_get_temp_from_right_tcs
  2129  00C2  0874               	movf	??_get_temp_from_right_tcs,w
  2130  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  2131  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  2132  00C5  00A6               	movwf	get_temp_from_right_tcs@byte2
  2133                           
  2134                           ;Main V4.1.c: 680: byte3 = SPI_TRANSFER(byte_to_send);
  2135  00C6  0829               	movf	get_temp_from_right_tcs@byte_to_send,w
  2136  00C7  120A  158A  216A  120A  118A  	fcall	_SPI_TRANSFER
  2137  00CC  00F4               	movwf	??_get_temp_from_right_tcs
  2138  00CD  0874               	movf	??_get_temp_from_right_tcs,w
  2139  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2140  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2141  00D0  00A7               	movwf	get_temp_from_right_tcs@byte3
  2142                           
  2143                           ;Main V4.1.c: 681: byte4 = SPI_TRANSFER(byte_to_send);
  2144  00D1  0829               	movf	get_temp_from_right_tcs@byte_to_send,w
  2145  00D2  120A  158A  216A  120A  118A  	fcall	_SPI_TRANSFER
  2146  00D7  00F4               	movwf	??_get_temp_from_right_tcs
  2147  00D8  0874               	movf	??_get_temp_from_right_tcs,w
  2148  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  2149  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  2150  00DB  00A8               	movwf	get_temp_from_right_tcs@byte4
  2151                           
  2152                           ;Main V4.1.c: 682: thermocouple_temp[x][0] = (byte1 & 0x00FF);
  2153  00DC  0825               	movf	get_temp_from_right_tcs@byte1,w
  2154  00DD  00F4               	movwf	??_get_temp_from_right_tcs
  2155  00DE  01F5               	clrf	??_get_temp_from_right_tcs+1
  2156  00DF  3006               	movlw	6
  2157  00E0  00F6               	movwf	??_get_temp_from_right_tcs+2
  2158  00E1  0876               	movf	??_get_temp_from_right_tcs+2,w
  2159  00E2  00F0               	movwf	___bmul@multiplicand
  2160  00E3  082A               	movf	get_temp_from_right_tcs@x,w
  2161  00E4  120A  158A  20B1  120A  118A  	fcall	___bmul
  2162  00E9  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2163  00EA  0084               	movwf	4
  2164  00EB  0874               	movf	??_get_temp_from_right_tcs,w
  2165  00EC  1383               	bcf	3,7	;select IRP bank1
  2166  00ED  0080               	movwf	0
  2167  00EE  0A84               	incf	4,f
  2168  00EF  0875               	movf	??_get_temp_from_right_tcs+1,w
  2169  00F0  0080               	movwf	0
  2170                           
  2171                           ;Main V4.1.c: 683: thermocouple_temp[x][0] = thermocouple_temp[x][0] << 8;
  2172  00F1  3006               	movlw	6
  2173  00F2  00F4               	movwf	??_get_temp_from_right_tcs
  2174  00F3  0874               	movf	??_get_temp_from_right_tcs,w
  2175  00F4  00F0               	movwf	___bmul@multiplicand
  2176  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  2177  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  2178  00F7  082A               	movf	get_temp_from_right_tcs@x,w
  2179  00F8  120A  158A  20B1  120A  118A  	fcall	___bmul
  2180  00FD  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2181  00FE  0084               	movwf	4
  2182  00FF  1383               	bcf	3,7	;select IRP bank1
  2183  0100  0800               	movf	0,w
  2184  0101  00F5               	movwf	??_get_temp_from_right_tcs+1
  2185  0102  0A84               	incf	4,f
  2186  0103  0800               	movf	0,w
  2187  0104  00F6               	movwf	??_get_temp_from_right_tcs+2
  2188  0105  0875               	movf	??_get_temp_from_right_tcs+1,w
  2189  0106  00F6               	movwf	??_get_temp_from_right_tcs+2
  2190  0107  01F5               	clrf	??_get_temp_from_right_tcs+1
  2191  0108  3006               	movlw	6
  2192  0109  00F7               	movwf	??_get_temp_from_right_tcs+3
  2193  010A  0877               	movf	??_get_temp_from_right_tcs+3,w
  2194  010B  00F0               	movwf	___bmul@multiplicand
  2195  010C  1283               	bcf	3,5	;RP0=0, select bank0
  2196  010D  1303               	bcf	3,6	;RP1=0, select bank0
  2197  010E  082A               	movf	get_temp_from_right_tcs@x,w
  2198  010F  120A  158A  20B1  120A  118A  	fcall	___bmul
  2199  0114  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2200  0115  0084               	movwf	4
  2201  0116  0875               	movf	??_get_temp_from_right_tcs+1,w
  2202  0117  1383               	bcf	3,7	;select IRP bank1
  2203  0118  0080               	movwf	0
  2204  0119  0A84               	incf	4,f
  2205  011A  0876               	movf	??_get_temp_from_right_tcs+2,w
  2206  011B  0080               	movwf	0
  2207                           
  2208                           ;Main V4.1.c: 684: thermocouple_temp[x][0] = (thermocouple_temp[x][0] | byte2);
  2209  011C  3006               	movlw	6
  2210  011D  00F4               	movwf	??_get_temp_from_right_tcs
  2211  011E  0874               	movf	??_get_temp_from_right_tcs,w
  2212  011F  00F0               	movwf	___bmul@multiplicand
  2213  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0122  082A               	movf	get_temp_from_right_tcs@x,w
  2216  0123  120A  158A  20B1  120A  118A  	fcall	___bmul
  2217  0128  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2218  0129  0084               	movwf	4
  2219  012A  1383               	bcf	3,7	;select IRP bank1
  2220  012B  0800               	movf	0,w
  2221  012C  00F5               	movwf	??_get_temp_from_right_tcs+1
  2222  012D  0A84               	incf	4,f
  2223  012E  0800               	movf	0,w
  2224  012F  00F6               	movwf	??_get_temp_from_right_tcs+2
  2225  0130  0875               	movf	??_get_temp_from_right_tcs+1,w
  2226  0131  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0132  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0133  0426               	iorwf	get_temp_from_right_tcs@byte2,w
  2229  0134  00F7               	movwf	??_get_temp_from_right_tcs+3
  2230  0135  0876               	movf	??_get_temp_from_right_tcs+2,w
  2231  0136  00F8               	movwf	??_get_temp_from_right_tcs+4
  2232  0137  3006               	movlw	6
  2233  0138  00F9               	movwf	??_get_temp_from_right_tcs+5
  2234  0139  0879               	movf	??_get_temp_from_right_tcs+5,w
  2235  013A  00F0               	movwf	___bmul@multiplicand
  2236  013B  082A               	movf	get_temp_from_right_tcs@x,w
  2237  013C  120A  158A  20B1  120A  118A  	fcall	___bmul
  2238  0141  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2239  0142  0084               	movwf	4
  2240  0143  0877               	movf	??_get_temp_from_right_tcs+3,w
  2241  0144  1383               	bcf	3,7	;select IRP bank1
  2242  0145  0080               	movwf	0
  2243  0146  0A84               	incf	4,f
  2244  0147  0878               	movf	??_get_temp_from_right_tcs+4,w
  2245  0148  0080               	movwf	0
  2246                           
  2247                           ;Main V4.1.c: 685: thermocouple_temp[x][0] = thermocouple_temp[x][0] >> 2;
  2248  0149  3006               	movlw	6
  2249  014A  00F4               	movwf	??_get_temp_from_right_tcs
  2250  014B  0874               	movf	??_get_temp_from_right_tcs,w
  2251  014C  00F0               	movwf	___bmul@multiplicand
  2252  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2253  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2254  014F  082A               	movf	get_temp_from_right_tcs@x,w
  2255  0150  120A  158A  20B1  120A  118A  	fcall	___bmul
  2256  0155  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2257  0156  0084               	movwf	4
  2258  0157  1383               	bcf	3,7	;select IRP bank1
  2259  0158  0800               	movf	0,w
  2260  0159  00F5               	movwf	??_get_temp_from_right_tcs+1
  2261  015A  0A84               	incf	4,f
  2262  015B  0800               	movf	0,w
  2263  015C  00F6               	movwf	??_get_temp_from_right_tcs+2
  2264  015D  0D76               	rlf	??_get_temp_from_right_tcs+2,w
  2265  015E  0CF6               	rrf	??_get_temp_from_right_tcs+2,f
  2266  015F  0CF5               	rrf	??_get_temp_from_right_tcs+1,f
  2267  0160  0D76               	rlf	??_get_temp_from_right_tcs+2,w
  2268  0161  0CF6               	rrf	??_get_temp_from_right_tcs+2,f
  2269  0162  0CF5               	rrf	??_get_temp_from_right_tcs+1,f
  2270  0163  3006               	movlw	6
  2271  0164  00F7               	movwf	??_get_temp_from_right_tcs+3
  2272  0165  0877               	movf	??_get_temp_from_right_tcs+3,w
  2273  0166  00F0               	movwf	___bmul@multiplicand
  2274  0167  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0168  1303               	bcf	3,6	;RP1=0, select bank0
  2276  0169  082A               	movf	get_temp_from_right_tcs@x,w
  2277  016A  120A  158A  20B1  120A  118A  	fcall	___bmul
  2278  016F  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2279  0170  0084               	movwf	4
  2280  0171  0875               	movf	??_get_temp_from_right_tcs+1,w
  2281  0172  1383               	bcf	3,7	;select IRP bank1
  2282  0173  0080               	movwf	0
  2283  0174  0A84               	incf	4,f
  2284  0175  0876               	movf	??_get_temp_from_right_tcs+2,w
  2285  0176  0080               	movwf	0
  2286                           
  2287                           ;Main V4.1.c: 687: thermocouple_temp[x][1] = (byte3 & 0x00FF);
  2288  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2289  0178  1303               	bcf	3,6	;RP1=0, select bank0
  2290  0179  0827               	movf	get_temp_from_right_tcs@byte3,w
  2291  017A  00F4               	movwf	??_get_temp_from_right_tcs
  2292  017B  01F5               	clrf	??_get_temp_from_right_tcs+1
  2293  017C  3006               	movlw	6
  2294  017D  00F6               	movwf	??_get_temp_from_right_tcs+2
  2295  017E  0876               	movf	??_get_temp_from_right_tcs+2,w
  2296  017F  00F0               	movwf	___bmul@multiplicand
  2297  0180  082A               	movf	get_temp_from_right_tcs@x,w
  2298  0181  120A  158A  20B1  120A  118A  	fcall	___bmul
  2299  0186  3E02               	addlw	2
  2300  0187  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2301  0188  0084               	movwf	4
  2302  0189  0874               	movf	??_get_temp_from_right_tcs,w
  2303  018A  1383               	bcf	3,7	;select IRP bank1
  2304  018B  0080               	movwf	0
  2305  018C  0A84               	incf	4,f
  2306  018D  0875               	movf	??_get_temp_from_right_tcs+1,w
  2307  018E  0080               	movwf	0
  2308                           
  2309                           ;Main V4.1.c: 688: thermocouple_temp[x][1] = thermocouple_temp[x][1] << 8;
  2310  018F  3006               	movlw	6
  2311  0190  00F4               	movwf	??_get_temp_from_right_tcs
  2312  0191  0874               	movf	??_get_temp_from_right_tcs,w
  2313  0192  00F0               	movwf	___bmul@multiplicand
  2314  0193  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0194  1303               	bcf	3,6	;RP1=0, select bank0
  2316  0195  082A               	movf	get_temp_from_right_tcs@x,w
  2317  0196  120A  158A  20B1  120A  118A  	fcall	___bmul
  2318  019B  3E02               	addlw	2
  2319  019C  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2320  019D  0084               	movwf	4
  2321  019E  1383               	bcf	3,7	;select IRP bank1
  2322  019F  0800               	movf	0,w
  2323  01A0  00F5               	movwf	??_get_temp_from_right_tcs+1
  2324  01A1  0A84               	incf	4,f
  2325  01A2  0800               	movf	0,w
  2326  01A3  00F6               	movwf	??_get_temp_from_right_tcs+2
  2327  01A4  0875               	movf	??_get_temp_from_right_tcs+1,w
  2328  01A5  00F6               	movwf	??_get_temp_from_right_tcs+2
  2329  01A6  01F5               	clrf	??_get_temp_from_right_tcs+1
  2330  01A7  3006               	movlw	6
  2331  01A8  00F7               	movwf	??_get_temp_from_right_tcs+3
  2332  01A9  0877               	movf	??_get_temp_from_right_tcs+3,w
  2333  01AA  00F0               	movwf	___bmul@multiplicand
  2334  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2335  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2336  01AD  082A               	movf	get_temp_from_right_tcs@x,w
  2337  01AE  120A  158A  20B1  120A  118A  	fcall	___bmul
  2338  01B3  3E02               	addlw	2
  2339  01B4  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2340  01B5  0084               	movwf	4
  2341  01B6  0875               	movf	??_get_temp_from_right_tcs+1,w
  2342  01B7  1383               	bcf	3,7	;select IRP bank1
  2343  01B8  0080               	movwf	0
  2344  01B9  0A84               	incf	4,f
  2345  01BA  0876               	movf	??_get_temp_from_right_tcs+2,w
  2346  01BB  0080               	movwf	0
  2347                           
  2348                           ;Main V4.1.c: 689: thermocouple_temp[x][1] = (thermocouple_temp[x][1] | byte4);
  2349  01BC  3006               	movlw	6
  2350  01BD  00F4               	movwf	??_get_temp_from_right_tcs
  2351  01BE  0874               	movf	??_get_temp_from_right_tcs,w
  2352  01BF  00F0               	movwf	___bmul@multiplicand
  2353  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2354  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2355  01C2  082A               	movf	get_temp_from_right_tcs@x,w
  2356  01C3  120A  158A  20B1  120A  118A  	fcall	___bmul
  2357  01C8  3E02               	addlw	2
  2358  01C9  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2359  01CA  0084               	movwf	4
  2360  01CB  1383               	bcf	3,7	;select IRP bank1
  2361  01CC  0800               	movf	0,w
  2362  01CD  00F5               	movwf	??_get_temp_from_right_tcs+1
  2363  01CE  0A84               	incf	4,f
  2364  01CF  0800               	movf	0,w
  2365  01D0  00F6               	movwf	??_get_temp_from_right_tcs+2
  2366  01D1  0875               	movf	??_get_temp_from_right_tcs+1,w
  2367  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2368  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2369  01D4  0428               	iorwf	get_temp_from_right_tcs@byte4,w
  2370  01D5  00F7               	movwf	??_get_temp_from_right_tcs+3
  2371  01D6  0876               	movf	??_get_temp_from_right_tcs+2,w
  2372  01D7  00F8               	movwf	??_get_temp_from_right_tcs+4
  2373  01D8  3006               	movlw	6
  2374  01D9  00F9               	movwf	??_get_temp_from_right_tcs+5
  2375  01DA  0879               	movf	??_get_temp_from_right_tcs+5,w
  2376  01DB  00F0               	movwf	___bmul@multiplicand
  2377  01DC  082A               	movf	get_temp_from_right_tcs@x,w
  2378  01DD  120A  158A  20B1  120A  118A  	fcall	___bmul
  2379  01E2  3E02               	addlw	2
  2380  01E3  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2381  01E4  0084               	movwf	4
  2382  01E5  0877               	movf	??_get_temp_from_right_tcs+3,w
  2383  01E6  1383               	bcf	3,7	;select IRP bank1
  2384  01E7  0080               	movwf	0
  2385  01E8  0A84               	incf	4,f
  2386  01E9  0878               	movf	??_get_temp_from_right_tcs+4,w
  2387  01EA  0080               	movwf	0
  2388                           
  2389                           ;Main V4.1.c: 690: thermocouple_temp[x][1] = thermocouple_temp[x][1] >> 4;
  2390  01EB  3006               	movlw	6
  2391  01EC  00F4               	movwf	??_get_temp_from_right_tcs
  2392  01ED  0874               	movf	??_get_temp_from_right_tcs,w
  2393  01EE  00F0               	movwf	___bmul@multiplicand
  2394  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2395  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2396  01F1  082A               	movf	get_temp_from_right_tcs@x,w
  2397  01F2  120A  158A  20B1  120A  118A  	fcall	___bmul
  2398  01F7  3E02               	addlw	2
  2399  01F8  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2400  01F9  0084               	movwf	4
  2401  01FA  1383               	bcf	3,7	;select IRP bank1
  2402  01FB  0800               	movf	0,w
  2403  01FC  00F5               	movwf	??_get_temp_from_right_tcs+1
  2404  01FD  0A84               	incf	4,f
  2405  01FE  0800               	movf	0,w
  2406  01FF  00F6               	movwf	??_get_temp_from_right_tcs+2
  2407  0200  3004               	movlw	4
  2408  0201  00FF               	movwf	127
  2409  0202                     u2065:	
  2410  0202  0D76               	rlf	??_get_temp_from_right_tcs+2,w
  2411  0203  0CF6               	rrf	??_get_temp_from_right_tcs+2,f
  2412  0204  0CF5               	rrf	??_get_temp_from_right_tcs+1,f
  2413  0205  0BFF               	decfsz	127,f
  2414  0206  2A02               	goto	u2065
  2415  0207  3006               	movlw	6
  2416  0208  00F7               	movwf	??_get_temp_from_right_tcs+3
  2417  0209  0877               	movf	??_get_temp_from_right_tcs+3,w
  2418  020A  00F0               	movwf	___bmul@multiplicand
  2419  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2420  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2421  020D  082A               	movf	get_temp_from_right_tcs@x,w
  2422  020E  120A  158A  20B1  120A  118A  	fcall	___bmul
  2423  0213  3E02               	addlw	2
  2424  0214  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2425  0215  0084               	movwf	4
  2426  0216  0875               	movf	??_get_temp_from_right_tcs+1,w
  2427  0217  1383               	bcf	3,7	;select IRP bank1
  2428  0218  0080               	movwf	0
  2429  0219  0A84               	incf	4,f
  2430  021A  0876               	movf	??_get_temp_from_right_tcs+2,w
  2431  021B  0080               	movwf	0
  2432                           
  2433                           ;Main V4.1.c: 692: thermocouple_temp[x][2] = (byte4 & 0x000F);
  2434  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2435  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2436  021E  0828               	movf	get_temp_from_right_tcs@byte4,w
  2437  021F  390F               	andlw	15
  2438  0220  00F4               	movwf	??_get_temp_from_right_tcs
  2439  0221  01F5               	clrf	??_get_temp_from_right_tcs+1
  2440  0222  3006               	movlw	6
  2441  0223  00F6               	movwf	??_get_temp_from_right_tcs+2
  2442  0224  0876               	movf	??_get_temp_from_right_tcs+2,w
  2443  0225  00F0               	movwf	___bmul@multiplicand
  2444  0226  082A               	movf	get_temp_from_right_tcs@x,w
  2445  0227  120A  158A  20B1  120A  118A  	fcall	___bmul
  2446  022C  3E04               	addlw	4
  2447  022D  3EA0               	addlw	(low (_thermocouple_temp| 0))& (0+255)
  2448  022E  0084               	movwf	4
  2449  022F  0874               	movf	??_get_temp_from_right_tcs,w
  2450  0230  1383               	bcf	3,7	;select IRP bank1
  2451  0231  0080               	movwf	0
  2452  0232  0A84               	incf	4,f
  2453  0233  0875               	movf	??_get_temp_from_right_tcs+1,w
  2454  0234  0080               	movwf	0
  2455                           
  2456                           ;Main V4.1.c: 694: x++;
  2457  0235  3001               	movlw	1
  2458  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0238  07AA               	addwf	get_temp_from_right_tcs@x,f
  2461  0239  1803               	skipnc
  2462  023A  0AAB               	incf	get_temp_from_right_tcs@x+1,f
  2463  023B  3000               	movlw	0
  2464  023C  07AB               	addwf	get_temp_from_right_tcs@x+1,f
  2465                           
  2466                           ;Main V4.1.c: 695: RA2 = 1;
  2467  023D  1505               	bsf	5,2	;volatile
  2468                           
  2469                           ;Main V4.1.c: 696: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2470  023E  3085               	movlw	133
  2471  023F  00F4               	movwf	??_get_temp_from_right_tcs
  2472  0240                     u2817:	
  2473  0240  0BF4               	decfsz	??_get_temp_from_right_tcs,f
  2474  0241  2A40               	goto	u2817
  2475  0242  289A               	goto	l2271
  2476  0243                     l211:	
  2477                           
  2478                           ;Main V4.1.c: 697: }
  2479                           ;Main V4.1.c: 739: RA1 = 0;
  2480  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0245  1085               	bcf	5,1	;volatile
  2483                           
  2484                           ;Main V4.1.c: 740: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2485  0246  3085               	movlw	133
  2486  0247  00F4               	movwf	??_get_temp_from_right_tcs
  2487  0248                     u2827:	
  2488  0248  0BF4               	decfsz	??_get_temp_from_right_tcs,f
  2489  0249  2A48               	goto	u2827
  2490                           
  2491                           ;Main V4.1.c: 741: RA1 = 1;
  2492  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2493  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2494  024C  1485               	bsf	5,1	;volatile
  2495  024D  0008               	return
  2496  024E                     __end_of_get_temp_from_right_tcs:	
  2497                           
  2498                           	psect	text4
  2499  08B1                     __ptext4:	
  2500 ;; *************** function ___bmul *****************
  2501 ;; Defined at:
  2502 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  multiplier      1    wreg     unsigned char 
  2505 ;;  multiplicand    1    0[COMMON] unsigned char 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  multiplier      1    3[COMMON] unsigned char 
  2508 ;;  product         1    2[COMMON] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      unsigned char 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2518 ;;      Params:         1       0       0       0       0
  2519 ;;      Locals:         2       0       0       0       0
  2520 ;;      Temps:          1       0       0       0       0
  2521 ;;      Totals:         4       0       0       0       0
  2522 ;;Total ram usage:        4 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_get_temp_from_right_tcs
  2528 ;;		_move_temp_to_send
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function ___bmul
  2534  08B1                     ___bmul:	
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2538                           ;___bmul@multiplier stored from wreg
  2539  08B1  00F3               	movwf	___bmul@multiplier
  2540  08B2  01F2               	clrf	___bmul@product
  2541  08B3                     l1997:	
  2542  08B3  1C73               	btfss	___bmul@multiplier,0
  2543  08B4  28B9               	goto	l2001
  2544  08B5  0870               	movf	___bmul@multiplicand,w
  2545  08B6  00F1               	movwf	??___bmul
  2546  08B7  0871               	movf	??___bmul,w
  2547  08B8  07F2               	addwf	___bmul@product,f
  2548  08B9                     l2001:	
  2549  08B9  1003               	clrc
  2550  08BA  0DF0               	rlf	___bmul@multiplicand,f
  2551  08BB  1003               	clrc
  2552  08BC  0CF3               	rrf	___bmul@multiplier,f
  2553  08BD  0873               	movf	___bmul@multiplier,w
  2554  08BE  1D03               	btfss	3,2
  2555  08BF  28B3               	goto	l1997
  2556  08C0  0872               	movf	___bmul@product,w
  2557  08C1  0008               	return
  2558  08C2                     __end_of___bmul:	
  2559                           
  2560                           	psect	text5
  2561  024E                     __ptext5:	
  2562 ;; *************** function _display_temps_to_screen *****************
  2563 ;; Defined at:
  2564 ;;		line 746 in file "Main V4.1.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  fault_string   15   18[BANK3 ] unsigned char [15]
  2569 ;;  open_string    13   33[BANK3 ] unsigned char [13]
  2570 ;;  celsius_stri   12   46[BANK3 ] unsigned char [12]
  2571 ;;  shortgnd_str   11   69[BANK3 ] unsigned char [11]
  2572 ;;  shortvcc_str   11   58[BANK3 ] unsigned char [11]
  2573 ;;  sensor_three    6   12[BANK3 ] unsigned char [6]
  2574 ;;  sensor_two_s    6    6[BANK3 ] unsigned char [6]
  2575 ;;  sensor_one_s    6    0[BANK3 ] unsigned char [6]
  2576 ;;  working_regi    4   92[BANK3 ] long 
  2577 ;;  position        4   83[BANK3 ] int [2]
  2578 ;;  fault_string    1   91[BANK3 ] PTR unsigned char 
  2579 ;;		 -> display_temps_to_screen@fault_string(15), 
  2580 ;;  shortgnd_str    1   90[BANK3 ] PTR unsigned char 
  2581 ;;		 -> display_temps_to_screen@shortgnd_string(11), 
  2582 ;;  shortvcc_str    1   89[BANK3 ] PTR unsigned char 
  2583 ;;		 -> display_temps_to_screen@shortvcc_string(11), 
  2584 ;;  open_string_    1   88[BANK3 ] PTR unsigned char 
  2585 ;;		 -> display_temps_to_screen@open_string(13), 
  2586 ;;  celsius_stri    1   87[BANK3 ] PTR unsigned char 
  2587 ;;		 -> display_temps_to_screen@celsius_string(12), 
  2588 ;;  sensor_three    1   82[BANK3 ] PTR unsigned char 
  2589 ;;		 -> display_temps_to_screen@sensor_three_string(6), 
  2590 ;;  sensor_two_s    1   81[BANK3 ] PTR unsigned char 
  2591 ;;		 -> display_temps_to_screen@sensor_two_string(6), 
  2592 ;;  sensor_one_s    1   80[BANK3 ] PTR unsigned char 
  2593 ;;		 -> display_temps_to_screen@sensor_one_string(6), 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       0       0       0       0
  2604 ;;      Locals:         0       0       0      96       0
  2605 ;;      Temps:          0       4       0       0       0
  2606 ;;      Totals:         0       4       0      96       0
  2607 ;;Total ram usage:      100 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    3
  2610 ;; This function calls:
  2611 ;;		_LCDWriteCharacter
  2612 ;;		___altoft
  2613 ;;		___awtoft
  2614 ;;		___ftmul
  2615 ;;		___fttol
  2616 ;;		_char_to_decimal_print
  2617 ;;		_location
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _display_temps_to_screen
  2625  024E                     _display_temps_to_screen:	
  2626                           
  2627                           ;Main V4.1.c: 747: int position[2];
  2628                           ;Main V4.1.c: 748: long int working_register = 0;
  2629                           
  2630                           ;incstack = 0
  2631                           ; Regs used in _display_temps_to_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  2632  024E  3000               	movlw	0
  2633  024F  1683               	bsf	3,5	;RP0=1, select bank3
  2634  0250  1703               	bsf	3,6	;RP1=1, select bank3
  2635  0251  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  2636  0252  3000               	movlw	0
  2637  0253  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  2638  0254  3000               	movlw	0
  2639  0255  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  2640  0256  3000               	movlw	0
  2641  0257  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  2642                           
  2643                           ;Main V4.1.c: 749: char sensor_one_string [] = "S1 = ";
  2644  0258  3090               	movlw	display_temps_to_screen@sensor_one_string& (0+255)
  2645  0259  0084               	movwf	4
  2646  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2647  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2648  025C  0867               	movf	display_temps_to_screen@F1451,w
  2649  025D  1783               	bsf	3,7	;select IRP bank3
  2650  025E  0080               	movwf	0
  2651  025F  0A84               	incf	4,f
  2652  0260  0868               	movf	display_temps_to_screen@F1451+1,w
  2653  0261  0080               	movwf	0
  2654  0262  0A84               	incf	4,f
  2655  0263  0869               	movf	display_temps_to_screen@F1451+2,w
  2656  0264  0080               	movwf	0
  2657  0265  0A84               	incf	4,f
  2658  0266  086A               	movf	display_temps_to_screen@F1451+3,w
  2659  0267  0080               	movwf	0
  2660  0268  0A84               	incf	4,f
  2661  0269  086B               	movf	display_temps_to_screen@F1451+4,w
  2662  026A  0080               	movwf	0
  2663  026B  0A84               	incf	4,f
  2664  026C  086C               	movf	display_temps_to_screen@F1451+5,w
  2665  026D  0080               	movwf	0
  2666                           
  2667                           ;Main V4.1.c: 750: char *sensor_one_string_pointer;
  2668                           ;Main V4.1.c: 751: sensor_one_string_pointer = &sensor_one_string;
  2669  026E  3090               	movlw	(low (display_temps_to_screen@sensor_one_string| (0+256)))& (0+255)
  2670  026F  00C0               	movwf	??_display_temps_to_screen
  2671  0270  0840               	movf	??_display_temps_to_screen,w
  2672  0271  1683               	bsf	3,5	;RP0=1, select bank3
  2673  0272  1703               	bsf	3,6	;RP1=1, select bank3
  2674  0273  00E0               	movwf	display_temps_to_screen@sensor_one_string_pointer^(0+384)
  2675                           
  2676                           ;Main V4.1.c: 752: char sensor_two_string [] = "S2 = ";
  2677  0274  3096               	movlw	display_temps_to_screen@sensor_two_string& (0+255)
  2678  0275  0084               	movwf	4
  2679  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2680  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2681  0278  0868               	movf	display_temps_to_screen@F1454^(0+128),w
  2682  0279  0080               	movwf	0
  2683  027A  0A84               	incf	4,f
  2684  027B  0869               	movf	(display_temps_to_screen@F1454^(0+128)+1),w
  2685  027C  0080               	movwf	0
  2686  027D  0A84               	incf	4,f
  2687  027E  086A               	movf	(display_temps_to_screen@F1454^(0+128)+2),w
  2688  027F  0080               	movwf	0
  2689  0280  0A84               	incf	4,f
  2690  0281  086B               	movf	(display_temps_to_screen@F1454^(0+128)+3),w
  2691  0282  0080               	movwf	0
  2692  0283  0A84               	incf	4,f
  2693  0284  086C               	movf	(display_temps_to_screen@F1454^(0+128)+4),w
  2694  0285  0080               	movwf	0
  2695  0286  0A84               	incf	4,f
  2696  0287  086D               	movf	(display_temps_to_screen@F1454^(0+128)+5),w
  2697  0288  0080               	movwf	0
  2698                           
  2699                           ;Main V4.1.c: 753: char *sensor_two_string_pointer;
  2700                           ;Main V4.1.c: 754: sensor_two_string_pointer = &sensor_two_string;
  2701  0289  3096               	movlw	(low (display_temps_to_screen@sensor_two_string| (0+256)))& (0+255)
  2702  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2703  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2704  028C  00C0               	movwf	??_display_temps_to_screen
  2705  028D  0840               	movf	??_display_temps_to_screen,w
  2706  028E  1683               	bsf	3,5	;RP0=1, select bank3
  2707  028F  1703               	bsf	3,6	;RP1=1, select bank3
  2708  0290  00E1               	movwf	display_temps_to_screen@sensor_two_string_pointer^(0+384)
  2709                           
  2710                           ;Main V4.1.c: 755: char sensor_three_string [] = "S3 = ";
  2711  0291  309C               	movlw	display_temps_to_screen@sensor_three_string& (0+255)
  2712  0292  0084               	movwf	4
  2713  0293  1283               	bcf	3,5	;RP0=0, select bank2
  2714  0294  1703               	bsf	3,6	;RP1=1, select bank2
  2715  0295  085B               	movf	display_temps_to_screen@F1457^(0+256),w
  2716  0296  0080               	movwf	0
  2717  0297  0A84               	incf	4,f
  2718  0298  085C               	movf	(display_temps_to_screen@F1457^(0+256)+1),w
  2719  0299  0080               	movwf	0
  2720  029A  0A84               	incf	4,f
  2721  029B  085D               	movf	(display_temps_to_screen@F1457^(0+256)+2),w
  2722  029C  0080               	movwf	0
  2723  029D  0A84               	incf	4,f
  2724  029E  085E               	movf	(display_temps_to_screen@F1457^(0+256)+3),w
  2725  029F  0080               	movwf	0
  2726  02A0  0A84               	incf	4,f
  2727  02A1  085F               	movf	(display_temps_to_screen@F1457^(0+256)+4),w
  2728  02A2  0080               	movwf	0
  2729  02A3  0A84               	incf	4,f
  2730  02A4  0860               	movf	(display_temps_to_screen@F1457^(0+256)+5),w
  2731  02A5  0080               	movwf	0
  2732                           
  2733                           ;Main V4.1.c: 756: char *sensor_three_string_pointer;
  2734                           ;Main V4.1.c: 757: sensor_three_string_pointer = &sensor_three_string;
  2735  02A6  309C               	movlw	(low (display_temps_to_screen@sensor_three_string| (0+256)))& (0+255)
  2736  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2737  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2738  02A9  00C0               	movwf	??_display_temps_to_screen
  2739  02AA  0840               	movf	??_display_temps_to_screen,w
  2740  02AB  1683               	bsf	3,5	;RP0=1, select bank3
  2741  02AC  1703               	bsf	3,6	;RP1=1, select bank3
  2742  02AD  00E2               	movwf	display_temps_to_screen@sensor_three_string_pointer^(0+384)
  2743                           
  2744                           ;Main V4.1.c: 758: char celsius_string [] = " Celsius   ";
  2745  02AE  30BE               	movlw	display_temps_to_screen@celsius_string& (0+255)
  2746  02AF  0084               	movwf	4
  2747  02B0  3039               	movlw	low display_temps_to_screen@F1460
  2748  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2749  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2750  02B3  00C0               	movwf	??_display_temps_to_screen
  2751  02B4  0804               	movf	4,w
  2752  02B5  00C1               	movwf	??_display_temps_to_screen+1
  2753  02B6  300C               	movlw	12
  2754  02B7  00C2               	movwf	??_display_temps_to_screen+2
  2755  02B8                     u2080:	
  2756  02B8  0840               	movf	??_display_temps_to_screen,w
  2757  02B9  0084               	movwf	4
  2758  02BA  1783               	bsf	3,7	;select IRP bank2
  2759  02BB  0800               	movf	0,w
  2760  02BC  00C3               	movwf	??_display_temps_to_screen+3
  2761  02BD  0AC0               	incf	??_display_temps_to_screen,f
  2762  02BE  0841               	movf	??_display_temps_to_screen+1,w
  2763  02BF  0084               	movwf	4
  2764  02C0  0843               	movf	??_display_temps_to_screen+3,w
  2765  02C1  0080               	movwf	0
  2766  02C2  0AC1               	incf	??_display_temps_to_screen+1,f
  2767  02C3  0BC2               	decfsz	??_display_temps_to_screen+2,f
  2768  02C4  2AB8               	goto	u2080
  2769                           
  2770                           ;Main V4.1.c: 759: char *celsius_string_pointer;
  2771                           ;Main V4.1.c: 760: celsius_string_pointer = &celsius_string;
  2772  02C5  30BE               	movlw	(low (display_temps_to_screen@celsius_string| (0+256)))& (0+255)
  2773  02C6  00C0               	movwf	??_display_temps_to_screen
  2774  02C7  0840               	movf	??_display_temps_to_screen,w
  2775  02C8  1683               	bsf	3,5	;RP0=1, select bank3
  2776  02C9  1703               	bsf	3,6	;RP1=1, select bank3
  2777  02CA  00E7               	movwf	display_temps_to_screen@celsius_string_pointer^(0+384)
  2778                           
  2779                           ;Main V4.1.c: 761: char open_string [] = "OPEN        ";
  2780  02CB  30B1               	movlw	display_temps_to_screen@open_string& (0+255)
  2781  02CC  0084               	movwf	4
  2782  02CD  302C               	movlw	low display_temps_to_screen@F1463
  2783  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2784  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2785  02D0  00C0               	movwf	??_display_temps_to_screen
  2786  02D1  0804               	movf	4,w
  2787  02D2  00C1               	movwf	??_display_temps_to_screen+1
  2788  02D3  300D               	movlw	13
  2789  02D4  00C2               	movwf	??_display_temps_to_screen+2
  2790  02D5                     u2090:	
  2791  02D5  0840               	movf	??_display_temps_to_screen,w
  2792  02D6  0084               	movwf	4
  2793  02D7  1783               	bsf	3,7	;select IRP bank2
  2794  02D8  0800               	movf	0,w
  2795  02D9  00C3               	movwf	??_display_temps_to_screen+3
  2796  02DA  0AC0               	incf	??_display_temps_to_screen,f
  2797  02DB  0841               	movf	??_display_temps_to_screen+1,w
  2798  02DC  0084               	movwf	4
  2799  02DD  0843               	movf	??_display_temps_to_screen+3,w
  2800  02DE  0080               	movwf	0
  2801  02DF  0AC1               	incf	??_display_temps_to_screen+1,f
  2802  02E0  0BC2               	decfsz	??_display_temps_to_screen+2,f
  2803  02E1  2AD5               	goto	u2090
  2804                           
  2805                           ;Main V4.1.c: 762: char *open_string_pointer;
  2806                           ;Main V4.1.c: 763: open_string_pointer = &open_string;
  2807  02E2  30B1               	movlw	(low (display_temps_to_screen@open_string| (0+256)))& (0+255)
  2808  02E3  00C0               	movwf	??_display_temps_to_screen
  2809  02E4  0840               	movf	??_display_temps_to_screen,w
  2810  02E5  1683               	bsf	3,5	;RP0=1, select bank3
  2811  02E6  1703               	bsf	3,6	;RP1=1, select bank3
  2812  02E7  00E8               	movwf	display_temps_to_screen@open_string_pointer^(0+384)
  2813                           
  2814                           ;Main V4.1.c: 764: char shortvcc_string [] = "SHORT VCC ";
  2815  02E8  30CA               	movlw	display_temps_to_screen@shortvcc_string& (0+255)
  2816  02E9  0084               	movwf	4
  2817  02EA  3045               	movlw	low display_temps_to_screen@F1466
  2818  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2819  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2820  02ED  00C0               	movwf	??_display_temps_to_screen
  2821  02EE  0804               	movf	4,w
  2822  02EF  00C1               	movwf	??_display_temps_to_screen+1
  2823  02F0  300B               	movlw	11
  2824  02F1  00C2               	movwf	??_display_temps_to_screen+2
  2825  02F2                     u2100:	
  2826  02F2  0840               	movf	??_display_temps_to_screen,w
  2827  02F3  0084               	movwf	4
  2828  02F4  1783               	bsf	3,7	;select IRP bank2
  2829  02F5  0800               	movf	0,w
  2830  02F6  00C3               	movwf	??_display_temps_to_screen+3
  2831  02F7  0AC0               	incf	??_display_temps_to_screen,f
  2832  02F8  0841               	movf	??_display_temps_to_screen+1,w
  2833  02F9  0084               	movwf	4
  2834  02FA  0843               	movf	??_display_temps_to_screen+3,w
  2835  02FB  0080               	movwf	0
  2836  02FC  0AC1               	incf	??_display_temps_to_screen+1,f
  2837  02FD  0BC2               	decfsz	??_display_temps_to_screen+2,f
  2838  02FE  2AF2               	goto	u2100
  2839                           
  2840                           ;Main V4.1.c: 765: char *shortvcc_string_pointer;
  2841                           ;Main V4.1.c: 766: shortvcc_string_pointer = &shortvcc_string;
  2842  02FF  30CA               	movlw	(low (display_temps_to_screen@shortvcc_string| (0+256)))& (0+255)
  2843  0300  00C0               	movwf	??_display_temps_to_screen
  2844  0301  0840               	movf	??_display_temps_to_screen,w
  2845  0302  1683               	bsf	3,5	;RP0=1, select bank3
  2846  0303  1703               	bsf	3,6	;RP1=1, select bank3
  2847  0304  00E9               	movwf	display_temps_to_screen@shortvcc_string_pointer^(0+384)
  2848                           
  2849                           ;Main V4.1.c: 767: char shortgnd_string [] = "SHORT GND ";
  2850  0305  30D5               	movlw	display_temps_to_screen@shortgnd_string& (0+255)
  2851  0306  0084               	movwf	4
  2852  0307  3050               	movlw	low display_temps_to_screen@F1469
  2853  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2855  030A  00C0               	movwf	??_display_temps_to_screen
  2856  030B  0804               	movf	4,w
  2857  030C  00C1               	movwf	??_display_temps_to_screen+1
  2858  030D  300B               	movlw	11
  2859  030E  00C2               	movwf	??_display_temps_to_screen+2
  2860  030F                     u2110:	
  2861  030F  0840               	movf	??_display_temps_to_screen,w
  2862  0310  0084               	movwf	4
  2863  0311  1783               	bsf	3,7	;select IRP bank2
  2864  0312  0800               	movf	0,w
  2865  0313  00C3               	movwf	??_display_temps_to_screen+3
  2866  0314  0AC0               	incf	??_display_temps_to_screen,f
  2867  0315  0841               	movf	??_display_temps_to_screen+1,w
  2868  0316  0084               	movwf	4
  2869  0317  0843               	movf	??_display_temps_to_screen+3,w
  2870  0318  0080               	movwf	0
  2871  0319  0AC1               	incf	??_display_temps_to_screen+1,f
  2872  031A  0BC2               	decfsz	??_display_temps_to_screen+2,f
  2873  031B  2B0F               	goto	u2110
  2874                           
  2875                           ;Main V4.1.c: 768: char *shortgnd_string_pointer;
  2876                           ;Main V4.1.c: 769: shortgnd_string_pointer = &shortgnd_string;
  2877  031C  30D5               	movlw	(low (display_temps_to_screen@shortgnd_string| (0+256)))& (0+255)
  2878  031D  00C0               	movwf	??_display_temps_to_screen
  2879  031E  0840               	movf	??_display_temps_to_screen,w
  2880  031F  1683               	bsf	3,5	;RP0=1, select bank3
  2881  0320  1703               	bsf	3,6	;RP1=1, select bank3
  2882  0321  00EA               	movwf	display_temps_to_screen@shortgnd_string_pointer^(0+384)
  2883                           
  2884                           ;Main V4.1.c: 770: char fault_string [] = "FAULT         ";
  2885  0322  30A2               	movlw	display_temps_to_screen@fault_string& (0+255)
  2886  0323  0084               	movwf	4
  2887  0324  3010               	movlw	low display_temps_to_screen@F1472
  2888  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0327  00C0               	movwf	??_display_temps_to_screen
  2891  0328  0804               	movf	4,w
  2892  0329  00C1               	movwf	??_display_temps_to_screen+1
  2893  032A  300F               	movlw	15
  2894  032B  00C2               	movwf	??_display_temps_to_screen+2
  2895  032C                     u2120:	
  2896  032C  0840               	movf	??_display_temps_to_screen,w
  2897  032D  0084               	movwf	4
  2898  032E  1783               	bsf	3,7	;select IRP bank2
  2899  032F  0800               	movf	0,w
  2900  0330  00C3               	movwf	??_display_temps_to_screen+3
  2901  0331  0AC0               	incf	??_display_temps_to_screen,f
  2902  0332  0841               	movf	??_display_temps_to_screen+1,w
  2903  0333  0084               	movwf	4
  2904  0334  0843               	movf	??_display_temps_to_screen+3,w
  2905  0335  0080               	movwf	0
  2906  0336  0AC1               	incf	??_display_temps_to_screen+1,f
  2907  0337  0BC2               	decfsz	??_display_temps_to_screen+2,f
  2908  0338  2B2C               	goto	u2120
  2909                           
  2910                           ;Main V4.1.c: 771: char *fault_string_pointer;
  2911                           ;Main V4.1.c: 772: fault_string_pointer = &fault_string;
  2912  0339  30A2               	movlw	(low (display_temps_to_screen@fault_string| (0+256)))& (0+255)
  2913  033A  00C0               	movwf	??_display_temps_to_screen
  2914  033B  0840               	movf	??_display_temps_to_screen,w
  2915  033C  1683               	bsf	3,5	;RP0=1, select bank3
  2916  033D  1703               	bsf	3,6	;RP1=1, select bank3
  2917  033E  00EB               	movwf	display_temps_to_screen@fault_string_pointer^(0+384)
  2918                           
  2919                           ;Main V4.1.c: 775: position[0] = 0;
  2920  033F  01E3               	clrf	display_temps_to_screen@position^(0+384)
  2921  0340  01E4               	clrf	(display_temps_to_screen@position+1)^(0+384)
  2922                           
  2923                           ;Main V4.1.c: 776: position[1] = 24;
  2924  0341  3018               	movlw	24
  2925  0342  00E5               	movwf	(display_temps_to_screen@position^(0+384)+2)
  2926  0343  3000               	movlw	0
  2927  0344  00E6               	movwf	(display_temps_to_screen@position^(0+384)+3)
  2928                           
  2929                           ;Main V4.1.c: 777: location(position);
  2930  0345  30E3               	movlw	(low (display_temps_to_screen@position| (0+256)))& (0+255)
  2931  0346  00F3               	movwf	location@position
  2932  0347  3001               	movlw	1
  2933  0348  00F4               	movwf	location@position+1
  2934  0349  120A  158A  251D  120A  118A  	fcall	_location
  2935  034E                     l2311:	
  2936                           ;Main V4.1.c: 778: while (*sensor_one_string_pointer != 0){
  2937                           
  2938  034E  1683               	bsf	3,5	;RP0=1, select bank3
  2939  034F  1703               	bsf	3,6	;RP1=1, select bank3
  2940  0350  0860               	movf	display_temps_to_screen@sensor_one_string_pointer^(0+384),w
  2941  0351  0084               	movwf	4
  2942  0352  1783               	bsf	3,7	;select IRP bank2
  2943  0353  0800               	movf	0,w
  2944  0354  1903               	btfsc	3,2
  2945  0355  2B6A               	goto	l2313
  2946                           
  2947                           ;Main V4.1.c: 779: LCDWriteCharacter(*sensor_one_string_pointer);
  2948  0356  1683               	bsf	3,5	;RP0=1, select bank3
  2949  0357  1703               	bsf	3,6	;RP1=1, select bank3
  2950  0358  0860               	movf	display_temps_to_screen@sensor_one_string_pointer^(0+384),w
  2951  0359  0084               	movwf	4
  2952  035A  1783               	bsf	3,7	;select IRP bank2
  2953  035B  0800               	movf	0,w
  2954  035C  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  2955                           
  2956                           ;Main V4.1.c: 780: sensor_one_string_pointer++;
  2957  0361  3001               	movlw	1
  2958  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0364  00C0               	movwf	??_display_temps_to_screen
  2961  0365  0840               	movf	??_display_temps_to_screen,w
  2962  0366  1683               	bsf	3,5	;RP0=1, select bank3
  2963  0367  1703               	bsf	3,6	;RP1=1, select bank3
  2964  0368  07E0               	addwf	display_temps_to_screen@sensor_one_string_pointer^(0+384),f
  2965  0369  2B4E               	goto	l2311
  2966  036A                     l2313:	
  2967                           
  2968                           ;Main V4.1.c: 781: }
  2969                           ;Main V4.1.c: 782: if (thermocouple_temp[1][2] == 1){
  2970  036A  1683               	bsf	3,5	;RP0=1, select bank1
  2971  036B  1303               	bcf	3,6	;RP1=0, select bank1
  2972  036C  032A               	decf	(_thermocouple_temp^(0+128)+10),w
  2973  036D  042B               	iorwf	((_thermocouple_temp+1)^(0+128)+10),w
  2974  036E  1903               	btfsc	3,2
  2975  036F  2B83               	goto	l2321
  2976  0370  2B94               	goto	l2325
  2977  0371                     l2317:	
  2978                           ;Main V4.1.c: 783: while (*open_string_pointer != 0){
  2979                           
  2980                           
  2981                           ;Main V4.1.c: 784: LCDWriteCharacter(*open_string_pointer);
  2982  0371  1683               	bsf	3,5	;RP0=1, select bank3
  2983  0372  1703               	bsf	3,6	;RP1=1, select bank3
  2984  0373  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  2985  0374  0084               	movwf	4
  2986  0375  0800               	movf	0,w
  2987  0376  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  2988                           
  2989                           ;Main V4.1.c: 785: open_string_pointer++;
  2990  037B  3001               	movlw	1
  2991  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2992  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2993  037E  00C0               	movwf	??_display_temps_to_screen
  2994  037F  0840               	movf	??_display_temps_to_screen,w
  2995  0380  1683               	bsf	3,5	;RP0=1, select bank3
  2996  0381  1703               	bsf	3,6	;RP1=1, select bank3
  2997  0382  07E8               	addwf	display_temps_to_screen@open_string_pointer^(0+384),f
  2998  0383                     l2321:	
  2999  0383  1683               	bsf	3,5	;RP0=1, select bank3
  3000  0384  1703               	bsf	3,6	;RP1=1, select bank3
  3001  0385  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  3002  0386  0084               	movwf	4
  3003  0387  1783               	bsf	3,7	;select IRP bank2
  3004  0388  0800               	movf	0,w
  3005  0389  1D03               	btfss	3,2
  3006  038A  2B71               	goto	l2317
  3007                           
  3008                           ;Main V4.1.c: 786: }
  3009                           ;Main V4.1.c: 787: open_string_pointer = &open_string;
  3010  038B  30B1               	movlw	(low (display_temps_to_screen@open_string| (0+256)))& (0+255)
  3011  038C  1283               	bcf	3,5	;RP0=0, select bank0
  3012  038D  1303               	bcf	3,6	;RP1=0, select bank0
  3013  038E  00C0               	movwf	??_display_temps_to_screen
  3014  038F  0840               	movf	??_display_temps_to_screen,w
  3015  0390  1683               	bsf	3,5	;RP0=1, select bank3
  3016  0391  1703               	bsf	3,6	;RP1=1, select bank3
  3017  0392  00E8               	movwf	display_temps_to_screen@open_string_pointer^(0+384)
  3018                           
  3019                           ;Main V4.1.c: 788: }
  3020  0393  2D38               	goto	l2387
  3021  0394                     l2325:	
  3022                           
  3023                           ;Main V4.1.c: 789: else if (thermocouple_temp[1][2] == 4){
  3024  0394  3004               	movlw	4
  3025  0395  1303               	bcf	3,6	;RP1=0, select bank1
  3026  0396  062A               	xorwf	(_thermocouple_temp^(0+128)+10),w
  3027  0397  042B               	iorwf	((_thermocouple_temp+1)^(0+128)+10),w
  3028  0398  1903               	btfsc	3,2
  3029  0399  2BAD               	goto	l2333
  3030  039A  2BBE               	goto	l2337
  3031  039B                     l2329:	
  3032                           ;Main V4.1.c: 790: while (*shortvcc_string_pointer != 0){
  3033                           
  3034                           
  3035                           ;Main V4.1.c: 791: LCDWriteCharacter(*shortvcc_string_pointer);
  3036  039B  1683               	bsf	3,5	;RP0=1, select bank3
  3037  039C  1703               	bsf	3,6	;RP1=1, select bank3
  3038  039D  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  3039  039E  0084               	movwf	4
  3040  039F  0800               	movf	0,w
  3041  03A0  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3042                           
  3043                           ;Main V4.1.c: 792: shortvcc_string_pointer++;
  3044  03A5  3001               	movlw	1
  3045  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3046  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  3047  03A8  00C0               	movwf	??_display_temps_to_screen
  3048  03A9  0840               	movf	??_display_temps_to_screen,w
  3049  03AA  1683               	bsf	3,5	;RP0=1, select bank3
  3050  03AB  1703               	bsf	3,6	;RP1=1, select bank3
  3051  03AC  07E9               	addwf	display_temps_to_screen@shortvcc_string_pointer^(0+384),f
  3052  03AD                     l2333:	
  3053  03AD  1683               	bsf	3,5	;RP0=1, select bank3
  3054  03AE  1703               	bsf	3,6	;RP1=1, select bank3
  3055  03AF  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  3056  03B0  0084               	movwf	4
  3057  03B1  1783               	bsf	3,7	;select IRP bank2
  3058  03B2  0800               	movf	0,w
  3059  03B3  1D03               	btfss	3,2
  3060  03B4  2B9B               	goto	l2329
  3061                           
  3062                           ;Main V4.1.c: 793: }
  3063                           ;Main V4.1.c: 794: shortvcc_string_pointer = &shortvcc_string;
  3064  03B5  30CA               	movlw	(low (display_temps_to_screen@shortvcc_string| (0+256)))& (0+255)
  3065  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  3066  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  3067  03B8  00C0               	movwf	??_display_temps_to_screen
  3068  03B9  0840               	movf	??_display_temps_to_screen,w
  3069  03BA  1683               	bsf	3,5	;RP0=1, select bank3
  3070  03BB  1703               	bsf	3,6	;RP1=1, select bank3
  3071  03BC  00E9               	movwf	display_temps_to_screen@shortvcc_string_pointer^(0+384)
  3072                           
  3073                           ;Main V4.1.c: 795: }
  3074  03BD  2D38               	goto	l2387
  3075  03BE                     l2337:	
  3076                           
  3077                           ;Main V4.1.c: 796: else if (thermocouple_temp[1][2] == 2){
  3078  03BE  3002               	movlw	2
  3079  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  3080  03C0  062A               	xorwf	(_thermocouple_temp^(0+128)+10),w
  3081  03C1  042B               	iorwf	((_thermocouple_temp+1)^(0+128)+10),w
  3082  03C2  1903               	btfsc	3,2
  3083  03C3  2BD7               	goto	l2345
  3084  03C4  2BE8               	goto	l2349
  3085  03C5                     l2341:	
  3086                           ;Main V4.1.c: 797: while (*shortgnd_string_pointer != 0){
  3087                           
  3088                           
  3089                           ;Main V4.1.c: 798: LCDWriteCharacter(*shortgnd_string_pointer);
  3090  03C5  1683               	bsf	3,5	;RP0=1, select bank3
  3091  03C6  1703               	bsf	3,6	;RP1=1, select bank3
  3092  03C7  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  3093  03C8  0084               	movwf	4
  3094  03C9  0800               	movf	0,w
  3095  03CA  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3096                           
  3097                           ;Main V4.1.c: 799: shortgnd_string_pointer++;
  3098  03CF  3001               	movlw	1
  3099  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  3100  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  3101  03D2  00C0               	movwf	??_display_temps_to_screen
  3102  03D3  0840               	movf	??_display_temps_to_screen,w
  3103  03D4  1683               	bsf	3,5	;RP0=1, select bank3
  3104  03D5  1703               	bsf	3,6	;RP1=1, select bank3
  3105  03D6  07EA               	addwf	display_temps_to_screen@shortgnd_string_pointer^(0+384),f
  3106  03D7                     l2345:	
  3107  03D7  1683               	bsf	3,5	;RP0=1, select bank3
  3108  03D8  1703               	bsf	3,6	;RP1=1, select bank3
  3109  03D9  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  3110  03DA  0084               	movwf	4
  3111  03DB  1783               	bsf	3,7	;select IRP bank2
  3112  03DC  0800               	movf	0,w
  3113  03DD  1D03               	btfss	3,2
  3114  03DE  2BC5               	goto	l2341
  3115                           
  3116                           ;Main V4.1.c: 800: }
  3117                           ;Main V4.1.c: 801: shortgnd_string_pointer = &shortgnd_string;
  3118  03DF  30D5               	movlw	(low (display_temps_to_screen@shortgnd_string| (0+256)))& (0+255)
  3119  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3120  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  3121  03E2  00C0               	movwf	??_display_temps_to_screen
  3122  03E3  0840               	movf	??_display_temps_to_screen,w
  3123  03E4  1683               	bsf	3,5	;RP0=1, select bank3
  3124  03E5  1703               	bsf	3,6	;RP1=1, select bank3
  3125  03E6  00EA               	movwf	display_temps_to_screen@shortgnd_string_pointer^(0+384)
  3126                           
  3127                           ;Main V4.1.c: 802: }
  3128  03E7  2D38               	goto	l2387
  3129  03E8                     l2349:	
  3130                           
  3131                           ;Main V4.1.c: 803: else if (thermocouple_temp[1][2] > 4){
  3132  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  3133  03E9  082B               	movf	((_thermocouple_temp+1)^(0+128)+10),w
  3134  03EA  3A80               	xorlw	128
  3135  03EB  00FF               	movwf	127
  3136  03EC  3080               	movlw	128
  3137  03ED  027F               	subwf	127,w
  3138  03EE  1D03               	skipz
  3139  03EF  2BF2               	goto	u2205
  3140  03F0  3005               	movlw	5
  3141  03F1  022A               	subwf	(_thermocouple_temp^(0+128)+10),w
  3142  03F2                     u2205:	
  3143  03F2  1803               	btfsc	3,0
  3144  03F3  2C08               	goto	l2357
  3145  03F4  2C19               	goto	l2361
  3146  03F5                     l2353:	
  3147                           ;Main V4.1.c: 804: while (*fault_string_pointer != 0){
  3148                           
  3149                           
  3150                           ;Main V4.1.c: 805: LCDWriteCharacter(*fault_string_pointer);
  3151  03F5  1683               	bsf	3,5	;RP0=1, select bank3
  3152  03F6  1703               	bsf	3,6	;RP1=1, select bank3
  3153  03F7  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  3154  03F8  0084               	movwf	4
  3155  03F9  1783               	bsf	3,7	;select IRP bank2
  3156  03FA  0800               	movf	0,w
  3157  03FB  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3158                           
  3159                           ;Main V4.1.c: 806: fault_string_pointer++;
  3160  0400  3001               	movlw	1
  3161  0401  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0402  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0403  00C0               	movwf	??_display_temps_to_screen
  3164  0404  0840               	movf	??_display_temps_to_screen,w
  3165  0405  1683               	bsf	3,5	;RP0=1, select bank3
  3166  0406  1703               	bsf	3,6	;RP1=1, select bank3
  3167  0407  07EB               	addwf	display_temps_to_screen@fault_string_pointer^(0+384),f
  3168  0408                     l2357:	
  3169  0408  1683               	bsf	3,5	;RP0=1, select bank3
  3170  0409  1703               	bsf	3,6	;RP1=1, select bank3
  3171  040A  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  3172  040B  0084               	movwf	4
  3173  040C  1783               	bsf	3,7	;select IRP bank2
  3174  040D  0800               	movf	0,w
  3175  040E  1D03               	btfss	3,2
  3176  040F  2BF5               	goto	l2353
  3177                           
  3178                           ;Main V4.1.c: 807: }
  3179                           ;Main V4.1.c: 808: fault_string_pointer = &fault_string;
  3180  0410  30A2               	movlw	(low (display_temps_to_screen@fault_string| (0+256)))& (0+255)
  3181  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0413  00C0               	movwf	??_display_temps_to_screen
  3184  0414  0840               	movf	??_display_temps_to_screen,w
  3185  0415  1683               	bsf	3,5	;RP0=1, select bank3
  3186  0416  1703               	bsf	3,6	;RP1=1, select bank3
  3187  0417  00EB               	movwf	display_temps_to_screen@fault_string_pointer^(0+384)
  3188                           
  3189                           ;Main V4.1.c: 809: }
  3190  0418  2D38               	goto	l2387
  3191  0419                     l2361:	
  3192                           
  3193                           ;Main V4.1.c: 821: else{
  3194                           ;Main V4.1.c: 822: working_register = (thermocouple_temp[1][0]) & 0x2000;
  3195  0419  3000               	movlw	0
  3196  041A  1683               	bsf	3,5	;RP0=1, select bank1
  3197  041B  1303               	bcf	3,6	;RP1=0, select bank1
  3198  041C  0526               	andwf	(_thermocouple_temp^(0+128)+6),w
  3199  041D  1683               	bsf	3,5	;RP0=1, select bank3
  3200  041E  1703               	bsf	3,6	;RP1=1, select bank3
  3201  041F  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3202  0420  3020               	movlw	32
  3203  0421  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0422  1303               	bcf	3,6	;RP1=0, select bank1
  3205  0423  0527               	andwf	((_thermocouple_temp+1)^(0+128)+6),w
  3206  0424  1683               	bsf	3,5	;RP0=1, select bank3
  3207  0425  1703               	bsf	3,6	;RP1=1, select bank3
  3208  0426  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3209  0427  01EE               	clrf	(display_temps_to_screen@working_register^(0+384)+2)
  3210  0428  1BED               	btfsc	(display_temps_to_screen@working_register^(0+384)+1),7
  3211  0429  03EE               	decf	(display_temps_to_screen@working_register+2)^(0+384),f
  3212  042A  086E               	movf	(display_temps_to_screen@working_register^(0+384)+2),w
  3213  042B  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3214                           
  3215                           ;Main V4.1.c: 823: if ((working_register == 0x2000)){
  3216  042C  3020               	movlw	32
  3217  042D  066D               	xorwf	(display_temps_to_screen@working_register+1)^(0+384),w
  3218  042E  046C               	iorwf	display_temps_to_screen@working_register^(0+384),w
  3219  042F  046E               	iorwf	(display_temps_to_screen@working_register+2)^(0+384),w
  3220  0430  046F               	iorwf	(display_temps_to_screen@working_register+3)^(0+384),w
  3221  0431  1D03               	btfss	3,2
  3222  0432  2CC8               	goto	l2375
  3223                           
  3224                           ;Main V4.1.c: 824: working_register = thermocouple_temp[1][0] & 0x1FFF;
  3225  0433  30FF               	movlw	255
  3226  0434  1683               	bsf	3,5	;RP0=1, select bank1
  3227  0435  1303               	bcf	3,6	;RP1=0, select bank1
  3228  0436  0526               	andwf	(_thermocouple_temp^(0+128)+6),w
  3229  0437  1683               	bsf	3,5	;RP0=1, select bank3
  3230  0438  1703               	bsf	3,6	;RP1=1, select bank3
  3231  0439  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3232  043A  301F               	movlw	31
  3233  043B  1683               	bsf	3,5	;RP0=1, select bank1
  3234  043C  1303               	bcf	3,6	;RP1=0, select bank1
  3235  043D  0527               	andwf	((_thermocouple_temp+1)^(0+128)+6),w
  3236  043E  1683               	bsf	3,5	;RP0=1, select bank3
  3237  043F  1703               	bsf	3,6	;RP1=1, select bank3
  3238  0440  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3239  0441  01EE               	clrf	(display_temps_to_screen@working_register^(0+384)+2)
  3240  0442  1BED               	btfsc	(display_temps_to_screen@working_register^(0+384)+1),7
  3241  0443  03EE               	decf	(display_temps_to_screen@working_register+2)^(0+384),f
  3242  0444  086E               	movf	(display_temps_to_screen@working_register^(0+384)+2),w
  3243  0445  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3244                           
  3245                           ;Main V4.1.c: 826: working_register = ~ working_register;
  3246  0446  09EC               	comf	display_temps_to_screen@working_register^(0+384),f
  3247  0447  09ED               	comf	(display_temps_to_screen@working_register+1)^(0+384),f
  3248  0448  09EE               	comf	(display_temps_to_screen@working_register+2)^(0+384),f
  3249  0449  09EF               	comf	(display_temps_to_screen@working_register+3)^(0+384),f
  3250                           
  3251                           ;Main V4.1.c: 827: working_register = working_register & 0x0FFF;
  3252  044A  30FF               	movlw	255
  3253  044B  056C               	andwf	display_temps_to_screen@working_register^(0+384),w
  3254  044C  1283               	bcf	3,5	;RP0=0, select bank0
  3255  044D  1303               	bcf	3,6	;RP1=0, select bank0
  3256  044E  00C0               	movwf	??_display_temps_to_screen
  3257  044F  300F               	movlw	15
  3258  0450  1683               	bsf	3,5	;RP0=1, select bank3
  3259  0451  1703               	bsf	3,6	;RP1=1, select bank3
  3260  0452  056D               	andwf	(display_temps_to_screen@working_register+1)^(0+384),w
  3261  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3263  0455  00C1               	movwf	??_display_temps_to_screen+1
  3264  0456  3000               	movlw	0
  3265  0457  1683               	bsf	3,5	;RP0=1, select bank3
  3266  0458  1703               	bsf	3,6	;RP1=1, select bank3
  3267  0459  056E               	andwf	(display_temps_to_screen@working_register+2)^(0+384),w
  3268  045A  1283               	bcf	3,5	;RP0=0, select bank0
  3269  045B  1303               	bcf	3,6	;RP1=0, select bank0
  3270  045C  00C2               	movwf	??_display_temps_to_screen+2
  3271  045D  3000               	movlw	0
  3272  045E  1683               	bsf	3,5	;RP0=1, select bank3
  3273  045F  1703               	bsf	3,6	;RP1=1, select bank3
  3274  0460  056F               	andwf	(display_temps_to_screen@working_register+3)^(0+384),w
  3275  0461  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0462  1303               	bcf	3,6	;RP1=0, select bank0
  3277  0463  00C3               	movwf	??_display_temps_to_screen+3
  3278  0464  0843               	movf	??_display_temps_to_screen+3,w
  3279  0465  1683               	bsf	3,5	;RP0=1, select bank3
  3280  0466  1703               	bsf	3,6	;RP1=1, select bank3
  3281  0467  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3282  0468  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0469  1303               	bcf	3,6	;RP1=0, select bank0
  3284  046A  0842               	movf	??_display_temps_to_screen+2,w
  3285  046B  1683               	bsf	3,5	;RP0=1, select bank3
  3286  046C  1703               	bsf	3,6	;RP1=1, select bank3
  3287  046D  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  3288  046E  1283               	bcf	3,5	;RP0=0, select bank0
  3289  046F  1303               	bcf	3,6	;RP1=0, select bank0
  3290  0470  0841               	movf	??_display_temps_to_screen+1,w
  3291  0471  1683               	bsf	3,5	;RP0=1, select bank3
  3292  0472  1703               	bsf	3,6	;RP1=1, select bank3
  3293  0473  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3294  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3296  0476  0840               	movf	??_display_temps_to_screen,w
  3297  0477  1683               	bsf	3,5	;RP0=1, select bank3
  3298  0478  1703               	bsf	3,6	;RP1=1, select bank3
  3299  0479  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3300                           
  3301                           ;Main V4.1.c: 828: working_register = working_register * .25;
  3302  047A  086F               	movf	(display_temps_to_screen@working_register+3)^(0+384),w
  3303  047B  00FB               	movwf	___altoft@c+3
  3304  047C  086E               	movf	(display_temps_to_screen@working_register+2)^(0+384),w
  3305  047D  00FA               	movwf	___altoft@c+2
  3306  047E  086D               	movf	(display_temps_to_screen@working_register+1)^(0+384),w
  3307  047F  00F9               	movwf	___altoft@c+1
  3308  0480  086C               	movf	display_temps_to_screen@working_register^(0+384),w
  3309  0481  00F8               	movwf	___altoft@c
  3310  0482  120A  158A  21CB  120A  118A  	fcall	___altoft
  3311  0487  0878               	movf	?___altoft,w
  3312  0488  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0489  1303               	bcf	3,6	;RP1=0, select bank0
  3314  048A  00A5               	movwf	___ftmul@f2
  3315  048B  0879               	movf	?___altoft+1,w
  3316  048C  00A6               	movwf	___ftmul@f2+1
  3317  048D  087A               	movf	?___altoft+2,w
  3318  048E  00A7               	movwf	___ftmul@f2+2
  3319  048F  3000               	movlw	0
  3320  0490  00A2               	movwf	___ftmul@f1
  3321  0491  3080               	movlw	128
  3322  0492  00A3               	movwf	___ftmul@f1+1
  3323  0493  303E               	movlw	62
  3324  0494  00A4               	movwf	___ftmul@f1+2
  3325  0495  120A  158A  25C2  120A  118A  	fcall	___ftmul
  3326  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3327  049B  1303               	bcf	3,6	;RP1=0, select bank0
  3328  049C  0822               	movf	?___ftmul,w
  3329  049D  00B2               	movwf	___fttol@f1
  3330  049E  0823               	movf	?___ftmul+1,w
  3331  049F  00B3               	movwf	___fttol@f1+1
  3332  04A0  0824               	movf	?___ftmul+2,w
  3333  04A1  00B4               	movwf	___fttol@f1+2
  3334  04A2  120A  158A  23FC  120A  118A  	fcall	___fttol
  3335  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3336  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  3337  04A9  0835               	movf	?___fttol+3,w
  3338  04AA  1683               	bsf	3,5	;RP0=1, select bank3
  3339  04AB  1703               	bsf	3,6	;RP1=1, select bank3
  3340  04AC  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3341  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  3342  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  3343  04AF  0834               	movf	?___fttol+2,w
  3344  04B0  1683               	bsf	3,5	;RP0=1, select bank3
  3345  04B1  1703               	bsf	3,6	;RP1=1, select bank3
  3346  04B2  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  3347  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3348  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  3349  04B5  0833               	movf	?___fttol+1,w
  3350  04B6  1683               	bsf	3,5	;RP0=1, select bank3
  3351  04B7  1703               	bsf	3,6	;RP1=1, select bank3
  3352  04B8  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3353  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3354  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3355  04BB  0832               	movf	?___fttol,w
  3356  04BC  1683               	bsf	3,5	;RP0=1, select bank3
  3357  04BD  1703               	bsf	3,6	;RP1=1, select bank3
  3358  04BE  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3359                           
  3360                           ;Main V4.1.c: 829: LCDWriteCharacter('-');
  3361  04BF  302D               	movlw	45
  3362  04C0  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3363                           
  3364                           ;Main V4.1.c: 830: char_to_decimal_print(working_register);
  3365  04C5  1683               	bsf	3,5	;RP0=1, select bank3
  3366  04C6  1703               	bsf	3,6	;RP1=1, select bank3
  3367  04C7  2D0B               	goto	L1
  3368  04C8                     l2375:	
  3369                           ;Main V4.1.c: 831: }
  3370                           
  3371                           
  3372                           ;Main V4.1.c: 832: else{
  3373                           ;Main V4.1.c: 833: working_register = (thermocouple_temp[1][0]) * .25;
  3374  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  3375  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  3376  04CA  0827               	movf	((_thermocouple_temp+1)^(0+128)+6),w
  3377  04CB  00F9               	movwf	___awtoft@c+1
  3378  04CC  0826               	movf	(_thermocouple_temp^(0+128)+6),w
  3379  04CD  00F8               	movwf	___awtoft@c
  3380  04CE  120A  158A  211C  120A  118A  	fcall	___awtoft
  3381  04D3  0878               	movf	?___awtoft,w
  3382  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  3383  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  3384  04D6  00A5               	movwf	___ftmul@f2
  3385  04D7  0879               	movf	?___awtoft+1,w
  3386  04D8  00A6               	movwf	___ftmul@f2+1
  3387  04D9  087A               	movf	?___awtoft+2,w
  3388  04DA  00A7               	movwf	___ftmul@f2+2
  3389  04DB  3000               	movlw	0
  3390  04DC  00A2               	movwf	___ftmul@f1
  3391  04DD  3080               	movlw	128
  3392  04DE  00A3               	movwf	___ftmul@f1+1
  3393  04DF  303E               	movlw	62
  3394  04E0  00A4               	movwf	___ftmul@f1+2
  3395  04E1  120A  158A  25C2  120A  118A  	fcall	___ftmul
  3396  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  3397  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  3398  04E8  0822               	movf	?___ftmul,w
  3399  04E9  00B2               	movwf	___fttol@f1
  3400  04EA  0823               	movf	?___ftmul+1,w
  3401  04EB  00B3               	movwf	___fttol@f1+1
  3402  04EC  0824               	movf	?___ftmul+2,w
  3403  04ED  00B4               	movwf	___fttol@f1+2
  3404  04EE  120A  158A  23FC  120A  118A  	fcall	___fttol
  3405  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  3406  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  3407  04F5  0835               	movf	?___fttol+3,w
  3408  04F6  1683               	bsf	3,5	;RP0=1, select bank3
  3409  04F7  1703               	bsf	3,6	;RP1=1, select bank3
  3410  04F8  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3411  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  3412  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  3413  04FB  0834               	movf	?___fttol+2,w
  3414  04FC  1683               	bsf	3,5	;RP0=1, select bank3
  3415  04FD  1703               	bsf	3,6	;RP1=1, select bank3
  3416  04FE  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  3417  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3418  0500  1303               	bcf	3,6	;RP1=0, select bank0
  3419  0501  0833               	movf	?___fttol+1,w
  3420  0502  1683               	bsf	3,5	;RP0=1, select bank3
  3421  0503  1703               	bsf	3,6	;RP1=1, select bank3
  3422  0504  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3423  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0506  1303               	bcf	3,6	;RP1=0, select bank0
  3425  0507  0832               	movf	?___fttol,w
  3426  0508  1683               	bsf	3,5	;RP0=1, select bank3
  3427  0509  1703               	bsf	3,6	;RP1=1, select bank3
  3428  050A  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3429  050B                     L1:	
  3430                           
  3431                           ;Main V4.1.c: 834: char_to_decimal_print(working_register);
  3432  050B  086D               	movf	(display_temps_to_screen@working_register+1)^(0+384),w
  3433  050C  00F9               	movwf	char_to_decimal_print@value+1
  3434  050D  086C               	movf	display_temps_to_screen@working_register^(0+384),w
  3435  050E  00F8               	movwf	char_to_decimal_print@value
  3436  050F  120A  118A  2013  120A  118A  	fcall	_char_to_decimal_print
  3437  0514                     l2383:	
  3438                           ;Main V4.1.c: 835: }
  3439                           ;Main V4.1.c: 836: while (*celsius_string_pointer != 0){
  3440                           
  3441  0514  1683               	bsf	3,5	;RP0=1, select bank3
  3442  0515  1703               	bsf	3,6	;RP1=1, select bank3
  3443  0516  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  3444  0517  0084               	movwf	4
  3445  0518  1783               	bsf	3,7	;select IRP bank2
  3446  0519  0800               	movf	0,w
  3447  051A  1903               	btfsc	3,2
  3448  051B  2D30               	goto	l2385
  3449                           
  3450                           ;Main V4.1.c: 837: LCDWriteCharacter(*celsius_string_pointer);
  3451  051C  1683               	bsf	3,5	;RP0=1, select bank3
  3452  051D  1703               	bsf	3,6	;RP1=1, select bank3
  3453  051E  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  3454  051F  0084               	movwf	4
  3455  0520  1783               	bsf	3,7	;select IRP bank2
  3456  0521  0800               	movf	0,w
  3457  0522  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3458                           
  3459                           ;Main V4.1.c: 838: celsius_string_pointer++;
  3460  0527  3001               	movlw	1
  3461  0528  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0529  1303               	bcf	3,6	;RP1=0, select bank0
  3463  052A  00C0               	movwf	??_display_temps_to_screen
  3464  052B  0840               	movf	??_display_temps_to_screen,w
  3465  052C  1683               	bsf	3,5	;RP0=1, select bank3
  3466  052D  1703               	bsf	3,6	;RP1=1, select bank3
  3467  052E  07E7               	addwf	display_temps_to_screen@celsius_string_pointer^(0+384),f
  3468  052F  2D14               	goto	l2383
  3469  0530                     l2385:	
  3470                           
  3471                           ;Main V4.1.c: 839: }
  3472                           ;Main V4.1.c: 840: celsius_string_pointer = &celsius_string;
  3473  0530  30BE               	movlw	(low (display_temps_to_screen@celsius_string| (0+256)))& (0+255)
  3474  0531  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0532  1303               	bcf	3,6	;RP1=0, select bank0
  3476  0533  00C0               	movwf	??_display_temps_to_screen
  3477  0534  0840               	movf	??_display_temps_to_screen,w
  3478  0535  1683               	bsf	3,5	;RP0=1, select bank3
  3479  0536  1703               	bsf	3,6	;RP1=1, select bank3
  3480  0537  00E7               	movwf	display_temps_to_screen@celsius_string_pointer^(0+384)
  3481  0538                     l2387:	
  3482                           
  3483                           ;Main V4.1.c: 841: }
  3484                           ;Main V4.1.c: 846: position[0] = 0;
  3485  0538  01E3               	clrf	display_temps_to_screen@position^(0+384)
  3486  0539  01E4               	clrf	(display_temps_to_screen@position+1)^(0+384)
  3487                           
  3488                           ;Main V4.1.c: 847: position[1] = 16;
  3489  053A  3010               	movlw	16
  3490  053B  00E5               	movwf	(display_temps_to_screen@position^(0+384)+2)
  3491  053C  3000               	movlw	0
  3492  053D  00E6               	movwf	(display_temps_to_screen@position^(0+384)+3)
  3493                           
  3494                           ;Main V4.1.c: 848: location(position);
  3495  053E  30E3               	movlw	(low (display_temps_to_screen@position| (0+256)))& (0+255)
  3496  053F  00F3               	movwf	location@position
  3497  0540  3001               	movlw	1
  3498  0541  00F4               	movwf	location@position+1
  3499  0542  120A  158A  251D  120A  118A  	fcall	_location
  3500  0547                     l2397:	
  3501                           ;Main V4.1.c: 849: while (*sensor_two_string_pointer != 0){
  3502                           
  3503  0547  1683               	bsf	3,5	;RP0=1, select bank3
  3504  0548  1703               	bsf	3,6	;RP1=1, select bank3
  3505  0549  0861               	movf	display_temps_to_screen@sensor_two_string_pointer^(0+384),w
  3506  054A  0084               	movwf	4
  3507  054B  1783               	bsf	3,7	;select IRP bank2
  3508  054C  0800               	movf	0,w
  3509  054D  1903               	btfsc	3,2
  3510  054E  2D63               	goto	l2399
  3511                           
  3512                           ;Main V4.1.c: 850: LCDWriteCharacter(*sensor_two_string_pointer);
  3513  054F  1683               	bsf	3,5	;RP0=1, select bank3
  3514  0550  1703               	bsf	3,6	;RP1=1, select bank3
  3515  0551  0861               	movf	display_temps_to_screen@sensor_two_string_pointer^(0+384),w
  3516  0552  0084               	movwf	4
  3517  0553  1783               	bsf	3,7	;select IRP bank2
  3518  0554  0800               	movf	0,w
  3519  0555  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3520                           
  3521                           ;Main V4.1.c: 851: sensor_two_string_pointer++;
  3522  055A  3001               	movlw	1
  3523  055B  1283               	bcf	3,5	;RP0=0, select bank0
  3524  055C  1303               	bcf	3,6	;RP1=0, select bank0
  3525  055D  00C0               	movwf	??_display_temps_to_screen
  3526  055E  0840               	movf	??_display_temps_to_screen,w
  3527  055F  1683               	bsf	3,5	;RP0=1, select bank3
  3528  0560  1703               	bsf	3,6	;RP1=1, select bank3
  3529  0561  07E1               	addwf	display_temps_to_screen@sensor_two_string_pointer^(0+384),f
  3530  0562  2D47               	goto	l2397
  3531  0563                     l2399:	
  3532                           
  3533                           ;Main V4.1.c: 852: }
  3534                           ;Main V4.1.c: 853: if (thermocouple_temp[2][2] == 1){
  3535  0563  1683               	bsf	3,5	;RP0=1, select bank1
  3536  0564  1303               	bcf	3,6	;RP1=0, select bank1
  3537  0565  0330               	decf	(_thermocouple_temp^(0+128)+16),w
  3538  0566  0431               	iorwf	((_thermocouple_temp+1)^(0+128)+16),w
  3539  0567  1903               	btfsc	3,2
  3540  0568  2D7C               	goto	l2407
  3541  0569  2D8D               	goto	l2411
  3542  056A                     l2403:	
  3543                           ;Main V4.1.c: 854: while (*open_string_pointer != 0){
  3544                           
  3545                           
  3546                           ;Main V4.1.c: 855: LCDWriteCharacter(*open_string_pointer);
  3547  056A  1683               	bsf	3,5	;RP0=1, select bank3
  3548  056B  1703               	bsf	3,6	;RP1=1, select bank3
  3549  056C  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  3550  056D  0084               	movwf	4
  3551  056E  0800               	movf	0,w
  3552  056F  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3553                           
  3554                           ;Main V4.1.c: 856: open_string_pointer++;
  3555  0574  3001               	movlw	1
  3556  0575  1283               	bcf	3,5	;RP0=0, select bank0
  3557  0576  1303               	bcf	3,6	;RP1=0, select bank0
  3558  0577  00C0               	movwf	??_display_temps_to_screen
  3559  0578  0840               	movf	??_display_temps_to_screen,w
  3560  0579  1683               	bsf	3,5	;RP0=1, select bank3
  3561  057A  1703               	bsf	3,6	;RP1=1, select bank3
  3562  057B  07E8               	addwf	display_temps_to_screen@open_string_pointer^(0+384),f
  3563  057C                     l2407:	
  3564  057C  1683               	bsf	3,5	;RP0=1, select bank3
  3565  057D  1703               	bsf	3,6	;RP1=1, select bank3
  3566  057E  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  3567  057F  0084               	movwf	4
  3568  0580  1783               	bsf	3,7	;select IRP bank2
  3569  0581  0800               	movf	0,w
  3570  0582  1D03               	btfss	3,2
  3571  0583  2D6A               	goto	l2403
  3572                           
  3573                           ;Main V4.1.c: 857: }
  3574                           ;Main V4.1.c: 858: open_string_pointer = &open_string;
  3575  0584  30B1               	movlw	(low (display_temps_to_screen@open_string| (0+256)))& (0+255)
  3576  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3577  0586  1303               	bcf	3,6	;RP1=0, select bank0
  3578  0587  00C0               	movwf	??_display_temps_to_screen
  3579  0588  0840               	movf	??_display_temps_to_screen,w
  3580  0589  1683               	bsf	3,5	;RP0=1, select bank3
  3581  058A  1703               	bsf	3,6	;RP1=1, select bank3
  3582  058B  00E8               	movwf	display_temps_to_screen@open_string_pointer^(0+384)
  3583                           
  3584                           ;Main V4.1.c: 859: }
  3585  058C  2E82               	goto	l2459
  3586  058D                     l2411:	
  3587                           
  3588                           ;Main V4.1.c: 860: else if (thermocouple_temp[2][2] == 4){
  3589  058D  3004               	movlw	4
  3590  058E  1303               	bcf	3,6	;RP1=0, select bank1
  3591  058F  0630               	xorwf	(_thermocouple_temp^(0+128)+16),w
  3592  0590  0431               	iorwf	((_thermocouple_temp+1)^(0+128)+16),w
  3593  0591  1903               	btfsc	3,2
  3594  0592  2DA6               	goto	l2419
  3595  0593  2DB7               	goto	l2423
  3596  0594                     l2415:	
  3597                           ;Main V4.1.c: 861: while (*shortvcc_string_pointer != 0){
  3598                           
  3599                           
  3600                           ;Main V4.1.c: 862: LCDWriteCharacter(*shortvcc_string_pointer);
  3601  0594  1683               	bsf	3,5	;RP0=1, select bank3
  3602  0595  1703               	bsf	3,6	;RP1=1, select bank3
  3603  0596  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  3604  0597  0084               	movwf	4
  3605  0598  0800               	movf	0,w
  3606  0599  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3607                           
  3608                           ;Main V4.1.c: 863: shortvcc_string_pointer++;
  3609  059E  3001               	movlw	1
  3610  059F  1283               	bcf	3,5	;RP0=0, select bank0
  3611  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  3612  05A1  00C0               	movwf	??_display_temps_to_screen
  3613  05A2  0840               	movf	??_display_temps_to_screen,w
  3614  05A3  1683               	bsf	3,5	;RP0=1, select bank3
  3615  05A4  1703               	bsf	3,6	;RP1=1, select bank3
  3616  05A5  07E9               	addwf	display_temps_to_screen@shortvcc_string_pointer^(0+384),f
  3617  05A6                     l2419:	
  3618  05A6  1683               	bsf	3,5	;RP0=1, select bank3
  3619  05A7  1703               	bsf	3,6	;RP1=1, select bank3
  3620  05A8  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  3621  05A9  0084               	movwf	4
  3622  05AA  1783               	bsf	3,7	;select IRP bank2
  3623  05AB  0800               	movf	0,w
  3624  05AC  1D03               	btfss	3,2
  3625  05AD  2D94               	goto	l2415
  3626                           
  3627                           ;Main V4.1.c: 864: }
  3628                           ;Main V4.1.c: 865: shortvcc_string_pointer = &shortvcc_string;
  3629  05AE  30CA               	movlw	(low (display_temps_to_screen@shortvcc_string| (0+256)))& (0+255)
  3630  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3631  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3632  05B1  00C0               	movwf	??_display_temps_to_screen
  3633  05B2  0840               	movf	??_display_temps_to_screen,w
  3634  05B3  1683               	bsf	3,5	;RP0=1, select bank3
  3635  05B4  1703               	bsf	3,6	;RP1=1, select bank3
  3636  05B5  00E9               	movwf	display_temps_to_screen@shortvcc_string_pointer^(0+384)
  3637                           
  3638                           ;Main V4.1.c: 866: }
  3639  05B6  2E82               	goto	l2459
  3640  05B7                     l2423:	
  3641                           
  3642                           ;Main V4.1.c: 867: else if (thermocouple_temp[2][2] == 2){
  3643  05B7  3002               	movlw	2
  3644  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3645  05B9  0630               	xorwf	(_thermocouple_temp^(0+128)+16),w
  3646  05BA  0431               	iorwf	((_thermocouple_temp+1)^(0+128)+16),w
  3647  05BB  1903               	btfsc	3,2
  3648  05BC  2DD0               	goto	l2431
  3649  05BD  2DE1               	goto	l2435
  3650  05BE                     l2427:	
  3651                           ;Main V4.1.c: 868: while (*shortgnd_string_pointer != 0){
  3652                           
  3653                           
  3654                           ;Main V4.1.c: 869: LCDWriteCharacter(*shortgnd_string_pointer);
  3655  05BE  1683               	bsf	3,5	;RP0=1, select bank3
  3656  05BF  1703               	bsf	3,6	;RP1=1, select bank3
  3657  05C0  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  3658  05C1  0084               	movwf	4
  3659  05C2  0800               	movf	0,w
  3660  05C3  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3661                           
  3662                           ;Main V4.1.c: 870: shortgnd_string_pointer++;
  3663  05C8  3001               	movlw	1
  3664  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3665  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  3666  05CB  00C0               	movwf	??_display_temps_to_screen
  3667  05CC  0840               	movf	??_display_temps_to_screen,w
  3668  05CD  1683               	bsf	3,5	;RP0=1, select bank3
  3669  05CE  1703               	bsf	3,6	;RP1=1, select bank3
  3670  05CF  07EA               	addwf	display_temps_to_screen@shortgnd_string_pointer^(0+384),f
  3671  05D0                     l2431:	
  3672  05D0  1683               	bsf	3,5	;RP0=1, select bank3
  3673  05D1  1703               	bsf	3,6	;RP1=1, select bank3
  3674  05D2  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  3675  05D3  0084               	movwf	4
  3676  05D4  1783               	bsf	3,7	;select IRP bank2
  3677  05D5  0800               	movf	0,w
  3678  05D6  1D03               	btfss	3,2
  3679  05D7  2DBE               	goto	l2427
  3680                           
  3681                           ;Main V4.1.c: 871: }
  3682                           ;Main V4.1.c: 872: shortgnd_string_pointer = &shortgnd_string;
  3683  05D8  30D5               	movlw	(low (display_temps_to_screen@shortgnd_string| (0+256)))& (0+255)
  3684  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3685  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3686  05DB  00C0               	movwf	??_display_temps_to_screen
  3687  05DC  0840               	movf	??_display_temps_to_screen,w
  3688  05DD  1683               	bsf	3,5	;RP0=1, select bank3
  3689  05DE  1703               	bsf	3,6	;RP1=1, select bank3
  3690  05DF  00EA               	movwf	display_temps_to_screen@shortgnd_string_pointer^(0+384)
  3691                           
  3692                           ;Main V4.1.c: 873: }
  3693  05E0  2E82               	goto	l2459
  3694  05E1                     l2435:	
  3695                           
  3696                           ;Main V4.1.c: 874: else if (thermocouple_temp[2][2] > 4){
  3697  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3698  05E2  0831               	movf	((_thermocouple_temp+1)^(0+128)+16),w
  3699  05E3  3A80               	xorlw	128
  3700  05E4  00FF               	movwf	127
  3701  05E5  3080               	movlw	128
  3702  05E6  027F               	subwf	127,w
  3703  05E7  1D03               	skipz
  3704  05E8  2DEB               	goto	u2315
  3705  05E9  3005               	movlw	5
  3706  05EA  0230               	subwf	(_thermocouple_temp^(0+128)+16),w
  3707  05EB                     u2315:	
  3708  05EB  1803               	btfsc	3,0
  3709  05EC  2E01               	goto	l2443
  3710  05ED  2E12               	goto	l2447
  3711  05EE                     l2439:	
  3712                           ;Main V4.1.c: 875: while (*fault_string_pointer != 0){
  3713                           
  3714                           
  3715                           ;Main V4.1.c: 876: LCDWriteCharacter(*fault_string_pointer);
  3716  05EE  1683               	bsf	3,5	;RP0=1, select bank3
  3717  05EF  1703               	bsf	3,6	;RP1=1, select bank3
  3718  05F0  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  3719  05F1  0084               	movwf	4
  3720  05F2  1783               	bsf	3,7	;select IRP bank2
  3721  05F3  0800               	movf	0,w
  3722  05F4  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3723                           
  3724                           ;Main V4.1.c: 877: fault_string_pointer++;
  3725  05F9  3001               	movlw	1
  3726  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3727  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3728  05FC  00C0               	movwf	??_display_temps_to_screen
  3729  05FD  0840               	movf	??_display_temps_to_screen,w
  3730  05FE  1683               	bsf	3,5	;RP0=1, select bank3
  3731  05FF  1703               	bsf	3,6	;RP1=1, select bank3
  3732  0600  07EB               	addwf	display_temps_to_screen@fault_string_pointer^(0+384),f
  3733  0601                     l2443:	
  3734  0601  1683               	bsf	3,5	;RP0=1, select bank3
  3735  0602  1703               	bsf	3,6	;RP1=1, select bank3
  3736  0603  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  3737  0604  0084               	movwf	4
  3738  0605  1783               	bsf	3,7	;select IRP bank2
  3739  0606  0800               	movf	0,w
  3740  0607  1D03               	btfss	3,2
  3741  0608  2DEE               	goto	l2439
  3742                           
  3743                           ;Main V4.1.c: 878: }
  3744                           ;Main V4.1.c: 879: fault_string_pointer = &fault_string;
  3745  0609  30A2               	movlw	(low (display_temps_to_screen@fault_string| (0+256)))& (0+255)
  3746  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3747  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3748  060C  00C0               	movwf	??_display_temps_to_screen
  3749  060D  0840               	movf	??_display_temps_to_screen,w
  3750  060E  1683               	bsf	3,5	;RP0=1, select bank3
  3751  060F  1703               	bsf	3,6	;RP1=1, select bank3
  3752  0610  00EB               	movwf	display_temps_to_screen@fault_string_pointer^(0+384)
  3753                           
  3754                           ;Main V4.1.c: 880: }
  3755  0611  2E82               	goto	l2459
  3756  0612                     l2447:	
  3757                           
  3758                           ;Main V4.1.c: 881: else{
  3759                           ;Main V4.1.c: 882: working_register = (thermocouple_temp[2][0]) * .25;
  3760  0612  1683               	bsf	3,5	;RP0=1, select bank1
  3761  0613  1303               	bcf	3,6	;RP1=0, select bank1
  3762  0614  082D               	movf	((_thermocouple_temp+1)^(0+128)+12),w
  3763  0615  00F9               	movwf	___awtoft@c+1
  3764  0616  082C               	movf	(_thermocouple_temp^(0+128)+12),w
  3765  0617  00F8               	movwf	___awtoft@c
  3766  0618  120A  158A  211C  120A  118A  	fcall	___awtoft
  3767  061D  0878               	movf	?___awtoft,w
  3768  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3769  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3770  0620  00A5               	movwf	___ftmul@f2
  3771  0621  0879               	movf	?___awtoft+1,w
  3772  0622  00A6               	movwf	___ftmul@f2+1
  3773  0623  087A               	movf	?___awtoft+2,w
  3774  0624  00A7               	movwf	___ftmul@f2+2
  3775  0625  3000               	movlw	0
  3776  0626  00A2               	movwf	___ftmul@f1
  3777  0627  3080               	movlw	128
  3778  0628  00A3               	movwf	___ftmul@f1+1
  3779  0629  303E               	movlw	62
  3780  062A  00A4               	movwf	___ftmul@f1+2
  3781  062B  120A  158A  25C2  120A  118A  	fcall	___ftmul
  3782  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0632  0822               	movf	?___ftmul,w
  3785  0633  00B2               	movwf	___fttol@f1
  3786  0634  0823               	movf	?___ftmul+1,w
  3787  0635  00B3               	movwf	___fttol@f1+1
  3788  0636  0824               	movf	?___ftmul+2,w
  3789  0637  00B4               	movwf	___fttol@f1+2
  3790  0638  120A  158A  23FC  120A  118A  	fcall	___fttol
  3791  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3792  063E  1303               	bcf	3,6	;RP1=0, select bank0
  3793  063F  0835               	movf	?___fttol+3,w
  3794  0640  1683               	bsf	3,5	;RP0=1, select bank3
  3795  0641  1703               	bsf	3,6	;RP1=1, select bank3
  3796  0642  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3797  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3798  0644  1303               	bcf	3,6	;RP1=0, select bank0
  3799  0645  0834               	movf	?___fttol+2,w
  3800  0646  1683               	bsf	3,5	;RP0=1, select bank3
  3801  0647  1703               	bsf	3,6	;RP1=1, select bank3
  3802  0648  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  3803  0649  1283               	bcf	3,5	;RP0=0, select bank0
  3804  064A  1303               	bcf	3,6	;RP1=0, select bank0
  3805  064B  0833               	movf	?___fttol+1,w
  3806  064C  1683               	bsf	3,5	;RP0=1, select bank3
  3807  064D  1703               	bsf	3,6	;RP1=1, select bank3
  3808  064E  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3809  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0651  0832               	movf	?___fttol,w
  3812  0652  1683               	bsf	3,5	;RP0=1, select bank3
  3813  0653  1703               	bsf	3,6	;RP1=1, select bank3
  3814  0654  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3815                           
  3816                           ;Main V4.1.c: 885: char_to_decimal_print(working_register);
  3817  0655  086D               	movf	(display_temps_to_screen@working_register+1)^(0+384),w
  3818  0656  00F9               	movwf	char_to_decimal_print@value+1
  3819  0657  086C               	movf	display_temps_to_screen@working_register^(0+384),w
  3820  0658  00F8               	movwf	char_to_decimal_print@value
  3821  0659  120A  118A  2013  120A  118A  	fcall	_char_to_decimal_print
  3822  065E                     l2455:	
  3823                           ;Main V4.1.c: 886: while (*celsius_string_pointer != 0){
  3824                           
  3825  065E  1683               	bsf	3,5	;RP0=1, select bank3
  3826  065F  1703               	bsf	3,6	;RP1=1, select bank3
  3827  0660  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  3828  0661  0084               	movwf	4
  3829  0662  1783               	bsf	3,7	;select IRP bank2
  3830  0663  0800               	movf	0,w
  3831  0664  1903               	btfsc	3,2
  3832  0665  2E7A               	goto	l2457
  3833                           
  3834                           ;Main V4.1.c: 887: LCDWriteCharacter(*celsius_string_pointer);
  3835  0666  1683               	bsf	3,5	;RP0=1, select bank3
  3836  0667  1703               	bsf	3,6	;RP1=1, select bank3
  3837  0668  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  3838  0669  0084               	movwf	4
  3839  066A  1783               	bsf	3,7	;select IRP bank2
  3840  066B  0800               	movf	0,w
  3841  066C  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3842                           
  3843                           ;Main V4.1.c: 888: celsius_string_pointer++;
  3844  0671  3001               	movlw	1
  3845  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3846  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3847  0674  00C0               	movwf	??_display_temps_to_screen
  3848  0675  0840               	movf	??_display_temps_to_screen,w
  3849  0676  1683               	bsf	3,5	;RP0=1, select bank3
  3850  0677  1703               	bsf	3,6	;RP1=1, select bank3
  3851  0678  07E7               	addwf	display_temps_to_screen@celsius_string_pointer^(0+384),f
  3852  0679  2E5E               	goto	l2455
  3853  067A                     l2457:	
  3854                           
  3855                           ;Main V4.1.c: 889: }
  3856                           ;Main V4.1.c: 890: celsius_string_pointer = &celsius_string;
  3857  067A  30BE               	movlw	(low (display_temps_to_screen@celsius_string| (0+256)))& (0+255)
  3858  067B  1283               	bcf	3,5	;RP0=0, select bank0
  3859  067C  1303               	bcf	3,6	;RP1=0, select bank0
  3860  067D  00C0               	movwf	??_display_temps_to_screen
  3861  067E  0840               	movf	??_display_temps_to_screen,w
  3862  067F  1683               	bsf	3,5	;RP0=1, select bank3
  3863  0680  1703               	bsf	3,6	;RP1=1, select bank3
  3864  0681  00E7               	movwf	display_temps_to_screen@celsius_string_pointer^(0+384)
  3865  0682                     l2459:	
  3866                           
  3867                           ;Main V4.1.c: 891: }
  3868                           ;Main V4.1.c: 895: position[0] = 0;
  3869  0682  01E3               	clrf	display_temps_to_screen@position^(0+384)
  3870  0683  01E4               	clrf	(display_temps_to_screen@position+1)^(0+384)
  3871                           
  3872                           ;Main V4.1.c: 896: position[1] = 8;
  3873  0684  3008               	movlw	8
  3874  0685  00E5               	movwf	(display_temps_to_screen@position^(0+384)+2)
  3875  0686  3000               	movlw	0
  3876  0687  00E6               	movwf	(display_temps_to_screen@position^(0+384)+3)
  3877                           
  3878                           ;Main V4.1.c: 897: location(position);
  3879  0688  30E3               	movlw	(low (display_temps_to_screen@position| (0+256)))& (0+255)
  3880  0689  00F3               	movwf	location@position
  3881  068A  3001               	movlw	1
  3882  068B  00F4               	movwf	location@position+1
  3883  068C  120A  158A  251D  120A  118A  	fcall	_location
  3884  0691                     l2469:	
  3885                           ;Main V4.1.c: 898: while (*sensor_three_string_pointer != 0){
  3886                           
  3887  0691  1683               	bsf	3,5	;RP0=1, select bank3
  3888  0692  1703               	bsf	3,6	;RP1=1, select bank3
  3889  0693  0862               	movf	display_temps_to_screen@sensor_three_string_pointer^(0+384),w
  3890  0694  0084               	movwf	4
  3891  0695  1783               	bsf	3,7	;select IRP bank2
  3892  0696  0800               	movf	0,w
  3893  0697  1903               	btfsc	3,2
  3894  0698  2EAD               	goto	l2471
  3895                           
  3896                           ;Main V4.1.c: 899: LCDWriteCharacter(*sensor_three_string_pointer);
  3897  0699  1683               	bsf	3,5	;RP0=1, select bank3
  3898  069A  1703               	bsf	3,6	;RP1=1, select bank3
  3899  069B  0862               	movf	display_temps_to_screen@sensor_three_string_pointer^(0+384),w
  3900  069C  0084               	movwf	4
  3901  069D  1783               	bsf	3,7	;select IRP bank2
  3902  069E  0800               	movf	0,w
  3903  069F  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3904                           
  3905                           ;Main V4.1.c: 900: sensor_three_string_pointer++;
  3906  06A4  3001               	movlw	1
  3907  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3908  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3909  06A7  00C0               	movwf	??_display_temps_to_screen
  3910  06A8  0840               	movf	??_display_temps_to_screen,w
  3911  06A9  1683               	bsf	3,5	;RP0=1, select bank3
  3912  06AA  1703               	bsf	3,6	;RP1=1, select bank3
  3913  06AB  07E2               	addwf	display_temps_to_screen@sensor_three_string_pointer^(0+384),f
  3914  06AC  2E91               	goto	l2469
  3915  06AD                     l2471:	
  3916                           
  3917                           ;Main V4.1.c: 901: }
  3918                           ;Main V4.1.c: 902: if (thermocouple_temp[3][2] == 1){
  3919  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  3920  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  3921  06AF  0336               	decf	(_thermocouple_temp^(0+128)+22),w
  3922  06B0  0437               	iorwf	((_thermocouple_temp+1)^(0+128)+22),w
  3923  06B1  1903               	btfsc	3,2
  3924  06B2  2EC6               	goto	l2479
  3925  06B3  2ED7               	goto	l2483
  3926  06B4                     l2475:	
  3927                           ;Main V4.1.c: 903: while (*open_string_pointer != 0){
  3928                           
  3929                           
  3930                           ;Main V4.1.c: 904: LCDWriteCharacter(*open_string_pointer);
  3931  06B4  1683               	bsf	3,5	;RP0=1, select bank3
  3932  06B5  1703               	bsf	3,6	;RP1=1, select bank3
  3933  06B6  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  3934  06B7  0084               	movwf	4
  3935  06B8  0800               	movf	0,w
  3936  06B9  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3937                           
  3938                           ;Main V4.1.c: 905: open_string_pointer++;
  3939  06BE  3001               	movlw	1
  3940  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3941  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3942  06C1  00C0               	movwf	??_display_temps_to_screen
  3943  06C2  0840               	movf	??_display_temps_to_screen,w
  3944  06C3  1683               	bsf	3,5	;RP0=1, select bank3
  3945  06C4  1703               	bsf	3,6	;RP1=1, select bank3
  3946  06C5  07E8               	addwf	display_temps_to_screen@open_string_pointer^(0+384),f
  3947  06C6                     l2479:	
  3948  06C6  1683               	bsf	3,5	;RP0=1, select bank3
  3949  06C7  1703               	bsf	3,6	;RP1=1, select bank3
  3950  06C8  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  3951  06C9  0084               	movwf	4
  3952  06CA  1783               	bsf	3,7	;select IRP bank2
  3953  06CB  0800               	movf	0,w
  3954  06CC  1D03               	btfss	3,2
  3955  06CD  2EB4               	goto	l2475
  3956                           
  3957                           ;Main V4.1.c: 906: }
  3958                           ;Main V4.1.c: 907: open_string_pointer = &open_string;
  3959  06CE  30B1               	movlw	(low (display_temps_to_screen@open_string| (0+256)))& (0+255)
  3960  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3961  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3962  06D1  00C0               	movwf	??_display_temps_to_screen
  3963  06D2  0840               	movf	??_display_temps_to_screen,w
  3964  06D3  1683               	bsf	3,5	;RP0=1, select bank3
  3965  06D4  1703               	bsf	3,6	;RP1=1, select bank3
  3966  06D5  00E8               	movwf	display_temps_to_screen@open_string_pointer^(0+384)
  3967                           
  3968                           ;Main V4.1.c: 908: }
  3969  06D6  0008               	return
  3970  06D7                     l2483:	
  3971                           
  3972                           ;Main V4.1.c: 909: else if (thermocouple_temp[3][2] == 4){
  3973  06D7  3004               	movlw	4
  3974  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  3975  06D9  0636               	xorwf	(_thermocouple_temp^(0+128)+22),w
  3976  06DA  0437               	iorwf	((_thermocouple_temp+1)^(0+128)+22),w
  3977  06DB  1903               	btfsc	3,2
  3978  06DC  2EF0               	goto	l2491
  3979  06DD  2F01               	goto	l2495
  3980  06DE                     l2487:	
  3981                           ;Main V4.1.c: 910: while (*shortvcc_string_pointer != 0){
  3982                           
  3983                           
  3984                           ;Main V4.1.c: 911: LCDWriteCharacter(*shortvcc_string_pointer);
  3985  06DE  1683               	bsf	3,5	;RP0=1, select bank3
  3986  06DF  1703               	bsf	3,6	;RP1=1, select bank3
  3987  06E0  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  3988  06E1  0084               	movwf	4
  3989  06E2  0800               	movf	0,w
  3990  06E3  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  3991                           
  3992                           ;Main V4.1.c: 912: shortvcc_string_pointer++;
  3993  06E8  3001               	movlw	1
  3994  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3995  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3996  06EB  00C0               	movwf	??_display_temps_to_screen
  3997  06EC  0840               	movf	??_display_temps_to_screen,w
  3998  06ED  1683               	bsf	3,5	;RP0=1, select bank3
  3999  06EE  1703               	bsf	3,6	;RP1=1, select bank3
  4000  06EF  07E9               	addwf	display_temps_to_screen@shortvcc_string_pointer^(0+384),f
  4001  06F0                     l2491:	
  4002  06F0  1683               	bsf	3,5	;RP0=1, select bank3
  4003  06F1  1703               	bsf	3,6	;RP1=1, select bank3
  4004  06F2  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  4005  06F3  0084               	movwf	4
  4006  06F4  1783               	bsf	3,7	;select IRP bank2
  4007  06F5  0800               	movf	0,w
  4008  06F6  1D03               	btfss	3,2
  4009  06F7  2EDE               	goto	l2487
  4010                           
  4011                           ;Main V4.1.c: 913: }
  4012                           ;Main V4.1.c: 914: shortvcc_string_pointer = &shortvcc_string;
  4013  06F8  30CA               	movlw	(low (display_temps_to_screen@shortvcc_string| (0+256)))& (0+255)
  4014  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  4015  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  4016  06FB  00C0               	movwf	??_display_temps_to_screen
  4017  06FC  0840               	movf	??_display_temps_to_screen,w
  4018  06FD  1683               	bsf	3,5	;RP0=1, select bank3
  4019  06FE  1703               	bsf	3,6	;RP1=1, select bank3
  4020  06FF  00E9               	movwf	display_temps_to_screen@shortvcc_string_pointer^(0+384)
  4021                           
  4022                           ;Main V4.1.c: 915: }
  4023  0700  0008               	return
  4024  0701                     l2495:	
  4025                           
  4026                           ;Main V4.1.c: 916: else if (thermocouple_temp[3][2] == 2){
  4027  0701  3002               	movlw	2
  4028  0702  1303               	bcf	3,6	;RP1=0, select bank1
  4029  0703  0636               	xorwf	(_thermocouple_temp^(0+128)+22),w
  4030  0704  0437               	iorwf	((_thermocouple_temp+1)^(0+128)+22),w
  4031  0705  1903               	btfsc	3,2
  4032  0706  2F1A               	goto	l2503
  4033  0707  2F2B               	goto	l2507
  4034  0708                     l2499:	
  4035                           ;Main V4.1.c: 917: while (*shortgnd_string_pointer != 0){
  4036                           
  4037                           
  4038                           ;Main V4.1.c: 918: LCDWriteCharacter(*shortgnd_string_pointer);
  4039  0708  1683               	bsf	3,5	;RP0=1, select bank3
  4040  0709  1703               	bsf	3,6	;RP1=1, select bank3
  4041  070A  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  4042  070B  0084               	movwf	4
  4043  070C  0800               	movf	0,w
  4044  070D  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  4045                           
  4046                           ;Main V4.1.c: 919: shortgnd_string_pointer++;
  4047  0712  3001               	movlw	1
  4048  0713  1283               	bcf	3,5	;RP0=0, select bank0
  4049  0714  1303               	bcf	3,6	;RP1=0, select bank0
  4050  0715  00C0               	movwf	??_display_temps_to_screen
  4051  0716  0840               	movf	??_display_temps_to_screen,w
  4052  0717  1683               	bsf	3,5	;RP0=1, select bank3
  4053  0718  1703               	bsf	3,6	;RP1=1, select bank3
  4054  0719  07EA               	addwf	display_temps_to_screen@shortgnd_string_pointer^(0+384),f
  4055  071A                     l2503:	
  4056  071A  1683               	bsf	3,5	;RP0=1, select bank3
  4057  071B  1703               	bsf	3,6	;RP1=1, select bank3
  4058  071C  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  4059  071D  0084               	movwf	4
  4060  071E  1783               	bsf	3,7	;select IRP bank2
  4061  071F  0800               	movf	0,w
  4062  0720  1D03               	btfss	3,2
  4063  0721  2F08               	goto	l2499
  4064                           
  4065                           ;Main V4.1.c: 920: }
  4066                           ;Main V4.1.c: 921: shortgnd_string_pointer = &shortgnd_string;
  4067  0722  30D5               	movlw	(low (display_temps_to_screen@shortgnd_string| (0+256)))& (0+255)
  4068  0723  1283               	bcf	3,5	;RP0=0, select bank0
  4069  0724  1303               	bcf	3,6	;RP1=0, select bank0
  4070  0725  00C0               	movwf	??_display_temps_to_screen
  4071  0726  0840               	movf	??_display_temps_to_screen,w
  4072  0727  1683               	bsf	3,5	;RP0=1, select bank3
  4073  0728  1703               	bsf	3,6	;RP1=1, select bank3
  4074  0729  00EA               	movwf	display_temps_to_screen@shortgnd_string_pointer^(0+384)
  4075                           
  4076                           ;Main V4.1.c: 922: }
  4077  072A  0008               	return
  4078  072B                     l2507:	
  4079                           
  4080                           ;Main V4.1.c: 923: else if (thermocouple_temp[3][2] > 4){
  4081  072B  1303               	bcf	3,6	;RP1=0, select bank1
  4082  072C  0837               	movf	((_thermocouple_temp+1)^(0+128)+22),w
  4083  072D  3A80               	xorlw	128
  4084  072E  00FF               	movwf	127
  4085  072F  3080               	movlw	128
  4086  0730  027F               	subwf	127,w
  4087  0731  1D03               	skipz
  4088  0732  2F35               	goto	u2415
  4089  0733  3005               	movlw	5
  4090  0734  0236               	subwf	(_thermocouple_temp^(0+128)+22),w
  4091  0735                     u2415:	
  4092  0735  1803               	btfsc	3,0
  4093  0736  2F4B               	goto	l2515
  4094  0737  2F5C               	goto	l2519
  4095  0738                     l2511:	
  4096                           ;Main V4.1.c: 924: while (*fault_string_pointer != 0){
  4097                           
  4098                           
  4099                           ;Main V4.1.c: 925: LCDWriteCharacter(*fault_string_pointer);
  4100  0738  1683               	bsf	3,5	;RP0=1, select bank3
  4101  0739  1703               	bsf	3,6	;RP1=1, select bank3
  4102  073A  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  4103  073B  0084               	movwf	4
  4104  073C  1783               	bsf	3,7	;select IRP bank2
  4105  073D  0800               	movf	0,w
  4106  073E  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  4107                           
  4108                           ;Main V4.1.c: 926: fault_string_pointer++;
  4109  0743  3001               	movlw	1
  4110  0744  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0745  1303               	bcf	3,6	;RP1=0, select bank0
  4112  0746  00C0               	movwf	??_display_temps_to_screen
  4113  0747  0840               	movf	??_display_temps_to_screen,w
  4114  0748  1683               	bsf	3,5	;RP0=1, select bank3
  4115  0749  1703               	bsf	3,6	;RP1=1, select bank3
  4116  074A  07EB               	addwf	display_temps_to_screen@fault_string_pointer^(0+384),f
  4117  074B                     l2515:	
  4118  074B  1683               	bsf	3,5	;RP0=1, select bank3
  4119  074C  1703               	bsf	3,6	;RP1=1, select bank3
  4120  074D  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  4121  074E  0084               	movwf	4
  4122  074F  1783               	bsf	3,7	;select IRP bank2
  4123  0750  0800               	movf	0,w
  4124  0751  1D03               	btfss	3,2
  4125  0752  2F38               	goto	l2511
  4126                           
  4127                           ;Main V4.1.c: 927: }
  4128                           ;Main V4.1.c: 928: fault_string_pointer = &fault_string;
  4129  0753  30A2               	movlw	(low (display_temps_to_screen@fault_string| (0+256)))& (0+255)
  4130  0754  1283               	bcf	3,5	;RP0=0, select bank0
  4131  0755  1303               	bcf	3,6	;RP1=0, select bank0
  4132  0756  00C0               	movwf	??_display_temps_to_screen
  4133  0757  0840               	movf	??_display_temps_to_screen,w
  4134  0758  1683               	bsf	3,5	;RP0=1, select bank3
  4135  0759  1703               	bsf	3,6	;RP1=1, select bank3
  4136  075A  00EB               	movwf	display_temps_to_screen@fault_string_pointer^(0+384)
  4137                           
  4138                           ;Main V4.1.c: 929: }
  4139  075B  0008               	return
  4140  075C                     l2519:	
  4141                           
  4142                           ;Main V4.1.c: 930: else{
  4143                           ;Main V4.1.c: 931: working_register = (thermocouple_temp[3][0]) * .25;
  4144  075C  1683               	bsf	3,5	;RP0=1, select bank1
  4145  075D  1303               	bcf	3,6	;RP1=0, select bank1
  4146  075E  0833               	movf	((_thermocouple_temp+1)^(0+128)+18),w
  4147  075F  00F9               	movwf	___awtoft@c+1
  4148  0760  0832               	movf	(_thermocouple_temp^(0+128)+18),w
  4149  0761  00F8               	movwf	___awtoft@c
  4150  0762  120A  158A  211C  120A  118A  	fcall	___awtoft
  4151  0767  0878               	movf	?___awtoft,w
  4152  0768  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0769  1303               	bcf	3,6	;RP1=0, select bank0
  4154  076A  00A5               	movwf	___ftmul@f2
  4155  076B  0879               	movf	?___awtoft+1,w
  4156  076C  00A6               	movwf	___ftmul@f2+1
  4157  076D  087A               	movf	?___awtoft+2,w
  4158  076E  00A7               	movwf	___ftmul@f2+2
  4159  076F  3000               	movlw	0
  4160  0770  00A2               	movwf	___ftmul@f1
  4161  0771  3080               	movlw	128
  4162  0772  00A3               	movwf	___ftmul@f1+1
  4163  0773  303E               	movlw	62
  4164  0774  00A4               	movwf	___ftmul@f1+2
  4165  0775  120A  158A  25C2  120A  118A  	fcall	___ftmul
  4166  077A  1283               	bcf	3,5	;RP0=0, select bank0
  4167  077B  1303               	bcf	3,6	;RP1=0, select bank0
  4168  077C  0822               	movf	?___ftmul,w
  4169  077D  00B2               	movwf	___fttol@f1
  4170  077E  0823               	movf	?___ftmul+1,w
  4171  077F  00B3               	movwf	___fttol@f1+1
  4172  0780  0824               	movf	?___ftmul+2,w
  4173  0781  00B4               	movwf	___fttol@f1+2
  4174  0782  120A  158A  23FC  120A  118A  	fcall	___fttol
  4175  0787  1283               	bcf	3,5	;RP0=0, select bank0
  4176  0788  1303               	bcf	3,6	;RP1=0, select bank0
  4177  0789  0835               	movf	?___fttol+3,w
  4178  078A  1683               	bsf	3,5	;RP0=1, select bank3
  4179  078B  1703               	bsf	3,6	;RP1=1, select bank3
  4180  078C  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  4181  078D  1283               	bcf	3,5	;RP0=0, select bank0
  4182  078E  1303               	bcf	3,6	;RP1=0, select bank0
  4183  078F  0834               	movf	?___fttol+2,w
  4184  0790  1683               	bsf	3,5	;RP0=1, select bank3
  4185  0791  1703               	bsf	3,6	;RP1=1, select bank3
  4186  0792  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  4187  0793  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0794  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0795  0833               	movf	?___fttol+1,w
  4190  0796  1683               	bsf	3,5	;RP0=1, select bank3
  4191  0797  1703               	bsf	3,6	;RP1=1, select bank3
  4192  0798  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  4193  0799  1283               	bcf	3,5	;RP0=0, select bank0
  4194  079A  1303               	bcf	3,6	;RP1=0, select bank0
  4195  079B  0832               	movf	?___fttol,w
  4196  079C  1683               	bsf	3,5	;RP0=1, select bank3
  4197  079D  1703               	bsf	3,6	;RP1=1, select bank3
  4198  079E  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  4199                           
  4200                           ;Main V4.1.c: 934: char_to_decimal_print(working_register);
  4201  079F  086D               	movf	(display_temps_to_screen@working_register+1)^(0+384),w
  4202  07A0  00F9               	movwf	char_to_decimal_print@value+1
  4203  07A1  086C               	movf	display_temps_to_screen@working_register^(0+384),w
  4204  07A2  00F8               	movwf	char_to_decimal_print@value
  4205  07A3  120A  118A  2013  120A  118A  	fcall	_char_to_decimal_print
  4206  07A8                     l2527:	
  4207                           ;Main V4.1.c: 935: while (*celsius_string_pointer != 0){
  4208                           
  4209  07A8  1683               	bsf	3,5	;RP0=1, select bank3
  4210  07A9  1703               	bsf	3,6	;RP1=1, select bank3
  4211  07AA  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  4212  07AB  0084               	movwf	4
  4213  07AC  1783               	bsf	3,7	;select IRP bank2
  4214  07AD  0800               	movf	0,w
  4215  07AE  1903               	btfsc	3,2
  4216  07AF  2FC4               	goto	l2529
  4217                           
  4218                           ;Main V4.1.c: 936: LCDWriteCharacter(*celsius_string_pointer);
  4219  07B0  1683               	bsf	3,5	;RP0=1, select bank3
  4220  07B1  1703               	bsf	3,6	;RP1=1, select bank3
  4221  07B2  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  4222  07B3  0084               	movwf	4
  4223  07B4  1783               	bsf	3,7	;select IRP bank2
  4224  07B5  0800               	movf	0,w
  4225  07B6  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  4226                           
  4227                           ;Main V4.1.c: 937: celsius_string_pointer++;
  4228  07BB  3001               	movlw	1
  4229  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  4230  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  4231  07BE  00C0               	movwf	??_display_temps_to_screen
  4232  07BF  0840               	movf	??_display_temps_to_screen,w
  4233  07C0  1683               	bsf	3,5	;RP0=1, select bank3
  4234  07C1  1703               	bsf	3,6	;RP1=1, select bank3
  4235  07C2  07E7               	addwf	display_temps_to_screen@celsius_string_pointer^(0+384),f
  4236  07C3  2FA8               	goto	l2527
  4237  07C4                     l2529:	
  4238                           
  4239                           ;Main V4.1.c: 938: }
  4240                           ;Main V4.1.c: 939: celsius_string_pointer = &celsius_string;
  4241  07C4  30BE               	movlw	(low (display_temps_to_screen@celsius_string| (0+256)))& (0+255)
  4242  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  4243  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  4244  07C7  00C0               	movwf	??_display_temps_to_screen
  4245  07C8  0840               	movf	??_display_temps_to_screen,w
  4246  07C9  1683               	bsf	3,5	;RP0=1, select bank3
  4247  07CA  1703               	bsf	3,6	;RP1=1, select bank3
  4248  07CB  00E7               	movwf	display_temps_to_screen@celsius_string_pointer^(0+384)
  4249  07CC  0008               	return
  4250  07CD                     __end_of_display_temps_to_screen:	
  4251                           
  4252                           	psect	text6
  4253  0D1D                     __ptext6:	
  4254 ;; *************** function _location *****************
  4255 ;; Defined at:
  4256 ;;		line 337 in file "Main V4.1.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  position        2    3[COMMON] PTR int 
  4259 ;;		 -> main@position(4), display_temps_to_screen@position(4), 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  i               2    9[BANK0 ] unsigned int 
  4262 ;;  k               2    7[BANK0 ] unsigned int 
  4263 ;;  q               2    5[BANK0 ] unsigned int 
  4264 ;;  j               2    0[BANK0 ] unsigned int 
  4265 ;;  page            1    4[BANK0 ] unsigned char 
  4266 ;;  upnib           1    3[BANK0 ] unsigned char 
  4267 ;;  lownib          1    2[BANK0 ] unsigned char 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4277 ;;      Params:         2       0       0       0       0
  4278 ;;      Locals:         0      11       0       0       0
  4279 ;;      Temps:          6       0       0       0       0
  4280 ;;      Totals:         8      11       0       0       0
  4281 ;;Total ram usage:       19 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    1
  4284 ;; This function calls:
  4285 ;;		_comm_out
  4286 ;; This function is called by:
  4287 ;;		_display_temps_to_screen
  4288 ;;		_main
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           
  4293                           ;psect for function _location
  4294  0D1D                     _location:	
  4295                           
  4296                           ;Main V4.1.c: 338: unsigned int i,k,j;
  4297                           ;Main V4.1.c: 339: unsigned int q;
  4298                           ;Main V4.1.c: 340: char lownib,upnib;
  4299                           ;Main V4.1.c: 341: unsigned char page = 0xB0;
  4300                           
  4301                           ;incstack = 0
  4302                           ; Regs used in _location: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4303  0D1D  30B0               	movlw	176
  4304  0D1E  00F5               	movwf	??_location
  4305  0D1F  0875               	movf	??_location,w
  4306  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  4307  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  4308  0D22  00A4               	movwf	location@page
  4309                           
  4310                           ;Main V4.1.c: 343: comm_out (0x40);
  4311  0D23  3040               	movlw	64
  4312  0D24  120A  158A  20E7  120A  158A  	fcall	_comm_out
  4313                           
  4314                           ;Main V4.1.c: 344: upnib = 0x10;
  4315  0D29  3010               	movlw	16
  4316  0D2A  00F5               	movwf	??_location
  4317  0D2B  0875               	movf	??_location,w
  4318  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  4319  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  4320  0D2E  00A3               	movwf	location@upnib
  4321                           
  4322                           ;Main V4.1.c: 345: lownib = 0x00;
  4323  0D2F  01A2               	clrf	location@lownib
  4324                           
  4325                           ;Main V4.1.c: 346: for (i=0;i<128;i++){
  4326  0D30  01A9               	clrf	location@i
  4327  0D31  01AA               	clrf	location@i+1
  4328  0D32  3000               	movlw	0
  4329  0D33  022A               	subwf	location@i+1,w
  4330  0D34  3080               	movlw	128
  4331  0D35  1903               	skipnz
  4332  0D36  0229               	subwf	location@i,w
  4333  0D37  1803               	btfsc	3,0
  4334  0D38  2D74               	goto	l1935
  4335  0D39                     l1925:	
  4336                           
  4337                           ;Main V4.1.c: 347: if (position[0] == i){
  4338  0D39  0873               	movf	location@position,w
  4339  0D3A  0084               	movwf	4
  4340  0D3B  1783               	bsf	3,7
  4341  0D3C  1C74               	btfss	location@position+1,0
  4342  0D3D  1383               	bcf	3,7
  4343  0D3E  0800               	movf	0,w
  4344  0D3F  00F5               	movwf	??_location
  4345  0D40  0A84               	incf	4,f
  4346  0D41  0800               	movf	0,w
  4347  0D42  00F6               	movwf	??_location+1
  4348  0D43  082A               	movf	location@i+1,w
  4349  0D44  0676               	xorwf	??_location+1,w
  4350  0D45  1D03               	skipz
  4351  0D46  2D49               	goto	u1585
  4352  0D47  0829               	movf	location@i,w
  4353  0D48  0675               	xorwf	??_location,w
  4354  0D49                     u1585:	
  4355  0D49  1D03               	skipz
  4356  0D4A  2D67               	goto	l152
  4357                           
  4358                           ;Main V4.1.c: 348: k = i;
  4359  0D4B  082A               	movf	location@i+1,w
  4360  0D4C  00A8               	movwf	location@k+1
  4361  0D4D  0829               	movf	location@i,w
  4362  0D4E  00A7               	movwf	location@k
  4363  0D4F                     l1931:	
  4364                           ;Main V4.1.c: 349: while (k > 15){
  4365                           
  4366  0D4F  3000               	movlw	0
  4367  0D50  0228               	subwf	location@k+1,w
  4368  0D51  3010               	movlw	16
  4369  0D52  1903               	skipnz
  4370  0D53  0227               	subwf	location@k,w
  4371  0D54  1C03               	btfss	3,0
  4372  0D55  2D63               	goto	l1933
  4373                           
  4374                           ;Main V4.1.c: 350: k = k - 16;
  4375  0D56  0827               	movf	location@k,w
  4376  0D57  3EF0               	addlw	240
  4377  0D58  00A7               	movwf	location@k
  4378  0D59  0828               	movf	location@k+1,w
  4379  0D5A  1803               	skipnc
  4380  0D5B  3E01               	addlw	1
  4381  0D5C  3EFF               	addlw	255
  4382  0D5D  00A8               	movwf	location@k+1
  4383                           
  4384                           ;Main V4.1.c: 351: upnib++;
  4385  0D5E  3001               	movlw	1
  4386  0D5F  00F5               	movwf	??_location
  4387  0D60  0875               	movf	??_location,w
  4388  0D61  07A3               	addwf	location@upnib,f
  4389  0D62  2D4F               	goto	l1931
  4390  0D63                     l1933:	
  4391                           
  4392                           ;Main V4.1.c: 352: }
  4393                           ;Main V4.1.c: 353: lownib = k;
  4394  0D63  0827               	movf	location@k,w
  4395  0D64  00F5               	movwf	??_location
  4396  0D65  0875               	movf	??_location,w
  4397  0D66  00A2               	movwf	location@lownib
  4398  0D67                     l152:	
  4399  0D67  3001               	movlw	1
  4400  0D68  07A9               	addwf	location@i,f
  4401  0D69  1803               	skipnc
  4402  0D6A  0AAA               	incf	location@i+1,f
  4403  0D6B  3000               	movlw	0
  4404  0D6C  07AA               	addwf	location@i+1,f
  4405  0D6D  3000               	movlw	0
  4406  0D6E  022A               	subwf	location@i+1,w
  4407  0D6F  3080               	movlw	128
  4408  0D70  1903               	skipnz
  4409  0D71  0229               	subwf	location@i,w
  4410  0D72  1C03               	skipc
  4411  0D73  2D39               	goto	l1925
  4412  0D74                     l1935:	
  4413                           
  4414                           ;Main V4.1.c: 354: }
  4415                           ;Main V4.1.c: 355: }
  4416                           ;Main V4.1.c: 356: j = 0;
  4417  0D74  01A0               	clrf	location@j
  4418  0D75  01A1               	clrf	location@j+1
  4419  0D76                     l1945:	
  4420                           
  4421                           ;Main V4.1.c: 363: q = 0x01;
  4422  0D76  3001               	movlw	1
  4423  0D77  00A5               	movwf	location@q
  4424  0D78  3000               	movlw	0
  4425  0D79  00A6               	movwf	location@q+1
  4426  0D7A                     l1947:	
  4427  0D7A  3002               	movlw	2
  4428  0D7B  00F5               	movwf	??_location
  4429  0D7C  0875               	movf	??_location,w
  4430  0D7D  0773               	addwf	location@position,w
  4431  0D7E  00F7               	movwf	??_location+2
  4432  0D7F  0874               	movf	location@position+1,w
  4433  0D80  00F6               	movwf	??_location+1
  4434  0D81  1803               	skipnc
  4435  0D82  0AF6               	incf	??_location+1,f
  4436  0D83  1BF5               	btfsc	??_location,7
  4437  0D84  03F6               	decf	??_location+1,f
  4438  0D85  0876               	movf	??_location+1,w
  4439  0D86  00F8               	movwf	??_location+3
  4440  0D87  0877               	movf	??_location+2,w
  4441  0D88  0084               	movwf	4
  4442  0D89  1783               	bsf	3,7
  4443  0D8A  1C78               	btfss	??_location+3,0
  4444  0D8B  1383               	bcf	3,7
  4445  0D8C  0800               	movf	0,w
  4446  0D8D  00F9               	movwf	??_location+4
  4447  0D8E  0A84               	incf	4,f
  4448  0D8F  0800               	movf	0,w
  4449  0D90  00FA               	movwf	??_location+5
  4450  0D91  0821               	movf	location@j+1,w
  4451  0D92  067A               	xorwf	??_location+5,w
  4452  0D93  1D03               	skipz
  4453  0D94  2D97               	goto	u1625
  4454  0D95  0820               	movf	location@j,w
  4455  0D96  0679               	xorwf	??_location+4,w
  4456  0D97                     u1625:	
  4457  0D97  1903               	btfsc	3,2
  4458  0D98  2DAD               	goto	l1949
  4459                           
  4460                           ;Main V4.1.c: 359: q = q << 1;
  4461                           
  4462                           ;Main V4.1.c: 358: while (position[1] != j){
  4463                           
  4464                           ;Main V4.1.c: 357: q = 0x0001;
  4465  0D99  1003               	clrc
  4466  0D9A  0D25               	rlf	location@q,w
  4467  0D9B  00A5               	movwf	location@q
  4468  0D9C  0D26               	rlf	location@q+1,w
  4469  0D9D  00A6               	movwf	location@q+1
  4470                           
  4471                           ;Main V4.1.c: 360: j++;
  4472  0D9E  3001               	movlw	1
  4473  0D9F  07A0               	addwf	location@j,f
  4474  0DA0  1803               	skipnc
  4475  0DA1  0AA1               	incf	location@j+1,f
  4476  0DA2  3000               	movlw	0
  4477  0DA3  07A1               	addwf	location@j+1,f
  4478                           
  4479                           ;Main V4.1.c: 361: if (q == 0x100){
  4480  0DA4  0326               	decf	location@q+1,w
  4481  0DA5  0425               	iorwf	location@q,w
  4482  0DA6  1D03               	btfss	3,2
  4483  0DA7  2D7A               	goto	l1947
  4484                           
  4485                           ;Main V4.1.c: 362: page++;
  4486  0DA8  3001               	movlw	1
  4487  0DA9  00F5               	movwf	??_location
  4488  0DAA  0875               	movf	??_location,w
  4489  0DAB  07A4               	addwf	location@page,f
  4490  0DAC  2D76               	goto	l1945
  4491  0DAD                     l1949:	
  4492                           
  4493                           ;Main V4.1.c: 364: }
  4494                           ;Main V4.1.c: 365: }
  4495                           ;Main V4.1.c: 366: comm_out (upnib);
  4496  0DAD  0823               	movf	location@upnib,w
  4497  0DAE  120A  158A  20E7  120A  158A  	fcall	_comm_out
  4498                           
  4499                           ;Main V4.1.c: 367: comm_out (lownib);
  4500  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0DB5  0822               	movf	location@lownib,w
  4503  0DB6  120A  158A  20E7  120A  158A  	fcall	_comm_out
  4504                           
  4505                           ;Main V4.1.c: 368: comm_out (page);
  4506  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  4508  0DBD  0824               	movf	location@page,w
  4509  0DBE  120A  158A  20E7   	fcall	_comm_out
  4510  0DC1  0008               	return
  4511  0DC2                     __end_of_location:	
  4512                           
  4513                           	psect	text7
  4514  0013                     __ptext7:	
  4515 ;; *************** function _char_to_decimal_print *****************
  4516 ;; Defined at:
  4517 ;;		line 593 in file "Main V4.1.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  value           2    8[COMMON] int 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  x               1   11[COMMON] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         2       0       0       0       0
  4532 ;;      Locals:         1       0       0       0       0
  4533 ;;      Temps:          1       0       0       0       0
  4534 ;;      Totals:         4       0       0       0       0
  4535 ;;Total ram usage:        4 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    2
  4538 ;; This function calls:
  4539 ;;		_LCDWriteCharacter
  4540 ;; This function is called by:
  4541 ;;		_display_temps_to_screen
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           
  4546                           ;psect for function _char_to_decimal_print
  4547  0013                     _char_to_decimal_print:	
  4548                           
  4549                           ;Main V4.1.c: 594: char x = 0;
  4550                           
  4551                           ;incstack = 0
  4552                           ; Regs used in _char_to_decimal_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  4553  0013  01FB               	clrf	char_to_decimal_print@x
  4554  0014                     l1967:	
  4555                           ;Main V4.1.c: 595: while (value >= 100){
  4556                           
  4557  0014  0879               	movf	char_to_decimal_print@value+1,w
  4558  0015  3A80               	xorlw	128
  4559  0016  00FF               	movwf	127
  4560  0017  3080               	movlw	128
  4561  0018  027F               	subwf	127,w
  4562  0019  1D03               	skipz
  4563  001A  281D               	goto	u1645
  4564  001B  3064               	movlw	100
  4565  001C  0278               	subwf	char_to_decimal_print@value,w
  4566  001D                     u1645:	
  4567  001D  1C03               	btfss	3,0
  4568  001E  282C               	goto	l1969
  4569                           
  4570                           ;Main V4.1.c: 596: value = value - 100;
  4571  001F  0878               	movf	char_to_decimal_print@value,w
  4572  0020  3E9C               	addlw	156
  4573  0021  00F8               	movwf	char_to_decimal_print@value
  4574  0022  0879               	movf	char_to_decimal_print@value+1,w
  4575  0023  1803               	skipnc
  4576  0024  3E01               	addlw	1
  4577  0025  3EFF               	addlw	255
  4578  0026  00F9               	movwf	char_to_decimal_print@value+1
  4579                           
  4580                           ;Main V4.1.c: 597: x++;
  4581  0027  3001               	movlw	1
  4582  0028  00FA               	movwf	??_char_to_decimal_print
  4583  0029  087A               	movf	??_char_to_decimal_print,w
  4584  002A  07FB               	addwf	char_to_decimal_print@x,f
  4585  002B  2814               	goto	l1967
  4586  002C                     l1969:	
  4587                           
  4588                           ;Main V4.1.c: 598: }
  4589                           ;Main V4.1.c: 599: x = x + 48;
  4590  002C  087B               	movf	char_to_decimal_print@x,w
  4591  002D  3E30               	addlw	48
  4592  002E  00FA               	movwf	??_char_to_decimal_print
  4593  002F  087A               	movf	??_char_to_decimal_print,w
  4594  0030  00FB               	movwf	char_to_decimal_print@x
  4595                           
  4596                           ;Main V4.1.c: 600: LCDWriteCharacter(x);
  4597  0031  087B               	movf	char_to_decimal_print@x,w
  4598  0032  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  4599                           
  4600                           ;Main V4.1.c: 601: x = 0;
  4601  0037  01FB               	clrf	char_to_decimal_print@x
  4602  0038                     l1977:	
  4603                           ;Main V4.1.c: 602: while (value >= 10){
  4604                           
  4605  0038  0879               	movf	char_to_decimal_print@value+1,w
  4606  0039  3A80               	xorlw	128
  4607  003A  00FF               	movwf	127
  4608  003B  3080               	movlw	128
  4609  003C  027F               	subwf	127,w
  4610  003D  1D03               	skipz
  4611  003E  2841               	goto	u1655
  4612  003F  300A               	movlw	10
  4613  0040  0278               	subwf	char_to_decimal_print@value,w
  4614  0041                     u1655:	
  4615  0041  1C03               	btfss	3,0
  4616  0042  2850               	goto	l1979
  4617                           
  4618                           ;Main V4.1.c: 603: value = value - 10;
  4619  0043  0878               	movf	char_to_decimal_print@value,w
  4620  0044  3EF6               	addlw	246
  4621  0045  00F8               	movwf	char_to_decimal_print@value
  4622  0046  0879               	movf	char_to_decimal_print@value+1,w
  4623  0047  1803               	skipnc
  4624  0048  3E01               	addlw	1
  4625  0049  3EFF               	addlw	255
  4626  004A  00F9               	movwf	char_to_decimal_print@value+1
  4627                           
  4628                           ;Main V4.1.c: 604: x++;
  4629  004B  3001               	movlw	1
  4630  004C  00FA               	movwf	??_char_to_decimal_print
  4631  004D  087A               	movf	??_char_to_decimal_print,w
  4632  004E  07FB               	addwf	char_to_decimal_print@x,f
  4633  004F  2838               	goto	l1977
  4634  0050                     l1979:	
  4635                           
  4636                           ;Main V4.1.c: 605: }
  4637                           ;Main V4.1.c: 606: x = x + 48;
  4638  0050  087B               	movf	char_to_decimal_print@x,w
  4639  0051  3E30               	addlw	48
  4640  0052  00FA               	movwf	??_char_to_decimal_print
  4641  0053  087A               	movf	??_char_to_decimal_print,w
  4642  0054  00FB               	movwf	char_to_decimal_print@x
  4643                           
  4644                           ;Main V4.1.c: 607: LCDWriteCharacter(x);
  4645  0055  087B               	movf	char_to_decimal_print@x,w
  4646  0056  120A  158A  2373  120A  118A  	fcall	_LCDWriteCharacter
  4647                           
  4648                           ;Main V4.1.c: 608: x = 0;
  4649  005B  01FB               	clrf	char_to_decimal_print@x
  4650  005C                     l1987:	
  4651                           ;Main V4.1.c: 609: while (value > 0){
  4652                           
  4653  005C  0879               	movf	char_to_decimal_print@value+1,w
  4654  005D  3A80               	xorlw	128
  4655  005E  00FF               	movwf	127
  4656  005F  3080               	movlw	128
  4657  0060  027F               	subwf	127,w
  4658  0061  1D03               	skipz
  4659  0062  2865               	goto	u1665
  4660  0063  3001               	movlw	1
  4661  0064  0278               	subwf	char_to_decimal_print@value,w
  4662  0065                     u1665:	
  4663  0065  1C03               	btfss	3,0
  4664  0066  2874               	goto	l1989
  4665                           
  4666                           ;Main V4.1.c: 610: value = value - 1;
  4667  0067  0878               	movf	char_to_decimal_print@value,w
  4668  0068  3EFF               	addlw	255
  4669  0069  00F8               	movwf	char_to_decimal_print@value
  4670  006A  0879               	movf	char_to_decimal_print@value+1,w
  4671  006B  1803               	skipnc
  4672  006C  3E01               	addlw	1
  4673  006D  3EFF               	addlw	255
  4674  006E  00F9               	movwf	char_to_decimal_print@value+1
  4675                           
  4676                           ;Main V4.1.c: 611: x++;
  4677  006F  3001               	movlw	1
  4678  0070  00FA               	movwf	??_char_to_decimal_print
  4679  0071  087A               	movf	??_char_to_decimal_print,w
  4680  0072  07FB               	addwf	char_to_decimal_print@x,f
  4681  0073  285C               	goto	l1987
  4682  0074                     l1989:	
  4683                           
  4684                           ;Main V4.1.c: 612: }
  4685                           ;Main V4.1.c: 613: x = x + 48;
  4686  0074  087B               	movf	char_to_decimal_print@x,w
  4687  0075  3E30               	addlw	48
  4688  0076  00FA               	movwf	??_char_to_decimal_print
  4689  0077  087A               	movf	??_char_to_decimal_print,w
  4690  0078  00FB               	movwf	char_to_decimal_print@x
  4691                           
  4692                           ;Main V4.1.c: 614: LCDWriteCharacter(x);
  4693  0079  087B               	movf	char_to_decimal_print@x,w
  4694  007A  120A  158A  2373   	fcall	_LCDWriteCharacter
  4695                           
  4696                           ;Main V4.1.c: 615: x = 0;
  4697  007D  01FB               	clrf	char_to_decimal_print@x
  4698  007E  0008               	return
  4699  007F                     __end_of_char_to_decimal_print:	
  4700                           
  4701                           	psect	text8
  4702  0BFC                     __ptext8:	
  4703 ;; *************** function ___fttol *****************
  4704 ;; Defined at:
  4705 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  f1              3   18[BANK0 ] float 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  lval            4   27[BANK0 ] unsigned long 
  4710 ;;  exp1            1   31[BANK0 ] unsigned char 
  4711 ;;  sign1           1   26[BANK0 ] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  4   18[BANK0 ] long 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4721 ;;      Params:         0       4       0       0       0
  4722 ;;      Locals:         0       6       0       0       0
  4723 ;;      Temps:          0       4       0       0       0
  4724 ;;      Totals:         0      14       0       0       0
  4725 ;;Total ram usage:       14 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_display_temps_to_screen
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           
  4735                           ;psect for function ___fttol
  4736  0BFC                     ___fttol:	
  4737                           
  4738                           ;incstack = 0
  4739                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4740  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  4742  0BFE  0832               	movf	___fttol@f1,w
  4743  0BFF  00B6               	movwf	??___fttol
  4744  0C00  0833               	movf	___fttol@f1+1,w
  4745  0C01  00B7               	movwf	??___fttol+1
  4746  0C02  0834               	movf	___fttol@f1+2,w
  4747  0C03  00B8               	movwf	??___fttol+2
  4748  0C04  1003               	clrc
  4749  0C05  0D37               	rlf	??___fttol+1,w
  4750  0C06  0D38               	rlf	??___fttol+2,w
  4751  0C07  00B9               	movwf	??___fttol+3
  4752  0C08  0839               	movf	??___fttol+3,w
  4753  0C09  00BF               	movwf	___fttol@exp1
  4754  0C0A  083F               	movf	___fttol@exp1,w
  4755  0C0B  1D03               	btfss	3,2
  4756  0C0C  2C16               	goto	l2093
  4757  0C0D  3000               	movlw	0
  4758  0C0E  00B5               	movwf	?___fttol+3
  4759  0C0F  3000               	movlw	0
  4760  0C10  00B4               	movwf	?___fttol+2
  4761  0C11  3000               	movlw	0
  4762  0C12  00B3               	movwf	?___fttol+1
  4763  0C13  3000               	movlw	0
  4764  0C14  00B2               	movwf	?___fttol
  4765  0C15  0008               	return
  4766  0C16                     l2093:	
  4767  0C16  0832               	movf	___fttol@f1,w
  4768  0C17  00B6               	movwf	??___fttol
  4769  0C18  0833               	movf	___fttol@f1+1,w
  4770  0C19  00B7               	movwf	??___fttol+1
  4771  0C1A  0834               	movf	___fttol@f1+2,w
  4772  0C1B  00B8               	movwf	??___fttol+2
  4773  0C1C  3017               	movlw	23
  4774  0C1D                     u1885:	
  4775  0C1D  1003               	clrc
  4776  0C1E  0CB8               	rrf	??___fttol+2,f
  4777  0C1F  0CB7               	rrf	??___fttol+1,f
  4778  0C20  0CB6               	rrf	??___fttol,f
  4779  0C21  3EFF               	addlw	-1
  4780  0C22  1D03               	skipz
  4781  0C23  2C1D               	goto	u1885
  4782  0C24  0836               	movf	??___fttol,w
  4783  0C25  00B9               	movwf	??___fttol+3
  4784  0C26  0839               	movf	??___fttol+3,w
  4785  0C27  00BA               	movwf	___fttol@sign1
  4786  0C28  17B3               	bsf	___fttol@f1+1,7
  4787  0C29  30FF               	movlw	255
  4788  0C2A  05B2               	andwf	___fttol@f1,f
  4789  0C2B  30FF               	movlw	255
  4790  0C2C  05B3               	andwf	___fttol@f1+1,f
  4791  0C2D  3000               	movlw	0
  4792  0C2E  05B4               	andwf	___fttol@f1+2,f
  4793  0C2F  0832               	movf	___fttol@f1,w
  4794  0C30  00BB               	movwf	___fttol@lval
  4795  0C31  0833               	movf	___fttol@f1+1,w
  4796  0C32  00BC               	movwf	___fttol@lval+1
  4797  0C33  0834               	movf	___fttol@f1+2,w
  4798  0C34  00BD               	movwf	___fttol@lval+2
  4799  0C35  01BE               	clrf	___fttol@lval+3
  4800  0C36  308E               	movlw	142
  4801  0C37  02BF               	subwf	___fttol@exp1,f
  4802  0C38  1FBF               	btfss	___fttol@exp1,7
  4803  0C39  2C58               	goto	l2113
  4804  0C3A  083F               	movf	___fttol@exp1,w
  4805  0C3B  3A80               	xorlw	128
  4806  0C3C  3E8F               	addlw	143
  4807  0C3D  1803               	skipnc
  4808  0C3E  2C48               	goto	l2111
  4809  0C3F  3000               	movlw	0
  4810  0C40  00B5               	movwf	?___fttol+3
  4811  0C41  3000               	movlw	0
  4812  0C42  00B4               	movwf	?___fttol+2
  4813  0C43  3000               	movlw	0
  4814  0C44  00B3               	movwf	?___fttol+1
  4815  0C45  3000               	movlw	0
  4816  0C46  00B2               	movwf	?___fttol
  4817  0C47  0008               	return
  4818  0C48                     l2111:	
  4819  0C48  3001               	movlw	1
  4820  0C49                     u1915:	
  4821  0C49  1003               	clrc
  4822  0C4A  0CBE               	rrf	___fttol@lval+3,f
  4823  0C4B  0CBD               	rrf	___fttol@lval+2,f
  4824  0C4C  0CBC               	rrf	___fttol@lval+1,f
  4825  0C4D  0CBB               	rrf	___fttol@lval,f
  4826  0C4E  3EFF               	addlw	-1
  4827  0C4F  1D03               	skipz
  4828  0C50  2C49               	goto	u1915
  4829  0C51  3001               	movlw	1
  4830  0C52  00B6               	movwf	??___fttol
  4831  0C53  0836               	movf	??___fttol,w
  4832  0C54  07BF               	addwf	___fttol@exp1,f
  4833  0C55  1903               	btfsc	3,2
  4834  0C56  2C73               	goto	l2121
  4835  0C57  2C48               	goto	l2111
  4836  0C58                     l2113:	
  4837  0C58  3018               	movlw	24
  4838  0C59  023F               	subwf	___fttol@exp1,w
  4839  0C5A  1C03               	skipc
  4840  0C5B  2C70               	goto	l583
  4841  0C5C  3000               	movlw	0
  4842  0C5D  00B5               	movwf	?___fttol+3
  4843  0C5E  3000               	movlw	0
  4844  0C5F  00B4               	movwf	?___fttol+2
  4845  0C60  3000               	movlw	0
  4846  0C61  00B3               	movwf	?___fttol+1
  4847  0C62  3000               	movlw	0
  4848  0C63  00B2               	movwf	?___fttol
  4849  0C64  0008               	return
  4850  0C65                     l2119:	
  4851  0C65  3001               	movlw	1
  4852  0C66  00B6               	movwf	??___fttol
  4853  0C67                     u1945:	
  4854  0C67  1003               	clrc
  4855  0C68  0DBB               	rlf	___fttol@lval,f
  4856  0C69  0DBC               	rlf	___fttol@lval+1,f
  4857  0C6A  0DBD               	rlf	___fttol@lval+2,f
  4858  0C6B  0DBE               	rlf	___fttol@lval+3,f
  4859  0C6C  0BB6               	decfsz	??___fttol,f
  4860  0C6D  2C67               	goto	u1945
  4861  0C6E  3001               	movlw	1
  4862  0C6F  02BF               	subwf	___fttol@exp1,f
  4863  0C70                     l583:	
  4864  0C70  083F               	movf	___fttol@exp1,w
  4865  0C71  1D03               	btfss	3,2
  4866  0C72  2C65               	goto	l2119
  4867  0C73                     l2121:	
  4868  0C73  083A               	movf	___fttol@sign1,w
  4869  0C74  1903               	btfsc	3,2
  4870  0C75  2C81               	goto	l2125
  4871  0C76  09BB               	comf	___fttol@lval,f
  4872  0C77  09BC               	comf	___fttol@lval+1,f
  4873  0C78  09BD               	comf	___fttol@lval+2,f
  4874  0C79  09BE               	comf	___fttol@lval+3,f
  4875  0C7A  0ABB               	incf	___fttol@lval,f
  4876  0C7B  1903               	skipnz
  4877  0C7C  0ABC               	incf	___fttol@lval+1,f
  4878  0C7D  1903               	skipnz
  4879  0C7E  0ABD               	incf	___fttol@lval+2,f
  4880  0C7F  1903               	skipnz
  4881  0C80  0ABE               	incf	___fttol@lval+3,f
  4882  0C81                     l2125:	
  4883  0C81  083E               	movf	___fttol@lval+3,w
  4884  0C82  00B5               	movwf	?___fttol+3
  4885  0C83  083D               	movf	___fttol@lval+2,w
  4886  0C84  00B4               	movwf	?___fttol+2
  4887  0C85  083C               	movf	___fttol@lval+1,w
  4888  0C86  00B3               	movwf	?___fttol+1
  4889  0C87  083B               	movf	___fttol@lval,w
  4890  0C88  00B2               	movwf	?___fttol
  4891  0C89  0008               	return
  4892  0C8A                     __end_of___fttol:	
  4893                           
  4894                           	psect	text9
  4895  0DC2                     __ptext9:	
  4896 ;; *************** function ___ftmul *****************
  4897 ;; Defined at:
  4898 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  f1              3    2[BANK0 ] float 
  4901 ;;  f2              3    5[BANK0 ] float 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  f3_as_produc    3   13[BANK0 ] unsigned um
  4904 ;;  sign            1   17[BANK0 ] unsigned char 
  4905 ;;  cntr            1   16[BANK0 ] unsigned char 
  4906 ;;  exp             1   12[BANK0 ] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  3    2[BANK0 ] float 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0, pclath, cstack
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4916 ;;      Params:         0       6       0       0       0
  4917 ;;      Locals:         0       6       0       0       0
  4918 ;;      Temps:          0       4       0       0       0
  4919 ;;      Totals:         0      16       0       0       0
  4920 ;;Total ram usage:       16 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    1
  4923 ;; This function calls:
  4924 ;;		___ftpack
  4925 ;; This function is called by:
  4926 ;;		_display_temps_to_screen
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function ___ftmul
  4932  0DC2                     ___ftmul:	
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4936  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  4937  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  4938  0DC4  0822               	movf	___ftmul@f1,w
  4939  0DC5  00A8               	movwf	??___ftmul
  4940  0DC6  0823               	movf	___ftmul@f1+1,w
  4941  0DC7  00A9               	movwf	??___ftmul+1
  4942  0DC8  0824               	movf	___ftmul@f1+2,w
  4943  0DC9  00AA               	movwf	??___ftmul+2
  4944  0DCA  1003               	clrc
  4945  0DCB  0D29               	rlf	??___ftmul+1,w
  4946  0DCC  0D2A               	rlf	??___ftmul+2,w
  4947  0DCD  00AB               	movwf	??___ftmul+3
  4948  0DCE  082B               	movf	??___ftmul+3,w
  4949  0DCF  00AC               	movwf	___ftmul@exp
  4950  0DD0  082C               	movf	___ftmul@exp,w
  4951  0DD1  1D03               	btfss	3,2
  4952  0DD2  2DDA               	goto	l2043
  4953  0DD3  3000               	movlw	0
  4954  0DD4  00A2               	movwf	?___ftmul
  4955  0DD5  3000               	movlw	0
  4956  0DD6  00A3               	movwf	?___ftmul+1
  4957  0DD7  3000               	movlw	0
  4958  0DD8  00A4               	movwf	?___ftmul+2
  4959  0DD9  0008               	return
  4960  0DDA                     l2043:	
  4961  0DDA  0825               	movf	___ftmul@f2,w
  4962  0DDB  00A8               	movwf	??___ftmul
  4963  0DDC  0826               	movf	___ftmul@f2+1,w
  4964  0DDD  00A9               	movwf	??___ftmul+1
  4965  0DDE  0827               	movf	___ftmul@f2+2,w
  4966  0DDF  00AA               	movwf	??___ftmul+2
  4967  0DE0  1003               	clrc
  4968  0DE1  0D29               	rlf	??___ftmul+1,w
  4969  0DE2  0D2A               	rlf	??___ftmul+2,w
  4970  0DE3  00AB               	movwf	??___ftmul+3
  4971  0DE4  082B               	movf	??___ftmul+3,w
  4972  0DE5  00B1               	movwf	___ftmul@sign
  4973  0DE6  0831               	movf	___ftmul@sign,w
  4974  0DE7  1D03               	btfss	3,2
  4975  0DE8  2DF0               	goto	l2049
  4976  0DE9  3000               	movlw	0
  4977  0DEA  00A2               	movwf	?___ftmul
  4978  0DEB  3000               	movlw	0
  4979  0DEC  00A3               	movwf	?___ftmul+1
  4980  0DED  3000               	movlw	0
  4981  0DEE  00A4               	movwf	?___ftmul+2
  4982  0DEF  0008               	return
  4983  0DF0                     l2049:	
  4984  0DF0  0831               	movf	___ftmul@sign,w
  4985  0DF1  3E7B               	addlw	123
  4986  0DF2  00A8               	movwf	??___ftmul
  4987  0DF3  0828               	movf	??___ftmul,w
  4988  0DF4  07AC               	addwf	___ftmul@exp,f
  4989  0DF5  0822               	movf	___ftmul@f1,w
  4990  0DF6  00A8               	movwf	??___ftmul
  4991  0DF7  0823               	movf	___ftmul@f1+1,w
  4992  0DF8  00A9               	movwf	??___ftmul+1
  4993  0DF9  0824               	movf	___ftmul@f1+2,w
  4994  0DFA  00AA               	movwf	??___ftmul+2
  4995  0DFB  3010               	movlw	16
  4996  0DFC                     u1755:	
  4997  0DFC  1003               	clrc
  4998  0DFD  0CAA               	rrf	??___ftmul+2,f
  4999  0DFE  0CA9               	rrf	??___ftmul+1,f
  5000  0DFF  0CA8               	rrf	??___ftmul,f
  5001  0E00  3EFF               	addlw	-1
  5002  0E01  1D03               	skipz
  5003  0E02  2DFC               	goto	u1755
  5004  0E03  0828               	movf	??___ftmul,w
  5005  0E04  00AB               	movwf	??___ftmul+3
  5006  0E05  082B               	movf	??___ftmul+3,w
  5007  0E06  00B1               	movwf	___ftmul@sign
  5008  0E07  0825               	movf	___ftmul@f2,w
  5009  0E08  00A8               	movwf	??___ftmul
  5010  0E09  0826               	movf	___ftmul@f2+1,w
  5011  0E0A  00A9               	movwf	??___ftmul+1
  5012  0E0B  0827               	movf	___ftmul@f2+2,w
  5013  0E0C  00AA               	movwf	??___ftmul+2
  5014  0E0D  3010               	movlw	16
  5015  0E0E                     u1765:	
  5016  0E0E  1003               	clrc
  5017  0E0F  0CAA               	rrf	??___ftmul+2,f
  5018  0E10  0CA9               	rrf	??___ftmul+1,f
  5019  0E11  0CA8               	rrf	??___ftmul,f
  5020  0E12  3EFF               	addlw	-1
  5021  0E13  1D03               	skipz
  5022  0E14  2E0E               	goto	u1765
  5023  0E15  0828               	movf	??___ftmul,w
  5024  0E16  00AB               	movwf	??___ftmul+3
  5025  0E17  082B               	movf	??___ftmul+3,w
  5026  0E18  06B1               	xorwf	___ftmul@sign,f
  5027  0E19  3080               	movlw	128
  5028  0E1A  00A8               	movwf	??___ftmul
  5029  0E1B  0828               	movf	??___ftmul,w
  5030  0E1C  05B1               	andwf	___ftmul@sign,f
  5031  0E1D  17A3               	bsf	___ftmul@f1+1,7
  5032  0E1E  17A6               	bsf	___ftmul@f2+1,7
  5033  0E1F  30FF               	movlw	255
  5034  0E20  05A5               	andwf	___ftmul@f2,f
  5035  0E21  30FF               	movlw	255
  5036  0E22  05A6               	andwf	___ftmul@f2+1,f
  5037  0E23  3000               	movlw	0
  5038  0E24  05A7               	andwf	___ftmul@f2+2,f
  5039  0E25  3000               	movlw	0
  5040  0E26  00AD               	movwf	___ftmul@f3_as_product
  5041  0E27  3000               	movlw	0
  5042  0E28  00AE               	movwf	___ftmul@f3_as_product+1
  5043  0E29  3000               	movlw	0
  5044  0E2A  00AF               	movwf	___ftmul@f3_as_product+2
  5045  0E2B  3007               	movlw	7
  5046  0E2C  00A8               	movwf	??___ftmul
  5047  0E2D  0828               	movf	??___ftmul,w
  5048  0E2E  00B0               	movwf	___ftmul@cntr
  5049  0E2F                     l2061:	
  5050  0E2F  1C22               	btfss	___ftmul@f1,0
  5051  0E30  2E3F               	goto	l2065
  5052  0E31  0825               	movf	___ftmul@f2,w
  5053  0E32  07AD               	addwf	___ftmul@f3_as_product,f
  5054  0E33  0826               	movf	___ftmul@f2+1,w
  5055  0E34  1103               	clrz
  5056  0E35  1803               	skipnc
  5057  0E36  0A26               	incf	___ftmul@f2+1,w
  5058  0E37  1D03               	btfss	3,2
  5059  0E38  07AE               	addwf	___ftmul@f3_as_product+1,f
  5060  0E39  0827               	movf	___ftmul@f2+2,w
  5061  0E3A  1103               	clrz
  5062  0E3B  1803               	skipnc
  5063  0E3C  0A27               	incf	___ftmul@f2+2,w
  5064  0E3D  1D03               	btfss	3,2
  5065  0E3E  07AF               	addwf	___ftmul@f3_as_product+2,f
  5066  0E3F                     l2065:	
  5067  0E3F  3001               	movlw	1
  5068  0E40                     u1795:	
  5069  0E40  1003               	clrc
  5070  0E41  0CA4               	rrf	___ftmul@f1+2,f
  5071  0E42  0CA3               	rrf	___ftmul@f1+1,f
  5072  0E43  0CA2               	rrf	___ftmul@f1,f
  5073  0E44  3EFF               	addlw	-1
  5074  0E45  1D03               	skipz
  5075  0E46  2E40               	goto	u1795
  5076  0E47  3001               	movlw	1
  5077  0E48                     u1805:	
  5078  0E48  1003               	clrc
  5079  0E49  0DA5               	rlf	___ftmul@f2,f
  5080  0E4A  0DA6               	rlf	___ftmul@f2+1,f
  5081  0E4B  0DA7               	rlf	___ftmul@f2+2,f
  5082  0E4C  3EFF               	addlw	-1
  5083  0E4D  1D03               	skipz
  5084  0E4E  2E48               	goto	u1805
  5085  0E4F  3001               	movlw	1
  5086  0E50  02B0               	subwf	___ftmul@cntr,f
  5087  0E51  1D03               	btfss	3,2
  5088  0E52  2E2F               	goto	l2061
  5089  0E53  3009               	movlw	9
  5090  0E54  00A8               	movwf	??___ftmul
  5091  0E55  0828               	movf	??___ftmul,w
  5092  0E56  00B0               	movwf	___ftmul@cntr
  5093  0E57                     l2073:	
  5094  0E57  1C22               	btfss	___ftmul@f1,0
  5095  0E58  2E67               	goto	l2077
  5096  0E59  0825               	movf	___ftmul@f2,w
  5097  0E5A  07AD               	addwf	___ftmul@f3_as_product,f
  5098  0E5B  0826               	movf	___ftmul@f2+1,w
  5099  0E5C  1103               	clrz
  5100  0E5D  1803               	skipnc
  5101  0E5E  0A26               	incf	___ftmul@f2+1,w
  5102  0E5F  1D03               	btfss	3,2
  5103  0E60  07AE               	addwf	___ftmul@f3_as_product+1,f
  5104  0E61  0827               	movf	___ftmul@f2+2,w
  5105  0E62  1103               	clrz
  5106  0E63  1803               	skipnc
  5107  0E64  0A27               	incf	___ftmul@f2+2,w
  5108  0E65  1D03               	btfss	3,2
  5109  0E66  07AF               	addwf	___ftmul@f3_as_product+2,f
  5110  0E67                     l2077:	
  5111  0E67  3001               	movlw	1
  5112  0E68                     u1845:	
  5113  0E68  1003               	clrc
  5114  0E69  0CA4               	rrf	___ftmul@f1+2,f
  5115  0E6A  0CA3               	rrf	___ftmul@f1+1,f
  5116  0E6B  0CA2               	rrf	___ftmul@f1,f
  5117  0E6C  3EFF               	addlw	-1
  5118  0E6D  1D03               	skipz
  5119  0E6E  2E68               	goto	u1845
  5120  0E6F  3001               	movlw	1
  5121  0E70                     u1855:	
  5122  0E70  1003               	clrc
  5123  0E71  0CAF               	rrf	___ftmul@f3_as_product+2,f
  5124  0E72  0CAE               	rrf	___ftmul@f3_as_product+1,f
  5125  0E73  0CAD               	rrf	___ftmul@f3_as_product,f
  5126  0E74  3EFF               	addlw	-1
  5127  0E75  1D03               	skipz
  5128  0E76  2E70               	goto	u1855
  5129  0E77  3001               	movlw	1
  5130  0E78  02B0               	subwf	___ftmul@cntr,f
  5131  0E79  1D03               	btfss	3,2
  5132  0E7A  2E57               	goto	l2073
  5133  0E7B  082D               	movf	___ftmul@f3_as_product,w
  5134  0E7C  00F0               	movwf	___ftpack@arg
  5135  0E7D  082E               	movf	___ftmul@f3_as_product+1,w
  5136  0E7E  00F1               	movwf	___ftpack@arg+1
  5137  0E7F  082F               	movf	___ftmul@f3_as_product+2,w
  5138  0E80  00F2               	movwf	___ftpack@arg+2
  5139  0E81  082C               	movf	___ftmul@exp,w
  5140  0E82  00A8               	movwf	??___ftmul
  5141  0E83  0828               	movf	??___ftmul,w
  5142  0E84  00F3               	movwf	___ftpack@exp
  5143  0E85  0831               	movf	___ftmul@sign,w
  5144  0E86  00A9               	movwf	??___ftmul+1
  5145  0E87  0829               	movf	??___ftmul+1,w
  5146  0E88  00F4               	movwf	___ftpack@sign
  5147  0E89  120A  158A  2307   	fcall	___ftpack
  5148  0E8C  0870               	movf	?___ftpack,w
  5149  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  5150  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  5151  0E8F  00A2               	movwf	?___ftmul
  5152  0E90  0871               	movf	?___ftpack+1,w
  5153  0E91  00A3               	movwf	?___ftmul+1
  5154  0E92  0872               	movf	?___ftpack+2,w
  5155  0E93  00A4               	movwf	?___ftmul+2
  5156  0E94  0008               	return
  5157  0E95                     __end_of___ftmul:	
  5158                           
  5159                           	psect	text10
  5160  091C                     __ptext10:	
  5161 ;; *************** function ___awtoft *****************
  5162 ;; Defined at:
  5163 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  c               2    8[COMMON] int 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  sign            1   13[COMMON] unsigned char 
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  3    8[COMMON] float 
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0, pclath, cstack
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5177 ;;      Params:         3       0       0       0       0
  5178 ;;      Locals:         1       0       0       0       0
  5179 ;;      Temps:          2       0       0       0       0
  5180 ;;      Totals:         6       0       0       0       0
  5181 ;;Total ram usage:        6 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:    1
  5184 ;; This function calls:
  5185 ;;		___ftpack
  5186 ;; This function is called by:
  5187 ;;		_display_temps_to_screen
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           
  5192                           ;psect for function ___awtoft
  5193  091C                     ___awtoft:	
  5194                           
  5195                           ;incstack = 0
  5196                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5197  091C  01FD               	clrf	___awtoft@sign
  5198  091D  1FF9               	btfss	___awtoft@c+1,7
  5199  091E  2926               	goto	l2033
  5200  091F  09F8               	comf	___awtoft@c,f
  5201  0920  09F9               	comf	___awtoft@c+1,f
  5202  0921  0AF8               	incf	___awtoft@c,f
  5203  0922  1903               	skipnz
  5204  0923  0AF9               	incf	___awtoft@c+1,f
  5205  0924  01FD               	clrf	___awtoft@sign
  5206  0925  0AFD               	incf	___awtoft@sign,f
  5207  0926                     l2033:	
  5208  0926  0878               	movf	___awtoft@c,w
  5209  0927  00F0               	movwf	___ftpack@arg
  5210  0928  0879               	movf	___awtoft@c+1,w
  5211  0929  00F1               	movwf	___ftpack@arg+1
  5212  092A  01F2               	clrf	___ftpack@arg+2
  5213  092B  308E               	movlw	142
  5214  092C  00FB               	movwf	??___awtoft
  5215  092D  087B               	movf	??___awtoft,w
  5216  092E  00F3               	movwf	___ftpack@exp
  5217  092F  087D               	movf	___awtoft@sign,w
  5218  0930  00FC               	movwf	??___awtoft+1
  5219  0931  087C               	movf	??___awtoft+1,w
  5220  0932  00F4               	movwf	___ftpack@sign
  5221  0933  120A  158A  2307   	fcall	___ftpack
  5222  0936  0870               	movf	?___ftpack,w
  5223  0937  00F8               	movwf	?___awtoft
  5224  0938  0871               	movf	?___ftpack+1,w
  5225  0939  00F9               	movwf	?___awtoft+1
  5226  093A  0872               	movf	?___ftpack+2,w
  5227  093B  00FA               	movwf	?___awtoft+2
  5228  093C  0008               	return
  5229  093D                     __end_of___awtoft:	
  5230                           
  5231                           	psect	text11
  5232  09CB                     __ptext11:	
  5233 ;; *************** function ___altoft *****************
  5234 ;; Defined at:
  5235 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  c               4    8[COMMON] long 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  sign            1    1[BANK0 ] unsigned char 
  5240 ;;  exp             1    0[BANK0 ] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  3    8[COMMON] float 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0, pclath, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5250 ;;      Params:         4       0       0       0       0
  5251 ;;      Locals:         0       2       0       0       0
  5252 ;;      Temps:          2       0       0       0       0
  5253 ;;      Totals:         6       2       0       0       0
  5254 ;;Total ram usage:        8 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    1
  5257 ;; This function calls:
  5258 ;;		___ftpack
  5259 ;; This function is called by:
  5260 ;;		_display_temps_to_screen
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           
  5265                           ;psect for function ___altoft
  5266  09CB                     ___altoft:	
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5270  09CB  1283               	bcf	3,5	;RP0=0, select bank0
  5271  09CC  1303               	bcf	3,6	;RP1=0, select bank0
  5272  09CD  01A1               	clrf	___altoft@sign
  5273  09CE  308E               	movlw	142
  5274  09CF  00FC               	movwf	??___altoft
  5275  09D0  087C               	movf	??___altoft,w
  5276  09D1  00A0               	movwf	___altoft@exp
  5277  09D2  1FFB               	btfss	___altoft@c+3,7
  5278  09D3  29E1               	goto	l2019
  5279  09D4  09F8               	comf	___altoft@c,f
  5280  09D5  09F9               	comf	___altoft@c+1,f
  5281  09D6  09FA               	comf	___altoft@c+2,f
  5282  09D7  09FB               	comf	___altoft@c+3,f
  5283  09D8  0AF8               	incf	___altoft@c,f
  5284  09D9  1903               	skipnz
  5285  09DA  0AF9               	incf	___altoft@c+1,f
  5286  09DB  1903               	skipnz
  5287  09DC  0AFA               	incf	___altoft@c+2,f
  5288  09DD  1903               	skipnz
  5289  09DE  0AFB               	incf	___altoft@c+3,f
  5290  09DF  01A1               	clrf	___altoft@sign
  5291  09E0  0AA1               	incf	___altoft@sign,f
  5292  09E1                     l2019:	
  5293  09E1  30FF               	movlw	255
  5294  09E2  057B               	andwf	___altoft@c+3,w
  5295  09E3  1903               	btfsc	3,2
  5296  09E4  29F3               	goto	l2021
  5297  09E5  3001               	movlw	1
  5298  09E6                     u1705:	
  5299  09E6  1003               	clrc
  5300  09E7  0CFB               	rrf	___altoft@c+3,f
  5301  09E8  0CFA               	rrf	___altoft@c+2,f
  5302  09E9  0CF9               	rrf	___altoft@c+1,f
  5303  09EA  0CF8               	rrf	___altoft@c,f
  5304  09EB  3EFF               	addlw	-1
  5305  09EC  1D03               	skipz
  5306  09ED  29E6               	goto	u1705
  5307  09EE  3001               	movlw	1
  5308  09EF  00FC               	movwf	??___altoft
  5309  09F0  087C               	movf	??___altoft,w
  5310  09F1  07A0               	addwf	___altoft@exp,f
  5311  09F2  29E1               	goto	l2019
  5312  09F3                     l2021:	
  5313  09F3  0878               	movf	___altoft@c,w
  5314  09F4  00F0               	movwf	___ftpack@arg
  5315  09F5  0879               	movf	___altoft@c+1,w
  5316  09F6  00F1               	movwf	___ftpack@arg+1
  5317  09F7  087A               	movf	___altoft@c+2,w
  5318  09F8  00F2               	movwf	___ftpack@arg+2
  5319  09F9  0820               	movf	___altoft@exp,w
  5320  09FA  00FC               	movwf	??___altoft
  5321  09FB  087C               	movf	??___altoft,w
  5322  09FC  00F3               	movwf	___ftpack@exp
  5323  09FD  0821               	movf	___altoft@sign,w
  5324  09FE  00FD               	movwf	??___altoft+1
  5325  09FF  087D               	movf	??___altoft+1,w
  5326  0A00  00F4               	movwf	___ftpack@sign
  5327  0A01  120A  158A  2307   	fcall	___ftpack
  5328  0A04  0870               	movf	?___ftpack,w
  5329  0A05  00F8               	movwf	?___altoft
  5330  0A06  0871               	movf	?___ftpack+1,w
  5331  0A07  00F9               	movwf	?___altoft+1
  5332  0A08  0872               	movf	?___ftpack+2,w
  5333  0A09  00FA               	movwf	?___altoft+2
  5334  0A0A  0008               	return
  5335  0A0B                     __end_of___altoft:	
  5336                           
  5337                           	psect	text12
  5338  0B07                     __ptext12:	
  5339 ;; *************** function ___ftpack *****************
  5340 ;; Defined at:
  5341 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  arg             3    0[COMMON] unsigned um
  5344 ;;  exp             1    3[COMMON] unsigned char 
  5345 ;;  sign            1    4[COMMON] unsigned char 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  3    0[COMMON] float 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5357 ;;      Params:         5       0       0       0       0
  5358 ;;      Locals:         0       0       0       0       0
  5359 ;;      Temps:          3       0       0       0       0
  5360 ;;      Totals:         8       0       0       0       0
  5361 ;;Total ram usage:        8 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		___altoft
  5367 ;;		___awtoft
  5368 ;;		___ftmul
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           
  5373                           ;psect for function ___ftpack
  5374  0B07                     ___ftpack:	
  5375                           
  5376                           ;incstack = 0
  5377                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5378  0B07  0873               	movf	___ftpack@exp,w
  5379  0B08  1903               	btfsc	3,2
  5380  0B09  2B0F               	goto	l1883
  5381  0B0A  0872               	movf	___ftpack@arg+2,w
  5382  0B0B  0471               	iorwf	___ftpack@arg+1,w
  5383  0B0C  0470               	iorwf	___ftpack@arg,w
  5384  0B0D  1D03               	skipz
  5385  0B0E  2B22               	goto	l1889
  5386  0B0F                     l1883:	
  5387  0B0F  3000               	movlw	0
  5388  0B10  00F0               	movwf	?___ftpack
  5389  0B11  3000               	movlw	0
  5390  0B12  00F1               	movwf	?___ftpack+1
  5391  0B13  3000               	movlw	0
  5392  0B14  00F2               	movwf	?___ftpack+2
  5393  0B15  0008               	return
  5394  0B16                     l1887:	
  5395  0B16  3001               	movlw	1
  5396  0B17  00F5               	movwf	??___ftpack
  5397  0B18  0875               	movf	??___ftpack,w
  5398  0B19  07F3               	addwf	___ftpack@exp,f
  5399  0B1A  3001               	movlw	1
  5400  0B1B                     u1475:	
  5401  0B1B  1003               	clrc
  5402  0B1C  0CF2               	rrf	___ftpack@arg+2,f
  5403  0B1D  0CF1               	rrf	___ftpack@arg+1,f
  5404  0B1E  0CF0               	rrf	___ftpack@arg,f
  5405  0B1F  3EFF               	addlw	-1
  5406  0B20  1D03               	skipz
  5407  0B21  2B1B               	goto	u1475
  5408  0B22                     l1889:	
  5409  0B22  30FE               	movlw	254
  5410  0B23  0572               	andwf	___ftpack@arg+2,w
  5411  0B24  1903               	btfsc	3,2
  5412  0B25  2B3D               	goto	l492
  5413  0B26  2B16               	goto	l1887
  5414  0B27                     l1891:	
  5415  0B27  3001               	movlw	1
  5416  0B28  00F5               	movwf	??___ftpack
  5417  0B29  0875               	movf	??___ftpack,w
  5418  0B2A  07F3               	addwf	___ftpack@exp,f
  5419  0B2B  3001               	movlw	1
  5420  0B2C  07F0               	addwf	___ftpack@arg,f
  5421  0B2D  3000               	movlw	0
  5422  0B2E  1803               	skipnc
  5423  0B2F  3001               	movlw	1
  5424  0B30  07F1               	addwf	___ftpack@arg+1,f
  5425  0B31  3000               	movlw	0
  5426  0B32  1803               	skipnc
  5427  0B33  3001               	movlw	1
  5428  0B34  07F2               	addwf	___ftpack@arg+2,f
  5429  0B35  3001               	movlw	1
  5430  0B36                     u1495:	
  5431  0B36  1003               	clrc
  5432  0B37  0CF2               	rrf	___ftpack@arg+2,f
  5433  0B38  0CF1               	rrf	___ftpack@arg+1,f
  5434  0B39  0CF0               	rrf	___ftpack@arg,f
  5435  0B3A  3EFF               	addlw	-1
  5436  0B3B  1D03               	skipz
  5437  0B3C  2B36               	goto	u1495
  5438  0B3D                     l492:	
  5439  0B3D  30FF               	movlw	255
  5440  0B3E  0572               	andwf	___ftpack@arg+2,w
  5441  0B3F  1903               	btfsc	3,2
  5442  0B40  2B4C               	goto	l1899
  5443  0B41  2B27               	goto	l1891
  5444  0B42                     l1897:	
  5445  0B42  3001               	movlw	1
  5446  0B43  02F3               	subwf	___ftpack@exp,f
  5447  0B44  3001               	movlw	1
  5448  0B45                     u1515:	
  5449  0B45  1003               	clrc
  5450  0B46  0DF0               	rlf	___ftpack@arg,f
  5451  0B47  0DF1               	rlf	___ftpack@arg+1,f
  5452  0B48  0DF2               	rlf	___ftpack@arg+2,f
  5453  0B49  3EFF               	addlw	-1
  5454  0B4A  1D03               	skipz
  5455  0B4B  2B45               	goto	u1515
  5456  0B4C                     l1899:	
  5457  0B4C  1BF1               	btfsc	___ftpack@arg+1,7
  5458  0B4D  2B52               	goto	l499
  5459  0B4E  3002               	movlw	2
  5460  0B4F  0273               	subwf	___ftpack@exp,w
  5461  0B50  1803               	skipnc
  5462  0B51  2B42               	goto	l1897
  5463  0B52                     l499:	
  5464  0B52  1873               	btfsc	___ftpack@exp,0
  5465  0B53  2B5A               	goto	l500
  5466  0B54  30FF               	movlw	255
  5467  0B55  05F0               	andwf	___ftpack@arg,f
  5468  0B56  307F               	movlw	127
  5469  0B57  05F1               	andwf	___ftpack@arg+1,f
  5470  0B58  30FF               	movlw	255
  5471  0B59  05F2               	andwf	___ftpack@arg+2,f
  5472  0B5A                     l500:	
  5473  0B5A  1003               	clrc
  5474  0B5B  0CF3               	rrf	___ftpack@exp,f
  5475  0B5C  0873               	movf	___ftpack@exp,w
  5476  0B5D  00F5               	movwf	??___ftpack
  5477  0B5E  01F6               	clrf	??___ftpack+1
  5478  0B5F  01F7               	clrf	??___ftpack+2
  5479  0B60  3010               	movlw	16
  5480  0B61                     u1555:	
  5481  0B61  1003               	clrc
  5482  0B62  0DF5               	rlf	??___ftpack,f
  5483  0B63  0DF6               	rlf	??___ftpack+1,f
  5484  0B64  0DF7               	rlf	??___ftpack+2,f
  5485  0B65  3EFF               	addlw	-1
  5486  0B66  1D03               	skipz
  5487  0B67  2B61               	goto	u1555
  5488  0B68  0875               	movf	??___ftpack,w
  5489  0B69  04F0               	iorwf	___ftpack@arg,f
  5490  0B6A  0876               	movf	??___ftpack+1,w
  5491  0B6B  04F1               	iorwf	___ftpack@arg+1,f
  5492  0B6C  0877               	movf	??___ftpack+2,w
  5493  0B6D  04F2               	iorwf	___ftpack@arg+2,f
  5494  0B6E  0874               	movf	___ftpack@sign,w
  5495  0B6F  1903               	btfsc	3,2
  5496  0B70  0008               	return
  5497  0B71  17F2               	bsf	___ftpack@arg+2,7
  5498  0B72  0008               	return
  5499  0B73                     __end_of___ftpack:	
  5500                           
  5501                           	psect	text13
  5502  08A6                     __ptext13:	
  5503 ;; *************** function _chip_select *****************
  5504 ;; Defined at:
  5505 ;;		line 581 in file "Main V4.1.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  chip            2    0[COMMON] int 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;		None
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  1    wreg      void 
  5512 ;; Registers used:
  5513 ;;		wreg, status,2, status,0
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5519 ;;      Params:         2       0       0       0       0
  5520 ;;      Locals:         0       0       0       0       0
  5521 ;;      Temps:          0       0       0       0       0
  5522 ;;      Totals:         2       0       0       0       0
  5523 ;;Total ram usage:        2 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; This function calls:
  5526 ;;		Nothing
  5527 ;; This function is called by:
  5528 ;;		_main
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           
  5533                           ;psect for function _chip_select
  5534  08A6                     _chip_select:	
  5535                           
  5536                           ;Main V4.1.c: 582: RC6 = 1;
  5537                           
  5538                           ;incstack = 0
  5539                           ; Regs used in _chip_select: [wreg+status,2+status,0]
  5540  08A6  1283               	bcf	3,5	;RP0=0, select bank0
  5541  08A7  1303               	bcf	3,6	;RP1=0, select bank0
  5542  08A8  1707               	bsf	7,6	;volatile
  5543                           
  5544                           ;Main V4.1.c: 583: if (chip == 1){
  5545  08A9  0370               	decf	chip_select@chip,w
  5546  08AA  0471               	iorwf	chip_select@chip+1,w
  5547  08AB  1D03               	btfss	3,2
  5548  08AC  28AF               	goto	l192
  5549                           
  5550                           ;Main V4.1.c: 584: RC6 = 0;
  5551  08AD  1307               	bcf	7,6	;volatile
  5552                           
  5553                           ;Main V4.1.c: 586: }
  5554  08AE  0008               	return
  5555  08AF                     l192:	
  5556                           
  5557                           ;Main V4.1.c: 587: else{
  5558                           ;Main V4.1.c: 588: RC6 = 1;
  5559  08AF  1707               	bsf	7,6	;volatile
  5560  08B0  0008               	return
  5561  08B1                     __end_of_chip_select:	
  5562                           
  5563                           	psect	text14
  5564  0AAA                     __ptext14:	
  5565 ;; *************** function _blank_image *****************
  5566 ;; Defined at:
  5567 ;;		line 283 in file "Main V4.1.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;  j               2    7[COMMON] unsigned int 
  5572 ;;  i               2    5[COMMON] unsigned int 
  5573 ;;  page            1    4[COMMON] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, pclath, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5583 ;;      Params:         0       0       0       0       0
  5584 ;;      Locals:         5       0       0       0       0
  5585 ;;      Temps:          1       0       0       0       0
  5586 ;;      Totals:         6       0       0       0       0
  5587 ;;Total ram usage:        6 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    1
  5590 ;; This function calls:
  5591 ;;		_comm_out
  5592 ;;		_data_out
  5593 ;; This function is called by:
  5594 ;;		_main
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function _blank_image
  5600  0AAA                     _blank_image:	
  5601                           
  5602                           ;Main V4.1.c: 284: unsigned int i,j;
  5603                           ;Main V4.1.c: 285: unsigned char page = 0xB0;
  5604                           
  5605                           ;incstack = 0
  5606                           ; Regs used in _blank_image: [wreg+status,2+status,0+pclath+cstack]
  5607  0AAA  30B0               	movlw	176
  5608  0AAB  00F3               	movwf	??_blank_image
  5609  0AAC  0873               	movf	??_blank_image,w
  5610  0AAD  00F4               	movwf	blank_image@page
  5611                           
  5612                           ;Main V4.1.c: 286: comm_out (0xAE);
  5613  0AAE  30AE               	movlw	174
  5614  0AAF  120A  158A  20E7  120A  158A  	fcall	_comm_out
  5615                           
  5616                           ;Main V4.1.c: 287: comm_out (0x40);
  5617  0AB4  3040               	movlw	64
  5618  0AB5  120A  158A  20E7  120A  158A  	fcall	_comm_out
  5619                           
  5620                           ;Main V4.1.c: 288: for (i=0;i<4;i++){
  5621  0ABA  01F5               	clrf	blank_image@i
  5622  0ABB  01F6               	clrf	blank_image@i+1
  5623  0ABC  3000               	movlw	0
  5624  0ABD  0276               	subwf	blank_image@i+1,w
  5625  0ABE  3004               	movlw	4
  5626  0ABF  1903               	skipnz
  5627  0AC0  0275               	subwf	blank_image@i,w
  5628  0AC1  1803               	btfsc	3,0
  5629  0AC2  2B02               	goto	l2189
  5630  0AC3                     l2169:	
  5631                           
  5632                           ;Main V4.1.c: 289: comm_out (page);
  5633  0AC3  0874               	movf	blank_image@page,w
  5634  0AC4  120A  158A  20E7  120A  158A  	fcall	_comm_out
  5635                           
  5636                           ;Main V4.1.c: 290: comm_out (0x10);
  5637  0AC9  3010               	movlw	16
  5638  0ACA  120A  158A  20E7  120A  158A  	fcall	_comm_out
  5639                           
  5640                           ;Main V4.1.c: 291: comm_out (0x00);
  5641  0ACF  3000               	movlw	0
  5642  0AD0  120A  158A  20E7  120A  158A  	fcall	_comm_out
  5643                           
  5644                           ;Main V4.1.c: 292: for (j=0;j<128;j++){
  5645  0AD5  01F7               	clrf	blank_image@j
  5646  0AD6  01F8               	clrf	blank_image@j+1
  5647  0AD7  3000               	movlw	0
  5648  0AD8  0278               	subwf	blank_image@j+1,w
  5649  0AD9  3080               	movlw	128
  5650  0ADA  1903               	skipnz
  5651  0ADB  0277               	subwf	blank_image@j,w
  5652  0ADC  1803               	btfsc	3,0
  5653  0ADD  2AF1               	goto	l2183
  5654  0ADE                     l2177:	
  5655                           
  5656                           ;Main V4.1.c: 293: data_out (0x00);
  5657  0ADE  3000               	movlw	0
  5658  0ADF  120A  158A  20D3  120A  158A  	fcall	_data_out
  5659  0AE4  3001               	movlw	1
  5660  0AE5  07F7               	addwf	blank_image@j,f
  5661  0AE6  1803               	skipnc
  5662  0AE7  0AF8               	incf	blank_image@j+1,f
  5663  0AE8  3000               	movlw	0
  5664  0AE9  07F8               	addwf	blank_image@j+1,f
  5665  0AEA  3000               	movlw	0
  5666  0AEB  0278               	subwf	blank_image@j+1,w
  5667  0AEC  3080               	movlw	128
  5668  0AED  1903               	skipnz
  5669  0AEE  0277               	subwf	blank_image@j,w
  5670  0AEF  1C03               	skipc
  5671  0AF0  2ADE               	goto	l2177
  5672  0AF1                     l2183:	
  5673                           
  5674                           ;Main V4.1.c: 294: }
  5675                           ;Main V4.1.c: 295: page++;
  5676  0AF1  3001               	movlw	1
  5677  0AF2  00F3               	movwf	??_blank_image
  5678  0AF3  0873               	movf	??_blank_image,w
  5679  0AF4  07F4               	addwf	blank_image@page,f
  5680  0AF5  3001               	movlw	1
  5681  0AF6  07F5               	addwf	blank_image@i,f
  5682  0AF7  1803               	skipnc
  5683  0AF8  0AF6               	incf	blank_image@i+1,f
  5684  0AF9  3000               	movlw	0
  5685  0AFA  07F6               	addwf	blank_image@i+1,f
  5686  0AFB  3000               	movlw	0
  5687  0AFC  0276               	subwf	blank_image@i+1,w
  5688  0AFD  3004               	movlw	4
  5689  0AFE  1903               	skipnz
  5690  0AFF  0275               	subwf	blank_image@i,w
  5691  0B00  1C03               	skipc
  5692  0B01  2AC3               	goto	l2169
  5693  0B02                     l2189:	
  5694                           
  5695                           ;Main V4.1.c: 296: }
  5696                           ;Main V4.1.c: 297: comm_out (0xAF);
  5697  0B02  30AF               	movlw	175
  5698  0B03  120A  158A  20E7   	fcall	_comm_out
  5699  0B06  0008               	return
  5700  0B07                     __end_of_blank_image:	
  5701                           
  5702                           	psect	text15
  5703  08E7                     __ptext15:	
  5704 ;; *************** function _comm_out *****************
  5705 ;; Defined at:
  5706 ;;		line 104 in file "Main V4.1.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  j               1    wreg     unsigned char 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  j               1    2[COMMON] unsigned char 
  5711 ;;  n               2    0        unsigned int 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5721 ;;      Params:         0       0       0       0       0
  5722 ;;      Locals:         1       0       0       0       0
  5723 ;;      Temps:          2       0       0       0       0
  5724 ;;      Totals:         3       0       0       0       0
  5725 ;;Total ram usage:        3 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_blank_image
  5731 ;;		_location
  5732 ;;		_main
  5733 ;;		_test_image
  5734 ;;		_test_image_page
  5735 ;;		_image_1
  5736 ;;		_moving_bar
  5737 ;;		_increasing_bar
  5738 ;;		_eating_bar
  5739 ;;		_pattern_bar
  5740 ;;		_dot
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           
  5745                           ;psect for function _comm_out
  5746  08E7                     _comm_out:	
  5747                           
  5748                           ;incstack = 0
  5749                           ; Regs used in _comm_out: [wreg]
  5750                           ;comm_out@j stored from wreg
  5751  08E7  00F2               	movwf	comm_out@j
  5752                           
  5753                           ;Main V4.1.c: 105: unsigned int n;
  5754                           ;Main V4.1.c: 106: RC2 = 0;
  5755  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  5756  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  5757  08EA  1107               	bcf	7,2	;volatile
  5758                           
  5759                           ;Main V4.1.c: 107: RC0 = 0;
  5760  08EB  1007               	bcf	7,0	;volatile
  5761                           
  5762                           ;Main V4.1.c: 108: SSPBUF = j;
  5763  08EC  0872               	movf	comm_out@j,w
  5764  08ED  0093               	movwf	19	;volatile
  5765                           
  5766                           ;Main V4.1.c: 109: _delay((unsigned long)((1000)*(16000000/4000000.0)));
  5767  08EE  3006               	movlw	6
  5768  08EF  00F1               	movwf	??_comm_out+1
  5769  08F0  3030               	movlw	48
  5770  08F1  00F0               	movwf	??_comm_out
  5771  08F2                     u2837:	
  5772  08F2  0BF0               	decfsz	??_comm_out,f
  5773  08F3  28F2               	goto	u2837
  5774  08F4  0BF1               	decfsz	??_comm_out+1,f
  5775  08F5  28F2               	goto	u2837
  5776  08F6  0000               	nop
  5777                           
  5778                           ;Main V4.1.c: 110: RC2 = 1;
  5779  08F7  1283               	bcf	3,5	;RP0=0, select bank0
  5780  08F8  1303               	bcf	3,6	;RP1=0, select bank0
  5781  08F9  1507               	bsf	7,2	;volatile
  5782  08FA  0008               	return
  5783  08FB                     __end_of_comm_out:	
  5784                           
  5785                           	psect	text16
  5786  099A                     __ptext16:	
  5787 ;; *************** function _String_test *****************
  5788 ;; Defined at:
  5789 ;;		line 521 in file "Main V4.1.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  test_string    13   11[BANK0 ] unsigned char [13]
  5794 ;;  test_pointer    1   24[BANK0 ] PTR unsigned char 
  5795 ;;		 -> String_test@test_string(13), 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      void 
  5798 ;; Registers used:
  5799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5805 ;;      Params:         0       0       0       0       0
  5806 ;;      Locals:         0      14       0       0       0
  5807 ;;      Temps:          4       0       0       0       0
  5808 ;;      Totals:         4      14       0       0       0
  5809 ;;Total ram usage:       18 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:    2
  5812 ;; This function calls:
  5813 ;;		_LCDWriteCharacter
  5814 ;; This function is called by:
  5815 ;;		_main
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           
  5820                           ;psect for function _String_test
  5821  099A                     _String_test:	
  5822                           
  5823                           ;Main V4.1.c: 522: char test_string [] = "Tim's String";
  5824                           
  5825                           ;incstack = 0
  5826                           ; Regs used in _String_test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5827  099A  302B               	movlw	String_test@test_string& (0+255)
  5828  099B  0084               	movwf	4
  5829  099C  301F               	movlw	low String_test@F1411
  5830  099D  00F8               	movwf	??_String_test
  5831  099E  0804               	movf	4,w
  5832  099F  00F9               	movwf	??_String_test+1
  5833  09A0  300D               	movlw	13
  5834  09A1  00FA               	movwf	??_String_test+2
  5835  09A2                     u2010:	
  5836  09A2  0878               	movf	??_String_test,w
  5837  09A3  0084               	movwf	4
  5838  09A4  1783               	bsf	3,7	;select IRP bank2
  5839  09A5  0800               	movf	0,w
  5840  09A6  00FB               	movwf	??_String_test+3
  5841  09A7  0AF8               	incf	??_String_test,f
  5842  09A8  0879               	movf	??_String_test+1,w
  5843  09A9  0084               	movwf	4
  5844  09AA  1383               	bcf	3,7	;select IRP bank0
  5845  09AB  087B               	movf	??_String_test+3,w
  5846  09AC  0080               	movwf	0
  5847  09AD  0AF9               	incf	??_String_test+1,f
  5848  09AE  0BFA               	decfsz	??_String_test+2,f
  5849  09AF  29A2               	goto	u2010
  5850                           
  5851                           ;Main V4.1.c: 523: char *test_pointer;
  5852                           ;Main V4.1.c: 525: test_pointer = &test_string;
  5853  09B0  302B               	movlw	(low (String_test@test_string| 0))& (0+255)
  5854  09B1  00F8               	movwf	??_String_test
  5855  09B2  0878               	movf	??_String_test,w
  5856  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  5857  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  5858  09B5  00B8               	movwf	String_test@test_pointer
  5859  09B6                     l2199:	
  5860                           ;Main V4.1.c: 526: while (*test_pointer != 0){
  5861                           
  5862  09B6  0838               	movf	String_test@test_pointer,w
  5863  09B7  0084               	movwf	4
  5864  09B8  1383               	bcf	3,7	;select IRP bank0
  5865  09B9  0800               	movf	0,w
  5866  09BA  1903               	btfsc	3,2
  5867  09BB  0008               	return
  5868                           
  5869                           ;Main V4.1.c: 527: LCDWriteCharacter(*test_pointer);
  5870  09BC  0838               	movf	String_test@test_pointer,w
  5871  09BD  0084               	movwf	4
  5872  09BE  0800               	movf	0,w
  5873  09BF  120A  158A  2373  120A  158A  	fcall	_LCDWriteCharacter
  5874                           
  5875                           ;Main V4.1.c: 529: test_pointer++;
  5876  09C4  3001               	movlw	1
  5877  09C5  00F8               	movwf	??_String_test
  5878  09C6  0878               	movf	??_String_test,w
  5879  09C7  1283               	bcf	3,5	;RP0=0, select bank0
  5880  09C8  1303               	bcf	3,6	;RP1=0, select bank0
  5881  09C9  07B8               	addwf	String_test@test_pointer,f
  5882  09CA  29B6               	goto	l2199
  5883  09CB                     __end_of_String_test:	
  5884                           
  5885                           	psect	text17
  5886  0B73                     __ptext17:	
  5887 ;; *************** function _LCDWriteCharacter *****************
  5888 ;; Defined at:
  5889 ;;		line 478 in file "Main V4.1.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  character       1    wreg     const unsigned char 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  character       1    0[BANK0 ] const unsigned char 
  5894 ;;  after_swap      2    9[BANK0 ] unsigned int 
  5895 ;;  base            2    7[BANK0 ] unsigned int 
  5896 ;;  j               2    5[BANK0 ] unsigned int 
  5897 ;;  i               2    3[BANK0 ] unsigned int 
  5898 ;;  before_swap     2    1[BANK0 ] unsigned int 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5908 ;;      Params:         0       0       0       0       0
  5909 ;;      Locals:         0      11       0       0       0
  5910 ;;      Temps:          2       0       0       0       0
  5911 ;;      Totals:         2      11       0       0       0
  5912 ;;Total ram usage:       13 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:    1
  5915 ;; This function calls:
  5916 ;;		___wmul
  5917 ;;		_data_out
  5918 ;; This function is called by:
  5919 ;;		_String_test
  5920 ;;		_char_to_decimal_print
  5921 ;;		_display_temps_to_screen
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           
  5926                           ;psect for function _LCDWriteCharacter
  5927  0B73                     _LCDWriteCharacter:	
  5928                           
  5929                           ;incstack = 0
  5930                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5931                           ;LCDWriteCharacter@character stored from wreg
  5932  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  5933  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  5934  0B75  00A0               	movwf	LCDWriteCharacter@character
  5935                           
  5936                           ;Main V4.1.c: 480: unsigned int base, before_swap, after_swap, i, j;
  5937                           ;Main V4.1.c: 481: base = character - 32;
  5938  0B76  0820               	movf	LCDWriteCharacter@character,w
  5939  0B77  3EE0               	addlw	224
  5940  0B78  00A7               	movwf	LCDWriteCharacter@base
  5941  0B79  30FF               	movlw	255
  5942  0B7A  1803               	skipnc
  5943  0B7B  3000               	movlw	0
  5944  0B7C  00A8               	movwf	LCDWriteCharacter@base+1
  5945                           
  5946                           ;Main V4.1.c: 482: base *= 3;
  5947  0B7D  3003               	movlw	3
  5948  0B7E  00F0               	movwf	___wmul@multiplier
  5949  0B7F  3000               	movlw	0
  5950  0B80  00F1               	movwf	___wmul@multiplier+1
  5951  0B81  0828               	movf	LCDWriteCharacter@base+1,w
  5952  0B82  00F3               	movwf	___wmul@multiplicand+1
  5953  0B83  0827               	movf	LCDWriteCharacter@base,w
  5954  0B84  00F2               	movwf	___wmul@multiplicand
  5955  0B85  120A  158A  20FB  120A  158A  	fcall	___wmul
  5956  0B8A  0871               	movf	?___wmul+1,w
  5957  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  5958  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  5959  0B8D  00A8               	movwf	LCDWriteCharacter@base+1
  5960  0B8E  0870               	movf	?___wmul,w
  5961  0B8F  00A7               	movwf	LCDWriteCharacter@base
  5962                           
  5963                           ;Main V4.1.c: 483: after_swap = 0;
  5964  0B90  01A9               	clrf	LCDWriteCharacter@after_swap
  5965  0B91  01AA               	clrf	LCDWriteCharacter@after_swap+1
  5966                           
  5967                           ;Main V4.1.c: 484: for (i=0;i<3;i++){
  5968  0B92  01A3               	clrf	LCDWriteCharacter@i
  5969  0B93  01A4               	clrf	LCDWriteCharacter@i+1
  5970  0B94  3000               	movlw	0
  5971  0B95  0224               	subwf	LCDWriteCharacter@i+1,w
  5972  0B96  3003               	movlw	3
  5973  0B97  1903               	skipnz
  5974  0B98  0223               	subwf	LCDWriteCharacter@i,w
  5975  0B99  1803               	btfsc	3,0
  5976  0B9A  2BF7               	goto	l1877
  5977  0B9B                     l1851:	
  5978                           
  5979                           ;Main V4.1.c: 485: before_swap = fonts[base];
  5980  0B9B  3090               	movlw	high (_fonts| (0+32768))
  5981  0B9C  0728               	addwf	LCDWriteCharacter@base+1,w
  5982  0B9D  00FF               	movwf	127
  5983  0B9E  3012               	movlw	low (_fonts| (0+32768))
  5984  0B9F  0727               	addwf	LCDWriteCharacter@base,w
  5985  0BA0  0084               	movwf	4
  5986  0BA1  1803               	skipnc
  5987  0BA2  0AFF               	incf	127,f
  5988  0BA3  160A  118A  2000  120A  158A  	fcall	stringtab
  5989  0BA8  00F6               	movwf	??_LCDWriteCharacter
  5990  0BA9  01F7               	clrf	??_LCDWriteCharacter+1
  5991  0BAA  0876               	movf	??_LCDWriteCharacter,w
  5992  0BAB  00A1               	movwf	LCDWriteCharacter@before_swap
  5993  0BAC  0877               	movf	??_LCDWriteCharacter+1,w
  5994  0BAD  00A2               	movwf	LCDWriteCharacter@before_swap+1
  5995                           
  5996                           ;Main V4.1.c: 486: for (j=0;j<7;j++){
  5997  0BAE  01A5               	clrf	LCDWriteCharacter@j
  5998  0BAF  01A6               	clrf	LCDWriteCharacter@j+1
  5999  0BB0  3000               	movlw	0
  6000  0BB1  0226               	subwf	LCDWriteCharacter@j+1,w
  6001  0BB2  3007               	movlw	7
  6002  0BB3  1903               	skipnz
  6003  0BB4  0225               	subwf	LCDWriteCharacter@j,w
  6004  0BB5  1803               	btfsc	3,0
  6005  0BB6  2BDC               	goto	l1869
  6006  0BB7                     l167:	
  6007                           
  6008                           ;Main V4.1.c: 487: if (before_swap & 1 == 1){
  6009  0BB7  1C21               	btfss	LCDWriteCharacter@before_swap,0
  6010  0BB8  2BBF               	goto	l1861
  6011                           
  6012                           ;Main V4.1.c: 488: after_swap = after_swap | 1;
  6013  0BB9  3001               	movlw	1
  6014  0BBA  0429               	iorwf	LCDWriteCharacter@after_swap,w
  6015  0BBB  00A9               	movwf	LCDWriteCharacter@after_swap
  6016  0BBC  3000               	movlw	0
  6017  0BBD  042A               	iorwf	LCDWriteCharacter@after_swap+1,w
  6018  0BBE  00AA               	movwf	LCDWriteCharacter@after_swap+1
  6019  0BBF                     l1861:	
  6020                           
  6021                           ;Main V4.1.c: 489: }
  6022                           ;Main V4.1.c: 490: before_swap = before_swap >> 1;
  6023  0BBF  0822               	movf	LCDWriteCharacter@before_swap+1,w
  6024  0BC0  00F7               	movwf	??_LCDWriteCharacter+1
  6025  0BC1  0821               	movf	LCDWriteCharacter@before_swap,w
  6026  0BC2  00F6               	movwf	??_LCDWriteCharacter
  6027  0BC3  1003               	clrc
  6028  0BC4  0CF7               	rrf	??_LCDWriteCharacter+1,f
  6029  0BC5  0CF6               	rrf	??_LCDWriteCharacter,f
  6030  0BC6  0876               	movf	??_LCDWriteCharacter,w
  6031  0BC7  00A1               	movwf	LCDWriteCharacter@before_swap
  6032  0BC8  0877               	movf	??_LCDWriteCharacter+1,w
  6033  0BC9  00A2               	movwf	LCDWriteCharacter@before_swap+1
  6034                           
  6035                           ;Main V4.1.c: 491: after_swap = after_swap << 1;
  6036  0BCA  1003               	clrc
  6037  0BCB  0D29               	rlf	LCDWriteCharacter@after_swap,w
  6038  0BCC  00A9               	movwf	LCDWriteCharacter@after_swap
  6039  0BCD  0D2A               	rlf	LCDWriteCharacter@after_swap+1,w
  6040  0BCE  00AA               	movwf	LCDWriteCharacter@after_swap+1
  6041  0BCF  3001               	movlw	1
  6042  0BD0  07A5               	addwf	LCDWriteCharacter@j,f
  6043  0BD1  1803               	skipnc
  6044  0BD2  0AA6               	incf	LCDWriteCharacter@j+1,f
  6045  0BD3  3000               	movlw	0
  6046  0BD4  07A6               	addwf	LCDWriteCharacter@j+1,f
  6047  0BD5  3000               	movlw	0
  6048  0BD6  0226               	subwf	LCDWriteCharacter@j+1,w
  6049  0BD7  3007               	movlw	7
  6050  0BD8  1903               	skipnz
  6051  0BD9  0225               	subwf	LCDWriteCharacter@j,w
  6052  0BDA  1C03               	skipc
  6053  0BDB  2BB7               	goto	l167
  6054  0BDC                     l1869:	
  6055                           
  6056                           ;Main V4.1.c: 492: }
  6057                           ;Main V4.1.c: 493: data_out(after_swap);
  6058  0BDC  0829               	movf	LCDWriteCharacter@after_swap,w
  6059  0BDD  120A  158A  20D3  120A  158A  	fcall	_data_out
  6060                           
  6061                           ;Main V4.1.c: 494: base++;
  6062  0BE2  3001               	movlw	1
  6063  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  6064  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  6065  0BE5  07A7               	addwf	LCDWriteCharacter@base,f
  6066  0BE6  1803               	skipnc
  6067  0BE7  0AA8               	incf	LCDWriteCharacter@base+1,f
  6068  0BE8  3000               	movlw	0
  6069  0BE9  07A8               	addwf	LCDWriteCharacter@base+1,f
  6070  0BEA  3001               	movlw	1
  6071  0BEB  07A3               	addwf	LCDWriteCharacter@i,f
  6072  0BEC  1803               	skipnc
  6073  0BED  0AA4               	incf	LCDWriteCharacter@i+1,f
  6074  0BEE  3000               	movlw	0
  6075  0BEF  07A4               	addwf	LCDWriteCharacter@i+1,f
  6076  0BF0  3000               	movlw	0
  6077  0BF1  0224               	subwf	LCDWriteCharacter@i+1,w
  6078  0BF2  3003               	movlw	3
  6079  0BF3  1903               	skipnz
  6080  0BF4  0223               	subwf	LCDWriteCharacter@i,w
  6081  0BF5  1C03               	skipc
  6082  0BF6  2B9B               	goto	l1851
  6083  0BF7                     l1877:	
  6084                           
  6085                           ;Main V4.1.c: 495: }
  6086                           ;Main V4.1.c: 496: data_out(0x00);
  6087  0BF7  3000               	movlw	0
  6088  0BF8  120A  158A  20D3   	fcall	_data_out
  6089  0BFB  0008               	return
  6090  0BFC                     __end_of_LCDWriteCharacter:	
  6091                           
  6092                           	psect	text18
  6093  08D3                     __ptext18:	
  6094 ;; *************** function _data_out *****************
  6095 ;; Defined at:
  6096 ;;		line 75 in file "Main V4.1.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  i               1    wreg     unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  i               1    2[COMMON] unsigned char 
  6101 ;;  n               2    0        unsigned int 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      void 
  6104 ;; Registers used:
  6105 ;;		wreg
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6111 ;;      Params:         0       0       0       0       0
  6112 ;;      Locals:         1       0       0       0       0
  6113 ;;      Temps:          2       0       0       0       0
  6114 ;;      Totals:         3       0       0       0       0
  6115 ;;Total ram usage:        3 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_blank_image
  6121 ;;		_LCDWriteCharacter
  6122 ;;		_test_image
  6123 ;;		_test_image_page
  6124 ;;		_image_1
  6125 ;;		_moving_bar
  6126 ;;		_increasing_bar
  6127 ;;		_eating_bar
  6128 ;;		_pattern_bar
  6129 ;;		_dot
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           
  6134                           ;psect for function _data_out
  6135  08D3                     _data_out:	
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in _data_out: [wreg]
  6139                           ;data_out@i stored from wreg
  6140  08D3  00F2               	movwf	data_out@i
  6141                           
  6142                           ;Main V4.1.c: 76: unsigned int n;
  6143                           ;Main V4.1.c: 77: RC2 = 0;
  6144  08D4  1283               	bcf	3,5	;RP0=0, select bank0
  6145  08D5  1303               	bcf	3,6	;RP1=0, select bank0
  6146  08D6  1107               	bcf	7,2	;volatile
  6147                           
  6148                           ;Main V4.1.c: 78: RC0 = 1;
  6149  08D7  1407               	bsf	7,0	;volatile
  6150                           
  6151                           ;Main V4.1.c: 79: SSPBUF = i;
  6152  08D8  0872               	movf	data_out@i,w
  6153  08D9  0093               	movwf	19	;volatile
  6154                           
  6155                           ;Main V4.1.c: 80: _delay((unsigned long)((1000)*(16000000/4000000.0)));
  6156  08DA  3006               	movlw	6
  6157  08DB  00F1               	movwf	??_data_out+1
  6158  08DC  3030               	movlw	48
  6159  08DD  00F0               	movwf	??_data_out
  6160  08DE                     u2847:	
  6161  08DE  0BF0               	decfsz	??_data_out,f
  6162  08DF  28DE               	goto	u2847
  6163  08E0  0BF1               	decfsz	??_data_out+1,f
  6164  08E1  28DE               	goto	u2847
  6165  08E2  0000               	nop
  6166                           
  6167                           ;Main V4.1.c: 81: RC2 = 1;
  6168  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  6169  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  6170  08E5  1507               	bsf	7,2	;volatile
  6171  08E6  0008               	return
  6172  08E7                     __end_of_data_out:	
  6173                           
  6174                           	psect	text19
  6175  08FB                     __ptext19:	
  6176 ;; *************** function ___wmul *****************
  6177 ;; Defined at:
  6178 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  multiplier      2    0[COMMON] unsigned int 
  6181 ;;  multiplicand    2    2[COMMON] unsigned int 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  product         2    4[COMMON] unsigned int 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  2    0[COMMON] unsigned int 
  6186 ;; Registers used:
  6187 ;;		wreg, status,2, status,0
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6193 ;;      Params:         4       0       0       0       0
  6194 ;;      Locals:         2       0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0
  6196 ;;      Totals:         6       0       0       0       0
  6197 ;;Total ram usage:        6 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_LCDWriteCharacter
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           
  6207                           ;psect for function ___wmul
  6208  08FB                     ___wmul:	
  6209                           
  6210                           ;incstack = 0
  6211                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6212  08FB  01F4               	clrf	___wmul@product
  6213  08FC  01F5               	clrf	___wmul@product+1
  6214  08FD                     l1821:	
  6215  08FD  1C70               	btfss	___wmul@multiplier,0
  6216  08FE  2905               	goto	l331
  6217  08FF  0872               	movf	___wmul@multiplicand,w
  6218  0900  07F4               	addwf	___wmul@product,f
  6219  0901  1803               	skipnc
  6220  0902  0AF5               	incf	___wmul@product+1,f
  6221  0903  0873               	movf	___wmul@multiplicand+1,w
  6222  0904  07F5               	addwf	___wmul@product+1,f
  6223  0905                     l331:	
  6224  0905  3001               	movlw	1
  6225  0906                     u1375:	
  6226  0906  1003               	clrc
  6227  0907  0DF2               	rlf	___wmul@multiplicand,f
  6228  0908  0DF3               	rlf	___wmul@multiplicand+1,f
  6229  0909  3EFF               	addlw	-1
  6230  090A  1D03               	skipz
  6231  090B  2906               	goto	u1375
  6232  090C  3001               	movlw	1
  6233  090D                     u1385:	
  6234  090D  1003               	clrc
  6235  090E  0CF1               	rrf	___wmul@multiplier+1,f
  6236  090F  0CF0               	rrf	___wmul@multiplier,f
  6237  0910  3EFF               	addlw	-1
  6238  0911  1D03               	skipz
  6239  0912  290D               	goto	u1385
  6240  0913  0870               	movf	___wmul@multiplier,w
  6241  0914  0471               	iorwf	___wmul@multiplier+1,w
  6242  0915  1D03               	btfss	3,2
  6243  0916  28FD               	goto	l1821
  6244  0917  0875               	movf	___wmul@product+1,w
  6245  0918  00F1               	movwf	?___wmul+1
  6246  0919  0874               	movf	___wmul@product,w
  6247  091A  00F0               	movwf	?___wmul
  6248  091B  0008               	return
  6249  091C                     __end_of___wmul:	
  6250                           
  6251                           	psect	text20
  6252  0A0B                     __ptext20:	
  6253 ;; *************** function _SPI_DATA_HANDLING *****************
  6254 ;; Defined at:
  6255 ;;		line 555 in file "Main V4.1.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  data_pointer    1    wreg     PTR unsigned char 
  6258 ;;		 -> main@spi_data(22), 
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;  data_pointer    1   11[COMMON] PTR unsigned char 
  6261 ;;		 -> main@spi_data(22), 
  6262 ;;  offset_point    2    9[COMMON] PTR unsigned char 
  6263 ;;		 -> RAM(512), 
  6264 ;;  address         1    8[COMMON] unsigned char 
  6265 ;;  offset          1    7[COMMON] unsigned char 
  6266 ;;  byte_receive    1    6[COMMON] unsigned char 
  6267 ;;  byte_to_send    1    5[COMMON] unsigned char 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6277 ;;      Params:         0       0       0       0       0
  6278 ;;      Locals:         7       0       0       0       0
  6279 ;;      Temps:          2       0       0       0       0
  6280 ;;      Totals:         9       0       0       0       0
  6281 ;;Total ram usage:        9 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    1
  6284 ;; This function calls:
  6285 ;;		_SPI_TRANSFER
  6286 ;; This function is called by:
  6287 ;;		_main
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           
  6292                           ;psect for function _SPI_DATA_HANDLING
  6293  0A0B                     _SPI_DATA_HANDLING:	
  6294                           
  6295                           ;incstack = 0
  6296                           ; Regs used in _SPI_DATA_HANDLING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6297                           ;SPI_DATA_HANDLING@data_pointer stored from wreg
  6298  0A0B  00FB               	movwf	SPI_DATA_HANDLING@data_pointer
  6299                           
  6300                           ;Main V4.1.c: 556: char byte_to_send;
  6301                           ;Main V4.1.c: 557: char byte_received;
  6302                           ;Main V4.1.c: 558: char offset;
  6303                           ;Main V4.1.c: 559: char address;
  6304                           ;Main V4.1.c: 560: char *offset_pointer;
  6305                           ;Main V4.1.c: 562: if (*data_pointer > 0){
  6306  0A0C  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6307  0A0D  0084               	movwf	4
  6308  0A0E  1383               	bcf	3,7	;select IRP bank0
  6309  0A0F  0800               	movf	0,w
  6310  0A10  1903               	btfsc	3,2
  6311  0A11  2A4F               	goto	l2217
  6312                           
  6313                           ;Main V4.1.c: 563: offset = *data_pointer;
  6314  0A12  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6315  0A13  0084               	movwf	4
  6316  0A14  0800               	movf	0,w
  6317  0A15  00F3               	movwf	??_SPI_DATA_HANDLING
  6318  0A16  0873               	movf	??_SPI_DATA_HANDLING,w
  6319  0A17  00F7               	movwf	SPI_DATA_HANDLING@offset
  6320                           
  6321                           ;Main V4.1.c: 564: address = data_pointer + offset;
  6322  0A18  0877               	movf	SPI_DATA_HANDLING@offset,w
  6323  0A19  077B               	addwf	SPI_DATA_HANDLING@data_pointer,w
  6324  0A1A  00F3               	movwf	??_SPI_DATA_HANDLING
  6325  0A1B  0873               	movf	??_SPI_DATA_HANDLING,w
  6326  0A1C  00F8               	movwf	SPI_DATA_HANDLING@address
  6327                           
  6328                           ;Main V4.1.c: 565: offset_pointer = address;
  6329  0A1D  0878               	movf	SPI_DATA_HANDLING@address,w
  6330  0A1E  00F3               	movwf	??_SPI_DATA_HANDLING
  6331  0A1F  01F4               	clrf	??_SPI_DATA_HANDLING+1
  6332  0A20  0873               	movf	??_SPI_DATA_HANDLING,w
  6333  0A21  00F9               	movwf	SPI_DATA_HANDLING@offset_pointer
  6334  0A22  0874               	movf	??_SPI_DATA_HANDLING+1,w
  6335  0A23  00FA               	movwf	SPI_DATA_HANDLING@offset_pointer+1
  6336                           
  6337                           ;Main V4.1.c: 566: byte_to_send = *offset_pointer;
  6338  0A24  0879               	movf	SPI_DATA_HANDLING@offset_pointer,w
  6339  0A25  0084               	movwf	4
  6340  0A26  1783               	bsf	3,7
  6341  0A27  1C7A               	btfss	SPI_DATA_HANDLING@offset_pointer+1,0
  6342  0A28  1383               	bcf	3,7
  6343  0A29  0800               	movf	0,w
  6344  0A2A  00F3               	movwf	??_SPI_DATA_HANDLING
  6345  0A2B  0873               	movf	??_SPI_DATA_HANDLING,w
  6346  0A2C  00F5               	movwf	SPI_DATA_HANDLING@byte_to_send
  6347                           
  6348                           ;Main V4.1.c: 567: byte_received = SPI_TRANSFER(byte_to_send);
  6349  0A2D  0875               	movf	SPI_DATA_HANDLING@byte_to_send,w
  6350  0A2E  120A  158A  216A  120A  158A  	fcall	_SPI_TRANSFER
  6351  0A33  00F3               	movwf	??_SPI_DATA_HANDLING
  6352  0A34  0873               	movf	??_SPI_DATA_HANDLING,w
  6353  0A35  00F6               	movwf	SPI_DATA_HANDLING@byte_received
  6354                           
  6355                           ;Main V4.1.c: 568: offset_pointer = offset_pointer + 10;
  6356  0A36  0879               	movf	SPI_DATA_HANDLING@offset_pointer,w
  6357  0A37  3E0A               	addlw	10
  6358  0A38  00F9               	movwf	SPI_DATA_HANDLING@offset_pointer
  6359  0A39  087A               	movf	SPI_DATA_HANDLING@offset_pointer+1,w
  6360  0A3A  1803               	skipnc
  6361  0A3B  3E01               	addlw	1
  6362  0A3C  3E00               	addlw	0
  6363  0A3D  00FA               	movwf	SPI_DATA_HANDLING@offset_pointer+1
  6364                           
  6365                           ;Main V4.1.c: 569: *offset_pointer = byte_received;
  6366  0A3E  0879               	movf	SPI_DATA_HANDLING@offset_pointer,w
  6367  0A3F  0084               	movwf	4
  6368  0A40  1383               	bcf	3,7
  6369  0A41  187A               	btfsc	SPI_DATA_HANDLING@offset_pointer+1,0
  6370  0A42  1783               	bsf	3,7
  6371  0A43  0876               	movf	SPI_DATA_HANDLING@byte_received,w
  6372  0A44  0080               	movwf	0
  6373                           
  6374                           ;Main V4.1.c: 570: *data_pointer = *data_pointer + 1;
  6375  0A45  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6376  0A46  0084               	movwf	4
  6377  0A47  1383               	bcf	3,7	;select IRP bank0
  6378  0A48  0800               	movf	0,w
  6379  0A49  3E01               	addlw	1
  6380  0A4A  00F3               	movwf	??_SPI_DATA_HANDLING
  6381  0A4B  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6382  0A4C  0084               	movwf	4
  6383  0A4D  0873               	movf	??_SPI_DATA_HANDLING,w
  6384  0A4E  0080               	movwf	0
  6385  0A4F                     l2217:	
  6386                           
  6387                           ;Main V4.1.c: 571: }
  6388                           ;Main V4.1.c: 572: if (*data_pointer > 5){
  6389  0A4F  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6390  0A50  0084               	movwf	4
  6391  0A51  3006               	movlw	6
  6392  0A52  0200               	subwf	0,w
  6393  0A53  1C03               	skipc
  6394  0A54  0008               	return
  6395                           
  6396                           ;Main V4.1.c: 573: *data_pointer = 0;
  6397  0A55  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6398  0A56  0084               	movwf	4
  6399  0A57  0180               	clrf	0
  6400  0A58  0008               	return
  6401  0A59                     __end_of_SPI_DATA_HANDLING:	
  6402                           
  6403                           	psect	text21
  6404  096A                     __ptext21:	
  6405 ;; *************** function _SPI_TRANSFER *****************
  6406 ;; Defined at:
  6407 ;;		line 533 in file "Main V4.1.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  byte_to_send    1    wreg     unsigned char 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  byte_to_send    1    2[COMMON] unsigned char 
  6412 ;;  byte_recieve    1    1[COMMON] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      unsigned char 
  6415 ;; Registers used:
  6416 ;;		wreg
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6422 ;;      Params:         0       0       0       0       0
  6423 ;;      Locals:         2       0       0       0       0
  6424 ;;      Temps:          1       0       0       0       0
  6425 ;;      Totals:         3       0       0       0       0
  6426 ;;Total ram usage:        3 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_SPI_DATA_HANDLING
  6432 ;;		_get_temp_from_right_tcs
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           
  6437                           ;psect for function _SPI_TRANSFER
  6438  096A                     _SPI_TRANSFER:	
  6439                           
  6440                           ;incstack = 0
  6441                           ; Regs used in _SPI_TRANSFER: [wreg]
  6442                           ;SPI_TRANSFER@byte_to_send stored from wreg
  6443  096A  00F2               	movwf	SPI_TRANSFER@byte_to_send
  6444                           
  6445                           ;Main V4.1.c: 534: char byte_recieved;
  6446                           ;Main V4.1.c: 535: byte_recieved = SSPBUF;
  6447  096B  1283               	bcf	3,5	;RP0=0, select bank0
  6448  096C  1303               	bcf	3,6	;RP1=0, select bank0
  6449  096D  0813               	movf	19,w	;volatile
  6450  096E  00F0               	movwf	??_SPI_TRANSFER
  6451  096F  0870               	movf	??_SPI_TRANSFER,w
  6452  0970  00F1               	movwf	SPI_TRANSFER@byte_recieved
  6453                           
  6454                           ;Main V4.1.c: 536: SSPBUF = byte_to_send;
  6455  0971  0872               	movf	SPI_TRANSFER@byte_to_send,w
  6456  0972  0093               	movwf	19	;volatile
  6457                           
  6458                           ;Main V4.1.c: 537: _delay((unsigned long)((35)*(16000000/4000000.0)));
  6459  0973  302E               	movlw	46
  6460  0974  00F0               	movwf	??_SPI_TRANSFER
  6461  0975                     u2857:	
  6462  0975  0BF0               	decfsz	??_SPI_TRANSFER,f
  6463  0976  2975               	goto	u2857
  6464  0977  0000               	nop
  6465                           
  6466                           ;Main V4.1.c: 539: _delay((unsigned long)((5)*(16000000/4000000.0)));
  6467  0978  3006               	movlw	6
  6468  0979  00F0               	movwf	??_SPI_TRANSFER
  6469  097A                     u2867:	
  6470  097A  0BF0               	decfsz	??_SPI_TRANSFER,f
  6471  097B  297A               	goto	u2867
  6472  097C  0000               	nop
  6473  097D                     l1955:	
  6474                           ;Main V4.1.c: 540: while (WCOL == 1){
  6475                           
  6476  097D  1283               	bcf	3,5	;RP0=0, select bank0
  6477  097E  1303               	bcf	3,6	;RP1=0, select bank0
  6478  097F  1F94               	btfss	20,7	;volatile
  6479  0980  2991               	goto	l1957
  6480                           
  6481                           ;Main V4.1.c: 541: WCOL = 0;
  6482  0981  1394               	bcf	20,7	;volatile
  6483                           
  6484                           ;Main V4.1.c: 542: _delay((unsigned long)((5)*(16000000/4000000.0)));
  6485  0982  3006               	movlw	6
  6486  0983  00F0               	movwf	??_SPI_TRANSFER
  6487  0984                     u2877:	
  6488  0984  0BF0               	decfsz	??_SPI_TRANSFER,f
  6489  0985  2984               	goto	u2877
  6490  0986  0000               	nop
  6491                           
  6492                           ;Main V4.1.c: 543: SSPBUF = byte_to_send;
  6493  0987  0872               	movf	SPI_TRANSFER@byte_to_send,w
  6494  0988  1283               	bcf	3,5	;RP0=0, select bank0
  6495  0989  1303               	bcf	3,6	;RP1=0, select bank0
  6496  098A  0093               	movwf	19	;volatile
  6497                           
  6498                           ;Main V4.1.c: 544: _delay((unsigned long)((5)*(16000000/4000000.0)));
  6499  098B  3006               	movlw	6
  6500  098C  00F0               	movwf	??_SPI_TRANSFER
  6501  098D                     u2887:	
  6502  098D  0BF0               	decfsz	??_SPI_TRANSFER,f
  6503  098E  298D               	goto	u2887
  6504  098F  0000               	nop
  6505  0990  297D               	goto	l1955
  6506  0991                     l1957:	
  6507                           
  6508                           ;Main V4.1.c: 545: }
  6509                           ;Main V4.1.c: 546: byte_recieved = SSPBUF;
  6510  0991  0813               	movf	19,w	;volatile
  6511  0992  00F0               	movwf	??_SPI_TRANSFER
  6512  0993  0870               	movf	??_SPI_TRANSFER,w
  6513  0994  00F1               	movwf	SPI_TRANSFER@byte_recieved
  6514                           
  6515                           ;Main V4.1.c: 547: BF = 0;
  6516  0995  1683               	bsf	3,5	;RP0=1, select bank1
  6517  0996  1303               	bcf	3,6	;RP1=0, select bank1
  6518  0997  1014               	bcf	20,0	;volatile
  6519                           
  6520                           ;Main V4.1.c: 548: return byte_recieved;
  6521  0998  0871               	movf	SPI_TRANSFER@byte_recieved,w
  6522  0999  0008               	return
  6523  099A                     __end_of_SPI_TRANSFER:	
  6524                           
  6525                           	psect	text22
  6526  093D                     __ptext22:	
  6527 ;; *************** function _Init *****************
  6528 ;; Defined at:
  6529 ;;		line 23 in file "Main V4.1.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;		None
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;		None
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  1    wreg      void 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6543 ;;      Params:         0       0       0       0       0
  6544 ;;      Locals:         0       0       0       0       0
  6545 ;;      Temps:          2       0       0       0       0
  6546 ;;      Totals:         2       0       0       0       0
  6547 ;;Total ram usage:        2 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; This function calls:
  6550 ;;		Nothing
  6551 ;; This function is called by:
  6552 ;;		_main
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           
  6557                           ;psect for function _Init
  6558  093D                     _Init:	
  6559                           
  6560                           ;Main V4.1.c: 28: TRISA = 0x00;
  6561                           
  6562                           ;incstack = 0
  6563                           ; Regs used in _Init: [wreg+status,2]
  6564  093D  1683               	bsf	3,5	;RP0=1, select bank1
  6565  093E  1303               	bcf	3,6	;RP1=0, select bank1
  6566  093F  0185               	clrf	5	;volatile
  6567                           
  6568                           ;Main V4.1.c: 29: ANSELA = 0x00;
  6569  0940  1683               	bsf	3,5	;RP0=1, select bank3
  6570  0941  1703               	bsf	3,6	;RP1=1, select bank3
  6571  0942  0185               	clrf	5	;volatile
  6572                           
  6573                           ;Main V4.1.c: 30: PORTA = 0xff;
  6574  0943  30FF               	movlw	255
  6575  0944  1283               	bcf	3,5	;RP0=0, select bank0
  6576  0945  1303               	bcf	3,6	;RP1=0, select bank0
  6577  0946  0085               	movwf	5	;volatile
  6578                           
  6579                           ;Main V4.1.c: 31: TRISA4 = 1;
  6580  0947  1683               	bsf	3,5	;RP0=1, select bank1
  6581  0948  1303               	bcf	3,6	;RP1=0, select bank1
  6582  0949  1605               	bsf	5,4	;volatile
  6583                           
  6584                           ;Main V4.1.c: 32: TRISA3 = 1;
  6585  094A  1585               	bsf	5,3	;volatile
  6586                           
  6587                           ;Main V4.1.c: 34: TRISB = 0x00;
  6588  094B  0186               	clrf	6	;volatile
  6589                           
  6590                           ;Main V4.1.c: 35: ANSELB = 0x00;
  6591  094C  1683               	bsf	3,5	;RP0=1, select bank3
  6592  094D  1703               	bsf	3,6	;RP1=1, select bank3
  6593  094E  0186               	clrf	6	;volatile
  6594                           
  6595                           ;Main V4.1.c: 36: PORTB = 0x00;
  6596  094F  1283               	bcf	3,5	;RP0=0, select bank0
  6597  0950  1303               	bcf	3,6	;RP1=0, select bank0
  6598  0951  0186               	clrf	6	;volatile
  6599                           
  6600                           ;Main V4.1.c: 38: TRISC = 0x00;
  6601  0952  1683               	bsf	3,5	;RP0=1, select bank1
  6602  0953  1303               	bcf	3,6	;RP1=0, select bank1
  6603  0954  0187               	clrf	7	;volatile
  6604                           
  6605                           ;Main V4.1.c: 39: TRISC4 = 1;
  6606  0955  1607               	bsf	7,4	;volatile
  6607                           
  6608                           ;Main V4.1.c: 41: PORTC = 0x00;
  6609  0956  1283               	bcf	3,5	;RP0=0, select bank0
  6610  0957  1303               	bcf	3,6	;RP1=0, select bank0
  6611  0958  0187               	clrf	7	;volatile
  6612                           
  6613                           ;Main V4.1.c: 42: IRCF1 = 0;
  6614  0959  1683               	bsf	3,5	;RP0=1, select bank1
  6615  095A  1303               	bcf	3,6	;RP1=0, select bank1
  6616  095B  1290               	bcf	16,5	;volatile
  6617                           
  6618                           ;Main V4.1.c: 43: IRCF0 = 0;
  6619  095C  1210               	bcf	16,4	;volatile
  6620                           
  6621                           ;Main V4.1.c: 47: RC3 = 1;
  6622  095D  1283               	bcf	3,5	;RP0=0, select bank0
  6623  095E  1303               	bcf	3,6	;RP1=0, select bank0
  6624  095F  1587               	bsf	7,3	;volatile
  6625                           
  6626                           ;Main V4.1.c: 48: _delay(2000);
  6627  0960  3003               	movlw	3
  6628  0961  00F1               	movwf	??_Init+1
  6629  0962  3097               	movlw	151
  6630  0963  00F0               	movwf	??_Init
  6631  0964                     u2897:	
  6632  0964  0BF0               	decfsz	??_Init,f
  6633  0965  2964               	goto	u2897
  6634  0966  0BF1               	decfsz	??_Init+1,f
  6635  0967  2964               	goto	u2897
  6636  0968  2969               	nop2
  6637  0969  0008               	return
  6638  096A                     __end_of_Init:	
  6639  007E                     btemp	set	126	;btemp
  6640  007E                     wtemp	set	126
  6641  007E                     wtemp0	set	126
  6642  0080                     wtemp1	set	128
  6643  0082                     wtemp2	set	130
  6644  0084                     wtemp3	set	132
  6645  0086                     wtemp4	set	134
  6646  0088                     wtemp5	set	136
  6647  007F                     wtemp6	set	127
  6648  007E                     ttemp	set	126
  6649  007E                     ttemp0	set	126
  6650  0081                     ttemp1	set	129
  6651  0084                     ttemp2	set	132
  6652  0087                     ttemp3	set	135
  6653  007F                     ttemp4	set	127
  6654  007E                     ltemp	set	126
  6655  007E                     ltemp0	set	126
  6656  0082                     ltemp1	set	130
  6657  0086                     ltemp2	set	134
  6658  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    303
    Data        93
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      77
    BANK1            80      0      78
    BANK3            96     96      96
    BANK2            96      0      81

Pointer List with Targets:

    main@data_pointer	PTR unsigned char  size(1) Largest target is 22
		 -> main@spi_data(BANK0[22]), 

    move_temp_to_send@data_pointer	PTR unsigned char  size(1) Largest target is 22
		 -> main@spi_data(BANK0[22]), 

    move_temp_to_send@reg	PTR unsigned char  size(1) Largest target is 22
		 -> main@spi_data(BANK0[22]), NULL(NULL[0]), 

    display_temps_to_screen@fault_string_pointer	PTR unsigned char  size(1) Largest target is 15
		 -> display_temps_to_screen@fault_string(BANK3[15]), 

    display_temps_to_screen@shortgnd_string_pointer	PTR unsigned char  size(1) Largest target is 11
		 -> display_temps_to_screen@shortgnd_string(BANK3[11]), 

    display_temps_to_screen@shortvcc_string_pointer	PTR unsigned char  size(1) Largest target is 11
		 -> display_temps_to_screen@shortvcc_string(BANK3[11]), 

    display_temps_to_screen@open_string_pointer	PTR unsigned char  size(1) Largest target is 13
		 -> display_temps_to_screen@open_string(BANK3[13]), 

    display_temps_to_screen@celsius_string_pointer	PTR unsigned char  size(1) Largest target is 12
		 -> display_temps_to_screen@celsius_string(BANK3[12]), 

    display_temps_to_screen@sensor_three_string_pointer	PTR unsigned char  size(1) Largest target is 6
		 -> display_temps_to_screen@sensor_three_string(BANK3[6]), 

    display_temps_to_screen@sensor_two_string_pointer	PTR unsigned char  size(1) Largest target is 6
		 -> display_temps_to_screen@sensor_two_string(BANK3[6]), 

    display_temps_to_screen@sensor_one_string_pointer	PTR unsigned char  size(1) Largest target is 6
		 -> display_temps_to_screen@sensor_one_string(BANK3[6]), 

    SPI_DATA_HANDLING@offset_pointer	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    SPI_DATA_HANDLING@data_pointer	PTR unsigned char  size(1) Largest target is 22
		 -> main@spi_data(BANK0[22]), 

    String_test@test_pointer	PTR unsigned char  size(1) Largest target is 13
		 -> String_test@test_string(BANK0[13]), 

    location@position	PTR int  size(2) Largest target is 4
		 -> main@position(BANK0[4]), display_temps_to_screen@position(BANK3[4]), 


Critical Paths under _main in COMMON

    _move_temp_to_send->___bmul
    _get_temp_from_right_tcs->___bmul
    _display_temps_to_screen->___altoft
    _display_temps_to_screen->___awtoft
    _location->_comm_out
    _char_to_decimal_print->_LCDWriteCharacter
    ___fttol->___altoft
    ___fttol->___awtoft
    ___ftmul->___altoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___altoft->___ftpack
    _blank_image->_comm_out
    _blank_image->_data_out
    _String_test->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul
    _SPI_DATA_HANDLING->_SPI_TRANSFER

Critical Paths under _main in BANK0

    _main->_display_temps_to_screen
    _display_temps_to_screen->___fttol
    _char_to_decimal_print->_LCDWriteCharacter
    ___fttol->___ftmul
    ___ftmul->___altoft
    _String_test->_LCDWriteCharacter

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_display_temps_to_screen

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0   17566
                                             36 BANK0     35    35      0
                               _Init
                  _SPI_DATA_HANDLING
                        _String_test
                        _blank_image
                        _chip_select
                           _comm_out
            _display_temps_to_screen
            _get_temp_from_right_tcs
                           _location
                  _move_temp_to_send
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _move_temp_to_send                                    9     9      0     994
                                              4 COMMON     9     9      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _get_temp_from_right_tcs                             18    18      0    1189
                                              4 COMMON     6     6      0
                                              0 BANK0     12    12      0
                       _SPI_TRANSFER
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     534
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _display_temps_to_screen                            100   100      0   12209
                                             32 BANK0      4     4      0
                                              0 BANK3     96    96      0
                  _LCDWriteCharacter
                           ___altoft
                           ___awtoft
                            ___ftmul
                            ___fttol
              _char_to_decimal_print
                           _location
 ---------------------------------------------------------------------------------
 (1) _location                                            19    17      2     522
                                              3 COMMON     8     6      2
                                              0 BANK0     11    11      0
                           _comm_out
 ---------------------------------------------------------------------------------
 (2) _char_to_decimal_print                                4     2      2    1903
                                              8 COMMON     4     2      2
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     464
                                             18 BANK0     14    10      4
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2418
                                              2 BANK0     16    10      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1918
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    1859
                                              8 COMMON     6     2      4
                                              0 BANK0      2     2      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _chip_select                                          2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _blank_image                                          6     6      0     160
                                              3 COMMON     6     6      0
                           _comm_out
                           _data_out
 ---------------------------------------------------------------------------------
 (2) _comm_out                                             5     5      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _String_test                                         18    18      0    1485
                                              8 COMMON     4     4      0
                                             11 BANK0     14    14      0
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (3) _LCDWriteCharacter                                   13    13      0    1414
                                              6 COMMON     2     2      0
                                              0 BANK0     11    11      0
                             ___wmul
                           _data_out
 ---------------------------------------------------------------------------------
 (4) _data_out                                             5     5      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1116
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SPI_DATA_HANDLING                                    9     9      0     409
                                              3 COMMON     9     9      0
                       _SPI_TRANSFER
 ---------------------------------------------------------------------------------
 (2) _SPI_TRANSFER                                         3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _SPI_DATA_HANDLING
     _SPI_TRANSFER
   _String_test
     _LCDWriteCharacter
       ___wmul
       _data_out
   _blank_image
     _comm_out
     _data_out
   _chip_select
   _comm_out
   _display_temps_to_screen
     _LCDWriteCharacter
       ___wmul
       _data_out
     ___altoft
       ___ftpack
     ___awtoft
       ___ftpack
     ___ftmul
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _char_to_decimal_print
       _LCDWriteCharacter
         ___wmul
         _data_out
     _location
       _comm_out
   _get_temp_from_right_tcs
     _SPI_TRANSFER
     ___bmul
   _location
     _comm_out
   _move_temp_to_send
     ___bmul
   _spi_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     60      60      10      100.0%
BITBANK3            60      0       0       9        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      51      12       84.4%
BITBANK2            60      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4E       8       97.5%
BITBANK1            50      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     47      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     15A       6        0.0%
ABS                  0      0     15A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Sep 05 12:56:54 2018

                                      ___altoft@exp 0020                                       location@upnib 0023  
                                                 pc 0002                                __size_of_String_test 0031  
                                    location@lownib 0022                                      ___bmul@product 0072  
                                move_temp_to_send@x 0079                                       ___altoft@sign 0021  
                                                _BF 04A0                                                  fsr 0004  
                               ___wmul@multiplicand 0072                                                 l211 0243  
                                               l152 0D67                                                 l321 0FB6  
                                               l331 0905                                                 l500 0B5A  
                                               l167 0BB7                                                 l192 08AF  
                                               l492 0B3D                                                 l583 0C70  
                                               l499 0B52                                                 _CKE 04A6  
                                               _CKP 00A4                                                 _RA1 0029  
                                               _RA2 002A                                                 _RC0 0038  
                                               _RC1 0039                                                 _RC2 003A  
                                               _RC3 003B                                                 _RB5 0035  
                                               _RC6 003E                                                 _RC7 003F  
                                               fsr0 0004                                                 indf 0000  
                              move_temp_to_send@reg 007B                                    location@position 0073  
                                              l2001 08B9                                                l2021 09F3  
                                              l2111 0C48                                                l2033 0926  
                                              l2121 0C73                                                l2113 0C58  
                                              l2019 09E1                                                l2043 0DDA  
                                              l2061 0E2F                                                l2125 0C81  
                                              l2119 0C65                                                l2311 034E  
                                              l2217 0A4F                                                l2073 0E57  
                                              l2065 0E3F                                                l2049 0DF0  
                                              l2321 0383                                                l2313 036A  
                                              l2403 056A                                                l2411 058D  
                                              l2077 0E67                                                l2093 0C16  
                                              l2341 03C5                                                l2333 03AD  
                                              l2317 0371                                                l2325 0394  
                                              l2183 0AF1                                                l2511 0738  
                                              l2503 071A                                                l2431 05D0  
                                              l2415 0594                                                l2423 05B7  
                                              l2407 057C                                                l2271 009A  
                                              l2177 0ADE                                                l2169 0AC3  
                                              l2353 03F5                                                l2361 0419  
                                              l2345 03D7                                                l2329 039B  
                                              l2337 03BE                                                l2515 074B  
                                              l2507 072B                                                l2443 0601  
                                              l2427 05BE                                                l2435 05E1  
                                              l2419 05A6                                                l1821 08FD  
                                              l2189 0B02                                                l2357 0408  
                                              l2349 03E8                                                l2199 09B6  
                                              l2527 07A8                                                l2519 075C  
                                              l2471 06AD                                                l2455 065E  
                                              l2439 05EE                                                l2447 0612  
                                              l2383 0514                                                l2375 04C8  
                                              l2529 07C4                                                l2457 067A  
                                              l2385 0530                                                l1851 0B9B  
                                              l1931 0D4F                                                l2491 06F0  
                                              l2475 06B4                                                l2483 06D7  
                                              l2459 0682                                                l2387 0538  
                                              l1861 0BBF                                                l1933 0D63  
                                              l1925 0D39                                                l2469 0691  
                                              l2397 0547                                                l2549 0CC9  
                                              l1935 0D74                                                l2487 06DE  
                                              l2495 0701                                                l2479 06C6  
                                              l2399 0563                                                l2911 0FE9  
                                              l1945 0D76                                                l2905 0FD2  
                                              l1955 097D                                                l1891 0B27  
                                              l1883 0B0F                                                l1947 0D7A  
                                              l2499 0708                                                l1957 0991  
                                              l1869 0BDC                                                l1877 0BF7  
                                              l1949 0DAD                                                l1887 0B16  
                                              l1967 0014                                                l1897 0B42  
                                              l1889 0B22                                                l1977 0038  
                                              l1969 002C                                                l1899 0B4C  
                                              l1987 005C                                                l1979 0050  
                                              l1989 0074                                                l1997 08B3  
                                              l2893 0F91                                                l2889 0F7D  
                                              u2010 09A2                                                u2100 02F2  
                                              u2110 030F                                                u2120 032C  
                                              u2205 03F2                                                u2080 02B8  
                                              u2065 0202                                                u2090 02D5  
                                              u1515 0B45                                                u2315 05EB  
                                              u2075 00A5                                                u1375 0906  
                                              u2415 0735                                                u1385 090D  
                                              u1705 09E6                                                u1625 0D97  
                                              u1555 0B61                                                u1475 0B1B  
                                              u1805 0E48                                                u1645 001D  
                                              u1495 0B36                                                u1655 0041  
                                              u2455 0CC3                                                u2703 0FD0  
                                              u1665 0065                                                u1585 0D49  
                                              u2465 0D09                                                u1755 0DFC  
                                              u1915 0C49                                                u1845 0E68  
                                              u1765 0E0E                                                u2717 0EE0  
                                              u1855 0E70                                                u2807 00AC  
                                              u2727 0EEC                                                u1945 0C67  
                                              u2817 0240                                                u2737 0F33  
                                              u1795 0E40                                                u2827 0248  
                                              u2747 0F3E                                                u2837 08F2  
                                              u1885 0C1D                                                u2693 0F8F  
                                              u2757 0F53                                                u2847 08DE  
                                              u2767 0F5F                                                u2857 0975  
                                              u2777 0F9E                                                u2867 097A  
                                              u2787 0FAC                                                u2877 0984  
                                              u2797 0094                                                u2887 098D  
                                              u2897 0964                                                _WCOL 00A7  
                                              _Init 093D                                                _main 0E95  
                                      ___ftpack@arg 0070                                        ___ftpack@exp 0073  
                                              btemp 007E                                                ltemp 007E  
       display_temps_to_screen@fault_string_pointer 01EB                         LCDWriteCharacter@after_swap 0029  
                                              start 0000                                                ttemp 007E  
                                              wtemp 007E                                   ___bmul@multiplier 0073  
                                      ___ftmul@cntr 0030                                        ___ftmul@sign 0031  
                                      ___fttol@exp1 003F                                        ___fttol@lval 003B  
                                     __CFG_PLLEN$ON 0000                                               ?_Init 0070  
                                             ?_main 0070                                       __CFG_WDTE$OFF 0000  
                                   __end_of___ftmul 0E95                                     __end_of___fttol 0C8A  
                                             _IRCF0 0484                                               _IRCF1 0485  
                                             _PORTA 0005                                               _PORTB 0006  
                                             _PORTC 0007                                               _SSPM0 00A0  
                                             _SSPM1 00A1                                               _SSPM2 00A2  
                                             _SSPM3 00A3                                               _TRISA 0085  
                                             _TRISB 0086                                               _TRISC 0087  
                                             _SSPEN 00A5                                       ___awtoft@sign 007D  
                                             _fonts 1012                                       ___ftpack@sign 0074  
                                             main@x 0046                                        main@spi_data 0048  
                                             pclath 000A                                               ltemp0 007E  
                                             ltemp1 0082                                               ltemp2 0086  
                                             ltemp3 0080                                        main@position 005E  
                                             ttemp0 007E                                               ttemp1 0081  
                                             ttemp2 0084                                               ttemp3 0087  
                                             ttemp4 007F                                               status 0003  
                                             wtemp0 007E                                               wtemp1 0080  
                                             wtemp2 0082                                               wtemp3 0084  
                                             wtemp4 0086                                               wtemp5 0088  
                                             wtemp6 007F             display_temps_to_screen@working_register 01EC  
                              __size_of_blank_image 005D                                     __initialization 07CD  
                                      __end_of_Init 096A                                        __end_of_main 1000  
                           _display_temps_to_screen 024E                                __size_of_chip_select 000B  
                                            ??_Init 0070                                              ??_main 0044  
                                  main@data_pointer 0062                                       ___fttol@sign1 003A  
                          ?_get_temp_from_right_tcs 0070                                    __end_of___altoft 0A0B  
                                  __end_of___awtoft 093D                                              _ANSELA 0185  
                                            _ANSELB 0186                                    __end_of___ftpack 0B73  
        display_temps_to_screen@sensor_three_string 019C                      __size_of_char_to_decimal_print 006C  
                     __end_of_char_to_decimal_print 007F                                              _TRISA3 042B  
                                            _TRISA4 042C                                              _TRISC4 043C  
                                            _SSPBUF 0013                     SPI_DATA_HANDLING@offset_pointer 0079  
                                  __end_of_data_out 08E7                                    __end_of_comm_out 08FB  
                                            ___bmul 08B1                                              ___wmul 08FB  
                                         ??___ftmul 0028                                           ??___fttol 0036  
                                 _SPI_DATA_HANDLING 0A0B                                    __end_of_location 0DC2  
                                ?_SPI_DATA_HANDLING 0070                               ___ftmul@f3_as_product 002D  
                                  __end_of_spi_init 0013                                 ??_SPI_DATA_HANDLING 0073  
                     move_temp_to_send@byte_to_send 0078                                    String_test@F1411 011F  
                           __end_of__initialization 07FC                                          ___altoft@c 0078  
                 move_temp_to_send@working_register 0076                                          ___awtoft@c 0078  
                               ___bmul@multiplicand 0070                           ??_display_temps_to_screen 0040  
                                        ___ftmul@f1 0022                                          ___ftmul@f2 0025  
                         __end_of_SPI_DATA_HANDLING 0A59                                          ___fttol@f1 0032  
                                    __pcstackCOMMON 0070                                        __pidataBANK0 0898  
                                      __pidataBANK1 0892                                        __pidataBANK2 0A59  
                                     __end_of_fonts 1141                                          __pbssBANK1 00A0  
                           SPI_DATA_HANDLING@offset 0077       display_temps_to_screen@celsius_string_pointer 01E7  
                      get_temp_from_right_tcs@byte1 0025                        get_temp_from_right_tcs@byte2 0026  
                      get_temp_from_right_tcs@byte3 0027                        get_temp_from_right_tcs@byte4 0028  
                                     ??_String_test 0078                                          __pmaintext 0E95  
                                           ?___bmul 0070                                             ?___wmul 0070  
                                 _thermocouple_temp 00A0                                           ?___altoft 0078  
                                         ?___awtoft 0078                                           ?___ftpack 0070  
                            char_to_decimal_print@x 007B                     __end_of_display_temps_to_screen 07CD  
                                         ?_data_out 0070          display_temps_to_screen@open_string_pointer 01E8  
                                         ?_comm_out 0070                                          __stringtab 1000  
                                         ?_location 0073                             String_test@test_pointer 0038  
                        __size_of_SPI_DATA_HANDLING 004E                get_temp_from_right_tcs@byte_received 0020  
                                   __size_of___bmul 0011                                           ?_spi_init 0070  
                                   __size_of___wmul 0021                                             ___ftmul 0DC2  
                                           ___fttol 0BFC    display_temps_to_screen@sensor_one_string_pointer 01E0  
  display_temps_to_screen@sensor_two_string_pointer 01E1                                          ??___altoft 007C  
                               __end_of_String_test 09CB                                          ??___awtoft 007B  
                                        ??___ftpack 0075                                             __ptext1 0005  
                                           __ptext2 0C8A                                             __ptext3 007F  
                                           __ptext4 08B1                                             __ptext5 024E  
                                           __ptext6 0D1D                                             __ptext7 0013  
                                           __ptext8 0BFC                                             __ptext9 0DC2  
                display_temps_to_screen@open_string 01B1              display_temps_to_screen@shortgnd_string 01D5  
                                        ??_data_out 0070                                             clrloop0 089F  
                                        ??_comm_out 0070                                end_of_initialization 07FC  
             display_temps_to_screen@celsius_string 01BE                 display_temps_to_screen@fault_string 01A2  
                             LCDWriteCharacter@base 0027                                       ??_blank_image 0073  
                                        ??_location 0075                    __size_of_get_temp_from_right_tcs 01CF  
                                     ??_chip_select 0072                                          ??_spi_init 0070  
                                      __pstringtext 1000  display_temps_to_screen@sensor_three_string_pointer 01E2  
                                 _LCDWriteCharacter 0B73                                  ?_LCDWriteCharacter 0070  
                                     ?_SPI_TRANSFER 0070                            SPI_TRANSFER@byte_to_send 0072  
                                   chip_select@chip 0070                                        location@page 0024  
                               ??_LCDWriteCharacter 0076              display_temps_to_screen@shortvcc_string 01CA  
                             _char_to_decimal_print 0013                          LCDWriteCharacter@character 0020  
                                       _String_test 099A                                 __end_of_blank_image 0B07  
                                       ___ftmul@exp 002C                           __end_of_LCDWriteCharacter 0BFC  
                                    __end_of___bmul 08C2                                      __end_of___wmul 091C  
                                    ??_SPI_TRANSFER 0070                                 __end_of_chip_select 08B1  
                                LCDWriteCharacter@i 0023                                  LCDWriteCharacter@j 0025  
                         SPI_TRANSFER@byte_recieved 0071                                 start_initialization 07CD  
                        char_to_decimal_print@value 0078                                   _move_temp_to_send 0C8A  
                                ?_move_temp_to_send 0070                                            ??___bmul 0071  
                                          ??___wmul 0074                                          init_fetch0 08C2  
          display_temps_to_screen@sensor_one_string 0190                                         __pdataBANK0 0067  
                                       __pdataBANK1 00E8                                         __pdataBANK2 0110  
                               ??_move_temp_to_send 0074                            SPI_DATA_HANDLING@address 0078  
                                 __size_of___altoft 0040                       SPI_DATA_HANDLING@data_pointer 007B  
                                 __size_of___awtoft 0021                                   __size_of___ftpack 006C  
                                         ___latbits 0002                                       __pcstackBANK0 0020  
                                     __pcstackBANK3 0190                                   __size_of_data_out 0014  
                            ?_char_to_decimal_print 0078                           __end_of_move_temp_to_send 0D1D  
                           _get_temp_from_right_tcs 007F                                         _blank_image 0AAA  
                                 __size_of_comm_out 0014                            ?_display_temps_to_screen 0070  
                   get_temp_from_right_tcs@position 0021                     display_temps_to_screen@position 01E3  
                                 __size_of_location 00A5                                         _chip_select 08A6  
                        __size_of_LCDWriteCharacter 0089                                            ?___ftmul 0022  
                                          ?___fttol 0032                        LCDWriteCharacter@before_swap 0021  
                      display_temps_to_screen@F1451 0067                        display_temps_to_screen@F1460 0139  
                      display_temps_to_screen@F1454 00E8                        display_temps_to_screen@F1463 012C  
                      display_temps_to_screen@F1472 0110                        display_temps_to_screen@F1457 015B  
                      display_temps_to_screen@F1466 0145                        display_temps_to_screen@F1469 0150  
                                 __size_of_spi_init 000E                              String_test@test_string 002B  
               get_temp_from_right_tcs@byte_to_send 0029            display_temps_to_screen@sensor_two_string 0196  
                                         data_out@i 0072                                      ___wmul@product 0074  
                              __end_of_SPI_TRANSFER 099A                                           clear_ram0 089E  
                          get_temp_from_right_tcs@x 002A                                        blank_image@i 0075  
                                      blank_image@j 0077                                         __stringbase 1012  
                                 ___wmul@multiplier 0070                                           main@count 0063  
                                         comm_out@j 0072                           ??_get_temp_from_right_tcs 0074  
                        __size_of_move_temp_to_send 0093                                        ?_String_test 0070  
                                         location@i 0029                                           location@j 0020  
                                         location@k 0027                                           location@q 0025  
                                          ___altoft 09CB                                    __size_of___ftmul 00D3  
                                  __size_of___fttol 008E                                            ___awtoft 091C  
                                          ___ftpack 0B07                                  __end_of__stringtab 1012  
    display_temps_to_screen@shortgnd_string_pointer 01EA                                            _data_out 08D3  
                                          __ptext10 091C                                            __ptext11 09CB  
                                          __ptext20 0A0B                                            __ptext12 0B07  
                                          __ptext21 096A                                            __ptext13 08A6  
                                          __ptext22 093D                                            __ptext14 0AAA  
                                          __ptext15 08E7                                            __ptext16 099A  
                                          __ptext17 0B73                                            __ptext18 08D3  
                                          __ptext19 08FB                                            _comm_out 08E7  
                                     __size_of_Init 002D                                       __size_of_main 016B  
                                          _location 0D1D      display_temps_to_screen@shortvcc_string_pointer 01E9  
                   __end_of_get_temp_from_right_tcs 024E                                            _spi_init 0005  
                     move_temp_to_send@data_pointer 007C                                            init_ram0 08C6  
                           ??_char_to_decimal_print 007A                               __size_of_SPI_TRANSFER 0030  
                                   blank_image@page 0074                                        ?_blank_image 0070  
                                         stringcode 100A                                        ?_chip_select 0070  
                    SPI_DATA_HANDLING@byte_received 0076                    __size_of_display_temps_to_screen 057F  
                                      _SPI_TRANSFER 096A                                            stringtab 1000  
                                __CFG_FOSC$INTOSCIO 0000                       SPI_DATA_HANDLING@byte_to_send 0075  
