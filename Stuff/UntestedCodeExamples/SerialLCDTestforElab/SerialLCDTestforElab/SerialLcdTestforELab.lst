;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/26/2010 5:04:06 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28D3      	GOTO       211
_Write_LCD_Nibble:
;SerialLcdTestforELab.c,16 :: 		void Write_LCD_Nibble(unsigned short N){
;SerialLcdTestforELab.c,17 :: 		Enable_Pin = 0;
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1105      	BCF        GP2_bit, 2
;SerialLcdTestforELab.c,19 :: 		Clk_Pin = 0;
0x0005	0x1085      	BCF        GP1_bit, 1
;SerialLcdTestforELab.c,20 :: 		Data_Pin = RS;
0x0006	0x183A      	BTFSC      _RS, 0
0x0007	0x280A      	GOTO       L__Write_LCD_Nibble14
0x0008	0x1285      	BCF        GP5_bit, 5
0x0009	0x280B      	GOTO       L__Write_LCD_Nibble15
L__Write_LCD_Nibble14:
0x000A	0x1685      	BSF        GP5_bit, 5
L__Write_LCD_Nibble15:
;SerialLcdTestforELab.c,21 :: 		Clk_Pin = 1;
0x000B	0x1485      	BSF        GP1_bit, 1
;SerialLcdTestforELab.c,22 :: 		Clk_Pin = 0;
0x000C	0x1085      	BCF        GP1_bit, 1
;SerialLcdTestforELab.c,26 :: 		Mask = 8;
0x000D	0x3008      	MOVLW      8
0x000E	0x00B9      	MOVWF      _Mask
;SerialLcdTestforELab.c,27 :: 		for (t=0; t<4; t++){
0x000F	0x01BC      	CLRF       _t
L_Write_LCD_Nibble1:
0x0010	0x3004      	MOVLW      4
0x0011	0x023C      	SUBWF      _t, 0
0x0012	0x1803      	BTFSC      STATUS, 0
0x0013	0x2826      	GOTO       L_Write_LCD_Nibble2
;SerialLcdTestforELab.c,28 :: 		Flag = N & Mask;
0x0014	0x0839      	MOVF       _Mask, 0
0x0015	0x0547      	ANDWF      FARG_Write_LCD_Nibble_N, 0
0x0016	0x00F1      	MOVWF      R1
0x0017	0x0871      	MOVF       R1, 0
0x0018	0x00BB      	MOVWF      _Flag
;SerialLcdTestforELab.c,29 :: 		if(Flag==0) Data_Pin = 0;
0x0019	0x0871      	MOVF       R1, 0
0x001A	0x3A00      	XORLW      0
0x001B	0x1D03      	BTFSS      STATUS, 2
0x001C	0x281F      	GOTO       L_Write_LCD_Nibble4
0x001D	0x1285      	BCF        GP5_bit, 5
0x001E	0x2820      	GOTO       L_Write_LCD_Nibble5
L_Write_LCD_Nibble4:
;SerialLcdTestforELab.c,30 :: 		else Data_Pin = 1;
0x001F	0x1685      	BSF        GP5_bit, 5
L_Write_LCD_Nibble5:
;SerialLcdTestforELab.c,31 :: 		Clk_Pin = 1;
0x0020	0x1485      	BSF        GP1_bit, 1
;SerialLcdTestforELab.c,32 :: 		Clk_Pin = 0;
0x0021	0x1085      	BCF        GP1_bit, 1
;SerialLcdTestforELab.c,33 :: 		Mask = Mask >> 1;
0x0022	0x0CB9      	RRF        _Mask, 1
0x0023	0x13B9      	BCF        _Mask, 7
;SerialLcdTestforELab.c,27 :: 		for (t=0; t<4; t++){
0x0024	0x0ABC      	INCF       _t, 1
;SerialLcdTestforELab.c,34 :: 		}
0x0025	0x2810      	GOTO       L_Write_LCD_Nibble1
L_Write_LCD_Nibble2:
;SerialLcdTestforELab.c,36 :: 		Clk_Pin = 1;
0x0026	0x1485      	BSF        GP1_bit, 1
;SerialLcdTestforELab.c,37 :: 		Clk_Pin = 0;
0x0027	0x1085      	BCF        GP1_bit, 1
;SerialLcdTestforELab.c,38 :: 		Data_Pin = 0;
0x0028	0x1285      	BCF        GP5_bit, 5
;SerialLcdTestforELab.c,39 :: 		Enable_Pin = 1;
0x0029	0x1505      	BSF        GP2_bit, 2
;SerialLcdTestforELab.c,40 :: 		Enable_Pin = 0;
0x002A	0x1105      	BCF        GP2_bit, 2
;SerialLcdTestforELab.c,41 :: 		}
0x002B	0x0008      	RETURN
; end of _Write_LCD_Nibble
_Write_LCD_Data:
;SerialLcdTestforELab.c,44 :: 		void Write_LCD_Data(unsigned short D){
;SerialLcdTestforELab.c,45 :: 		RS = 1; // It is Data, not command
0x002C	0x3001      	MOVLW      1
0x002D	0x1283      	BCF        STATUS, 5
0x002E	0x00BA      	MOVWF      _RS
;SerialLcdTestforELab.c,46 :: 		Low_Nibble = D & 15;
0x002F	0x300F      	MOVLW      15
0x0030	0x0546      	ANDWF      FARG_Write_LCD_Data_D, 0
0x0031	0x00C1      	MOVWF      _Low_Nibble
;SerialLcdTestforELab.c,47 :: 		High_Nibble = D/16;
0x0032	0x0846      	MOVF       FARG_Write_LCD_Data_D, 0
0x0033	0x00F0      	MOVWF      R0
0x0034	0x0CF0      	RRF        R0, 1
0x0035	0x13F0      	BCF        R0, 7
0x0036	0x0CF0      	RRF        R0, 1
0x0037	0x13F0      	BCF        R0, 7
0x0038	0x0CF0      	RRF        R0, 1
0x0039	0x13F0      	BCF        R0, 7
0x003A	0x0CF0      	RRF        R0, 1
0x003B	0x13F0      	BCF        R0, 7
0x003C	0x0870      	MOVF       R0, 0
0x003D	0x00C0      	MOVWF      _High_Nibble
;SerialLcdTestforELab.c,48 :: 		Write_LCD_Nibble(High_Nibble);
0x003E	0x0870      	MOVF       R0, 0
0x003F	0x00C7      	MOVWF      FARG_Write_LCD_Nibble_N
0x0040	0x2003      	CALL       _Write_LCD_Nibble
;SerialLcdTestforELab.c,49 :: 		Write_LCD_Nibble(Low_Nibble);
0x0041	0x0841      	MOVF       _Low_Nibble, 0
0x0042	0x00C7      	MOVWF      FARG_Write_LCD_Nibble_N
0x0043	0x2003      	CALL       _Write_LCD_Nibble
;SerialLcdTestforELab.c,50 :: 		}
0x0044	0x0008      	RETURN
; end of _Write_LCD_Data
_Write_LCD_Cmd:
;SerialLcdTestforELab.c,52 :: 		void Write_LCD_Cmd(unsigned short C){
;SerialLcdTestforELab.c,53 :: 		RS = 0; // It is command, not data
0x0045	0x1283      	BCF        STATUS, 5
0x0046	0x01BA      	CLRF       _RS
;SerialLcdTestforELab.c,54 :: 		Low_Nibble = C & 15;
0x0047	0x300F      	MOVLW      15
0x0048	0x0546      	ANDWF      FARG_Write_LCD_Cmd_C, 0
0x0049	0x00C1      	MOVWF      _Low_Nibble
;SerialLcdTestforELab.c,55 :: 		High_Nibble = C/16;
0x004A	0x0846      	MOVF       FARG_Write_LCD_Cmd_C, 0
0x004B	0x00F0      	MOVWF      R0
0x004C	0x0CF0      	RRF        R0, 1
0x004D	0x13F0      	BCF        R0, 7
0x004E	0x0CF0      	RRF        R0, 1
0x004F	0x13F0      	BCF        R0, 7
0x0050	0x0CF0      	RRF        R0, 1
0x0051	0x13F0      	BCF        R0, 7
0x0052	0x0CF0      	RRF        R0, 1
0x0053	0x13F0      	BCF        R0, 7
0x0054	0x0870      	MOVF       R0, 0
0x0055	0x00C0      	MOVWF      _High_Nibble
;SerialLcdTestforELab.c,56 :: 		Write_LCD_Nibble(High_Nibble);
0x0056	0x0870      	MOVF       R0, 0
0x0057	0x00C7      	MOVWF      FARG_Write_LCD_Nibble_N
0x0058	0x2003      	CALL       _Write_LCD_Nibble
;SerialLcdTestforELab.c,57 :: 		Write_LCD_Nibble(Low_Nibble);
0x0059	0x0841      	MOVF       _Low_Nibble, 0
0x005A	0x00C7      	MOVWF      FARG_Write_LCD_Nibble_N
0x005B	0x2003      	CALL       _Write_LCD_Nibble
;SerialLcdTestforELab.c,58 :: 		}
0x005C	0x0008      	RETURN
; end of _Write_LCD_Cmd
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x005D	0x1283      	BCF        STATUS, 5
0x005E	0x083F      	MOVF       ___DoICPAddr+1, 0
0x005F	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0060	0x083E      	MOVF       ___DoICPAddr, 0
0x0061	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x0062	0x0008      	RETURN
; end of _____DoICP
_strlen:
;__Lib_CString.c,144 :: 		
;__Lib_CString.c,147 :: 		
0x0063	0x1283      	BCF        STATUS, 5
0x0064	0x0846      	MOVF       FARG_strlen_s, 0
0x0065	0x00F2      	MOVWF      R2
;__Lib_CString.c,148 :: 		
L_strlen33:
0x0066	0x0872      	MOVF       R2, 0
0x0067	0x00F0      	MOVWF      R0
0x0068	0x0AF2      	INCF       R2, 1
0x0069	0x0870      	MOVF       R0, 0
0x006A	0x0084      	MOVWF      FSR
0x006B	0x0800      	MOVF       INDF, 0
0x006C	0x1903      	BTFSC      STATUS, 2
0x006D	0x286F      	GOTO       L_strlen34
;__Lib_CString.c,149 :: 		
0x006E	0x2866      	GOTO       L_strlen33
L_strlen34:
;__Lib_CString.c,150 :: 		
0x006F	0x0846      	MOVF       FARG_strlen_s, 0
0x0070	0x0272      	SUBWF      R2, 0
0x0071	0x00F0      	MOVWF      R0
0x0072	0x3001      	MOVLW      1
0x0073	0x02F0      	SUBWF      R0, 1
0x0074	0x01F1      	CLRF       R0+1
0x0075	0x1C03      	BTFSS      STATUS, 0
0x0076	0x03F1      	DECF       R0+1, 1
;__Lib_CString.c,151 :: 		
0x0077	0x0008      	RETURN
; end of _strlen
_Delay_50ms:
;SerialLcdTestforELab.c,12 :: 		void Delay_50ms(){
;SerialLcdTestforELab.c,13 :: 		Delay_ms(50);
0x0078	0x3041      	MOVLW      65
0x0079	0x00FC      	MOVWF      R12
0x007A	0x30EE      	MOVLW      238
0x007B	0x00FD      	MOVWF      R13
L_Delay_50ms0:
0x007C	0x0BFD      	DECFSZ     R13, 1
0x007D	0x287C      	GOTO       L_Delay_50ms0
0x007E	0x0BFC      	DECFSZ     R12, 1
0x007F	0x287C      	GOTO       L_Delay_50ms0
0x0080	0x0000      	NOP
;SerialLcdTestforELab.c,14 :: 		}
0x0081	0x0008      	RETURN
; end of _Delay_50ms
_Write_LCD_Text:
;SerialLcdTestforELab.c,84 :: 		void Write_LCD_Text(char *StrData){
;SerialLcdTestforELab.c,85 :: 		q = strlen(StrData);
0x0082	0x1283      	BCF        STATUS, 5
0x0083	0x0844      	MOVF       FARG_Write_LCD_Text_StrData, 0
0x0084	0x00C6      	MOVWF      FARG_strlen_s
0x0085	0x2063      	CALL       _strlen
0x0086	0x0870      	MOVF       R0, 0
0x0087	0x00C3      	MOVWF      _q
;SerialLcdTestforELab.c,86 :: 		for (p = 0; p<q; p++){
0x0088	0x01C2      	CLRF       _p
L_Write_LCD_Text7:
0x0089	0x0843      	MOVF       _q, 0
0x008A	0x0242      	SUBWF      _p, 0
0x008B	0x1803      	BTFSC      STATUS, 0
0x008C	0x2899      	GOTO       L_Write_LCD_Text8
;SerialLcdTestforELab.c,87 :: 		temp = StrData[p];
0x008D	0x0842      	MOVF       _p, 0
0x008E	0x0744      	ADDWF      FARG_Write_LCD_Text_StrData, 0
0x008F	0x0084      	MOVWF      FSR
0x0090	0x0800      	MOVF       INDF, 0
0x0091	0x00F0      	MOVWF      R0
0x0092	0x0870      	MOVF       R0, 0
0x0093	0x00BD      	MOVWF      _temp
;SerialLcdTestforELab.c,88 :: 		Write_LCD_Data(temp);
0x0094	0x0870      	MOVF       R0, 0
0x0095	0x00C6      	MOVWF      FARG_Write_LCD_Data_D
0x0096	0x202C      	CALL       _Write_LCD_Data
;SerialLcdTestforELab.c,86 :: 		for (p = 0; p<q; p++){
0x0097	0x0AC2      	INCF       _p, 1
;SerialLcdTestforELab.c,89 :: 		}
0x0098	0x2889      	GOTO       L_Write_LCD_Text7
L_Write_LCD_Text8:
;SerialLcdTestforELab.c,91 :: 		}
0x0099	0x0008      	RETURN
; end of _Write_LCD_Text
_Position_LCD:
;SerialLcdTestforELab.c,78 :: 		void Position_LCD(unsigned short x, unsigned short y){
;SerialLcdTestforELab.c,79 :: 		temp = 127 + y;
0x009A	0x1283      	BCF        STATUS, 5
0x009B	0x0845      	MOVF       FARG_Position_LCD_y, 0
0x009C	0x3E7F      	ADDLW      127
0x009D	0x00BD      	MOVWF      _temp
;SerialLcdTestforELab.c,80 :: 		if (x == 2) temp = temp + 64;
0x009E	0x0844      	MOVF       FARG_Position_LCD_x, 0
0x009F	0x3A02      	XORLW      2
0x00A0	0x1D03      	BTFSS      STATUS, 2
0x00A1	0x28A4      	GOTO       L_Position_LCD6
0x00A2	0x3040      	MOVLW      64
0x00A3	0x07BD      	ADDWF      _temp, 1
L_Position_LCD6:
;SerialLcdTestforELab.c,81 :: 		Write_LCD_Cmd(temp);
0x00A4	0x083D      	MOVF       _temp, 0
0x00A5	0x00C6      	MOVWF      FARG_Write_LCD_Cmd_C
0x00A6	0x2045      	CALL       _Write_LCD_Cmd
;SerialLcdTestforELab.c,82 :: 		}
0x00A7	0x0008      	RETURN
; end of _Position_LCD
_Initialize_LCD:
;SerialLcdTestforELab.c,60 :: 		void Initialize_LCD(){
;SerialLcdTestforELab.c,61 :: 		Delay_50ms();
0x00A8	0x2078      	CALL       _Delay_50ms
;SerialLcdTestforELab.c,62 :: 		Write_LCD_Cmd(0x20); // Wake-Up Sequence
0x00A9	0x3020      	MOVLW      32
0x00AA	0x1283      	BCF        STATUS, 5
0x00AB	0x00C6      	MOVWF      FARG_Write_LCD_Cmd_C
0x00AC	0x2045      	CALL       _Write_LCD_Cmd
;SerialLcdTestforELab.c,63 :: 		Delay_50ms();
0x00AD	0x2078      	CALL       _Delay_50ms
;SerialLcdTestforELab.c,64 :: 		Write_LCD_Cmd(0x20);
0x00AE	0x3020      	MOVLW      32
0x00AF	0x00C6      	MOVWF      FARG_Write_LCD_Cmd_C
0x00B0	0x2045      	CALL       _Write_LCD_Cmd
;SerialLcdTestforELab.c,65 :: 		Delay_50ms();
0x00B1	0x2078      	CALL       _Delay_50ms
;SerialLcdTestforELab.c,66 :: 		Write_LCD_Cmd(0x20);
0x00B2	0x3020      	MOVLW      32
0x00B3	0x00C6      	MOVWF      FARG_Write_LCD_Cmd_C
0x00B4	0x2045      	CALL       _Write_LCD_Cmd
;SerialLcdTestforELab.c,67 :: 		Delay_50ms();
0x00B5	0x2078      	CALL       _Delay_50ms
;SerialLcdTestforELab.c,68 :: 		Write_LCD_Cmd(0x28); // 4-bits, 2 lines, 5x7 font
0x00B6	0x3028      	MOVLW      40
0x00B7	0x00C6      	MOVWF      FARG_Write_LCD_Cmd_C
0x00B8	0x2045      	CALL       _Write_LCD_Cmd
;SerialLcdTestforELab.c,69 :: 		Delay_50ms();
0x00B9	0x2078      	CALL       _Delay_50ms
;SerialLcdTestforELab.c,70 :: 		Write_LCD_Cmd(0x0C); // Display ON, No cursors
0x00BA	0x300C      	MOVLW      12
0x00BB	0x00C6      	MOVWF      FARG_Write_LCD_Cmd_C
0x00BC	0x2045      	CALL       _Write_LCD_Cmd
;SerialLcdTestforELab.c,71 :: 		Delay_50ms();
0x00BD	0x2078      	CALL       _Delay_50ms
;SerialLcdTestforELab.c,72 :: 		Write_LCD_Cmd(0x06); // Entry mode- Auto-increment, No Display shifting
0x00BE	0x3006      	MOVLW      6
0x00BF	0x00C6      	MOVWF      FARG_Write_LCD_Cmd_C
0x00C0	0x2045      	CALL       _Write_LCD_Cmd
;SerialLcdTestforELab.c,73 :: 		Delay_50ms();
0x00C1	0x2078      	CALL       _Delay_50ms
;SerialLcdTestforELab.c,74 :: 		Write_LCD_Cmd(0x01);
0x00C2	0x3001      	MOVLW      1
0x00C3	0x00C6      	MOVWF      FARG_Write_LCD_Cmd_C
0x00C4	0x2045      	CALL       _Write_LCD_Cmd
;SerialLcdTestforELab.c,75 :: 		Delay_50ms();
0x00C5	0x2078      	CALL       _Delay_50ms
;SerialLcdTestforELab.c,76 :: 		}
0x00C6	0x0008      	RETURN
; end of _Initialize_LCD
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x00C7	0x205D      	CALL       _____DoICP
0x00C8	0x118A      	BCF        PCLATH, 3
0x00C9	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x00CA	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x00CB	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x00CC	0x0ABE      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x00CD	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x00CE	0x0ABF      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x00CF	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x00D0	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x00D1	0x28C7      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x00D2	0x0008      	RETURN
; end of ___CC2DW
_main:
;SerialLcdTestforELab.c,96 :: 		void main() {
;SerialLcdTestforELab.c,97 :: 		CMCON0 = 7;  // Disable Comparators
0x00D3	0x3075      	MOVLW      117
0x00D4	0x1283      	BCF        STATUS, 5
0x00D5	0x00A0      	MOVWF      _Message2
0x00D6	0x3073      	MOVLW      115
0x00D7	0x00A1      	MOVWF      33
0x00D8	0x3069      	MOVLW      105
0x00D9	0x00A2      	MOVWF      34
0x00DA	0x306E      	MOVLW      110
0x00DB	0x00A3      	MOVWF      35
0x00DC	0x3067      	MOVLW      103
0x00DD	0x00A4      	MOVWF      36
0x00DE	0x3020      	MOVLW      32
0x00DF	0x00A5      	MOVWF      37
0x00E0	0x3037      	MOVLW      55
0x00E1	0x00A6      	MOVWF      38
0x00E2	0x3034      	MOVLW      52
0x00E3	0x00A7      	MOVWF      39
0x00E4	0x3048      	MOVLW      72
0x00E5	0x00A8      	MOVWF      40
0x00E6	0x3043      	MOVLW      67
0x00E7	0x00A9      	MOVWF      41
0x00E8	0x3035      	MOVLW      53
0x00E9	0x00AA      	MOVWF      42
0x00EA	0x3039      	MOVLW      57
0x00EB	0x00AB      	MOVWF      43
0x00EC	0x3035      	MOVLW      53
0x00ED	0x00AC      	MOVWF      44
0x00EE	0x01AD      	CLRF       45
0x00EF	0x3033      	MOVLW      51
0x00F0	0x00AE      	MOVWF      _Message1
0x00F1	0x302D      	MOVLW      45
0x00F2	0x00AF      	MOVWF      47
0x00F3	0x3057      	MOVLW      87
0x00F4	0x00B0      	MOVWF      48
0x00F5	0x3069      	MOVLW      105
0x00F6	0x00B1      	MOVWF      49
0x00F7	0x3072      	MOVLW      114
0x00F8	0x00B2      	MOVWF      50
0x00F9	0x3065      	MOVLW      101
0x00FA	0x00B3      	MOVWF      51
0x00FB	0x3020      	MOVLW      32
0x00FC	0x00B4      	MOVWF      52
0x00FD	0x304C      	MOVLW      76
0x00FE	0x00B5      	MOVWF      53
0x00FF	0x3043      	MOVLW      67
0x0100	0x00B6      	MOVWF      54
0x0101	0x3044      	MOVLW      68
0x0102	0x00B7      	MOVWF      55
0x0103	0x01B8      	CLRF       56
0x0104	0x3007      	MOVLW      7
0x0105	0x0099      	MOVWF      CMCON0
;SerialLcdTestforELab.c,98 :: 		TRISIO = 0b00001000;  // All Outputs except GP3
0x0106	0x3008      	MOVLW      8
0x0107	0x1683      	BSF        STATUS, 5
0x0108	0x0085      	MOVWF      TRISIO
;SerialLcdTestforELab.c,99 :: 		ANSEL = 0x00; // No analog i/p
0x0109	0x019F      	CLRF       ANSEL
;SerialLcdTestforELab.c,101 :: 		Initialize_LCD();
0x010A	0x20A8      	CALL       _Initialize_LCD
;SerialLcdTestforELab.c,103 :: 		do {
L_main10:
;SerialLcdTestforELab.c,104 :: 		Position_LCD(1,4);
0x010B	0x3001      	MOVLW      1
0x010C	0x00C4      	MOVWF      FARG_Position_LCD_x
0x010D	0x3004      	MOVLW      4
0x010E	0x00C5      	MOVWF      FARG_Position_LCD_y
0x010F	0x209A      	CALL       _Position_LCD
;SerialLcdTestforELab.c,105 :: 		Write_LCD_Text(Message1);
0x0110	0x302E      	MOVLW      _Message1
0x0111	0x00C4      	MOVWF      FARG_Write_LCD_Text_StrData
0x0112	0x2082      	CALL       _Write_LCD_Text
;SerialLcdTestforELab.c,106 :: 		Position_LCD(2,2);
0x0113	0x3002      	MOVLW      2
0x0114	0x00C4      	MOVWF      FARG_Position_LCD_x
0x0115	0x3002      	MOVLW      2
0x0116	0x00C5      	MOVWF      FARG_Position_LCD_y
0x0117	0x209A      	CALL       _Position_LCD
;SerialLcdTestforELab.c,107 :: 		Write_LCD_Text(Message2);
0x0118	0x3020      	MOVLW      _Message2
0x0119	0x00C4      	MOVWF      FARG_Write_LCD_Text_StrData
0x011A	0x2082      	CALL       _Write_LCD_Text
;SerialLcdTestforELab.c,108 :: 		Delay_ms(1500);
0x011B	0x3008      	MOVLW      8
0x011C	0x00FB      	MOVWF      R11
0x011D	0x309D      	MOVLW      157
0x011E	0x00FC      	MOVWF      R12
0x011F	0x3005      	MOVLW      5
0x0120	0x00FD      	MOVWF      R13
L_main12:
0x0121	0x0BFD      	DECFSZ     R13, 1
0x0122	0x2921      	GOTO       L_main12
0x0123	0x0BFC      	DECFSZ     R12, 1
0x0124	0x2921      	GOTO       L_main12
0x0125	0x0BFB      	DECFSZ     R11, 1
0x0126	0x2921      	GOTO       L_main12
0x0127	0x0000      	NOP
0x0128	0x0000      	NOP
;SerialLcdTestforELab.c,109 :: 		Write_LCD_Cmd(0x01);  // Clear LCD
0x0129	0x3001      	MOVLW      1
0x012A	0x00C6      	MOVWF      FARG_Write_LCD_Cmd_C
0x012B	0x2045      	CALL       _Write_LCD_Cmd
;SerialLcdTestforELab.c,110 :: 		delay_ms(1000);
0x012C	0x3006      	MOVLW      6
0x012D	0x00FB      	MOVWF      R11
0x012E	0x3013      	MOVLW      19
0x012F	0x00FC      	MOVWF      R12
0x0130	0x30AD      	MOVLW      173
0x0131	0x00FD      	MOVWF      R13
L_main13:
0x0132	0x0BFD      	DECFSZ     R13, 1
0x0133	0x2932      	GOTO       L_main13
0x0134	0x0BFC      	DECFSZ     R12, 1
0x0135	0x2932      	GOTO       L_main13
0x0136	0x0BFB      	DECFSZ     R11, 1
0x0137	0x2932      	GOTO       L_main13
0x0138	0x0000      	NOP
0x0139	0x0000      	NOP
;SerialLcdTestforELab.c,111 :: 		} while(1);
0x013A	0x290B      	GOTO       L_main10
;SerialLcdTestforELab.c,113 :: 		}
0x013B	0x293B      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [41]    _Write_LCD_Nibble
0x002C      [25]    _Write_LCD_Data
0x0045      [24]    _Write_LCD_Cmd
0x005D       [6]    _____DoICP
0x0063      [21]    _strlen
0x0078      [10]    _Delay_50ms
0x0082      [24]    _Write_LCD_Text
0x009A      [14]    _Position_LCD
0x00A8      [31]    _Initialize_LCD
0x00C7      [12]    ___CC2DW
0x00D3     [105]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    C_bit
0x0003       [0]    Z_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    IRP_bit
0x0003       [0]    RP1_bit
0x0003       [0]    DC_bit
0x0003       [0]    NOT_PD_bit
0x0003       [0]    RP0_bit
0x0003       [1]    STATUS
0x0004       [1]    FSRPTR
0x0004       [1]    FSR
0x0005       [0]    GP0_bit
0x0005       [0]    Data_Pin
0x0005       [0]    Enable_Pin
0x0005       [1]    GPIO
0x0005       [0]    Clk_Pin
0x0005       [0]    GP5_bit
0x0005       [0]    GP2_bit
0x0005       [0]    GP4_bit
0x0005       [0]    GP3_bit
0x0005       [0]    GP1_bit
0x000A       [1]    PCLATH
0x000B       [0]    GPIE_bit
0x000B       [1]    INTCON
0x000B       [0]    GIE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    GPIF_bit
0x000C       [0]    ADIF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [1]    PIR1
0x000C       [0]    T2IF_bit
0x000C       [0]    CMIF_bit
0x000C       [0]    OSFIF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    T1IF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    EEIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    T1GINV_bit
0x0010       [0]    T1GE_bit
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    TMR1CS_bit
0x0010       [0]    TMR1ON_bit
0x0010       [1]    T1CON
0x0010       [0]    NOT_T1SYNC_bit
0x0011       [1]    TMR2
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [0]    TOUTPS1_bit
0x0012       [1]    T2CON
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    TMR2ON_bit
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    T2CKPS0_bit
0x0013       [1]    CCPR1L
0x0014       [1]    CCPR1H
0x0015       [0]    CCP1M1_bit
0x0015       [0]    CCP1M0_bit
0x0015       [0]    DC1B1_bit
0x0015       [0]    CCP1M2_bit
0x0015       [0]    DC1B0_bit
0x0015       [0]    CCP1M3_bit
0x0015       [1]    CCP1CON
0x0018       [0]    WDTPS0_bit
0x0018       [1]    WDTCON
0x0018       [0]    SWDTEN_bit
0x0018       [0]    WDTPS1_bit
0x0018       [0]    WDTPS3_bit
0x0018       [0]    WDTPS2_bit
0x0019       [0]    CIS_bit
0x0019       [0]    CM2_bit
0x0019       [0]    CM0_bit
0x0019       [0]    CM1_bit
0x0019       [1]    CMCON0
0x0019       [0]    COUT_bit
0x0019       [0]    CINV_bit
0x001A       [1]    CMCON1
0x001A       [0]    CMSYNC_bit
0x001A       [0]    T1GSS_bit
0x001E       [1]    ADRESH
0x001F       [0]    GO_DONE_bit
0x001F       [0]    NOT_DONE_bit
0x001F       [1]    ADCON0
0x001F       [0]    ADON_bit
0x001F       [0]    GO_bit
0x001F       [0]    VCFG_bit
0x001F       [0]    ADFM_bit
0x001F       [0]    CHS2_bit
0x001F       [0]    CHS0_bit
0x001F       [0]    CHS1_bit
0x0020      [14]    _Message2
0x002E      [11]    _Message1
0x0039       [1]    _Mask
0x003A       [1]    _RS
0x003B       [1]    _Flag
0x003C       [1]    _t
0x003D       [1]    _temp
0x003E       [2]    ___DoICPAddr
0x0040       [1]    _High_Nibble
0x0041       [1]    _Low_Nibble
0x0042       [1]    _p
0x0043       [1]    _q
0x0044       [1]    FARG_Write_LCD_Text_StrData
0x0044       [1]    FARG_Position_LCD_x
0x0045       [1]    FARG_Position_LCD_y
0x0046       [1]    FARG_Write_LCD_Cmd_C
0x0046       [1]    FARG_strlen_s
0x0046       [1]    FARG_Write_LCD_Data_D
0x0047       [1]    FARG_Write_LCD_Nibble_N
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    PS0_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    PS2_bit
0x0081       [0]    PSA_bit
0x0081       [0]    NOT_GPPU_bit
0x0081       [0]    PS1_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    INTEDG_bit
0x0081       [0]    T0CS_bit
0x0085       [0]    TRISIO2_bit
0x0085       [0]    TRISIO1_bit
0x0085       [0]    TRISIO0_bit
0x0085       [0]    TRISIO3_bit
0x0085       [0]    TRISIO4_bit
0x0085       [1]    TRISIO
0x0085       [0]    TRISIO5_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    T2IE_bit
0x008C       [0]    T1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    TMR1IE_bit
0x008C       [0]    ADIE_bit
0x008C       [0]    EEIE_bit
0x008C       [0]    CCP1IE_bit
0x008C       [0]    OSFIE_bit
0x008C       [0]    CMIE_bit
0x008E       [0]    NOT_BOD_bit
0x008E       [1]    PCON
0x008E       [0]    ULPWUE_bit
0x008E       [0]    SBODEN_bit
0x008E       [0]    NOT_POR_bit
0x008F       [1]    OSCCON
0x008F       [0]    SCS_bit
0x008F       [0]    LTS_bit
0x008F       [0]    HTS_bit
0x008F       [0]    IRCF0_bit
0x008F       [0]    OSTS_bit
0x008F       [0]    IRCF2_bit
0x008F       [0]    IRCF1_bit
0x0090       [0]    TUN1_bit
0x0090       [0]    TUN0_bit
0x0090       [0]    TUN4_bit
0x0090       [0]    TUN2_bit
0x0090       [1]    OSCTUNE
0x0090       [0]    TUN3_bit
0x0092       [1]    PR2
0x0095       [0]    WPU5_bit
0x0095       [1]    WPU
0x0095       [0]    WPU1_bit
0x0095       [0]    WPU0_bit
0x0095       [0]    WPU4_bit
0x0095       [1]    WPUA
0x0095       [0]    WPU2_bit
0x0096       [0]    IOC0_bit
0x0096       [0]    IOC1_bit
0x0096       [1]    IOCA
0x0096       [1]    IOC
0x0096       [0]    IOC2_bit
0x0096       [0]    IOC5_bit
0x0096       [0]    IOC4_bit
0x0096       [0]    IOC3_bit
0x0099       [0]    VR0_bit
0x0099       [0]    VR1_bit
0x0099       [0]    VR2_bit
0x0099       [0]    VR3_bit
0x0099       [0]    VRR_bit
0x0099       [1]    VRCON
0x0099       [0]    VREN_bit
0x009A       [1]    EEDATA
0x009A       [1]    EEDAT
0x009B       [1]    EEADR
0x009C       [0]    WREN_bit
0x009C       [0]    WR_bit
0x009C       [0]    RD_bit
0x009C       [0]    WRERR_bit
0x009C       [1]    EECON1
0x009D       [1]    EECON2
0x009E       [1]    ADRESL
0x009F       [0]    ANS3_bit
0x009F       [0]    ANS2_bit
0x009F       [0]    ADCS0_bit
0x009F       [0]    ADCS2_bit
0x009F       [0]    ADCS1_bit
0x009F       [1]    ANSEL
0x009F       [0]    ANS0_bit
0x009F       [0]    ANS1_bit
//** Label List: ** 
//----------------------------------------------
  L_Delay_50ms0
  L_Write_LCD_Nibble1
  L_Write_LCD_Nibble2
  L_Write_LCD_Nibble3
  L_Write_LCD_Nibble4
  L_Write_LCD_Nibble5
  L_Position_LCD6
  L_Write_LCD_Text7
  L_Write_LCD_Text8
  L_Write_LCD_Text9
  L_main10
  L_main11
  L_main12
  L_main13
  _Delay_50ms
  _Write_LCD_Nibble
  L__Write_LCD_Nibble14
  L__Write_LCD_Nibble15
  _Write_LCD_Data
  _Write_LCD_Cmd
  _Initialize_LCD
  _Position_LCD
  _Write_LCD_Text
  _main
  L_memchr0
  L_memchr1
  L_memchr2
  L_memchr3
  L_memcmp4
  L_memcmp5
  L_memcmp6
  L_memcpy7
  L_memcpy8
  L_memmove9
  L_memmove10
  L_memmove11
  L_memmove12
  L_memmove13
  L_memmove14
  L_memmove15
  L_memmove16
  L_memmove17
  L_memset18
  L_memset19
  L_strcat20
  L_strcat21
  L_strcat22
  L_strcat23
  L_strchr24
  L_strchr25
  L_strchr26
  L_strcmp27
  L_strcmp28
  L_strcmp29
  L_strcmp30
  L_strcpy31
  L_strcpy32
  L_strlen33
  L_strlen34
  L_strncat35
  L_strncat36
  L_strncat37
  L_strncat38
  L_strncat39
  L_strncat40
  L_strncat41
  L_strncpy42
  L_strncpy43
  L_strncpy44
  L_strncpy45
  L_strncpy46
  L_strspn47
  L_strspn48
  L_strspn49
  L_strspn50
  L_strcspn51
  L_strcspn52
  L_strcspn53
  L_strcspn54
  L_strncmp55
  L_strncmp56
  L_strncmp57
  L_strncmp58
  L_strncmp59
  L_strpbrk60
  L_strpbrk61
  L_strpbrk62
  L_strrchr63
  L_strrchr64
  L_strrchr65
  L_strstr66
  L_strstr67
  L_strstr68
  L_strstr69
  L_strstr70
  L__memmove71
  L__strcmp72
  L__strncat73
  L__strspn74
  L__strcspn75
  L__strncmp76
  L__strstr77
  _memchr
  _memcmp
  L__memcmp78
  _memcpy
  _memmove
  _memset
  _strcat
  _strchr
  _strcmp
  _strcpy
  _strlen
  _strncat
  L__strncat79
  _strncpy
  _strspn
  _strcspn
  _strncmp
  _strpbrk
  _strrchr
  _strstr
  L__strstr80
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
