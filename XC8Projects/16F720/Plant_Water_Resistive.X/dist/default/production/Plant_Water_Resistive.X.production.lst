

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Mar 18 20:37:08 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F720
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	bitnvBANK0,global,bit,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  008C                     	;# 
    53  008E                     	;# 
    54  008F                     	;# 
    55  0090                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0095                     	;# 
    62  0096                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009D                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  0115                     	;# 
    72  0116                     	;# 
    73  0185                     	;# 
    74  0186                     	;# 
    75  0187                     	;# 
    76  018C                     	;# 
    77  018D                     	;# 
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  008C                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009D                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0185                     	;# 
   132  0186                     	;# 
   133  0187                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  008C                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009D                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  0115                     	;# 
   188  0116                     	;# 
   189  0185                     	;# 
   190  0186                     	;# 
   191  0187                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  000E                     	;# 
   206  000E                     	;# 
   207  000F                     	;# 
   208  0010                     	;# 
   209  0011                     	;# 
   210  0012                     	;# 
   211  0013                     	;# 
   212  0014                     	;# 
   213  0015                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  0081                     	;# 
   223  0085                     	;# 
   224  0086                     	;# 
   225  0087                     	;# 
   226  008C                     	;# 
   227  008E                     	;# 
   228  008F                     	;# 
   229  0090                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009D                     	;# 
   240  009F                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0115                     	;# 
   246  0116                     	;# 
   247  0185                     	;# 
   248  0186                     	;# 
   249  0187                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252                           
   253                           	psect	idataBANK0
   254  0321                     __pidataBANK0:	
   255                           
   256                           ;initializer for _hl
   257  0321  3408               	retlw	8
   258                           
   259                           	psect	bitnvBANK0
   260  01B0                     __pbitnvBANK0:	
   261  01B0                     main@Toggle:	
   262  01B0                     	ds	1
   263  001F                     _ADCON0	set	31
   264  001E                     _ADRES	set	30
   265  0005                     _PORTA	set	5
   266  0006                     _PORTB	set	6
   267  0007                     _PORTC	set	7
   268  0001                     _TMR0	set	1
   269  00F8                     _ADON	set	248
   270  00F9                     _GO_nDONE	set	249
   271  002D                     _RA5	set	45
   272  0036                     _RB6	set	54
   273  0037                     _RB7	set	55
   274  003A                     _RC2	set	58
   275  003C                     _RC4	set	60
   276  003D                     _RC5	set	61
   277  005A                     _TMR0IF	set	90
   278  009F                     _ADCON1	set	159
   279  009D                     _FVRCON	set	157
   280  0091                     _OSCTUNE	set	145
   281  0085                     _TRISA	set	133
   282  0086                     _TRISB	set	134
   283  0087                     _TRISC	set	135
   284  0484                     _IRCF0	set	1156
   285  0485                     _IRCF1	set	1157
   286  0408                     _PS0	set	1032
   287  0409                     _PS1	set	1033
   288  040A                     _PS2	set	1034
   289  040B                     _PSA	set	1035
   290  040D                     _T0CS	set	1037
   291  040C                     _T0SE	set	1036
   292  0185                     _ANSELA	set	389
   293  0186                     _ANSELB	set	390
   294  0187                     _ANSELC	set	391
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  07F7                     start_initialization:	
   300  07F7                     __initialization:	
   301                           
   302                           ; Clear objects allocated to BANK0
   303  07F7  01B1               	clrf	__pbssBANK0& (0+127)
   304  07F8  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   305  07F9  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   306  07FA  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   307  07FB  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   308                           
   309                           ; Initialize objects allocated to BANK0
   310  07FC  2321               	fcall	__pidataBANK0	;fetch initializer
   311  07FD  00B7               	movwf	__pdataBANK0& (0+127)
   312  07FE                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  07FE                     __end_of__initialization:	
   316  07FE  0183               	clrf	3
   317  07FF  2BC6               	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssBANK0
   320  0031                     __pbssBANK0:	
   321  0031                     _hh:	
   322  0031                     	ds	1
   323  0032                     _mh:	
   324  0032                     	ds	1
   325  0033                     _ml:	
   326  0033                     	ds	1
   327  0034                     _sh:	
   328  0034                     	ds	1
   329  0035                     _sl:	
   330  0035                     	ds	1
   331                           
   332                           	psect	dataBANK0
   333  0037                     __pdataBANK0:	
   334  0037                     _hl:	
   335  0037                     	ds	1
   336                           
   337                           	psect	cstackCOMMON
   338  0070                     __pcstackCOMMON:	
   339  0070                     ?_MoistureCheck:	
   340  0070                     ?_ConfigureOscillator:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ??_ConfigureOscillator:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_Init:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ??_Init:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_ADCInit:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ??_ADCInit:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ??_ADCRead:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_ADCRead:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_Median:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_main:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?___wmul:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  0070                     Median@c:	
   374                           ; 2 bytes @ 0x0
   375                           
   376  0070                     ___wmul@multiplier:	
   377                           ; 1 bytes @ 0x0
   378                           
   379                           
   380                           ; 2 bytes @ 0x0
   381  0070                     	ds	1
   382  0071                     ADCRead@ch:	
   383  0071                     Median@e:	
   384                           ; 1 bytes @ 0x1
   385                           
   386                           
   387                           ; 1 bytes @ 0x1
   388  0071                     	ds	1
   389  0072                     ??_Median:	
   390  0072                     ___wmul@multiplicand:	
   391                           ; 0 bytes @ 0x2
   392                           
   393                           
   394                           ; 2 bytes @ 0x2
   395  0072                     	ds	1
   396  0073                     Median@f:	
   397                           
   398                           ; 1 bytes @ 0x3
   399  0073                     	ds	1
   400  0074                     ??___wmul:	
   401  0074                     Median@a:	
   402                           ; 0 bytes @ 0x4
   403                           
   404  0074                     ___wmul@product:	
   405                           ; 1 bytes @ 0x4
   406                           
   407                           
   408                           ; 2 bytes @ 0x4
   409  0074                     	ds	1
   410  0075                     Median@b:	
   411                           
   412                           ; 1 bytes @ 0x5
   413  0075                     	ds	1
   414  0076                     Median@d:	
   415                           
   416                           ; 1 bytes @ 0x6
   417  0076                     	ds	1
   418  0077                     ??_MoistureCheck:	
   419                           
   420                           ; 0 bytes @ 0x7
   421  0077                     	ds	4
   422  007B                     main@bres:	
   423                           
   424                           ; 2 bytes @ 0xB
   425  007B                     	ds	2
   426                           
   427                           	psect	cstackBANK0
   428  0020                     __pcstackBANK0:	
   429  0020                     MoistureCheck@a:	
   430                           
   431                           ; 1 bytes @ 0x0
   432  0020                     	ds	1
   433  0021                     MoistureCheck@c:	
   434                           
   435                           ; 1 bytes @ 0x1
   436  0021                     	ds	1
   437  0022                     MoistureCheck@e:	
   438                           
   439                           ; 1 bytes @ 0x2
   440  0022                     	ds	1
   441  0023                     MoistureCheck@g:	
   442                           
   443                           ; 1 bytes @ 0x3
   444  0023                     	ds	1
   445  0024                     MoistureCheck@i:	
   446                           
   447                           ; 1 bytes @ 0x4
   448  0024                     	ds	1
   449  0025                     MoistureCheck@k:	
   450                           
   451                           ; 1 bytes @ 0x5
   452  0025                     	ds	1
   453  0026                     MoistureCheck@m:	
   454                           
   455                           ; 1 bytes @ 0x6
   456  0026                     	ds	1
   457  0027                     MoistureCheck@o:	
   458                           
   459                           ; 1 bytes @ 0x7
   460  0027                     	ds	1
   461  0028                     MoistureCheck@q:	
   462                           
   463                           ; 1 bytes @ 0x8
   464  0028                     	ds	1
   465  0029                     MoistureCheck@f:	
   466                           
   467                           ; 1 bytes @ 0x9
   468  0029                     	ds	1
   469  002A                     MoistureCheck@l:	
   470                           
   471                           ; 1 bytes @ 0xA
   472  002A                     	ds	1
   473  002B                     MoistureCheck@r:	
   474                           
   475                           ; 1 bytes @ 0xB
   476  002B                     	ds	1
   477  002C                     MoistureCheck@t:	
   478                           
   479                           ; 1 bytes @ 0xC
   480  002C                     	ds	1
   481  002D                     ??_main:	
   482                           
   483                           ; 0 bytes @ 0xD
   484  002D                     	ds	4
   485                           
   486                           	psect	maintext
   487  03C6                     __pmaintext:	
   488 ;;
   489 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   490 ;;
   491 ;; *************** function _main *****************
   492 ;; Defined at:
   493 ;;		line 110 in file "main.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  bres            2   11[COMMON] unsigned int 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  2  116[COMMON] int 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 17F/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1
   507 ;;      Params:         0       0       0
   508 ;;      Locals:         2       0       0
   509 ;;      Temps:          0       4       0
   510 ;;      Totals:         2       4       0
   511 ;;Total ram usage:        6 bytes
   512 ;; Hardware stack levels required when called:    2
   513 ;; This function calls:
   514 ;;		_ConfigureOscillator
   515 ;;		_Init
   516 ;;		_MoistureCheck
   517 ;;		___wmul
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _main
   525  03C6                     _main:	
   526                           
   527                           ;main.c: 112: unsigned int bres = 0;
   528                           
   529                           ;incstack = 0
   530                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   531  03C6  01FB               	clrf	main@bres
   532  03C7  01FC               	clrf	main@bres+1
   533                           
   534                           ;main.c: 113: static signed bit Toggle;
   535                           ;main.c: 115: Toggle = 1;
   536  03C8  1283               	bcf	3,5	;RP0=0, select bank0
   537  03C9  1303               	bcf	3,6	;RP1=0, select bank0
   538  03CA  1436               	bsf	main@Toggle/(0+8),main@Toggle& (0+7)
   539                           
   540                           ;main.c: 117: ConfigureOscillator();
   541  03CB  2327               	fcall	_ConfigureOscillator
   542                           
   543                           ;main.c: 119: Init();
   544  03CC  2399               	fcall	_Init
   545  03CD                     l1216:	
   546                           ;main.c: 121: while (1)
   547                           
   548                           
   549                           ;main.c: 122: {
   550                           ;main.c: 124: if (TMR0IF)
   551  03CD  1D0B               	btfss	11,2	;volatile
   552  03CE  2BD6               	goto	l120
   553                           
   554                           ;main.c: 125: {
   555                           ;main.c: 126: bres += 256;
   556  03CF  3000               	movlw	0
   557  03D0  07FB               	addwf	main@bres,f
   558  03D1  1803               	skipnc
   559  03D2  0AFC               	incf	main@bres+1,f
   560  03D3  3001               	movlw	1
   561  03D4  07FC               	addwf	main@bres+1,f
   562                           
   563                           ;main.c: 127: TMR0IF = 0;
   564  03D5  110B               	bcf	11,2	;volatile
   565  03D6                     l120:	
   566                           
   567                           ;main.c: 128: }
   568                           ;main.c: 131: if(bres >= 1953)
   569  03D6  3007               	movlw	7
   570  03D7  027C               	subwf	main@bres+1,w
   571  03D8  30A1               	movlw	161
   572  03D9  1903               	skipnz
   573  03DA  027B               	subwf	main@bres,w
   574  03DB  1C03               	skipc
   575  03DC  2BEB               	goto	l1228
   576                           
   577                           ;main.c: 132: {
   578                           ;main.c: 133: bres -= 1953;
   579  03DD  30A1               	movlw	161
   580  03DE  02FB               	subwf	main@bres,f
   581  03DF  3007               	movlw	7
   582  03E0  1C03               	skipc
   583  03E1  03FC               	decf	main@bres+1,f
   584  03E2  02FC               	subwf	main@bres+1,f
   585                           
   586                           ;main.c: 134: ++sl;
   587  03E3  3001               	movlw	1
   588  03E4  1283               	bcf	3,5	;RP0=0, select bank0
   589  03E5  1303               	bcf	3,6	;RP1=0, select bank0
   590  03E6  00AD               	movwf	??_main
   591  03E7  082D               	movf	??_main,w
   592  03E8  07B5               	addwf	_sl,f
   593                           
   594                           ;main.c: 135: Toggle = Toggle - 1;
   595  03E9  3001               	movlw	(0+1) shl (main@Toggle& (0+7))
   596  03EA  06B6               	xorwf	main@Toggle/(0+8),f
   597  03EB                     l1228:	
   598                           
   599                           ;main.c: 136: }
   600                           ;main.c: 139: if(sl>9)
   601  03EB  300A               	movlw	10
   602  03EC  1283               	bcf	3,5	;RP0=0, select bank0
   603  03ED  1303               	bcf	3,6	;RP1=0, select bank0
   604  03EE  0235               	subwf	_sl,w
   605  03EF  1C03               	skipc
   606  03F0  2C03               	goto	l1238
   607                           
   608                           ;main.c: 140: {
   609                           ;main.c: 141: sl = sl - 10;
   610  03F1  0835               	movf	_sl,w
   611  03F2  3EF6               	addlw	246
   612  03F3  00AD               	movwf	??_main
   613  03F4  082D               	movf	??_main,w
   614  03F5  00B5               	movwf	_sl
   615                           
   616                           ;main.c: 142: ++sh;
   617  03F6  3001               	movlw	1
   618  03F7  00AD               	movwf	??_main
   619  03F8  082D               	movf	??_main,w
   620  03F9  07B4               	addwf	_sh,f
   621                           
   622                           ;main.c: 144: if(sh>5)
   623  03FA  3006               	movlw	6
   624  03FB  0234               	subwf	_sh,w
   625  03FC  1C03               	skipc
   626  03FD  2C03               	goto	l1238
   627                           
   628                           ;main.c: 145: {
   629                           ;main.c: 146: sh=0;
   630  03FE  01B4               	clrf	_sh
   631                           
   632                           ;main.c: 147: ++ml;
   633  03FF  3001               	movlw	1
   634  0400  00AD               	movwf	??_main
   635  0401  082D               	movf	??_main,w
   636  0402  07B3               	addwf	_ml,f
   637  0403                     l1238:	
   638                           
   639                           ;main.c: 148: }
   640                           ;main.c: 149: }
   641                           ;main.c: 151: if(ml>9)
   642  0403  300A               	movlw	10
   643  0404  0233               	subwf	_ml,w
   644  0405  1C03               	skipc
   645  0406  2C0C               	goto	l1244
   646                           
   647                           ;main.c: 152: {
   648                           ;main.c: 153: ml = 0;
   649  0407  01B3               	clrf	_ml
   650                           
   651                           ;main.c: 154: mh++;
   652  0408  3001               	movlw	1
   653  0409  00AD               	movwf	??_main
   654  040A  082D               	movf	??_main,w
   655  040B  07B2               	addwf	_mh,f
   656  040C                     l1244:	
   657                           
   658                           ;main.c: 155: }
   659                           ;main.c: 157: if(mh>5)
   660  040C  3006               	movlw	6
   661  040D  0232               	subwf	_mh,w
   662  040E  1C03               	skipc
   663  040F  2C15               	goto	l1250
   664                           
   665                           ;main.c: 158: {
   666                           ;main.c: 159: mh = 0;
   667  0410  01B2               	clrf	_mh
   668                           
   669                           ;main.c: 160: ++hl;
   670  0411  3001               	movlw	1
   671  0412  00AD               	movwf	??_main
   672  0413  082D               	movf	??_main,w
   673  0414  07B7               	addwf	_hl,f
   674  0415                     l1250:	
   675                           
   676                           ;main.c: 161: }
   677                           ;main.c: 163: if(hl>9)
   678  0415  300A               	movlw	10
   679  0416  0237               	subwf	_hl,w
   680  0417  1C03               	skipc
   681  0418  2C1E               	goto	l1256
   682                           
   683                           ;main.c: 164: {
   684                           ;main.c: 165: hl = 0;
   685  0419  01B7               	clrf	_hl
   686                           
   687                           ;main.c: 166: ++hh;
   688  041A  3001               	movlw	1
   689  041B  00AD               	movwf	??_main
   690  041C  082D               	movf	??_main,w
   691  041D  07B1               	addwf	_hh,f
   692  041E                     l1256:	
   693                           
   694                           ;main.c: 167: }
   695                           ;main.c: 169: if(hh >=2 && hl>3)
   696  041E  3002               	movlw	2
   697  041F  0231               	subwf	_hh,w
   698  0420  1C03               	skipc
   699  0421  2C28               	goto	l1262
   700  0422  3004               	movlw	4
   701  0423  0237               	subwf	_hl,w
   702  0424  1C03               	skipc
   703  0425  2C28               	goto	l1262
   704                           
   705                           ;main.c: 170: {
   706                           ;main.c: 171: hh = 0;
   707  0426  01B1               	clrf	_hh
   708                           
   709                           ;main.c: 172: hl = 0;
   710  0427  01B7               	clrf	_hl
   711  0428                     l1262:	
   712                           
   713                           ;main.c: 173: }
   714                           ;main.c: 175: if(Toggle != 1)
   715  0428  1836               	btfsc	main@Toggle/(0+8),main@Toggle& (0+7)
   716  0429  2C2C               	goto	l128
   717                           
   718                           ;main.c: 176: {
   719                           ;main.c: 177: RC5 = 0;
   720  042A  1287               	bcf	7,5	;volatile
   721                           
   722                           ;main.c: 178: }
   723  042B  2C2D               	goto	l1266
   724  042C                     l128:	
   725                           
   726                           ;main.c: 179: else
   727                           ;main.c: 180: {
   728                           ;main.c: 181: RC5 = 1;
   729  042C  1687               	bsf	7,5	;volatile
   730  042D                     l1266:	
   731                           
   732                           ;main.c: 182: }
   733                           ;main.c: 188: if(hl + hh * 10 >= 5 && hl + hh *10 <= 17)
   734  042D  0831               	movf	_hh,w
   735  042E  00AD               	movwf	??_main
   736  042F  01AE               	clrf	??_main+1
   737  0430  082D               	movf	??_main,w
   738  0431  00F0               	movwf	___wmul@multiplier
   739  0432  082E               	movf	??_main+1,w
   740  0433  00F1               	movwf	___wmul@multiplier+1
   741  0434  300A               	movlw	10
   742  0435  00F2               	movwf	___wmul@multiplicand
   743  0436  3000               	movlw	0
   744  0437  00F3               	movwf	___wmul@multiplicand+1
   745  0438  2376               	fcall	___wmul
   746  0439  1283               	bcf	3,5	;RP0=0, select bank0
   747  043A  1303               	bcf	3,6	;RP1=0, select bank0
   748  043B  0837               	movf	_hl,w
   749  043C  0770               	addwf	?___wmul,w
   750  043D  00AF               	movwf	??_main+2
   751  043E  0871               	movf	?___wmul+1,w
   752  043F  1803               	skipnc
   753  0440  0A71               	incf	?___wmul+1,w
   754  0441  00B0               	movwf	??_main+3
   755  0442  0830               	movf	??_main+3,w
   756  0443  3A80               	xorlw	128
   757  0444  00FF               	movwf	127
   758  0445  3080               	movlw	128
   759  0446  027F               	subwf	127,w
   760  0447  1D03               	skipz
   761  0448  2C4B               	goto	u1585
   762  0449  3005               	movlw	5
   763  044A  022F               	subwf	??_main+2,w
   764  044B                     u1585:	
   765  044B  1C03               	skipc
   766  044C  2BCD               	goto	l1216
   767  044D  1283               	bcf	3,5	;RP0=0, select bank0
   768  044E  1303               	bcf	3,6	;RP1=0, select bank0
   769  044F  0831               	movf	_hh,w
   770  0450  00AD               	movwf	??_main
   771  0451  01AE               	clrf	??_main+1
   772  0452  082D               	movf	??_main,w
   773  0453  00F0               	movwf	___wmul@multiplier
   774  0454  082E               	movf	??_main+1,w
   775  0455  00F1               	movwf	___wmul@multiplier+1
   776  0456  300A               	movlw	10
   777  0457  00F2               	movwf	___wmul@multiplicand
   778  0458  3000               	movlw	0
   779  0459  00F3               	movwf	___wmul@multiplicand+1
   780  045A  2376               	fcall	___wmul
   781  045B  1283               	bcf	3,5	;RP0=0, select bank0
   782  045C  1303               	bcf	3,6	;RP1=0, select bank0
   783  045D  0837               	movf	_hl,w
   784  045E  0770               	addwf	?___wmul,w
   785  045F  00AF               	movwf	??_main+2
   786  0460  0871               	movf	?___wmul+1,w
   787  0461  1803               	skipnc
   788  0462  0A71               	incf	?___wmul+1,w
   789  0463  00B0               	movwf	??_main+3
   790  0464  0830               	movf	??_main+3,w
   791  0465  3A80               	xorlw	128
   792  0466  00FF               	movwf	127
   793  0467  3080               	movlw	128
   794  0468  027F               	subwf	127,w
   795  0469  1D03               	skipz
   796  046A  2C6D               	goto	u1595
   797  046B  3012               	movlw	18
   798  046C  022F               	subwf	??_main+2,w
   799  046D                     u1595:	
   800  046D  1803               	skipnc
   801  046E  2BCD               	goto	l1216
   802                           
   803                           ;main.c: 189: {
   804                           ;main.c: 190: MoistureCheck();
   805  046F  2471               	fcall	_MoistureCheck
   806  0470  2BCD               	goto	l1216
   807  0471                     __end_of_main:	
   808                           
   809                           	psect	text1
   810  0471                     __ptext1:	
   811 ;; *************** function _MoistureCheck *****************
   812 ;; Defined at:
   813 ;;		line 199 in file "main.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  r               1   11[BANK0 ] unsigned char 
   818 ;;  l               1   10[BANK0 ] unsigned char 
   819 ;;  f               1    9[BANK0 ] unsigned char 
   820 ;;  t               1   12[BANK0 ] unsigned char 
   821 ;;  q               1    8[BANK0 ] unsigned char 
   822 ;;  o               1    7[BANK0 ] unsigned char 
   823 ;;  m               1    6[BANK0 ] unsigned char 
   824 ;;  k               1    5[BANK0 ] unsigned char 
   825 ;;  i               1    4[BANK0 ] unsigned char 
   826 ;;  g               1    3[BANK0 ] unsigned char 
   827 ;;  e               1    2[BANK0 ] unsigned char 
   828 ;;  c               1    1[BANK0 ] unsigned char 
   829 ;;  a               1    0[BANK0 ] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;		None               void
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1
   839 ;;      Params:         0       0       0
   840 ;;      Locals:         0      13       0
   841 ;;      Temps:          4       0       0
   842 ;;      Totals:         4      13       0
   843 ;;Total ram usage:       17 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    1
   846 ;; This function calls:
   847 ;;		_ADCInit
   848 ;;		_ADCRead
   849 ;;		_Median
   850 ;;		___wmul
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _MoistureCheck
   858  0471                     _MoistureCheck:	
   859                           
   860                           ;main.c: 211: ADCInit();
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _MoistureCheck: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   864  0471  2322               	fcall	_ADCInit
   865                           
   866                           ;main.c: 217: unsigned char a, c, e, g, i, k, m, o, q, t;
   867                           ;main.c: 223: if(mh * 10 + ml >= 0 && mh * 10 + ml < 1)
   868  0472  1283               	bcf	3,5	;RP0=0, select bank0
   869  0473  1303               	bcf	3,6	;RP1=0, select bank0
   870  0474  0832               	movf	_mh,w
   871  0475  00F7               	movwf	??_MoistureCheck
   872  0476  01F8               	clrf	??_MoistureCheck+1
   873  0477  0877               	movf	??_MoistureCheck,w
   874  0478  00F0               	movwf	___wmul@multiplier
   875  0479  0878               	movf	??_MoistureCheck+1,w
   876  047A  00F1               	movwf	___wmul@multiplier+1
   877  047B  300A               	movlw	10
   878  047C  00F2               	movwf	___wmul@multiplicand
   879  047D  3000               	movlw	0
   880  047E  00F3               	movwf	___wmul@multiplicand+1
   881  047F  2376               	fcall	___wmul
   882  0480  1283               	bcf	3,5	;RP0=0, select bank0
   883  0481  1303               	bcf	3,6	;RP1=0, select bank0
   884  0482  0833               	movf	_ml,w
   885  0483  0770               	addwf	?___wmul,w
   886  0484  00F9               	movwf	??_MoistureCheck+2
   887  0485  3000               	movlw	0
   888  0486  1803               	skipnc
   889  0487  3001               	movlw	1
   890  0488  0771               	addwf	?___wmul+1,w
   891  0489  00FA               	movwf	??_MoistureCheck+3
   892  048A  1BFA               	btfsc	??_MoistureCheck+3,7
   893  048B  2CB1               	goto	l1098
   894  048C  0832               	movf	_mh,w
   895  048D  00F7               	movwf	??_MoistureCheck
   896  048E  01F8               	clrf	??_MoistureCheck+1
   897  048F  0877               	movf	??_MoistureCheck,w
   898  0490  00F0               	movwf	___wmul@multiplier
   899  0491  0878               	movf	??_MoistureCheck+1,w
   900  0492  00F1               	movwf	___wmul@multiplier+1
   901  0493  300A               	movlw	10
   902  0494  00F2               	movwf	___wmul@multiplicand
   903  0495  3000               	movlw	0
   904  0496  00F3               	movwf	___wmul@multiplicand+1
   905  0497  2376               	fcall	___wmul
   906  0498  1283               	bcf	3,5	;RP0=0, select bank0
   907  0499  1303               	bcf	3,6	;RP1=0, select bank0
   908  049A  0833               	movf	_ml,w
   909  049B  0770               	addwf	?___wmul,w
   910  049C  00F9               	movwf	??_MoistureCheck+2
   911  049D  3000               	movlw	0
   912  049E  1803               	skipnc
   913  049F  3001               	movlw	1
   914  04A0  0771               	addwf	?___wmul+1,w
   915  04A1  00FA               	movwf	??_MoistureCheck+3
   916  04A2  087A               	movf	??_MoistureCheck+3,w
   917  04A3  3A80               	xorlw	128
   918  04A4  00FF               	movwf	127
   919  04A5  3080               	movlw	128
   920  04A6  027F               	subwf	127,w
   921  04A7  1D03               	skipz
   922  04A8  2CAB               	goto	u1175
   923  04A9  3001               	movlw	1
   924  04AA  0279               	subwf	??_MoistureCheck+2,w
   925  04AB                     u1175:	
   926  04AB  1803               	skipnc
   927  04AC  2CB1               	goto	l1098
   928                           
   929                           ;main.c: 224: {
   930                           ;main.c: 225: RA5 = 1;
   931  04AD  1283               	bcf	3,5	;RP0=0, select bank0
   932  04AE  1303               	bcf	3,6	;RP1=0, select bank0
   933  04AF  1685               	bsf	5,5	;volatile
   934                           
   935                           ;main.c: 226: RB7 = 0;
   936  04B0  1386               	bcf	6,7	;volatile
   937  04B1                     l1098:	
   938                           
   939                           ;main.c: 227: }
   940                           ;main.c: 233: if(mh * 10 + ml >= 1 && mh * 10 + ml < 2)
   941  04B1  1283               	bcf	3,5	;RP0=0, select bank0
   942  04B2  1303               	bcf	3,6	;RP1=0, select bank0
   943  04B3  0832               	movf	_mh,w
   944  04B4  00F7               	movwf	??_MoistureCheck
   945  04B5  01F8               	clrf	??_MoistureCheck+1
   946  04B6  0877               	movf	??_MoistureCheck,w
   947  04B7  00F0               	movwf	___wmul@multiplier
   948  04B8  0878               	movf	??_MoistureCheck+1,w
   949  04B9  00F1               	movwf	___wmul@multiplier+1
   950  04BA  300A               	movlw	10
   951  04BB  00F2               	movwf	___wmul@multiplicand
   952  04BC  3000               	movlw	0
   953  04BD  00F3               	movwf	___wmul@multiplicand+1
   954  04BE  2376               	fcall	___wmul
   955  04BF  1283               	bcf	3,5	;RP0=0, select bank0
   956  04C0  1303               	bcf	3,6	;RP1=0, select bank0
   957  04C1  0833               	movf	_ml,w
   958  04C2  0770               	addwf	?___wmul,w
   959  04C3  00F9               	movwf	??_MoistureCheck+2
   960  04C4  3000               	movlw	0
   961  04C5  1803               	skipnc
   962  04C6  3001               	movlw	1
   963  04C7  0771               	addwf	?___wmul+1,w
   964  04C8  00FA               	movwf	??_MoistureCheck+3
   965  04C9  087A               	movf	??_MoistureCheck+3,w
   966  04CA  3A80               	xorlw	128
   967  04CB  00FF               	movwf	127
   968  04CC  3080               	movlw	128
   969  04CD  027F               	subwf	127,w
   970  04CE  1D03               	skipz
   971  04CF  2CD2               	goto	u1185
   972  04D0  3001               	movlw	1
   973  04D1  0279               	subwf	??_MoistureCheck+2,w
   974  04D2                     u1185:	
   975  04D2  1C03               	skipc
   976  04D3  2D61               	goto	l1142
   977  04D4  1283               	bcf	3,5	;RP0=0, select bank0
   978  04D5  1303               	bcf	3,6	;RP1=0, select bank0
   979  04D6  0832               	movf	_mh,w
   980  04D7  00F7               	movwf	??_MoistureCheck
   981  04D8  01F8               	clrf	??_MoistureCheck+1
   982  04D9  0877               	movf	??_MoistureCheck,w
   983  04DA  00F0               	movwf	___wmul@multiplier
   984  04DB  0878               	movf	??_MoistureCheck+1,w
   985  04DC  00F1               	movwf	___wmul@multiplier+1
   986  04DD  300A               	movlw	10
   987  04DE  00F2               	movwf	___wmul@multiplicand
   988  04DF  3000               	movlw	0
   989  04E0  00F3               	movwf	___wmul@multiplicand+1
   990  04E1  2376               	fcall	___wmul
   991  04E2  1283               	bcf	3,5	;RP0=0, select bank0
   992  04E3  1303               	bcf	3,6	;RP1=0, select bank0
   993  04E4  0833               	movf	_ml,w
   994  04E5  0770               	addwf	?___wmul,w
   995  04E6  00F9               	movwf	??_MoistureCheck+2
   996  04E7  3000               	movlw	0
   997  04E8  1803               	skipnc
   998  04E9  3001               	movlw	1
   999  04EA  0771               	addwf	?___wmul+1,w
  1000  04EB  00FA               	movwf	??_MoistureCheck+3
  1001  04EC  087A               	movf	??_MoistureCheck+3,w
  1002  04ED  3A80               	xorlw	128
  1003  04EE  00FF               	movwf	127
  1004  04EF  3080               	movlw	128
  1005  04F0  027F               	subwf	127,w
  1006  04F1  1D03               	skipz
  1007  04F2  2CF5               	goto	u1195
  1008  04F3  3002               	movlw	2
  1009  04F4  0279               	subwf	??_MoistureCheck+2,w
  1010  04F5                     u1195:	
  1011  04F5  1803               	skipnc
  1012  04F6  2D61               	goto	l1142
  1013                           
  1014                           ;main.c: 234: {
  1015                           ;main.c: 235: ++t;
  1016  04F7  3001               	movlw	1
  1017  04F8  00F7               	movwf	??_MoistureCheck
  1018  04F9  0877               	movf	??_MoistureCheck,w
  1019  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1020  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1021  04FC  07AC               	addwf	MoistureCheck@t,f
  1022                           
  1023                           ;main.c: 237: if(t >= 9){
  1024  04FD  3009               	movlw	9
  1025  04FE  022C               	subwf	MoistureCheck@t,w
  1026  04FF  1C03               	skipc
  1027  0500  2D09               	goto	l1110
  1028                           
  1029                           ;main.c: 238: a = ADCRead(2);
  1030  0501  3002               	movlw	2
  1031  0502  2338               	fcall	_ADCRead
  1032  0503  00F7               	movwf	??_MoistureCheck
  1033  0504  0877               	movf	??_MoistureCheck,w
  1034  0505  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0506  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0507  00A0               	movwf	MoistureCheck@a
  1037                           
  1038                           ;main.c: 239: t = 0;
  1039  0508  01AC               	clrf	MoistureCheck@t
  1040  0509                     l1110:	
  1041                           
  1042                           ;main.c: 240: }
  1043                           ;main.c: 242: if(t == 8){
  1044  0509  082C               	movf	MoistureCheck@t,w
  1045  050A  3A08               	xorlw	8
  1046  050B  1D03               	skipz
  1047  050C  2D14               	goto	l1114
  1048                           
  1049                           ;main.c: 243: c = ADCRead(3);
  1050  050D  3003               	movlw	3
  1051  050E  2338               	fcall	_ADCRead
  1052  050F  00F7               	movwf	??_MoistureCheck
  1053  0510  0877               	movf	??_MoistureCheck,w
  1054  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0513  00A1               	movwf	MoistureCheck@c
  1057  0514                     l1114:	
  1058                           
  1059                           ;main.c: 244: }
  1060                           ;main.c: 246: if(t == 7){
  1061  0514  082C               	movf	MoistureCheck@t,w
  1062  0515  3A07               	xorlw	7
  1063  0516  1D03               	skipz
  1064  0517  2D1F               	goto	l1118
  1065                           
  1066                           ;main.c: 247: e = ADCRead(4);
  1067  0518  3004               	movlw	4
  1068  0519  2338               	fcall	_ADCRead
  1069  051A  00F7               	movwf	??_MoistureCheck
  1070  051B  0877               	movf	??_MoistureCheck,w
  1071  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1072  051D  1303               	bcf	3,6	;RP1=0, select bank0
  1073  051E  00A2               	movwf	MoistureCheck@e
  1074  051F                     l1118:	
  1075                           
  1076                           ;main.c: 248: }
  1077                           ;main.c: 250: if(t == 6){
  1078  051F  082C               	movf	MoistureCheck@t,w
  1079  0520  3A06               	xorlw	6
  1080  0521  1D03               	skipz
  1081  0522  2D2A               	goto	l1122
  1082                           
  1083                           ;main.c: 251: g = ADCRead(5);
  1084  0523  3005               	movlw	5
  1085  0524  2338               	fcall	_ADCRead
  1086  0525  00F7               	movwf	??_MoistureCheck
  1087  0526  0877               	movf	??_MoistureCheck,w
  1088  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0529  00A3               	movwf	MoistureCheck@g
  1091  052A                     l1122:	
  1092                           
  1093                           ;main.c: 252: }
  1094                           ;main.c: 254: if(t == 5){
  1095  052A  082C               	movf	MoistureCheck@t,w
  1096  052B  3A05               	xorlw	5
  1097  052C  1D03               	skipz
  1098  052D  2D35               	goto	l1126
  1099                           
  1100                           ;main.c: 255: i = ADCRead(7);
  1101  052E  3007               	movlw	7
  1102  052F  2338               	fcall	_ADCRead
  1103  0530  00F7               	movwf	??_MoistureCheck
  1104  0531  0877               	movf	??_MoistureCheck,w
  1105  0532  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0533  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0534  00A4               	movwf	MoistureCheck@i
  1108  0535                     l1126:	
  1109                           
  1110                           ;main.c: 256: }
  1111                           ;main.c: 258: if(t == 4){
  1112  0535  082C               	movf	MoistureCheck@t,w
  1113  0536  3A04               	xorlw	4
  1114  0537  1D03               	skipz
  1115  0538  2D40               	goto	l1130
  1116                           
  1117                           ;main.c: 259: k = ADCRead(8);
  1118  0539  3008               	movlw	8
  1119  053A  2338               	fcall	_ADCRead
  1120  053B  00F7               	movwf	??_MoistureCheck
  1121  053C  0877               	movf	??_MoistureCheck,w
  1122  053D  1283               	bcf	3,5	;RP0=0, select bank0
  1123  053E  1303               	bcf	3,6	;RP1=0, select bank0
  1124  053F  00A5               	movwf	MoistureCheck@k
  1125  0540                     l1130:	
  1126                           
  1127                           ;main.c: 260: }
  1128                           ;main.c: 262: if(t == 3){
  1129  0540  082C               	movf	MoistureCheck@t,w
  1130  0541  3A03               	xorlw	3
  1131  0542  1D03               	skipz
  1132  0543  2D4B               	goto	l1134
  1133                           
  1134                           ;main.c: 263: m = ADCRead(9);
  1135  0544  3009               	movlw	9
  1136  0545  2338               	fcall	_ADCRead
  1137  0546  00F7               	movwf	??_MoistureCheck
  1138  0547  0877               	movf	??_MoistureCheck,w
  1139  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1141  054A  00A6               	movwf	MoistureCheck@m
  1142  054B                     l1134:	
  1143                           
  1144                           ;main.c: 264: }
  1145                           ;main.c: 266: if(t == 2){
  1146  054B  082C               	movf	MoistureCheck@t,w
  1147  054C  3A02               	xorlw	2
  1148  054D  1D03               	skipz
  1149  054E  2D56               	goto	l1138
  1150                           
  1151                           ;main.c: 267: o = ADCRead(10);
  1152  054F  300A               	movlw	10
  1153  0550  2338               	fcall	_ADCRead
  1154  0551  00F7               	movwf	??_MoistureCheck
  1155  0552  0877               	movf	??_MoistureCheck,w
  1156  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0555  00A7               	movwf	MoistureCheck@o
  1159  0556                     l1138:	
  1160                           
  1161                           ;main.c: 268: }
  1162                           ;main.c: 270: if(t == 1){
  1163  0556  082C               	movf	MoistureCheck@t,w
  1164  0557  3A01               	xorlw	1
  1165  0558  1D03               	skipz
  1166  0559  2D61               	goto	l1142
  1167                           
  1168                           ;main.c: 271: q = ADCRead(11);
  1169  055A  300B               	movlw	11
  1170  055B  2338               	fcall	_ADCRead
  1171  055C  00F7               	movwf	??_MoistureCheck
  1172  055D  0877               	movf	??_MoistureCheck,w
  1173  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1174  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0560  00A8               	movwf	MoistureCheck@q
  1176  0561                     l1142:	
  1177                           
  1178                           ;main.c: 272: }
  1179                           ;main.c: 273: }
  1180                           ;main.c: 279: if(mh * 10 + ml >= 2 && mh * 10 + ml < 4)
  1181  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0563  0832               	movf	_mh,w
  1184  0564  00F7               	movwf	??_MoistureCheck
  1185  0565  01F8               	clrf	??_MoistureCheck+1
  1186  0566  0877               	movf	??_MoistureCheck,w
  1187  0567  00F0               	movwf	___wmul@multiplier
  1188  0568  0878               	movf	??_MoistureCheck+1,w
  1189  0569  00F1               	movwf	___wmul@multiplier+1
  1190  056A  300A               	movlw	10
  1191  056B  00F2               	movwf	___wmul@multiplicand
  1192  056C  3000               	movlw	0
  1193  056D  00F3               	movwf	___wmul@multiplicand+1
  1194  056E  2376               	fcall	___wmul
  1195  056F  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0570  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0571  0833               	movf	_ml,w
  1198  0572  0770               	addwf	?___wmul,w
  1199  0573  00F9               	movwf	??_MoistureCheck+2
  1200  0574  3000               	movlw	0
  1201  0575  1803               	skipnc
  1202  0576  3001               	movlw	1
  1203  0577  0771               	addwf	?___wmul+1,w
  1204  0578  00FA               	movwf	??_MoistureCheck+3
  1205  0579  087A               	movf	??_MoistureCheck+3,w
  1206  057A  3A80               	xorlw	128
  1207  057B  00FF               	movwf	127
  1208  057C  3080               	movlw	128
  1209  057D  027F               	subwf	127,w
  1210  057E  1D03               	skipz
  1211  057F  2D82               	goto	u1295
  1212  0580  3002               	movlw	2
  1213  0581  0279               	subwf	??_MoistureCheck+2,w
  1214  0582                     u1295:	
  1215  0582  1C03               	skipc
  1216  0583  2DAB               	goto	l1148
  1217  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1219  0586  0832               	movf	_mh,w
  1220  0587  00F7               	movwf	??_MoistureCheck
  1221  0588  01F8               	clrf	??_MoistureCheck+1
  1222  0589  0877               	movf	??_MoistureCheck,w
  1223  058A  00F0               	movwf	___wmul@multiplier
  1224  058B  0878               	movf	??_MoistureCheck+1,w
  1225  058C  00F1               	movwf	___wmul@multiplier+1
  1226  058D  300A               	movlw	10
  1227  058E  00F2               	movwf	___wmul@multiplicand
  1228  058F  3000               	movlw	0
  1229  0590  00F3               	movwf	___wmul@multiplicand+1
  1230  0591  2376               	fcall	___wmul
  1231  0592  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0593  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0594  0833               	movf	_ml,w
  1234  0595  0770               	addwf	?___wmul,w
  1235  0596  00F9               	movwf	??_MoistureCheck+2
  1236  0597  3000               	movlw	0
  1237  0598  1803               	skipnc
  1238  0599  3001               	movlw	1
  1239  059A  0771               	addwf	?___wmul+1,w
  1240  059B  00FA               	movwf	??_MoistureCheck+3
  1241  059C  087A               	movf	??_MoistureCheck+3,w
  1242  059D  3A80               	xorlw	128
  1243  059E  00FF               	movwf	127
  1244  059F  3080               	movlw	128
  1245  05A0  027F               	subwf	127,w
  1246  05A1  1D03               	skipz
  1247  05A2  2DA5               	goto	u1305
  1248  05A3  3004               	movlw	4
  1249  05A4  0279               	subwf	??_MoistureCheck+2,w
  1250  05A5                     u1305:	
  1251  05A5  1803               	skipnc
  1252  05A6  2DAB               	goto	l1148
  1253                           
  1254                           ;main.c: 280: {
  1255                           ;main.c: 281: RA5 = 0;
  1256  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1257  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1258  05A9  1285               	bcf	5,5	;volatile
  1259                           
  1260                           ;main.c: 282: RB7 = 1;
  1261  05AA  1786               	bsf	6,7	;volatile
  1262  05AB                     l1148:	
  1263                           
  1264                           ;main.c: 283: }
  1265                           ;main.c: 289: if(mh * 10 + ml >= 4 && mh * 10 + ml < 5)
  1266  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1267  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1268  05AD  0832               	movf	_mh,w
  1269  05AE  00F7               	movwf	??_MoistureCheck
  1270  05AF  01F8               	clrf	??_MoistureCheck+1
  1271  05B0  0877               	movf	??_MoistureCheck,w
  1272  05B1  00F0               	movwf	___wmul@multiplier
  1273  05B2  0878               	movf	??_MoistureCheck+1,w
  1274  05B3  00F1               	movwf	___wmul@multiplier+1
  1275  05B4  300A               	movlw	10
  1276  05B5  00F2               	movwf	___wmul@multiplicand
  1277  05B6  3000               	movlw	0
  1278  05B7  00F3               	movwf	___wmul@multiplicand+1
  1279  05B8  2376               	fcall	___wmul
  1280  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  1281  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  1282  05BB  0833               	movf	_ml,w
  1283  05BC  0770               	addwf	?___wmul,w
  1284  05BD  00F9               	movwf	??_MoistureCheck+2
  1285  05BE  3000               	movlw	0
  1286  05BF  1803               	skipnc
  1287  05C0  3001               	movlw	1
  1288  05C1  0771               	addwf	?___wmul+1,w
  1289  05C2  00FA               	movwf	??_MoistureCheck+3
  1290  05C3  087A               	movf	??_MoistureCheck+3,w
  1291  05C4  3A80               	xorlw	128
  1292  05C5  00FF               	movwf	127
  1293  05C6  3080               	movlw	128
  1294  05C7  027F               	subwf	127,w
  1295  05C8  1D03               	skipz
  1296  05C9  2DCC               	goto	u1315
  1297  05CA  3004               	movlw	4
  1298  05CB  0279               	subwf	??_MoistureCheck+2,w
  1299  05CC                     u1315:	
  1300  05CC  1C03               	skipc
  1301  05CD  2DF5               	goto	l1154
  1302  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1303  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1304  05D0  0832               	movf	_mh,w
  1305  05D1  00F7               	movwf	??_MoistureCheck
  1306  05D2  01F8               	clrf	??_MoistureCheck+1
  1307  05D3  0877               	movf	??_MoistureCheck,w
  1308  05D4  00F0               	movwf	___wmul@multiplier
  1309  05D5  0878               	movf	??_MoistureCheck+1,w
  1310  05D6  00F1               	movwf	___wmul@multiplier+1
  1311  05D7  300A               	movlw	10
  1312  05D8  00F2               	movwf	___wmul@multiplicand
  1313  05D9  3000               	movlw	0
  1314  05DA  00F3               	movwf	___wmul@multiplicand+1
  1315  05DB  2376               	fcall	___wmul
  1316  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1317  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1318  05DE  0833               	movf	_ml,w
  1319  05DF  0770               	addwf	?___wmul,w
  1320  05E0  00F9               	movwf	??_MoistureCheck+2
  1321  05E1  3000               	movlw	0
  1322  05E2  1803               	skipnc
  1323  05E3  3001               	movlw	1
  1324  05E4  0771               	addwf	?___wmul+1,w
  1325  05E5  00FA               	movwf	??_MoistureCheck+3
  1326  05E6  087A               	movf	??_MoistureCheck+3,w
  1327  05E7  3A80               	xorlw	128
  1328  05E8  00FF               	movwf	127
  1329  05E9  3080               	movlw	128
  1330  05EA  027F               	subwf	127,w
  1331  05EB  1D03               	skipz
  1332  05EC  2DEF               	goto	u1325
  1333  05ED  3005               	movlw	5
  1334  05EE  0279               	subwf	??_MoistureCheck+2,w
  1335  05EF                     u1325:	
  1336  05EF  1803               	skipnc
  1337  05F0  2DF5               	goto	l1154
  1338                           
  1339                           ;main.c: 290: {
  1340                           ;main.c: 291: RA5 = 0;
  1341  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1342  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1343  05F3  1285               	bcf	5,5	;volatile
  1344                           
  1345                           ;main.c: 292: RB7 = 0;
  1346  05F4  1386               	bcf	6,7	;volatile
  1347  05F5                     l1154:	
  1348                           
  1349                           ;main.c: 293: }
  1350                           ;main.c: 299: if(mh * 10 + ml >= 5 && mh * 10 + ml < 6)
  1351  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1352  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1353  05F7  0832               	movf	_mh,w
  1354  05F8  00F7               	movwf	??_MoistureCheck
  1355  05F9  01F8               	clrf	??_MoistureCheck+1
  1356  05FA  0877               	movf	??_MoistureCheck,w
  1357  05FB  00F0               	movwf	___wmul@multiplier
  1358  05FC  0878               	movf	??_MoistureCheck+1,w
  1359  05FD  00F1               	movwf	___wmul@multiplier+1
  1360  05FE  300A               	movlw	10
  1361  05FF  00F2               	movwf	___wmul@multiplicand
  1362  0600  3000               	movlw	0
  1363  0601  00F3               	movwf	___wmul@multiplicand+1
  1364  0602  2376               	fcall	___wmul
  1365  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0605  0833               	movf	_ml,w
  1368  0606  0770               	addwf	?___wmul,w
  1369  0607  00F9               	movwf	??_MoistureCheck+2
  1370  0608  3000               	movlw	0
  1371  0609  1803               	skipnc
  1372  060A  3001               	movlw	1
  1373  060B  0771               	addwf	?___wmul+1,w
  1374  060C  00FA               	movwf	??_MoistureCheck+3
  1375  060D  087A               	movf	??_MoistureCheck+3,w
  1376  060E  3A80               	xorlw	128
  1377  060F  00FF               	movwf	127
  1378  0610  3080               	movlw	128
  1379  0611  027F               	subwf	127,w
  1380  0612  1D03               	skipz
  1381  0613  2E16               	goto	u1335
  1382  0614  3005               	movlw	5
  1383  0615  0279               	subwf	??_MoistureCheck+2,w
  1384  0616                     u1335:	
  1385  0616  1C03               	skipc
  1386  0617  2E55               	goto	l1166
  1387  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1388  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1389  061A  0832               	movf	_mh,w
  1390  061B  00F7               	movwf	??_MoistureCheck
  1391  061C  01F8               	clrf	??_MoistureCheck+1
  1392  061D  0877               	movf	??_MoistureCheck,w
  1393  061E  00F0               	movwf	___wmul@multiplier
  1394  061F  0878               	movf	??_MoistureCheck+1,w
  1395  0620  00F1               	movwf	___wmul@multiplier+1
  1396  0621  300A               	movlw	10
  1397  0622  00F2               	movwf	___wmul@multiplicand
  1398  0623  3000               	movlw	0
  1399  0624  00F3               	movwf	___wmul@multiplicand+1
  1400  0625  2376               	fcall	___wmul
  1401  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0628  0833               	movf	_ml,w
  1404  0629  0770               	addwf	?___wmul,w
  1405  062A  00F9               	movwf	??_MoistureCheck+2
  1406  062B  3000               	movlw	0
  1407  062C  1803               	skipnc
  1408  062D  3001               	movlw	1
  1409  062E  0771               	addwf	?___wmul+1,w
  1410  062F  00FA               	movwf	??_MoistureCheck+3
  1411  0630  087A               	movf	??_MoistureCheck+3,w
  1412  0631  3A80               	xorlw	128
  1413  0632  00FF               	movwf	127
  1414  0633  3080               	movlw	128
  1415  0634  027F               	subwf	127,w
  1416  0635  1D03               	skipz
  1417  0636  2E39               	goto	u1345
  1418  0637  3006               	movlw	6
  1419  0638  0279               	subwf	??_MoistureCheck+2,w
  1420  0639                     u1345:	
  1421  0639  1803               	skipnc
  1422  063A  2E55               	goto	l1166
  1423                           
  1424                           ;main.c: 300: {
  1425                           ;main.c: 301: RA5 = 0;
  1426  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1427  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1428  063D  1285               	bcf	5,5	;volatile
  1429                           
  1430                           ;main.c: 302: RB7 = 0;
  1431  063E  1386               	bcf	6,7	;volatile
  1432                           
  1433                           ;main.c: 304: unsigned char f = Median(a, c, e);
  1434  063F  0821               	movf	MoistureCheck@c,w
  1435  0640  00F7               	movwf	??_MoistureCheck
  1436  0641  0877               	movf	??_MoistureCheck,w
  1437  0642  00F0               	movwf	Median@c
  1438  0643  0822               	movf	MoistureCheck@e,w
  1439  0644  00F8               	movwf	??_MoistureCheck+1
  1440  0645  0878               	movf	??_MoistureCheck+1,w
  1441  0646  00F1               	movwf	Median@e
  1442  0647  0820               	movf	MoistureCheck@a,w
  1443  0648  2355               	fcall	_Median
  1444  0649  00F9               	movwf	??_MoistureCheck+2
  1445  064A  0879               	movf	??_MoistureCheck+2,w
  1446  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1447  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1448  064D  00A9               	movwf	MoistureCheck@f
  1449                           
  1450                           ;main.c: 306: if(f < 127){
  1451  064E  307F               	movlw	127
  1452  064F  0229               	subwf	MoistureCheck@f,w
  1453  0650  1803               	skipnc
  1454  0651  2E54               	goto	l150
  1455                           
  1456                           ;main.c: 307: RC4 = 0;
  1457  0652  1207               	bcf	7,4	;volatile
  1458                           
  1459                           ;main.c: 308: }
  1460  0653  2E55               	goto	l1166
  1461  0654                     l150:	
  1462                           
  1463                           ;main.c: 309: else
  1464                           ;main.c: 310: {
  1465                           ;main.c: 311: RC4 = 1;
  1466  0654  1607               	bsf	7,4	;volatile
  1467  0655                     l1166:	
  1468                           
  1469                           ;main.c: 312: }
  1470                           ;main.c: 313: }
  1471                           ;main.c: 319: if(mh * 10 + ml >= 6 && mh * 10 + ml < 20)
  1472  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0656  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0657  0832               	movf	_mh,w
  1475  0658  00F7               	movwf	??_MoistureCheck
  1476  0659  01F8               	clrf	??_MoistureCheck+1
  1477  065A  0877               	movf	??_MoistureCheck,w
  1478  065B  00F0               	movwf	___wmul@multiplier
  1479  065C  0878               	movf	??_MoistureCheck+1,w
  1480  065D  00F1               	movwf	___wmul@multiplier+1
  1481  065E  300A               	movlw	10
  1482  065F  00F2               	movwf	___wmul@multiplicand
  1483  0660  3000               	movlw	0
  1484  0661  00F3               	movwf	___wmul@multiplicand+1
  1485  0662  2376               	fcall	___wmul
  1486  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0665  0833               	movf	_ml,w
  1489  0666  0770               	addwf	?___wmul,w
  1490  0667  00F9               	movwf	??_MoistureCheck+2
  1491  0668  3000               	movlw	0
  1492  0669  1803               	skipnc
  1493  066A  3001               	movlw	1
  1494  066B  0771               	addwf	?___wmul+1,w
  1495  066C  00FA               	movwf	??_MoistureCheck+3
  1496  066D  087A               	movf	??_MoistureCheck+3,w
  1497  066E  3A80               	xorlw	128
  1498  066F  00FF               	movwf	127
  1499  0670  3080               	movlw	128
  1500  0671  027F               	subwf	127,w
  1501  0672  1D03               	skipz
  1502  0673  2E76               	goto	u1365
  1503  0674  3006               	movlw	6
  1504  0675  0279               	subwf	??_MoistureCheck+2,w
  1505  0676                     u1365:	
  1506  0676  1C03               	skipc
  1507  0677  2EA0               	goto	l1172
  1508  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1510  067A  0832               	movf	_mh,w
  1511  067B  00F7               	movwf	??_MoistureCheck
  1512  067C  01F8               	clrf	??_MoistureCheck+1
  1513  067D  0877               	movf	??_MoistureCheck,w
  1514  067E  00F0               	movwf	___wmul@multiplier
  1515  067F  0878               	movf	??_MoistureCheck+1,w
  1516  0680  00F1               	movwf	___wmul@multiplier+1
  1517  0681  300A               	movlw	10
  1518  0682  00F2               	movwf	___wmul@multiplicand
  1519  0683  3000               	movlw	0
  1520  0684  00F3               	movwf	___wmul@multiplicand+1
  1521  0685  2376               	fcall	___wmul
  1522  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0688  0833               	movf	_ml,w
  1525  0689  0770               	addwf	?___wmul,w
  1526  068A  00F9               	movwf	??_MoistureCheck+2
  1527  068B  3000               	movlw	0
  1528  068C  1803               	skipnc
  1529  068D  3001               	movlw	1
  1530  068E  0771               	addwf	?___wmul+1,w
  1531  068F  00FA               	movwf	??_MoistureCheck+3
  1532  0690  087A               	movf	??_MoistureCheck+3,w
  1533  0691  3A80               	xorlw	128
  1534  0692  00FF               	movwf	127
  1535  0693  3080               	movlw	128
  1536  0694  027F               	subwf	127,w
  1537  0695  1D03               	skipz
  1538  0696  2E99               	goto	u1375
  1539  0697  3014               	movlw	20
  1540  0698  0279               	subwf	??_MoistureCheck+2,w
  1541  0699                     u1375:	
  1542  0699  1803               	skipnc
  1543  069A  2EA0               	goto	l1172
  1544                           
  1545                           ;main.c: 320: {
  1546                           ;main.c: 321: RA5 = 0;
  1547  069B  1283               	bcf	3,5	;RP0=0, select bank0
  1548  069C  1303               	bcf	3,6	;RP1=0, select bank0
  1549  069D  1285               	bcf	5,5	;volatile
  1550                           
  1551                           ;main.c: 322: RB7 = 0;
  1552  069E  1386               	bcf	6,7	;volatile
  1553                           
  1554                           ;main.c: 324: RC4 = 1;
  1555  069F  1607               	bsf	7,4	;volatile
  1556  06A0                     l1172:	
  1557                           
  1558                           ;main.c: 325: }
  1559                           ;main.c: 331: if(mh * 10 + ml >= 20 && mh * 10 + ml < 21)
  1560  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1561  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1562  06A2  0832               	movf	_mh,w
  1563  06A3  00F7               	movwf	??_MoistureCheck
  1564  06A4  01F8               	clrf	??_MoistureCheck+1
  1565  06A5  0877               	movf	??_MoistureCheck,w
  1566  06A6  00F0               	movwf	___wmul@multiplier
  1567  06A7  0878               	movf	??_MoistureCheck+1,w
  1568  06A8  00F1               	movwf	___wmul@multiplier+1
  1569  06A9  300A               	movlw	10
  1570  06AA  00F2               	movwf	___wmul@multiplicand
  1571  06AB  3000               	movlw	0
  1572  06AC  00F3               	movwf	___wmul@multiplicand+1
  1573  06AD  2376               	fcall	___wmul
  1574  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1575  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1576  06B0  0833               	movf	_ml,w
  1577  06B1  0770               	addwf	?___wmul,w
  1578  06B2  00F9               	movwf	??_MoistureCheck+2
  1579  06B3  3000               	movlw	0
  1580  06B4  1803               	skipnc
  1581  06B5  3001               	movlw	1
  1582  06B6  0771               	addwf	?___wmul+1,w
  1583  06B7  00FA               	movwf	??_MoistureCheck+3
  1584  06B8  087A               	movf	??_MoistureCheck+3,w
  1585  06B9  3A80               	xorlw	128
  1586  06BA  00FF               	movwf	127
  1587  06BB  3080               	movlw	128
  1588  06BC  027F               	subwf	127,w
  1589  06BD  1D03               	skipz
  1590  06BE  2EC1               	goto	u1385
  1591  06BF  3014               	movlw	20
  1592  06C0  0279               	subwf	??_MoistureCheck+2,w
  1593  06C1                     u1385:	
  1594  06C1  1C03               	skipc
  1595  06C2  2F00               	goto	l1184
  1596  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1597  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1598  06C5  0832               	movf	_mh,w
  1599  06C6  00F7               	movwf	??_MoistureCheck
  1600  06C7  01F8               	clrf	??_MoistureCheck+1
  1601  06C8  0877               	movf	??_MoistureCheck,w
  1602  06C9  00F0               	movwf	___wmul@multiplier
  1603  06CA  0878               	movf	??_MoistureCheck+1,w
  1604  06CB  00F1               	movwf	___wmul@multiplier+1
  1605  06CC  300A               	movlw	10
  1606  06CD  00F2               	movwf	___wmul@multiplicand
  1607  06CE  3000               	movlw	0
  1608  06CF  00F3               	movwf	___wmul@multiplicand+1
  1609  06D0  2376               	fcall	___wmul
  1610  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1611  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  1612  06D3  0833               	movf	_ml,w
  1613  06D4  0770               	addwf	?___wmul,w
  1614  06D5  00F9               	movwf	??_MoistureCheck+2
  1615  06D6  3000               	movlw	0
  1616  06D7  1803               	skipnc
  1617  06D8  3001               	movlw	1
  1618  06D9  0771               	addwf	?___wmul+1,w
  1619  06DA  00FA               	movwf	??_MoistureCheck+3
  1620  06DB  087A               	movf	??_MoistureCheck+3,w
  1621  06DC  3A80               	xorlw	128
  1622  06DD  00FF               	movwf	127
  1623  06DE  3080               	movlw	128
  1624  06DF  027F               	subwf	127,w
  1625  06E0  1D03               	skipz
  1626  06E1  2EE4               	goto	u1395
  1627  06E2  3015               	movlw	21
  1628  06E3  0279               	subwf	??_MoistureCheck+2,w
  1629  06E4                     u1395:	
  1630  06E4  1803               	skipnc
  1631  06E5  2F00               	goto	l1184
  1632                           
  1633                           ;main.c: 332: {
  1634                           ;main.c: 333: RA5 = 0;
  1635  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1636  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1637  06E8  1285               	bcf	5,5	;volatile
  1638                           
  1639                           ;main.c: 334: RB7 = 0;
  1640  06E9  1386               	bcf	6,7	;volatile
  1641                           
  1642                           ;main.c: 336: unsigned char l = Median(g, i, k);
  1643  06EA  0824               	movf	MoistureCheck@i,w
  1644  06EB  00F7               	movwf	??_MoistureCheck
  1645  06EC  0877               	movf	??_MoistureCheck,w
  1646  06ED  00F0               	movwf	Median@c
  1647  06EE  0825               	movf	MoistureCheck@k,w
  1648  06EF  00F8               	movwf	??_MoistureCheck+1
  1649  06F0  0878               	movf	??_MoistureCheck+1,w
  1650  06F1  00F1               	movwf	Median@e
  1651  06F2  0823               	movf	MoistureCheck@g,w
  1652  06F3  2355               	fcall	_Median
  1653  06F4  00F9               	movwf	??_MoistureCheck+2
  1654  06F5  0879               	movf	??_MoistureCheck+2,w
  1655  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1656  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1657  06F8  00AA               	movwf	MoistureCheck@l
  1658                           
  1659                           ;main.c: 338: if(l < 127)
  1660  06F9  307F               	movlw	127
  1661  06FA  022A               	subwf	MoistureCheck@l,w
  1662  06FB  1803               	skipnc
  1663  06FC  2EFF               	goto	l154
  1664                           
  1665                           ;main.c: 339: {
  1666                           ;main.c: 340: RB6 = 0;
  1667  06FD  1306               	bcf	6,6	;volatile
  1668                           
  1669                           ;main.c: 341: }
  1670  06FE  2F00               	goto	l1184
  1671  06FF                     l154:	
  1672                           
  1673                           ;main.c: 342: else
  1674                           ;main.c: 343: {
  1675                           ;main.c: 344: RB6 = 1;
  1676  06FF  1706               	bsf	6,6	;volatile
  1677  0700                     l1184:	
  1678                           
  1679                           ;main.c: 345: }
  1680                           ;main.c: 346: }
  1681                           ;main.c: 352: if(mh * 10 + ml >= 21 && mh * 10 + ml < 35)
  1682  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0702  0832               	movf	_mh,w
  1685  0703  00F7               	movwf	??_MoistureCheck
  1686  0704  01F8               	clrf	??_MoistureCheck+1
  1687  0705  0877               	movf	??_MoistureCheck,w
  1688  0706  00F0               	movwf	___wmul@multiplier
  1689  0707  0878               	movf	??_MoistureCheck+1,w
  1690  0708  00F1               	movwf	___wmul@multiplier+1
  1691  0709  300A               	movlw	10
  1692  070A  00F2               	movwf	___wmul@multiplicand
  1693  070B  3000               	movlw	0
  1694  070C  00F3               	movwf	___wmul@multiplicand+1
  1695  070D  2376               	fcall	___wmul
  1696  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1697  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0710  0833               	movf	_ml,w
  1699  0711  0770               	addwf	?___wmul,w
  1700  0712  00F9               	movwf	??_MoistureCheck+2
  1701  0713  3000               	movlw	0
  1702  0714  1803               	skipnc
  1703  0715  3001               	movlw	1
  1704  0716  0771               	addwf	?___wmul+1,w
  1705  0717  00FA               	movwf	??_MoistureCheck+3
  1706  0718  087A               	movf	??_MoistureCheck+3,w
  1707  0719  3A80               	xorlw	128
  1708  071A  00FF               	movwf	127
  1709  071B  3080               	movlw	128
  1710  071C  027F               	subwf	127,w
  1711  071D  1D03               	skipz
  1712  071E  2F21               	goto	u1415
  1713  071F  3015               	movlw	21
  1714  0720  0279               	subwf	??_MoistureCheck+2,w
  1715  0721                     u1415:	
  1716  0721  1C03               	skipc
  1717  0722  2F4B               	goto	l1190
  1718  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0725  0832               	movf	_mh,w
  1721  0726  00F7               	movwf	??_MoistureCheck
  1722  0727  01F8               	clrf	??_MoistureCheck+1
  1723  0728  0877               	movf	??_MoistureCheck,w
  1724  0729  00F0               	movwf	___wmul@multiplier
  1725  072A  0878               	movf	??_MoistureCheck+1,w
  1726  072B  00F1               	movwf	___wmul@multiplier+1
  1727  072C  300A               	movlw	10
  1728  072D  00F2               	movwf	___wmul@multiplicand
  1729  072E  3000               	movlw	0
  1730  072F  00F3               	movwf	___wmul@multiplicand+1
  1731  0730  2376               	fcall	___wmul
  1732  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0733  0833               	movf	_ml,w
  1735  0734  0770               	addwf	?___wmul,w
  1736  0735  00F9               	movwf	??_MoistureCheck+2
  1737  0736  3000               	movlw	0
  1738  0737  1803               	skipnc
  1739  0738  3001               	movlw	1
  1740  0739  0771               	addwf	?___wmul+1,w
  1741  073A  00FA               	movwf	??_MoistureCheck+3
  1742  073B  087A               	movf	??_MoistureCheck+3,w
  1743  073C  3A80               	xorlw	128
  1744  073D  00FF               	movwf	127
  1745  073E  3080               	movlw	128
  1746  073F  027F               	subwf	127,w
  1747  0740  1D03               	skipz
  1748  0741  2F44               	goto	u1425
  1749  0742  3023               	movlw	35
  1750  0743  0279               	subwf	??_MoistureCheck+2,w
  1751  0744                     u1425:	
  1752  0744  1803               	skipnc
  1753  0745  2F4B               	goto	l1190
  1754                           
  1755                           ;main.c: 353: {
  1756                           ;main.c: 354: RA5 = 0;
  1757  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0748  1285               	bcf	5,5	;volatile
  1760                           
  1761                           ;main.c: 355: RB7 = 0;
  1762  0749  1386               	bcf	6,7	;volatile
  1763                           
  1764                           ;main.c: 357: RB6 = 1;
  1765  074A  1706               	bsf	6,6	;volatile
  1766  074B                     l1190:	
  1767                           
  1768                           ;main.c: 358: }
  1769                           ;main.c: 364: if(mh * 10 + ml >= 35 && mh * 10 + ml < 36)
  1770  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1771  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1772  074D  0832               	movf	_mh,w
  1773  074E  00F7               	movwf	??_MoistureCheck
  1774  074F  01F8               	clrf	??_MoistureCheck+1
  1775  0750  0877               	movf	??_MoistureCheck,w
  1776  0751  00F0               	movwf	___wmul@multiplier
  1777  0752  0878               	movf	??_MoistureCheck+1,w
  1778  0753  00F1               	movwf	___wmul@multiplier+1
  1779  0754  300A               	movlw	10
  1780  0755  00F2               	movwf	___wmul@multiplicand
  1781  0756  3000               	movlw	0
  1782  0757  00F3               	movwf	___wmul@multiplicand+1
  1783  0758  2376               	fcall	___wmul
  1784  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1785  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1786  075B  0833               	movf	_ml,w
  1787  075C  0770               	addwf	?___wmul,w
  1788  075D  00F9               	movwf	??_MoistureCheck+2
  1789  075E  3000               	movlw	0
  1790  075F  1803               	skipnc
  1791  0760  3001               	movlw	1
  1792  0761  0771               	addwf	?___wmul+1,w
  1793  0762  00FA               	movwf	??_MoistureCheck+3
  1794  0763  087A               	movf	??_MoistureCheck+3,w
  1795  0764  3A80               	xorlw	128
  1796  0765  00FF               	movwf	127
  1797  0766  3080               	movlw	128
  1798  0767  027F               	subwf	127,w
  1799  0768  1D03               	skipz
  1800  0769  2F6C               	goto	u1435
  1801  076A  3023               	movlw	35
  1802  076B  0279               	subwf	??_MoistureCheck+2,w
  1803  076C                     u1435:	
  1804  076C  1C03               	skipc
  1805  076D  2FAB               	goto	l1202
  1806  076E  1283               	bcf	3,5	;RP0=0, select bank0
  1807  076F  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0770  0832               	movf	_mh,w
  1809  0771  00F7               	movwf	??_MoistureCheck
  1810  0772  01F8               	clrf	??_MoistureCheck+1
  1811  0773  0877               	movf	??_MoistureCheck,w
  1812  0774  00F0               	movwf	___wmul@multiplier
  1813  0775  0878               	movf	??_MoistureCheck+1,w
  1814  0776  00F1               	movwf	___wmul@multiplier+1
  1815  0777  300A               	movlw	10
  1816  0778  00F2               	movwf	___wmul@multiplicand
  1817  0779  3000               	movlw	0
  1818  077A  00F3               	movwf	___wmul@multiplicand+1
  1819  077B  2376               	fcall	___wmul
  1820  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1821  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1822  077E  0833               	movf	_ml,w
  1823  077F  0770               	addwf	?___wmul,w
  1824  0780  00F9               	movwf	??_MoistureCheck+2
  1825  0781  3000               	movlw	0
  1826  0782  1803               	skipnc
  1827  0783  3001               	movlw	1
  1828  0784  0771               	addwf	?___wmul+1,w
  1829  0785  00FA               	movwf	??_MoistureCheck+3
  1830  0786  087A               	movf	??_MoistureCheck+3,w
  1831  0787  3A80               	xorlw	128
  1832  0788  00FF               	movwf	127
  1833  0789  3080               	movlw	128
  1834  078A  027F               	subwf	127,w
  1835  078B  1D03               	skipz
  1836  078C  2F8F               	goto	u1445
  1837  078D  3024               	movlw	36
  1838  078E  0279               	subwf	??_MoistureCheck+2,w
  1839  078F                     u1445:	
  1840  078F  1803               	skipnc
  1841  0790  2FAB               	goto	l1202
  1842                           
  1843                           ;main.c: 365: {
  1844                           ;main.c: 366: RA5 = 0;
  1845  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0793  1285               	bcf	5,5	;volatile
  1848                           
  1849                           ;main.c: 367: RB7 = 0;
  1850  0794  1386               	bcf	6,7	;volatile
  1851                           
  1852                           ;main.c: 369: unsigned char r = Median(m, o, q);
  1853  0795  0827               	movf	MoistureCheck@o,w
  1854  0796  00F7               	movwf	??_MoistureCheck
  1855  0797  0877               	movf	??_MoistureCheck,w
  1856  0798  00F0               	movwf	Median@c
  1857  0799  0828               	movf	MoistureCheck@q,w
  1858  079A  00F8               	movwf	??_MoistureCheck+1
  1859  079B  0878               	movf	??_MoistureCheck+1,w
  1860  079C  00F1               	movwf	Median@e
  1861  079D  0826               	movf	MoistureCheck@m,w
  1862  079E  2355               	fcall	_Median
  1863  079F  00F9               	movwf	??_MoistureCheck+2
  1864  07A0  0879               	movf	??_MoistureCheck+2,w
  1865  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1866  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1867  07A3  00AB               	movwf	MoistureCheck@r
  1868                           
  1869                           ;main.c: 371: if(r < 127){
  1870  07A4  307F               	movlw	127
  1871  07A5  022B               	subwf	MoistureCheck@r,w
  1872  07A6  1803               	skipnc
  1873  07A7  2FAA               	goto	l158
  1874                           
  1875                           ;main.c: 372: RC2 = 0;
  1876  07A8  1107               	bcf	7,2	;volatile
  1877                           
  1878                           ;main.c: 373: }
  1879  07A9  2FAB               	goto	l1202
  1880  07AA                     l158:	
  1881                           
  1882                           ;main.c: 374: else
  1883                           ;main.c: 375: {
  1884                           ;main.c: 376: RC2 = 1;
  1885  07AA  1507               	bsf	7,2	;volatile
  1886  07AB                     l1202:	
  1887                           
  1888                           ;main.c: 377: }
  1889                           ;main.c: 378: }
  1890                           ;main.c: 384: if(mh * 10 + ml >= 36 && mh * 10 + ml < 60)
  1891  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1892  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1893  07AD  0832               	movf	_mh,w
  1894  07AE  00F7               	movwf	??_MoistureCheck
  1895  07AF  01F8               	clrf	??_MoistureCheck+1
  1896  07B0  0877               	movf	??_MoistureCheck,w
  1897  07B1  00F0               	movwf	___wmul@multiplier
  1898  07B2  0878               	movf	??_MoistureCheck+1,w
  1899  07B3  00F1               	movwf	___wmul@multiplier+1
  1900  07B4  300A               	movlw	10
  1901  07B5  00F2               	movwf	___wmul@multiplicand
  1902  07B6  3000               	movlw	0
  1903  07B7  00F3               	movwf	___wmul@multiplicand+1
  1904  07B8  2376               	fcall	___wmul
  1905  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1906  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1907  07BB  0833               	movf	_ml,w
  1908  07BC  0770               	addwf	?___wmul,w
  1909  07BD  00F9               	movwf	??_MoistureCheck+2
  1910  07BE  3000               	movlw	0
  1911  07BF  1803               	skipnc
  1912  07C0  3001               	movlw	1
  1913  07C1  0771               	addwf	?___wmul+1,w
  1914  07C2  00FA               	movwf	??_MoistureCheck+3
  1915  07C3  087A               	movf	??_MoistureCheck+3,w
  1916  07C4  3A80               	xorlw	128
  1917  07C5  00FF               	movwf	127
  1918  07C6  3080               	movlw	128
  1919  07C7  027F               	subwf	127,w
  1920  07C8  1D03               	skipz
  1921  07C9  2FCC               	goto	u1465
  1922  07CA  3024               	movlw	36
  1923  07CB  0279               	subwf	??_MoistureCheck+2,w
  1924  07CC                     u1465:	
  1925  07CC  1C03               	skipc
  1926  07CD  0008               	return
  1927  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1928  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1929  07D0  0832               	movf	_mh,w
  1930  07D1  00F7               	movwf	??_MoistureCheck
  1931  07D2  01F8               	clrf	??_MoistureCheck+1
  1932  07D3  0877               	movf	??_MoistureCheck,w
  1933  07D4  00F0               	movwf	___wmul@multiplier
  1934  07D5  0878               	movf	??_MoistureCheck+1,w
  1935  07D6  00F1               	movwf	___wmul@multiplier+1
  1936  07D7  300A               	movlw	10
  1937  07D8  00F2               	movwf	___wmul@multiplicand
  1938  07D9  3000               	movlw	0
  1939  07DA  00F3               	movwf	___wmul@multiplicand+1
  1940  07DB  2376               	fcall	___wmul
  1941  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1942  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1943  07DE  0833               	movf	_ml,w
  1944  07DF  0770               	addwf	?___wmul,w
  1945  07E0  00F9               	movwf	??_MoistureCheck+2
  1946  07E1  3000               	movlw	0
  1947  07E2  1803               	skipnc
  1948  07E3  3001               	movlw	1
  1949  07E4  0771               	addwf	?___wmul+1,w
  1950  07E5  00FA               	movwf	??_MoistureCheck+3
  1951  07E6  087A               	movf	??_MoistureCheck+3,w
  1952  07E7  3A80               	xorlw	128
  1953  07E8  00FF               	movwf	127
  1954  07E9  3080               	movlw	128
  1955  07EA  027F               	subwf	127,w
  1956  07EB  1D03               	skipz
  1957  07EC  2FEF               	goto	u1475
  1958  07ED  303C               	movlw	60
  1959  07EE  0279               	subwf	??_MoistureCheck+2,w
  1960  07EF                     u1475:	
  1961  07EF  1803               	skipnc
  1962  07F0  0008               	return
  1963                           
  1964                           ;main.c: 385: {
  1965                           ;main.c: 386: RA5 = 0;
  1966  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  1967  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  1968  07F3  1285               	bcf	5,5	;volatile
  1969                           
  1970                           ;main.c: 387: RB7 = 0;
  1971  07F4  1386               	bcf	6,7	;volatile
  1972                           
  1973                           ;main.c: 389: RC2 = 1;
  1974  07F5  1507               	bsf	7,2	;volatile
  1975  07F6  0008               	return
  1976  07F7                     __end_of_MoistureCheck:	
  1977                           
  1978                           	psect	text2
  1979  0376                     __ptext2:	
  1980 ;; *************** function ___wmul *****************
  1981 ;; Defined at:
  1982 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  multiplier      2    0[COMMON] unsigned int 
  1985 ;;  multiplicand    2    2[COMMON] unsigned int 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  product         2    4[COMMON] unsigned int 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  2    0[COMMON] unsigned int 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1
  1997 ;;      Params:         4       0       0
  1998 ;;      Locals:         2       0       0
  1999 ;;      Temps:          0       0       0
  2000 ;;      Totals:         6       0       0
  2001 ;;Total ram usage:        6 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;;		_MoistureCheck
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function ___wmul
  2013  0376                     ___wmul:	
  2014                           
  2015                           ;incstack = 0
  2016                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2017  0376  01F4               	clrf	___wmul@product
  2018  0377  01F5               	clrf	___wmul@product+1
  2019  0378                     l1060:	
  2020  0378  1C70               	btfss	___wmul@multiplier,0
  2021  0379  2B80               	goto	l165
  2022  037A  0872               	movf	___wmul@multiplicand,w
  2023  037B  07F4               	addwf	___wmul@product,f
  2024  037C  1803               	skipnc
  2025  037D  0AF5               	incf	___wmul@product+1,f
  2026  037E  0873               	movf	___wmul@multiplicand+1,w
  2027  037F  07F5               	addwf	___wmul@product+1,f
  2028  0380                     l165:	
  2029  0380  3001               	movlw	1
  2030  0381                     u1135:	
  2031  0381  1003               	clrc
  2032  0382  0DF2               	rlf	___wmul@multiplicand,f
  2033  0383  0DF3               	rlf	___wmul@multiplicand+1,f
  2034  0384  3EFF               	addlw	-1
  2035  0385  1D03               	skipz
  2036  0386  2B81               	goto	u1135
  2037  0387  3001               	movlw	1
  2038  0388                     u1145:	
  2039  0388  1003               	clrc
  2040  0389  0CF1               	rrf	___wmul@multiplier+1,f
  2041  038A  0CF0               	rrf	___wmul@multiplier,f
  2042  038B  3EFF               	addlw	-1
  2043  038C  1D03               	skipz
  2044  038D  2B88               	goto	u1145
  2045  038E  0871               	movf	___wmul@multiplier+1,w
  2046  038F  0470               	iorwf	___wmul@multiplier,w
  2047  0390  1D03               	skipz
  2048  0391  2B78               	goto	l1060
  2049  0392  0875               	movf	___wmul@product+1,w
  2050  0393  01F1               	clrf	?___wmul+1
  2051  0394  07F1               	addwf	?___wmul+1,f
  2052  0395  0874               	movf	___wmul@product,w
  2053  0396  01F0               	clrf	?___wmul
  2054  0397  07F0               	addwf	?___wmul,f
  2055  0398  0008               	return
  2056  0399                     __end_of___wmul:	
  2057                           
  2058                           	psect	text3
  2059  0355                     __ptext3:	
  2060 ;; *************** function _Median *****************
  2061 ;; Defined at:
  2062 ;;		line 44 in file "user.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  a               1    wreg     unsigned char 
  2065 ;;  c               1    0[COMMON] unsigned char 
  2066 ;;  e               1    1[COMMON] unsigned char 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  a               1    4[COMMON] unsigned char 
  2069 ;;  d               1    6[COMMON] unsigned char 
  2070 ;;  b               1    5[COMMON] unsigned char 
  2071 ;;  f               1    3[COMMON] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      unsigned char 
  2074 ;; Registers used:
  2075 ;;		wreg
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1
  2081 ;;      Params:         2       0       0
  2082 ;;      Locals:         4       0       0
  2083 ;;      Temps:          1       0       0
  2084 ;;      Totals:         7       0       0
  2085 ;;Total ram usage:        7 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_MoistureCheck
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           
  2095                           ;psect for function _Median
  2096  0355                     _Median:	
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in _Median: [wreg]
  2100                           ;Median@a stored from wreg
  2101  0355  00F4               	movwf	Median@a
  2102                           
  2103                           ;user.c: 46: unsigned char b, d, f;
  2104                           ;user.c: 48: if (a > c){
  2105  0356  0874               	movf	Median@a,w
  2106  0357  0270               	subwf	Median@c,w
  2107  0358  1803               	skipnc
  2108  0359  2B5C               	goto	l1046
  2109                           
  2110                           ;user.c: 49: b = a;
  2111  035A  0874               	movf	Median@a,w
  2112  035B  2B5D               	goto	L1
  2113  035C                     l1046:	
  2114                           ;user.c: 50: }
  2115                           
  2116                           
  2117                           ;user.c: 51: else{
  2118                           ;user.c: 52: b = c;
  2119  035C  0870               	movf	Median@c,w
  2120  035D                     L1:	
  2121  035D  00F2               	movwf	??_Median
  2122  035E  0872               	movf	??_Median,w
  2123  035F  00F5               	movwf	Median@b
  2124                           
  2125                           ;user.c: 53: }
  2126                           ;user.c: 55: if(c > e){
  2127  0360  0870               	movf	Median@c,w
  2128  0361  0271               	subwf	Median@e,w
  2129  0362  1803               	skipnc
  2130  0363  2B66               	goto	l1050
  2131                           
  2132                           ;user.c: 56: d = c;
  2133  0364  0870               	movf	Median@c,w
  2134  0365  2B67               	goto	L2
  2135  0366                     l1050:	
  2136                           ;user.c: 57: }
  2137                           
  2138                           
  2139                           ;user.c: 58: else{
  2140                           ;user.c: 59: d = e;
  2141  0366  0871               	movf	Median@e,w
  2142  0367                     L2:	
  2143  0367  00F2               	movwf	??_Median
  2144  0368  0872               	movf	??_Median,w
  2145  0369  00F6               	movwf	Median@d
  2146                           
  2147                           ;user.c: 60: }
  2148                           ;user.c: 62: if(b < d){
  2149  036A  0876               	movf	Median@d,w
  2150  036B  0275               	subwf	Median@b,w
  2151  036C  1803               	skipnc
  2152  036D  2B70               	goto	l1054
  2153                           
  2154                           ;user.c: 63: f = b;
  2155  036E  0875               	movf	Median@b,w
  2156  036F  2B71               	goto	L3
  2157  0370                     l1054:	
  2158                           ;user.c: 64: }
  2159                           
  2160                           
  2161                           ;user.c: 65: else{
  2162                           ;user.c: 66: f = d;
  2163  0370  0876               	movf	Median@d,w
  2164  0371                     L3:	
  2165  0371  00F2               	movwf	??_Median
  2166  0372  0872               	movf	??_Median,w
  2167  0373  00F3               	movwf	Median@f
  2168                           
  2169                           ;user.c: 67: }
  2170                           ;user.c: 69: return f;
  2171  0374  0873               	movf	Median@f,w
  2172  0375  0008               	return
  2173  0376                     __end_of_Median:	
  2174                           
  2175                           	psect	text4
  2176  0338                     __ptext4:	
  2177 ;; *************** function _ADCRead *****************
  2178 ;; Defined at:
  2179 ;;		line 26 in file "user.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  ch              1    wreg     unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  ch              1    1[COMMON] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      unsigned char 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1
  2193 ;;      Params:         0       0       0
  2194 ;;      Locals:         1       0       0
  2195 ;;      Temps:          1       0       0
  2196 ;;      Totals:         2       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_MoistureCheck
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _ADCRead
  2208  0338                     _ADCRead:	
  2209                           
  2210                           ;incstack = 0
  2211                           ; Regs used in _ADCRead: [wreg+status,2+status,0]
  2212                           ;ADCRead@ch stored from wreg
  2213  0338  00F1               	movwf	ADCRead@ch
  2214                           
  2215                           ;user.c: 28: ADCON0=0x00;
  2216  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2217  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2218  033B  019F               	clrf	31	;volatile
  2219                           
  2220                           ;user.c: 29: ADCON0=(ch<<2);
  2221  033C  0871               	movf	ADCRead@ch,w
  2222  033D  00F0               	movwf	??_ADCRead
  2223  033E  3001               	movlw	1
  2224  033F                     u1075:	
  2225  033F  1003               	clrc
  2226  0340  0DF0               	rlf	??_ADCRead,f
  2227  0341  3EFF               	addlw	-1
  2228  0342  1D03               	skipz
  2229  0343  2B3F               	goto	u1075
  2230  0344  1003               	clrc
  2231  0345  0D70               	rlf	??_ADCRead,w
  2232  0346  009F               	movwf	31	;volatile
  2233                           
  2234                           ;user.c: 30: ADON=1;
  2235  0347  141F               	bsf	31,0	;volatile
  2236                           
  2237                           ;user.c: 31: _delay((unsigned long)((300)*(2000000L/4000000.0)));
  2238  0348  3031               	movlw	49
  2239  0349  00F0               	movwf	??_ADCRead
  2240  034A                     u1607:	
  2241  034A  0BF0               	decfsz	??_ADCRead,f
  2242  034B  2B4A               	goto	u1607
  2243  034C  2B4D               	nop2	;nop
  2244                           
  2245                           ;user.c: 32: GO_nDONE=1;
  2246  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2247  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2248  034F  149F               	bsf	31,1	;volatile
  2249  0350                     l64:	
  2250                           ;user.c: 33: while(GO_nDONE);
  2251                           
  2252  0350  189F               	btfsc	31,1	;volatile
  2253  0351  2B50               	goto	l64
  2254                           
  2255                           ;user.c: 34: ADON=0;
  2256  0352  101F               	bcf	31,0	;volatile
  2257                           
  2258                           ;user.c: 35: return ADRES;
  2259  0353  081E               	movf	30,w	;volatile
  2260  0354  0008               	return
  2261  0355                     __end_of_ADCRead:	
  2262                           
  2263                           	psect	text5
  2264  0322                     __ptext5:	
  2265 ;; *************** function _ADCInit *****************
  2266 ;; Defined at:
  2267 ;;		line 15 in file "user.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;		None               void
  2274 ;; Registers used:
  2275 ;;		wreg
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1
  2281 ;;      Params:         0       0       0
  2282 ;;      Locals:         0       0       0
  2283 ;;      Temps:          0       0       0
  2284 ;;      Totals:         0       0       0
  2285 ;;Total ram usage:        0 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_MoistureCheck
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           
  2295                           ;psect for function _ADCInit
  2296  0322                     _ADCInit:	
  2297                           
  2298                           ;user.c: 17: ADCON1 = 0x10;
  2299                           
  2300                           ;incstack = 0
  2301                           ; Regs used in _ADCInit: [wreg]
  2302  0322  3010               	movlw	16
  2303  0323  1683               	bsf	3,5	;RP0=1, select bank1
  2304  0324  1303               	bcf	3,6	;RP1=0, select bank1
  2305  0325  009F               	movwf	31	;volatile
  2306  0326  0008               	return
  2307  0327                     __end_of_ADCInit:	
  2308                           
  2309                           	psect	text6
  2310  0399                     __ptext6:	
  2311 ;; *************** function _Init *****************
  2312 ;; Defined at:
  2313 ;;		line 37 in file "system.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;		None               void
  2320 ;; Registers used:
  2321 ;;		wreg
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1
  2327 ;;      Params:         0       0       0
  2328 ;;      Locals:         0       0       0
  2329 ;;      Temps:          0       0       0
  2330 ;;      Totals:         0       0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_main
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           
  2341                           ;psect for function _Init
  2342  0399                     _Init:	
  2343                           
  2344                           ;system.c: 39: TRISA = 0b00011111;
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _Init: [wreg]
  2348  0399  301F               	movlw	31
  2349  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2350  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2351  039C  0085               	movwf	5	;volatile
  2352                           
  2353                           ;system.c: 40: ANSELA = 0b00010100;
  2354  039D  3014               	movlw	20
  2355  039E  1683               	bsf	3,5	;RP0=1, select bank3
  2356  039F  1703               	bsf	3,6	;RP1=1, select bank3
  2357  03A0  0085               	movwf	5	;volatile
  2358                           
  2359                           ;system.c: 41: PORTA = 0xff;
  2360  03A1  30FF               	movlw	255
  2361  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2362  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2363  03A4  0085               	movwf	5	;volatile
  2364                           
  2365                           ;system.c: 46: TRISB = 0b00110000;
  2366  03A5  3030               	movlw	48
  2367  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2368  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2369  03A8  0086               	movwf	6	;volatile
  2370                           
  2371                           ;system.c: 47: ANSELB = 0b00110000;
  2372  03A9  3030               	movlw	48
  2373  03AA  1683               	bsf	3,5	;RP0=1, select bank3
  2374  03AB  1703               	bsf	3,6	;RP1=1, select bank3
  2375  03AC  0086               	movwf	6	;volatile
  2376                           
  2377                           ;system.c: 48: PORTB = 0xff;
  2378  03AD  30FF               	movlw	255
  2379  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2380  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2381  03B0  0086               	movwf	6	;volatile
  2382                           
  2383                           ;system.c: 53: TRISC = 0b11001011;
  2384  03B1  30CB               	movlw	203
  2385  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2386  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2387  03B4  0087               	movwf	7	;volatile
  2388                           
  2389                           ;system.c: 54: ANSELC = 0b11001011;
  2390  03B5  30CB               	movlw	203
  2391  03B6  1683               	bsf	3,5	;RP0=1, select bank3
  2392  03B7  1703               	bsf	3,6	;RP1=1, select bank3
  2393  03B8  0087               	movwf	7	;volatile
  2394                           
  2395                           ;system.c: 55: PORTC = 0xff;
  2396  03B9  30FF               	movlw	255
  2397  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2398  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2399  03BC  0087               	movwf	7	;volatile
  2400                           
  2401                           ;system.c: 60: IRCF1 = 0;
  2402  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2403  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2404  03BF  1290               	bcf	16,5	;volatile
  2405                           
  2406                           ;system.c: 61: IRCF0 = 0;
  2407  03C0  1210               	bcf	16,4	;volatile
  2408                           
  2409                           ;system.c: 62: OSCTUNE = 0x3e;
  2410  03C1  303E               	movlw	62
  2411  03C2  0091               	movwf	17	;volatile
  2412                           
  2413                           ;system.c: 64: FVRCON = 0xc3;
  2414  03C3  30C3               	movlw	195
  2415  03C4  009D               	movwf	29	;volatile
  2416  03C5  0008               	return
  2417  03C6                     __end_of_Init:	
  2418                           
  2419                           	psect	text7
  2420  0327                     __ptext7:	
  2421 ;; *************** function _ConfigureOscillator *****************
  2422 ;; Defined at:
  2423 ;;		line 18 in file "system.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;		None               void
  2430 ;; Registers used:
  2431 ;;		status,2
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1
  2437 ;;      Params:         0       0       0
  2438 ;;      Locals:         0       0       0
  2439 ;;      Temps:          0       0       0
  2440 ;;      Totals:         0       0       0
  2441 ;;Total ram usage:        0 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function _ConfigureOscillator
  2452  0327                     _ConfigureOscillator:	
  2453                           
  2454                           ;system.c: 20: IRCF1 = 0;
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _ConfigureOscillator: [status,2]
  2458  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2459  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2460  0329  1290               	bcf	16,5	;volatile
  2461                           
  2462                           ;system.c: 21: IRCF0 = 0;
  2463  032A  1210               	bcf	16,4	;volatile
  2464                           
  2465                           ;system.c: 22: OSCTUNE = 0x00;
  2466  032B  0191               	clrf	17	;volatile
  2467                           
  2468                           ;system.c: 24: TMR0 = 0;
  2469  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2470  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2471  032E  0181               	clrf	1	;volatile
  2472                           
  2473                           ;system.c: 25: T0CS = 0;
  2474  032F  1683               	bsf	3,5	;RP0=1, select bank1
  2475  0330  1303               	bcf	3,6	;RP1=0, select bank1
  2476  0331  1281               	bcf	1,5	;volatile
  2477                           
  2478                           ;system.c: 26: T0SE = 0;
  2479  0332  1201               	bcf	1,4	;volatile
  2480                           
  2481                           ;system.c: 27: PSA = 0;
  2482  0333  1181               	bcf	1,3	;volatile
  2483                           
  2484                           ;system.c: 28: PS0 = 1;
  2485  0334  1401               	bsf	1,0	;volatile
  2486                           
  2487                           ;system.c: 29: PS1 = 1;
  2488  0335  1481               	bsf	1,1	;volatile
  2489                           
  2490                           ;system.c: 30: PS2 = 1;
  2491  0336  1501               	bsf	1,2	;volatile
  2492  0337  0008               	return
  2493  0338                     __end_of_ConfigureOscillator:	
  2494  007E                     btemp	set	126	;btemp
  2495  007E                     wtemp	set	126
  2496  007E                     wtemp0	set	126
  2497  0080                     wtemp1	set	128
  2498  0082                     wtemp2	set	130
  2499  0084                     wtemp3	set	132
  2500  0086                     wtemp4	set	134
  2501  0088                     wtemp5	set	136
  2502  007F                     wtemp6	set	127
  2503  007E                     ttemp	set	126
  2504  007E                     ttemp0	set	126
  2505  0081                     ttemp1	set	129
  2506  0084                     ttemp2	set	132
  2507  0087                     ttemp3	set	135
  2508  007F                     ttemp4	set	127
  2509  007E                     ltemp	set	126
  2510  007E                     ltemp0	set	126
  2511  0082                     ltemp1	set	130
  2512  0086                     ltemp2	set	134
  2513  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     17      24
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MoistureCheck
    _MoistureCheck->_Median

Critical Paths under _main in BANK0

    _main->_MoistureCheck

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6533
                                             11 COMMON     2     2      0
                                             13 BANK0      4     4      0
                _ConfigureOscillator
                               _Init
                      _MoistureCheck
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _MoistureCheck                                       17    17      0    3981
                                              7 COMMON     4     4      0
                                              0 BANK0     13    13      0
                            _ADCInit
                            _ADCRead
                             _Median
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2512
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Median                                               7     5      2     745
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              2     2      0      31
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _Init
   _MoistureCheck
     _ADCInit
     _ADCRead
     _Median
     ___wmul
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      18       5       30.0%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25       8        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Mar 18 20:37:08 2015

                          l64 0350                            _hh 0031                            _hl 0037  
                          _mh 0032                            _ml 0033                            _sh 0034  
                          _sl 0035           ___wmul@multiplicand 0072                           l120 03D6  
                         l150 0654                           l128 042C                           l154 06FF  
                         l165 0380                           l158 07AA                           _RA5 002D  
                         _RC2 003A                           _RC4 003C                           _RB6 0036  
                         _RC5 003D                           _RB7 0037                           _PS0 0408  
                         _PS1 0409                           _PS2 040A                           _PSA 040B  
             __end_of_ADCInit 0327               __end_of_ADCRead 0355                          l1110 0509  
                        l1050 0366                          l1202 07AB                          l1130 0540  
                        l1122 052A                          l1114 0514                          l1060 0378  
                        l1054 0370                          l1046 035C                          l1134 054B  
                        l1126 0535                          l1118 051F                          l1142 0561  
                        l1216 03CD                          l1154 05F5                          l1138 0556  
                        l1250 0415                          l1172 06A0                          l1148 05AB  
                        l1244 040C                          l1228 03EB                          l1190 074B  
                        l1166 0655                          l1262 0428                          l1238 0403  
                        l1184 0700                          l1256 041E                          l1098 04B1  
                        l1266 042D                          _ADON 00F8                          _T0CS 040D  
                        u1135 0381                          u1145 0388                          u1305 05A5  
                        u1075 033F                          u1315 05CC                          _T0SE 040C  
                        u1325 05EF                          u1415 0721                          u1335 0616  
                        u1175 04AB                          u1425 0744                          u1345 0639  
                        u1185 04D2                          u1435 076C                          u1195 04F5  
                        u1445 078F                          u1365 0676                          u1607 034A  
                        u1375 0699                          u1295 0582                          u1465 07CC  
                        u1385 06C1                          u1475 07EF                          u1395 06E4  
                        u1585 044B                          u1595 046D                          _TMR0 0001  
                        _Init 0399                          _main 03C6                          btemp 007E  
               __CFG_BOREN$ON 0000                          ltemp 007E                          start 0000  
                        ttemp 007E                          wtemp 007E         __end_of_MoistureCheck 07F7  
                       ?_Init 0070                         ?_main 0070                         _ADRES 001E  
               __CFG_WDTE$OFF 0000                         _IRCF0 0484                         _IRCF1 0485  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
         _ConfigureOscillator 0327                 __CFG_PWRTE$ON 0000                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F          ?_ConfigureOscillator 0070               __initialization 07F7  
                __end_of_Init 03C6                  __end_of_main 0471                     ??_ADCInit 0070  
                   ??_ADCRead 0070                        ??_Init 0070                        ??_main 002D  
                   ADCRead@ch 0071                        _ADCON0 001F                        _ADCON1 009F  
                      _ANSELA 0185                        _ANSELB 0186                        _ANSELC 0187  
                      _FVRCON 009D                        _TMR0IF 005A         ??_ConfigureOscillator 0070  
                      _Median 0355                        ___wmul 0376       __end_of__initialization 07FE  
              __pcstackCOMMON 0070                  __pidataBANK0 0321                  __pbitnvBANK0 01B0  
                  __pbssBANK0 0031                       ?_Median 0070                    __pmaintext 03C6  
                     ?___wmul 0070                       _ADCInit 0322                       _ADCRead 0338  
                     _OSCTUNE 0091                       Median@a 0074                       Median@b 0075  
                     Median@c 0070                       Median@d 0076                       Median@e 0071  
                     Median@f 0073               __size_of_Median 0021               __size_of___wmul 0023  
                     __ptext1 0471                       __ptext2 0376                       __ptext3 0355  
                     __ptext4 0338                       __ptext5 0322                       __ptext6 0399  
                     __ptext7 0327          end_of_initialization 07FE        __size_of_MoistureCheck 0386  
 __end_of_ConfigureOscillator 0338                    main@Toggle 01B0                __end_of_Median 0376  
               _MoistureCheck 0471                __end_of___wmul 0399           start_initialization 07F7  
                    ??_Median 0072                      ??___wmul 0074                ?_MoistureCheck 0070  
                 __pdataBANK0 0037                      ?_ADCInit 0070                      ?_ADCRead 0070  
                   ___latbits 0000                 __pcstackBANK0 0020                MoistureCheck@a 0020  
              MoistureCheck@c 0021                MoistureCheck@e 0022                MoistureCheck@f 0029  
              MoistureCheck@g 0023                MoistureCheck@i 0024                MoistureCheck@k 0025  
              MoistureCheck@l 002A                MoistureCheck@m 0026                MoistureCheck@o 0027  
              MoistureCheck@q 0028                MoistureCheck@r 002B                MoistureCheck@t 002C  
              ___wmul@product 0074               ??_MoistureCheck 0077                      _GO_nDONE 00F9  
            __size_of_ADCInit 0005              __size_of_ADCRead 001D             ___wmul@multiplier 0070  
               __size_of_Init 002D                 __size_of_main 00AB  __size_of_ConfigureOscillator 0011  
                    main@bres 007B            __CFG_FOSC$INTOSCIO 0000  
