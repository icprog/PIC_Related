

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Aug 25 00:06:02 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F720
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000E                     	;# 
    38  000E                     	;# 
    39  000F                     	;# 
    40  0010                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0014                     	;# 
    45  0015                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  0081                     	;# 
    55  0085                     	;# 
    56  0086                     	;# 
    57  0087                     	;# 
    58  008C                     	;# 
    59  008E                     	;# 
    60  008F                     	;# 
    61  0090                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0095                     	;# 
    68  0096                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009D                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  010F                     	;# 
    77  0115                     	;# 
    78  0116                     	;# 
    79  0185                     	;# 
    80  0186                     	;# 
    81  0187                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  008C                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009D                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0185                     	;# 
   138  0186                     	;# 
   139  0187                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  008C                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009D                     	;# 
   188  009F                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  0115                     	;# 
   194  0116                     	;# 
   195  0185                     	;# 
   196  0186                     	;# 
   197  0187                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000E                     	;# 
   212  000E                     	;# 
   213  000F                     	;# 
   214  0010                     	;# 
   215  0011                     	;# 
   216  0012                     	;# 
   217  0013                     	;# 
   218  0014                     	;# 
   219  0015                     	;# 
   220  0015                     	;# 
   221  0016                     	;# 
   222  0017                     	;# 
   223  0018                     	;# 
   224  0019                     	;# 
   225  001A                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  008C                     	;# 
   233  008E                     	;# 
   234  008F                     	;# 
   235  0090                     	;# 
   236  0091                     	;# 
   237  0092                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0098                     	;# 
   244  0099                     	;# 
   245  009D                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  0115                     	;# 
   252  0116                     	;# 
   253  0185                     	;# 
   254  0186                     	;# 
   255  0187                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  0000                     	;# 
   259  0001                     	;# 
   260  0002                     	;# 
   261  0003                     	;# 
   262  0004                     	;# 
   263  0005                     	;# 
   264  0006                     	;# 
   265  0007                     	;# 
   266  000A                     	;# 
   267  000B                     	;# 
   268  000C                     	;# 
   269  000E                     	;# 
   270  000E                     	;# 
   271  000F                     	;# 
   272  0010                     	;# 
   273  0011                     	;# 
   274  0012                     	;# 
   275  0013                     	;# 
   276  0014                     	;# 
   277  0015                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0017                     	;# 
   281  0018                     	;# 
   282  0019                     	;# 
   283  001A                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  008C                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0094                     	;# 
   299  0095                     	;# 
   300  0096                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009D                     	;# 
   304  009F                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0115                     	;# 
   310  0116                     	;# 
   311  0185                     	;# 
   312  0186                     	;# 
   313  0187                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316                           
   317                           	psect	idataBANK0
   318  014A                     __pidataBANK0:	
   319                           
   320                           ;initializer for ___cgram
   321  014A  340C               	retlw	12
   322  014B  3412               	retlw	18
   323  014C  3412               	retlw	18
   324  014D  340C               	retlw	12
   325  014E  3400               	retlw	0
   326  014F  3400               	retlw	0
   327  0150  3400               	retlw	0
   328  0151  3400               	retlw	0
   329                           
   330                           	psect	stringtext
   331  0500                     __pstringtext:	
   332  0500                     stringtab:	
   333  0500                     __stringtab:	
   334                           
   335                           ;	String table - string pointers are 2 bytes each
   336  0500  1BFF               	btfsc	btemp+1,7
   337  0501  2D0A               	ljmp	stringcode
   338  0502  1383               	bcf	3,7
   339  0503  187F               	btfsc	btemp+1,0
   340  0504  1783               	bsf	3,7
   341  0505  0800               	movf	0,w
   342  0506  0A84               	incf	4,f
   343  0507  1903               	skipnz
   344  0508  0AFF               	incf	btemp+1,f
   345  0509  0008               	return
   346  050A                     stringcode:	
   347  050A  087F               	movf	btemp+1,w
   348  050B  397F               	andlw	127
   349  050C  008A               	movwf	10
   350  050D  0804               	movf	4,w
   351  050E  0A84               	incf	4,f
   352  050F  1903               	skipnz
   353  0510  0AFF               	incf	btemp+1,f
   354  0511  0082               	movwf	2
   355  0512                     __stringbase:	
   356  0512                     __end_of__stringtab:	
   357  0512                     TempCheck@tempread:	
   358  0512  3400               	retlw	0
   359  0513  3400               	retlw	0
   360  0514  3400               	retlw	0
   361  0515  3400               	retlw	0
   362  0516  3400               	retlw	0
   363  0517  3400               	retlw	0
   364  0518  3400               	retlw	0
   365  0519  3400               	retlw	0
   366  051A  3400               	retlw	0
   367  051B  3400               	retlw	0
   368  051C  3400               	retlw	0
   369  051D  3400               	retlw	0
   370  051E  3400               	retlw	0
   371  051F  3400               	retlw	0
   372  0520  3400               	retlw	0
   373  0521  3400               	retlw	0
   374  0522  3400               	retlw	0
   375  0523  3400               	retlw	0
   376  0524  3400               	retlw	0
   377  0525  3400               	retlw	0
   378  0526  34E5               	retlw	229
   379  0527  34FF               	retlw	255
   380  0528  34E8               	retlw	232
   381  0529  34FF               	retlw	255
   382  052A  34EA               	retlw	234
   383  052B  34FF               	retlw	255
   384  052C  34EC               	retlw	236
   385  052D  34FF               	retlw	255
   386  052E  34EE               	retlw	238
   387  052F  34FF               	retlw	255
   388  0530  34F0               	retlw	240
   389  0531  34FF               	retlw	255
   390  0532  34F2               	retlw	242
   391  0533  34FF               	retlw	255
   392  0534  34F4               	retlw	244
   393  0535  34FF               	retlw	255
   394  0536  34F6               	retlw	246
   395  0537  34FF               	retlw	255
   396  0538  34F7               	retlw	247
   397  0539  34FF               	retlw	255
   398  053A  34F9               	retlw	249
   399  053B  34FF               	retlw	255
   400  053C  34FB               	retlw	251
   401  053D  34FF               	retlw	255
   402  053E  34FC               	retlw	252
   403  053F  34FF               	retlw	255
   404  0540  34FE               	retlw	254
   405  0541  34FF               	retlw	255
   406  0542  34FF               	retlw	255
   407  0543  34FF               	retlw	255
   408  0544  3401               	retlw	1
   409  0545  3400               	retlw	0
   410  0546  3402               	retlw	2
   411  0547  3400               	retlw	0
   412  0548  3403               	retlw	3
   413  0549  3400               	retlw	0
   414  054A  3404               	retlw	4
   415  054B  3400               	retlw	0
   416  054C  3406               	retlw	6
   417  054D  3400               	retlw	0
   418  054E  3407               	retlw	7
   419  054F  3400               	retlw	0
   420  0550  3408               	retlw	8
   421  0551  3400               	retlw	0
   422  0552  3409               	retlw	9
   423  0553  3400               	retlw	0
   424  0554  340A               	retlw	10
   425  0555  3400               	retlw	0
   426  0556  340B               	retlw	11
   427  0557  3400               	retlw	0
   428  0558  340C               	retlw	12
   429  0559  3400               	retlw	0
   430  055A  340D               	retlw	13
   431  055B  3400               	retlw	0
   432  055C  340E               	retlw	14
   433  055D  3400               	retlw	0
   434  055E  340E               	retlw	14
   435  055F  3400               	retlw	0
   436  0560  340F               	retlw	15
   437  0561  3400               	retlw	0
   438  0562  3410               	retlw	16
   439  0563  3400               	retlw	0
   440  0564  3411               	retlw	17
   441  0565  3400               	retlw	0
   442  0566  3412               	retlw	18
   443  0567  3400               	retlw	0
   444  0568  3413               	retlw	19
   445  0569  3400               	retlw	0
   446  056A  3414               	retlw	20
   447  056B  3400               	retlw	0
   448  056C  3415               	retlw	21
   449  056D  3400               	retlw	0
   450  056E  3416               	retlw	22
   451  056F  3400               	retlw	0
   452  0570  3417               	retlw	23
   453  0571  3400               	retlw	0
   454  0572  3418               	retlw	24
   455  0573  3400               	retlw	0
   456  0574  3419               	retlw	25
   457  0575  3400               	retlw	0
   458  0576  3419               	retlw	25
   459  0577  3400               	retlw	0
   460  0578  341A               	retlw	26
   461  0579  3400               	retlw	0
   462  057A  341B               	retlw	27
   463  057B  3400               	retlw	0
   464  057C  341C               	retlw	28
   465  057D  3400               	retlw	0
   466  057E  341D               	retlw	29
   467  057F  3400               	retlw	0
   468  0580  341E               	retlw	30
   469  0581  3400               	retlw	0
   470  0582  341F               	retlw	31
   471  0583  3400               	retlw	0
   472  0584  3420               	retlw	32
   473  0585  3400               	retlw	0
   474  0586  3420               	retlw	32
   475  0587  3400               	retlw	0
   476  0588  3421               	retlw	33
   477  0589  3400               	retlw	0
   478  058A  3422               	retlw	34
   479  058B  3400               	retlw	0
   480  058C  3423               	retlw	35
   481  058D  3400               	retlw	0
   482  058E  3424               	retlw	36
   483  058F  3400               	retlw	0
   484  0590  3424               	retlw	36
   485  0591  3400               	retlw	0
   486  0592  3425               	retlw	37
   487  0593  3400               	retlw	0
   488  0594  3425               	retlw	37
   489  0595  3400               	retlw	0
   490  0596  3426               	retlw	38
   491  0597  3400               	retlw	0
   492  0598  3427               	retlw	39
   493  0599  3400               	retlw	0
   494  059A  3428               	retlw	40
   495  059B  3400               	retlw	0
   496  059C  3429               	retlw	41
   497  059D  3400               	retlw	0
   498  059E  3429               	retlw	41
   499  059F  3400               	retlw	0
   500  05A0  342A               	retlw	42
   501  05A1  3400               	retlw	0
   502  05A2  342A               	retlw	42
   503  05A3  3400               	retlw	0
   504  05A4  342B               	retlw	43
   505  05A5  3400               	retlw	0
   506  05A6  342C               	retlw	44
   507  05A7  3400               	retlw	0
   508  05A8  342C               	retlw	44
   509  05A9  3400               	retlw	0
   510  05AA  342D               	retlw	45
   511  05AB  3400               	retlw	0
   512  05AC  342E               	retlw	46
   513  05AD  3400               	retlw	0
   514  05AE  342E               	retlw	46
   515  05AF  3400               	retlw	0
   516  05B0  342F               	retlw	47
   517  05B1  3400               	retlw	0
   518  05B2  3430               	retlw	48
   519  05B3  3400               	retlw	0
   520  05B4  3431               	retlw	49
   521  05B5  3400               	retlw	0
   522  05B6  3431               	retlw	49
   523  05B7  3400               	retlw	0
   524  05B8  3432               	retlw	50
   525  05B9  3400               	retlw	0
   526  05BA  3433               	retlw	51
   527  05BB  3400               	retlw	0
   528  05BC  3433               	retlw	51
   529  05BD  3400               	retlw	0
   530  05BE  3434               	retlw	52
   531  05BF  3400               	retlw	0
   532  05C0  3435               	retlw	53
   533  05C1  3400               	retlw	0
   534  05C2  3435               	retlw	53
   535  05C3  3400               	retlw	0
   536  05C4  3436               	retlw	54
   537  05C5  3400               	retlw	0
   538  05C6  3437               	retlw	55
   539  05C7  3400               	retlw	0
   540  05C8  3437               	retlw	55
   541  05C9  3400               	retlw	0
   542  05CA  3438               	retlw	56
   543  05CB  3400               	retlw	0
   544  05CC  3439               	retlw	57
   545  05CD  3400               	retlw	0
   546  05CE  3439               	retlw	57
   547  05CF  3400               	retlw	0
   548  05D0  343A               	retlw	58
   549  05D1  3400               	retlw	0
   550  05D2  343B               	retlw	59
   551  05D3  3400               	retlw	0
   552  05D4  343B               	retlw	59
   553  05D5  3400               	retlw	0
   554  05D6  343C               	retlw	60
   555  05D7  3400               	retlw	0
   556  05D8  343D               	retlw	61
   557  05D9  3400               	retlw	0
   558  05DA  343D               	retlw	61
   559  05DB  3400               	retlw	0
   560  05DC  343E               	retlw	62
   561  05DD  3400               	retlw	0
   562  05DE  343E               	retlw	62
   563  05DF  3400               	retlw	0
   564  05E0  343F               	retlw	63
   565  05E1  3400               	retlw	0
   566  05E2  3440               	retlw	64
   567  05E3  3400               	retlw	0
   568  05E4  3440               	retlw	64
   569  05E5  3400               	retlw	0
   570  05E6  3441               	retlw	65
   571  05E7  3400               	retlw	0
   572  05E8  3441               	retlw	65
   573  05E9  3400               	retlw	0
   574  05EA  3442               	retlw	66
   575  05EB  3400               	retlw	0
   576  05EC  3443               	retlw	67
   577  05ED  3400               	retlw	0
   578  05EE  3443               	retlw	67
   579  05EF  3400               	retlw	0
   580  05F0  3444               	retlw	68
   581  05F1  3400               	retlw	0
   582  05F2  3444               	retlw	68
   583  05F3  3400               	retlw	0
   584  05F4  3445               	retlw	69
   585  05F5  3400               	retlw	0
   586  05F6  3446               	retlw	70
   587  05F7  3400               	retlw	0
   588  05F8  3446               	retlw	70
   589  05F9  3400               	retlw	0
   590  05FA  3447               	retlw	71
   591  05FB  3400               	retlw	0
   592  05FC  3448               	retlw	72
   593  05FD  3400               	retlw	0
   594  05FE  3448               	retlw	72
   595  05FF  3400               	retlw	0
   596  0600  3449               	retlw	73
   597  0601  3400               	retlw	0
   598  0602  344A               	retlw	74
   599  0603  3400               	retlw	0
   600  0604  344A               	retlw	74
   601  0605  3400               	retlw	0
   602  0606  344B               	retlw	75
   603  0607  3400               	retlw	0
   604  0608  344B               	retlw	75
   605  0609  3400               	retlw	0
   606  060A  344C               	retlw	76
   607  060B  3400               	retlw	0
   608  060C  344D               	retlw	77
   609  060D  3400               	retlw	0
   610  060E  344D               	retlw	77
   611  060F  3400               	retlw	0
   612  0610  344E               	retlw	78
   613  0611  3400               	retlw	0
   614  0612  344F               	retlw	79
   615  0613  3400               	retlw	0
   616  0614  344F               	retlw	79
   617  0615  3400               	retlw	0
   618  0616  3450               	retlw	80
   619  0617  3400               	retlw	0
   620  0618  3451               	retlw	81
   621  0619  3400               	retlw	0
   622  061A  3451               	retlw	81
   623  061B  3400               	retlw	0
   624  061C  3452               	retlw	82
   625  061D  3400               	retlw	0
   626  061E  3453               	retlw	83
   627  061F  3400               	retlw	0
   628  0620  3453               	retlw	83
   629  0621  3400               	retlw	0
   630  0622  3454               	retlw	84
   631  0623  3400               	retlw	0
   632  0624  3455               	retlw	85
   633  0625  3400               	retlw	0
   634  0626  3455               	retlw	85
   635  0627  3400               	retlw	0
   636  0628  3456               	retlw	86
   637  0629  3400               	retlw	0
   638  062A  3457               	retlw	87
   639  062B  3400               	retlw	0
   640  062C  3457               	retlw	87
   641  062D  3400               	retlw	0
   642  062E  3458               	retlw	88
   643  062F  3400               	retlw	0
   644  0630  3459               	retlw	89
   645  0631  3400               	retlw	0
   646  0632  3459               	retlw	89
   647  0633  3400               	retlw	0
   648  0634  345A               	retlw	90
   649  0635  3400               	retlw	0
   650  0636  345B               	retlw	91
   651  0637  3400               	retlw	0
   652  0638  345B               	retlw	91
   653  0639  3400               	retlw	0
   654  063A  345C               	retlw	92
   655  063B  3400               	retlw	0
   656  063C  345D               	retlw	93
   657  063D  3400               	retlw	0
   658  063E  345D               	retlw	93
   659  063F  3400               	retlw	0
   660  0640  345E               	retlw	94
   661  0641  3400               	retlw	0
   662  0642  345F               	retlw	95
   663  0643  3400               	retlw	0
   664  0644  345F               	retlw	95
   665  0645  3400               	retlw	0
   666  0646  3460               	retlw	96
   667  0647  3400               	retlw	0
   668  0648  3461               	retlw	97
   669  0649  3400               	retlw	0
   670  064A  3462               	retlw	98
   671  064B  3400               	retlw	0
   672  064C  3462               	retlw	98
   673  064D  3400               	retlw	0
   674  064E  3463               	retlw	99
   675  064F  3400               	retlw	0
   676  0650  3464               	retlw	100
   677  0651  3400               	retlw	0
   678  0652  3464               	retlw	100
   679  0653  3400               	retlw	0
   680  0654  3465               	retlw	101
   681  0655  3400               	retlw	0
   682  0656  3466               	retlw	102
   683  0657  3400               	retlw	0
   684  0658  3467               	retlw	103
   685  0659  3400               	retlw	0
   686  065A  3468               	retlw	104
   687  065B  3400               	retlw	0
   688  065C  3468               	retlw	104
   689  065D  3400               	retlw	0
   690  065E  3469               	retlw	105
   691  065F  3400               	retlw	0
   692  0660  346A               	retlw	106
   693  0661  3400               	retlw	0
   694  0662  346A               	retlw	106
   695  0663  3400               	retlw	0
   696  0664  346B               	retlw	107
   697  0665  3400               	retlw	0
   698  0666  346C               	retlw	108
   699  0667  3400               	retlw	0
   700  0668  346D               	retlw	109
   701  0669  3400               	retlw	0
   702  066A  346E               	retlw	110
   703  066B  3400               	retlw	0
   704  066C  346F               	retlw	111
   705  066D  3400               	retlw	0
   706  066E  346F               	retlw	111
   707  066F  3400               	retlw	0
   708  0670  3470               	retlw	112
   709  0671  3400               	retlw	0
   710  0672  3471               	retlw	113
   711  0673  3400               	retlw	0
   712  0674  3471               	retlw	113
   713  0675  3400               	retlw	0
   714  0676  3472               	retlw	114
   715  0677  3400               	retlw	0
   716  0678  3473               	retlw	115
   717  0679  3400               	retlw	0
   718  067A  3474               	retlw	116
   719  067B  3400               	retlw	0
   720  067C  3475               	retlw	117
   721  067D  3400               	retlw	0
   722  067E  3476               	retlw	118
   723  067F  3400               	retlw	0
   724  0680  3477               	retlw	119
   725  0681  3400               	retlw	0
   726  0682  3478               	retlw	120
   727  0683  3400               	retlw	0
   728  0684  3479               	retlw	121
   729  0685  3400               	retlw	0
   730  0686  347A               	retlw	122
   731  0687  3400               	retlw	0
   732  0688  347B               	retlw	123
   733  0689  3400               	retlw	0
   734  068A  347C               	retlw	124
   735  068B  3400               	retlw	0
   736  068C  347D               	retlw	125
   737  068D  3400               	retlw	0
   738  068E  347E               	retlw	126
   739  068F  3400               	retlw	0
   740  0690  347F               	retlw	127
   741  0691  3400               	retlw	0
   742  0692  3480               	retlw	128
   743  0693  3400               	retlw	0
   744  0694  3481               	retlw	129
   745  0695  3400               	retlw	0
   746  0696  3482               	retlw	130
   747  0697  3400               	retlw	0
   748  0698  3483               	retlw	131
   749  0699  3400               	retlw	0
   750  069A  3484               	retlw	132
   751  069B  3400               	retlw	0
   752  069C  3485               	retlw	133
   753  069D  3400               	retlw	0
   754  069E  3486               	retlw	134
   755  069F  3400               	retlw	0
   756  06A0  3487               	retlw	135
   757  06A1  3400               	retlw	0
   758  06A2  3488               	retlw	136
   759  06A3  3400               	retlw	0
   760  06A4  348A               	retlw	138
   761  06A5  3400               	retlw	0
   762  06A6  348B               	retlw	139
   763  06A7  3400               	retlw	0
   764  06A8  348C               	retlw	140
   765  06A9  3400               	retlw	0
   766  06AA  348D               	retlw	141
   767  06AB  3400               	retlw	0
   768  06AC  348E               	retlw	142
   769  06AD  3400               	retlw	0
   770  06AE  3490               	retlw	144
   771  06AF  3400               	retlw	0
   772  06B0  3491               	retlw	145
   773  06B1  3400               	retlw	0
   774  06B2  3492               	retlw	146
   775  06B3  3400               	retlw	0
   776  06B4  3494               	retlw	148
   777  06B5  3400               	retlw	0
   778  06B6  3496               	retlw	150
   779  06B7  3400               	retlw	0
   780  06B8  3497               	retlw	151
   781  06B9  3400               	retlw	0
   782  06BA  3498               	retlw	152
   783  06BB  3400               	retlw	0
   784  06BC  3499               	retlw	153
   785  06BD  3400               	retlw	0
   786  06BE  349B               	retlw	155
   787  06BF  3400               	retlw	0
   788  06C0  349C               	retlw	156
   789  06C1  3400               	retlw	0
   790  06C2  349D               	retlw	157
   791  06C3  3400               	retlw	0
   792  06C4  349F               	retlw	159
   793  06C5  3400               	retlw	0
   794  06C6  34A1               	retlw	161
   795  06C7  3400               	retlw	0
   796  06C8  34A3               	retlw	163
   797  06C9  3400               	retlw	0
   798  06CA  34A4               	retlw	164
   799  06CB  3400               	retlw	0
   800  06CC  34A6               	retlw	166
   801  06CD  3400               	retlw	0
   802  06CE  34A8               	retlw	168
   803  06CF  3400               	retlw	0
   804  06D0  34AA               	retlw	170
   805  06D1  3400               	retlw	0
   806  06D2  34AC               	retlw	172
   807  06D3  3400               	retlw	0
   808  06D4  34AE               	retlw	174
   809  06D5  3400               	retlw	0
   810  06D6  34B0               	retlw	176
   811  06D7  3400               	retlw	0
   812  06D8  34B3               	retlw	179
   813  06D9  3400               	retlw	0
   814  06DA  34B5               	retlw	181
   815  06DB  3400               	retlw	0
   816  06DC  34B8               	retlw	184
   817  06DD  3400               	retlw	0
   818  06DE  34BA               	retlw	186
   819  06DF  3400               	retlw	0
   820  06E0  34BC               	retlw	188
   821  06E1  3400               	retlw	0
   822  06E2  34BE               	retlw	190
   823  06E3  3400               	retlw	0
   824  06E4  34C1               	retlw	193
   825  06E5  3400               	retlw	0
   826  06E6  34C5               	retlw	197
   827  06E7  3400               	retlw	0
   828  06E8  34C9               	retlw	201
   829  06E9  3400               	retlw	0
   830  06EA  34CC               	retlw	204
   831  06EB  3400               	retlw	0
   832  06EC  34D0               	retlw	208
   833  06ED  3400               	retlw	0
   834  06EE                     __end_ofTempCheck@tempread:	
   835  001F                     _ADCON0	set	31
   836  001E                     _ADRES	set	30
   837  0005                     _PORTA	set	5
   838  0006                     _PORTB	set	6
   839  0007                     _PORTC	set	7
   840  0001                     _TMR0	set	1
   841  00F8                     _ADON	set	248
   842  00F9                     _GO_nDONE	set	249
   843  003C                     _RC4	set	60
   844  003D                     _RC5	set	61
   845  003E                     _RC6	set	62
   846  009F                     _ADCON1	set	159
   847  009D                     _FVRCON	set	157
   848  0091                     _OSCTUNE	set	145
   849  0085                     _TRISA	set	133
   850  0086                     _TRISB	set	134
   851  0087                     _TRISC	set	135
   852  0087                     _TRISCbits	set	135
   853  0484                     _IRCF0	set	1156
   854  0485                     _IRCF1	set	1157
   855  0408                     _PS0	set	1032
   856  0409                     _PS1	set	1033
   857  040A                     _PS2	set	1034
   858  040B                     _PSA	set	1035
   859  040D                     _T0CS	set	1037
   860  040C                     _T0SE	set	1036
   861  0185                     _ANSELA	set	389
   862  0186                     _ANSELB	set	390
   863  0187                     _ANSELC	set	391
   864  06EE                     STR_1:	
   865  06EE  3449               	retlw	73	;'I'
   866  06EF  346E               	retlw	110	;'n'
   867  06F0  3469               	retlw	105	;'i'
   868  06F1  3474               	retlw	116	;'t'
   869  06F2  3469               	retlw	105	;'i'
   870  06F3  3461               	retlw	97	;'a'
   871  06F4  346C               	retlw	108	;'l'
   872  06F5  3469               	retlw	105	;'i'
   873  06F6  347A               	retlw	122	;'z'
   874  06F7  3469               	retlw	105	;'i'
   875  06F8  346E               	retlw	110	;'n'
   876  06F9  3467               	retlw	103	;'g'
   877  06FA  3420               	retlw	32	;' '
   878  06FB  342E               	retlw	46	;'.'
   879  06FC  342E               	retlw	46	;'.'
   880  06FD  342E               	retlw	46	;'.'
   881  06FE  3400               	retlw	0
   882  06FF                     STR_16:	
   883  06FF  344F               	retlw	79	;'O'
   884  0700  3475               	retlw	117	;'u'
   885  0701  3474               	retlw	116	;'t'
   886  0702  3420               	retlw	32	;' '
   887  0703  3454               	retlw	84	;'T'
   888  0704  3465               	retlw	101	;'e'
   889  0705  346D               	retlw	109	;'m'
   890  0706  3470               	retlw	112	;'p'
   891  0707  343A               	retlw	58	;':'
   892  0708  3400               	retlw	0
   893  0709                     STR_14:	
   894  0709  3449               	retlw	73	;'I'
   895  070A  346E               	retlw	110	;'n'
   896  070B  3420               	retlw	32	;' '
   897  070C  3454               	retlw	84	;'T'
   898  070D  3465               	retlw	101	;'e'
   899  070E  346D               	retlw	109	;'m'
   900  070F  3470               	retlw	112	;'p'
   901  0710  343A               	retlw	58	;':'
   902  0711  3400               	retlw	0
   903  0712                     STR_15:	
   904  0712  3425               	retlw	37	;'%'
   905  0713  3430               	retlw	48	;'0'
   906  0714  3446               	retlw	70	;'F'
   907  0715  3400               	retlw	0
   908  0716                     STR_7:	
   909  0716  3420               	retlw	32	;' '
   910  0717  3400               	retlw	0
   911  0718                     STR_13:	
   912  0718  3421               	retlw	33	;'!'
   913  0719  3400               	retlw	0
   914  071A                     STR_2:	
   915  071A  3441               	retlw	65	;'A'
   916  071B  3400               	retlw	0
   917  071C                     STR_8:	
   918  071C  3444               	retlw	68	;'D'
   919  071D  3400               	retlw	0
   920  071E                     STR_5:	
   921  071E  3448               	retlw	72	;'H'
   922  071F  3400               	retlw	0
   923  0720                     STR_11:	
   924  0720  3449               	retlw	73	;'I'
   925  0721  3400               	retlw	0
   926  0722                     STR_3:	
   927  0722  344C               	retlw	76	;'L'
   928  0723  3400               	retlw	0
   929  0724                     STR_4:	
   930  0724  344F               	retlw	79	;'O'
   931  0725  3400               	retlw	0
   932  0726                     STR_10:	
   933  0726  3456               	retlw	86	;'V'
   934  0727  3400               	retlw	0
   935  071A                     
   936                           ; #config settings
   937  0000                     
   938                           	psect	cinit
   939  07E8                     start_initialization:	
   940  07E8                     __initialization:	
   941                           
   942                           ; Clear objects allocated to BANK0
   943  07E8  01BD               	clrf	__pbssBANK0& (0+127)
   944  07E9  01BE               	clrf	(__pbssBANK0+1)& (0+127)
   945  07EA  01BF               	clrf	(__pbssBANK0+2)& (0+127)
   946  07EB  01C0               	clrf	(__pbssBANK0+3)& (0+127)
   947  07EC  01C1               	clrf	(__pbssBANK0+4)& (0+127)
   948  07ED  01C2               	clrf	(__pbssBANK0+5)& (0+127)
   949                           
   950                           ; Initialize objects allocated to BANK0
   951  07EE  214A               	fcall	__pidataBANK0	;fetch initializer
   952  07EF  00B5               	movwf	__pdataBANK0& (0+127)
   953  07F0  214B               	fcall	__pidataBANK0+1	;fetch initializer
   954  07F1  00B6               	movwf	(__pdataBANK0+1)& (0+127)
   955  07F2  214C               	fcall	__pidataBANK0+2	;fetch initializer
   956  07F3  00B7               	movwf	(__pdataBANK0+2)& (0+127)
   957  07F4  214D               	fcall	__pidataBANK0+3	;fetch initializer
   958  07F5  00B8               	movwf	(__pdataBANK0+3)& (0+127)
   959  07F6  214E               	fcall	__pidataBANK0+4	;fetch initializer
   960  07F7  00B9               	movwf	(__pdataBANK0+4)& (0+127)
   961  07F8  214F               	fcall	__pidataBANK0+5	;fetch initializer
   962  07F9  00BA               	movwf	(__pdataBANK0+5)& (0+127)
   963  07FA  2150               	fcall	__pidataBANK0+6	;fetch initializer
   964  07FB  00BB               	movwf	(__pdataBANK0+6)& (0+127)
   965  07FC  2151               	fcall	__pidataBANK0+7	;fetch initializer
   966  07FD  00BC               	movwf	(__pdataBANK0+7)& (0+127)
   967  07FE                     end_of_initialization:	
   968                           ;End of C runtime variable initialization code
   969                           
   970  07FE                     __end_of__initialization:	
   971  07FE  0183               	clrf	3
   972  07FF  2BC8               	ljmp	_main	;jump to C main() function
   973                           
   974                           	psect	bssBANK0
   975  003D                     __pbssBANK0:	
   976  003D                     LCDWriteInt@F1072:	
   977  003D                     	ds	5
   978  0042                     _sl:	
   979  0042                     	ds	1
   980                           
   981                           	psect	dataBANK0
   982  0035                     __pdataBANK0:	
   983  0035                     ___cgram:	
   984  0035                     	ds	8
   985                           
   986                           	psect	cstackCOMMON
   987  0070                     __pcstackCOMMON:	
   988  0070                     ?_LCDBusyLoop:	
   989  0070                     ??_LCDBusyLoop:	
   990                           ; 0 bytes @ 0x0
   991                           
   992  0070                     ?_ConfigureOscillator:	
   993                           ; 0 bytes @ 0x0
   994                           
   995  0070                     ??_ConfigureOscillator:	
   996                           ; 0 bytes @ 0x0
   997                           
   998  0070                     ?_Init:	
   999                           ; 0 bytes @ 0x0
  1000                           
  1001  0070                     ??_Init:	
  1002                           ; 0 bytes @ 0x0
  1003                           
  1004  0070                     ?_TempCheck:	
  1005                           ; 0 bytes @ 0x0
  1006                           
  1007  0070                     ?_ADCInit:	
  1008                           ; 0 bytes @ 0x0
  1009                           
  1010  0070                     ??_ADCInit:	
  1011                           ; 0 bytes @ 0x0
  1012                           
  1013  0070                     ??_ADCRead:	
  1014                           ; 0 bytes @ 0x0
  1015                           
  1016  0070                     ?_LCDInit:	
  1017                           ; 0 bytes @ 0x0
  1018                           
  1019  0070                     ?_main:	
  1020                           ; 0 bytes @ 0x0
  1021                           
  1022  0070                     ?_ADCRead:	
  1023                           ; 0 bytes @ 0x0
  1024                           
  1025  0070                     ?___awdiv:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0070                     ?___awmod:	
  1029                           ; 2 bytes @ 0x0
  1030                           
  1031  0070                     ___awdiv@divisor:	
  1032                           ; 2 bytes @ 0x0
  1033                           
  1034  0070                     ___awmod@divisor:	
  1035                           ; 2 bytes @ 0x0
  1036                           
  1037                           
  1038                           ; 2 bytes @ 0x0
  1039  0070                     	ds	1
  1040  0071                     ADCRead@ch:	
  1041                           
  1042                           ; 1 bytes @ 0x1
  1043  0071                     	ds	1
  1044  0072                     LCDBusyLoop@busy:	
  1045  0072                     ___awdiv@dividend:	
  1046                           ; 1 bytes @ 0x2
  1047                           
  1048  0072                     ___awmod@dividend:	
  1049                           ; 2 bytes @ 0x2
  1050                           
  1051                           
  1052                           ; 2 bytes @ 0x2
  1053  0072                     	ds	1
  1054  0073                     LCDBusyLoop@temp:	
  1055                           
  1056                           ; 1 bytes @ 0x3
  1057  0073                     	ds	1
  1058  0074                     ??___awdiv:	
  1059  0074                     ??___awmod:	
  1060                           ; 0 bytes @ 0x4
  1061                           
  1062  0074                     LCDBusyLoop@status:	
  1063                           ; 0 bytes @ 0x4
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0x4
  1067  0074                     	ds	1
  1068  0075                     ?_LCDByte:	
  1069  0075                     LCDByte@isdata:	
  1070                           ; 0 bytes @ 0x5
  1071                           
  1072  0075                     ___awdiv@counter:	
  1073                           ; 1 bytes @ 0x5
  1074                           
  1075  0075                     ___awmod@counter:	
  1076                           ; 1 bytes @ 0x5
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x5
  1080  0075                     	ds	1
  1081  0076                     ??_LCDByte:	
  1082  0076                     ___awdiv@sign:	
  1083                           ; 0 bytes @ 0x6
  1084                           
  1085  0076                     ___awmod@sign:	
  1086                           ; 1 bytes @ 0x6
  1087                           
  1088                           
  1089                           ; 1 bytes @ 0x6
  1090  0076                     	ds	1
  1091  0077                     ___awdiv@quotient:	
  1092                           
  1093                           ; 2 bytes @ 0x7
  1094  0077                     	ds	1
  1095  0078                     LCDByte@hn:	
  1096                           
  1097                           ; 1 bytes @ 0x8
  1098  0078                     	ds	1
  1099  0079                     LCDByte@ln:	
  1100                           
  1101                           ; 1 bytes @ 0x9
  1102  0079                     	ds	1
  1103  007A                     LCDByte@c:	
  1104                           
  1105                           ; 1 bytes @ 0xA
  1106  007A                     	ds	1
  1107  007B                     LCDByte@temp:	
  1108                           
  1109                           ; 1 bytes @ 0xB
  1110  007B                     	ds	1
  1111  007C                     ?_LCDWriteString:	
  1112  007C                     ??_LCDWriteInt:	
  1113                           ; 0 bytes @ 0xC
  1114                           
  1115  007C                     ?_LCDGotoXY:	
  1116                           ; 0 bytes @ 0xC
  1117                           
  1118  007C                     LCDInit@style:	
  1119                           ; 0 bytes @ 0xC
  1120                           
  1121  007C                     LCDGotoXY@y:	
  1122                           ; 1 bytes @ 0xC
  1123                           
  1124  007C                     LCDWriteString@msg:	
  1125                           ; 1 bytes @ 0xC
  1126                           
  1127                           
  1128                           ; 2 bytes @ 0xC
  1129  007C                     	ds	1
  1130  007D                     ??_LCDGotoXY:	
  1131  007D                     LCDInit@__i:	
  1132                           ; 0 bytes @ 0xD
  1133                           
  1134  007D                     LCDGotoXY@x:	
  1135                           ; 1 bytes @ 0xD
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0xD
  1139  007D                     	ds	1
  1140                           
  1141                           	psect	cstackBANK0
  1142  0020                     __pcstackBANK0:	
  1143  0020                     ??_LCDInit:	
  1144  0020                     ??_LCDWriteString:	
  1145                           ; 0 bytes @ 0x0
  1146                           
  1147  0020                     ?_LCDWriteInt:	
  1148                           ; 0 bytes @ 0x0
  1149                           
  1150  0020                     LCDWriteInt@val:	
  1151                           ; 0 bytes @ 0x0
  1152                           
  1153                           
  1154                           ; 2 bytes @ 0x0
  1155  0020                     	ds	1
  1156  0021                     LCDWriteString@cc:	
  1157                           
  1158                           ; 1 bytes @ 0x1
  1159  0021                     	ds	1
  1160  0022                     LCDWriteInt@field_length:	
  1161                           
  1162                           ; 1 bytes @ 0x2
  1163  0022                     	ds	1
  1164  0023                     LCDWriteInt@str:	
  1165                           
  1166                           ; 5 bytes @ 0x3
  1167  0023                     	ds	5
  1168  0028                     LCDWriteInt@j:	
  1169                           
  1170                           ; 2 bytes @ 0x8
  1171  0028                     	ds	2
  1172  002A                     LCDWriteInt@i:	
  1173                           
  1174                           ; 2 bytes @ 0xA
  1175  002A                     	ds	2
  1176  002C                     ??_TempCheck:	
  1177                           
  1178                           ; 0 bytes @ 0xC
  1179  002C                     	ds	2
  1180  002E                     TempCheck@tempin:	
  1181                           
  1182                           ; 2 bytes @ 0xE
  1183  002E                     	ds	2
  1184  0030                     TempCheck@tempout:	
  1185                           
  1186                           ; 2 bytes @ 0x10
  1187  0030                     	ds	2
  1188  0032                     ??_main:	
  1189                           
  1190                           ; 0 bytes @ 0x12
  1191  0032                     	ds	3
  1192                           
  1193                           	psect	maintext
  1194  03C8                     __pmaintext:	
  1195 ;;
  1196 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1197 ;;
  1198 ;; *************** function _main *****************
  1199 ;; Defined at:
  1200 ;;		line 24 in file "main.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;		None               void
  1207 ;; Registers used:
  1208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : B00/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1
  1214 ;;      Params:         0       0       0
  1215 ;;      Locals:         0       0       0
  1216 ;;      Temps:          0       3       0
  1217 ;;      Totals:         0       3       0
  1218 ;;Total ram usage:        3 bytes
  1219 ;; Hardware stack levels required when called:    4
  1220 ;; This function calls:
  1221 ;;		_ConfigureOscillator
  1222 ;;		_Init
  1223 ;;		_LCDByte
  1224 ;;		_LCDGotoXY
  1225 ;;		_LCDInit
  1226 ;;		_LCDWriteString
  1227 ;;		_TempCheck
  1228 ;; This function is called by:
  1229 ;;		Startup code after reset
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function _main
  1235  03C8                     _main:	
  1236                           
  1237                           ;main.c: 26: ConfigureOscillator();
  1238                           
  1239                           ;incstack = 0
  1240                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1241  03C8  2152               	fcall	_ConfigureOscillator
  1242                           
  1243                           ;main.c: 28: Init();
  1244  03C9  27C2               	fcall	_Init
  1245                           
  1246                           ;main.c: 30: _delay((unsigned long)((750)*(2000000L/4000.0)));
  1247  03CA  3002               	movlw	2
  1248  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1249  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1250  03CD  00B4               	movwf	??_main+2
  1251  03CE  30E7               	movlw	231
  1252  03CF  00B3               	movwf	??_main+1
  1253  03D0  3000               	movlw	0
  1254  03D1  00B2               	movwf	??_main
  1255  03D2                     u777:	
  1256  03D2  0BB2               	decfsz	??_main,f
  1257  03D3  2BD2               	goto	u777
  1258  03D4  0BB3               	decfsz	??_main+1,f
  1259  03D5  2BD2               	goto	u777
  1260  03D6  0BB4               	decfsz	??_main+2,f
  1261  03D7  2BD2               	goto	u777
  1262  03D8  0000               	nop
  1263                           
  1264                           ;main.c: 32: LCDInit(0B00000000);
  1265  03D9  3000               	movlw	0
  1266  03DA  22A4               	fcall	_LCDInit
  1267                           
  1268                           ;main.c: 33: _delay((unsigned long)((500)*(2000000L/4000.0)));
  1269  03DB  3002               	movlw	2
  1270  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1271  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1272  03DE  00B4               	movwf	??_main+2
  1273  03DF  3045               	movlw	69
  1274  03E0  00B3               	movwf	??_main+1
  1275  03E1  30A9               	movlw	169
  1276  03E2  00B2               	movwf	??_main
  1277  03E3                     u787:	
  1278  03E3  0BB2               	decfsz	??_main,f
  1279  03E4  2BE3               	goto	u787
  1280  03E5  0BB3               	decfsz	??_main+1,f
  1281  03E6  2BE3               	goto	u787
  1282  03E7  0BB4               	decfsz	??_main+2,f
  1283  03E8  2BE3               	goto	u787
  1284  03E9  2BEA               	nop2
  1285                           
  1286                           ;main.c: 35: (LCDByte(0b00000001,0));
  1287  03EA  01F5               	clrf	LCDByte@isdata
  1288  03EB  3001               	movlw	1
  1289  03EC  2195               	fcall	_LCDByte
  1290                           
  1291                           ;main.c: 36: LCDGotoXY(0,0);
  1292  03ED  01FC               	clrf	LCDGotoXY@y
  1293  03EE  3000               	movlw	0
  1294  03EF  2163               	fcall	_LCDGotoXY
  1295                           
  1296                           ;main.c: 37: { LCDGotoXY(0,0); LCDWriteString("Initializing ...");};
  1297  03F0  01FC               	clrf	LCDGotoXY@y
  1298  03F1  3000               	movlw	0
  1299  03F2  2163               	fcall	_LCDGotoXY
  1300  03F3  30EE               	movlw	low (STR_1| (0+32768))
  1301  03F4  00FC               	movwf	LCDWriteString@msg
  1302  03F5  3086               	movlw	high (STR_1| (0+32768))
  1303  03F6  00FD               	movwf	LCDWriteString@msg+1
  1304  03F7  21CF               	fcall	_LCDWriteString
  1305                           
  1306                           ;main.c: 38: { LCDGotoXY(2,1); LCDWriteString("A");};
  1307  03F8  01FC               	clrf	LCDGotoXY@y
  1308  03F9  0AFC               	incf	LCDGotoXY@y,f
  1309  03FA  3002               	movlw	2
  1310  03FB  2163               	fcall	_LCDGotoXY
  1311  03FC  301A               	movlw	low (STR_2| (0+32768))
  1312  03FD  00FC               	movwf	LCDWriteString@msg
  1313  03FE  3087               	movlw	high (STR_2| (0+32768))
  1314  03FF  00FD               	movwf	LCDWriteString@msg+1
  1315  0400  21CF               	fcall	_LCDWriteString
  1316                           
  1317                           ;main.c: 39: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1318  0401  3082               	movlw	130
  1319  0402  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0403  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0404  00B3               	movwf	??_main+1
  1322  0405  30DD               	movlw	221
  1323  0406  00B2               	movwf	??_main
  1324  0407                     u797:	
  1325  0407  0BB2               	decfsz	??_main,f
  1326  0408  2C07               	goto	u797
  1327  0409  0BB3               	decfsz	??_main+1,f
  1328  040A  2C07               	goto	u797
  1329  040B  2C0C               	nop2
  1330                           
  1331                           ;main.c: 40: { LCDGotoXY(3,1); LCDWriteString("L");};
  1332  040C  01FC               	clrf	LCDGotoXY@y
  1333  040D  0AFC               	incf	LCDGotoXY@y,f
  1334  040E  3003               	movlw	3
  1335  040F  2163               	fcall	_LCDGotoXY
  1336  0410  3022               	movlw	low (STR_3| (0+32768))
  1337  0411  00FC               	movwf	LCDWriteString@msg
  1338  0412  3087               	movlw	high (STR_3| (0+32768))
  1339  0413  00FD               	movwf	LCDWriteString@msg+1
  1340  0414  21CF               	fcall	_LCDWriteString
  1341                           
  1342                           ;main.c: 41: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1343  0415  3082               	movlw	130
  1344  0416  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0417  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0418  00B3               	movwf	??_main+1
  1347  0419  30DD               	movlw	221
  1348  041A  00B2               	movwf	??_main
  1349  041B                     u807:	
  1350  041B  0BB2               	decfsz	??_main,f
  1351  041C  2C1B               	goto	u807
  1352  041D  0BB3               	decfsz	??_main+1,f
  1353  041E  2C1B               	goto	u807
  1354  041F  2C20               	nop2
  1355                           
  1356                           ;main.c: 42: { LCDGotoXY(4,1); LCDWriteString("O");};
  1357  0420  01FC               	clrf	LCDGotoXY@y
  1358  0421  0AFC               	incf	LCDGotoXY@y,f
  1359  0422  3004               	movlw	4
  1360  0423  2163               	fcall	_LCDGotoXY
  1361  0424  3024               	movlw	low (STR_4| (0+32768))
  1362  0425  00FC               	movwf	LCDWriteString@msg
  1363  0426  3087               	movlw	high (STR_4| (0+32768))
  1364  0427  00FD               	movwf	LCDWriteString@msg+1
  1365  0428  21CF               	fcall	_LCDWriteString
  1366                           
  1367                           ;main.c: 43: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1368  0429  3082               	movlw	130
  1369  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1370  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1371  042C  00B3               	movwf	??_main+1
  1372  042D  30DD               	movlw	221
  1373  042E  00B2               	movwf	??_main
  1374  042F                     u817:	
  1375  042F  0BB2               	decfsz	??_main,f
  1376  0430  2C2F               	goto	u817
  1377  0431  0BB3               	decfsz	??_main+1,f
  1378  0432  2C2F               	goto	u817
  1379  0433  2C34               	nop2
  1380                           
  1381                           ;main.c: 44: { LCDGotoXY(5,1); LCDWriteString("H");};
  1382  0434  01FC               	clrf	LCDGotoXY@y
  1383  0435  0AFC               	incf	LCDGotoXY@y,f
  1384  0436  3005               	movlw	5
  1385  0437  2163               	fcall	_LCDGotoXY
  1386  0438  301E               	movlw	low (STR_5| (0+32768))
  1387  0439  00FC               	movwf	LCDWriteString@msg
  1388  043A  3087               	movlw	high (STR_5| (0+32768))
  1389  043B  00FD               	movwf	LCDWriteString@msg+1
  1390  043C  21CF               	fcall	_LCDWriteString
  1391                           
  1392                           ;main.c: 45: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1393  043D  3082               	movlw	130
  1394  043E  1283               	bcf	3,5	;RP0=0, select bank0
  1395  043F  1303               	bcf	3,6	;RP1=0, select bank0
  1396  0440  00B3               	movwf	??_main+1
  1397  0441  30DD               	movlw	221
  1398  0442  00B2               	movwf	??_main
  1399  0443                     u827:	
  1400  0443  0BB2               	decfsz	??_main,f
  1401  0444  2C43               	goto	u827
  1402  0445  0BB3               	decfsz	??_main+1,f
  1403  0446  2C43               	goto	u827
  1404  0447  2C48               	nop2
  1405                           
  1406                           ;main.c: 46: { LCDGotoXY(6,1); LCDWriteString("A");};
  1407  0448  01FC               	clrf	LCDGotoXY@y
  1408  0449  0AFC               	incf	LCDGotoXY@y,f
  1409  044A  3006               	movlw	6
  1410  044B  2163               	fcall	_LCDGotoXY
  1411  044C  301A               	movlw	low (STR_2| (0+32768))
  1412  044D  00FC               	movwf	LCDWriteString@msg
  1413  044E  3087               	movlw	high (STR_2| (0+32768))
  1414  044F  00FD               	movwf	LCDWriteString@msg+1
  1415  0450  21CF               	fcall	_LCDWriteString
  1416                           
  1417                           ;main.c: 47: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1418  0451  3082               	movlw	130
  1419  0452  1283               	bcf	3,5	;RP0=0, select bank0
  1420  0453  1303               	bcf	3,6	;RP1=0, select bank0
  1421  0454  00B3               	movwf	??_main+1
  1422  0455  30DD               	movlw	221
  1423  0456  00B2               	movwf	??_main
  1424  0457                     u837:	
  1425  0457  0BB2               	decfsz	??_main,f
  1426  0458  2C57               	goto	u837
  1427  0459  0BB3               	decfsz	??_main+1,f
  1428  045A  2C57               	goto	u837
  1429  045B  2C5C               	nop2
  1430                           
  1431                           ;main.c: 48: { LCDGotoXY(7,1); LCDWriteString(" ");};
  1432  045C  01FC               	clrf	LCDGotoXY@y
  1433  045D  0AFC               	incf	LCDGotoXY@y,f
  1434  045E  3007               	movlw	7
  1435  045F  2163               	fcall	_LCDGotoXY
  1436  0460  3016               	movlw	low (STR_7| (0+32768))
  1437  0461  00FC               	movwf	LCDWriteString@msg
  1438  0462  3087               	movlw	high (STR_7| (0+32768))
  1439  0463  00FD               	movwf	LCDWriteString@msg+1
  1440  0464  21CF               	fcall	_LCDWriteString
  1441                           
  1442                           ;main.c: 49: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1443  0465  3082               	movlw	130
  1444  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0468  00B3               	movwf	??_main+1
  1447  0469  30DD               	movlw	221
  1448  046A  00B2               	movwf	??_main
  1449  046B                     u847:	
  1450  046B  0BB2               	decfsz	??_main,f
  1451  046C  2C6B               	goto	u847
  1452  046D  0BB3               	decfsz	??_main+1,f
  1453  046E  2C6B               	goto	u847
  1454  046F  2C70               	nop2
  1455                           
  1456                           ;main.c: 50: { LCDGotoXY(8,1); LCDWriteString("D");};
  1457  0470  01FC               	clrf	LCDGotoXY@y
  1458  0471  0AFC               	incf	LCDGotoXY@y,f
  1459  0472  3008               	movlw	8
  1460  0473  2163               	fcall	_LCDGotoXY
  1461  0474  301C               	movlw	low (STR_8| (0+32768))
  1462  0475  00FC               	movwf	LCDWriteString@msg
  1463  0476  3087               	movlw	high (STR_8| (0+32768))
  1464  0477  00FD               	movwf	LCDWriteString@msg+1
  1465  0478  21CF               	fcall	_LCDWriteString
  1466                           
  1467                           ;main.c: 51: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1468  0479  3082               	movlw	130
  1469  047A  1283               	bcf	3,5	;RP0=0, select bank0
  1470  047B  1303               	bcf	3,6	;RP1=0, select bank0
  1471  047C  00B3               	movwf	??_main+1
  1472  047D  30DD               	movlw	221
  1473  047E  00B2               	movwf	??_main
  1474  047F                     u857:	
  1475  047F  0BB2               	decfsz	??_main,f
  1476  0480  2C7F               	goto	u857
  1477  0481  0BB3               	decfsz	??_main+1,f
  1478  0482  2C7F               	goto	u857
  1479  0483  2C84               	nop2
  1480                           
  1481                           ;main.c: 52: { LCDGotoXY(9,1); LCDWriteString("A");};
  1482  0484  01FC               	clrf	LCDGotoXY@y
  1483  0485  0AFC               	incf	LCDGotoXY@y,f
  1484  0486  3009               	movlw	9
  1485  0487  2163               	fcall	_LCDGotoXY
  1486  0488  301A               	movlw	low (STR_2| (0+32768))
  1487  0489  00FC               	movwf	LCDWriteString@msg
  1488  048A  3087               	movlw	high (STR_2| (0+32768))
  1489  048B  00FD               	movwf	LCDWriteString@msg+1
  1490  048C  21CF               	fcall	_LCDWriteString
  1491                           
  1492                           ;main.c: 53: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1493  048D  3082               	movlw	130
  1494  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1495  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0490  00B3               	movwf	??_main+1
  1497  0491  30DD               	movlw	221
  1498  0492  00B2               	movwf	??_main
  1499  0493                     u867:	
  1500  0493  0BB2               	decfsz	??_main,f
  1501  0494  2C93               	goto	u867
  1502  0495  0BB3               	decfsz	??_main+1,f
  1503  0496  2C93               	goto	u867
  1504  0497  2C98               	nop2
  1505                           
  1506                           ;main.c: 54: { LCDGotoXY(10,1); LCDWriteString("V");};
  1507  0498  01FC               	clrf	LCDGotoXY@y
  1508  0499  0AFC               	incf	LCDGotoXY@y,f
  1509  049A  300A               	movlw	10
  1510  049B  2163               	fcall	_LCDGotoXY
  1511  049C  3026               	movlw	low (STR_10| (0+32768))
  1512  049D  00FC               	movwf	LCDWriteString@msg
  1513  049E  3087               	movlw	high (STR_10| (0+32768))
  1514  049F  00FD               	movwf	LCDWriteString@msg+1
  1515  04A0  21CF               	fcall	_LCDWriteString
  1516                           
  1517                           ;main.c: 55: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1518  04A1  3082               	movlw	130
  1519  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1520  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1521  04A4  00B3               	movwf	??_main+1
  1522  04A5  30DD               	movlw	221
  1523  04A6  00B2               	movwf	??_main
  1524  04A7                     u877:	
  1525  04A7  0BB2               	decfsz	??_main,f
  1526  04A8  2CA7               	goto	u877
  1527  04A9  0BB3               	decfsz	??_main+1,f
  1528  04AA  2CA7               	goto	u877
  1529  04AB  2CAC               	nop2
  1530                           
  1531                           ;main.c: 56: { LCDGotoXY(11,1); LCDWriteString("I");};
  1532  04AC  01FC               	clrf	LCDGotoXY@y
  1533  04AD  0AFC               	incf	LCDGotoXY@y,f
  1534  04AE  300B               	movlw	11
  1535  04AF  2163               	fcall	_LCDGotoXY
  1536  04B0  3020               	movlw	low (STR_11| (0+32768))
  1537  04B1  00FC               	movwf	LCDWriteString@msg
  1538  04B2  3087               	movlw	high (STR_11| (0+32768))
  1539  04B3  00FD               	movwf	LCDWriteString@msg+1
  1540  04B4  21CF               	fcall	_LCDWriteString
  1541                           
  1542                           ;main.c: 57: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1543  04B5  3082               	movlw	130
  1544  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1545  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1546  04B8  00B3               	movwf	??_main+1
  1547  04B9  30DD               	movlw	221
  1548  04BA  00B2               	movwf	??_main
  1549  04BB                     u887:	
  1550  04BB  0BB2               	decfsz	??_main,f
  1551  04BC  2CBB               	goto	u887
  1552  04BD  0BB3               	decfsz	??_main+1,f
  1553  04BE  2CBB               	goto	u887
  1554  04BF  2CC0               	nop2
  1555                           
  1556                           ;main.c: 58: { LCDGotoXY(12,1); LCDWriteString("D");};
  1557  04C0  01FC               	clrf	LCDGotoXY@y
  1558  04C1  0AFC               	incf	LCDGotoXY@y,f
  1559  04C2  300C               	movlw	12
  1560  04C3  2163               	fcall	_LCDGotoXY
  1561  04C4  301C               	movlw	low (STR_8| (0+32768))
  1562  04C5  00FC               	movwf	LCDWriteString@msg
  1563  04C6  3087               	movlw	high (STR_8| (0+32768))
  1564  04C7  00FD               	movwf	LCDWriteString@msg+1
  1565  04C8  21CF               	fcall	_LCDWriteString
  1566                           
  1567                           ;main.c: 59: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1568  04C9  3082               	movlw	130
  1569  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1570  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1571  04CC  00B3               	movwf	??_main+1
  1572  04CD  30DD               	movlw	221
  1573  04CE  00B2               	movwf	??_main
  1574  04CF                     u897:	
  1575  04CF  0BB2               	decfsz	??_main,f
  1576  04D0  2CCF               	goto	u897
  1577  04D1  0BB3               	decfsz	??_main+1,f
  1578  04D2  2CCF               	goto	u897
  1579  04D3  2CD4               	nop2
  1580                           
  1581                           ;main.c: 60: { LCDGotoXY(13,1); LCDWriteString("!");};
  1582  04D4  01FC               	clrf	LCDGotoXY@y
  1583  04D5  0AFC               	incf	LCDGotoXY@y,f
  1584  04D6  300D               	movlw	13
  1585  04D7  2163               	fcall	_LCDGotoXY
  1586  04D8  3018               	movlw	low (STR_13| (0+32768))
  1587  04D9  00FC               	movwf	LCDWriteString@msg
  1588  04DA  3087               	movlw	high (STR_13| (0+32768))
  1589  04DB  00FD               	movwf	LCDWriteString@msg+1
  1590  04DC  21CF               	fcall	_LCDWriteString
  1591                           
  1592                           ;main.c: 61: _delay((unsigned long)((5000)*(2000000L/4000.0)));
  1593  04DD  300D               	movlw	13
  1594  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1595  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  1596  04E0  00B4               	movwf	??_main+2
  1597  04E1  30AF               	movlw	175
  1598  04E2  00B3               	movwf	??_main+1
  1599  04E3  30C1               	movlw	193
  1600  04E4  00B2               	movwf	??_main
  1601  04E5                     u907:	
  1602  04E5  0BB2               	decfsz	??_main,f
  1603  04E6  2CE5               	goto	u907
  1604  04E7  0BB3               	decfsz	??_main+1,f
  1605  04E8  2CE5               	goto	u907
  1606  04E9  0BB4               	decfsz	??_main+2,f
  1607  04EA  2CE5               	goto	u907
  1608  04EB  0000               	nop
  1609                           
  1610                           ;main.c: 62: (LCDByte(0b00000001,0));
  1611  04EC  01F5               	clrf	LCDByte@isdata
  1612  04ED  3001               	movlw	1
  1613  04EE  2195               	fcall	_LCDByte
  1614  04EF                     l1419:	
  1615                           ;main.c: 64: while (1)
  1616                           
  1617                           
  1618                           ;main.c: 65: {
  1619                           ;main.c: 66: TempCheck();
  1620  04EF  234D               	fcall	_TempCheck
  1621                           
  1622                           ;main.c: 67: _delay((unsigned long)((1000)*(2000000L/4000.0)));
  1623  04F0  3003               	movlw	3
  1624  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1625  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1626  04F3  00B4               	movwf	??_main+2
  1627  04F4  308A               	movlw	138
  1628  04F5  00B3               	movwf	??_main+1
  1629  04F6  3056               	movlw	86
  1630  04F7  00B2               	movwf	??_main
  1631  04F8                     u917:	
  1632  04F8  0BB2               	decfsz	??_main,f
  1633  04F9  2CF8               	goto	u917
  1634  04FA  0BB3               	decfsz	??_main+1,f
  1635  04FB  2CF8               	goto	u917
  1636  04FC  0BB4               	decfsz	??_main+2,f
  1637  04FD  2CF8               	goto	u917
  1638  04FE  2CFF               	nop2
  1639  04FF  2CEF               	goto	l1419
  1640  0500                     __end_of_main:	
  1641                           
  1642                           	psect	text1
  1643  034D                     __ptext1:	
  1644 ;; *************** function _TempCheck *****************
  1645 ;; Defined at:
  1646 ;;		line 71 in file "main.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  tempout         2   16[BANK0 ] unsigned int 
  1651 ;;  tempin          2   14[BANK0 ] unsigned int 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;		None               void
  1654 ;; Registers used:
  1655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1
  1661 ;;      Params:         0       0       0
  1662 ;;      Locals:         0       4       0
  1663 ;;      Temps:          0       2       0
  1664 ;;      Totals:         0       6       0
  1665 ;;Total ram usage:        6 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		_ADCInit
  1670 ;;		_ADCRead
  1671 ;;		_LCDGotoXY
  1672 ;;		_LCDWriteInt
  1673 ;;		_LCDWriteString
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function _TempCheck
  1681  034D                     _TempCheck:	
  1682                           
  1683                           ;main.c: 73: unsigned int tempin,tempout;
  1684                           ;main.c: 76: const int tempread[] = {0,0,0,0,0,0,0,0,0,0,-27,-24,-22,-20,-18,-16,-14,-12
      +                          ,-10,-9,-7,-5,-4,-2,-1,1,2,3,4,6,7,8,9,10,11,12,13,14,14,15,16,
  1685                           ;main.c: 77: 17,18,19,20,21,22,23,24,25,25,26,27,28,29,30,31,32,32,33,34,35,36,36,37,37,
      +                          38,39,40,41,41,42,42,43,44,44,45,46,46,47,48,49,49,50,51,51,52,
  1686                           ;main.c: 78: 53,53,54,55,55,56,57,57,58,59,59,60,61,61,62,62,63,64,64,65,65,66,67,67,68,
      +                          68,69,70,70,71,72,72,73,74,74,75,75,76,77,77,78,79,79,80,81,81,
  1687                           ;main.c: 79: 82,83,83,84,85,85,86,87,87,88,89,89,90,91,91,92,93,93,94,95,95,96,97,98,98,
      +                          99,100,100,101,102,103,104,104,105,106,106,107,108,109,110,111,
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _TempCheck: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1691  034D  2145               	fcall	_ADCInit
  1692                           
  1693                           ;main.c: 85: tempin = ADCRead(2);
  1694  034E  3002               	movlw	2
  1695  034F  2178               	fcall	_ADCRead
  1696  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0352  00AC               	movwf	??_TempCheck
  1699  0353  01AD               	clrf	??_TempCheck+1
  1700  0354  082C               	movf	??_TempCheck,w
  1701  0355  00AE               	movwf	TempCheck@tempin
  1702  0356  082D               	movf	??_TempCheck+1,w
  1703  0357  00AF               	movwf	TempCheck@tempin+1
  1704                           
  1705                           ;main.c: 86: tempin = tempread[tempin];
  1706  0358  082F               	movf	TempCheck@tempin+1,w
  1707  0359  00AD               	movwf	??_TempCheck+1
  1708  035A  082E               	movf	TempCheck@tempin,w
  1709  035B  00AC               	movwf	??_TempCheck
  1710  035C  1003               	clrc
  1711  035D  0DAC               	rlf	??_TempCheck,f
  1712  035E  0DAD               	rlf	??_TempCheck+1,f
  1713  035F  3085               	movlw	high (TempCheck@tempread| (0+32768))
  1714  0360  072D               	addwf	??_TempCheck+1,w
  1715  0361  00FF               	movwf	127
  1716  0362  3012               	movlw	low (TempCheck@tempread| (0+32768))
  1717  0363  072C               	addwf	??_TempCheck,w
  1718  0364  0084               	movwf	4
  1719  0365  1803               	skipnc
  1720  0366  0AFF               	incf	127,f
  1721  0367  2500               	fcall	stringtab
  1722  0368  00AE               	movwf	TempCheck@tempin
  1723  0369  2500               	fcall	stringtab
  1724  036A  00AF               	movwf	TempCheck@tempin+1
  1725                           
  1726                           ;main.c: 88: { LCDGotoXY(0,0); LCDWriteString("In Temp:");};
  1727  036B  01FC               	clrf	LCDGotoXY@y
  1728  036C  3000               	movlw	0
  1729  036D  2163               	fcall	_LCDGotoXY
  1730  036E  3009               	movlw	low (STR_14| (0+32768))
  1731  036F  00FC               	movwf	LCDWriteString@msg
  1732  0370  3087               	movlw	high (STR_14| (0+32768))
  1733  0371  00FD               	movwf	LCDWriteString@msg+1
  1734  0372  21CF               	fcall	_LCDWriteString
  1735                           
  1736                           ;main.c: 89: { LCDGotoXY(10,0); LCDWriteInt(tempin,3);};
  1737  0373  01FC               	clrf	LCDGotoXY@y
  1738  0374  300A               	movlw	10
  1739  0375  2163               	fcall	_LCDGotoXY
  1740  0376  1283               	bcf	3,5	;RP0=0, select bank0
  1741  0377  1303               	bcf	3,6	;RP1=0, select bank0
  1742  0378  082F               	movf	TempCheck@tempin+1,w
  1743  0379  00A1               	movwf	LCDWriteInt@val+1
  1744  037A  082E               	movf	TempCheck@tempin,w
  1745  037B  00A0               	movwf	LCDWriteInt@val
  1746  037C  3003               	movlw	3
  1747  037D  00AC               	movwf	??_TempCheck
  1748  037E  082C               	movf	??_TempCheck,w
  1749  037F  00A2               	movwf	LCDWriteInt@field_length
  1750  0380  2728               	fcall	_LCDWriteInt
  1751                           
  1752                           ;main.c: 90: { LCDGotoXY(13,0); LCDWriteString("%0F");}
  1753  0381  01FC               	clrf	LCDGotoXY@y
  1754  0382  300D               	movlw	13
  1755  0383  2163               	fcall	_LCDGotoXY
  1756  0384  3012               	movlw	low (STR_15| (0+32768))
  1757  0385  00FC               	movwf	LCDWriteString@msg
  1758  0386  3087               	movlw	high (STR_15| (0+32768))
  1759  0387  00FD               	movwf	LCDWriteString@msg+1
  1760  0388  21CF               	fcall	_LCDWriteString
  1761                           
  1762                           ;main.c: 92: tempout = ADCRead(3);
  1763  0389  3003               	movlw	3
  1764  038A  2178               	fcall	_ADCRead
  1765  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1766  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1767  038D  00AC               	movwf	??_TempCheck
  1768  038E  01AD               	clrf	??_TempCheck+1
  1769  038F  082C               	movf	??_TempCheck,w
  1770  0390  00B0               	movwf	TempCheck@tempout
  1771  0391  082D               	movf	??_TempCheck+1,w
  1772  0392  00B1               	movwf	TempCheck@tempout+1
  1773                           
  1774                           ;main.c: 93: tempout = tempread[tempout];
  1775  0393  0831               	movf	TempCheck@tempout+1,w
  1776  0394  00AD               	movwf	??_TempCheck+1
  1777  0395  0830               	movf	TempCheck@tempout,w
  1778  0396  00AC               	movwf	??_TempCheck
  1779  0397  1003               	clrc
  1780  0398  0DAC               	rlf	??_TempCheck,f
  1781  0399  0DAD               	rlf	??_TempCheck+1,f
  1782  039A  3085               	movlw	high (TempCheck@tempread| (0+32768))
  1783  039B  072D               	addwf	??_TempCheck+1,w
  1784  039C  00FF               	movwf	127
  1785  039D  3012               	movlw	low (TempCheck@tempread| (0+32768))
  1786  039E  072C               	addwf	??_TempCheck,w
  1787  039F  0084               	movwf	4
  1788  03A0  1803               	skipnc
  1789  03A1  0AFF               	incf	127,f
  1790  03A2  2500               	fcall	stringtab
  1791  03A3  00B0               	movwf	TempCheck@tempout
  1792  03A4  2500               	fcall	stringtab
  1793  03A5  00B1               	movwf	TempCheck@tempout+1
  1794                           
  1795                           ;main.c: 95: { LCDGotoXY(0,1); LCDWriteString("Out Temp:");};
  1796  03A6  01FC               	clrf	LCDGotoXY@y
  1797  03A7  0AFC               	incf	LCDGotoXY@y,f
  1798  03A8  3000               	movlw	0
  1799  03A9  2163               	fcall	_LCDGotoXY
  1800  03AA  30FF               	movlw	low (STR_16| (0+32768))
  1801  03AB  00FC               	movwf	LCDWriteString@msg
  1802  03AC  3086               	movlw	high (STR_16| (0+32768))
  1803  03AD  00FD               	movwf	LCDWriteString@msg+1
  1804  03AE  21CF               	fcall	_LCDWriteString
  1805                           
  1806                           ;main.c: 96: { LCDGotoXY(10,1); LCDWriteInt(tempout,3);};
  1807  03AF  01FC               	clrf	LCDGotoXY@y
  1808  03B0  0AFC               	incf	LCDGotoXY@y,f
  1809  03B1  300A               	movlw	10
  1810  03B2  2163               	fcall	_LCDGotoXY
  1811  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1812  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1813  03B5  0831               	movf	TempCheck@tempout+1,w
  1814  03B6  00A1               	movwf	LCDWriteInt@val+1
  1815  03B7  0830               	movf	TempCheck@tempout,w
  1816  03B8  00A0               	movwf	LCDWriteInt@val
  1817  03B9  3003               	movlw	3
  1818  03BA  00AC               	movwf	??_TempCheck
  1819  03BB  082C               	movf	??_TempCheck,w
  1820  03BC  00A2               	movwf	LCDWriteInt@field_length
  1821  03BD  2728               	fcall	_LCDWriteInt
  1822                           
  1823                           ;main.c: 97: { LCDGotoXY(13,1); LCDWriteString("%0F");}
  1824  03BE  01FC               	clrf	LCDGotoXY@y
  1825  03BF  0AFC               	incf	LCDGotoXY@y,f
  1826  03C0  300D               	movlw	13
  1827  03C1  2163               	fcall	_LCDGotoXY
  1828  03C2  3012               	movlw	low (STR_15| (0+32768))
  1829  03C3  00FC               	movwf	LCDWriteString@msg
  1830  03C4  3087               	movlw	high (STR_15| (0+32768))
  1831  03C5  00FD               	movwf	LCDWriteString@msg+1
  1832  03C6  21CF               	fcall	_LCDWriteString
  1833  03C7  0008               	return
  1834  03C8                     __end_of_TempCheck:	
  1835                           
  1836                           	psect	text2
  1837  01CF                     __ptext2:	
  1838 ;; *************** function _LCDWriteString *****************
  1839 ;; Defined at:
  1840 ;;		line 202 in file "lcd_hd44780_pic16.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  msg             2   12[COMMON] PTR const unsigned char 
  1843 ;;		 -> STR_17(4), STR_16(10), STR_15(4), STR_14(9), 
  1844 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  1845 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  1846 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  1847 ;;		 -> STR_1(17), 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  cc              1    1[BANK0 ] char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;		None               void
  1852 ;; Registers used:
  1853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1
  1859 ;;      Params:         2       0       0
  1860 ;;      Locals:         0       1       0
  1861 ;;      Temps:          0       1       0
  1862 ;;      Totals:         2       2       0
  1863 ;;Total ram usage:        4 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    2
  1866 ;; This function calls:
  1867 ;;		_LCDByte
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;;		_TempCheck
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           
  1875                           ;psect for function _LCDWriteString
  1876  01CF                     _LCDWriteString:	
  1877  01CF                     l1181:	
  1878                           ;lcd_hd44780_pic16.c: 232: while(*msg!='\0')
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1882                           
  1883  01CF  087D               	movf	LCDWriteString@msg+1,w
  1884  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1885  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1886  01D2  00FF               	movwf	127
  1887  01D3  087C               	movf	LCDWriteString@msg,w
  1888  01D4  0084               	movwf	4
  1889  01D5  2500               	fcall	stringtab
  1890  01D6  3A00               	xorlw	0
  1891  01D7  1903               	btfsc	3,2
  1892  01D8  0008               	return
  1893                           
  1894                           ;lcd_hd44780_pic16.c: 233: {
  1895                           ;lcd_hd44780_pic16.c: 235: if(*msg=='%')
  1896  01D9  087D               	movf	LCDWriteString@msg+1,w
  1897  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1898  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1899  01DC  00FF               	movwf	127
  1900  01DD  087C               	movf	LCDWriteString@msg,w
  1901  01DE  0084               	movwf	4
  1902  01DF  2500               	fcall	stringtab
  1903  01E0  3A25               	xorlw	37
  1904  01E1  1D03               	skipz
  1905  01E2  29FF               	goto	l1177
  1906                           
  1907                           ;lcd_hd44780_pic16.c: 236: {
  1908                           ;lcd_hd44780_pic16.c: 237: msg++;
  1909  01E3  3001               	movlw	1
  1910  01E4  07FC               	addwf	LCDWriteString@msg,f
  1911  01E5  1803               	skipnc
  1912  01E6  0AFD               	incf	LCDWriteString@msg+1,f
  1913                           
  1914                           ;lcd_hd44780_pic16.c: 238: int8_t cc=*msg-'0';
  1915  01E7  087D               	movf	LCDWriteString@msg+1,w
  1916  01E8  00FF               	movwf	127
  1917  01E9  087C               	movf	LCDWriteString@msg,w
  1918  01EA  0084               	movwf	4
  1919  01EB  2500               	fcall	stringtab
  1920  01EC  3ED0               	addlw	-48
  1921  01ED  00A0               	movwf	??_LCDWriteString
  1922  01EE  0820               	movf	??_LCDWriteString,w
  1923  01EF  00A1               	movwf	LCDWriteString@cc
  1924                           
  1925                           ;lcd_hd44780_pic16.c: 240: if(cc>=0 && cc<=7)
  1926  01F0  1BA1               	btfsc	LCDWriteString@cc,7
  1927  01F1  29FB               	goto	l1173
  1928  01F2  0821               	movf	LCDWriteString@cc,w
  1929  01F3  3A80               	xorlw	128
  1930  01F4  3E78               	addlw	-136
  1931  01F5  1803               	skipnc
  1932  01F6  29FB               	goto	l1173
  1933                           
  1934                           ;lcd_hd44780_pic16.c: 241: {
  1935                           ;lcd_hd44780_pic16.c: 242: (LCDByte(cc,1));
  1936  01F7  01F5               	clrf	LCDByte@isdata
  1937  01F8  0AF5               	incf	LCDByte@isdata,f
  1938  01F9  0821               	movf	LCDWriteString@cc,w
  1939  01FA  2A08               	goto	L1
  1940  01FB                     l1173:	
  1941                           ;lcd_hd44780_pic16.c: 243: }
  1942                           
  1943                           
  1944                           ;lcd_hd44780_pic16.c: 244: else
  1945                           ;lcd_hd44780_pic16.c: 245: {
  1946                           ;lcd_hd44780_pic16.c: 246: (LCDByte('%',1));
  1947  01FB  01F5               	clrf	LCDByte@isdata
  1948  01FC  0AF5               	incf	LCDByte@isdata,f
  1949  01FD  3025               	movlw	37
  1950  01FE  2195               	fcall	_LCDByte
  1951  01FF                     l1177:	
  1952                           ;lcd_hd44780_pic16.c: 248: }
  1953                           ;lcd_hd44780_pic16.c: 249: }
  1954                           
  1955                           ;lcd_hd44780_pic16.c: 247: (LCDByte(*msg,1));
  1956                           
  1957                           
  1958                           ;lcd_hd44780_pic16.c: 250: else
  1959                           ;lcd_hd44780_pic16.c: 251: {
  1960                           ;lcd_hd44780_pic16.c: 252: (LCDByte(*msg,1));
  1961  01FF  01F5               	clrf	LCDByte@isdata
  1962  0200  0AF5               	incf	LCDByte@isdata,f
  1963  0201  087D               	movf	LCDWriteString@msg+1,w
  1964  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1966  0204  00FF               	movwf	127
  1967  0205  087C               	movf	LCDWriteString@msg,w
  1968  0206  0084               	movwf	4
  1969  0207  2500               	fcall	stringtab
  1970  0208                     L1:	
  1971  0208  2195               	fcall	_LCDByte
  1972                           
  1973                           ;lcd_hd44780_pic16.c: 253: }
  1974                           ;lcd_hd44780_pic16.c: 254: msg++;
  1975  0209  3001               	movlw	1
  1976  020A  07FC               	addwf	LCDWriteString@msg,f
  1977  020B  1803               	skipnc
  1978  020C  0AFD               	incf	LCDWriteString@msg+1,f
  1979  020D  29CF               	goto	l1181
  1980  020E                     __end_of_LCDWriteString:	
  1981                           
  1982                           	psect	text3
  1983  0728                     __ptext3:	
  1984 ;; *************** function _LCDWriteInt *****************
  1985 ;; Defined at:
  1986 ;;		line 258 in file "lcd_hd44780_pic16.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  val             2    0[BANK0 ] int 
  1989 ;;  field_length    1    2[BANK0 ] char 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  str             5    3[BANK0 ] unsigned char [5]
  1992 ;;  i               2   10[BANK0 ] int 
  1993 ;;  j               2    8[BANK0 ] int 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;		None               void
  1996 ;; Registers used:
  1997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1
  2003 ;;      Params:         0       3       0
  2004 ;;      Locals:         0       9       0
  2005 ;;      Temps:          2       0       0
  2006 ;;      Totals:         2      12       0
  2007 ;;Total ram usage:       14 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    2
  2010 ;; This function calls:
  2011 ;;		_LCDByte
  2012 ;;		___awdiv
  2013 ;;		___awmod
  2014 ;; This function is called by:
  2015 ;;		_TempCheck
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           
  2020                           ;psect for function _LCDWriteInt
  2021  0728                     _LCDWriteInt:	
  2022                           
  2023                           ;lcd_hd44780_pic16.c: 271: char str[5]={0,0,0,0,0};
  2024                           
  2025                           ;incstack = 0
  2026                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2027  0728  3023               	movlw	LCDWriteInt@str& (0+255)
  2028  0729  0084               	movwf	4
  2029  072A  1283               	bcf	3,5	;RP0=0, select bank0
  2030  072B  1303               	bcf	3,6	;RP1=0, select bank0
  2031  072C  083D               	movf	LCDWriteInt@F1072,w
  2032  072D  1383               	bcf	3,7	;select IRP bank0
  2033  072E  0080               	movwf	0
  2034  072F  0A84               	incf	4,f
  2035  0730  083E               	movf	LCDWriteInt@F1072+1,w
  2036  0731  0080               	movwf	0
  2037  0732  0A84               	incf	4,f
  2038  0733  083F               	movf	LCDWriteInt@F1072+2,w
  2039  0734  0080               	movwf	0
  2040  0735  0A84               	incf	4,f
  2041  0736  0840               	movf	LCDWriteInt@F1072+3,w
  2042  0737  0080               	movwf	0
  2043  0738  0A84               	incf	4,f
  2044  0739  0841               	movf	LCDWriteInt@F1072+4,w
  2045  073A  0080               	movwf	0
  2046                           
  2047                           ;lcd_hd44780_pic16.c: 272: int i=4,j=0;
  2048  073B  3004               	movlw	4
  2049  073C  00AA               	movwf	LCDWriteInt@i
  2050  073D  3000               	movlw	0
  2051  073E  00AB               	movwf	LCDWriteInt@i+1
  2052  073F  01A8               	clrf	LCDWriteInt@j
  2053  0740  01A9               	clrf	LCDWriteInt@j+1
  2054                           
  2055                           ;lcd_hd44780_pic16.c: 275: if(val<0)
  2056  0741  1FA1               	btfss	LCDWriteInt@val+1,7
  2057  0742  2F4E               	goto	l1201
  2058                           
  2059                           ;lcd_hd44780_pic16.c: 276: {
  2060                           ;lcd_hd44780_pic16.c: 277: (LCDByte('-',1));
  2061  0743  01F5               	clrf	LCDByte@isdata
  2062  0744  0AF5               	incf	LCDByte@isdata,f
  2063  0745  302D               	movlw	45
  2064  0746  2195               	fcall	_LCDByte
  2065                           
  2066                           ;lcd_hd44780_pic16.c: 278: val=val*-1;
  2067  0747  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0748  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0749  09A0               	comf	LCDWriteInt@val,f
  2070  074A  09A1               	comf	LCDWriteInt@val+1,f
  2071  074B  0AA0               	incf	LCDWriteInt@val,f
  2072  074C  1903               	skipnz
  2073  074D  0AA1               	incf	LCDWriteInt@val+1,f
  2074  074E                     l1201:	
  2075                           ;lcd_hd44780_pic16.c: 279: }
  2076                           ;lcd_hd44780_pic16.c: 281: while(val)
  2077                           
  2078  074E  0820               	movf	LCDWriteInt@val,w
  2079  074F  0421               	iorwf	LCDWriteInt@val+1,w
  2080  0750  1903               	btfsc	3,2
  2081  0751  2F7B               	goto	l1203
  2082                           
  2083                           ;lcd_hd44780_pic16.c: 282: {
  2084                           ;lcd_hd44780_pic16.c: 283: str[i]=val%10;
  2085  0752  300A               	movlw	10
  2086  0753  00F0               	movwf	___awmod@divisor
  2087  0754  3000               	movlw	0
  2088  0755  00F1               	movwf	___awmod@divisor+1
  2089  0756  0821               	movf	LCDWriteInt@val+1,w
  2090  0757  00F3               	movwf	___awmod@dividend+1
  2091  0758  0820               	movf	LCDWriteInt@val,w
  2092  0759  00F2               	movwf	___awmod@dividend
  2093  075A  2259               	fcall	___awmod
  2094  075B  0870               	movf	?___awmod,w
  2095  075C  00FC               	movwf	??_LCDWriteInt
  2096  075D  1283               	bcf	3,5	;RP0=0, select bank0
  2097  075E  1303               	bcf	3,6	;RP1=0, select bank0
  2098  075F  082A               	movf	LCDWriteInt@i,w
  2099  0760  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2100  0761  0084               	movwf	4
  2101  0762  087C               	movf	??_LCDWriteInt,w
  2102  0763  1383               	bcf	3,7	;select IRP bank0
  2103  0764  0080               	movwf	0
  2104                           
  2105                           ;lcd_hd44780_pic16.c: 284: val=val/10;
  2106  0765  300A               	movlw	10
  2107  0766  00F0               	movwf	___awdiv@divisor
  2108  0767  3000               	movlw	0
  2109  0768  00F1               	movwf	___awdiv@divisor+1
  2110  0769  0821               	movf	LCDWriteInt@val+1,w
  2111  076A  00F3               	movwf	___awdiv@dividend+1
  2112  076B  0820               	movf	LCDWriteInt@val,w
  2113  076C  00F2               	movwf	___awdiv@dividend
  2114  076D  22F4               	fcall	___awdiv
  2115  076E  0871               	movf	?___awdiv+1,w
  2116  076F  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0770  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0771  00A1               	movwf	LCDWriteInt@val+1
  2119  0772  0870               	movf	?___awdiv,w
  2120  0773  00A0               	movwf	LCDWriteInt@val
  2121                           
  2122                           ;lcd_hd44780_pic16.c: 285: i--;
  2123  0774  30FF               	movlw	255
  2124  0775  07AA               	addwf	LCDWriteInt@i,f
  2125  0776  1803               	skipnc
  2126  0777  0AAB               	incf	LCDWriteInt@i+1,f
  2127  0778  30FF               	movlw	255
  2128  0779  07AB               	addwf	LCDWriteInt@i+1,f
  2129  077A  2F4E               	goto	l1201
  2130  077B                     l1203:	
  2131                           
  2132                           ;lcd_hd44780_pic16.c: 286: }
  2133                           ;lcd_hd44780_pic16.c: 287: if(field_length==-1)
  2134  077B  0A22               	incf	LCDWriteInt@field_length,w
  2135  077C  1903               	btfsc	3,2
  2136  077D  2F85               	goto	l1209
  2137  077E  2F8D               	goto	l1211
  2138  077F                     l1207:	
  2139                           ;lcd_hd44780_pic16.c: 288: while(str[j]==0) j++;
  2140                           
  2141  077F  3001               	movlw	1
  2142  0780  07A8               	addwf	LCDWriteInt@j,f
  2143  0781  1803               	skipnc
  2144  0782  0AA9               	incf	LCDWriteInt@j+1,f
  2145  0783  3000               	movlw	0
  2146  0784  07A9               	addwf	LCDWriteInt@j+1,f
  2147  0785                     l1209:	
  2148  0785  0828               	movf	LCDWriteInt@j,w
  2149  0786  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2150  0787  0084               	movwf	4
  2151  0788  1383               	bcf	3,7	;select IRP bank0
  2152  0789  0800               	movf	0,w
  2153  078A  1D03               	btfss	3,2
  2154  078B  2F9F               	goto	l1213
  2155  078C  2F7F               	goto	l1207
  2156  078D                     l1211:	
  2157                           
  2158                           ;lcd_hd44780_pic16.c: 289: else
  2159                           ;lcd_hd44780_pic16.c: 290: j=5-field_length;
  2160  078D  0822               	movf	LCDWriteInt@field_length,w
  2161  078E  00FC               	movwf	??_LCDWriteInt
  2162  078F  01FD               	clrf	??_LCDWriteInt+1
  2163  0790  1BFC               	btfsc	??_LCDWriteInt,7
  2164  0791  03FD               	decf	??_LCDWriteInt+1,f
  2165  0792  09FC               	comf	??_LCDWriteInt,f
  2166  0793  09FD               	comf	??_LCDWriteInt+1,f
  2167  0794  0AFC               	incf	??_LCDWriteInt,f
  2168  0795  1903               	skipnz
  2169  0796  0AFD               	incf	??_LCDWriteInt+1,f
  2170  0797  087C               	movf	??_LCDWriteInt,w
  2171  0798  3E05               	addlw	5
  2172  0799  00A8               	movwf	LCDWriteInt@j
  2173  079A  087D               	movf	??_LCDWriteInt+1,w
  2174  079B  1803               	skipnc
  2175  079C  3E01               	addlw	1
  2176  079D  3E00               	addlw	0
  2177  079E  00A9               	movwf	LCDWriteInt@j+1
  2178  079F                     l1213:	
  2179                           
  2180                           ;lcd_hd44780_pic16.c: 293: for(i=j;i<5;i++)
  2181  079F  0829               	movf	LCDWriteInt@j+1,w
  2182  07A0  00AB               	movwf	LCDWriteInt@i+1
  2183  07A1  0828               	movf	LCDWriteInt@j,w
  2184  07A2  00AA               	movwf	LCDWriteInt@i
  2185  07A3                     L2:	
  2186  07A3  082B               	movf	LCDWriteInt@i+1,w
  2187  07A4  3A80               	xorlw	128
  2188  07A5  00FF               	movwf	127
  2189  07A6  3080               	movlw	128
  2190  07A7  027F               	subwf	127,w
  2191  07A8  1D03               	skipz
  2192  07A9  2FAC               	goto	u705
  2193  07AA  3005               	movlw	5
  2194  07AB  022A               	subwf	LCDWriteInt@i,w
  2195  07AC                     u705:	
  2196  07AC  1803               	btfsc	3,0
  2197  07AD  0008               	return
  2198                           
  2199                           ;lcd_hd44780_pic16.c: 294: {
  2200                           ;lcd_hd44780_pic16.c: 295: (LCDByte(48+str[i],1));
  2201  07AE  01F5               	clrf	LCDByte@isdata
  2202  07AF  0AF5               	incf	LCDByte@isdata,f
  2203  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  2204  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  2205  07B2  082A               	movf	LCDWriteInt@i,w
  2206  07B3  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2207  07B4  0084               	movwf	4
  2208  07B5  1383               	bcf	3,7	;select IRP bank0
  2209  07B6  0800               	movf	0,w
  2210  07B7  3E30               	addlw	48
  2211  07B8  2195               	fcall	_LCDByte
  2212  07B9  3001               	movlw	1
  2213  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  2214  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  2215  07BC  07AA               	addwf	LCDWriteInt@i,f
  2216  07BD  1803               	skipnc
  2217  07BE  0AAB               	incf	LCDWriteInt@i+1,f
  2218  07BF  3000               	movlw	0
  2219  07C0  07AB               	addwf	LCDWriteInt@i+1,f
  2220  07C1  2FA3               	goto	L2
  2221  07C2                     __end_of_LCDWriteInt:	
  2222                           
  2223                           	psect	text4
  2224  0259                     __ptext4:	
  2225 ;; *************** function ___awmod *****************
  2226 ;; Defined at:
  2227 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  divisor         2    0[COMMON] int 
  2230 ;;  dividend        2    2[COMMON] int 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  sign            1    6[COMMON] unsigned char 
  2233 ;;  counter         1    5[COMMON] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  2    0[COMMON] int 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1
  2243 ;;      Params:         4       0       0
  2244 ;;      Locals:         2       0       0
  2245 ;;      Temps:          1       0       0
  2246 ;;      Totals:         7       0       0
  2247 ;;Total ram usage:        7 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_LCDWriteInt
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function ___awmod
  2258  0259                     ___awmod:	
  2259                           
  2260                           ;incstack = 0
  2261                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2262  0259  01F6               	clrf	___awmod@sign
  2263  025A  1FF3               	btfss	___awmod@dividend+1,7
  2264  025B  2A63               	goto	l1129
  2265  025C  09F2               	comf	___awmod@dividend,f
  2266  025D  09F3               	comf	___awmod@dividend+1,f
  2267  025E  0AF2               	incf	___awmod@dividend,f
  2268  025F  1903               	skipnz
  2269  0260  0AF3               	incf	___awmod@dividend+1,f
  2270  0261  01F6               	clrf	___awmod@sign
  2271  0262  0AF6               	incf	___awmod@sign,f
  2272  0263                     l1129:	
  2273  0263  1FF1               	btfss	___awmod@divisor+1,7
  2274  0264  2A6A               	goto	l1133
  2275  0265  09F0               	comf	___awmod@divisor,f
  2276  0266  09F1               	comf	___awmod@divisor+1,f
  2277  0267  0AF0               	incf	___awmod@divisor,f
  2278  0268  1903               	skipnz
  2279  0269  0AF1               	incf	___awmod@divisor+1,f
  2280  026A                     l1133:	
  2281  026A  0870               	movf	___awmod@divisor,w
  2282  026B  0471               	iorwf	___awmod@divisor+1,w
  2283  026C  1903               	btfsc	3,2
  2284  026D  2A97               	goto	l1151
  2285  026E  01F5               	clrf	___awmod@counter
  2286  026F  0AF5               	incf	___awmod@counter,f
  2287  0270                     l1141:	
  2288  0270  1BF1               	btfsc	___awmod@divisor+1,7
  2289  0271  2A7E               	goto	l1143
  2290  0272  3001               	movlw	1
  2291  0273                     u565:	
  2292  0273  1003               	clrc
  2293  0274  0DF0               	rlf	___awmod@divisor,f
  2294  0275  0DF1               	rlf	___awmod@divisor+1,f
  2295  0276  3EFF               	addlw	-1
  2296  0277  1D03               	skipz
  2297  0278  2A73               	goto	u565
  2298  0279  3001               	movlw	1
  2299  027A  00F4               	movwf	??___awmod
  2300  027B  0874               	movf	??___awmod,w
  2301  027C  07F5               	addwf	___awmod@counter,f
  2302  027D  2A70               	goto	l1141
  2303  027E                     l1143:	
  2304  027E  0871               	movf	___awmod@divisor+1,w
  2305  027F  0273               	subwf	___awmod@dividend+1,w
  2306  0280  1D03               	skipz
  2307  0281  2A84               	goto	u585
  2308  0282  0870               	movf	___awmod@divisor,w
  2309  0283  0272               	subwf	___awmod@dividend,w
  2310  0284                     u585:	
  2311  0284  1C03               	skipc
  2312  0285  2A8C               	goto	l1147
  2313  0286  0870               	movf	___awmod@divisor,w
  2314  0287  02F2               	subwf	___awmod@dividend,f
  2315  0288  0871               	movf	___awmod@divisor+1,w
  2316  0289  1C03               	skipc
  2317  028A  03F3               	decf	___awmod@dividend+1,f
  2318  028B  02F3               	subwf	___awmod@dividend+1,f
  2319  028C                     l1147:	
  2320  028C  3001               	movlw	1
  2321  028D                     u595:	
  2322  028D  1003               	clrc
  2323  028E  0CF1               	rrf	___awmod@divisor+1,f
  2324  028F  0CF0               	rrf	___awmod@divisor,f
  2325  0290  3EFF               	addlw	-1
  2326  0291  1D03               	skipz
  2327  0292  2A8D               	goto	u595
  2328  0293  3001               	movlw	1
  2329  0294  02F5               	subwf	___awmod@counter,f
  2330  0295  1D03               	btfss	3,2
  2331  0296  2A7E               	goto	l1143
  2332  0297                     l1151:	
  2333  0297  0876               	movf	___awmod@sign,w
  2334  0298  1903               	btfsc	3,2
  2335  0299  2A9F               	goto	l1155
  2336  029A  09F2               	comf	___awmod@dividend,f
  2337  029B  09F3               	comf	___awmod@dividend+1,f
  2338  029C  0AF2               	incf	___awmod@dividend,f
  2339  029D  1903               	skipnz
  2340  029E  0AF3               	incf	___awmod@dividend+1,f
  2341  029F                     l1155:	
  2342  029F  0873               	movf	___awmod@dividend+1,w
  2343  02A0  00F1               	movwf	?___awmod+1
  2344  02A1  0872               	movf	___awmod@dividend,w
  2345  02A2  00F0               	movwf	?___awmod
  2346  02A3  0008               	return
  2347  02A4                     __end_of___awmod:	
  2348                           
  2349                           	psect	text5
  2350  02F4                     __ptext5:	
  2351 ;; *************** function ___awdiv *****************
  2352 ;; Defined at:
  2353 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  divisor         2    0[COMMON] int 
  2356 ;;  dividend        2    2[COMMON] int 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  quotient        2    7[COMMON] int 
  2359 ;;  sign            1    6[COMMON] unsigned char 
  2360 ;;  counter         1    5[COMMON] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  2    0[COMMON] int 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1
  2370 ;;      Params:         4       0       0
  2371 ;;      Locals:         4       0       0
  2372 ;;      Temps:          1       0       0
  2373 ;;      Totals:         9       0       0
  2374 ;;Total ram usage:        9 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_LCDWriteInt
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function ___awdiv
  2385  02F4                     ___awdiv:	
  2386                           
  2387                           ;incstack = 0
  2388                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2389  02F4  01F6               	clrf	___awdiv@sign
  2390  02F5  1FF1               	btfss	___awdiv@divisor+1,7
  2391  02F6  2AFE               	goto	l1085
  2392  02F7  09F0               	comf	___awdiv@divisor,f
  2393  02F8  09F1               	comf	___awdiv@divisor+1,f
  2394  02F9  0AF0               	incf	___awdiv@divisor,f
  2395  02FA  1903               	skipnz
  2396  02FB  0AF1               	incf	___awdiv@divisor+1,f
  2397  02FC  01F6               	clrf	___awdiv@sign
  2398  02FD  0AF6               	incf	___awdiv@sign,f
  2399  02FE                     l1085:	
  2400  02FE  1FF3               	btfss	___awdiv@dividend+1,7
  2401  02FF  2B09               	goto	l1091
  2402  0300  09F2               	comf	___awdiv@dividend,f
  2403  0301  09F3               	comf	___awdiv@dividend+1,f
  2404  0302  0AF2               	incf	___awdiv@dividend,f
  2405  0303  1903               	skipnz
  2406  0304  0AF3               	incf	___awdiv@dividend+1,f
  2407  0305  3001               	movlw	1
  2408  0306  00F4               	movwf	??___awdiv
  2409  0307  0874               	movf	??___awdiv,w
  2410  0308  06F6               	xorwf	___awdiv@sign,f
  2411  0309                     l1091:	
  2412  0309  01F7               	clrf	___awdiv@quotient
  2413  030A  01F8               	clrf	___awdiv@quotient+1
  2414  030B  0870               	movf	___awdiv@divisor,w
  2415  030C  0471               	iorwf	___awdiv@divisor+1,w
  2416  030D  1903               	btfsc	3,2
  2417  030E  2B40               	goto	l1113
  2418  030F  01F5               	clrf	___awdiv@counter
  2419  0310  0AF5               	incf	___awdiv@counter,f
  2420  0311                     l1101:	
  2421  0311  1BF1               	btfsc	___awdiv@divisor+1,7
  2422  0312  2B1F               	goto	l1103
  2423  0313  3001               	movlw	1
  2424  0314                     u465:	
  2425  0314  1003               	clrc
  2426  0315  0DF0               	rlf	___awdiv@divisor,f
  2427  0316  0DF1               	rlf	___awdiv@divisor+1,f
  2428  0317  3EFF               	addlw	-1
  2429  0318  1D03               	skipz
  2430  0319  2B14               	goto	u465
  2431  031A  3001               	movlw	1
  2432  031B  00F4               	movwf	??___awdiv
  2433  031C  0874               	movf	??___awdiv,w
  2434  031D  07F5               	addwf	___awdiv@counter,f
  2435  031E  2B11               	goto	l1101
  2436  031F                     l1103:	
  2437  031F  3001               	movlw	1
  2438  0320                     u485:	
  2439  0320  1003               	clrc
  2440  0321  0DF7               	rlf	___awdiv@quotient,f
  2441  0322  0DF8               	rlf	___awdiv@quotient+1,f
  2442  0323  3EFF               	addlw	-1
  2443  0324  1D03               	skipz
  2444  0325  2B20               	goto	u485
  2445  0326  0871               	movf	___awdiv@divisor+1,w
  2446  0327  0273               	subwf	___awdiv@dividend+1,w
  2447  0328  1D03               	skipz
  2448  0329  2B2C               	goto	u495
  2449  032A  0870               	movf	___awdiv@divisor,w
  2450  032B  0272               	subwf	___awdiv@dividend,w
  2451  032C                     u495:	
  2452  032C  1C03               	skipc
  2453  032D  2B35               	goto	l1109
  2454  032E  0870               	movf	___awdiv@divisor,w
  2455  032F  02F2               	subwf	___awdiv@dividend,f
  2456  0330  0871               	movf	___awdiv@divisor+1,w
  2457  0331  1C03               	skipc
  2458  0332  03F3               	decf	___awdiv@dividend+1,f
  2459  0333  02F3               	subwf	___awdiv@dividend+1,f
  2460  0334  1477               	bsf	___awdiv@quotient,0
  2461  0335                     l1109:	
  2462  0335  3001               	movlw	1
  2463  0336                     u505:	
  2464  0336  1003               	clrc
  2465  0337  0CF1               	rrf	___awdiv@divisor+1,f
  2466  0338  0CF0               	rrf	___awdiv@divisor,f
  2467  0339  3EFF               	addlw	-1
  2468  033A  1D03               	skipz
  2469  033B  2B36               	goto	u505
  2470  033C  3001               	movlw	1
  2471  033D  02F5               	subwf	___awdiv@counter,f
  2472  033E  1D03               	btfss	3,2
  2473  033F  2B1F               	goto	l1103
  2474  0340                     l1113:	
  2475  0340  0876               	movf	___awdiv@sign,w
  2476  0341  1903               	btfsc	3,2
  2477  0342  2B48               	goto	l1117
  2478  0343  09F7               	comf	___awdiv@quotient,f
  2479  0344  09F8               	comf	___awdiv@quotient+1,f
  2480  0345  0AF7               	incf	___awdiv@quotient,f
  2481  0346  1903               	skipnz
  2482  0347  0AF8               	incf	___awdiv@quotient+1,f
  2483  0348                     l1117:	
  2484  0348  0878               	movf	___awdiv@quotient+1,w
  2485  0349  00F1               	movwf	?___awdiv+1
  2486  034A  0877               	movf	___awdiv@quotient,w
  2487  034B  00F0               	movwf	?___awdiv
  2488  034C  0008               	return
  2489  034D                     __end_of___awdiv:	
  2490                           
  2491                           	psect	text6
  2492  0163                     __ptext6:	
  2493 ;; *************** function _LCDGotoXY *****************
  2494 ;; Defined at:
  2495 ;;		line 303 in file "lcd_hd44780_pic16.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  x               1    wreg     unsigned char 
  2498 ;;  y               1   12[COMMON] unsigned char 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  x               1   13[COMMON] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;		None               void
  2503 ;; Registers used:
  2504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1
  2510 ;;      Params:         1       0       0
  2511 ;;      Locals:         1       0       0
  2512 ;;      Temps:          0       0       0
  2513 ;;      Totals:         2       0       0
  2514 ;;Total ram usage:        2 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    2
  2517 ;; This function calls:
  2518 ;;		_LCDByte
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;;		_TempCheck
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _LCDGotoXY
  2527  0163                     _LCDGotoXY:	
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2531                           ;LCDGotoXY@x stored from wreg
  2532  0163  00FD               	movwf	LCDGotoXY@x
  2533                           
  2534                           ;lcd_hd44780_pic16.c: 308: if(x>=16) return;
  2535  0164  3010               	movlw	16
  2536  0165  027D               	subwf	LCDGotoXY@x,w
  2537  0166  1803               	btfsc	3,0
  2538  0167  0008               	return
  2539  0168  296B               	goto	l1231
  2540  0169                     l67:	
  2541                           ;lcd_hd44780_pic16.c: 314: case 1:
  2542                           
  2543                           ;lcd_hd44780_pic16.c: 313: break;
  2544                           
  2545                           ;lcd_hd44780_pic16.c: 311: {
  2546                           ;lcd_hd44780_pic16.c: 312: case 0:
  2547                           
  2548                           ;lcd_hd44780_pic16.c: 310: switch(y)
  2549                           
  2550                           
  2551                           ;lcd_hd44780_pic16.c: 315: x|=0b01000000;
  2552  0169  177D               	bsf	LCDGotoXY@x,6
  2553                           
  2554                           ;lcd_hd44780_pic16.c: 317: }
  2555                           
  2556                           ;lcd_hd44780_pic16.c: 316: break;
  2557  016A  2973               	goto	l66
  2558  016B                     l1231:	
  2559  016B  087C               	movf	LCDGotoXY@y,w
  2560                           
  2561                           ; Switch size 1, requested type "space"
  2562                           ; Number of cases is 2, Range of values is 0 to 1
  2563                           ; switch strategies available:
  2564                           ; Name         Instructions Cycles
  2565                           ; simple_byte            7     4 (average)
  2566                           ; direct_byte            8     6 (fixed)
  2567                           ; jumptable            260     6 (fixed)
  2568                           ;	Chosen strategy is simple_byte
  2569  016C  3A00               	xorlw	0	; case 0
  2570  016D  1903               	skipnz
  2571  016E  2973               	goto	l66
  2572  016F  3A01               	xorlw	1	; case 1
  2573  0170  1903               	skipnz
  2574  0171  2969               	goto	l67
  2575  0172  2973               	goto	l66
  2576  0173                     l66:	
  2577                           
  2578                           ;lcd_hd44780_pic16.c: 384: x|=0b10000000;
  2579  0173  17FD               	bsf	LCDGotoXY@x,7
  2580                           
  2581                           ;lcd_hd44780_pic16.c: 385: (LCDByte(x,0));
  2582  0174  01F5               	clrf	LCDByte@isdata
  2583  0175  087D               	movf	LCDGotoXY@x,w
  2584  0176  2195               	fcall	_LCDByte
  2585  0177  0008               	return
  2586  0178                     __end_of_LCDGotoXY:	
  2587                           
  2588                           	psect	text7
  2589  0178                     __ptext7:	
  2590 ;; *************** function _ADCRead *****************
  2591 ;; Defined at:
  2592 ;;		line 35 in file "user.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  ch              1    wreg     unsigned char 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  ch              1    1[COMMON] unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      unsigned char 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1
  2606 ;;      Params:         0       0       0
  2607 ;;      Locals:         1       0       0
  2608 ;;      Temps:          1       0       0
  2609 ;;      Totals:         2       0       0
  2610 ;;Total ram usage:        2 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_TempCheck
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           
  2620                           ;psect for function _ADCRead
  2621  0178                     _ADCRead:	
  2622                           
  2623                           ;incstack = 0
  2624                           ; Regs used in _ADCRead: [wreg+status,2+status,0]
  2625                           ;ADCRead@ch stored from wreg
  2626  0178  00F1               	movwf	ADCRead@ch
  2627                           
  2628                           ;user.c: 38: ADCON0=0x00;
  2629  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2630  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2631  017B  019F               	clrf	31	;volatile
  2632                           
  2633                           ;user.c: 39: ADCON0=(ch<<2);
  2634  017C  0871               	movf	ADCRead@ch,w
  2635  017D  00F0               	movwf	??_ADCRead
  2636  017E  3001               	movlw	1
  2637  017F                     u735:	
  2638  017F  1003               	clrc
  2639  0180  0DF0               	rlf	??_ADCRead,f
  2640  0181  3EFF               	addlw	-1
  2641  0182  1D03               	skipz
  2642  0183  297F               	goto	u735
  2643  0184  1003               	clrc
  2644  0185  0D70               	rlf	??_ADCRead,w
  2645  0186  009F               	movwf	31	;volatile
  2646                           
  2647                           ;user.c: 40: ADON=1;
  2648  0187  141F               	bsf	31,0	;volatile
  2649                           
  2650                           ;user.c: 41: _delay((unsigned long)((1500)*(2000000L/4000000.0)));
  2651  0188  30F9               	movlw	249
  2652  0189  00F0               	movwf	??_ADCRead
  2653  018A                     u927:	
  2654  018A  0BF0               	decfsz	??_ADCRead,f
  2655  018B  298A               	goto	u927
  2656  018C  298D               	nop2	;nop
  2657                           
  2658                           ;user.c: 42: GO_nDONE=1;
  2659  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2660  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2661  018F  149F               	bsf	31,1	;volatile
  2662  0190                     l166:	
  2663                           ;user.c: 43: while(GO_nDONE);
  2664                           
  2665  0190  189F               	btfsc	31,1	;volatile
  2666  0191  2990               	goto	l166
  2667                           
  2668                           ;user.c: 44: ADON=0;
  2669  0192  101F               	bcf	31,0	;volatile
  2670                           
  2671                           ;user.c: 45: return ADRES;
  2672  0193  081E               	movf	30,w	;volatile
  2673  0194  0008               	return
  2674  0195                     __end_of_ADCRead:	
  2675                           
  2676                           	psect	text8
  2677  0145                     __ptext8:	
  2678 ;; *************** function _ADCInit *****************
  2679 ;; Defined at:
  2680 ;;		line 32 in file "user.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;		None               void
  2687 ;; Registers used:
  2688 ;;		wreg
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1
  2694 ;;      Params:         0       0       0
  2695 ;;      Locals:         0       0       0
  2696 ;;      Temps:          0       0       0
  2697 ;;      Totals:         0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_TempCheck
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function _ADCInit
  2709  0145                     _ADCInit:	
  2710                           
  2711                           ;user.c: 33: ADCON1 = 0x10;
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _ADCInit: [wreg]
  2715  0145  3010               	movlw	16
  2716  0146  1683               	bsf	3,5	;RP0=1, select bank1
  2717  0147  1303               	bcf	3,6	;RP1=0, select bank1
  2718  0148  009F               	movwf	31	;volatile
  2719  0149  0008               	return
  2720  014A                     __end_of_ADCInit:	
  2721                           
  2722                           	psect	text9
  2723  02A4                     __ptext9:	
  2724 ;; *************** function _LCDInit *****************
  2725 ;; Defined at:
  2726 ;;		line 144 in file "lcd_hd44780_pic16.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  style           1    wreg     unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  style           1   12[COMMON] unsigned char 
  2731 ;;  __i             1   13[COMMON] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1
  2741 ;;      Params:         0       0       0
  2742 ;;      Locals:         2       0       0
  2743 ;;      Temps:          0       3       0
  2744 ;;      Totals:         2       3       0
  2745 ;;Total ram usage:        5 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    2
  2748 ;; This function calls:
  2749 ;;		_LCDBusyLoop
  2750 ;;		_LCDByte
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _LCDInit
  2758  02A4                     _LCDInit:	
  2759                           
  2760                           ;incstack = 0
  2761                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2762                           ;LCDInit@style stored from wreg
  2763  02A4  00FC               	movwf	LCDInit@style
  2764                           
  2765                           ;lcd_hd44780_pic16.c: 160: _delay((unsigned long)((500)*(2000000L/4000.0)));
  2766  02A5  3002               	movlw	2
  2767  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2768  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2769  02A8  00A2               	movwf	??_LCDInit+2
  2770  02A9  3045               	movlw	69
  2771  02AA  00A1               	movwf	??_LCDInit+1
  2772  02AB  30A9               	movlw	169
  2773  02AC  00A0               	movwf	??_LCDInit
  2774  02AD                     u937:	
  2775  02AD  0BA0               	decfsz	??_LCDInit,f
  2776  02AE  2AAD               	goto	u937
  2777  02AF  0BA1               	decfsz	??_LCDInit+1,f
  2778  02B0  2AAD               	goto	u937
  2779  02B1  0BA2               	decfsz	??_LCDInit+2,f
  2780  02B2  2AAD               	goto	u937
  2781  02B3  2AB4               	nop2
  2782                           
  2783                           ;lcd_hd44780_pic16.c: 163: TRISC&=(~(0x0F<<0));
  2784  02B4  30F0               	movlw	240
  2785  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2786  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2787  02B7  00A0               	movwf	??_LCDInit
  2788  02B8  0820               	movf	??_LCDInit,w
  2789  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  2790  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  2791  02BB  0587               	andwf	7,f	;volatile
  2792                           
  2793                           ;lcd_hd44780_pic16.c: 165: TRISCbits.TRISC6=0;
  2794  02BC  1307               	bcf	7,6	;volatile
  2795                           
  2796                           ;lcd_hd44780_pic16.c: 166: TRISCbits.TRISC4=0;
  2797  02BD  1207               	bcf	7,4	;volatile
  2798                           
  2799                           ;lcd_hd44780_pic16.c: 167: TRISCbits.TRISC5=0;
  2800  02BE  1287               	bcf	7,5	;volatile
  2801                           
  2802                           ;lcd_hd44780_pic16.c: 169: PORTC&=(~(0x0F<<0));
  2803  02BF  30F0               	movlw	240
  2804  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2805  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2806  02C2  00A0               	movwf	??_LCDInit
  2807  02C3  0820               	movf	??_LCDInit,w
  2808  02C4  0587               	andwf	7,f	;volatile
  2809                           
  2810                           ;lcd_hd44780_pic16.c: 171: (RC6=0);
  2811  02C5  1307               	bcf	7,6	;volatile
  2812                           
  2813                           ;lcd_hd44780_pic16.c: 172: (RC5=0);
  2814  02C6  1287               	bcf	7,5	;volatile
  2815                           
  2816                           ;lcd_hd44780_pic16.c: 173: (RC4=0);
  2817  02C7  1207               	bcf	7,4	;volatile
  2818                           
  2819                           ;lcd_hd44780_pic16.c: 176: _delay((unsigned long)((8)*(2000000L/4000000.0)));
  2820  02C8  2AC9               	nop2	;2 cycle nop
  2821  02C9  2ACA               	nop2	;2 cycle nop
  2822                           
  2823                           ;lcd_hd44780_pic16.c: 178: (RC6=1);
  2824  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2825  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2826  02CC  1707               	bsf	7,6	;volatile
  2827                           
  2828                           ;lcd_hd44780_pic16.c: 179: PORTC|=((0b00000010)<<0);
  2829  02CD  1487               	bsf	7,1	;volatile
  2830                           
  2831                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((8)*(2000000L/4000000.0)));
  2832  02CE  2ACF               	nop2	;2 cycle nop
  2833  02CF  2AD0               	nop2	;2 cycle nop
  2834                           
  2835                           ;lcd_hd44780_pic16.c: 181: (RC6=0);
  2836  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2837  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2838  02D2  1307               	bcf	7,6	;volatile
  2839                           
  2840                           ;lcd_hd44780_pic16.c: 182: _delay((unsigned long)((8)*(2000000L/4000000.0)));
  2841  02D3  2AD4               	nop2	;2 cycle nop
  2842  02D4  2AD5               	nop2	;2 cycle nop
  2843                           
  2844                           ;lcd_hd44780_pic16.c: 185: LCDBusyLoop();
  2845  02D5  220E               	fcall	_LCDBusyLoop
  2846                           
  2847                           ;lcd_hd44780_pic16.c: 190: (LCDByte(0b00101000,0));
  2848  02D6  01F5               	clrf	LCDByte@isdata
  2849  02D7  3028               	movlw	40
  2850  02D8  2195               	fcall	_LCDByte
  2851                           
  2852                           ;lcd_hd44780_pic16.c: 191: (LCDByte(0b00001100|style,0));
  2853  02D9  01F5               	clrf	LCDByte@isdata
  2854  02DA  087C               	movf	LCDInit@style,w
  2855  02DB  380C               	iorlw	12
  2856  02DC  2195               	fcall	_LCDByte
  2857                           
  2858                           ;lcd_hd44780_pic16.c: 194: (LCDByte(0b01000000,0));
  2859  02DD  01F5               	clrf	LCDByte@isdata
  2860  02DE  3040               	movlw	64
  2861  02DF  2195               	fcall	_LCDByte
  2862                           
  2863                           ;lcd_hd44780_pic16.c: 196: uint8_t __i;
  2864                           ;lcd_hd44780_pic16.c: 197: for(__i=0;__i<sizeof(__cgram);__i++)
  2865  02E0  01FD               	clrf	LCDInit@__i
  2866  02E1                     L3:	
  2867  02E1  3008               	movlw	8
  2868  02E2  027D               	subwf	LCDInit@__i,w
  2869  02E3  1803               	btfsc	3,0
  2870  02E4  0008               	return
  2871                           
  2872                           ;lcd_hd44780_pic16.c: 198: (LCDByte(__cgram[__i],1));
  2873  02E5  01F5               	clrf	LCDByte@isdata
  2874  02E6  0AF5               	incf	LCDByte@isdata,f
  2875  02E7  087D               	movf	LCDInit@__i,w
  2876  02E8  3E35               	addlw	(low (___cgram| 0))& (0+255)
  2877  02E9  0084               	movwf	4
  2878  02EA  1383               	bcf	3,7	;select IRP bank0
  2879  02EB  0800               	movf	0,w
  2880  02EC  2195               	fcall	_LCDByte
  2881  02ED  3001               	movlw	1
  2882  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2883  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2884  02F0  00A0               	movwf	??_LCDInit
  2885  02F1  0820               	movf	??_LCDInit,w
  2886  02F2  07FD               	addwf	LCDInit@__i,f
  2887  02F3  2AE1               	goto	L3
  2888  02F4                     __end_of_LCDInit:	
  2889                           
  2890                           	psect	text10
  2891  0195                     __ptext10:	
  2892 ;; *************** function _LCDByte *****************
  2893 ;; Defined at:
  2894 ;;		line 31 in file "lcd_hd44780_pic16.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  c               1    wreg     unsigned char 
  2897 ;;  isdata          1    5[COMMON] unsigned char 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  c               1   10[COMMON] unsigned char 
  2900 ;;  temp            1   11[COMMON] unsigned char 
  2901 ;;  ln              1    9[COMMON] unsigned char 
  2902 ;;  hn              1    8[COMMON] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;		None               void
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, pclath, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1
  2912 ;;      Params:         1       0       0
  2913 ;;      Locals:         4       0       0
  2914 ;;      Temps:          2       0       0
  2915 ;;      Totals:         7       0       0
  2916 ;;Total ram usage:        7 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    1
  2919 ;; This function calls:
  2920 ;;		_LCDBusyLoop
  2921 ;; This function is called by:
  2922 ;;		_LCDInit
  2923 ;;		_LCDWriteString
  2924 ;;		_LCDWriteInt
  2925 ;;		_LCDGotoXY
  2926 ;;		_main
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           
  2931                           ;psect for function _LCDByte
  2932  0195                     _LCDByte:	
  2933                           
  2934                           ;incstack = 0
  2935                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2936                           ;LCDByte@c stored from wreg
  2937  0195  00FA               	movwf	LCDByte@c
  2938                           
  2939                           ;lcd_hd44780_pic16.c: 40: uint8_t hn,ln;
  2940                           ;lcd_hd44780_pic16.c: 41: uint8_t temp;
  2941                           ;lcd_hd44780_pic16.c: 43: hn=c>>4;
  2942  0196  087A               	movf	LCDByte@c,w
  2943  0197  00F6               	movwf	??_LCDByte
  2944  0198  3004               	movlw	4
  2945  0199                     u415:	
  2946  0199  1003               	clrc
  2947  019A  0CF6               	rrf	??_LCDByte,f
  2948  019B  3EFF               	addlw	-1
  2949  019C  1D03               	skipz
  2950  019D  2999               	goto	u415
  2951  019E  0876               	movf	??_LCDByte,w
  2952  019F  00F7               	movwf	??_LCDByte+1
  2953  01A0  0877               	movf	??_LCDByte+1,w
  2954  01A1  00F8               	movwf	LCDByte@hn
  2955                           
  2956                           ;lcd_hd44780_pic16.c: 44: ln=(c & 0x0F);
  2957  01A2  087A               	movf	LCDByte@c,w
  2958  01A3  390F               	andlw	15
  2959  01A4  00F6               	movwf	??_LCDByte
  2960  01A5  0876               	movf	??_LCDByte,w
  2961  01A6  00F9               	movwf	LCDByte@ln
  2962                           
  2963                           ;lcd_hd44780_pic16.c: 46: if(isdata==0)
  2964  01A7  0875               	movf	LCDByte@isdata,w
  2965  01A8  1D03               	btfss	3,2
  2966  01A9  29AE               	goto	l21
  2967                           
  2968                           ;lcd_hd44780_pic16.c: 47: (RC4=0);
  2969  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2970  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2971  01AC  1207               	bcf	7,4	;volatile
  2972  01AD  29B1               	goto	l22
  2973  01AE                     l21:	
  2974                           
  2975                           ;lcd_hd44780_pic16.c: 48: else
  2976                           ;lcd_hd44780_pic16.c: 49: (RC4=1);
  2977  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2978  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2979  01B0  1607               	bsf	7,4	;volatile
  2980  01B1                     l22:	
  2981                           
  2982                           ;lcd_hd44780_pic16.c: 51: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2983                           ;lcd_hd44780_pic16.c: 53: (RC6=1);
  2984  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2985  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2986  01B3  1707               	bsf	7,6	;volatile
  2987                           
  2988                           ;lcd_hd44780_pic16.c: 57: temp=(PORTC & (~(0X0F<<0)))|((hn<<0));
  2989  01B4  0807               	movf	7,w	;volatile
  2990  01B5  39F0               	andlw	240
  2991  01B6  0478               	iorwf	LCDByte@hn,w
  2992  01B7  00F6               	movwf	??_LCDByte
  2993  01B8  0876               	movf	??_LCDByte,w
  2994  01B9  00FB               	movwf	LCDByte@temp
  2995                           
  2996                           ;lcd_hd44780_pic16.c: 58: PORTC=temp;
  2997  01BA  087B               	movf	LCDByte@temp,w
  2998  01BB  0087               	movwf	7	;volatile
  2999                           
  3000                           ;lcd_hd44780_pic16.c: 64: (RC6=0);
  3001                           
  3002                           ;lcd_hd44780_pic16.c: 60: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3003  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  3004  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  3005  01BE  1307               	bcf	7,6	;volatile
  3006                           
  3007                           ;lcd_hd44780_pic16.c: 69: (RC6=1);
  3008                           
  3009                           ;lcd_hd44780_pic16.c: 66: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3010  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  3011  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  3012  01C1  1707               	bsf	7,6	;volatile
  3013                           
  3014                           ;lcd_hd44780_pic16.c: 71: temp=(PORTC & (~(0X0F<<0)))|((ln<<0));
  3015  01C2  0807               	movf	7,w	;volatile
  3016  01C3  39F0               	andlw	240
  3017  01C4  0479               	iorwf	LCDByte@ln,w
  3018  01C5  00F6               	movwf	??_LCDByte
  3019  01C6  0876               	movf	??_LCDByte,w
  3020  01C7  00FB               	movwf	LCDByte@temp
  3021                           
  3022                           ;lcd_hd44780_pic16.c: 73: PORTC=temp;
  3023  01C8  087B               	movf	LCDByte@temp,w
  3024  01C9  0087               	movwf	7	;volatile
  3025                           
  3026                           ;lcd_hd44780_pic16.c: 80: (RC6=0);
  3027                           
  3028                           ;lcd_hd44780_pic16.c: 75: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3029  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  3030  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  3031  01CC  1307               	bcf	7,6	;volatile
  3032                           
  3033                           ;lcd_hd44780_pic16.c: 84: LCDBusyLoop();
  3034                           
  3035                           ;lcd_hd44780_pic16.c: 82: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3036  01CD  220E               	fcall	_LCDBusyLoop
  3037  01CE  0008               	return
  3038  01CF                     __end_of_LCDByte:	
  3039                           
  3040                           	psect	text11
  3041  020E                     __ptext11:	
  3042 ;; *************** function _LCDBusyLoop *****************
  3043 ;; Defined at:
  3044 ;;		line 87 in file "lcd_hd44780_pic16.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  status          1    4[COMMON] unsigned char 
  3049 ;;  temp            1    3[COMMON] unsigned char 
  3050 ;;  busy            1    2[COMMON] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;		None               void
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1
  3060 ;;      Params:         0       0       0
  3061 ;;      Locals:         3       0       0
  3062 ;;      Temps:          2       0       0
  3063 ;;      Totals:         5       0       0
  3064 ;;Total ram usage:        5 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_LCDByte
  3070 ;;		_LCDInit
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function _LCDBusyLoop
  3076  020E                     _LCDBusyLoop:	
  3077                           
  3078                           ;lcd_hd44780_pic16.c: 91: uint8_t busy,status=0x00,temp;
  3079                           
  3080                           ;incstack = 0
  3081                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  3082  020E  01F4               	clrf	LCDBusyLoop@status
  3083                           
  3084                           ;lcd_hd44780_pic16.c: 94: TRISC|=(0x0f<<0);
  3085  020F  300F               	movlw	15
  3086  0210  00F0               	movwf	??_LCDBusyLoop
  3087  0211  0870               	movf	??_LCDBusyLoop,w
  3088  0212  1683               	bsf	3,5	;RP0=1, select bank1
  3089  0213  1303               	bcf	3,6	;RP1=0, select bank1
  3090  0214  0487               	iorwf	7,f	;volatile
  3091                           
  3092                           ;lcd_hd44780_pic16.c: 97: (RC5=1);
  3093  0215  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0216  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0217  1687               	bsf	7,5	;volatile
  3096                           
  3097                           ;lcd_hd44780_pic16.c: 98: (RC4=0);
  3098  0218  1207               	bcf	7,4	;volatile
  3099  0219                     l1011:	
  3100                           ;lcd_hd44780_pic16.c: 104: do
  3101                           
  3102                           ;lcd_hd44780_pic16.c: 102: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3103                           
  3104                           
  3105                           ;lcd_hd44780_pic16.c: 105: {
  3106                           ;lcd_hd44780_pic16.c: 107: (RC6=1);
  3107  0219  1283               	bcf	3,5	;RP0=0, select bank0
  3108  021A  1303               	bcf	3,6	;RP1=0, select bank0
  3109  021B  1707               	bsf	7,6	;volatile
  3110                           
  3111                           ;lcd_hd44780_pic16.c: 112: status=(PORTC>>0);
  3112                           
  3113                           ;lcd_hd44780_pic16.c: 110: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3114  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3115  021D  1303               	bcf	3,6	;RP1=0, select bank0
  3116  021E  0807               	movf	7,w	;volatile
  3117  021F  00F0               	movwf	??_LCDBusyLoop
  3118  0220  0870               	movf	??_LCDBusyLoop,w
  3119  0221  00F4               	movwf	LCDBusyLoop@status
  3120                           
  3121                           ;lcd_hd44780_pic16.c: 113: status=status<<4;
  3122  0222  0874               	movf	LCDBusyLoop@status,w
  3123  0223  00F0               	movwf	??_LCDBusyLoop
  3124  0224  3003               	movlw	3
  3125  0225                     u395:	
  3126  0225  1003               	clrc
  3127  0226  0DF0               	rlf	??_LCDBusyLoop,f
  3128  0227  3EFF               	addlw	-1
  3129  0228  1D03               	skipz
  3130  0229  2A25               	goto	u395
  3131  022A  1003               	clrc
  3132  022B  0D70               	rlf	??_LCDBusyLoop,w
  3133  022C  00F1               	movwf	??_LCDBusyLoop+1
  3134  022D  0871               	movf	??_LCDBusyLoop+1,w
  3135  022E  00F4               	movwf	LCDBusyLoop@status
  3136                           
  3137                           ;lcd_hd44780_pic16.c: 118: (RC6=0);
  3138                           
  3139                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3140  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0230  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0231  1307               	bcf	7,6	;volatile
  3143                           
  3144                           ;lcd_hd44780_pic16.c: 121: (RC6=1);
  3145                           
  3146                           ;lcd_hd44780_pic16.c: 119: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3147  0232  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0233  1303               	bcf	3,6	;RP1=0, select bank0
  3149  0234  1707               	bsf	7,6	;volatile
  3150                           
  3151                           ;lcd_hd44780_pic16.c: 124: temp=(PORTC>>0);
  3152                           
  3153                           ;lcd_hd44780_pic16.c: 122: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3154  0235  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0236  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0237  0807               	movf	7,w	;volatile
  3157  0238  00F0               	movwf	??_LCDBusyLoop
  3158  0239  0870               	movf	??_LCDBusyLoop,w
  3159  023A  00F3               	movwf	LCDBusyLoop@temp
  3160                           
  3161                           ;lcd_hd44780_pic16.c: 125: temp&=0x0F;
  3162  023B  300F               	movlw	15
  3163  023C  00F0               	movwf	??_LCDBusyLoop
  3164  023D  0870               	movf	??_LCDBusyLoop,w
  3165  023E  05F3               	andwf	LCDBusyLoop@temp,f
  3166                           
  3167                           ;lcd_hd44780_pic16.c: 127: status=status|temp;
  3168  023F  0874               	movf	LCDBusyLoop@status,w
  3169  0240  0473               	iorwf	LCDBusyLoop@temp,w
  3170  0241  00F0               	movwf	??_LCDBusyLoop
  3171  0242  0870               	movf	??_LCDBusyLoop,w
  3172  0243  00F4               	movwf	LCDBusyLoop@status
  3173                           
  3174                           ;lcd_hd44780_pic16.c: 129: busy=status & 0b10000000;
  3175  0244  0874               	movf	LCDBusyLoop@status,w
  3176  0245  3980               	andlw	128
  3177  0246  00F0               	movwf	??_LCDBusyLoop
  3178  0247  0870               	movf	??_LCDBusyLoop,w
  3179  0248  00F2               	movwf	LCDBusyLoop@busy
  3180                           
  3181                           ;lcd_hd44780_pic16.c: 133: (RC6=0);
  3182                           
  3183                           ;lcd_hd44780_pic16.c: 131: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3184  0249  1283               	bcf	3,5	;RP0=0, select bank0
  3185  024A  1303               	bcf	3,6	;RP1=0, select bank0
  3186  024B  1307               	bcf	7,6	;volatile
  3187                           
  3188                           ;lcd_hd44780_pic16.c: 135: }while(busy);
  3189                           
  3190                           ;lcd_hd44780_pic16.c: 134: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  3191  024C  0872               	movf	LCDBusyLoop@busy,w
  3192  024D  1D03               	btfss	3,2
  3193  024E  2A19               	goto	l1011
  3194                           
  3195                           ;lcd_hd44780_pic16.c: 137: (RC5=0);
  3196  024F  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0250  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0251  1287               	bcf	7,5	;volatile
  3199                           
  3200                           ;lcd_hd44780_pic16.c: 140: TRISC&=(~(0x0F<<0));
  3201  0252  30F0               	movlw	240
  3202  0253  00F0               	movwf	??_LCDBusyLoop
  3203  0254  0870               	movf	??_LCDBusyLoop,w
  3204  0255  1683               	bsf	3,5	;RP0=1, select bank1
  3205  0256  1303               	bcf	3,6	;RP1=0, select bank1
  3206  0257  0587               	andwf	7,f	;volatile
  3207  0258  0008               	return
  3208  0259                     __end_of_LCDBusyLoop:	
  3209                           
  3210                           	psect	text12
  3211  07C2                     __ptext12:	
  3212 ;; *************** function _Init *****************
  3213 ;; Defined at:
  3214 ;;		line 12 in file "user.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;		None               void
  3221 ;; Registers used:
  3222 ;;		wreg, status,2
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1
  3228 ;;      Params:         0       0       0
  3229 ;;      Locals:         0       0       0
  3230 ;;      Temps:          0       0       0
  3231 ;;      Totals:         0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; This function calls:
  3235 ;;		Nothing
  3236 ;; This function is called by:
  3237 ;;		_main
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           
  3242                           ;psect for function _Init
  3243  07C2                     _Init:	
  3244                           
  3245                           ;user.c: 15: TRISA = 0b00010100;
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _Init: [wreg+status,2]
  3249  07C2  3014               	movlw	20
  3250  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  3251  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  3252  07C5  0085               	movwf	5	;volatile
  3253                           
  3254                           ;user.c: 16: ANSELA = 0b00010100;
  3255  07C6  3014               	movlw	20
  3256  07C7  1683               	bsf	3,5	;RP0=1, select bank3
  3257  07C8  1703               	bsf	3,6	;RP1=1, select bank3
  3258  07C9  0085               	movwf	5	;volatile
  3259                           
  3260                           ;user.c: 17: PORTA = 0b00000000;
  3261  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  3262  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  3263  07CC  0185               	clrf	5	;volatile
  3264                           
  3265                           ;user.c: 19: TRISB = 0b00000000;
  3266  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  3267  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  3268  07CF  0186               	clrf	6	;volatile
  3269                           
  3270                           ;user.c: 20: ANSELB = 0b00000000;
  3271  07D0  1683               	bsf	3,5	;RP0=1, select bank3
  3272  07D1  1703               	bsf	3,6	;RP1=1, select bank3
  3273  07D2  0186               	clrf	6	;volatile
  3274                           
  3275                           ;user.c: 21: PORTB = 0x00;
  3276  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  3277  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  3278  07D5  0186               	clrf	6	;volatile
  3279                           
  3280                           ;user.c: 23: TRISC = 0x00;
  3281  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  3282  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  3283  07D8  0187               	clrf	7	;volatile
  3284                           
  3285                           ;user.c: 24: ANSELC = 0x00;
  3286  07D9  1683               	bsf	3,5	;RP0=1, select bank3
  3287  07DA  1703               	bsf	3,6	;RP1=1, select bank3
  3288  07DB  0187               	clrf	7	;volatile
  3289                           
  3290                           ;user.c: 25: PORTC = 0xff;
  3291  07DC  30FF               	movlw	255
  3292  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  3293  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  3294  07DF  0087               	movwf	7	;volatile
  3295                           
  3296                           ;user.c: 28: FVRCON = 0xf3;
  3297  07E0  30F3               	movlw	243
  3298  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  3299  07E2  1303               	bcf	3,6	;RP1=0, select bank1
  3300  07E3  009D               	movwf	29	;volatile
  3301  07E4  0008               	return
  3302  07E5                     __end_of_Init:	
  3303                           
  3304                           	psect	text13
  3305  0152                     __ptext13:	
  3306 ;; *************** function _ConfigureOscillator *****************
  3307 ;; Defined at:
  3308 ;;		line 9 in file "system.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;		None               void
  3315 ;; Registers used:
  3316 ;;		status,2
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1
  3322 ;;      Params:         0       0       0
  3323 ;;      Locals:         0       0       0
  3324 ;;      Temps:          0       0       0
  3325 ;;      Totals:         0       0       0
  3326 ;;Total ram usage:        0 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_main
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           
  3336                           ;psect for function _ConfigureOscillator
  3337  0152                     _ConfigureOscillator:	
  3338                           
  3339                           ;system.c: 11: IRCF1 = 0;
  3340                           
  3341                           ;incstack = 0
  3342                           ; Regs used in _ConfigureOscillator: [status,2]
  3343  0152  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0153  1303               	bcf	3,6	;RP1=0, select bank1
  3345  0154  1290               	bcf	16,5	;volatile
  3346                           
  3347                           ;system.c: 12: IRCF0 = 0;
  3348  0155  1210               	bcf	16,4	;volatile
  3349                           
  3350                           ;system.c: 13: OSCTUNE = 0x00;
  3351  0156  0191               	clrf	17	;volatile
  3352                           
  3353                           ;system.c: 15: TMR0 = 0;
  3354  0157  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0158  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0159  0181               	clrf	1	;volatile
  3357                           
  3358                           ;system.c: 16: T0CS = 0;
  3359  015A  1683               	bsf	3,5	;RP0=1, select bank1
  3360  015B  1303               	bcf	3,6	;RP1=0, select bank1
  3361  015C  1281               	bcf	1,5	;volatile
  3362                           
  3363                           ;system.c: 17: T0SE = 0;
  3364  015D  1201               	bcf	1,4	;volatile
  3365                           
  3366                           ;system.c: 18: PSA = 0;
  3367  015E  1181               	bcf	1,3	;volatile
  3368                           
  3369                           ;system.c: 19: PS0 = 1;
  3370  015F  1401               	bsf	1,0	;volatile
  3371                           
  3372                           ;system.c: 20: PS1 = 1;
  3373  0160  1481               	bsf	1,1	;volatile
  3374                           
  3375                           ;system.c: 21: PS2 = 1;
  3376  0161  1501               	bsf	1,2	;volatile
  3377  0162  0008               	return
  3378  0163                     __end_of_ConfigureOscillator:	
  3379  007E                     btemp	set	126	;btemp
  3380  007E                     wtemp	set	126
  3381  007E                     wtemp0	set	126
  3382  0080                     wtemp1	set	128
  3383  0082                     wtemp2	set	130
  3384  0084                     wtemp3	set	132
  3385  0086                     wtemp4	set	134
  3386  0088                     wtemp5	set	136
  3387  007F                     wtemp6	set	127
  3388  007E                     ttemp	set	126
  3389  007E                     ttemp0	set	126
  3390  0081                     ttemp1	set	129
  3391  0084                     ttemp2	set	132
  3392  0087                     ttemp3	set	135
  3393  007F                     ttemp4	set	127
  3394  007E                     ltemp	set	126
  3395  007E                     ltemp0	set	126
  3396  0082                     ltemp1	set	130
  3397  0086                     ltemp2	set	134
  3398  0080                     ltemp3	set	128


Data Sizes:
    Strings     58
    Constant    476
    Data        8
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      35
    BANK1            32      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[4]), STR_16(CODE[10]), STR_15(CODE[4]), STR_14(CODE[9]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_LCDWriteString
    _TempCheck->_LCDGotoXY
    _TempCheck->_LCDWriteInt
    _TempCheck->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_TempCheck
    _TempCheck->_LCDWriteInt

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   12871
                                             18 BANK0      3     3      0
                _ConfigureOscillator
                               _Init
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                     _LCDWriteString
                          _TempCheck
 ---------------------------------------------------------------------------------
 (1) _TempCheck                                            6     6      0    6600
                                             12 BANK0      6     6      0
                            _ADCInit
                            _ADCRead
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       4     2      2    2044
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDWriteInt                                         14    11      3    2350
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            2     1      1    2092
                                             12 COMMON     2     1      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              5     5      0    1171
                                             12 COMMON     2     2      0
                                              0 BANK0      3     3      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDByte                                              7     6      1     964
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (4) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _Init
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _TempCheck
     _ADCInit
     _ADCRead
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      23       5       43.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31       8        0.0%
ABS                  0      0      31       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Aug 25 00:06:02 2017

                ?_LCDBusyLoop 0070                             pc 0002                            l21 01AE  
                          l22 01B1                            l66 0173                            l67 0169  
                ___awdiv@sign 0076                            _sl 0042                            fsr 0004  
                         l166 0190                           _RC4 003C                           _RC5 003D  
                         _RC6 003E                           _PS0 0408                           u415 0199  
                         _PS1 0409                           _PS2 040A                           u505 0336  
                         u465 0314                           u705 07AC                           u395 0225  
                         u485 0320                           u565 0273                           u735 017F  
                         u495 032C                           u807 041B                           _PSA 040B  
                         u585 0284                           u817 042F                           u595 028D  
                         u907 04E5                           u827 0443                           u917 04F8  
                         u837 0457                           u927 018A                           u847 046B  
                         u937 02AD                           u857 047F                           u777 03D2  
                         u867 0493                           u787 03E3                           u877 04A7  
                         u797 0407                           u887 04BB                           u897 04CF  
                         fsr0 0004               __end_of_ADCInit 014A               __end_of_ADCRead 0195  
                         indf 0000                  ___awmod@sign 0076       LCDWriteInt@field_length 0022  
             __end_of_LCDByte 01CF               __end_of_LCDInit 02F4                  ?_LCDWriteInt 0020  
                 LCDByte@temp 007B                          l1011 0219                          l1101 0311  
                        l1103 031F                          l1113 0340                          l1201 074E  
                        l1211 078D                          l1203 077B                          l1117 0348  
                        l1109 0335                          l1141 0270                          l1133 026A  
                        l1213 079F                          l1231 016B                          l1143 027E  
                        l1151 0297                          l1207 077F                          l1129 0263  
                        l1209 0785                          l1091 0309                          l1155 029F  
                        l1147 028C                          l1085 02FE                          l1173 01FB  
                        l1181 01CF                          l1177 01FF                          l1419 04EF  
                        _ADON 00F8                          STR_1 06EE                          STR_2 071A  
                        STR_3 0722                          STR_4 0724                          STR_5 071E  
                        STR_6 071A                          STR_7 0716                          STR_8 071C  
                        STR_9 071A                          _T0CS 040D                          _T0SE 040C  
                        _TMR0 0001                          _Init 07C2                          _main 03C8  
          __size_of_LCDGotoXY 0015                          btemp 007E                 __CFG_BOREN$ON 0000  
                        ltemp 007E                          start 0000                          ttemp 007E  
                        wtemp 007E                         ?_Init 0070                         ?_main 0070  
             __end_of___awdiv 034D                         _ADRES 001E                         STR_10 0726  
                       STR_11 0720                         STR_12 071C                         STR_13 0718  
                       STR_14 0709                         STR_15 0712                         STR_16 06FF  
                       STR_17 0712                 __CFG_WDTE$OFF 0000               __end_of___awmod 02A4  
                LCDInit@style 007C               ___awdiv@divisor 0070                         _IRCF0 0484  
                       _IRCF1 0485               ___awdiv@counter 0075                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087           _ConfigureOscillator 0152  
               __CFG_PWRTE$ON 0000                         pclath 000A                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F          ?_ConfigureOscillator 0070               __initialization 07E8  
                __end_of_Init 07E5                  __end_of_main 0500                     ??_ADCInit 0070  
                   ??_ADCRead 0070                        ??_Init 0070                        ??_main 0032  
           __end_of_LCDGotoXY 0178                 LCDByte@isdata 0075                     ??_LCDByte 0076  
                   ??_LCDInit 0020                     ADCRead@ch 0071                        _ADCON0 001F  
                      _ADCON1 009F              ___awdiv@dividend 0072                        _ANSELA 0185  
                      _ANSELB 0186                        _ANSELC 0187                        _FVRCON 009D  
       ??_ConfigureOscillator 0070                _LCDWriteString 01CF                     ??___awdiv 0074  
                   ??___awmod 0074            __size_of_TempCheck 007B          __size_of_LCDBusyLoop 004B  
            ___awdiv@quotient 0077               ___awmod@divisor 0070               ___awmod@counter 0075  
                LCDWriteInt@i 002A                  LCDWriteInt@j 0028          __size_of_LCDWriteInt 009A  
     __end_of__initialization 07FE        __end_of_LCDWriteString 020E                     LCDByte@hn 0078  
                   LCDByte@ln 0079                __pcstackCOMMON 0070                  __pidataBANK0 014A  
                  __pbssBANK0 003D             __end_of_TempCheck 03C8               ?_LCDWriteString 007C  
                  __pmaintext 03C8                       _ADCInit 0145                       _ADCRead 0178  
                     _LCDByte 0195                       _LCDInit 02A4                       _OSCTUNE 0091  
                  __stringtab 0500                       ___cgram 0035                       ___awdiv 02F4  
                     ___awmod 0259                       __ptext1 034D                       __ptext2 01CF  
                     __ptext3 0728                       __ptext4 0259                       __ptext5 02F4  
                     __ptext6 0163                       __ptext7 0178                       __ptext8 0145  
                     __ptext9 02A4              ___awmod@dividend 0072                     _LCDGotoXY 0163  
        end_of_initialization 07FE                  __pstringtext 0500             LCDWriteString@msg 007C  
                   _TRISCbits 0087                    ?_LCDGotoXY 007C   __end_of_ConfigureOscillator 0163  
                  LCDInit@__i 007D                    LCDGotoXY@x 007D                    LCDGotoXY@y 007C  
               ??_LCDBusyLoop 0070           start_initialization 07E8                 ??_LCDWriteInt 007C  
            ??_LCDWriteString 0020                     _TempCheck 034D                   __pdataBANK0 0035  
                    ?_ADCInit 0070                      ?_ADCRead 0070           __end_of_LCDBusyLoop 0259  
                    ?_LCDByte 0075                      ?_LCDInit 0070                      LCDByte@c 007A  
                   ___latbits 0000                 __pcstackBANK0 0020                   ??_LCDGotoXY 007D  
            LCDWriteInt@F1072 003D           __end_of_LCDWriteInt 07C2             TempCheck@tempread 0512  
                  ?_TempCheck 0070                      ?___awdiv 0070                      ?___awmod 0070  
             LCDBusyLoop@busy 0072               LCDBusyLoop@temp 0073     __end_ofTempCheck@tempread 06EE  
                    _GO_nDONE 00F9                   _LCDBusyLoop 020E              LCDWriteString@cc 0021  
            __size_of_ADCInit 0005              __size_of_ADCRead 001D                   __stringbase 0512  
            __size_of_LCDByte 003A              __size_of_LCDInit 0050                   _LCDWriteInt 0728  
                 ??_TempCheck 002C              __size_of___awdiv 0059              __size_of___awmod 004B  
           LCDBusyLoop@status 0074            __end_of__stringtab 0512              TempCheck@tempout 0030  
                    __ptext10 0195                      __ptext11 020E                      __ptext12 07C2  
                    __ptext13 0152                 __size_of_Init 0023                 __size_of_main 0138  
__size_of_ConfigureOscillator 0011               TempCheck@tempin 002E                LCDWriteInt@val 0020  
              LCDWriteInt@str 0023                     stringcode 050A                      stringtab 0500  
          __CFG_FOSC$INTOSCIO 0000       __size_of_LCDWriteString 003F  
