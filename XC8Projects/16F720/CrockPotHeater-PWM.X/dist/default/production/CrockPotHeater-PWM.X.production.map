Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/production\CrockPotHeater-PWM.X.production.sym \
  --cmf=dist/default/production\CrockPotHeater-PWM.X.production.cmf -z \
  -Q16F720 -oC:\Users\DAVE\AppData\Local\Temp\s3hk.2 \
  -Mdist/default/production/CrockPotHeater-PWM.X.production.map -E1 \
  -ver=XC8 -ASTACK=0B0h-0bfh -pstack=STACK -ACODE=00h-07FFh \
  -ASTRCODE=00h-07FFh -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 \
  -AENTRY=00h-0FFhx8 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0BFh \
  -ARAM=020h-06Fh,0A0h-0BFh -AABS1=020h-07Fh,0A0h-0BFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-016Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\DAVE\AppData\Local\Temp\s3hk.obj \
  dist/default/production\CrockPotHeater-PWM.X.production.obj 

Object code version is 3.11

Machine type is 16F720



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\DAVE\AppData\Local\Temp\s3hk.obj
                end_init                             10       10        1        8       0
                reset_vec                             0        0        1        0       0
                config                             2007     2007        2     400E       0
dist/default/production\CrockPotHeater-PWM.X.production.obj
                cinit                                11       11       3D        8       0
                intentry                              4        4        C        8       0
                text14                              455      455       1D        8       0
                text13                              48C      48C       1A        8       0
                text12                              398      398       3F        8       0
                text11                              472      472       1A        8       0
                text10                              4CD      4CD       10        8       0
                text9                               4F0      4F0        5      9CE       0
                text8                               3D7      3D7       38        8       0
                text7                               353      353       45        8       0
                text6                               432      432       23        8       0
                text5                               2AB      2AB       5B        8       0
                text4                               306      306       4D        8       0
                text3                               1D9      1D9       D2        8       0
                text2                               4A6      4A6       17        8       0
                text1                               40F      40F       23        8       0
                maintext                             4E       4E      18B        8       0
                cstackBANK0                          20       20       38       20       1
                cstackCOMMON                         70       70        A       70       1
                dataBANK1                            A0       A0       10       A0       1
                dataBANK0                            58       58        9       20       1
                bssBANK0                             61       61        5       20       1
                strings                             4DD      4DD        A      9BA       0
                idataBANK1                          4BD      4BD       10        8       0
                idataBANK0                          4E7      4E7        9      9CE       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        1         0
                cinit                                11       11       3D         0
                intentry                              4        4        C         0
                reset_vec                             0        0        1         0
                text14                              455      455       1D         0
                text13                              48C      48C       1A         0
                text12                              398      398       3F         0
                text11                              472      472       1A         0
                text10                              4CD      4CD       10         0
                text9                               4F0      4F0        5         0
                text8                               3D7      3D7       38         0
                text7                               353      353       45         0
                text6                               432      432       23         0
                text5                               2AB      2AB       5B         0
                text4                               306      306       4D         0
                text3                               1D9      1D9       D2         0
                text2                               4A6      4A6       17         0
                text1                               40F      40F       23         0
                maintext                             4E       4E      18B         0
                idataBANK1                          4BD      4BD       10         0
                idataBANK0                          4E7      4E7        9         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             4DD      4DD        A         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        A         1

        CLASS   BANK0          
                cstackBANK0                          20       20       38         1
                dataBANK0                            58       58        9         1
                bssBANK0                             61       61        5         1

        CLASS   BANK1          
                dataBANK1                            A0       A0       10         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   BANK3          

        CLASS   BANK2          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  0004D9  0004DD         8       0  CODE        2
                cstackBANK0                    000020  000046  000066        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                dataBANK1                      0000A0  000010  0000B0        A0       1  BANK1       1
                strings                        0004DD  00000A  0004E7       9BA       0  STRING      2
                idataBANK0                     0004E7  00000E  0004F5       9CE       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0066-006F              A           1
        BANK1            00B0-00BF             10           1
        CODE             0001-0003              3           2
                         04F5-07FF            30B
        COMMON           007A-007D              4           1
        CONST            0001-0003              3           2
                         04F5-07FF            100
        ENTRY            0001-0003              3           2
                         04F5-07FF            100
        IDLOC            2000-2003              4           2
        RAM              0066-006F              A           1
                         00B0-00BF             10
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-016F             70           1
        SFR3             0180-01EF             70           1
        STACK            00B0-00BF             10           1
        STRCODE          0001-0003              3           2
                         04F5-07FF            30B
        STRING           0001-0003              3           2
                         04F5-07FF            100

                                  Symbol Table

?___awdiv                  cstackCOMMON 0074
?___awmod                  cstackCOMMON 0074
?___wmul                   cstackBANK0  0024
ADCRead@ch                 cstackCOMMON 0075
LCD_Cmd@a                  cstackCOMMON 0076
LCD_Init@style             cstackCOMMON 0078
LCD_Port@a                 cstackCOMMON 0074
LCD_Set_Cursor@temp        cstackBANK0  0023
LCD_Set_Cursor@w           cstackBANK0  0022
LCD_Set_Cursor@x           cstackBANK0  0020
LCD_Set_Cursor@y           cstackCOMMON 0077
LCD_Set_Cursor@z           cstackBANK0  0021
LCD_Write_Char@a           cstackCOMMON 0078
LCD_Write_Char@temp        cstackCOMMON 0076
LCD_Write_Char@y           cstackCOMMON 0077
LCD_Write_Int@F1081        bssBANK0     0061
LCD_Write_Int@fieldLength  cstackBANK0  0026
LCD_Write_Int@i            cstackBANK0  0035
LCD_Write_Int@j            cstackBANK0  0033
LCD_Write_Int@numPlaces    cstackBANK0  0027
LCD_Write_Int@sign         cstackBANK0  0028
LCD_Write_Int@str          cstackBANK0  002E
LCD_Write_Int@value        cstackBANK0  0024
LCD_Write_String@a         cstackBANK0  0020
LCD_Write_String@i         cstackBANK0  0021
_ADCON0                    (abs)        001F
_ADCON1                    (abs)        009F
_ADCRead                   text13       048C
_ADON                      (abs)        00F8
_ADRES                     (abs)        001E
_ANSELA                    (abs)        0185
_ANSELB                    (abs)        0186
_ANSELC                    (abs)        0187
_CCP1CON                   (abs)        0017
_CCP1CONbits               (abs)        0017
_CCPR1L                    (abs)        0015
_FVRCON                    (abs)        009D
_GO_nDONE                  (abs)        00F9
_INTCONbits                (abs)        000B
_IRCF0                     (abs)        0484
_IRCF1                     (abs)        0485
_Init                      text12       0398
_LCD_Clear                 text9        04F0
_LCD_Cmd                   text10       04CD
_LCD_Init                  text8        03D7
_LCD_Port                  text11       0472
_LCD_Set_Cursor            text7        0353
_LCD_Write_Char            text6        0432
_LCD_Write_Int             text3        01D9
_LCD_Write_String          text2        04A6
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_PORTA                     (abs)        0005
_PORTB                     (abs)        0006
_PR2                       (abs)        0092
_PS0                       (abs)        0408
_PS1                       (abs)        0409
_PS2                       (abs)        040A
_PSA                       (abs)        040B
_RA5                       (abs)        002D
_RB4                       (abs)        0034
_RB5                       (abs)        0035
_RB6                       (abs)        0036
_RB7                       (abs)        0037
_RC1                       (abs)        0039
_RC2                       (abs)        003A
_T0CS                      (abs)        040D
_T1CON                     (abs)        0010
_T1CONbits                 (abs)        0010
_T2CONbits                 (abs)        0012
_TMR0                      (abs)        0001
_TMR1H                     (abs)        000F
_TMR1L                     (abs)        000E
_TRISA                     (abs)        0085
_TRISB                     (abs)        0086
_TRISC                     (abs)        0087
_TRISCbits                 (abs)        0087
__CFG_BOREN$ON             (abs)        0000
__CFG_CP$OFF               (abs)        0000
__CFG_FOSC$INTOSCIO        (abs)        0000
__CFG_MCLRE$ON             (abs)        0000
__CFG_PLLEN$OFF            (abs)        0000
__CFG_PWRTE$ON             (abs)        0000
__CFG_WDTE$OFF             (abs)        0000
__CFG_WRTEN$OFF            (abs)        0000
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__Hcinit                   cinit        004E
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__HdataBANK0               dataBANK0    0000
__HdataBANK1               dataBANK1    0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0011
__Hfunctab                 functab      0000
__HidataBANK0              idataBANK0   0000
__HidataBANK1              idataBANK1   0000
__Hidloc                   idloc        0000
__Hinit                    init         0010
__Hintentry                intentry     0010
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0001
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        2009
__Hspace_1                 (abs)        00B0
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__Lcinit                   cinit        0011
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       2007
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__LdataBANK0               dataBANK0    0000
__LdataBANK1               dataBANK1    0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0010
__Lfunctab                 functab      0000
__LidataBANK0              idataBANK0   0000
__LidataBANK1              idataBANK1   0000
__Lidloc                   idloc        0000
__Linit                    init         0010
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        2009
__S1                       (abs)        00B0
__S2                       (abs)        0000
___awdiv                   text5        02AB
___awdiv@counter           cstackBANK0  0020
___awdiv@dividend          cstackCOMMON 0076
___awdiv@divisor           cstackCOMMON 0074
___awdiv@quotient          cstackBANK0  0022
___awdiv@sign              cstackBANK0  0021
___awmod                   text4        0306
___awmod@counter           cstackBANK0  0020
___awmod@dividend          cstackCOMMON 0076
___awmod@divisor           cstackCOMMON 0074
___awmod@sign              cstackBANK0  0021
___cgram                   dataBANK0    0058
___int_sp                  stack        0000
___latbits                 (abs)        0000
___sp                      stack        0000
___wmul                    text1        040F
___wmul@multiplicand       cstackBANK0  0026
___wmul@multiplier         cstackBANK0  0024
___wmul@product            cstackBANK0  0028
__end_of_ADCRead           text13       04A6
__end_of_Init              text12       03D7
__end_of_LCD_Clear         text9        04F5
__end_of_LCD_Cmd           text10       04DD
__end_of_LCD_Init          text8        040F
__end_of_LCD_Port          text11       048C
__end_of_LCD_Set_Cursor    text7        0398
__end_of_LCD_Write_Char    text6        0455
__end_of_LCD_Write_Int     text3        02AB
__end_of_LCD_Write_String  text2        04BD
__end_of___awdiv           text5        0306
__end_of___awmod           text4        0353
__end_of___wmul            text1        0432
__end_of__initialization   cinit        004C
__end_of__stringtab        strings      04E3
__end_of_int_routine       text14       0472
__end_of_main              maintext     01D9
__initialization           cinit        0011
__pbssBANK0                bssBANK0     0061
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pdataBANK0               dataBANK0    0058
__pdataBANK1               dataBANK1    00A0
__pidataBANK0              idataBANK0   04E7
__pidataBANK1              idataBANK1   04BD
__pintentry                intentry     0004
__pmaintext                maintext     004E
__pstrings                 strings      04DD
__ptext1                   text1        040F
__ptext10                  text10       04CD
__ptext11                  text11       0472
__ptext12                  text12       0398
__ptext13                  text13       048C
__ptext14                  text14       0455
__ptext2                   text2        04A6
__ptext3                   text3        01D9
__ptext4                   text4        0306
__ptext5                   text5        02AB
__ptext6                   text6        0432
__ptext7                   text7        0353
__ptext8                   text8        03D7
__ptext9                   text9        04F0
__size_of_ADCRead          (abs)        0000
__size_of_Init             (abs)        0000
__size_of_LCD_Clear        (abs)        0000
__size_of_LCD_Cmd          (abs)        0000
__size_of_LCD_Init         (abs)        0000
__size_of_LCD_Port         (abs)        0000
__size_of_LCD_Set_Cursor   (abs)        0000
__size_of_LCD_Write_Char   (abs)        0000
__size_of_LCD_Write_Int    (abs)        0000
__size_of_LCD_Write_String (abs)        0000
__size_of___awdiv          (abs)        0000
__size_of___awmod          (abs)        0000
__size_of___wmul           (abs)        0000
__size_of_int_routine      (abs)        0000
__size_of_main             (abs)        0000
__stringbase               strings      04E2
__stringtab                strings      04DD
_int_routine               text14       0455
_main                      maintext     004E
_main$723                  cstackBANK0  004F
_output                    dataBANK0    0060
btemp                      (abs)        007E
end_of_initialization      cinit        004C
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
ltemp                      (abs)        007E
ltemp0                     (abs)        007E
ltemp1                     (abs)        0082
ltemp2                     (abs)        0086
ltemp3                     (abs)        0080
main@F1067                 dataBANK1    00A0
main@counter               cstackBANK0  003B
main@readTemperatureC      cstackBANK0  004D
main@readTemperatureF      cstackBANK0  0053
main@sampleIndex           cstackBANK0  0055
main@samples               cstackBANK0  003D
main@setpoint              cstackBANK0  0052
main@tempReadTemperature   cstackBANK0  0051
main@total                 cstackBANK0  0056
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
stackhi                    (abs)        0000
stacklo                    (abs)        0000
start                      init         0010
start_initialization       cinit        0011
ttemp                      (abs)        007E
ttemp0                     (abs)        007E
ttemp1                     (abs)        0081
ttemp2                     (abs)        0084
ttemp3                     (abs)        0087
ttemp4                     (abs)        007F
wtemp                      (abs)        007E
wtemp0                     (abs)        007E
wtemp1                     (abs)        0080
wtemp2                     (abs)        0082
wtemp3                     (abs)        0084
wtemp4                     (abs)        0086
wtemp5                     (abs)        0088
wtemp6                     (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 12 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  samples        16   29[BANK0 ] int [8]
  total           2   54[BANK0 ] int 
  readTemperat    2   51[BANK0 ] int 
  readTemperat    2   45[BANK0 ] int 
  counter         2   27[BANK0 ] int 
  sampleIndex     1   53[BANK0 ] unsigned char 
  setpoint        1   50[BANK0 ] unsigned char 
  tempReadTemp    1   49[BANK0 ] unsigned char 
  x               1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0      29       0
      Temps:          0       4       0
      Totals:         0      33       0
Total ram usage:       33 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_ADCRead
		_Init
		_LCD_Clear
		_LCD_Init
		_LCD_Set_Cursor
		_LCD_Write_Char
		_LCD_Write_Int
		_LCD_Write_String
		___awdiv
		___wmul
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    4[BANK0 ] unsigned int 
  multiplicand    2    6[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    8[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    4[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       4       0
      Locals:         0       2       0
      Temps:          0       0       0
      Totals:         0       6       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_String *****************
 Defined at:
		line 239 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR const unsigned char 
		 -> STR_1(4), 
 Auto vars:     Size  Location     Type
  a               1    0[BANK0 ] PTR const unsigned char 
		 -> STR_1(4), 
  i               1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       2       0
      Temps:          1       0       0
      Totals:         1       2       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_Int *****************
 Defined at:
		line 246 in file "lcd.c"
 Parameters:    Size  Location     Type
  value           2    4[BANK0 ] int 
  fieldLength     1    6[BANK0 ] char 
  numPlaces       1    7[BANK0 ] char 
  sign            1    8[BANK0 ] char 
 Auto vars:     Size  Location     Type
  str             5   14[BANK0 ] unsigned char [5]
  i               2   21[BANK0 ] int 
  j               2   19[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       5       0
      Locals:         0       9       0
      Temps:          0       5       0
      Totals:         0      19       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Write_Char
		___awdiv
		___awmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    4[COMMON] int 
  dividend        2    6[COMMON] int 
 Auto vars:     Size  Location     Type
  sign            1    1[BANK0 ] unsigned char 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    4[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         4       0       0
      Locals:         0       2       0
      Temps:          1       0       0
      Totals:         5       2       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_Write_Int
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    4[COMMON] int 
  dividend        2    6[COMMON] int 
 Auto vars:     Size  Location     Type
  quotient        2    2[BANK0 ] int 
  sign            1    1[BANK0 ] unsigned char 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    4[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         4       0       0
      Locals:         0       4       0
      Temps:          1       0       0
      Totals:         5       4       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_Write_Int
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_Char *****************
 Defined at:
		line 223 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     const unsigned char 
 Auto vars:     Size  Location     Type
  a               1    8[COMMON] const unsigned char 
  y               1    7[COMMON] unsigned char 
  temp            1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         3       0       0
      Temps:          1       0       0
      Totals:         4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_Port
 This function is called by:
		_LCD_Write_String
		_LCD_Write_Int
		_main
		_InitCustomChars
 This function uses a non-reentrant model


 *************** function _LCD_Set_Cursor *****************
 Defined at:
		line 82 in file "lcd.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    7[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    0[BANK0 ] unsigned char 
  temp            1    3[BANK0 ] unsigned char 
  w               1    2[BANK0 ] unsigned char 
  z               1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         1       0       0
      Locals:         0       4       0
      Temps:          2       0       0
      Totals:         3       4       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 154 in file "lcd.c"
 Parameters:    Size  Location     Type
  style           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  style           1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          1       0       0
      Totals:         2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Cmd
		_LCD_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Clear *****************
 Defined at:
		line 75 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Cmd *****************
 Defined at:
		line 65 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          1       0       0
      Totals:         2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_Port
 This function is called by:
		_LCD_Clear
		_LCD_Set_Cursor
		_LCD_Init
		_InitCustomChars
 This function uses a non-reentrant model


 *************** function _LCD_Port *****************
 Defined at:
		line 41 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          0       0       0
      Totals:         1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_Cmd
		_LCD_Init
		_LCD_Write_Char
 This function uses a non-reentrant model


 *************** function _Init *****************
 Defined at:
		line 26 in file "system.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADCRead *****************
 Defined at:
		line 15 in file "user.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          1       0       0
      Totals:         2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _int_routine *****************
 Defined at:
		line 5 in file "interupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          4       0       0
      Totals:         4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c
		___awmod       		CODE           	0306	0000	78

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c estimated size: 78

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c
		___wmul        		CODE           	040F	0000	36

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c estimated size: 36

interupts.c
		_int_routine   		CODE           	0455	0000	30

interupts.c estimated size: 30

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c
		___awdiv       		CODE           	02AB	0000	92

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c estimated size: 92

shared
		__stringtab    		STRING         	04DD	0000	7
		__initialization		CODE           	0011	0000	60

shared estimated size: 67

lcd.c
		_LCD_Init      		CODE           	03D7	0000	57
		_LCD_Write_Char		CODE           	0432	0000	36
		_LCD_Cmd       		CODE           	04CD	0000	17
		_LCD_Set_Cursor		CODE           	0353	0000	70
		_LCD_Clear     		CODE           	04F0	0000	6
		_LCD_Port      		CODE           	0472	0000	27
		_LCD_Write_String		CODE           	04A6	0000	24
		_LCD_Write_Int 		CODE           	01D9	0000	211

lcd.c estimated size: 448

user.c
		_ADCRead       		CODE           	048C	0000	27

user.c estimated size: 27

main.c
		_main          		CODE           	004E	0000	396

main.c estimated size: 396

system.c
		_Init          		CODE           	0398	0000	64

system.c estimated size: 64

