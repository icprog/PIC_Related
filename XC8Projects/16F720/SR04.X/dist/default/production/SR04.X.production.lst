

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Apr 08 19:44:04 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F720
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000E                     	;# 
    36  000E                     	;# 
    37  000F                     	;# 
    38  0010                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0013                     	;# 
    42  0014                     	;# 
    43  0015                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  0087                     	;# 
    56  008C                     	;# 
    57  008E                     	;# 
    58  008F                     	;# 
    59  0090                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0093                     	;# 
    64  0094                     	;# 
    65  0095                     	;# 
    66  0096                     	;# 
    67  0098                     	;# 
    68  0099                     	;# 
    69  009D                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010D                     	;# 
    73  010E                     	;# 
    74  010F                     	;# 
    75  0115                     	;# 
    76  0116                     	;# 
    77  0185                     	;# 
    78  0186                     	;# 
    79  0187                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  008C                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009D                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0185                     	;# 
   136  0186                     	;# 
   137  0187                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  008C                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009D                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  0115                     	;# 
   192  0116                     	;# 
   193  0185                     	;# 
   194  0186                     	;# 
   195  0187                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  0081                     	;# 
   227  0085                     	;# 
   228  0086                     	;# 
   229  0087                     	;# 
   230  008C                     	;# 
   231  008E                     	;# 
   232  008F                     	;# 
   233  0090                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0093                     	;# 
   237  0093                     	;# 
   238  0094                     	;# 
   239  0095                     	;# 
   240  0096                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009D                     	;# 
   244  009F                     	;# 
   245  010C                     	;# 
   246  010D                     	;# 
   247  010E                     	;# 
   248  010F                     	;# 
   249  0115                     	;# 
   250  0116                     	;# 
   251  0185                     	;# 
   252  0186                     	;# 
   253  0187                     	;# 
   254  018C                     	;# 
   255  018D                     	;# 
   256                           
   257                           	psect	idataBANK0
   258  04A9                     __pidataBANK0:	
   259                           
   260                           ;initializer for ___cgram
   261  04A9  340C               	retlw	12
   262  04AA  3412               	retlw	18
   263  04AB  3412               	retlw	18
   264  04AC  340C               	retlw	12
   265  04AD  3400               	retlw	0
   266  04AE  3400               	retlw	0
   267  04AF  3400               	retlw	0
   268  04B0  3400               	retlw	0
   269  0007                     _PORTC	set	7
   270  0010                     _T1CON	set	16
   271  000F                     _TMR1H	set	15
   272  000E                     _TMR1L	set	14
   273  005F                     _GIE	set	95
   274  005B                     _RABIE	set	91
   275  0058                     _RABIF	set	88
   276  0035                     _RB5	set	53
   277  003C                     _RC4	set	60
   278  003D                     _RC5	set	61
   279  003E                     _RC6	set	62
   280  0096                     _IOCA	set	150
   281  0086                     _TRISB	set	134
   282  0087                     _TRISC	set	135
   283  0087                     _TRISCbits	set	135
   284                           
   285                           	psect	strings
   286  0001                     __pstrings:	
   287  0001                     stringtab:	
   288  0001                     __stringtab:	
   289  0001                     stringcode:	
   290                           ;	String table - string pointers are 1 byte each
   291                           
   292  0001                     stringdir:	
   293  0001  3000               	movlw	high stringdir
   294  0002  008A               	movwf	10
   295  0003  0804               	movf	4,w
   296  0004  0A84               	incf	4,f
   297  0005  0782               	addwf	2,f
   298  0006                     __stringbase:	
   299  0006  3400               	retlw	0
   300  0007                     __end_of__stringtab:	
   301  0007                     STR_1:	
   302  0007  3454               	retlw	84	;'T'
   303  0008  3465               	retlw	101	;'e'
   304  0009  3473               	retlw	115	;'s'
   305  000A  3474               	retlw	116	;'t'
   306  000B  3469               	retlw	105	;'i'
   307  000C  346E               	retlw	110	;'n'
   308  000D  3467               	retlw	103	;'g'
   309  000E  3420               	retlw	32	;' '
   310  000F  3433               	retlw	51	;'3'
   311  0010  3430               	retlw	48	;'0'
   312  0011  3425               	retlw	37	;'%'
   313  0012  3430               	retlw	48	;'0'
   314  0013  3400               	retlw	0
   315  0014                     STR_2:	
   316  0014  344F               	retlw	79	;'O'
   317  0015  3475               	retlw	117	;'u'
   318  0016  3474               	retlw	116	;'t'
   319  0017  3420               	retlw	32	;' '
   320  0018  346F               	retlw	111	;'o'
   321  0019  3466               	retlw	102	;'f'
   322  001A  3420               	retlw	32	;' '
   323  001B  3452               	retlw	82	;'R'
   324  001C  3461               	retlw	97	;'a'
   325  001D  346E               	retlw	110	;'n'
   326  001E  3467               	retlw	103	;'g'
   327  001F  3465               	retlw	101	;'e'
   328  0020  3400               	retlw	0
   329                           
   330                           ; #config settings
   331  0000                     
   332                           	psect	cinit
   333  07E6                     start_initialization:	
   334  07E6                     __initialization:	
   335                           
   336                           ; Clear objects allocated to BANK0
   337  07E6  01AF               	clrf	__pbssBANK0& (0+127)
   338  07E7  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   339  07E8  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   340  07E9  01B2               	clrf	(__pbssBANK0+3)& (0+127)
   341  07EA  01B3               	clrf	(__pbssBANK0+4)& (0+127)
   342  07EB  01B4               	clrf	(__pbssBANK0+5)& (0+127)
   343  07EC  01B5               	clrf	(__pbssBANK0+6)& (0+127)
   344  07ED  01B6               	clrf	(__pbssBANK0+7)& (0+127)
   345                           
   346                           ; Initialize objects allocated to BANK0
   347  07EE  24A9               	fcall	__pidataBANK0	;fetch initializer
   348  07EF  00B7               	movwf	__pdataBANK0& (0+127)
   349  07F0  24AA               	fcall	__pidataBANK0+1	;fetch initializer
   350  07F1  00B8               	movwf	(__pdataBANK0+1)& (0+127)
   351  07F2  24AB               	fcall	__pidataBANK0+2	;fetch initializer
   352  07F3  00B9               	movwf	(__pdataBANK0+2)& (0+127)
   353  07F4  24AC               	fcall	__pidataBANK0+3	;fetch initializer
   354  07F5  00BA               	movwf	(__pdataBANK0+3)& (0+127)
   355  07F6  24AD               	fcall	__pidataBANK0+4	;fetch initializer
   356  07F7  00BB               	movwf	(__pdataBANK0+4)& (0+127)
   357  07F8  24AE               	fcall	__pidataBANK0+5	;fetch initializer
   358  07F9  00BC               	movwf	(__pdataBANK0+5)& (0+127)
   359  07FA  24AF               	fcall	__pidataBANK0+6	;fetch initializer
   360  07FB  00BD               	movwf	(__pdataBANK0+6)& (0+127)
   361  07FC  24B0               	fcall	__pidataBANK0+7	;fetch initializer
   362  07FD  00BE               	movwf	(__pdataBANK0+7)& (0+127)
   363  07FE                     end_of_initialization:	
   364                           ;End of C runtime variable initialization code
   365                           
   366  07FE                     __end_of__initialization:	
   367  07FE  0183               	clrf	3
   368  07FF  2F37               	ljmp	_main	;jump to C main() function
   369                           
   370                           	psect	bssBANK0
   371  002F                     __pbssBANK0:	
   372  002F                     LCDWriteInt@F1075:	
   373  002F                     	ds	5
   374  0034                     _a:	
   375  0034                     	ds	2
   376  0036                     _x:	
   377  0036                     	ds	1
   378                           
   379                           	psect	dataBANK0
   380  0037                     __pdataBANK0:	
   381  0037                     ___cgram:	
   382  0037                     	ds	8
   383                           
   384                           	psect	cstackCOMMON
   385  0070                     __pcstackCOMMON:	
   386  0070                     ?_ConfigureOscillator:	
   387  0070                     ??_ConfigureOscillator:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0070                     ?_Init:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0070                     ??_Init:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0070                     ?_LCDInit:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0070                     ?_LCDWriteString:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0070                     ?_LCDReset:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0070                     ?_LCDBusyLoop:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0070                     ??_LCDBusyLoop:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0070                     ?_main:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0070                     ?___awdiv:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0070                     ?___awmod:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0070                     ___awdiv@divisor:	
   421                           ; 2 bytes @ 0x0
   422                           
   423  0070                     ___awmod@divisor:	
   424                           ; 2 bytes @ 0x0
   425                           
   426                           
   427                           ; 2 bytes @ 0x0
   428  0070                     	ds	2
   429  0072                     LCDBusyLoop@busy:	
   430  0072                     ___awdiv@dividend:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0072                     ___awmod@dividend:	
   434                           ; 2 bytes @ 0x2
   435                           
   436                           
   437                           ; 2 bytes @ 0x2
   438  0072                     	ds	1
   439  0073                     LCDBusyLoop@temp:	
   440                           
   441                           ; 1 bytes @ 0x3
   442  0073                     	ds	1
   443  0074                     ??___awdiv:	
   444  0074                     ??___awmod:	
   445                           ; 0 bytes @ 0x4
   446                           
   447  0074                     LCDBusyLoop@status:	
   448                           ; 0 bytes @ 0x4
   449                           
   450                           
   451                           ; 1 bytes @ 0x4
   452  0074                     	ds	1
   453  0075                     ?_LCDByte:	
   454  0075                     LCDByte@isdata:	
   455                           ; 0 bytes @ 0x5
   456                           
   457  0075                     ___awdiv@counter:	
   458                           ; 1 bytes @ 0x5
   459                           
   460  0075                     ___awmod@counter:	
   461                           ; 1 bytes @ 0x5
   462                           
   463                           
   464                           ; 1 bytes @ 0x5
   465  0075                     	ds	1
   466  0076                     ??_LCDByte:	
   467  0076                     ___awdiv@sign:	
   468                           ; 0 bytes @ 0x6
   469                           
   470  0076                     ___awmod@sign:	
   471                           ; 1 bytes @ 0x6
   472                           
   473                           
   474                           ; 1 bytes @ 0x6
   475  0076                     	ds	1
   476  0077                     ___awdiv@quotient:	
   477                           
   478                           ; 2 bytes @ 0x7
   479  0077                     	ds	1
   480  0078                     LCDByte@hn:	
   481                           
   482                           ; 1 bytes @ 0x8
   483  0078                     	ds	1
   484  0079                     LCDByte@ln:	
   485                           
   486                           ; 1 bytes @ 0x9
   487  0079                     	ds	1
   488  007A                     LCDByte@c:	
   489                           
   490                           ; 1 bytes @ 0xA
   491  007A                     	ds	1
   492  007B                     LCDByte@temp:	
   493                           
   494                           ; 1 bytes @ 0xB
   495  007B                     	ds	1
   496  007C                     ?_LCDGotoXY:	
   497  007C                     ??_LCDWriteString:	
   498                           ; 0 bytes @ 0xC
   499                           
   500  007C                     ??_LCDWriteInt:	
   501                           ; 0 bytes @ 0xC
   502                           
   503  007C                     ??_LCDReset:	
   504                           ; 0 bytes @ 0xC
   505                           
   506  007C                     LCDReset@style:	
   507                           ; 0 bytes @ 0xC
   508                           
   509  007C                     LCDInit@style:	
   510                           ; 1 bytes @ 0xC
   511                           
   512  007C                     LCDGotoXY@y:	
   513                           ; 1 bytes @ 0xC
   514                           
   515                           
   516                           ; 1 bytes @ 0xC
   517  007C                     	ds	1
   518  007D                     ??_LCDGotoXY:	
   519  007D                     LCDInit@__i:	
   520                           ; 0 bytes @ 0xD
   521                           
   522  007D                     LCDGotoXY@x:	
   523                           ; 1 bytes @ 0xD
   524                           
   525                           
   526                           ; 1 bytes @ 0xD
   527  007D                     	ds	1
   528                           
   529                           	psect	cstackBANK0
   530  0020                     __pcstackBANK0:	
   531  0020                     ??_LCDInit:	
   532  0020                     ?_LCDWriteInt:	
   533                           ; 0 bytes @ 0x0
   534                           
   535  0020                     LCDWriteString@cc:	
   536                           ; 0 bytes @ 0x0
   537                           
   538  0020                     LCDWriteInt@val:	
   539                           ; 1 bytes @ 0x0
   540                           
   541                           
   542                           ; 2 bytes @ 0x0
   543  0020                     	ds	1
   544  0021                     LCDWriteString@msg:	
   545                           
   546                           ; 1 bytes @ 0x1
   547  0021                     	ds	1
   548  0022                     LCDWriteInt@field_length:	
   549                           
   550                           ; 1 bytes @ 0x2
   551  0022                     	ds	1
   552  0023                     LCDWriteInt@str:	
   553                           
   554                           ; 5 bytes @ 0x3
   555  0023                     	ds	5
   556  0028                     LCDWriteInt@j:	
   557                           
   558                           ; 2 bytes @ 0x8
   559  0028                     	ds	2
   560  002A                     LCDWriteInt@i:	
   561                           
   562                           ; 2 bytes @ 0xA
   563  002A                     	ds	2
   564  002C                     ??_main:	
   565                           
   566                           ; 0 bytes @ 0xC
   567  002C                     	ds	3
   568                           
   569                           	psect	maintext
   570  0737                     __pmaintext:	
   571 ;;
   572 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   573 ;;
   574 ;; *************** function _main *****************
   575 ;; Defined at:
   576 ;;		line 30 in file "main.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;		None               void
   583 ;; Registers used:
   584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : B00/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1
   590 ;;      Params:         0       0       0
   591 ;;      Locals:         0       0       0
   592 ;;      Temps:          0       3       0
   593 ;;      Totals:         0       3       0
   594 ;;Total ram usage:        3 bytes
   595 ;; Hardware stack levels required when called:    3
   596 ;; This function calls:
   597 ;;		_ConfigureOscillator
   598 ;;		_Init
   599 ;;		_LCDByte
   600 ;;		_LCDGotoXY
   601 ;;		_LCDInit
   602 ;;		_LCDReset
   603 ;;		_LCDWriteInt
   604 ;;		_LCDWriteString
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _main
   612  0737                     _main:	
   613                           
   614                           ;main.c: 32: ConfigureOscillator();
   615                           
   616                           ;incstack = 0
   617                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   618  0737  24A8               	fcall	_ConfigureOscillator
   619                           
   620                           ;main.c: 34: Init();
   621  0738  24BA               	fcall	_Init
   622                           
   623                           ;main.c: 36: _delay((unsigned long)((1500)*(8000000L/4000.0)));
   624  0739  3010               	movlw	16
   625  073A  1283               	bcf	3,5	;RP0=0, select bank0
   626  073B  1303               	bcf	3,6	;RP1=0, select bank0
   627  073C  00AE               	movwf	??_main+2
   628  073D  3039               	movlw	57
   629  073E  00AD               	movwf	??_main+1
   630  073F  301B               	movlw	27
   631  0740  00AC               	movwf	??_main
   632  0741                     u797:	
   633  0741  0BAC               	decfsz	??_main,f
   634  0742  2F41               	goto	u797
   635  0743  0BAD               	decfsz	??_main+1,f
   636  0744  2F41               	goto	u797
   637  0745  0BAE               	decfsz	??_main+2,f
   638  0746  2F41               	goto	u797
   639  0747  2F48               	nop2
   640                           
   641                           ;main.c: 37: LCDInit(0x00);
   642  0748  3000               	movlw	0
   643  0749  25EE               	fcall	_LCDInit
   644                           
   645                           ;main.c: 39: { LCDGotoXY(0,0); LCDWriteString("Testing 30%0");};
   646  074A  01FC               	clrf	LCDGotoXY@y
   647  074B  3000               	movlw	0
   648  074C  24C5               	fcall	_LCDGotoXY
   649  074D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   650  074E  24DA               	fcall	_LCDWriteString
   651                           
   652                           ;main.c: 40: _delay((unsigned long)((3000)*(8000000L/4000.0)));
   653  074F  301F               	movlw	31
   654  0750  1283               	bcf	3,5	;RP0=0, select bank0
   655  0751  1303               	bcf	3,6	;RP1=0, select bank0
   656  0752  00AE               	movwf	??_main+2
   657  0753  3071               	movlw	113
   658  0754  00AD               	movwf	??_main+1
   659  0755  303B               	movlw	59
   660  0756  00AC               	movwf	??_main
   661  0757                     u807:	
   662  0757  0BAC               	decfsz	??_main,f
   663  0758  2F57               	goto	u807
   664  0759  0BAD               	decfsz	??_main+1,f
   665  075A  2F57               	goto	u807
   666  075B  0BAE               	decfsz	??_main+2,f
   667  075C  2F57               	goto	u807
   668  075D  0000               	nop
   669                           
   670                           ;main.c: 41: (LCDByte(0b00000001,0));
   671  075E  01F5               	clrf	LCDByte@isdata
   672  075F  3001               	movlw	1
   673  0760  2512               	fcall	_LCDByte
   674                           
   675                           ;main.c: 43: T1CON = 0x10;
   676  0761  3010               	movlw	16
   677  0762  1283               	bcf	3,5	;RP0=0, select bank0
   678  0763  1303               	bcf	3,6	;RP1=0, select bank0
   679  0764  0090               	movwf	16	;volatile
   680  0765                     l1169:	
   681                           ;main.c: 45: while(1)
   682                           
   683                           
   684                           ;main.c: 46: {
   685                           ;main.c: 47: TMR1H = 0;
   686  0765  1283               	bcf	3,5	;RP0=0, select bank0
   687  0766  1303               	bcf	3,6	;RP1=0, select bank0
   688  0767  018F               	clrf	15	;volatile
   689                           
   690                           ;main.c: 48: TMR1L = 0;
   691  0768  018E               	clrf	14	;volatile
   692                           
   693                           ;main.c: 50: RB5 = 1;
   694  0769  1686               	bsf	6,5	;volatile
   695                           
   696                           ;main.c: 51: _delay((unsigned long)((10)*(8000000L/4000000.0)));
   697  076A  3006               	movlw	6
   698  076B  00AC               	movwf	??_main
   699  076C                     u817:	
   700  076C  0BAC               	decfsz	??_main,f
   701  076D  2F6C               	goto	u817
   702  076E  0000               	nop
   703                           
   704                           ;main.c: 52: RB5 = 0;
   705  076F  1283               	bcf	3,5	;RP0=0, select bank0
   706  0770  1303               	bcf	3,6	;RP1=0, select bank0
   707  0771  1286               	bcf	6,5	;volatile
   708                           
   709                           ;main.c: 54: _delay((unsigned long)((100)*(8000000L/4000.0)));
   710  0772  3002               	movlw	2
   711  0773  00AE               	movwf	??_main+2
   712  0774  3004               	movlw	4
   713  0775  00AD               	movwf	??_main+1
   714  0776  30BA               	movlw	186
   715  0777  00AC               	movwf	??_main
   716  0778                     u827:	
   717  0778  0BAC               	decfsz	??_main,f
   718  0779  2F78               	goto	u827
   719  077A  0BAD               	decfsz	??_main+1,f
   720  077B  2F78               	goto	u827
   721  077C  0BAE               	decfsz	??_main+2,f
   722  077D  2F78               	goto	u827
   723  077E  0000               	nop
   724                           
   725                           ;main.c: 57: if(a>=0 && a<=400)
   726  077F  1283               	bcf	3,5	;RP0=0, select bank0
   727  0780  1303               	bcf	3,6	;RP1=0, select bank0
   728  0781  1BB5               	btfsc	_a+1,7
   729  0782  2FC1               	goto	l1195
   730  0783  0835               	movf	_a+1,w
   731  0784  3A80               	xorlw	128
   732  0785  00FF               	movwf	127
   733  0786  3081               	movlw	129
   734  0787  027F               	subwf	127,w
   735  0788  1D03               	skipz
   736  0789  2F8C               	goto	u775
   737  078A  3091               	movlw	145
   738  078B  0234               	subwf	_a,w
   739  078C                     u775:	
   740  078C  1803               	skipnc
   741  078D  2FC1               	goto	l1195
   742                           
   743                           ;main.c: 58: {
   744                           ;main.c: 60: { LCDGotoXY(0,0); LCDWriteInt(TMR1L,8);};
   745  078E  01FC               	clrf	LCDGotoXY@y
   746  078F  3000               	movlw	0
   747  0790  24C5               	fcall	_LCDGotoXY
   748  0791  1283               	bcf	3,5	;RP0=0, select bank0
   749  0792  1303               	bcf	3,6	;RP1=0, select bank0
   750  0793  080E               	movf	14,w	;volatile
   751  0794  00AC               	movwf	??_main
   752  0795  01AD               	clrf	??_main+1
   753  0796  082C               	movf	??_main,w
   754  0797  00A0               	movwf	LCDWriteInt@val
   755  0798  082D               	movf	??_main+1,w
   756  0799  00A1               	movwf	LCDWriteInt@val+1
   757  079A  3008               	movlw	8
   758  079B  00AE               	movwf	??_main+2
   759  079C  082E               	movf	??_main+2,w
   760  079D  00A2               	movwf	LCDWriteInt@field_length
   761  079E  269D               	fcall	_LCDWriteInt
   762                           
   763                           ;main.c: 61: { LCDGotoXY(0,1); LCDWriteInt(TMR1H,8);};
   764  079F  01FC               	clrf	LCDGotoXY@y
   765  07A0  0AFC               	incf	LCDGotoXY@y,f
   766  07A1  3000               	movlw	0
   767  07A2  24C5               	fcall	_LCDGotoXY
   768  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   769  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   770  07A5  080F               	movf	15,w	;volatile
   771  07A6  00AC               	movwf	??_main
   772  07A7  01AD               	clrf	??_main+1
   773  07A8  082C               	movf	??_main,w
   774  07A9  00A0               	movwf	LCDWriteInt@val
   775  07AA  082D               	movf	??_main+1,w
   776  07AB  00A1               	movwf	LCDWriteInt@val+1
   777  07AC  3008               	movlw	8
   778  07AD  00AE               	movwf	??_main+2
   779  07AE  082E               	movf	??_main+2,w
   780  07AF  00A2               	movwf	LCDWriteInt@field_length
   781  07B0  269D               	fcall	_LCDWriteInt
   782                           
   783                           ;main.c: 63: { LCDGotoXY(11,1); LCDWriteInt(a,3);};
   784  07B1  01FC               	clrf	LCDGotoXY@y
   785  07B2  0AFC               	incf	LCDGotoXY@y,f
   786  07B3  300B               	movlw	11
   787  07B4  24C5               	fcall	_LCDGotoXY
   788  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   789  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   790  07B7  0835               	movf	_a+1,w
   791  07B8  00A1               	movwf	LCDWriteInt@val+1
   792  07B9  0834               	movf	_a,w
   793  07BA  00A0               	movwf	LCDWriteInt@val
   794  07BB  3003               	movlw	3
   795  07BC  00AC               	movwf	??_main
   796  07BD  082C               	movf	??_main,w
   797  07BE  00A2               	movwf	LCDWriteInt@field_length
   798  07BF  269D               	fcall	_LCDWriteInt
   799                           
   800                           ;main.c: 64: }
   801  07C0  2FCA               	goto	l1201
   802  07C1                     l1195:	
   803                           
   804                           ;main.c: 80: else
   805                           ;main.c: 81: {
   806                           ;main.c: 82: (LCDByte(0b00000001,0));
   807  07C1  01F5               	clrf	LCDByte@isdata
   808  07C2  3001               	movlw	1
   809  07C3  2512               	fcall	_LCDByte
   810                           
   811                           ;main.c: 83: { LCDGotoXY(1,1); LCDWriteString("Out of Range");};
   812  07C4  01FC               	clrf	LCDGotoXY@y
   813  07C5  0AFC               	incf	LCDGotoXY@y,f
   814  07C6  3001               	movlw	1
   815  07C7  24C5               	fcall	_LCDGotoXY
   816  07C8  300E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   817  07C9  24DA               	fcall	_LCDWriteString
   818  07CA                     l1201:	
   819                           
   820                           ;main.c: 84: }
   821                           ;main.c: 86: _delay((unsigned long)((400)*(8000000L/4000.0)));
   822  07CA  3005               	movlw	5
   823  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   824  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   825  07CD  00AE               	movwf	??_main+2
   826  07CE  300F               	movlw	15
   827  07CF  00AD               	movwf	??_main+1
   828  07D0  30F4               	movlw	244
   829  07D1  00AC               	movwf	??_main
   830  07D2                     u837:	
   831  07D2  0BAC               	decfsz	??_main,f
   832  07D3  2FD2               	goto	u837
   833  07D4  0BAD               	decfsz	??_main+1,f
   834  07D5  2FD2               	goto	u837
   835  07D6  0BAE               	decfsz	??_main+2,f
   836  07D7  2FD2               	goto	u837
   837                           
   838                           ;main.c: 87: ++x;
   839  07D8  3001               	movlw	1
   840  07D9  1283               	bcf	3,5	;RP0=0, select bank0
   841  07DA  1303               	bcf	3,6	;RP1=0, select bank0
   842  07DB  00AC               	movwf	??_main
   843  07DC  082C               	movf	??_main,w
   844  07DD  07B6               	addwf	_x,f
   845                           
   846                           ;main.c: 89: if(x > 20)
   847  07DE  3015               	movlw	21
   848  07DF  0236               	subwf	_x,w
   849  07E0  1C03               	skipc
   850  07E1  2F65               	goto	l1169
   851                           
   852                           ;main.c: 90: {
   853                           ;main.c: 91: x = 0;
   854  07E2  01B6               	clrf	_x
   855                           
   856                           ;main.c: 92: LCDReset(0x00);
   857  07E3  3000               	movlw	0
   858  07E4  24B1               	fcall	_LCDReset
   859  07E5  2F65               	goto	l1169
   860  07E6                     __end_of_main:	
   861                           
   862                           	psect	text1
   863  04DA                     __ptext1:	
   864 ;; *************** function _LCDWriteString *****************
   865 ;; Defined at:
   866 ;;		line 224 in file "hd44780.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  msg             1    wreg     PTR const unsigned char 
   869 ;;		 -> STR_2(13), STR_1(13), 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  msg             1    1[BANK0 ] PTR const unsigned char 
   872 ;;		 -> STR_2(13), STR_1(13), 
   873 ;;  cc              1    0[BANK0 ] char 
   874 ;; Return value:  Size  Location     Type
   875 ;;		None               void
   876 ;; Registers used:
   877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1
   883 ;;      Params:         0       0       0
   884 ;;      Locals:         0       2       0
   885 ;;      Temps:          1       0       0
   886 ;;      Totals:         1       2       0
   887 ;;Total ram usage:        3 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    2
   890 ;; This function calls:
   891 ;;		_LCDByte
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _LCDWriteString
   899  04DA                     _LCDWriteString:	
   900                           
   901                           ;incstack = 0
   902                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   903                           ;LCDWriteString@msg stored from wreg
   904  04DA  1283               	bcf	3,5	;RP0=0, select bank0
   905  04DB  1303               	bcf	3,6	;RP1=0, select bank0
   906  04DC  00A1               	movwf	LCDWriteString@msg
   907  04DD                     l1107:	
   908                           ;hd44780.c: 226: while(*msg!='\0')
   909                           
   910  04DD  0821               	movf	LCDWriteString@msg,w
   911  04DE  0084               	movwf	4
   912  04DF  2001               	fcall	stringdir
   913  04E0  3A00               	xorlw	0
   914  04E1  1903               	btfsc	3,2
   915  04E2  0008               	return
   916                           
   917                           ;hd44780.c: 227: {
   918                           ;hd44780.c: 228: if(*msg=='%')
   919  04E3  0821               	movf	LCDWriteString@msg,w
   920  04E4  0084               	movwf	4
   921  04E5  2001               	fcall	stringdir
   922  04E6  3A25               	xorlw	37
   923  04E7  1D03               	skipz
   924  04E8  2D03               	goto	l1103
   925                           
   926                           ;hd44780.c: 229: {
   927                           ;hd44780.c: 230: msg++;
   928  04E9  3001               	movlw	1
   929  04EA  00FC               	movwf	??_LCDWriteString
   930  04EB  087C               	movf	??_LCDWriteString,w
   931  04EC  07A1               	addwf	LCDWriteString@msg,f
   932                           
   933                           ;hd44780.c: 231: int8_t cc=*msg-'0';
   934  04ED  0821               	movf	LCDWriteString@msg,w
   935  04EE  0084               	movwf	4
   936  04EF  2001               	fcall	stringdir
   937  04F0  3ED0               	addlw	-48
   938  04F1  00FC               	movwf	??_LCDWriteString
   939  04F2  087C               	movf	??_LCDWriteString,w
   940  04F3  00A0               	movwf	LCDWriteString@cc
   941                           
   942                           ;hd44780.c: 233: if(cc>=0 && cc<=7)
   943  04F4  1BA0               	btfsc	LCDWriteString@cc,7
   944  04F5  2CFF               	goto	l1099
   945  04F6  0820               	movf	LCDWriteString@cc,w
   946  04F7  3A80               	xorlw	128
   947  04F8  3E78               	addlw	-136
   948  04F9  1803               	skipnc
   949  04FA  2CFF               	goto	l1099
   950                           
   951                           ;hd44780.c: 234: {
   952                           ;hd44780.c: 235: (LCDByte(cc,1));
   953  04FB  01F5               	clrf	LCDByte@isdata
   954  04FC  0AF5               	incf	LCDByte@isdata,f
   955  04FD  0820               	movf	LCDWriteString@cc,w
   956  04FE  2D0A               	goto	L1
   957  04FF                     l1099:	
   958                           ;hd44780.c: 236: }
   959                           
   960                           
   961                           ;hd44780.c: 237: else
   962                           ;hd44780.c: 238: {
   963                           ;hd44780.c: 239: (LCDByte('%',1));
   964  04FF  01F5               	clrf	LCDByte@isdata
   965  0500  0AF5               	incf	LCDByte@isdata,f
   966  0501  3025               	movlw	37
   967  0502  2512               	fcall	_LCDByte
   968  0503                     l1103:	
   969                           ;hd44780.c: 241: }
   970                           ;hd44780.c: 242: }
   971                           
   972                           ;hd44780.c: 240: (LCDByte(*msg,1));
   973                           
   974                           
   975                           ;hd44780.c: 243: else
   976                           ;hd44780.c: 244: {
   977                           ;hd44780.c: 245: (LCDByte(*msg,1));
   978  0503  01F5               	clrf	LCDByte@isdata
   979  0504  0AF5               	incf	LCDByte@isdata,f
   980  0505  1283               	bcf	3,5	;RP0=0, select bank0
   981  0506  1303               	bcf	3,6	;RP1=0, select bank0
   982  0507  0821               	movf	LCDWriteString@msg,w
   983  0508  0084               	movwf	4
   984  0509  2001               	fcall	stringdir
   985  050A                     L1:	
   986  050A  2512               	fcall	_LCDByte
   987                           
   988                           ;hd44780.c: 246: }
   989                           ;hd44780.c: 247: msg++;
   990  050B  3001               	movlw	1
   991  050C  00FC               	movwf	??_LCDWriteString
   992  050D  087C               	movf	??_LCDWriteString,w
   993  050E  1283               	bcf	3,5	;RP0=0, select bank0
   994  050F  1303               	bcf	3,6	;RP1=0, select bank0
   995  0510  07A1               	addwf	LCDWriteString@msg,f
   996  0511  2CDD               	goto	l1107
   997  0512                     __end_of_LCDWriteString:	
   998                           
   999                           	psect	text2
  1000  069D                     __ptext2:	
  1001 ;; *************** function _LCDWriteInt *****************
  1002 ;; Defined at:
  1003 ;;		line 258 in file "hd44780.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  val             2    0[BANK0 ] int 
  1006 ;;  field_length    1    2[BANK0 ] char 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  str             5    3[BANK0 ] unsigned char [5]
  1009 ;;  i               2   10[BANK0 ] int 
  1010 ;;  j               2    8[BANK0 ] int 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;		None               void
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1
  1020 ;;      Params:         0       3       0
  1021 ;;      Locals:         0       9       0
  1022 ;;      Temps:          2       0       0
  1023 ;;      Totals:         2      12       0
  1024 ;;Total ram usage:       14 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    2
  1027 ;; This function calls:
  1028 ;;		_LCDByte
  1029 ;;		___awdiv
  1030 ;;		___awmod
  1031 ;; This function is called by:
  1032 ;;		_main
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           
  1037                           ;psect for function _LCDWriteInt
  1038  069D                     _LCDWriteInt:	
  1039                           
  1040                           ;hd44780.c: 260: char str[5]={0,0,0,0,0};
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1044  069D  3023               	movlw	LCDWriteInt@str& (0+255)
  1045  069E  0084               	movwf	4
  1046  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1047  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1048  06A1  082F               	movf	LCDWriteInt@F1075,w
  1049  06A2  1383               	bcf	3,7	;select IRP bank0
  1050  06A3  0080               	movwf	0
  1051  06A4  0A84               	incf	4,f
  1052  06A5  0830               	movf	LCDWriteInt@F1075+1,w
  1053  06A6  0080               	movwf	0
  1054  06A7  0A84               	incf	4,f
  1055  06A8  0831               	movf	LCDWriteInt@F1075+2,w
  1056  06A9  0080               	movwf	0
  1057  06AA  0A84               	incf	4,f
  1058  06AB  0832               	movf	LCDWriteInt@F1075+3,w
  1059  06AC  0080               	movwf	0
  1060  06AD  0A84               	incf	4,f
  1061  06AE  0833               	movf	LCDWriteInt@F1075+4,w
  1062  06AF  0080               	movwf	0
  1063                           
  1064                           ;hd44780.c: 261: int i=4,j=0;
  1065  06B0  3004               	movlw	4
  1066  06B1  00AA               	movwf	LCDWriteInt@i
  1067  06B2  3000               	movlw	0
  1068  06B3  00AB               	movwf	LCDWriteInt@i+1
  1069  06B4  01A8               	clrf	LCDWriteInt@j
  1070  06B5  01A9               	clrf	LCDWriteInt@j+1
  1071                           
  1072                           ;hd44780.c: 263: if(val<0)
  1073  06B6  1FA1               	btfss	LCDWriteInt@val+1,7
  1074  06B7  2EC3               	goto	l1127
  1075                           
  1076                           ;hd44780.c: 264: {
  1077                           ;hd44780.c: 265: (LCDByte('-',1));
  1078  06B8  01F5               	clrf	LCDByte@isdata
  1079  06B9  0AF5               	incf	LCDByte@isdata,f
  1080  06BA  302D               	movlw	45
  1081  06BB  2512               	fcall	_LCDByte
  1082                           
  1083                           ;hd44780.c: 266: val=val*-1;
  1084  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1085  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1086  06BE  09A0               	comf	LCDWriteInt@val,f
  1087  06BF  09A1               	comf	LCDWriteInt@val+1,f
  1088  06C0  0AA0               	incf	LCDWriteInt@val,f
  1089  06C1  1903               	skipnz
  1090  06C2  0AA1               	incf	LCDWriteInt@val+1,f
  1091  06C3                     l1127:	
  1092                           ;hd44780.c: 267: }
  1093                           ;hd44780.c: 269: while(val)
  1094                           
  1095  06C3  0820               	movf	LCDWriteInt@val,w
  1096  06C4  0421               	iorwf	LCDWriteInt@val+1,w
  1097  06C5  1903               	btfsc	3,2
  1098  06C6  2EF0               	goto	l1129
  1099                           
  1100                           ;hd44780.c: 270: {
  1101                           ;hd44780.c: 271: str[i]=val%10;
  1102  06C7  300A               	movlw	10
  1103  06C8  00F0               	movwf	___awmod@divisor
  1104  06C9  3000               	movlw	0
  1105  06CA  00F1               	movwf	___awmod@divisor+1
  1106  06CB  0821               	movf	LCDWriteInt@val+1,w
  1107  06CC  00F3               	movwf	___awmod@dividend+1
  1108  06CD  0820               	movf	LCDWriteInt@val,w
  1109  06CE  00F2               	movwf	___awmod@dividend
  1110  06CF  2551               	fcall	___awmod
  1111  06D0  0870               	movf	?___awmod,w
  1112  06D1  00FC               	movwf	??_LCDWriteInt
  1113  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1114  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1115  06D4  082A               	movf	LCDWriteInt@i,w
  1116  06D5  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1117  06D6  0084               	movwf	4
  1118  06D7  087C               	movf	??_LCDWriteInt,w
  1119  06D8  1383               	bcf	3,7	;select IRP bank0
  1120  06D9  0080               	movwf	0
  1121                           
  1122                           ;hd44780.c: 272: val=val/10;
  1123  06DA  300A               	movlw	10
  1124  06DB  00F0               	movwf	___awdiv@divisor
  1125  06DC  3000               	movlw	0
  1126  06DD  00F1               	movwf	___awdiv@divisor+1
  1127  06DE  0821               	movf	LCDWriteInt@val+1,w
  1128  06DF  00F3               	movwf	___awdiv@dividend+1
  1129  06E0  0820               	movf	LCDWriteInt@val,w
  1130  06E1  00F2               	movwf	___awdiv@dividend
  1131  06E2  2644               	fcall	___awdiv
  1132  06E3  0871               	movf	?___awdiv+1,w
  1133  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1134  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1135  06E6  00A1               	movwf	LCDWriteInt@val+1
  1136  06E7  0870               	movf	?___awdiv,w
  1137  06E8  00A0               	movwf	LCDWriteInt@val
  1138                           
  1139                           ;hd44780.c: 273: i--;
  1140  06E9  30FF               	movlw	255
  1141  06EA  07AA               	addwf	LCDWriteInt@i,f
  1142  06EB  1803               	skipnc
  1143  06EC  0AAB               	incf	LCDWriteInt@i+1,f
  1144  06ED  30FF               	movlw	255
  1145  06EE  07AB               	addwf	LCDWriteInt@i+1,f
  1146  06EF  2EC3               	goto	l1127
  1147  06F0                     l1129:	
  1148                           
  1149                           ;hd44780.c: 274: }
  1150                           ;hd44780.c: 276: if(field_length==-1)
  1151  06F0  0A22               	incf	LCDWriteInt@field_length,w
  1152  06F1  1903               	btfsc	3,2
  1153  06F2  2EFA               	goto	l1135
  1154  06F3  2F02               	goto	l1137
  1155  06F4                     l1133:	
  1156                           ;hd44780.c: 277: {
  1157                           ;hd44780.c: 278: while(str[j]==0) j++;
  1158                           
  1159  06F4  3001               	movlw	1
  1160  06F5  07A8               	addwf	LCDWriteInt@j,f
  1161  06F6  1803               	skipnc
  1162  06F7  0AA9               	incf	LCDWriteInt@j+1,f
  1163  06F8  3000               	movlw	0
  1164  06F9  07A9               	addwf	LCDWriteInt@j+1,f
  1165  06FA                     l1135:	
  1166  06FA  0828               	movf	LCDWriteInt@j,w
  1167  06FB  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1168  06FC  0084               	movwf	4
  1169  06FD  1383               	bcf	3,7	;select IRP bank0
  1170  06FE  0800               	movf	0,w
  1171  06FF  1D03               	btfss	3,2
  1172  0700  2F14               	goto	l1139
  1173  0701  2EF4               	goto	l1133
  1174  0702                     l1137:	
  1175                           ;hd44780.c: 279: }
  1176                           
  1177                           
  1178                           ;hd44780.c: 280: else
  1179                           ;hd44780.c: 281: {
  1180                           ;hd44780.c: 282: j=5-field_length;
  1181  0702  0822               	movf	LCDWriteInt@field_length,w
  1182  0703  00FC               	movwf	??_LCDWriteInt
  1183  0704  01FD               	clrf	??_LCDWriteInt+1
  1184  0705  1BFC               	btfsc	??_LCDWriteInt,7
  1185  0706  03FD               	decf	??_LCDWriteInt+1,f
  1186  0707  09FC               	comf	??_LCDWriteInt,f
  1187  0708  09FD               	comf	??_LCDWriteInt+1,f
  1188  0709  0AFC               	incf	??_LCDWriteInt,f
  1189  070A  1903               	skipnz
  1190  070B  0AFD               	incf	??_LCDWriteInt+1,f
  1191  070C  087C               	movf	??_LCDWriteInt,w
  1192  070D  3E05               	addlw	5
  1193  070E  00A8               	movwf	LCDWriteInt@j
  1194  070F  087D               	movf	??_LCDWriteInt+1,w
  1195  0710  1803               	skipnc
  1196  0711  3E01               	addlw	1
  1197  0712  3E00               	addlw	0
  1198  0713  00A9               	movwf	LCDWriteInt@j+1
  1199  0714                     l1139:	
  1200                           
  1201                           ;hd44780.c: 283: }
  1202                           ;hd44780.c: 285: for(i=j;i<5;i++)
  1203  0714  0829               	movf	LCDWriteInt@j+1,w
  1204  0715  00AB               	movwf	LCDWriteInt@i+1
  1205  0716  0828               	movf	LCDWriteInt@j,w
  1206  0717  00AA               	movwf	LCDWriteInt@i
  1207  0718                     L2:	
  1208  0718  082B               	movf	LCDWriteInt@i+1,w
  1209  0719  3A80               	xorlw	128
  1210  071A  00FF               	movwf	127
  1211  071B  3080               	movlw	128
  1212  071C  027F               	subwf	127,w
  1213  071D  1D03               	skipz
  1214  071E  2F21               	goto	u745
  1215  071F  3005               	movlw	5
  1216  0720  022A               	subwf	LCDWriteInt@i,w
  1217  0721                     u745:	
  1218  0721  1803               	btfsc	3,0
  1219  0722  0008               	return
  1220                           
  1221                           ;hd44780.c: 286: {
  1222                           ;hd44780.c: 287: (LCDByte(48+str[i],1));
  1223  0723  01F5               	clrf	LCDByte@isdata
  1224  0724  0AF5               	incf	LCDByte@isdata,f
  1225  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0727  082A               	movf	LCDWriteInt@i,w
  1228  0728  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1229  0729  0084               	movwf	4
  1230  072A  1383               	bcf	3,7	;select IRP bank0
  1231  072B  0800               	movf	0,w
  1232  072C  3E30               	addlw	48
  1233  072D  2512               	fcall	_LCDByte
  1234  072E  3001               	movlw	1
  1235  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0731  07AA               	addwf	LCDWriteInt@i,f
  1238  0732  1803               	skipnc
  1239  0733  0AAB               	incf	LCDWriteInt@i+1,f
  1240  0734  3000               	movlw	0
  1241  0735  07AB               	addwf	LCDWriteInt@i+1,f
  1242  0736  2F18               	goto	L2
  1243  0737                     __end_of_LCDWriteInt:	
  1244                           
  1245                           	psect	text3
  1246  0551                     __ptext3:	
  1247 ;; *************** function ___awmod *****************
  1248 ;; Defined at:
  1249 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  divisor         2    0[COMMON] int 
  1252 ;;  dividend        2    2[COMMON] int 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  sign            1    6[COMMON] unsigned char 
  1255 ;;  counter         1    5[COMMON] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  2    0[COMMON] int 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1
  1265 ;;      Params:         4       0       0
  1266 ;;      Locals:         2       0       0
  1267 ;;      Temps:          1       0       0
  1268 ;;      Totals:         7       0       0
  1269 ;;Total ram usage:        7 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_LCDWriteInt
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function ___awmod
  1280  0551                     ___awmod:	
  1281                           
  1282                           ;incstack = 0
  1283                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1284  0551  01F6               	clrf	___awmod@sign
  1285  0552  1FF3               	btfss	___awmod@dividend+1,7
  1286  0553  2D5B               	goto	l989
  1287  0554  09F2               	comf	___awmod@dividend,f
  1288  0555  09F3               	comf	___awmod@dividend+1,f
  1289  0556  0AF2               	incf	___awmod@dividend,f
  1290  0557  1903               	skipnz
  1291  0558  0AF3               	incf	___awmod@dividend+1,f
  1292  0559  01F6               	clrf	___awmod@sign
  1293  055A  0AF6               	incf	___awmod@sign,f
  1294  055B                     l989:	
  1295  055B  1FF1               	btfss	___awmod@divisor+1,7
  1296  055C  2D62               	goto	l993
  1297  055D  09F0               	comf	___awmod@divisor,f
  1298  055E  09F1               	comf	___awmod@divisor+1,f
  1299  055F  0AF0               	incf	___awmod@divisor,f
  1300  0560  1903               	skipnz
  1301  0561  0AF1               	incf	___awmod@divisor+1,f
  1302  0562                     l993:	
  1303  0562  0870               	movf	___awmod@divisor,w
  1304  0563  0471               	iorwf	___awmod@divisor+1,w
  1305  0564  1903               	btfsc	3,2
  1306  0565  2D8F               	goto	l1011
  1307  0566  01F5               	clrf	___awmod@counter
  1308  0567  0AF5               	incf	___awmod@counter,f
  1309  0568                     l1001:	
  1310  0568  1BF1               	btfsc	___awmod@divisor+1,7
  1311  0569  2D76               	goto	l1003
  1312  056A  3001               	movlw	1
  1313  056B                     u575:	
  1314  056B  1003               	clrc
  1315  056C  0DF0               	rlf	___awmod@divisor,f
  1316  056D  0DF1               	rlf	___awmod@divisor+1,f
  1317  056E  3EFF               	addlw	-1
  1318  056F  1D03               	skipz
  1319  0570  2D6B               	goto	u575
  1320  0571  3001               	movlw	1
  1321  0572  00F4               	movwf	??___awmod
  1322  0573  0874               	movf	??___awmod,w
  1323  0574  07F5               	addwf	___awmod@counter,f
  1324  0575  2D68               	goto	l1001
  1325  0576                     l1003:	
  1326  0576  0871               	movf	___awmod@divisor+1,w
  1327  0577  0273               	subwf	___awmod@dividend+1,w
  1328  0578  1D03               	skipz
  1329  0579  2D7C               	goto	u595
  1330  057A  0870               	movf	___awmod@divisor,w
  1331  057B  0272               	subwf	___awmod@dividend,w
  1332  057C                     u595:	
  1333  057C  1C03               	skipc
  1334  057D  2D84               	goto	l1007
  1335  057E  0870               	movf	___awmod@divisor,w
  1336  057F  02F2               	subwf	___awmod@dividend,f
  1337  0580  0871               	movf	___awmod@divisor+1,w
  1338  0581  1C03               	skipc
  1339  0582  03F3               	decf	___awmod@dividend+1,f
  1340  0583  02F3               	subwf	___awmod@dividend+1,f
  1341  0584                     l1007:	
  1342  0584  3001               	movlw	1
  1343  0585                     u605:	
  1344  0585  1003               	clrc
  1345  0586  0CF1               	rrf	___awmod@divisor+1,f
  1346  0587  0CF0               	rrf	___awmod@divisor,f
  1347  0588  3EFF               	addlw	-1
  1348  0589  1D03               	skipz
  1349  058A  2D85               	goto	u605
  1350  058B  3001               	movlw	1
  1351  058C  02F5               	subwf	___awmod@counter,f
  1352  058D  1D03               	btfss	3,2
  1353  058E  2D76               	goto	l1003
  1354  058F                     l1011:	
  1355  058F  0876               	movf	___awmod@sign,w
  1356  0590  1903               	btfsc	3,2
  1357  0591  2D97               	goto	l1015
  1358  0592  09F2               	comf	___awmod@dividend,f
  1359  0593  09F3               	comf	___awmod@dividend+1,f
  1360  0594  0AF2               	incf	___awmod@dividend,f
  1361  0595  1903               	skipnz
  1362  0596  0AF3               	incf	___awmod@dividend+1,f
  1363  0597                     l1015:	
  1364  0597  0873               	movf	___awmod@dividend+1,w
  1365  0598  00F1               	movwf	?___awmod+1
  1366  0599  0872               	movf	___awmod@dividend,w
  1367  059A  00F0               	movwf	?___awmod
  1368  059B  0008               	return
  1369  059C                     __end_of___awmod:	
  1370                           
  1371                           	psect	text4
  1372  0644                     __ptext4:	
  1373 ;; *************** function ___awdiv *****************
  1374 ;; Defined at:
  1375 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  divisor         2    0[COMMON] int 
  1378 ;;  dividend        2    2[COMMON] int 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  quotient        2    7[COMMON] int 
  1381 ;;  sign            1    6[COMMON] unsigned char 
  1382 ;;  counter         1    5[COMMON] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  2    0[COMMON] int 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1
  1392 ;;      Params:         4       0       0
  1393 ;;      Locals:         4       0       0
  1394 ;;      Temps:          1       0       0
  1395 ;;      Totals:         9       0       0
  1396 ;;Total ram usage:        9 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_LCDWriteInt
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           
  1406                           ;psect for function ___awdiv
  1407  0644                     ___awdiv:	
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1411  0644  01F6               	clrf	___awdiv@sign
  1412  0645  1FF1               	btfss	___awdiv@divisor+1,7
  1413  0646  2E4E               	goto	l945
  1414  0647  09F0               	comf	___awdiv@divisor,f
  1415  0648  09F1               	comf	___awdiv@divisor+1,f
  1416  0649  0AF0               	incf	___awdiv@divisor,f
  1417  064A  1903               	skipnz
  1418  064B  0AF1               	incf	___awdiv@divisor+1,f
  1419  064C  01F6               	clrf	___awdiv@sign
  1420  064D  0AF6               	incf	___awdiv@sign,f
  1421  064E                     l945:	
  1422  064E  1FF3               	btfss	___awdiv@dividend+1,7
  1423  064F  2E59               	goto	l951
  1424  0650  09F2               	comf	___awdiv@dividend,f
  1425  0651  09F3               	comf	___awdiv@dividend+1,f
  1426  0652  0AF2               	incf	___awdiv@dividend,f
  1427  0653  1903               	skipnz
  1428  0654  0AF3               	incf	___awdiv@dividend+1,f
  1429  0655  3001               	movlw	1
  1430  0656  00F4               	movwf	??___awdiv
  1431  0657  0874               	movf	??___awdiv,w
  1432  0658  06F6               	xorwf	___awdiv@sign,f
  1433  0659                     l951:	
  1434  0659  01F7               	clrf	___awdiv@quotient
  1435  065A  01F8               	clrf	___awdiv@quotient+1
  1436  065B  0870               	movf	___awdiv@divisor,w
  1437  065C  0471               	iorwf	___awdiv@divisor+1,w
  1438  065D  1903               	btfsc	3,2
  1439  065E  2E90               	goto	l973
  1440  065F  01F5               	clrf	___awdiv@counter
  1441  0660  0AF5               	incf	___awdiv@counter,f
  1442  0661                     l961:	
  1443  0661  1BF1               	btfsc	___awdiv@divisor+1,7
  1444  0662  2E6F               	goto	l963
  1445  0663  3001               	movlw	1
  1446  0664                     u475:	
  1447  0664  1003               	clrc
  1448  0665  0DF0               	rlf	___awdiv@divisor,f
  1449  0666  0DF1               	rlf	___awdiv@divisor+1,f
  1450  0667  3EFF               	addlw	-1
  1451  0668  1D03               	skipz
  1452  0669  2E64               	goto	u475
  1453  066A  3001               	movlw	1
  1454  066B  00F4               	movwf	??___awdiv
  1455  066C  0874               	movf	??___awdiv,w
  1456  066D  07F5               	addwf	___awdiv@counter,f
  1457  066E  2E61               	goto	l961
  1458  066F                     l963:	
  1459  066F  3001               	movlw	1
  1460  0670                     u495:	
  1461  0670  1003               	clrc
  1462  0671  0DF7               	rlf	___awdiv@quotient,f
  1463  0672  0DF8               	rlf	___awdiv@quotient+1,f
  1464  0673  3EFF               	addlw	-1
  1465  0674  1D03               	skipz
  1466  0675  2E70               	goto	u495
  1467  0676  0871               	movf	___awdiv@divisor+1,w
  1468  0677  0273               	subwf	___awdiv@dividend+1,w
  1469  0678  1D03               	skipz
  1470  0679  2E7C               	goto	u505
  1471  067A  0870               	movf	___awdiv@divisor,w
  1472  067B  0272               	subwf	___awdiv@dividend,w
  1473  067C                     u505:	
  1474  067C  1C03               	skipc
  1475  067D  2E85               	goto	l969
  1476  067E  0870               	movf	___awdiv@divisor,w
  1477  067F  02F2               	subwf	___awdiv@dividend,f
  1478  0680  0871               	movf	___awdiv@divisor+1,w
  1479  0681  1C03               	skipc
  1480  0682  03F3               	decf	___awdiv@dividend+1,f
  1481  0683  02F3               	subwf	___awdiv@dividend+1,f
  1482  0684  1477               	bsf	___awdiv@quotient,0
  1483  0685                     l969:	
  1484  0685  3001               	movlw	1
  1485  0686                     u515:	
  1486  0686  1003               	clrc
  1487  0687  0CF1               	rrf	___awdiv@divisor+1,f
  1488  0688  0CF0               	rrf	___awdiv@divisor,f
  1489  0689  3EFF               	addlw	-1
  1490  068A  1D03               	skipz
  1491  068B  2E86               	goto	u515
  1492  068C  3001               	movlw	1
  1493  068D  02F5               	subwf	___awdiv@counter,f
  1494  068E  1D03               	btfss	3,2
  1495  068F  2E6F               	goto	l963
  1496  0690                     l973:	
  1497  0690  0876               	movf	___awdiv@sign,w
  1498  0691  1903               	btfsc	3,2
  1499  0692  2E98               	goto	l977
  1500  0693  09F7               	comf	___awdiv@quotient,f
  1501  0694  09F8               	comf	___awdiv@quotient+1,f
  1502  0695  0AF7               	incf	___awdiv@quotient,f
  1503  0696  1903               	skipnz
  1504  0697  0AF8               	incf	___awdiv@quotient+1,f
  1505  0698                     l977:	
  1506  0698  0878               	movf	___awdiv@quotient+1,w
  1507  0699  00F1               	movwf	?___awdiv+1
  1508  069A  0877               	movf	___awdiv@quotient,w
  1509  069B  00F0               	movwf	?___awdiv
  1510  069C  0008               	return
  1511  069D                     __end_of___awdiv:	
  1512                           
  1513                           	psect	text5
  1514  04B1                     __ptext5:	
  1515 ;; *************** function _LCDReset *****************
  1516 ;; Defined at:
  1517 ;;		line 31 in file "hd44780.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  style           1    wreg     unsigned char 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  style           1   12[COMMON] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;		None               void
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0, pclath, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1
  1531 ;;      Params:         0       0       0
  1532 ;;      Locals:         1       0       0
  1533 ;;      Temps:          0       0       0
  1534 ;;      Totals:         1       0       0
  1535 ;;Total ram usage:        1 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    2
  1538 ;; This function calls:
  1539 ;;		_LCDByte
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _LCDReset
  1547  04B1                     _LCDReset:	
  1548                           
  1549                           ;incstack = 0
  1550                           ; Regs used in _LCDReset: [wreg+status,2+status,0+pclath+cstack]
  1551                           ;LCDReset@style stored from wreg
  1552  04B1  00FC               	movwf	LCDReset@style
  1553                           
  1554                           ;hd44780.c: 33: (LCDByte(0b00101000,0));
  1555  04B2  01F5               	clrf	LCDByte@isdata
  1556  04B3  3028               	movlw	40
  1557  04B4  2512               	fcall	_LCDByte
  1558                           
  1559                           ;hd44780.c: 34: (LCDByte(0b00001100|style,0));
  1560  04B5  01F5               	clrf	LCDByte@isdata
  1561  04B6  087C               	movf	LCDReset@style,w
  1562  04B7  380C               	iorlw	12
  1563  04B8  2512               	fcall	_LCDByte
  1564  04B9  0008               	return
  1565  04BA                     __end_of_LCDReset:	
  1566                           
  1567                           	psect	text6
  1568  05EE                     __ptext6:	
  1569 ;; *************** function _LCDInit *****************
  1570 ;; Defined at:
  1571 ;;		line 177 in file "hd44780.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  style           1    wreg     unsigned char 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  style           1   12[COMMON] unsigned char 
  1576 ;;  __i             1   13[COMMON] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;		None               void
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1
  1586 ;;      Params:         0       0       0
  1587 ;;      Locals:         2       0       0
  1588 ;;      Temps:          0       3       0
  1589 ;;      Totals:         2       3       0
  1590 ;;Total ram usage:        5 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    2
  1593 ;; This function calls:
  1594 ;;		_LCDBusyLoop
  1595 ;;		_LCDByte
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           
  1602                           ;psect for function _LCDInit
  1603  05EE                     _LCDInit:	
  1604                           
  1605                           ;incstack = 0
  1606                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1607                           ;LCDInit@style stored from wreg
  1608  05EE  00FC               	movwf	LCDInit@style
  1609                           
  1610                           ;hd44780.c: 179: _delay((unsigned long)((750)*(8000000L/4000.0)));
  1611  05EF  3008               	movlw	8
  1612  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1613  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1614  05F2  00A2               	movwf	??_LCDInit+2
  1615  05F3  309D               	movlw	157
  1616  05F4  00A1               	movwf	??_LCDInit+1
  1617  05F5  300B               	movlw	11
  1618  05F6  00A0               	movwf	??_LCDInit
  1619  05F7                     u847:	
  1620  05F7  0BA0               	decfsz	??_LCDInit,f
  1621  05F8  2DF7               	goto	u847
  1622  05F9  0BA1               	decfsz	??_LCDInit+1,f
  1623  05FA  2DF7               	goto	u847
  1624  05FB  0BA2               	decfsz	??_LCDInit+2,f
  1625  05FC  2DF7               	goto	u847
  1626  05FD  2DFE               	nop2
  1627                           
  1628                           ;hd44780.c: 181: TRISC&=(~(0x0F<<0));
  1629  05FE  30F0               	movlw	240
  1630  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0601  00A0               	movwf	??_LCDInit
  1633  0602  0820               	movf	??_LCDInit,w
  1634  0603  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0604  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0605  0587               	andwf	7,f	;volatile
  1637                           
  1638                           ;hd44780.c: 182: TRISCbits.TRISC6=0;
  1639  0606  1307               	bcf	7,6	;volatile
  1640                           
  1641                           ;hd44780.c: 183: TRISCbits.TRISC4=0;
  1642  0607  1207               	bcf	7,4	;volatile
  1643                           
  1644                           ;hd44780.c: 184: TRISCbits.TRISC5=0;
  1645  0608  1287               	bcf	7,5	;volatile
  1646                           
  1647                           ;hd44780.c: 186: PORTC&=(~(0x0F<<0));
  1648  0609  30F0               	movlw	240
  1649  060A  1283               	bcf	3,5	;RP0=0, select bank0
  1650  060B  1303               	bcf	3,6	;RP1=0, select bank0
  1651  060C  00A0               	movwf	??_LCDInit
  1652  060D  0820               	movf	??_LCDInit,w
  1653  060E  0587               	andwf	7,f	;volatile
  1654                           
  1655                           ;hd44780.c: 188: (RC6=0);
  1656  060F  1307               	bcf	7,6	;volatile
  1657                           
  1658                           ;hd44780.c: 189: (RC5=0);
  1659  0610  1287               	bcf	7,5	;volatile
  1660                           
  1661                           ;hd44780.c: 190: (RC4=0);
  1662  0611  1207               	bcf	7,4	;volatile
  1663                           
  1664                           ;hd44780.c: 193: _delay((unsigned long)((8)*(8000000L/4000000.0)));
  1665  0612  3005               	movlw	5
  1666  0613  00A0               	movwf	??_LCDInit
  1667  0614                     u857:	
  1668  0614  0BA0               	decfsz	??_LCDInit,f
  1669  0615  2E14               	goto	u857
  1670                           
  1671                           ;hd44780.c: 195: (RC6=1);
  1672  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0618  1707               	bsf	7,6	;volatile
  1675                           
  1676                           ;hd44780.c: 196: PORTC|=((0b00000010)<<0);
  1677  0619  1487               	bsf	7,1	;volatile
  1678                           
  1679                           ;hd44780.c: 197: _delay((unsigned long)((8)*(8000000L/4000000.0)));
  1680  061A  3005               	movlw	5
  1681  061B  00A0               	movwf	??_LCDInit
  1682  061C                     u867:	
  1683  061C  0BA0               	decfsz	??_LCDInit,f
  1684  061D  2E1C               	goto	u867
  1685                           
  1686                           ;hd44780.c: 198: (RC6=0);
  1687  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1688  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0620  1307               	bcf	7,6	;volatile
  1690                           
  1691                           ;hd44780.c: 199: _delay((unsigned long)((8)*(8000000L/4000000.0)));
  1692  0621  3005               	movlw	5
  1693  0622  00A0               	movwf	??_LCDInit
  1694  0623                     u877:	
  1695  0623  0BA0               	decfsz	??_LCDInit,f
  1696  0624  2E23               	goto	u877
  1697                           
  1698                           ;hd44780.c: 202: LCDBusyLoop();
  1699  0625  259C               	fcall	_LCDBusyLoop
  1700                           
  1701                           ;hd44780.c: 207: (LCDByte(0b00101000,0));
  1702  0626  01F5               	clrf	LCDByte@isdata
  1703  0627  3028               	movlw	40
  1704  0628  2512               	fcall	_LCDByte
  1705                           
  1706                           ;hd44780.c: 208: (LCDByte(0b00001100|style,0));
  1707  0629  01F5               	clrf	LCDByte@isdata
  1708  062A  087C               	movf	LCDInit@style,w
  1709  062B  380C               	iorlw	12
  1710  062C  2512               	fcall	_LCDByte
  1711                           
  1712                           ;hd44780.c: 211: (LCDByte(0b01000000,0));
  1713  062D  01F5               	clrf	LCDByte@isdata
  1714  062E  3040               	movlw	64
  1715  062F  2512               	fcall	_LCDByte
  1716                           
  1717                           ;hd44780.c: 213: uint8_t __i;
  1718                           ;hd44780.c: 214: for(__i=0;__i<sizeof(__cgram);__i++)
  1719  0630  01FD               	clrf	LCDInit@__i
  1720  0631                     L3:	
  1721  0631  3008               	movlw	8
  1722  0632  027D               	subwf	LCDInit@__i,w
  1723  0633  1803               	btfsc	3,0
  1724  0634  0008               	return
  1725                           
  1726                           ;hd44780.c: 215: (LCDByte(__cgram[__i],1));
  1727  0635  01F5               	clrf	LCDByte@isdata
  1728  0636  0AF5               	incf	LCDByte@isdata,f
  1729  0637  087D               	movf	LCDInit@__i,w
  1730  0638  3E37               	addlw	(low (___cgram| 0))& (0+255)
  1731  0639  0084               	movwf	4
  1732  063A  1383               	bcf	3,7	;select IRP bank0
  1733  063B  0800               	movf	0,w
  1734  063C  2512               	fcall	_LCDByte
  1735  063D  3001               	movlw	1
  1736  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1737  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0640  00A0               	movwf	??_LCDInit
  1739  0641  0820               	movf	??_LCDInit,w
  1740  0642  07FD               	addwf	LCDInit@__i,f
  1741  0643  2E31               	goto	L3
  1742  0644                     __end_of_LCDInit:	
  1743                           
  1744                           	psect	text7
  1745  04C5                     __ptext7:	
  1746 ;; *************** function _LCDGotoXY *****************
  1747 ;; Defined at:
  1748 ;;		line 294 in file "hd44780.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  x               1    wreg     unsigned char 
  1751 ;;  y               1   12[COMMON] unsigned char 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  x               1   13[COMMON] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;		None               void
  1756 ;; Registers used:
  1757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1
  1763 ;;      Params:         1       0       0
  1764 ;;      Locals:         1       0       0
  1765 ;;      Temps:          0       0       0
  1766 ;;      Totals:         2       0       0
  1767 ;;Total ram usage:        2 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    2
  1770 ;; This function calls:
  1771 ;;		_LCDByte
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _LCDGotoXY
  1779  04C5                     _LCDGotoXY:	
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1783                           ;LCDGotoXY@x stored from wreg
  1784  04C5  00FD               	movwf	LCDGotoXY@x
  1785                           
  1786                           ;hd44780.c: 298: if(x>=16) return;
  1787  04C6  3010               	movlw	16
  1788  04C7  027D               	subwf	LCDGotoXY@x,w
  1789  04C8  1803               	btfsc	3,0
  1790  04C9  0008               	return
  1791  04CA  2CCD               	goto	l1081
  1792  04CB                     l131:	
  1793                           ;hd44780.c: 305: case 1:
  1794                           
  1795                           ;hd44780.c: 303: break;
  1796                           
  1797                           ;hd44780.c: 301: {
  1798                           ;hd44780.c: 302: case 0:
  1799                           
  1800                           ;hd44780.c: 300: switch(y)
  1801                           
  1802                           
  1803                           ;hd44780.c: 306: x|=0b01000000;
  1804  04CB  177D               	bsf	LCDGotoXY@x,6
  1805                           
  1806                           ;hd44780.c: 308: }
  1807                           
  1808                           ;hd44780.c: 307: break;
  1809  04CC  2CD5               	goto	l130
  1810  04CD                     l1081:	
  1811  04CD  087C               	movf	LCDGotoXY@y,w
  1812                           
  1813                           ; Switch size 1, requested type "space"
  1814                           ; Number of cases is 2, Range of values is 0 to 1
  1815                           ; switch strategies available:
  1816                           ; Name         Instructions Cycles
  1817                           ; simple_byte            7     4 (average)
  1818                           ; direct_byte            8     6 (fixed)
  1819                           ; jumptable            260     6 (fixed)
  1820                           ;	Chosen strategy is simple_byte
  1821  04CE  3A00               	xorlw	0	; case 0
  1822  04CF  1903               	skipnz
  1823  04D0  2CD5               	goto	l130
  1824  04D1  3A01               	xorlw	1	; case 1
  1825  04D2  1903               	skipnz
  1826  04D3  2CCB               	goto	l131
  1827  04D4  2CD5               	goto	l130
  1828  04D5                     l130:	
  1829                           
  1830                           ;hd44780.c: 380: x|=0b10000000;
  1831  04D5  17FD               	bsf	LCDGotoXY@x,7
  1832                           
  1833                           ;hd44780.c: 381: (LCDByte(x,0));
  1834  04D6  01F5               	clrf	LCDByte@isdata
  1835  04D7  087D               	movf	LCDGotoXY@x,w
  1836  04D8  2512               	fcall	_LCDByte
  1837  04D9  0008               	return
  1838  04DA                     __end_of_LCDGotoXY:	
  1839                           
  1840                           	psect	text8
  1841  0512                     __ptext8:	
  1842 ;; *************** function _LCDByte *****************
  1843 ;; Defined at:
  1844 ;;		line 63 in file "hd44780.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  c               1    wreg     unsigned char 
  1847 ;;  isdata          1    5[COMMON] unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  c               1   10[COMMON] unsigned char 
  1850 ;;  temp            1   11[COMMON] unsigned char 
  1851 ;;  ln              1    9[COMMON] unsigned char 
  1852 ;;  hn              1    8[COMMON] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;		None               void
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0, pclath, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1
  1862 ;;      Params:         1       0       0
  1863 ;;      Locals:         4       0       0
  1864 ;;      Temps:          2       0       0
  1865 ;;      Totals:         7       0       0
  1866 ;;Total ram usage:        7 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    1
  1869 ;; This function calls:
  1870 ;;		_LCDBusyLoop
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;;		_LCDReset
  1874 ;;		_LCDInit
  1875 ;;		_LCDWriteString
  1876 ;;		_LCDWriteInt
  1877 ;;		_LCDGotoXY
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _LCDByte
  1883  0512                     _LCDByte:	
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  1887                           ;LCDByte@c stored from wreg
  1888  0512  00FA               	movwf	LCDByte@c
  1889                           
  1890                           ;hd44780.c: 65: uint8_t hn,ln;
  1891                           ;hd44780.c: 66: uint8_t temp;
  1892                           ;hd44780.c: 68: hn=c>>4;
  1893  0513  087A               	movf	LCDByte@c,w
  1894  0514  00F6               	movwf	??_LCDByte
  1895  0515  3004               	movlw	4
  1896  0516                     u425:	
  1897  0516  1003               	clrc
  1898  0517  0CF6               	rrf	??_LCDByte,f
  1899  0518  3EFF               	addlw	-1
  1900  0519  1D03               	skipz
  1901  051A  2D16               	goto	u425
  1902  051B  0876               	movf	??_LCDByte,w
  1903  051C  00F7               	movwf	??_LCDByte+1
  1904  051D  0877               	movf	??_LCDByte+1,w
  1905  051E  00F8               	movwf	LCDByte@hn
  1906                           
  1907                           ;hd44780.c: 69: ln=(c & 0x0F);
  1908  051F  087A               	movf	LCDByte@c,w
  1909  0520  390F               	andlw	15
  1910  0521  00F6               	movwf	??_LCDByte
  1911  0522  0876               	movf	??_LCDByte,w
  1912  0523  00F9               	movwf	LCDByte@ln
  1913                           
  1914                           ;hd44780.c: 71: if(isdata==0)
  1915  0524  0875               	movf	LCDByte@isdata,w
  1916  0525  1D03               	btfss	3,2
  1917  0526  2D2B               	goto	l85
  1918                           
  1919                           ;hd44780.c: 72: (RC4=0);
  1920  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0529  1207               	bcf	7,4	;volatile
  1923  052A  2D2E               	goto	l86
  1924  052B                     l85:	
  1925                           
  1926                           ;hd44780.c: 73: else
  1927                           ;hd44780.c: 74: (RC4=1);
  1928  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1929  052C  1303               	bcf	3,6	;RP1=0, select bank0
  1930  052D  1607               	bsf	7,4	;volatile
  1931  052E                     l86:	
  1932                           
  1933                           ;hd44780.c: 76: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  1934  052E  2D2F               	nop2	;2 cycle nop
  1935                           
  1936                           ;hd44780.c: 78: (RC6=1);
  1937  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0531  1707               	bsf	7,6	;volatile
  1940                           
  1941                           ;hd44780.c: 82: temp=(PORTC & (~(0X0F<<0)))|((hn<<0));
  1942  0532  0807               	movf	7,w	;volatile
  1943  0533  39F0               	andlw	240
  1944  0534  0478               	iorwf	LCDByte@hn,w
  1945  0535  00F6               	movwf	??_LCDByte
  1946  0536  0876               	movf	??_LCDByte,w
  1947  0537  00FB               	movwf	LCDByte@temp
  1948                           
  1949                           ;hd44780.c: 83: PORTC=temp;
  1950  0538  087B               	movf	LCDByte@temp,w
  1951  0539  0087               	movwf	7	;volatile
  1952                           
  1953                           ;hd44780.c: 85: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  1954  053A  2D3B               	nop2	;2 cycle nop
  1955                           
  1956                           ;hd44780.c: 89: (RC6=0);
  1957  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1958  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1959  053D  1307               	bcf	7,6	;volatile
  1960                           
  1961                           ;hd44780.c: 91: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  1962  053E  2D3F               	nop2	;2 cycle nop
  1963                           
  1964                           ;hd44780.c: 94: (RC6=1);
  1965  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0541  1707               	bsf	7,6	;volatile
  1968                           
  1969                           ;hd44780.c: 96: temp=(PORTC & (~(0X0F<<0)))|((ln<<0));
  1970  0542  0807               	movf	7,w	;volatile
  1971  0543  39F0               	andlw	240
  1972  0544  0479               	iorwf	LCDByte@ln,w
  1973  0545  00F6               	movwf	??_LCDByte
  1974  0546  0876               	movf	??_LCDByte,w
  1975  0547  00FB               	movwf	LCDByte@temp
  1976                           
  1977                           ;hd44780.c: 98: PORTC=temp;
  1978  0548  087B               	movf	LCDByte@temp,w
  1979  0549  0087               	movwf	7	;volatile
  1980                           
  1981                           ;hd44780.c: 100: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  1982  054A  2D4B               	nop2	;2 cycle nop
  1983                           
  1984                           ;hd44780.c: 104: (RC6=0);
  1985  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1986  054C  1303               	bcf	3,6	;RP1=0, select bank0
  1987  054D  1307               	bcf	7,6	;volatile
  1988                           
  1989                           ;hd44780.c: 106: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  1990  054E  2D4F               	nop2	;2 cycle nop
  1991                           
  1992                           ;hd44780.c: 108: LCDBusyLoop();
  1993  054F  259C               	fcall	_LCDBusyLoop
  1994  0550  0008               	return
  1995  0551                     __end_of_LCDByte:	
  1996                           
  1997                           	psect	text9
  1998  059C                     __ptext9:	
  1999 ;; *************** function _LCDBusyLoop *****************
  2000 ;; Defined at:
  2001 ;;		line 111 in file "hd44780.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  status          1    4[COMMON] unsigned char 
  2006 ;;  temp            1    3[COMMON] unsigned char 
  2007 ;;  busy            1    2[COMMON] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;		None               void
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1
  2017 ;;      Params:         0       0       0
  2018 ;;      Locals:         3       0       0
  2019 ;;      Temps:          2       0       0
  2020 ;;      Totals:         5       0       0
  2021 ;;Total ram usage:        5 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_LCDByte
  2027 ;;		_LCDInit
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function _LCDBusyLoop
  2033  059C                     _LCDBusyLoop:	
  2034                           
  2035                           ;hd44780.c: 115: uint8_t busy,status=0x00,temp;
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2039  059C  01F4               	clrf	LCDBusyLoop@status
  2040                           
  2041                           ;hd44780.c: 118: TRISC|=(0x0f<<0);
  2042  059D  300F               	movlw	15
  2043  059E  00F0               	movwf	??_LCDBusyLoop
  2044  059F  0870               	movf	??_LCDBusyLoop,w
  2045  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  2046  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  2047  05A2  0487               	iorwf	7,f	;volatile
  2048                           
  2049                           ;hd44780.c: 121: (RC5=1);
  2050  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2051  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2052  05A5  1687               	bsf	7,5	;volatile
  2053                           
  2054                           ;hd44780.c: 122: (RC4=0);
  2055  05A6  1207               	bcf	7,4	;volatile
  2056                           
  2057                           ;hd44780.c: 126: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  2058  05A7  2DA8               	nop2	;2 cycle nop
  2059  05A8                     l871:	
  2060                           ;hd44780.c: 128: do
  2061                           
  2062                           
  2063                           ;hd44780.c: 129: {
  2064                           ;hd44780.c: 131: (RC6=1);
  2065  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2066  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2067  05AA  1707               	bsf	7,6	;volatile
  2068                           
  2069                           ;hd44780.c: 134: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  2070  05AB  2DAC               	nop2	;2 cycle nop
  2071                           
  2072                           ;hd44780.c: 136: status=(PORTC>>0);
  2073  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2074  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2075  05AE  0807               	movf	7,w	;volatile
  2076  05AF  00F0               	movwf	??_LCDBusyLoop
  2077  05B0  0870               	movf	??_LCDBusyLoop,w
  2078  05B1  00F4               	movwf	LCDBusyLoop@status
  2079                           
  2080                           ;hd44780.c: 137: status=status<<4;
  2081  05B2  0874               	movf	LCDBusyLoop@status,w
  2082  05B3  00F0               	movwf	??_LCDBusyLoop
  2083  05B4  3003               	movlw	3
  2084  05B5                     u405:	
  2085  05B5  1003               	clrc
  2086  05B6  0DF0               	rlf	??_LCDBusyLoop,f
  2087  05B7  3EFF               	addlw	-1
  2088  05B8  1D03               	skipz
  2089  05B9  2DB5               	goto	u405
  2090  05BA  1003               	clrc
  2091  05BB  0D70               	rlf	??_LCDBusyLoop,w
  2092  05BC  00F1               	movwf	??_LCDBusyLoop+1
  2093  05BD  0871               	movf	??_LCDBusyLoop+1,w
  2094  05BE  00F4               	movwf	LCDBusyLoop@status
  2095                           
  2096                           ;hd44780.c: 139: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  2097  05BF  2DC0               	nop2	;2 cycle nop
  2098                           
  2099                           ;hd44780.c: 142: (RC6=0);
  2100  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2101  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2102  05C2  1307               	bcf	7,6	;volatile
  2103                           
  2104                           ;hd44780.c: 143: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  2105  05C3  2DC4               	nop2	;2 cycle nop
  2106                           
  2107                           ;hd44780.c: 145: (RC6=1);
  2108  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  2109  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  2110  05C6  1707               	bsf	7,6	;volatile
  2111                           
  2112                           ;hd44780.c: 146: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  2113  05C7  2DC8               	nop2	;2 cycle nop
  2114                           
  2115                           ;hd44780.c: 148: temp=(PORTC>>0);
  2116  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2117  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2118  05CA  0807               	movf	7,w	;volatile
  2119  05CB  00F0               	movwf	??_LCDBusyLoop
  2120  05CC  0870               	movf	??_LCDBusyLoop,w
  2121  05CD  00F3               	movwf	LCDBusyLoop@temp
  2122                           
  2123                           ;hd44780.c: 149: temp&=0x0F;
  2124  05CE  300F               	movlw	15
  2125  05CF  00F0               	movwf	??_LCDBusyLoop
  2126  05D0  0870               	movf	??_LCDBusyLoop,w
  2127  05D1  05F3               	andwf	LCDBusyLoop@temp,f
  2128                           
  2129                           ;hd44780.c: 151: status=status|temp;
  2130  05D2  0874               	movf	LCDBusyLoop@status,w
  2131  05D3  0473               	iorwf	LCDBusyLoop@temp,w
  2132  05D4  00F0               	movwf	??_LCDBusyLoop
  2133  05D5  0870               	movf	??_LCDBusyLoop,w
  2134  05D6  00F4               	movwf	LCDBusyLoop@status
  2135                           
  2136                           ;hd44780.c: 153: busy=status & 0b10000000;
  2137  05D7  0874               	movf	LCDBusyLoop@status,w
  2138  05D8  3980               	andlw	128
  2139  05D9  00F0               	movwf	??_LCDBusyLoop
  2140  05DA  0870               	movf	??_LCDBusyLoop,w
  2141  05DB  00F2               	movwf	LCDBusyLoop@busy
  2142                           
  2143                           ;hd44780.c: 155: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  2144  05DC  2DDD               	nop2	;2 cycle nop
  2145                           
  2146                           ;hd44780.c: 157: (RC6=0);
  2147  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2148  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2149  05DF  1307               	bcf	7,6	;volatile
  2150                           
  2151                           ;hd44780.c: 158: _delay((unsigned long)((1)*(8000000L/4000000.0)));
  2152  05E0  2DE1               	nop2	;2 cycle nop
  2153                           
  2154                           ;hd44780.c: 159: }while(busy);
  2155  05E1  0872               	movf	LCDBusyLoop@busy,w
  2156  05E2  1D03               	btfss	3,2
  2157  05E3  2DA8               	goto	l871
  2158                           
  2159                           ;hd44780.c: 161: (RC5=0);
  2160  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2161  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2162  05E6  1287               	bcf	7,5	;volatile
  2163                           
  2164                           ;hd44780.c: 164: TRISC&=(~(0x0F<<0));
  2165  05E7  30F0               	movlw	240
  2166  05E8  00F0               	movwf	??_LCDBusyLoop
  2167  05E9  0870               	movf	??_LCDBusyLoop,w
  2168  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  2169  05EB  1303               	bcf	3,6	;RP1=0, select bank1
  2170  05EC  0587               	andwf	7,f	;volatile
  2171  05ED  0008               	return
  2172  05EE                     __end_of_LCDBusyLoop:	
  2173                           
  2174                           	psect	text10
  2175  04BA                     __ptext10:	
  2176 ;; *************** function _Init *****************
  2177 ;; Defined at:
  2178 ;;		line 37 in file "system.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;		None               void
  2185 ;; Registers used:
  2186 ;;		wreg, status,2
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1
  2192 ;;      Params:         0       0       0
  2193 ;;      Locals:         0       0       0
  2194 ;;      Temps:          0       0       0
  2195 ;;      Totals:         0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_main
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function _Init
  2207  04BA                     _Init:	
  2208                           
  2209                           ;system.c: 39: TRISB = 0b00010000;
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in _Init: [wreg+status,2]
  2213  04BA  3010               	movlw	16
  2214  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  2215  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  2216  04BD  0086               	movwf	6	;volatile
  2217                           
  2218                           ;system.c: 40: TRISC = 0x00;
  2219  04BE  0187               	clrf	7	;volatile
  2220                           
  2221                           ;system.c: 41: GIE = 1;
  2222  04BF  178B               	bsf	11,7	;volatile
  2223                           
  2224                           ;system.c: 42: RABIF = 0;
  2225  04C0  100B               	bcf	11,0	;volatile
  2226                           
  2227                           ;system.c: 43: RABIE = 1;
  2228  04C1  158B               	bsf	11,3	;volatile
  2229                           
  2230                           ;system.c: 44: IOCA = 0b00010000;
  2231  04C2  3010               	movlw	16
  2232  04C3  0096               	movwf	22	;volatile
  2233  04C4  0008               	return
  2234  04C5                     __end_of_Init:	
  2235                           
  2236                           	psect	text11
  2237  04A8                     __ptext11:	
  2238 ;; *************** function _ConfigureOscillator *****************
  2239 ;; Defined at:
  2240 ;;		line 18 in file "system.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;		None               void
  2247 ;; Registers used:
  2248 ;;		None
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1
  2254 ;;      Params:         0       0       0
  2255 ;;      Locals:         0       0       0
  2256 ;;      Temps:          0       0       0
  2257 ;;      Totals:         0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_main
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _ConfigureOscillator
  2269  04A8                     _ConfigureOscillator:	
  2270                           
  2271                           ;incstack = 0
  2272                           ; Regs used in _ConfigureOscillator: []
  2273  04A8  0008               	return
  2274  04A9                     __end_of_ConfigureOscillator:	
  2275  007E                     btemp	set	126	;btemp
  2276  007E                     wtemp	set	126
  2277  007E                     wtemp0	set	126
  2278  0080                     wtemp1	set	128
  2279  0082                     wtemp2	set	130
  2280  0084                     wtemp3	set	132
  2281  0086                     wtemp4	set	134
  2282  0088                     wtemp5	set	136
  2283  007F                     wtemp6	set	127
  2284  007E                     ttemp	set	126
  2285  007E                     ttemp0	set	126
  2286  0081                     ttemp1	set	129
  2287  0084                     ttemp2	set	132
  2288  0087                     ttemp3	set	135
  2289  007F                     ttemp4	set	127
  2290  007E                     ltemp	set	126
  2291  007E                     ltemp0	set	126
  2292  0082                     ltemp1	set	130
  2293  0086                     ltemp2	set	134
  2294  0080                     ltemp3	set	128


Data Sizes:
    Strings     26
    Constant    0
    Data        8
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      31
    BANK1            32      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_LCDWriteInt
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDReset->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDWriteInt

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8707
                                             12 BANK0      3     3      0
                _ConfigureOscillator
                               _Init
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                           _LCDReset
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0    1303
                                             12 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2562
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDReset                                             1     1      0    1092
                                             12 COMMON     1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              5     5      0    1277
                                             12 COMMON     2     2      0
                                              0 BANK0      3     3      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            2     1      1    1403
                                             12 COMMON     2     1      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1070
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _Init
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDReset
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      1F       5       38.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2D       8        0.0%
ABS                  0      0      2D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Apr 08 19:44:04 2015

                ?_LCDBusyLoop 0070                             _a 0034                             _x 0036  
                           pc 0002                            l85 052B                            l86 052E  
                ___awdiv@sign 0076                            fsr 0004                           l130 04D5  
                         l131 04CB                           l871 05A8                           l951 0659  
                         l961 0661                           l945 064E                           l963 066F  
                         l973 0690                           l977 0698                           l969 0685  
                         l993 0562                           _GIE 005F                           l989 055B  
                         _RB5 0035                           _RC4 003C                           _RC5 003D  
                         _RC6 003E                           u405 05B5                           u425 0516  
                         u505 067C                           u515 0686                           u605 0585  
                         u475 0664                           u495 0670                           u575 056B  
                         u807 0757                           u745 0721                           u817 076C  
                         u595 057C                           u827 0778                           u837 07D2  
                         u847 05F7                           u775 078C                           u857 0614  
                         u867 061C                           u877 0623                           u797 0741  
                         fsr0 0004                           indf 0000                  ___awmod@sign 0076  
     LCDWriteInt@field_length 0022               __end_of_LCDByte 0551               __end_of_LCDInit 0644  
                ?_LCDWriteInt 0020                   LCDByte@temp 007B                          l1001 0568  
                        l1003 0576                          l1011 058F                          l1015 0597  
                        l1007 0584                          l1103 0503                          l1201 07CA  
                        l1107 04DD                          l1133 06F4                          l1135 06FA  
                        l1127 06C3                          l1081 04CD                          l1137 0702  
                        l1129 06F0                          l1139 0714                          l1169 0765  
                        l1099 04FF                          l1195 07C1                          STR_1 0007  
                        STR_2 0014                          _IOCA 0096                          _Init 04BA  
                        _main 0737            __size_of_LCDGotoXY 0015                          btemp 007E  
               __CFG_BOREN$ON 0000                          ltemp 007E                          start 0000  
                        ttemp 007E                          wtemp 007E              __end_of_LCDReset 04BA  
                       ?_Init 0070                         ?_main 0070               __end_of___awdiv 069D  
               __CFG_WDTE$OFF 0000               __end_of___awmod 059C                  LCDInit@style 007C  
             ___awdiv@divisor 0070                         _T1CON 0010                         _RABIE 005B  
                       _RABIF 0058               ___awdiv@counter 0075                         _TMR1H 000F  
                       _TMR1L 000E                         _PORTC 0007                         _TRISB 0086  
                       _TRISC 0087           _ConfigureOscillator 04A8                 __CFG_PWRTE$ON 0000  
                       pclath 000A                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003                         wtemp0 007E  
                       wtemp1 0080                         wtemp2 0082                         wtemp3 0084  
                       wtemp4 0086                         wtemp5 0088                         wtemp6 007F  
        ?_ConfigureOscillator 0070               __initialization 07E6                  __end_of_Init 04C5  
                __end_of_main 07E6                        ??_Init 0070                        ??_main 002C  
           __end_of_LCDGotoXY 04DA                 LCDByte@isdata 0075                     ??_LCDByte 0076  
                   ??_LCDInit 0020              ___awdiv@dividend 0072         ??_ConfigureOscillator 0070  
              _LCDWriteString 04DA                     ??___awdiv 0074                     ??___awmod 0074  
        __size_of_LCDBusyLoop 0052              ___awdiv@quotient 0077               ___awmod@divisor 0070  
             ___awmod@counter 0075                  LCDWriteInt@i 002A                  LCDWriteInt@j 0028  
        __size_of_LCDWriteInt 009A       __end_of__initialization 07FE                     ?_LCDReset 0070  
      __end_of_LCDWriteString 0512                     LCDByte@hn 0078                     LCDByte@ln 0079  
              __pcstackCOMMON 0070                  __pidataBANK0 04A9                 LCDReset@style 007C  
                  __pbssBANK0 002F                    ??_LCDReset 007C               ?_LCDWriteString 0070  
                  __pmaintext 0737                       _LCDByte 0512                       _LCDInit 05EE  
                  __stringtab 0001                       ___cgram 0037                       ___awdiv 0644  
                     ___awmod 0551                       __ptext1 04DA                       __ptext2 069D  
                     __ptext3 0551                       __ptext4 0644                       __ptext5 04B1  
                     __ptext6 05EE                       __ptext7 04C5                       __ptext8 0512  
                     __ptext9 059C              ___awmod@dividend 0072                     _LCDGotoXY 04C5  
        end_of_initialization 07FE             LCDWriteString@msg 0021                     _TRISCbits 0087  
                  ?_LCDGotoXY 007C   __end_of_ConfigureOscillator 04A9                    LCDInit@__i 007D  
                  LCDGotoXY@x 007D                    LCDGotoXY@y 007C             __size_of_LCDReset 0009  
               ??_LCDBusyLoop 0070           start_initialization 07E6                 ??_LCDWriteInt 007C  
            ??_LCDWriteString 007C                   __pdataBANK0 0037           __end_of_LCDBusyLoop 05EE  
                    ?_LCDByte 0075                      ?_LCDInit 0070                      LCDByte@c 007A  
                   ___latbits 0000                 __pcstackBANK0 0020                   ??_LCDGotoXY 007D  
            LCDWriteInt@F1075 002F           __end_of_LCDWriteInt 0737                      ?___awdiv 0070  
                    ?___awmod 0070                     __pstrings 0001               LCDBusyLoop@busy 0072  
             LCDBusyLoop@temp 0073                      _LCDReset 04B1                   _LCDBusyLoop 059C  
            LCDWriteString@cc 0020                   __stringbase 0006              __size_of_LCDByte 003F  
            __size_of_LCDInit 0056                   _LCDWriteInt 069D              __size_of___awdiv 0059  
            __size_of___awmod 004B             LCDBusyLoop@status 0074            __end_of__stringtab 0007  
                    __ptext10 04BA                      __ptext11 04A8                 __size_of_Init 000B  
               __size_of_main 00AF  __size_of_ConfigureOscillator 0001                LCDWriteInt@val 0020  
              LCDWriteInt@str 0023                     stringcode 0001                      stringdir 0001  
                    stringtab 0001            __CFG_FOSC$INTOSCIO 0000       __size_of_LCDWriteString 0038  
