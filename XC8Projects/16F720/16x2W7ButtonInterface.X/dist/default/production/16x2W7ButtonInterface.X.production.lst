

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 20 02:43:11 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F720
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000E                     	;# 
    33  000E                     	;# 
    34  000F                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  008C                     	;# 
    54  008E                     	;# 
    55  008F                     	;# 
    56  0090                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0095                     	;# 
    63  0096                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009D                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  0115                     	;# 
    73  0116                     	;# 
    74  0185                     	;# 
    75  0186                     	;# 
    76  0187                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  008C                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009D                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0185                     	;# 
   133  0186                     	;# 
   134  0187                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  008C                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009D                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0185                     	;# 
   191  0186                     	;# 
   192  0187                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000E                     	;# 
   207  000E                     	;# 
   208  000F                     	;# 
   209  0010                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0015                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001E                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  0086                     	;# 
   226  0087                     	;# 
   227  008C                     	;# 
   228  008E                     	;# 
   229  008F                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0094                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009D                     	;# 
   241  009F                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  010E                     	;# 
   245  010F                     	;# 
   246  0115                     	;# 
   247  0116                     	;# 
   248  0185                     	;# 
   249  0186                     	;# 
   250  0187                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  008C                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009D                     	;# 
   299  009F                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0115                     	;# 
   305  0116                     	;# 
   306  0185                     	;# 
   307  0186                     	;# 
   308  0187                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  008C                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009D                     	;# 
   357  009F                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0115                     	;# 
   363  0116                     	;# 
   364  0185                     	;# 
   365  0186                     	;# 
   366  0187                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369                           
   370                           	psect	idataBANK0
   371  059A                     __pidataBANK0:	
   372                           
   373                           ;initializer for ___cgram
   374  059A  340C               	retlw	12
   375  059B  3412               	retlw	18
   376  059C  3412               	retlw	18
   377  059D  340C               	retlw	12
   378  059E  3400               	retlw	0
   379  059F  3400               	retlw	0
   380  05A0  3400               	retlw	0
   381  05A1  3400               	retlw	0
   382  001F                     _ADCON0	set	31
   383  001E                     _ADRES	set	30
   384  0005                     _PORTA	set	5
   385  0006                     _PORTB	set	6
   386  0007                     _PORTC	set	7
   387  00F8                     _ADON	set	248
   388  00F9                     _GO_nDONE	set	249
   389  003C                     _RC4	set	60
   390  003D                     _RC5	set	61
   391  003E                     _RC6	set	62
   392  009F                     _ADCON1	set	159
   393  009D                     _FVRCON	set	157
   394  0085                     _TRISA	set	133
   395  0086                     _TRISB	set	134
   396  0087                     _TRISC	set	135
   397  0087                     _TRISCbits	set	135
   398  0484                     _IRCF0	set	1156
   399  0485                     _IRCF1	set	1157
   400  0185                     _ANSELA	set	389
   401  0186                     _ANSELB	set	390
   402  0187                     _ANSELC	set	391
   403                           
   404                           ; #config settings
   405  0000                     
   406                           	psect	cinit
   407  07E7                     start_initialization:	
   408  07E7                     __initialization:	
   409                           
   410                           ; Clear objects allocated to BANK0
   411  07E7  01B6               	clrf	__pbssBANK0& (0+127)
   412  07E8  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   413  07E9  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   414  07EA  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   415  07EB  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   416  07EC  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   417  07ED  01BC               	clrf	(__pbssBANK0+6)& (0+127)
   418                           
   419                           ; Initialize objects allocated to BANK0
   420  07EE  259A               	fcall	__pidataBANK0	;fetch initializer
   421  07EF  00AE               	movwf	__pdataBANK0& (0+127)
   422  07F0  259B               	fcall	__pidataBANK0+1	;fetch initializer
   423  07F1  00AF               	movwf	(__pdataBANK0+1)& (0+127)
   424  07F2  259C               	fcall	__pidataBANK0+2	;fetch initializer
   425  07F3  00B0               	movwf	(__pdataBANK0+2)& (0+127)
   426  07F4  259D               	fcall	__pidataBANK0+3	;fetch initializer
   427  07F5  00B1               	movwf	(__pdataBANK0+3)& (0+127)
   428  07F6  259E               	fcall	__pidataBANK0+4	;fetch initializer
   429  07F7  00B2               	movwf	(__pdataBANK0+4)& (0+127)
   430  07F8  259F               	fcall	__pidataBANK0+5	;fetch initializer
   431  07F9  00B3               	movwf	(__pdataBANK0+5)& (0+127)
   432  07FA  25A0               	fcall	__pidataBANK0+6	;fetch initializer
   433  07FB  00B4               	movwf	(__pdataBANK0+6)& (0+127)
   434  07FC  25A1               	fcall	__pidataBANK0+7	;fetch initializer
   435  07FD  00B5               	movwf	(__pdataBANK0+7)& (0+127)
   436  07FE                     end_of_initialization:	
   437                           ;End of C runtime variable initialization code
   438                           
   439  07FE                     __end_of__initialization:	
   440  07FE  0183               	clrf	3
   441  07FF  2F25               	ljmp	_main	;jump to C main() function
   442                           
   443                           	psect	bssBANK0
   444  0036                     __pbssBANK0:	
   445  0036                     LCDWriteInt@F1072:	
   446  0036                     	ds	5
   447  003B                     _MenuKey:	
   448  003B                     	ds	2
   449                           
   450                           	psect	dataBANK0
   451  002E                     __pdataBANK0:	
   452  002E                     ___cgram:	
   453  002E                     	ds	8
   454                           
   455                           	psect	cstackCOMMON
   456  0070                     __pcstackCOMMON:	
   457  0070                     ?_LCDBusyLoop:	
   458  0070                     ??_LCDBusyLoop:	
   459                           ; 0 bytes @ 0x0
   460                           
   461  0070                     ?_ConfigureOscillator:	
   462                           ; 0 bytes @ 0x0
   463                           
   464  0070                     ??_ConfigureOscillator:	
   465                           ; 0 bytes @ 0x0
   466                           
   467  0070                     ?_Init:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0070                     ??_Init:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ?_ADCInit:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0070                     ??_ADCInit:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0070                     ??_ADCRead:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  0070                     ?_LCDInit:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  0070                     ?_main:	
   486                           ; 0 bytes @ 0x0
   487                           
   488  0070                     ?_ADCRead:	
   489                           ; 0 bytes @ 0x0
   490                           
   491  0070                     ?_TempCalc:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?___awdiv:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ___awdiv@divisor:	
   498                           ; 2 bytes @ 0x0
   499                           
   500                           
   501                           ; 2 bytes @ 0x0
   502  0070                     	ds	1
   503  0071                     ADCRead@ch:	
   504                           
   505                           ; 1 bytes @ 0x1
   506  0071                     	ds	1
   507  0072                     LCDBusyLoop@busy:	
   508  0072                     ___awdiv@dividend:	
   509                           ; 1 bytes @ 0x2
   510                           
   511                           
   512                           ; 2 bytes @ 0x2
   513  0072                     	ds	1
   514  0073                     LCDBusyLoop@temp:	
   515                           
   516                           ; 1 bytes @ 0x3
   517  0073                     	ds	1
   518  0074                     ??___awdiv:	
   519  0074                     LCDBusyLoop@status:	
   520                           ; 0 bytes @ 0x4
   521                           
   522                           
   523                           ; 1 bytes @ 0x4
   524  0074                     	ds	1
   525  0075                     ?_LCDByte:	
   526  0075                     LCDByte@isdata:	
   527                           ; 0 bytes @ 0x5
   528                           
   529  0075                     ___awdiv@counter:	
   530                           ; 1 bytes @ 0x5
   531                           
   532                           
   533                           ; 1 bytes @ 0x5
   534  0075                     	ds	1
   535  0076                     ??_LCDByte:	
   536  0076                     ___awdiv@sign:	
   537                           ; 0 bytes @ 0x6
   538                           
   539                           
   540                           ; 1 bytes @ 0x6
   541  0076                     	ds	1
   542  0077                     ___awdiv@quotient:	
   543                           
   544                           ; 2 bytes @ 0x7
   545  0077                     	ds	1
   546  0078                     LCDByte@hn:	
   547                           
   548                           ; 1 bytes @ 0x8
   549  0078                     	ds	1
   550  0079                     ??_TempCalc:	
   551  0079                     LCDByte@ln:	
   552                           ; 0 bytes @ 0x9
   553                           
   554  0079                     TempCalc@a:	
   555                           ; 1 bytes @ 0x9
   556                           
   557                           
   558                           ; 1 bytes @ 0x9
   559  0079                     	ds	1
   560  007A                     LCDByte@c:	
   561                           
   562                           ; 1 bytes @ 0xA
   563  007A                     	ds	1
   564  007B                     LCDByte@temp:	
   565                           
   566                           ; 1 bytes @ 0xB
   567  007B                     	ds	1
   568  007C                     LCDInit@style:	
   569                           
   570                           ; 1 bytes @ 0xC
   571  007C                     	ds	1
   572  007D                     LCDInit@__i:	
   573                           
   574                           ; 1 bytes @ 0xD
   575  007D                     	ds	1
   576                           
   577                           	psect	cstackBANK0
   578  0020                     __pcstackBANK0:	
   579  0020                     ??_LCDInit:	
   580                           
   581                           ; 0 bytes @ 0x0
   582  0020                     	ds	3
   583  0023                     ??_main:	
   584                           
   585                           ; 0 bytes @ 0x3
   586  0023                     	ds	3
   587  0026                     main@timer:	
   588                           
   589                           ; 1 bytes @ 0x6
   590  0026                     	ds	1
   591  0027                     main@Test:	
   592                           
   593                           ; 2 bytes @ 0x7
   594  0027                     	ds	2
   595  0029                     main@OldTemp:	
   596                           
   597                           ; 2 bytes @ 0x9
   598  0029                     	ds	2
   599  002B                     main@Temp:	
   600                           
   601                           ; 2 bytes @ 0xB
   602  002B                     	ds	2
   603  002D                     main@i:	
   604                           
   605                           ; 1 bytes @ 0xD
   606  002D                     	ds	1
   607                           
   608                           	psect	maintext
   609  0725                     __pmaintext:	
   610 ;;
   611 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   612 ;;
   613 ;; *************** function _main *****************
   614 ;; Defined at:
   615 ;;		line 15 in file "main.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  Temp            2   11[BANK0 ] unsigned char [2]
   620 ;;  OldTemp         2    9[BANK0 ] unsigned char [2]
   621 ;;  Test            2    7[BANK0 ] unsigned char [2]
   622 ;;  i               1   13[BANK0 ] unsigned char 
   623 ;;  timer           1    6[BANK0 ] unsigned char 
   624 ;; Return value:  Size  Location     Type
   625 ;;		None               void
   626 ;; Registers used:
   627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : B00/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1
   633 ;;      Params:         0       0       0
   634 ;;      Locals:         0       8       0
   635 ;;      Temps:          0       3       0
   636 ;;      Totals:         0      11       0
   637 ;;Total ram usage:       11 bytes
   638 ;; Hardware stack levels required when called:    3
   639 ;; This function calls:
   640 ;;		_ADCInit
   641 ;;		_ADCRead
   642 ;;		_ConfigureOscillator
   643 ;;		_Init
   644 ;;		_LCDByte
   645 ;;		_LCDInit
   646 ;;		_TempCalc
   647 ;;		___awdiv
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _main
   655  0725                     _main:	
   656                           
   657                           ;main.c: 17: ConfigureOscillator();
   658                           
   659                           ;incstack = 0
   660                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   661  0725  2593               	fcall	_ConfigureOscillator
   662                           
   663                           ;main.c: 19: Init();
   664  0726  25D4               	fcall	_Init
   665                           
   666                           ;main.c: 21: ADCInit();
   667  0727  258E               	fcall	_ADCInit
   668                           
   669                           ;main.c: 23: _delay((unsigned long)((1750)*(2000000L/4000.0)));
   670  0728  3005               	movlw	5
   671  0729  1283               	bcf	3,5	;RP0=0, select bank0
   672  072A  1303               	bcf	3,6	;RP1=0, select bank0
   673  072B  00A5               	movwf	??_main+2
   674  072C  3071               	movlw	113
   675  072D  00A4               	movwf	??_main+1
   676  072E  305A               	movlw	90
   677  072F  00A3               	movwf	??_main
   678  0730                     u1127:	
   679  0730  0BA3               	decfsz	??_main,f
   680  0731  2F30               	goto	u1127
   681  0732  0BA4               	decfsz	??_main+1,f
   682  0733  2F30               	goto	u1127
   683  0734  0BA5               	decfsz	??_main+2,f
   684  0735  2F30               	goto	u1127
   685  0736  2F37               	nop2
   686                           
   687                           ;main.c: 25: LCDInit(0B00000000);
   688  0737  3000               	movlw	0
   689  0738  267C               	fcall	_LCDInit
   690                           
   691                           ;main.c: 26: _delay((unsigned long)((1500)*(2000000L/4000.0)));
   692  0739  3004               	movlw	4
   693  073A  1283               	bcf	3,5	;RP0=0, select bank0
   694  073B  1303               	bcf	3,6	;RP1=0, select bank0
   695  073C  00A5               	movwf	??_main+2
   696  073D  30CF               	movlw	207
   697  073E  00A4               	movwf	??_main+1
   698  073F  3003               	movlw	3
   699  0740  00A3               	movwf	??_main
   700  0741                     u1137:	
   701  0741  0BA3               	decfsz	??_main,f
   702  0742  2F41               	goto	u1137
   703  0743  0BA4               	decfsz	??_main+1,f
   704  0744  2F41               	goto	u1137
   705  0745  0BA5               	decfsz	??_main+2,f
   706  0746  2F41               	goto	u1137
   707  0747  2F48               	nop2
   708                           
   709                           ;main.c: 28: (LCDByte(0b00000001,0));
   710  0748  01F5               	clrf	LCDByte@isdata
   711  0749  3001               	movlw	1
   712  074A  25F7               	fcall	_LCDByte
   713                           
   714                           ;main.c: 30: unsigned char i, timer = 0;
   715  074B  1283               	bcf	3,5	;RP0=0, select bank0
   716  074C  1303               	bcf	3,6	;RP1=0, select bank0
   717  074D  01A6               	clrf	main@timer
   718  074E                     l1407:	
   719                           ;main.c: 32: unsigned char OldTemp[2];
   720                           ;main.c: 34: unsigned char Temp[2];
   721                           ;main.c: 37: unsigned char Test[2];
   722                           ;main.c: 40: while (1)
   723                           
   724                           
   725                           ;main.c: 41: {
   726                           ;main.c: 42: Test[0] = ADCRead(2);
   727  074E  3002               	movlw	2
   728  074F  25B7               	fcall	_ADCRead
   729  0750  1283               	bcf	3,5	;RP0=0, select bank0
   730  0751  1303               	bcf	3,6	;RP1=0, select bank0
   731  0752  00A3               	movwf	??_main
   732  0753  0823               	movf	??_main,w
   733  0754  00A7               	movwf	main@Test
   734                           
   735                           ;main.c: 44: Test[1] = ADCRead(3);
   736  0755  3003               	movlw	3
   737  0756  25B7               	fcall	_ADCRead
   738  0757  1283               	bcf	3,5	;RP0=0, select bank0
   739  0758  1303               	bcf	3,6	;RP1=0, select bank0
   740  0759  00A3               	movwf	??_main
   741  075A  0823               	movf	??_main,w
   742  075B  00A8               	movwf	main@Test+1
   743                           
   744                           ;main.c: 47: for(i = 0;i<2;i++)
   745  075C  01AD               	clrf	main@i
   746  075D  3002               	movlw	2
   747  075E  022D               	subwf	main@i,w
   748  075F  1803               	btfsc	3,0
   749  0760  2FDD               	goto	l1433
   750  0761                     l1417:	
   751                           
   752                           ;main.c: 48: {
   753                           ;main.c: 49: Temp[i] = TempCalc(Temp[i]);
   754  0761  082D               	movf	main@i,w
   755  0762  3E2B               	addlw	(low (main@Temp| 0))& (0+255)
   756  0763  0084               	movwf	4
   757  0764  1383               	bcf	3,7	;select IRP bank0
   758  0765  0800               	movf	0,w
   759  0766  25A2               	fcall	_TempCalc
   760  0767  1283               	bcf	3,5	;RP0=0, select bank0
   761  0768  1303               	bcf	3,6	;RP1=0, select bank0
   762  0769  00A3               	movwf	??_main
   763  076A  082D               	movf	main@i,w
   764  076B  3E2B               	addlw	(low (main@Temp| 0))& (0+255)
   765  076C  0084               	movwf	4
   766  076D  0823               	movf	??_main,w
   767  076E  1383               	bcf	3,7	;select IRP bank0
   768  076F  0080               	movwf	0
   769                           
   770                           ;main.c: 51: if(Temp[i] > OldTemp[i] + 1 || Temp[i] < OldTemp[i] - 1)
   771  0770  082D               	movf	main@i,w
   772  0771  3E29               	addlw	(low (main@OldTemp| 0))& (0+255)
   773  0772  0084               	movwf	4
   774  0773  0800               	movf	0,w
   775  0774  3E01               	addlw	1
   776  0775  00A3               	movwf	??_main
   777  0776  3000               	movlw	0
   778  0777  1803               	skipnc
   779  0778  3001               	movlw	1
   780  0779  00A4               	movwf	??_main+1
   781  077A  082D               	movf	main@i,w
   782  077B  3E2B               	addlw	(low (main@Temp| 0))& (0+255)
   783  077C  0084               	movwf	4
   784  077D  0824               	movf	??_main+1,w
   785  077E  3A80               	xorlw	128
   786  077F  00A5               	movwf	??_main+2
   787  0780  3080               	movlw	128
   788  0781  0225               	subwf	??_main+2,w
   789  0782  1D03               	skipz
   790  0783  2F86               	goto	u835
   791  0784  0800               	movf	0,w
   792  0785  0223               	subwf	??_main,w
   793  0786                     u835:	
   794  0786  1C03               	skipc
   795  0787  2FA1               	goto	l1423
   796  0788  1283               	bcf	3,5	;RP0=0, select bank0
   797  0789  1303               	bcf	3,6	;RP1=0, select bank0
   798  078A  082D               	movf	main@i,w
   799  078B  3E29               	addlw	(low (main@OldTemp| 0))& (0+255)
   800  078C  0084               	movwf	4
   801  078D  1383               	bcf	3,7	;select IRP bank0
   802  078E  0800               	movf	0,w
   803  078F  3EFF               	addlw	255
   804  0790  00A3               	movwf	??_main
   805  0791  30FF               	movlw	255
   806  0792  1803               	skipnc
   807  0793  3000               	movlw	0
   808  0794  00A4               	movwf	??_main+1
   809  0795  082D               	movf	main@i,w
   810  0796  3E2B               	addlw	(low (main@Temp| 0))& (0+255)
   811  0797  0084               	movwf	4
   812  0798  0824               	movf	??_main+1,w
   813  0799  3A80               	xorlw	128
   814  079A  3C80               	sublw	128
   815  079B  1D03               	skipz
   816  079C  2F9F               	goto	u845
   817  079D  0823               	movf	??_main,w
   818  079E  0200               	subwf	0,w
   819  079F                     u845:	
   820  079F  1803               	skipnc
   821  07A0  2FC8               	goto	l1427
   822  07A1                     l1423:	
   823                           
   824                           ;main.c: 52: {
   825                           ;main.c: 53: Temp[i] = ((OldTemp[i] + Temp[i])/2);
   826  07A1  3002               	movlw	2
   827  07A2  00F0               	movwf	___awdiv@divisor
   828  07A3  3000               	movlw	0
   829  07A4  00F1               	movwf	___awdiv@divisor+1
   830  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   831  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   832  07A7  082D               	movf	main@i,w
   833  07A8  3E2B               	addlw	(low (main@Temp| 0))& (0+255)
   834  07A9  0084               	movwf	4
   835  07AA  1383               	bcf	3,7	;select IRP bank0
   836  07AB  0800               	movf	0,w
   837  07AC  00A3               	movwf	??_main
   838  07AD  082D               	movf	main@i,w
   839  07AE  3E29               	addlw	(low (main@OldTemp| 0))& (0+255)
   840  07AF  0084               	movwf	4
   841  07B0  0800               	movf	0,w
   842  07B1  0723               	addwf	??_main,w
   843  07B2  00F2               	movwf	___awdiv@dividend
   844  07B3  01F3               	clrf	___awdiv@dividend+1
   845  07B4  0DF3               	rlf	___awdiv@dividend+1,f
   846  07B5  26CC               	fcall	___awdiv
   847  07B6  0870               	movf	?___awdiv,w
   848  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   849  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   850  07B9  00A4               	movwf	??_main+1
   851  07BA  082D               	movf	main@i,w
   852  07BB  3E2B               	addlw	(low (main@Temp| 0))& (0+255)
   853  07BC  0084               	movwf	4
   854  07BD  0824               	movf	??_main+1,w
   855  07BE  1383               	bcf	3,7	;select IRP bank0
   856  07BF  0080               	movwf	0
   857                           
   858                           ;main.c: 54: OldTemp[i] = Temp[i];
   859  07C0  082D               	movf	main@i,w
   860  07C1  3E2B               	addlw	(low (main@Temp| 0))& (0+255)
   861  07C2  0084               	movwf	4
   862  07C3  0800               	movf	0,w
   863  07C4  00A3               	movwf	??_main
   864  07C5  082D               	movf	main@i,w
   865  07C6  3E29               	addlw	(low (main@OldTemp| 0))& (0+255)
   866  07C7  2FD2               	goto	L1
   867  07C8                     l1427:	
   868                           ;main.c: 55: }
   869                           
   870                           
   871                           ;main.c: 56: else Temp[i] = OldTemp[i];
   872  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   873  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   874  07CA  082D               	movf	main@i,w
   875  07CB  3E29               	addlw	(low (main@OldTemp| 0))& (0+255)
   876  07CC  0084               	movwf	4
   877  07CD  1383               	bcf	3,7	;select IRP bank0
   878  07CE  0800               	movf	0,w
   879  07CF  00A3               	movwf	??_main
   880  07D0  082D               	movf	main@i,w
   881  07D1  3E2B               	addlw	(low (main@Temp| 0))& (0+255)
   882  07D2                     L1:	
   883  07D2  0084               	movwf	4
   884  07D3  0823               	movf	??_main,w
   885  07D4  0080               	movwf	0
   886  07D5  3001               	movlw	1
   887  07D6  00A3               	movwf	??_main
   888  07D7  0823               	movf	??_main,w
   889  07D8  07AD               	addwf	main@i,f
   890  07D9  3002               	movlw	2
   891  07DA  022D               	subwf	main@i,w
   892  07DB  1C03               	skipc
   893  07DC  2F61               	goto	l1417
   894  07DD                     l1433:	
   895                           
   896                           ;main.c: 57: }
   897                           ;main.c: 60: for (i=0;i<12;i++)
   898  07DD  01AD               	clrf	main@i
   899  07DE                     L2:	
   900  07DE  300C               	movlw	12
   901  07DF  022D               	subwf	main@i,w
   902  07E0  1803               	btfsc	3,0
   903  07E1  2F4E               	goto	l1407
   904                           
   905                           ;main.c: 61: {
   906  07E2  3001               	movlw	1
   907  07E3  00A3               	movwf	??_main
   908  07E4  0823               	movf	??_main,w
   909  07E5  07AD               	addwf	main@i,f
   910  07E6  2FDE               	goto	L2
   911  07E7                     __end_of_main:	
   912                           
   913                           	psect	text1
   914  05A2                     __ptext1:	
   915 ;; *************** function _TempCalc *****************
   916 ;; Defined at:
   917 ;;		line 49 in file "user.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  a               1    wreg     unsigned char 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  a               1    9[COMMON] unsigned char 
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      unsigned char 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, pclath, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1
   931 ;;      Params:         0       0       0
   932 ;;      Locals:         1       0       0
   933 ;;      Temps:          0       0       0
   934 ;;      Totals:         1       0       0
   935 ;;Total ram usage:        1 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    1
   938 ;; This function calls:
   939 ;;		___awdiv
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           
   946                           ;psect for function _TempCalc
   947  05A2                     _TempCalc:	
   948                           
   949                           ;incstack = 0
   950                           ; Regs used in _TempCalc: [wreg+status,2+status,0+pclath+cstack]
   951                           ;TempCalc@a stored from wreg
   952  05A2  00F9               	movwf	TempCalc@a
   953                           
   954                           ;user.c: 51: if(a < 51)
   955  05A3  3033               	movlw	51
   956  05A4  0279               	subwf	TempCalc@a,w
   957  05A5  1803               	skipnc
   958  05A6  2DA9               	goto	l1315
   959                           
   960                           ;user.c: 52: {
   961                           ;user.c: 53: return 255;
   962  05A7  30FF               	movlw	255
   963                           
   964                           ;user.c: 54: }
   965  05A8  0008               	return
   966  05A9                     l1315:	
   967                           
   968                           ;user.c: 55: else
   969                           ;user.c: 56: {
   970                           ;user.c: 58: return (a - 51)/ 7;
   971  05A9  3007               	movlw	7
   972  05AA  00F0               	movwf	___awdiv@divisor
   973  05AB  3000               	movlw	0
   974  05AC  00F1               	movwf	___awdiv@divisor+1
   975  05AD  0879               	movf	TempCalc@a,w
   976  05AE  3ECD               	addlw	205
   977  05AF  00F2               	movwf	___awdiv@dividend
   978  05B0  30FF               	movlw	255
   979  05B1  1803               	skipnc
   980  05B2  3000               	movlw	0
   981  05B3  00F3               	movwf	___awdiv@dividend+1
   982  05B4  26CC               	fcall	___awdiv
   983  05B5  0870               	movf	?___awdiv,w
   984  05B6  0008               	return
   985  05B7                     __end_of_TempCalc:	
   986                           
   987                           	psect	text2
   988  06CC                     __ptext2:	
   989 ;; *************** function ___awdiv *****************
   990 ;; Defined at:
   991 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  divisor         2    0[COMMON] int 
   994 ;;  dividend        2    2[COMMON] int 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  quotient        2    7[COMMON] int 
   997 ;;  sign            1    6[COMMON] unsigned char 
   998 ;;  counter         1    5[COMMON] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  2    0[COMMON] int 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1
  1008 ;;      Params:         4       0       0
  1009 ;;      Locals:         4       0       0
  1010 ;;      Temps:          1       0       0
  1011 ;;      Totals:         9       0       0
  1012 ;;Total ram usage:        9 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;;		_TempCalc
  1019 ;;		_LCDWriteInt
  1020 ;;		_TempSetpoint
  1021 ;;		_SetDeadband
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function ___awdiv
  1027  06CC                     ___awdiv:	
  1028                           
  1029                           ;incstack = 0
  1030                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1031  06CC  01F6               	clrf	___awdiv@sign
  1032  06CD  1FF1               	btfss	___awdiv@divisor+1,7
  1033  06CE  2ED6               	goto	l1185
  1034  06CF  09F0               	comf	___awdiv@divisor,f
  1035  06D0  09F1               	comf	___awdiv@divisor+1,f
  1036  06D1  0AF0               	incf	___awdiv@divisor,f
  1037  06D2  1903               	skipnz
  1038  06D3  0AF1               	incf	___awdiv@divisor+1,f
  1039  06D4  01F6               	clrf	___awdiv@sign
  1040  06D5  0AF6               	incf	___awdiv@sign,f
  1041  06D6                     l1185:	
  1042  06D6  1FF3               	btfss	___awdiv@dividend+1,7
  1043  06D7  2EE1               	goto	l1191
  1044  06D8  09F2               	comf	___awdiv@dividend,f
  1045  06D9  09F3               	comf	___awdiv@dividend+1,f
  1046  06DA  0AF2               	incf	___awdiv@dividend,f
  1047  06DB  1903               	skipnz
  1048  06DC  0AF3               	incf	___awdiv@dividend+1,f
  1049  06DD  3001               	movlw	1
  1050  06DE  00F4               	movwf	??___awdiv
  1051  06DF  0874               	movf	??___awdiv,w
  1052  06E0  06F6               	xorwf	___awdiv@sign,f
  1053  06E1                     l1191:	
  1054  06E1  01F7               	clrf	___awdiv@quotient
  1055  06E2  01F8               	clrf	___awdiv@quotient+1
  1056  06E3  0870               	movf	___awdiv@divisor,w
  1057  06E4  0471               	iorwf	___awdiv@divisor+1,w
  1058  06E5  1903               	btfsc	3,2
  1059  06E6  2F18               	goto	l1213
  1060  06E7  01F5               	clrf	___awdiv@counter
  1061  06E8  0AF5               	incf	___awdiv@counter,f
  1062  06E9                     l1201:	
  1063  06E9  1BF1               	btfsc	___awdiv@divisor+1,7
  1064  06EA  2EF7               	goto	l1203
  1065  06EB  3001               	movlw	1
  1066  06EC                     u595:	
  1067  06EC  1003               	clrc
  1068  06ED  0DF0               	rlf	___awdiv@divisor,f
  1069  06EE  0DF1               	rlf	___awdiv@divisor+1,f
  1070  06EF  3EFF               	addlw	-1
  1071  06F0  1D03               	skipz
  1072  06F1  2EEC               	goto	u595
  1073  06F2  3001               	movlw	1
  1074  06F3  00F4               	movwf	??___awdiv
  1075  06F4  0874               	movf	??___awdiv,w
  1076  06F5  07F5               	addwf	___awdiv@counter,f
  1077  06F6  2EE9               	goto	l1201
  1078  06F7                     l1203:	
  1079  06F7  3001               	movlw	1
  1080  06F8                     u615:	
  1081  06F8  1003               	clrc
  1082  06F9  0DF7               	rlf	___awdiv@quotient,f
  1083  06FA  0DF8               	rlf	___awdiv@quotient+1,f
  1084  06FB  3EFF               	addlw	-1
  1085  06FC  1D03               	skipz
  1086  06FD  2EF8               	goto	u615
  1087  06FE  0871               	movf	___awdiv@divisor+1,w
  1088  06FF  0273               	subwf	___awdiv@dividend+1,w
  1089  0700  1D03               	skipz
  1090  0701  2F04               	goto	u625
  1091  0702  0870               	movf	___awdiv@divisor,w
  1092  0703  0272               	subwf	___awdiv@dividend,w
  1093  0704                     u625:	
  1094  0704  1C03               	skipc
  1095  0705  2F0D               	goto	l1209
  1096  0706  0870               	movf	___awdiv@divisor,w
  1097  0707  02F2               	subwf	___awdiv@dividend,f
  1098  0708  0871               	movf	___awdiv@divisor+1,w
  1099  0709  1C03               	skipc
  1100  070A  03F3               	decf	___awdiv@dividend+1,f
  1101  070B  02F3               	subwf	___awdiv@dividend+1,f
  1102  070C  1477               	bsf	___awdiv@quotient,0
  1103  070D                     l1209:	
  1104  070D  3001               	movlw	1
  1105  070E                     u635:	
  1106  070E  1003               	clrc
  1107  070F  0CF1               	rrf	___awdiv@divisor+1,f
  1108  0710  0CF0               	rrf	___awdiv@divisor,f
  1109  0711  3EFF               	addlw	-1
  1110  0712  1D03               	skipz
  1111  0713  2F0E               	goto	u635
  1112  0714  3001               	movlw	1
  1113  0715  02F5               	subwf	___awdiv@counter,f
  1114  0716  1D03               	btfss	3,2
  1115  0717  2EF7               	goto	l1203
  1116  0718                     l1213:	
  1117  0718  0876               	movf	___awdiv@sign,w
  1118  0719  1903               	btfsc	3,2
  1119  071A  2F20               	goto	l1217
  1120  071B  09F7               	comf	___awdiv@quotient,f
  1121  071C  09F8               	comf	___awdiv@quotient+1,f
  1122  071D  0AF7               	incf	___awdiv@quotient,f
  1123  071E  1903               	skipnz
  1124  071F  0AF8               	incf	___awdiv@quotient+1,f
  1125  0720                     l1217:	
  1126  0720  0878               	movf	___awdiv@quotient+1,w
  1127  0721  00F1               	movwf	?___awdiv+1
  1128  0722  0877               	movf	___awdiv@quotient,w
  1129  0723  00F0               	movwf	?___awdiv
  1130  0724  0008               	return
  1131  0725                     __end_of___awdiv:	
  1132                           
  1133                           	psect	text3
  1134  067C                     __ptext3:	
  1135 ;; *************** function _LCDInit *****************
  1136 ;; Defined at:
  1137 ;;		line 144 in file "lcd_hd44780_pic16.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  style           1    wreg     unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  style           1   12[COMMON] unsigned char 
  1142 ;;  __i             1   13[COMMON] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;		None               void
  1145 ;; Registers used:
  1146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1
  1152 ;;      Params:         0       0       0
  1153 ;;      Locals:         2       0       0
  1154 ;;      Temps:          0       3       0
  1155 ;;      Totals:         2       3       0
  1156 ;;Total ram usage:        5 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    2
  1159 ;; This function calls:
  1160 ;;		_LCDBusyLoop
  1161 ;;		_LCDByte
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           
  1168                           ;psect for function _LCDInit
  1169  067C                     _LCDInit:	
  1170                           
  1171                           ;incstack = 0
  1172                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1173                           ;LCDInit@style stored from wreg
  1174  067C  00FC               	movwf	LCDInit@style
  1175                           
  1176                           ;lcd_hd44780_pic16.c: 160: _delay((unsigned long)((500)*(2000000L/4000.0)));
  1177  067D  3002               	movlw	2
  1178  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1179  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0680  00A2               	movwf	??_LCDInit+2
  1181  0681  3045               	movlw	69
  1182  0682  00A1               	movwf	??_LCDInit+1
  1183  0683  30A9               	movlw	169
  1184  0684  00A0               	movwf	??_LCDInit
  1185  0685                     u1147:	
  1186  0685  0BA0               	decfsz	??_LCDInit,f
  1187  0686  2E85               	goto	u1147
  1188  0687  0BA1               	decfsz	??_LCDInit+1,f
  1189  0688  2E85               	goto	u1147
  1190  0689  0BA2               	decfsz	??_LCDInit+2,f
  1191  068A  2E85               	goto	u1147
  1192  068B  2E8C               	nop2
  1193                           
  1194                           ;lcd_hd44780_pic16.c: 163: TRISC&=(~(0x0F<<0));
  1195  068C  30F0               	movlw	240
  1196  068D  1283               	bcf	3,5	;RP0=0, select bank0
  1197  068E  1303               	bcf	3,6	;RP1=0, select bank0
  1198  068F  00A0               	movwf	??_LCDInit
  1199  0690  0820               	movf	??_LCDInit,w
  1200  0691  1683               	bsf	3,5	;RP0=1, select bank1
  1201  0692  1303               	bcf	3,6	;RP1=0, select bank1
  1202  0693  0587               	andwf	7,f	;volatile
  1203                           
  1204                           ;lcd_hd44780_pic16.c: 165: TRISCbits.TRISC6=0;
  1205  0694  1307               	bcf	7,6	;volatile
  1206                           
  1207                           ;lcd_hd44780_pic16.c: 166: TRISCbits.TRISC4=0;
  1208  0695  1207               	bcf	7,4	;volatile
  1209                           
  1210                           ;lcd_hd44780_pic16.c: 167: TRISCbits.TRISC5=0;
  1211  0696  1287               	bcf	7,5	;volatile
  1212                           
  1213                           ;lcd_hd44780_pic16.c: 169: PORTC&=(~(0x0F<<0));
  1214  0697  30F0               	movlw	240
  1215  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1217  069A  00A0               	movwf	??_LCDInit
  1218  069B  0820               	movf	??_LCDInit,w
  1219  069C  0587               	andwf	7,f	;volatile
  1220                           
  1221                           ;lcd_hd44780_pic16.c: 171: (RC6=0);
  1222  069D  1307               	bcf	7,6	;volatile
  1223                           
  1224                           ;lcd_hd44780_pic16.c: 172: (RC5=0);
  1225  069E  1287               	bcf	7,5	;volatile
  1226                           
  1227                           ;lcd_hd44780_pic16.c: 173: (RC4=0);
  1228  069F  1207               	bcf	7,4	;volatile
  1229                           
  1230                           ;lcd_hd44780_pic16.c: 176: _delay((unsigned long)((8)*(2000000L/4000000.0)));
  1231  06A0  2EA1               	nop2	;2 cycle nop
  1232  06A1  2EA2               	nop2	;2 cycle nop
  1233                           
  1234                           ;lcd_hd44780_pic16.c: 178: (RC6=1);
  1235  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1236  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1237  06A4  1707               	bsf	7,6	;volatile
  1238                           
  1239                           ;lcd_hd44780_pic16.c: 179: PORTC|=((0b00000010)<<0);
  1240  06A5  1487               	bsf	7,1	;volatile
  1241                           
  1242                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((8)*(2000000L/4000000.0)));
  1243  06A6  2EA7               	nop2	;2 cycle nop
  1244  06A7  2EA8               	nop2	;2 cycle nop
  1245                           
  1246                           ;lcd_hd44780_pic16.c: 181: (RC6=0);
  1247  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1248  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1249  06AA  1307               	bcf	7,6	;volatile
  1250                           
  1251                           ;lcd_hd44780_pic16.c: 182: _delay((unsigned long)((8)*(2000000L/4000000.0)));
  1252  06AB  2EAC               	nop2	;2 cycle nop
  1253  06AC  2EAD               	nop2	;2 cycle nop
  1254                           
  1255                           ;lcd_hd44780_pic16.c: 185: LCDBusyLoop();
  1256  06AD  2631               	fcall	_LCDBusyLoop
  1257                           
  1258                           ;lcd_hd44780_pic16.c: 190: (LCDByte(0b00101000,0));
  1259  06AE  01F5               	clrf	LCDByte@isdata
  1260  06AF  3028               	movlw	40
  1261  06B0  25F7               	fcall	_LCDByte
  1262                           
  1263                           ;lcd_hd44780_pic16.c: 191: (LCDByte(0b00001100|style,0));
  1264  06B1  01F5               	clrf	LCDByte@isdata
  1265  06B2  087C               	movf	LCDInit@style,w
  1266  06B3  380C               	iorlw	12
  1267  06B4  25F7               	fcall	_LCDByte
  1268                           
  1269                           ;lcd_hd44780_pic16.c: 194: (LCDByte(0b01000000,0));
  1270  06B5  01F5               	clrf	LCDByte@isdata
  1271  06B6  3040               	movlw	64
  1272  06B7  25F7               	fcall	_LCDByte
  1273                           
  1274                           ;lcd_hd44780_pic16.c: 196: uint8_t __i;
  1275                           ;lcd_hd44780_pic16.c: 197: for(__i=0;__i<sizeof(__cgram);__i++)
  1276  06B8  01FD               	clrf	LCDInit@__i
  1277  06B9                     L3:	
  1278  06B9  3008               	movlw	8
  1279  06BA  027D               	subwf	LCDInit@__i,w
  1280  06BB  1803               	btfsc	3,0
  1281  06BC  0008               	return
  1282                           
  1283                           ;lcd_hd44780_pic16.c: 198: (LCDByte(__cgram[__i],1));
  1284  06BD  01F5               	clrf	LCDByte@isdata
  1285  06BE  0AF5               	incf	LCDByte@isdata,f
  1286  06BF  087D               	movf	LCDInit@__i,w
  1287  06C0  3E2E               	addlw	(low (___cgram| 0))& (0+255)
  1288  06C1  0084               	movwf	4
  1289  06C2  1383               	bcf	3,7	;select IRP bank0
  1290  06C3  0800               	movf	0,w
  1291  06C4  25F7               	fcall	_LCDByte
  1292  06C5  3001               	movlw	1
  1293  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1294  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1295  06C8  00A0               	movwf	??_LCDInit
  1296  06C9  0820               	movf	??_LCDInit,w
  1297  06CA  07FD               	addwf	LCDInit@__i,f
  1298  06CB  2EB9               	goto	L3
  1299  06CC                     __end_of_LCDInit:	
  1300                           
  1301                           	psect	text4
  1302  05F7                     __ptext4:	
  1303 ;; *************** function _LCDByte *****************
  1304 ;; Defined at:
  1305 ;;		line 31 in file "lcd_hd44780_pic16.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  c               1    wreg     unsigned char 
  1308 ;;  isdata          1    5[COMMON] unsigned char 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  c               1   10[COMMON] unsigned char 
  1311 ;;  temp            1   11[COMMON] unsigned char 
  1312 ;;  ln              1    9[COMMON] unsigned char 
  1313 ;;  hn              1    8[COMMON] unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;		None               void
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0, pclath, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1
  1323 ;;      Params:         1       0       0
  1324 ;;      Locals:         4       0       0
  1325 ;;      Temps:          2       0       0
  1326 ;;      Totals:         7       0       0
  1327 ;;Total ram usage:        7 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    1
  1330 ;; This function calls:
  1331 ;;		_LCDBusyLoop
  1332 ;; This function is called by:
  1333 ;;		_LCDInit
  1334 ;;		_main
  1335 ;;		_LCDWriteString
  1336 ;;		_LCDWriteInt
  1337 ;;		_LCDGotoXY
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _LCDByte
  1343  05F7                     _LCDByte:	
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  1347                           ;LCDByte@c stored from wreg
  1348  05F7  00FA               	movwf	LCDByte@c
  1349                           
  1350                           ;lcd_hd44780_pic16.c: 40: uint8_t hn,ln;
  1351                           ;lcd_hd44780_pic16.c: 41: uint8_t temp;
  1352                           ;lcd_hd44780_pic16.c: 43: hn=c>>4;
  1353  05F8  087A               	movf	LCDByte@c,w
  1354  05F9  00F6               	movwf	??_LCDByte
  1355  05FA  3004               	movlw	4
  1356  05FB                     u545:	
  1357  05FB  1003               	clrc
  1358  05FC  0CF6               	rrf	??_LCDByte,f
  1359  05FD  3EFF               	addlw	-1
  1360  05FE  1D03               	skipz
  1361  05FF  2DFB               	goto	u545
  1362  0600  0876               	movf	??_LCDByte,w
  1363  0601  00F7               	movwf	??_LCDByte+1
  1364  0602  0877               	movf	??_LCDByte+1,w
  1365  0603  00F8               	movwf	LCDByte@hn
  1366                           
  1367                           ;lcd_hd44780_pic16.c: 44: ln=(c & 0x0F);
  1368  0604  087A               	movf	LCDByte@c,w
  1369  0605  390F               	andlw	15
  1370  0606  00F6               	movwf	??_LCDByte
  1371  0607  0876               	movf	??_LCDByte,w
  1372  0608  00F9               	movwf	LCDByte@ln
  1373                           
  1374                           ;lcd_hd44780_pic16.c: 46: if(isdata==0)
  1375  0609  0875               	movf	LCDByte@isdata,w
  1376  060A  1D03               	btfss	3,2
  1377  060B  2E10               	goto	l21
  1378                           
  1379                           ;lcd_hd44780_pic16.c: 47: (RC4=0);
  1380  060C  1283               	bcf	3,5	;RP0=0, select bank0
  1381  060D  1303               	bcf	3,6	;RP1=0, select bank0
  1382  060E  1207               	bcf	7,4	;volatile
  1383  060F  2E13               	goto	l22
  1384  0610                     l21:	
  1385                           
  1386                           ;lcd_hd44780_pic16.c: 48: else
  1387                           ;lcd_hd44780_pic16.c: 49: (RC4=1);
  1388  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0612  1607               	bsf	7,4	;volatile
  1391  0613                     l22:	
  1392                           
  1393                           ;lcd_hd44780_pic16.c: 51: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1394                           ;lcd_hd44780_pic16.c: 53: (RC6=1);
  1395  0613  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0614  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0615  1707               	bsf	7,6	;volatile
  1398                           
  1399                           ;lcd_hd44780_pic16.c: 57: temp=(PORTC & (~(0X0F<<0)))|((hn<<0));
  1400  0616  0807               	movf	7,w	;volatile
  1401  0617  39F0               	andlw	240
  1402  0618  0478               	iorwf	LCDByte@hn,w
  1403  0619  00F6               	movwf	??_LCDByte
  1404  061A  0876               	movf	??_LCDByte,w
  1405  061B  00FB               	movwf	LCDByte@temp
  1406                           
  1407                           ;lcd_hd44780_pic16.c: 58: PORTC=temp;
  1408  061C  087B               	movf	LCDByte@temp,w
  1409  061D  0087               	movwf	7	;volatile
  1410                           
  1411                           ;lcd_hd44780_pic16.c: 64: (RC6=0);
  1412                           
  1413                           ;lcd_hd44780_pic16.c: 60: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1414  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1415  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0620  1307               	bcf	7,6	;volatile
  1417                           
  1418                           ;lcd_hd44780_pic16.c: 69: (RC6=1);
  1419                           
  1420                           ;lcd_hd44780_pic16.c: 66: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1421  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0623  1707               	bsf	7,6	;volatile
  1424                           
  1425                           ;lcd_hd44780_pic16.c: 71: temp=(PORTC & (~(0X0F<<0)))|((ln<<0));
  1426  0624  0807               	movf	7,w	;volatile
  1427  0625  39F0               	andlw	240
  1428  0626  0479               	iorwf	LCDByte@ln,w
  1429  0627  00F6               	movwf	??_LCDByte
  1430  0628  0876               	movf	??_LCDByte,w
  1431  0629  00FB               	movwf	LCDByte@temp
  1432                           
  1433                           ;lcd_hd44780_pic16.c: 73: PORTC=temp;
  1434  062A  087B               	movf	LCDByte@temp,w
  1435  062B  0087               	movwf	7	;volatile
  1436                           
  1437                           ;lcd_hd44780_pic16.c: 80: (RC6=0);
  1438                           
  1439                           ;lcd_hd44780_pic16.c: 75: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1440  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1441  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1442  062E  1307               	bcf	7,6	;volatile
  1443                           
  1444                           ;lcd_hd44780_pic16.c: 84: LCDBusyLoop();
  1445                           
  1446                           ;lcd_hd44780_pic16.c: 82: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1447  062F  2631               	fcall	_LCDBusyLoop
  1448  0630  0008               	return
  1449  0631                     __end_of_LCDByte:	
  1450                           
  1451                           	psect	text5
  1452  0631                     __ptext5:	
  1453 ;; *************** function _LCDBusyLoop *****************
  1454 ;; Defined at:
  1455 ;;		line 87 in file "lcd_hd44780_pic16.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  status          1    4[COMMON] unsigned char 
  1460 ;;  temp            1    3[COMMON] unsigned char 
  1461 ;;  busy            1    2[COMMON] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;		None               void
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1
  1471 ;;      Params:         0       0       0
  1472 ;;      Locals:         3       0       0
  1473 ;;      Temps:          2       0       0
  1474 ;;      Totals:         5       0       0
  1475 ;;Total ram usage:        5 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_LCDByte
  1481 ;;		_LCDInit
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           
  1486                           ;psect for function _LCDBusyLoop
  1487  0631                     _LCDBusyLoop:	
  1488                           
  1489                           ;lcd_hd44780_pic16.c: 91: uint8_t busy,status=0x00,temp;
  1490                           
  1491                           ;incstack = 0
  1492                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  1493  0631  01F4               	clrf	LCDBusyLoop@status
  1494                           
  1495                           ;lcd_hd44780_pic16.c: 94: TRISC|=(0x0f<<0);
  1496  0632  300F               	movlw	15
  1497  0633  00F0               	movwf	??_LCDBusyLoop
  1498  0634  0870               	movf	??_LCDBusyLoop,w
  1499  0635  1683               	bsf	3,5	;RP0=1, select bank1
  1500  0636  1303               	bcf	3,6	;RP1=0, select bank1
  1501  0637  0487               	iorwf	7,f	;volatile
  1502                           
  1503                           ;lcd_hd44780_pic16.c: 97: (RC5=1);
  1504  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1506  063A  1687               	bsf	7,5	;volatile
  1507                           
  1508                           ;lcd_hd44780_pic16.c: 98: (RC4=0);
  1509  063B  1207               	bcf	7,4	;volatile
  1510  063C                     l1111:	
  1511                           ;lcd_hd44780_pic16.c: 104: do
  1512                           
  1513                           ;lcd_hd44780_pic16.c: 102: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1514                           
  1515                           
  1516                           ;lcd_hd44780_pic16.c: 105: {
  1517                           ;lcd_hd44780_pic16.c: 107: (RC6=1);
  1518  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1519  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1520  063E  1707               	bsf	7,6	;volatile
  1521                           
  1522                           ;lcd_hd44780_pic16.c: 112: status=(PORTC>>0);
  1523                           
  1524                           ;lcd_hd44780_pic16.c: 110: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1525  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0641  0807               	movf	7,w	;volatile
  1528  0642  00F0               	movwf	??_LCDBusyLoop
  1529  0643  0870               	movf	??_LCDBusyLoop,w
  1530  0644  00F4               	movwf	LCDBusyLoop@status
  1531                           
  1532                           ;lcd_hd44780_pic16.c: 113: status=status<<4;
  1533  0645  0874               	movf	LCDBusyLoop@status,w
  1534  0646  00F0               	movwf	??_LCDBusyLoop
  1535  0647  3003               	movlw	3
  1536  0648                     u525:	
  1537  0648  1003               	clrc
  1538  0649  0DF0               	rlf	??_LCDBusyLoop,f
  1539  064A  3EFF               	addlw	-1
  1540  064B  1D03               	skipz
  1541  064C  2E48               	goto	u525
  1542  064D  1003               	clrc
  1543  064E  0D70               	rlf	??_LCDBusyLoop,w
  1544  064F  00F1               	movwf	??_LCDBusyLoop+1
  1545  0650  0871               	movf	??_LCDBusyLoop+1,w
  1546  0651  00F4               	movwf	LCDBusyLoop@status
  1547                           
  1548                           ;lcd_hd44780_pic16.c: 118: (RC6=0);
  1549                           
  1550                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1551  0652  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0653  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0654  1307               	bcf	7,6	;volatile
  1554                           
  1555                           ;lcd_hd44780_pic16.c: 121: (RC6=1);
  1556                           
  1557                           ;lcd_hd44780_pic16.c: 119: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1558  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0656  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0657  1707               	bsf	7,6	;volatile
  1561                           
  1562                           ;lcd_hd44780_pic16.c: 124: temp=(PORTC>>0);
  1563                           
  1564                           ;lcd_hd44780_pic16.c: 122: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1565  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1567  065A  0807               	movf	7,w	;volatile
  1568  065B  00F0               	movwf	??_LCDBusyLoop
  1569  065C  0870               	movf	??_LCDBusyLoop,w
  1570  065D  00F3               	movwf	LCDBusyLoop@temp
  1571                           
  1572                           ;lcd_hd44780_pic16.c: 125: temp&=0x0F;
  1573  065E  300F               	movlw	15
  1574  065F  00F0               	movwf	??_LCDBusyLoop
  1575  0660  0870               	movf	??_LCDBusyLoop,w
  1576  0661  05F3               	andwf	LCDBusyLoop@temp,f
  1577                           
  1578                           ;lcd_hd44780_pic16.c: 127: status=status|temp;
  1579  0662  0874               	movf	LCDBusyLoop@status,w
  1580  0663  0473               	iorwf	LCDBusyLoop@temp,w
  1581  0664  00F0               	movwf	??_LCDBusyLoop
  1582  0665  0870               	movf	??_LCDBusyLoop,w
  1583  0666  00F4               	movwf	LCDBusyLoop@status
  1584                           
  1585                           ;lcd_hd44780_pic16.c: 129: busy=status & 0b10000000;
  1586  0667  0874               	movf	LCDBusyLoop@status,w
  1587  0668  3980               	andlw	128
  1588  0669  00F0               	movwf	??_LCDBusyLoop
  1589  066A  0870               	movf	??_LCDBusyLoop,w
  1590  066B  00F2               	movwf	LCDBusyLoop@busy
  1591                           
  1592                           ;lcd_hd44780_pic16.c: 133: (RC6=0);
  1593                           
  1594                           ;lcd_hd44780_pic16.c: 131: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1595  066C  1283               	bcf	3,5	;RP0=0, select bank0
  1596  066D  1303               	bcf	3,6	;RP1=0, select bank0
  1597  066E  1307               	bcf	7,6	;volatile
  1598                           
  1599                           ;lcd_hd44780_pic16.c: 135: }while(busy);
  1600                           
  1601                           ;lcd_hd44780_pic16.c: 134: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  1602  066F  0872               	movf	LCDBusyLoop@busy,w
  1603  0670  1D03               	btfss	3,2
  1604  0671  2E3C               	goto	l1111
  1605                           
  1606                           ;lcd_hd44780_pic16.c: 137: (RC5=0);
  1607  0672  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0673  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0674  1287               	bcf	7,5	;volatile
  1610                           
  1611                           ;lcd_hd44780_pic16.c: 140: TRISC&=(~(0x0F<<0));
  1612  0675  30F0               	movlw	240
  1613  0676  00F0               	movwf	??_LCDBusyLoop
  1614  0677  0870               	movf	??_LCDBusyLoop,w
  1615  0678  1683               	bsf	3,5	;RP0=1, select bank1
  1616  0679  1303               	bcf	3,6	;RP1=0, select bank1
  1617  067A  0587               	andwf	7,f	;volatile
  1618  067B  0008               	return
  1619  067C                     __end_of_LCDBusyLoop:	
  1620                           
  1621                           	psect	text6
  1622  05D4                     __ptext6:	
  1623 ;; *************** function _Init *****************
  1624 ;; Defined at:
  1625 ;;		line 12 in file "user.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;		None               void
  1632 ;; Registers used:
  1633 ;;		wreg, status,2
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1
  1639 ;;      Params:         0       0       0
  1640 ;;      Locals:         0       0       0
  1641 ;;      Temps:          0       0       0
  1642 ;;      Totals:         0       0       0
  1643 ;;Total ram usage:        0 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _Init
  1654  05D4                     _Init:	
  1655                           
  1656                           ;user.c: 15: TRISA = 0b00010100;
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _Init: [wreg+status,2]
  1660  05D4  3014               	movlw	20
  1661  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  1662  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  1663  05D7  0085               	movwf	5	;volatile
  1664                           
  1665                           ;user.c: 16: ANSELA = 0b00010100;
  1666  05D8  3014               	movlw	20
  1667  05D9  1683               	bsf	3,5	;RP0=1, select bank3
  1668  05DA  1703               	bsf	3,6	;RP1=1, select bank3
  1669  05DB  0085               	movwf	5	;volatile
  1670                           
  1671                           ;user.c: 17: PORTA = 0b00000000;
  1672  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1673  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1674  05DE  0185               	clrf	5	;volatile
  1675                           
  1676                           ;user.c: 19: TRISB = 0b00000000;
  1677  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  1678  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  1679  05E1  0186               	clrf	6	;volatile
  1680                           
  1681                           ;user.c: 20: ANSELB = 0b00000000;
  1682  05E2  1683               	bsf	3,5	;RP0=1, select bank3
  1683  05E3  1703               	bsf	3,6	;RP1=1, select bank3
  1684  05E4  0186               	clrf	6	;volatile
  1685                           
  1686                           ;user.c: 21: PORTB = 0x00;
  1687  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1688  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1689  05E7  0186               	clrf	6	;volatile
  1690                           
  1691                           ;user.c: 23: TRISC = 0x00;
  1692  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  1693  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  1694  05EA  0187               	clrf	7	;volatile
  1695                           
  1696                           ;user.c: 24: ANSELC = 0x00;
  1697  05EB  1683               	bsf	3,5	;RP0=1, select bank3
  1698  05EC  1703               	bsf	3,6	;RP1=1, select bank3
  1699  05ED  0187               	clrf	7	;volatile
  1700                           
  1701                           ;user.c: 25: PORTC = 0xff;
  1702  05EE  30FF               	movlw	255
  1703  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1704  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1705  05F1  0087               	movwf	7	;volatile
  1706                           
  1707                           ;user.c: 28: FVRCON = 0xf3;
  1708  05F2  30F3               	movlw	243
  1709  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  1710  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  1711  05F5  009D               	movwf	29	;volatile
  1712  05F6  0008               	return
  1713  05F7                     __end_of_Init:	
  1714                           
  1715                           	psect	text7
  1716  0593                     __ptext7:	
  1717 ;; *************** function _ConfigureOscillator *****************
  1718 ;; Defined at:
  1719 ;;		line 10 in file "system.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;		None               void
  1726 ;; Registers used:
  1727 ;;		wreg
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1
  1733 ;;      Params:         0       0       0
  1734 ;;      Locals:         0       0       0
  1735 ;;      Temps:          0       0       0
  1736 ;;      Totals:         0       0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _ConfigureOscillator
  1748  0593                     _ConfigureOscillator:	
  1749                           
  1750                           ;system.c: 12: FVRCON = 0xD3;
  1751                           
  1752                           ;incstack = 0
  1753                           ; Regs used in _ConfigureOscillator: [wreg]
  1754  0593  30D3               	movlw	211
  1755  0594  1683               	bsf	3,5	;RP0=1, select bank1
  1756  0595  1303               	bcf	3,6	;RP1=0, select bank1
  1757  0596  009D               	movwf	29	;volatile
  1758                           
  1759                           ;system.c: 13: IRCF1 = 0;
  1760  0597  1290               	bcf	16,5	;volatile
  1761                           
  1762                           ;system.c: 14: IRCF0 = 0;
  1763  0598  1210               	bcf	16,4	;volatile
  1764  0599  0008               	return
  1765  059A                     __end_of_ConfigureOscillator:	
  1766                           
  1767                           	psect	text8
  1768  05B7                     __ptext8:	
  1769 ;; *************** function _ADCRead *****************
  1770 ;; Defined at:
  1771 ;;		line 35 in file "user.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  ch              1    wreg     unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  ch              1    1[COMMON] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      unsigned char 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1
  1785 ;;      Params:         0       0       0
  1786 ;;      Locals:         1       0       0
  1787 ;;      Temps:          1       0       0
  1788 ;;      Totals:         2       0       0
  1789 ;;Total ram usage:        2 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;;		_MenuRead
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           
  1800                           ;psect for function _ADCRead
  1801  05B7                     _ADCRead:	
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _ADCRead: [wreg+status,2+status,0]
  1805                           ;ADCRead@ch stored from wreg
  1806  05B7  00F1               	movwf	ADCRead@ch
  1807                           
  1808                           ;user.c: 38: ADCON0=0x00;
  1809  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1810  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1811  05BA  019F               	clrf	31	;volatile
  1812                           
  1813                           ;user.c: 39: ADCON0=(ch<<2);
  1814  05BB  0871               	movf	ADCRead@ch,w
  1815  05BC  00F0               	movwf	??_ADCRead
  1816  05BD  3001               	movlw	1
  1817  05BE                     u685:	
  1818  05BE  1003               	clrc
  1819  05BF  0DF0               	rlf	??_ADCRead,f
  1820  05C0  3EFF               	addlw	-1
  1821  05C1  1D03               	skipz
  1822  05C2  2DBE               	goto	u685
  1823  05C3  1003               	clrc
  1824  05C4  0D70               	rlf	??_ADCRead,w
  1825  05C5  009F               	movwf	31	;volatile
  1826                           
  1827                           ;user.c: 40: ADON=1;
  1828  05C6  141F               	bsf	31,0	;volatile
  1829                           
  1830                           ;user.c: 41: _delay((unsigned long)((1500)*(2000000L/4000000.0)));
  1831  05C7  30F9               	movlw	249
  1832  05C8  00F0               	movwf	??_ADCRead
  1833  05C9                     u1157:	
  1834  05C9  0BF0               	decfsz	??_ADCRead,f
  1835  05CA  2DC9               	goto	u1157
  1836  05CB  2DCC               	nop2	;nop
  1837                           
  1838                           ;user.c: 42: GO_nDONE=1;
  1839  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1840  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1841  05CE  149F               	bsf	31,1	;volatile
  1842  05CF                     l149:	
  1843                           ;user.c: 43: while(GO_nDONE);
  1844                           
  1845  05CF  189F               	btfsc	31,1	;volatile
  1846  05D0  2DCF               	goto	l149
  1847                           
  1848                           ;user.c: 44: ADON=0;
  1849  05D1  101F               	bcf	31,0	;volatile
  1850                           
  1851                           ;user.c: 45: return ADRES;
  1852  05D2  081E               	movf	30,w	;volatile
  1853  05D3  0008               	return
  1854  05D4                     __end_of_ADCRead:	
  1855                           
  1856                           	psect	text9
  1857  058E                     __ptext9:	
  1858 ;; *************** function _ADCInit *****************
  1859 ;; Defined at:
  1860 ;;		line 32 in file "user.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;		None               void
  1867 ;; Registers used:
  1868 ;;		wreg
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1
  1874 ;;      Params:         0       0       0
  1875 ;;      Locals:         0       0       0
  1876 ;;      Temps:          0       0       0
  1877 ;;      Totals:         0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           
  1888                           ;psect for function _ADCInit
  1889  058E                     _ADCInit:	
  1890                           
  1891                           ;user.c: 33: ADCON1 = 0x10;
  1892                           
  1893                           ;incstack = 0
  1894                           ; Regs used in _ADCInit: [wreg]
  1895  058E  3010               	movlw	16
  1896  058F  1683               	bsf	3,5	;RP0=1, select bank1
  1897  0590  1303               	bcf	3,6	;RP1=0, select bank1
  1898  0591  009F               	movwf	31	;volatile
  1899  0592  0008               	return
  1900  0593                     __end_of_ADCInit:	
  1901  007E                     btemp	set	126	;btemp
  1902  007E                     wtemp	set	126
  1903  007E                     wtemp0	set	126
  1904  0080                     wtemp1	set	128
  1905  0082                     wtemp2	set	130
  1906  0084                     wtemp3	set	132
  1907  0086                     wtemp4	set	134
  1908  0088                     wtemp5	set	136
  1909  007F                     wtemp6	set	127
  1910  007E                     ttemp	set	126
  1911  007E                     ttemp0	set	126
  1912  0081                     ttemp1	set	129
  1913  0084                     ttemp2	set	132
  1914  0087                     ttemp3	set	135
  1915  007F                     ttemp4	set	127
  1916  007E                     ltemp	set	126
  1917  007E                     ltemp0	set	126
  1918  0082                     ltemp1	set	130
  1919  0086                     ltemp2	set	134
  1920  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      29
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCDInit
    _TempCalc->___awdiv
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDInit

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    4462
                                              3 BANK0     11    11      0
                            _ADCInit
                            _ADCRead
                _ConfigureOscillator
                               _Init
                            _LCDByte
                            _LCDInit
                           _TempCalc
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _TempCalc                                             1     1      0     874
                                              9 COMMON     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     830
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              5     5      0    1118
                                             12 COMMON     2     2      0
                                              0 BANK0      3     3      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1     911
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCRead                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _ADCRead
   _ConfigureOscillator
   _Init
   _LCDByte
     _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _TempCalc
     ___awdiv
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      E      1D       5       36.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B       8        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 20 02:43:11 2015

                ?_LCDBusyLoop 0070                            l21 0610                            l22 0613  
                ___awdiv@sign 0076                   main@OldTemp 0029                            fsr 0004  
                         l149 05CF                           _RC4 003C                           _RC5 003D  
                         _RC6 003E                           u525 0648                           u615 06F8  
                         u545 05FB                           u625 0704                           u635 070E  
                         u595 06EC                           u835 0786                           u685 05BE  
                         u845 079F                           fsr0 0004               __end_of_ADCInit 0593  
             __end_of_ADCRead 05D4                           indf 0000               __end_of_LCDByte 0631  
             __end_of_LCDInit 06CC                   LCDByte@temp 007B                          l1111 063C  
                        l1201 06E9                          l1203 06F7                          l1213 0718  
                        l1217 0720                          l1209 070D                          l1315 05A9  
                        l1191 06E1                          l1423 07A1                          l1407 074E  
                        l1185 06D6                          l1433 07DD                          l1417 0761  
                        l1427 07C8                          _ADON 00F8                          u1127 0730  
                        u1137 0741                          u1147 0685                          u1157 05C9  
                        _Init 05D4                          _main 0725                          btemp 007E  
               __CFG_BOREN$ON 0000                          ltemp 007E                          start 0000  
                        ttemp 007E                          wtemp 007E                         ?_Init 0070  
                       ?_main 0070               __end_of___awdiv 0725                         _ADRES 001E  
               __CFG_WDTE$OFF 0000                  LCDInit@style 007C               ___awdiv@divisor 0070  
                       _IRCF0 0484                         _IRCF1 0485               ___awdiv@counter 0075  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
         _ConfigureOscillator 0593                 __CFG_PWRTE$ON 0000                         main@i 002D  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F          ?_ConfigureOscillator 0070  
             __initialization 07E7                  __end_of_Init 05F7                  __end_of_main 07E7  
                   ??_ADCInit 0070                     ??_ADCRead 0070                        ??_Init 0070  
                      ??_main 0023              __end_of_TempCalc 05B7                 LCDByte@isdata 0075  
                   ??_LCDByte 0076                     ??_LCDInit 0020                     ADCRead@ch 0071  
                      _ADCON0 001F                        _ADCON1 009F              ___awdiv@dividend 0072  
                      _ANSELA 0185                        _ANSELB 0186                        _ANSELC 0187  
                      _FVRCON 009D         ??_ConfigureOscillator 0070                     ??___awdiv 0074  
        __size_of_LCDBusyLoop 004B              ___awdiv@quotient 0077       __end_of__initialization 07FE  
                   LCDByte@hn 0078                     LCDByte@ln 0079                __pcstackCOMMON 0070  
                __pidataBANK0 059A                    __pbssBANK0 0036                     ?_TempCalc 0070  
                  __pmaintext 0725                       _ADCInit 058E                       _ADCRead 05B7  
                     _LCDByte 05F7                       _LCDInit 067C                       _MenuKey 003B  
                  ??_TempCalc 0079                       ___cgram 002E                       ___awdiv 06CC  
                     __ptext1 05A2                       __ptext2 06CC                       __ptext3 067C  
                     __ptext4 05F7                       __ptext5 0631                       __ptext6 05D4  
                     __ptext7 0593                       __ptext8 05B7                       __ptext9 058E  
        end_of_initialization 07FE                     _TRISCbits 0087   __end_of_ConfigureOscillator 059A  
                  LCDInit@__i 007D                 ??_LCDBusyLoop 0070           start_initialization 07E7  
                   TempCalc@a 0079             __size_of_TempCalc 0015                   __pdataBANK0 002E  
                    ?_ADCInit 0070                      ?_ADCRead 0070           __end_of_LCDBusyLoop 067C  
                    ?_LCDByte 0075                      ?_LCDInit 0070                      LCDByte@c 007A  
                   ___latbits 0000                 __pcstackBANK0 0020              LCDWriteInt@F1072 0036  
                    ?___awdiv 0070               LCDBusyLoop@busy 0072               LCDBusyLoop@temp 0073  
                    _GO_nDONE 00F9                   _LCDBusyLoop 0631              __size_of_ADCInit 0005  
            __size_of_ADCRead 001D              __size_of_LCDByte 003A              __size_of_LCDInit 0050  
                   main@timer 0026                      _TempCalc 05A2              __size_of___awdiv 0059  
           LCDBusyLoop@status 0074                 __size_of_Init 0023                 __size_of_main 00C2  
__size_of_ConfigureOscillator 0007                      main@Temp 002B                      main@Test 0027  
          __CFG_FOSC$INTOSCIO 0000  
