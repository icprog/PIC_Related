

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Jan 05 20:09:32 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F720
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	bitnvBANK0,global,bit,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  008C                     	;# 
    53  008E                     	;# 
    54  008F                     	;# 
    55  0090                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0095                     	;# 
    62  0096                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009D                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  0115                     	;# 
    72  0116                     	;# 
    73  0185                     	;# 
    74  0186                     	;# 
    75  0187                     	;# 
    76  018C                     	;# 
    77  018D                     	;# 
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  008C                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009D                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0185                     	;# 
   132  0186                     	;# 
   133  0187                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  008C                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009D                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  0115                     	;# 
   188  0116                     	;# 
   189  0185                     	;# 
   190  0186                     	;# 
   191  0187                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  000E                     	;# 
   206  000E                     	;# 
   207  000F                     	;# 
   208  0010                     	;# 
   209  0011                     	;# 
   210  0012                     	;# 
   211  0013                     	;# 
   212  0014                     	;# 
   213  0015                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  0081                     	;# 
   223  0085                     	;# 
   224  0086                     	;# 
   225  0087                     	;# 
   226  008C                     	;# 
   227  008E                     	;# 
   228  008F                     	;# 
   229  0090                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009D                     	;# 
   240  009F                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0115                     	;# 
   246  0116                     	;# 
   247  0185                     	;# 
   248  0186                     	;# 
   249  0187                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252                           
   253                           	psect	idataBANK0
   254  0330                     __pidataBANK0:	
   255                           
   256                           ;initializer for _hl
   257  0330  3408               	retlw	8
   258                           
   259                           	psect	bitnvBANK0
   260  01B0                     __pbitnvBANK0:	
   261  01B0                     main@Toggle:	
   262  01B0                     	ds	1
   263  001F                     _ADCON0	set	31
   264  001E                     _ADRES	set	30
   265  0005                     _PORTA	set	5
   266  0006                     _PORTB	set	6
   267  0007                     _PORTC	set	7
   268  0001                     _TMR0	set	1
   269  00F8                     _ADON	set	248
   270  00F9                     _GO_nDONE	set	249
   271  002D                     _RA5	set	45
   272  0036                     _RB6	set	54
   273  0037                     _RB7	set	55
   274  003A                     _RC2	set	58
   275  003C                     _RC4	set	60
   276  003D                     _RC5	set	61
   277  005A                     _TMR0IF	set	90
   278  009F                     _ADCON1	set	159
   279  009D                     _FVRCON	set	157
   280  0091                     _OSCTUNE	set	145
   281  0085                     _TRISA	set	133
   282  0086                     _TRISB	set	134
   283  0087                     _TRISC	set	135
   284  0484                     _IRCF0	set	1156
   285  0485                     _IRCF1	set	1157
   286  0408                     _PS0	set	1032
   287  0409                     _PS1	set	1033
   288  040A                     _PS2	set	1034
   289  040B                     _PSA	set	1035
   290  040D                     _T0CS	set	1037
   291  040C                     _T0SE	set	1036
   292  0185                     _ANSELA	set	389
   293  0186                     _ANSELB	set	390
   294  0187                     _ANSELC	set	391
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  07F7                     start_initialization:	
   300  07F7                     __initialization:	
   301                           
   302                           ; Clear objects allocated to BANK0
   303  07F7  01B1               	clrf	__pbssBANK0& (0+127)
   304  07F8  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   305  07F9  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   306  07FA  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   307  07FB  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   308                           
   309                           ; Initialize objects allocated to BANK0
   310  07FC  2330               	fcall	__pidataBANK0	;fetch initializer
   311  07FD  00B7               	movwf	__pdataBANK0& (0+127)
   312  07FE                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  07FE                     __end_of__initialization:	
   316  07FE  0183               	clrf	3
   317  07FF  2BD3               	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssBANK0
   320  0031                     __pbssBANK0:	
   321  0031                     _hh:	
   322  0031                     	ds	1
   323  0032                     _mh:	
   324  0032                     	ds	1
   325  0033                     _ml:	
   326  0033                     	ds	1
   327  0034                     _sh:	
   328  0034                     	ds	1
   329  0035                     _sl:	
   330  0035                     	ds	1
   331                           
   332                           	psect	dataBANK0
   333  0037                     __pdataBANK0:	
   334  0037                     _hl:	
   335  0037                     	ds	1
   336                           
   337                           	psect	cstackCOMMON
   338  0070                     __pcstackCOMMON:	
   339  0070                     ?_ConfigureOscillator:	
   340  0070                     ??_ConfigureOscillator:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_Init:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ??_Init:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_MoistureCheck:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_ADCInit:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ??_ADCInit:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ??_ADCRead:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_ADCRead:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_Median:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_main:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?___wmul:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  0070                     Median@c:	
   374                           ; 2 bytes @ 0x0
   375                           
   376  0070                     ___wmul@multiplier:	
   377                           ; 1 bytes @ 0x0
   378                           
   379                           
   380                           ; 2 bytes @ 0x0
   381  0070                     	ds	1
   382  0071                     ADCRead@ch:	
   383  0071                     Median@e:	
   384                           ; 1 bytes @ 0x1
   385                           
   386                           
   387                           ; 1 bytes @ 0x1
   388  0071                     	ds	1
   389  0072                     ??_Median:	
   390  0072                     ___wmul@multiplicand:	
   391                           ; 0 bytes @ 0x2
   392                           
   393                           
   394                           ; 2 bytes @ 0x2
   395  0072                     	ds	1
   396  0073                     Median@f:	
   397                           
   398                           ; 1 bytes @ 0x3
   399  0073                     	ds	1
   400  0074                     ??___wmul:	
   401  0074                     Median@a:	
   402                           ; 0 bytes @ 0x4
   403                           
   404  0074                     ___wmul@product:	
   405                           ; 1 bytes @ 0x4
   406                           
   407                           
   408                           ; 2 bytes @ 0x4
   409  0074                     	ds	1
   410  0075                     Median@b:	
   411                           
   412                           ; 1 bytes @ 0x5
   413  0075                     	ds	1
   414  0076                     Median@d:	
   415                           
   416                           ; 1 bytes @ 0x6
   417  0076                     	ds	1
   418  0077                     ??_MoistureCheck:	
   419                           
   420                           ; 0 bytes @ 0x7
   421  0077                     	ds	4
   422  007B                     main@bres:	
   423                           
   424                           ; 2 bytes @ 0xB
   425  007B                     	ds	2
   426                           
   427                           	psect	cstackBANK0
   428  0020                     __pcstackBANK0:	
   429  0020                     MoistureCheck@a:	
   430                           
   431                           ; 1 bytes @ 0x0
   432  0020                     	ds	1
   433  0021                     MoistureCheck@c:	
   434                           
   435                           ; 1 bytes @ 0x1
   436  0021                     	ds	1
   437  0022                     MoistureCheck@e:	
   438                           
   439                           ; 1 bytes @ 0x2
   440  0022                     	ds	1
   441  0023                     MoistureCheck@g:	
   442                           
   443                           ; 1 bytes @ 0x3
   444  0023                     	ds	1
   445  0024                     MoistureCheck@i:	
   446                           
   447                           ; 1 bytes @ 0x4
   448  0024                     	ds	1
   449  0025                     MoistureCheck@k:	
   450                           
   451                           ; 1 bytes @ 0x5
   452  0025                     	ds	1
   453  0026                     MoistureCheck@m:	
   454                           
   455                           ; 1 bytes @ 0x6
   456  0026                     	ds	1
   457  0027                     MoistureCheck@o:	
   458                           
   459                           ; 1 bytes @ 0x7
   460  0027                     	ds	1
   461  0028                     MoistureCheck@q:	
   462                           
   463                           ; 1 bytes @ 0x8
   464  0028                     	ds	1
   465  0029                     MoistureCheck@f:	
   466                           
   467                           ; 1 bytes @ 0x9
   468  0029                     	ds	1
   469  002A                     MoistureCheck@l:	
   470                           
   471                           ; 1 bytes @ 0xA
   472  002A                     	ds	1
   473  002B                     MoistureCheck@r:	
   474                           
   475                           ; 1 bytes @ 0xB
   476  002B                     	ds	1
   477  002C                     MoistureCheck@t:	
   478                           
   479                           ; 1 bytes @ 0xC
   480  002C                     	ds	1
   481  002D                     ??_main:	
   482                           
   483                           ; 0 bytes @ 0xD
   484  002D                     	ds	4
   485                           
   486                           	psect	maintext
   487  03D3                     __pmaintext:	
   488 ;;
   489 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   490 ;;
   491 ;; *************** function _main *****************
   492 ;; Defined at:
   493 ;;		line 12 in file "main.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  bres            2   11[COMMON] unsigned int 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  2   40[None  ] int 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : B00/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1
   507 ;;      Params:         0       0       0
   508 ;;      Locals:         2       0       0
   509 ;;      Temps:          0       4       0
   510 ;;      Totals:         2       4       0
   511 ;;Total ram usage:        6 bytes
   512 ;; Hardware stack levels required when called:    2
   513 ;; This function calls:
   514 ;;		_ConfigureOscillator
   515 ;;		_Init
   516 ;;		_MoistureCheck
   517 ;;		___wmul
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _main
   525  03D3                     _main:	
   526                           
   527                           ;main.c: 13: unsigned int bres = 0;
   528                           
   529                           ;incstack = 0
   530                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   531  03D3  01FB               	clrf	main@bres
   532  03D4  01FC               	clrf	main@bres+1
   533                           
   534                           ;main.c: 14: static signed bit Toggle;
   535                           ;main.c: 16: Toggle = 1;
   536  03D5  1283               	bcf	3,5	;RP0=0, select bank0
   537  03D6  1303               	bcf	3,6	;RP1=0, select bank0
   538  03D7  1436               	bsf	main@Toggle/(0+8),main@Toggle& (0+7)
   539                           
   540                           ;main.c: 18: ConfigureOscillator();
   541  03D8  2336               	fcall	_ConfigureOscillator
   542                           
   543                           ;main.c: 20: Init();
   544  03D9  23A6               	fcall	_Init
   545  03DA                     l1207:	
   546                           ;main.c: 22: while (1)
   547                           
   548                           
   549                           ;main.c: 23: {
   550                           ;main.c: 25: if (TMR0IF)
   551  03DA  1D0B               	btfss	11,2	;volatile
   552  03DB  2BE3               	goto	l44
   553                           
   554                           ;main.c: 26: {
   555                           ;main.c: 27: bres += 256;
   556  03DC  3000               	movlw	0
   557  03DD  07FB               	addwf	main@bres,f
   558  03DE  1803               	skipnc
   559  03DF  0AFC               	incf	main@bres+1,f
   560  03E0  3001               	movlw	1
   561  03E1  07FC               	addwf	main@bres+1,f
   562                           
   563                           ;main.c: 28: TMR0IF = 0;
   564  03E2  110B               	bcf	11,2	;volatile
   565  03E3                     l44:	
   566                           
   567                           ;main.c: 29: }
   568                           ;main.c: 32: if (bres >= 1953)
   569  03E3  3007               	movlw	7
   570  03E4  027C               	subwf	main@bres+1,w
   571  03E5  30A1               	movlw	161
   572  03E6  1903               	skipnz
   573  03E7  027B               	subwf	main@bres,w
   574  03E8  1C03               	skipc
   575  03E9  2BF8               	goto	l1219
   576                           
   577                           ;main.c: 33: {
   578                           ;main.c: 34: bres -= 1953;
   579  03EA  30A1               	movlw	161
   580  03EB  02FB               	subwf	main@bres,f
   581  03EC  3007               	movlw	7
   582  03ED  1C03               	skipc
   583  03EE  03FC               	decf	main@bres+1,f
   584  03EF  02FC               	subwf	main@bres+1,f
   585                           
   586                           ;main.c: 35: ++sl;
   587  03F0  3001               	movlw	1
   588  03F1  1283               	bcf	3,5	;RP0=0, select bank0
   589  03F2  1303               	bcf	3,6	;RP1=0, select bank0
   590  03F3  00AD               	movwf	??_main
   591  03F4  082D               	movf	??_main,w
   592  03F5  07B5               	addwf	_sl,f
   593                           
   594                           ;main.c: 36: Toggle = Toggle - 1;
   595  03F6  3001               	movlw	(0+1) shl (main@Toggle& (0+7))
   596  03F7  06B6               	xorwf	main@Toggle/(0+8),f
   597  03F8                     l1219:	
   598                           
   599                           ;main.c: 37: }
   600                           ;main.c: 40: if (sl > 9) {
   601  03F8  300A               	movlw	10
   602  03F9  1283               	bcf	3,5	;RP0=0, select bank0
   603  03FA  1303               	bcf	3,6	;RP1=0, select bank0
   604  03FB  0235               	subwf	_sl,w
   605  03FC  1C03               	skipc
   606  03FD  2C10               	goto	l1229
   607                           
   608                           ;main.c: 41: sl = sl - 10;
   609  03FE  0835               	movf	_sl,w
   610  03FF  3EF6               	addlw	246
   611  0400  00AD               	movwf	??_main
   612  0401  082D               	movf	??_main,w
   613  0402  00B5               	movwf	_sl
   614                           
   615                           ;main.c: 42: ++sh;
   616  0403  3001               	movlw	1
   617  0404  00AD               	movwf	??_main
   618  0405  082D               	movf	??_main,w
   619  0406  07B4               	addwf	_sh,f
   620                           
   621                           ;main.c: 44: if (sh > 5)
   622  0407  3006               	movlw	6
   623  0408  0234               	subwf	_sh,w
   624  0409  1C03               	skipc
   625  040A  2C10               	goto	l1229
   626                           
   627                           ;main.c: 45: {
   628                           ;main.c: 46: sh = 0;
   629  040B  01B4               	clrf	_sh
   630                           
   631                           ;main.c: 47: ++ml;
   632  040C  3001               	movlw	1
   633  040D  00AD               	movwf	??_main
   634  040E  082D               	movf	??_main,w
   635  040F  07B3               	addwf	_ml,f
   636  0410                     l1229:	
   637                           
   638                           ;main.c: 48: }
   639                           ;main.c: 49: }
   640                           ;main.c: 51: if (ml > 9)
   641  0410  300A               	movlw	10
   642  0411  0233               	subwf	_ml,w
   643  0412  1C03               	skipc
   644  0413  2C19               	goto	l1235
   645                           
   646                           ;main.c: 52: {
   647                           ;main.c: 53: ml = 0;
   648  0414  01B3               	clrf	_ml
   649                           
   650                           ;main.c: 54: mh++;
   651  0415  3001               	movlw	1
   652  0416  00AD               	movwf	??_main
   653  0417  082D               	movf	??_main,w
   654  0418  07B2               	addwf	_mh,f
   655  0419                     l1235:	
   656                           
   657                           ;main.c: 55: }
   658                           ;main.c: 57: if (mh > 5)
   659  0419  3006               	movlw	6
   660  041A  0232               	subwf	_mh,w
   661  041B  1C03               	skipc
   662  041C  2C22               	goto	l1241
   663                           
   664                           ;main.c: 58: {
   665                           ;main.c: 59: mh = 0;
   666  041D  01B2               	clrf	_mh
   667                           
   668                           ;main.c: 60: ++hl;
   669  041E  3001               	movlw	1
   670  041F  00AD               	movwf	??_main
   671  0420  082D               	movf	??_main,w
   672  0421  07B7               	addwf	_hl,f
   673  0422                     l1241:	
   674                           
   675                           ;main.c: 61: }
   676                           ;main.c: 63: if (hl > 9)
   677  0422  300A               	movlw	10
   678  0423  0237               	subwf	_hl,w
   679  0424  1C03               	skipc
   680  0425  2C2B               	goto	l1247
   681                           
   682                           ;main.c: 64: {
   683                           ;main.c: 65: hl = 0;
   684  0426  01B7               	clrf	_hl
   685                           
   686                           ;main.c: 66: ++hh;
   687  0427  3001               	movlw	1
   688  0428  00AD               	movwf	??_main
   689  0429  082D               	movf	??_main,w
   690  042A  07B1               	addwf	_hh,f
   691  042B                     l1247:	
   692                           
   693                           ;main.c: 67: }
   694                           ;main.c: 69: if (hh >= 2 && hl > 3)
   695  042B  3002               	movlw	2
   696  042C  0231               	subwf	_hh,w
   697  042D  1C03               	skipc
   698  042E  2C35               	goto	l1253
   699  042F  3004               	movlw	4
   700  0430  0237               	subwf	_hl,w
   701  0431  1C03               	skipc
   702  0432  2C35               	goto	l1253
   703                           
   704                           ;main.c: 70: {
   705                           ;main.c: 71: hh = 0;
   706  0433  01B1               	clrf	_hh
   707                           
   708                           ;main.c: 72: hl = 0;
   709  0434  01B7               	clrf	_hl
   710  0435                     l1253:	
   711                           
   712                           ;main.c: 73: }
   713                           ;main.c: 75: if (Toggle != 1)
   714  0435  1836               	btfsc	main@Toggle/(0+8),main@Toggle& (0+7)
   715  0436  2C39               	goto	l52
   716                           
   717                           ;main.c: 76: {
   718                           ;main.c: 77: RC5 = 0;
   719  0437  1287               	bcf	7,5	;volatile
   720                           
   721                           ;main.c: 78: } else {
   722  0438  2C3A               	goto	l1257
   723  0439                     l52:	
   724                           
   725                           ;main.c: 79: RC5 = 1;
   726  0439  1687               	bsf	7,5	;volatile
   727  043A                     l1257:	
   728                           
   729                           ;main.c: 80: }
   730                           ;main.c: 86: if (hl + hh * 10 >= 5 && hl + hh * 10 <= 17) {
   731  043A  0831               	movf	_hh,w
   732  043B  00AD               	movwf	??_main
   733  043C  01AE               	clrf	??_main+1
   734  043D  082D               	movf	??_main,w
   735  043E  00F0               	movwf	___wmul@multiplier
   736  043F  082E               	movf	??_main+1,w
   737  0440  00F1               	movwf	___wmul@multiplier+1
   738  0441  300A               	movlw	10
   739  0442  00F2               	movwf	___wmul@multiplicand
   740  0443  3000               	movlw	0
   741  0444  00F3               	movwf	___wmul@multiplicand+1
   742  0445  2385               	fcall	___wmul
   743  0446  1283               	bcf	3,5	;RP0=0, select bank0
   744  0447  1303               	bcf	3,6	;RP1=0, select bank0
   745  0448  0837               	movf	_hl,w
   746  0449  0770               	addwf	?___wmul,w
   747  044A  00AF               	movwf	??_main+2
   748  044B  0871               	movf	?___wmul+1,w
   749  044C  1803               	skipnc
   750  044D  0A71               	incf	?___wmul+1,w
   751  044E  00B0               	movwf	??_main+3
   752  044F  0830               	movf	??_main+3,w
   753  0450  3A80               	xorlw	128
   754  0451  00FF               	movwf	127
   755  0452  3080               	movlw	128
   756  0453  027F               	subwf	127,w
   757  0454  1D03               	skipz
   758  0455  2C58               	goto	u1585
   759  0456  3005               	movlw	5
   760  0457  022F               	subwf	??_main+2,w
   761  0458                     u1585:	
   762  0458  1C03               	skipc
   763  0459  2BDA               	goto	l1207
   764  045A  1283               	bcf	3,5	;RP0=0, select bank0
   765  045B  1303               	bcf	3,6	;RP1=0, select bank0
   766  045C  0831               	movf	_hh,w
   767  045D  00AD               	movwf	??_main
   768  045E  01AE               	clrf	??_main+1
   769  045F  082D               	movf	??_main,w
   770  0460  00F0               	movwf	___wmul@multiplier
   771  0461  082E               	movf	??_main+1,w
   772  0462  00F1               	movwf	___wmul@multiplier+1
   773  0463  300A               	movlw	10
   774  0464  00F2               	movwf	___wmul@multiplicand
   775  0465  3000               	movlw	0
   776  0466  00F3               	movwf	___wmul@multiplicand+1
   777  0467  2385               	fcall	___wmul
   778  0468  1283               	bcf	3,5	;RP0=0, select bank0
   779  0469  1303               	bcf	3,6	;RP1=0, select bank0
   780  046A  0837               	movf	_hl,w
   781  046B  0770               	addwf	?___wmul,w
   782  046C  00AF               	movwf	??_main+2
   783  046D  0871               	movf	?___wmul+1,w
   784  046E  1803               	skipnc
   785  046F  0A71               	incf	?___wmul+1,w
   786  0470  00B0               	movwf	??_main+3
   787  0471  0830               	movf	??_main+3,w
   788  0472  3A80               	xorlw	128
   789  0473  00FF               	movwf	127
   790  0474  3080               	movlw	128
   791  0475  027F               	subwf	127,w
   792  0476  1D03               	skipz
   793  0477  2C7A               	goto	u1595
   794  0478  3012               	movlw	18
   795  0479  022F               	subwf	??_main+2,w
   796  047A                     u1595:	
   797  047A  1803               	skipnc
   798  047B  2BDA               	goto	l1207
   799                           
   800                           ;main.c: 87: MoistureCheck();
   801  047C  247E               	fcall	_MoistureCheck
   802  047D  2BDA               	goto	l1207
   803  047E                     __end_of_main:	
   804                           
   805                           	psect	text1
   806  047E                     __ptext1:	
   807 ;; *************** function _MoistureCheck *****************
   808 ;; Defined at:
   809 ;;		line 97 in file "main.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  r               1   11[BANK0 ] unsigned char 
   814 ;;  l               1   10[BANK0 ] unsigned char 
   815 ;;  f               1    9[BANK0 ] unsigned char 
   816 ;;  t               1   12[BANK0 ] unsigned char 
   817 ;;  q               1    8[BANK0 ] unsigned char 
   818 ;;  o               1    7[BANK0 ] unsigned char 
   819 ;;  m               1    6[BANK0 ] unsigned char 
   820 ;;  k               1    5[BANK0 ] unsigned char 
   821 ;;  i               1    4[BANK0 ] unsigned char 
   822 ;;  g               1    3[BANK0 ] unsigned char 
   823 ;;  e               1    2[BANK0 ] unsigned char 
   824 ;;  c               1    1[BANK0 ] unsigned char 
   825 ;;  a               1    0[BANK0 ] unsigned char 
   826 ;; Return value:  Size  Location     Type
   827 ;;		None               void
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1
   835 ;;      Params:         0       0       0
   836 ;;      Locals:         0      13       0
   837 ;;      Temps:          4       0       0
   838 ;;      Totals:         4      13       0
   839 ;;Total ram usage:       17 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    1
   842 ;; This function calls:
   843 ;;		_ADCInit
   844 ;;		_ADCRead
   845 ;;		_Median
   846 ;;		___wmul
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _MoistureCheck
   854  047E                     _MoistureCheck:	
   855                           
   856                           ;main.c: 108: ADCInit();
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _MoistureCheck: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   860  047E  2331               	fcall	_ADCInit
   861                           
   862                           ;main.c: 114: unsigned char a, c, e, g, i, k, m, o, q, t;
   863                           ;main.c: 120: if (mh * 10 + ml >= 0 && mh * 10 + ml < 1) {
   864  047F  1283               	bcf	3,5	;RP0=0, select bank0
   865  0480  1303               	bcf	3,6	;RP1=0, select bank0
   866  0481  0832               	movf	_mh,w
   867  0482  00F7               	movwf	??_MoistureCheck
   868  0483  01F8               	clrf	??_MoistureCheck+1
   869  0484  0877               	movf	??_MoistureCheck,w
   870  0485  00F0               	movwf	___wmul@multiplier
   871  0486  0878               	movf	??_MoistureCheck+1,w
   872  0487  00F1               	movwf	___wmul@multiplier+1
   873  0488  300A               	movlw	10
   874  0489  00F2               	movwf	___wmul@multiplicand
   875  048A  3000               	movlw	0
   876  048B  00F3               	movwf	___wmul@multiplicand+1
   877  048C  2385               	fcall	___wmul
   878  048D  1283               	bcf	3,5	;RP0=0, select bank0
   879  048E  1303               	bcf	3,6	;RP1=0, select bank0
   880  048F  0833               	movf	_ml,w
   881  0490  0770               	addwf	?___wmul,w
   882  0491  00F9               	movwf	??_MoistureCheck+2
   883  0492  3000               	movlw	0
   884  0493  1803               	skipnc
   885  0494  3001               	movlw	1
   886  0495  0771               	addwf	?___wmul+1,w
   887  0496  00FA               	movwf	??_MoistureCheck+3
   888  0497  1BFA               	btfsc	??_MoistureCheck+3,7
   889  0498  2CBE               	goto	l1095
   890  0499  0832               	movf	_mh,w
   891  049A  00F7               	movwf	??_MoistureCheck
   892  049B  01F8               	clrf	??_MoistureCheck+1
   893  049C  0877               	movf	??_MoistureCheck,w
   894  049D  00F0               	movwf	___wmul@multiplier
   895  049E  0878               	movf	??_MoistureCheck+1,w
   896  049F  00F1               	movwf	___wmul@multiplier+1
   897  04A0  300A               	movlw	10
   898  04A1  00F2               	movwf	___wmul@multiplicand
   899  04A2  3000               	movlw	0
   900  04A3  00F3               	movwf	___wmul@multiplicand+1
   901  04A4  2385               	fcall	___wmul
   902  04A5  1283               	bcf	3,5	;RP0=0, select bank0
   903  04A6  1303               	bcf	3,6	;RP1=0, select bank0
   904  04A7  0833               	movf	_ml,w
   905  04A8  0770               	addwf	?___wmul,w
   906  04A9  00F9               	movwf	??_MoistureCheck+2
   907  04AA  3000               	movlw	0
   908  04AB  1803               	skipnc
   909  04AC  3001               	movlw	1
   910  04AD  0771               	addwf	?___wmul+1,w
   911  04AE  00FA               	movwf	??_MoistureCheck+3
   912  04AF  087A               	movf	??_MoistureCheck+3,w
   913  04B0  3A80               	xorlw	128
   914  04B1  00FF               	movwf	127
   915  04B2  3080               	movlw	128
   916  04B3  027F               	subwf	127,w
   917  04B4  1D03               	skipz
   918  04B5  2CB8               	goto	u1175
   919  04B6  3001               	movlw	1
   920  04B7  0279               	subwf	??_MoistureCheck+2,w
   921  04B8                     u1175:	
   922  04B8  1803               	skipnc
   923  04B9  2CBE               	goto	l1095
   924                           
   925                           ;main.c: 121: RA5 = 1;
   926  04BA  1283               	bcf	3,5	;RP0=0, select bank0
   927  04BB  1303               	bcf	3,6	;RP1=0, select bank0
   928  04BC  1685               	bsf	5,5	;volatile
   929                           
   930                           ;main.c: 122: RB7 = 0;
   931  04BD  1386               	bcf	6,7	;volatile
   932  04BE                     l1095:	
   933                           
   934                           ;main.c: 123: }
   935                           ;main.c: 129: if (mh * 10 + ml >= 1 && mh * 10 + ml < 2) {
   936  04BE  1283               	bcf	3,5	;RP0=0, select bank0
   937  04BF  1303               	bcf	3,6	;RP1=0, select bank0
   938  04C0  0832               	movf	_mh,w
   939  04C1  00F7               	movwf	??_MoistureCheck
   940  04C2  01F8               	clrf	??_MoistureCheck+1
   941  04C3  0877               	movf	??_MoistureCheck,w
   942  04C4  00F0               	movwf	___wmul@multiplier
   943  04C5  0878               	movf	??_MoistureCheck+1,w
   944  04C6  00F1               	movwf	___wmul@multiplier+1
   945  04C7  300A               	movlw	10
   946  04C8  00F2               	movwf	___wmul@multiplicand
   947  04C9  3000               	movlw	0
   948  04CA  00F3               	movwf	___wmul@multiplicand+1
   949  04CB  2385               	fcall	___wmul
   950  04CC  1283               	bcf	3,5	;RP0=0, select bank0
   951  04CD  1303               	bcf	3,6	;RP1=0, select bank0
   952  04CE  0833               	movf	_ml,w
   953  04CF  0770               	addwf	?___wmul,w
   954  04D0  00F9               	movwf	??_MoistureCheck+2
   955  04D1  3000               	movlw	0
   956  04D2  1803               	skipnc
   957  04D3  3001               	movlw	1
   958  04D4  0771               	addwf	?___wmul+1,w
   959  04D5  00FA               	movwf	??_MoistureCheck+3
   960  04D6  087A               	movf	??_MoistureCheck+3,w
   961  04D7  3A80               	xorlw	128
   962  04D8  00FF               	movwf	127
   963  04D9  3080               	movlw	128
   964  04DA  027F               	subwf	127,w
   965  04DB  1D03               	skipz
   966  04DC  2CDF               	goto	u1185
   967  04DD  3001               	movlw	1
   968  04DE  0279               	subwf	??_MoistureCheck+2,w
   969  04DF                     u1185:	
   970  04DF  1C03               	skipc
   971  04E0  2D6D               	goto	l1139
   972  04E1  1283               	bcf	3,5	;RP0=0, select bank0
   973  04E2  1303               	bcf	3,6	;RP1=0, select bank0
   974  04E3  0832               	movf	_mh,w
   975  04E4  00F7               	movwf	??_MoistureCheck
   976  04E5  01F8               	clrf	??_MoistureCheck+1
   977  04E6  0877               	movf	??_MoistureCheck,w
   978  04E7  00F0               	movwf	___wmul@multiplier
   979  04E8  0878               	movf	??_MoistureCheck+1,w
   980  04E9  00F1               	movwf	___wmul@multiplier+1
   981  04EA  300A               	movlw	10
   982  04EB  00F2               	movwf	___wmul@multiplicand
   983  04EC  3000               	movlw	0
   984  04ED  00F3               	movwf	___wmul@multiplicand+1
   985  04EE  2385               	fcall	___wmul
   986  04EF  1283               	bcf	3,5	;RP0=0, select bank0
   987  04F0  1303               	bcf	3,6	;RP1=0, select bank0
   988  04F1  0833               	movf	_ml,w
   989  04F2  0770               	addwf	?___wmul,w
   990  04F3  00F9               	movwf	??_MoistureCheck+2
   991  04F4  3000               	movlw	0
   992  04F5  1803               	skipnc
   993  04F6  3001               	movlw	1
   994  04F7  0771               	addwf	?___wmul+1,w
   995  04F8  00FA               	movwf	??_MoistureCheck+3
   996  04F9  087A               	movf	??_MoistureCheck+3,w
   997  04FA  3A80               	xorlw	128
   998  04FB  00FF               	movwf	127
   999  04FC  3080               	movlw	128
  1000  04FD  027F               	subwf	127,w
  1001  04FE  1D03               	skipz
  1002  04FF  2D02               	goto	u1195
  1003  0500  3002               	movlw	2
  1004  0501  0279               	subwf	??_MoistureCheck+2,w
  1005  0502                     u1195:	
  1006  0502  1803               	skipnc
  1007  0503  2D6D               	goto	l1139
  1008                           
  1009                           ;main.c: 130: ++t;
  1010  0504  3001               	movlw	1
  1011  0505  00F7               	movwf	??_MoistureCheck
  1012  0506  0877               	movf	??_MoistureCheck,w
  1013  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0509  07AC               	addwf	MoistureCheck@t,f
  1016                           
  1017                           ;main.c: 132: if (t >= 9) {
  1018  050A  3009               	movlw	9
  1019  050B  022C               	subwf	MoistureCheck@t,w
  1020  050C  1C03               	skipc
  1021  050D  2D16               	goto	l1107
  1022                           
  1023                           ;main.c: 133: a = ADCRead(2);
  1024  050E  3002               	movlw	2
  1025  050F  2347               	fcall	_ADCRead
  1026  0510  00F7               	movwf	??_MoistureCheck
  1027  0511  0877               	movf	??_MoistureCheck,w
  1028  0512  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0513  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0514  00A0               	movwf	MoistureCheck@a
  1031                           
  1032                           ;main.c: 134: t = 0;
  1033  0515  01AC               	clrf	MoistureCheck@t
  1034  0516                     l1107:	
  1035                           
  1036                           ;main.c: 135: }
  1037                           ;main.c: 137: if (t == 8) {
  1038  0516  3008               	movlw	8
  1039  0517  062C               	xorwf	MoistureCheck@t,w
  1040  0518  1D03               	btfss	3,2
  1041  0519  2D21               	goto	l1111
  1042                           
  1043                           ;main.c: 138: c = ADCRead(3);
  1044  051A  3003               	movlw	3
  1045  051B  2347               	fcall	_ADCRead
  1046  051C  00F7               	movwf	??_MoistureCheck
  1047  051D  0877               	movf	??_MoistureCheck,w
  1048  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1049  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1050  0520  00A1               	movwf	MoistureCheck@c
  1051  0521                     l1111:	
  1052                           
  1053                           ;main.c: 139: }
  1054                           ;main.c: 141: if (t == 7) {
  1055  0521  3007               	movlw	7
  1056  0522  062C               	xorwf	MoistureCheck@t,w
  1057  0523  1D03               	btfss	3,2
  1058  0524  2D2C               	goto	l1115
  1059                           
  1060                           ;main.c: 142: e = ADCRead(4);
  1061  0525  3004               	movlw	4
  1062  0526  2347               	fcall	_ADCRead
  1063  0527  00F7               	movwf	??_MoistureCheck
  1064  0528  0877               	movf	??_MoistureCheck,w
  1065  0529  1283               	bcf	3,5	;RP0=0, select bank0
  1066  052A  1303               	bcf	3,6	;RP1=0, select bank0
  1067  052B  00A2               	movwf	MoistureCheck@e
  1068  052C                     l1115:	
  1069                           
  1070                           ;main.c: 143: }
  1071                           ;main.c: 145: if (t == 6) {
  1072  052C  3006               	movlw	6
  1073  052D  062C               	xorwf	MoistureCheck@t,w
  1074  052E  1D03               	btfss	3,2
  1075  052F  2D37               	goto	l1119
  1076                           
  1077                           ;main.c: 146: g = ADCRead(5);
  1078  0530  3005               	movlw	5
  1079  0531  2347               	fcall	_ADCRead
  1080  0532  00F7               	movwf	??_MoistureCheck
  1081  0533  0877               	movf	??_MoistureCheck,w
  1082  0534  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0535  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0536  00A3               	movwf	MoistureCheck@g
  1085  0537                     l1119:	
  1086                           
  1087                           ;main.c: 147: }
  1088                           ;main.c: 149: if (t == 5) {
  1089  0537  3005               	movlw	5
  1090  0538  062C               	xorwf	MoistureCheck@t,w
  1091  0539  1D03               	btfss	3,2
  1092  053A  2D42               	goto	l1123
  1093                           
  1094                           ;main.c: 150: i = ADCRead(7);
  1095  053B  3007               	movlw	7
  1096  053C  2347               	fcall	_ADCRead
  1097  053D  00F7               	movwf	??_MoistureCheck
  1098  053E  0877               	movf	??_MoistureCheck,w
  1099  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0541  00A4               	movwf	MoistureCheck@i
  1102  0542                     l1123:	
  1103                           
  1104                           ;main.c: 151: }
  1105                           ;main.c: 153: if (t == 4) {
  1106  0542  3004               	movlw	4
  1107  0543  062C               	xorwf	MoistureCheck@t,w
  1108  0544  1D03               	btfss	3,2
  1109  0545  2D4D               	goto	l1127
  1110                           
  1111                           ;main.c: 154: k = ADCRead(8);
  1112  0546  3008               	movlw	8
  1113  0547  2347               	fcall	_ADCRead
  1114  0548  00F7               	movwf	??_MoistureCheck
  1115  0549  0877               	movf	??_MoistureCheck,w
  1116  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1117  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1118  054C  00A5               	movwf	MoistureCheck@k
  1119  054D                     l1127:	
  1120                           
  1121                           ;main.c: 155: }
  1122                           ;main.c: 157: if (t == 3) {
  1123  054D  3003               	movlw	3
  1124  054E  062C               	xorwf	MoistureCheck@t,w
  1125  054F  1D03               	btfss	3,2
  1126  0550  2D58               	goto	l1131
  1127                           
  1128                           ;main.c: 158: m = ADCRead(9);
  1129  0551  3009               	movlw	9
  1130  0552  2347               	fcall	_ADCRead
  1131  0553  00F7               	movwf	??_MoistureCheck
  1132  0554  0877               	movf	??_MoistureCheck,w
  1133  0555  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0556  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0557  00A6               	movwf	MoistureCheck@m
  1136  0558                     l1131:	
  1137                           
  1138                           ;main.c: 159: }
  1139                           ;main.c: 161: if (t == 2) {
  1140  0558  3002               	movlw	2
  1141  0559  062C               	xorwf	MoistureCheck@t,w
  1142  055A  1D03               	btfss	3,2
  1143  055B  2D63               	goto	l1135
  1144                           
  1145                           ;main.c: 162: o = ADCRead(10);
  1146  055C  300A               	movlw	10
  1147  055D  2347               	fcall	_ADCRead
  1148  055E  00F7               	movwf	??_MoistureCheck
  1149  055F  0877               	movf	??_MoistureCheck,w
  1150  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0562  00A7               	movwf	MoistureCheck@o
  1153  0563                     l1135:	
  1154                           
  1155                           ;main.c: 163: }
  1156                           ;main.c: 165: if (t == 1) {
  1157  0563  032C               	decf	MoistureCheck@t,w
  1158  0564  1D03               	btfss	3,2
  1159  0565  2D6D               	goto	l1139
  1160                           
  1161                           ;main.c: 166: q = ADCRead(11);
  1162  0566  300B               	movlw	11
  1163  0567  2347               	fcall	_ADCRead
  1164  0568  00F7               	movwf	??_MoistureCheck
  1165  0569  0877               	movf	??_MoistureCheck,w
  1166  056A  1283               	bcf	3,5	;RP0=0, select bank0
  1167  056B  1303               	bcf	3,6	;RP1=0, select bank0
  1168  056C  00A8               	movwf	MoistureCheck@q
  1169  056D                     l1139:	
  1170                           
  1171                           ;main.c: 167: }
  1172                           ;main.c: 168: }
  1173                           ;main.c: 174: if (mh * 10 + ml >= 2 && mh * 10 + ml < 4) {
  1174  056D  1283               	bcf	3,5	;RP0=0, select bank0
  1175  056E  1303               	bcf	3,6	;RP1=0, select bank0
  1176  056F  0832               	movf	_mh,w
  1177  0570  00F7               	movwf	??_MoistureCheck
  1178  0571  01F8               	clrf	??_MoistureCheck+1
  1179  0572  0877               	movf	??_MoistureCheck,w
  1180  0573  00F0               	movwf	___wmul@multiplier
  1181  0574  0878               	movf	??_MoistureCheck+1,w
  1182  0575  00F1               	movwf	___wmul@multiplier+1
  1183  0576  300A               	movlw	10
  1184  0577  00F2               	movwf	___wmul@multiplicand
  1185  0578  3000               	movlw	0
  1186  0579  00F3               	movwf	___wmul@multiplicand+1
  1187  057A  2385               	fcall	___wmul
  1188  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1189  057C  1303               	bcf	3,6	;RP1=0, select bank0
  1190  057D  0833               	movf	_ml,w
  1191  057E  0770               	addwf	?___wmul,w
  1192  057F  00F9               	movwf	??_MoistureCheck+2
  1193  0580  3000               	movlw	0
  1194  0581  1803               	skipnc
  1195  0582  3001               	movlw	1
  1196  0583  0771               	addwf	?___wmul+1,w
  1197  0584  00FA               	movwf	??_MoistureCheck+3
  1198  0585  087A               	movf	??_MoistureCheck+3,w
  1199  0586  3A80               	xorlw	128
  1200  0587  00FF               	movwf	127
  1201  0588  3080               	movlw	128
  1202  0589  027F               	subwf	127,w
  1203  058A  1D03               	skipz
  1204  058B  2D8E               	goto	u1295
  1205  058C  3002               	movlw	2
  1206  058D  0279               	subwf	??_MoistureCheck+2,w
  1207  058E                     u1295:	
  1208  058E  1C03               	skipc
  1209  058F  2DB7               	goto	l1145
  1210  0590  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0591  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0592  0832               	movf	_mh,w
  1213  0593  00F7               	movwf	??_MoistureCheck
  1214  0594  01F8               	clrf	??_MoistureCheck+1
  1215  0595  0877               	movf	??_MoistureCheck,w
  1216  0596  00F0               	movwf	___wmul@multiplier
  1217  0597  0878               	movf	??_MoistureCheck+1,w
  1218  0598  00F1               	movwf	___wmul@multiplier+1
  1219  0599  300A               	movlw	10
  1220  059A  00F2               	movwf	___wmul@multiplicand
  1221  059B  3000               	movlw	0
  1222  059C  00F3               	movwf	___wmul@multiplicand+1
  1223  059D  2385               	fcall	___wmul
  1224  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1225  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1226  05A0  0833               	movf	_ml,w
  1227  05A1  0770               	addwf	?___wmul,w
  1228  05A2  00F9               	movwf	??_MoistureCheck+2
  1229  05A3  3000               	movlw	0
  1230  05A4  1803               	skipnc
  1231  05A5  3001               	movlw	1
  1232  05A6  0771               	addwf	?___wmul+1,w
  1233  05A7  00FA               	movwf	??_MoistureCheck+3
  1234  05A8  087A               	movf	??_MoistureCheck+3,w
  1235  05A9  3A80               	xorlw	128
  1236  05AA  00FF               	movwf	127
  1237  05AB  3080               	movlw	128
  1238  05AC  027F               	subwf	127,w
  1239  05AD  1D03               	skipz
  1240  05AE  2DB1               	goto	u1305
  1241  05AF  3004               	movlw	4
  1242  05B0  0279               	subwf	??_MoistureCheck+2,w
  1243  05B1                     u1305:	
  1244  05B1  1803               	skipnc
  1245  05B2  2DB7               	goto	l1145
  1246                           
  1247                           ;main.c: 175: RA5 = 0;
  1248  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1249  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1250  05B5  1285               	bcf	5,5	;volatile
  1251                           
  1252                           ;main.c: 176: RB7 = 1;
  1253  05B6  1786               	bsf	6,7	;volatile
  1254  05B7                     l1145:	
  1255                           
  1256                           ;main.c: 177: }
  1257                           ;main.c: 183: if (mh * 10 + ml >= 4 && mh * 10 + ml < 5) {
  1258  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1259  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1260  05B9  0832               	movf	_mh,w
  1261  05BA  00F7               	movwf	??_MoistureCheck
  1262  05BB  01F8               	clrf	??_MoistureCheck+1
  1263  05BC  0877               	movf	??_MoistureCheck,w
  1264  05BD  00F0               	movwf	___wmul@multiplier
  1265  05BE  0878               	movf	??_MoistureCheck+1,w
  1266  05BF  00F1               	movwf	___wmul@multiplier+1
  1267  05C0  300A               	movlw	10
  1268  05C1  00F2               	movwf	___wmul@multiplicand
  1269  05C2  3000               	movlw	0
  1270  05C3  00F3               	movwf	___wmul@multiplicand+1
  1271  05C4  2385               	fcall	___wmul
  1272  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1273  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1274  05C7  0833               	movf	_ml,w
  1275  05C8  0770               	addwf	?___wmul,w
  1276  05C9  00F9               	movwf	??_MoistureCheck+2
  1277  05CA  3000               	movlw	0
  1278  05CB  1803               	skipnc
  1279  05CC  3001               	movlw	1
  1280  05CD  0771               	addwf	?___wmul+1,w
  1281  05CE  00FA               	movwf	??_MoistureCheck+3
  1282  05CF  087A               	movf	??_MoistureCheck+3,w
  1283  05D0  3A80               	xorlw	128
  1284  05D1  00FF               	movwf	127
  1285  05D2  3080               	movlw	128
  1286  05D3  027F               	subwf	127,w
  1287  05D4  1D03               	skipz
  1288  05D5  2DD8               	goto	u1315
  1289  05D6  3004               	movlw	4
  1290  05D7  0279               	subwf	??_MoistureCheck+2,w
  1291  05D8                     u1315:	
  1292  05D8  1C03               	skipc
  1293  05D9  2E01               	goto	l1151
  1294  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1295  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1296  05DC  0832               	movf	_mh,w
  1297  05DD  00F7               	movwf	??_MoistureCheck
  1298  05DE  01F8               	clrf	??_MoistureCheck+1
  1299  05DF  0877               	movf	??_MoistureCheck,w
  1300  05E0  00F0               	movwf	___wmul@multiplier
  1301  05E1  0878               	movf	??_MoistureCheck+1,w
  1302  05E2  00F1               	movwf	___wmul@multiplier+1
  1303  05E3  300A               	movlw	10
  1304  05E4  00F2               	movwf	___wmul@multiplicand
  1305  05E5  3000               	movlw	0
  1306  05E6  00F3               	movwf	___wmul@multiplicand+1
  1307  05E7  2385               	fcall	___wmul
  1308  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1309  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1310  05EA  0833               	movf	_ml,w
  1311  05EB  0770               	addwf	?___wmul,w
  1312  05EC  00F9               	movwf	??_MoistureCheck+2
  1313  05ED  3000               	movlw	0
  1314  05EE  1803               	skipnc
  1315  05EF  3001               	movlw	1
  1316  05F0  0771               	addwf	?___wmul+1,w
  1317  05F1  00FA               	movwf	??_MoistureCheck+3
  1318  05F2  087A               	movf	??_MoistureCheck+3,w
  1319  05F3  3A80               	xorlw	128
  1320  05F4  00FF               	movwf	127
  1321  05F5  3080               	movlw	128
  1322  05F6  027F               	subwf	127,w
  1323  05F7  1D03               	skipz
  1324  05F8  2DFB               	goto	u1325
  1325  05F9  3005               	movlw	5
  1326  05FA  0279               	subwf	??_MoistureCheck+2,w
  1327  05FB                     u1325:	
  1328  05FB  1803               	skipnc
  1329  05FC  2E01               	goto	l1151
  1330                           
  1331                           ;main.c: 184: RA5 = 0;
  1332  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1333  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  1334  05FF  1285               	bcf	5,5	;volatile
  1335                           
  1336                           ;main.c: 185: RB7 = 0;
  1337  0600  1386               	bcf	6,7	;volatile
  1338  0601                     l1151:	
  1339                           
  1340                           ;main.c: 186: }
  1341                           ;main.c: 192: if (mh * 10 + ml >= 5 && mh * 10 + ml < 6) {
  1342  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0602  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0603  0832               	movf	_mh,w
  1345  0604  00F7               	movwf	??_MoistureCheck
  1346  0605  01F8               	clrf	??_MoistureCheck+1
  1347  0606  0877               	movf	??_MoistureCheck,w
  1348  0607  00F0               	movwf	___wmul@multiplier
  1349  0608  0878               	movf	??_MoistureCheck+1,w
  1350  0609  00F1               	movwf	___wmul@multiplier+1
  1351  060A  300A               	movlw	10
  1352  060B  00F2               	movwf	___wmul@multiplicand
  1353  060C  3000               	movlw	0
  1354  060D  00F3               	movwf	___wmul@multiplicand+1
  1355  060E  2385               	fcall	___wmul
  1356  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0611  0833               	movf	_ml,w
  1359  0612  0770               	addwf	?___wmul,w
  1360  0613  00F9               	movwf	??_MoistureCheck+2
  1361  0614  3000               	movlw	0
  1362  0615  1803               	skipnc
  1363  0616  3001               	movlw	1
  1364  0617  0771               	addwf	?___wmul+1,w
  1365  0618  00FA               	movwf	??_MoistureCheck+3
  1366  0619  087A               	movf	??_MoistureCheck+3,w
  1367  061A  3A80               	xorlw	128
  1368  061B  00FF               	movwf	127
  1369  061C  3080               	movlw	128
  1370  061D  027F               	subwf	127,w
  1371  061E  1D03               	skipz
  1372  061F  2E22               	goto	u1335
  1373  0620  3005               	movlw	5
  1374  0621  0279               	subwf	??_MoistureCheck+2,w
  1375  0622                     u1335:	
  1376  0622  1C03               	skipc
  1377  0623  2E5F               	goto	l1161
  1378  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0626  0832               	movf	_mh,w
  1381  0627  00F7               	movwf	??_MoistureCheck
  1382  0628  01F8               	clrf	??_MoistureCheck+1
  1383  0629  0877               	movf	??_MoistureCheck,w
  1384  062A  00F0               	movwf	___wmul@multiplier
  1385  062B  0878               	movf	??_MoistureCheck+1,w
  1386  062C  00F1               	movwf	___wmul@multiplier+1
  1387  062D  300A               	movlw	10
  1388  062E  00F2               	movwf	___wmul@multiplicand
  1389  062F  3000               	movlw	0
  1390  0630  00F3               	movwf	___wmul@multiplicand+1
  1391  0631  2385               	fcall	___wmul
  1392  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0633  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0634  0833               	movf	_ml,w
  1395  0635  0770               	addwf	?___wmul,w
  1396  0636  00F9               	movwf	??_MoistureCheck+2
  1397  0637  3000               	movlw	0
  1398  0638  1803               	skipnc
  1399  0639  3001               	movlw	1
  1400  063A  0771               	addwf	?___wmul+1,w
  1401  063B  00FA               	movwf	??_MoistureCheck+3
  1402  063C  087A               	movf	??_MoistureCheck+3,w
  1403  063D  3A80               	xorlw	128
  1404  063E  00FF               	movwf	127
  1405  063F  3080               	movlw	128
  1406  0640  027F               	subwf	127,w
  1407  0641  1D03               	skipz
  1408  0642  2E45               	goto	u1345
  1409  0643  3006               	movlw	6
  1410  0644  0279               	subwf	??_MoistureCheck+2,w
  1411  0645                     u1345:	
  1412  0645  1803               	skipnc
  1413  0646  2E5F               	goto	l1161
  1414                           
  1415                           ;main.c: 193: unsigned char f = Median(a, c, e);
  1416  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0649  0821               	movf	MoistureCheck@c,w
  1419  064A  00F7               	movwf	??_MoistureCheck
  1420  064B  0877               	movf	??_MoistureCheck,w
  1421  064C  00F0               	movwf	Median@c
  1422  064D  0822               	movf	MoistureCheck@e,w
  1423  064E  00F8               	movwf	??_MoistureCheck+1
  1424  064F  0878               	movf	??_MoistureCheck+1,w
  1425  0650  00F1               	movwf	Median@e
  1426  0651  0820               	movf	MoistureCheck@a,w
  1427  0652  2364               	fcall	_Median
  1428  0653  00F9               	movwf	??_MoistureCheck+2
  1429  0654  0879               	movf	??_MoistureCheck+2,w
  1430  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0656  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0657  00A9               	movwf	MoistureCheck@f
  1433                           
  1434                           ;main.c: 195: if (f < 127) {
  1435  0658  307F               	movlw	127
  1436  0659  0229               	subwf	MoistureCheck@f,w
  1437  065A  1803               	skipnc
  1438  065B  2E5E               	goto	l74
  1439                           
  1440                           ;main.c: 196: RC4 = 0;
  1441  065C  1207               	bcf	7,4	;volatile
  1442                           
  1443                           ;main.c: 197: } else {
  1444  065D  2E5F               	goto	l1161
  1445  065E                     l74:	
  1446                           
  1447                           ;main.c: 198: RC4 = 1;
  1448  065E  1607               	bsf	7,4	;volatile
  1449  065F                     l1161:	
  1450                           
  1451                           ;main.c: 199: }
  1452                           ;main.c: 200: }
  1453                           ;main.c: 206: if (mh * 10 + ml >= 6 && mh * 10 + ml < 20) {
  1454  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0661  0832               	movf	_mh,w
  1457  0662  00F7               	movwf	??_MoistureCheck
  1458  0663  01F8               	clrf	??_MoistureCheck+1
  1459  0664  0877               	movf	??_MoistureCheck,w
  1460  0665  00F0               	movwf	___wmul@multiplier
  1461  0666  0878               	movf	??_MoistureCheck+1,w
  1462  0667  00F1               	movwf	___wmul@multiplier+1
  1463  0668  300A               	movlw	10
  1464  0669  00F2               	movwf	___wmul@multiplicand
  1465  066A  3000               	movlw	0
  1466  066B  00F3               	movwf	___wmul@multiplicand+1
  1467  066C  2385               	fcall	___wmul
  1468  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1469  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1470  066F  0833               	movf	_ml,w
  1471  0670  0770               	addwf	?___wmul,w
  1472  0671  00F9               	movwf	??_MoistureCheck+2
  1473  0672  3000               	movlw	0
  1474  0673  1803               	skipnc
  1475  0674  3001               	movlw	1
  1476  0675  0771               	addwf	?___wmul+1,w
  1477  0676  00FA               	movwf	??_MoistureCheck+3
  1478  0677  087A               	movf	??_MoistureCheck+3,w
  1479  0678  3A80               	xorlw	128
  1480  0679  00FF               	movwf	127
  1481  067A  3080               	movlw	128
  1482  067B  027F               	subwf	127,w
  1483  067C  1D03               	skipz
  1484  067D  2E80               	goto	u1365
  1485  067E  3006               	movlw	6
  1486  067F  0279               	subwf	??_MoistureCheck+2,w
  1487  0680                     u1365:	
  1488  0680  1C03               	skipc
  1489  0681  2EA8               	goto	l1167
  1490  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0684  0832               	movf	_mh,w
  1493  0685  00F7               	movwf	??_MoistureCheck
  1494  0686  01F8               	clrf	??_MoistureCheck+1
  1495  0687  0877               	movf	??_MoistureCheck,w
  1496  0688  00F0               	movwf	___wmul@multiplier
  1497  0689  0878               	movf	??_MoistureCheck+1,w
  1498  068A  00F1               	movwf	___wmul@multiplier+1
  1499  068B  300A               	movlw	10
  1500  068C  00F2               	movwf	___wmul@multiplicand
  1501  068D  3000               	movlw	0
  1502  068E  00F3               	movwf	___wmul@multiplicand+1
  1503  068F  2385               	fcall	___wmul
  1504  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0692  0833               	movf	_ml,w
  1507  0693  0770               	addwf	?___wmul,w
  1508  0694  00F9               	movwf	??_MoistureCheck+2
  1509  0695  3000               	movlw	0
  1510  0696  1803               	skipnc
  1511  0697  3001               	movlw	1
  1512  0698  0771               	addwf	?___wmul+1,w
  1513  0699  00FA               	movwf	??_MoistureCheck+3
  1514  069A  087A               	movf	??_MoistureCheck+3,w
  1515  069B  3A80               	xorlw	128
  1516  069C  00FF               	movwf	127
  1517  069D  3080               	movlw	128
  1518  069E  027F               	subwf	127,w
  1519  069F  1D03               	skipz
  1520  06A0  2EA3               	goto	u1375
  1521  06A1  3014               	movlw	20
  1522  06A2  0279               	subwf	??_MoistureCheck+2,w
  1523  06A3                     u1375:	
  1524  06A3  1803               	skipnc
  1525  06A4  2EA8               	goto	l1167
  1526                           
  1527                           ;main.c: 207: RC4 = 1;
  1528  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1529  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1530  06A7  1607               	bsf	7,4	;volatile
  1531  06A8                     l1167:	
  1532                           
  1533                           ;main.c: 208: }
  1534                           ;main.c: 214: if (mh * 10 + ml >= 20 && mh * 10 + ml < 21) {
  1535  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1536  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1537  06AA  0832               	movf	_mh,w
  1538  06AB  00F7               	movwf	??_MoistureCheck
  1539  06AC  01F8               	clrf	??_MoistureCheck+1
  1540  06AD  0877               	movf	??_MoistureCheck,w
  1541  06AE  00F0               	movwf	___wmul@multiplier
  1542  06AF  0878               	movf	??_MoistureCheck+1,w
  1543  06B0  00F1               	movwf	___wmul@multiplier+1
  1544  06B1  300A               	movlw	10
  1545  06B2  00F2               	movwf	___wmul@multiplicand
  1546  06B3  3000               	movlw	0
  1547  06B4  00F3               	movwf	___wmul@multiplicand+1
  1548  06B5  2385               	fcall	___wmul
  1549  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1550  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1551  06B8  0833               	movf	_ml,w
  1552  06B9  0770               	addwf	?___wmul,w
  1553  06BA  00F9               	movwf	??_MoistureCheck+2
  1554  06BB  3000               	movlw	0
  1555  06BC  1803               	skipnc
  1556  06BD  3001               	movlw	1
  1557  06BE  0771               	addwf	?___wmul+1,w
  1558  06BF  00FA               	movwf	??_MoistureCheck+3
  1559  06C0  087A               	movf	??_MoistureCheck+3,w
  1560  06C1  3A80               	xorlw	128
  1561  06C2  00FF               	movwf	127
  1562  06C3  3080               	movlw	128
  1563  06C4  027F               	subwf	127,w
  1564  06C5  1D03               	skipz
  1565  06C6  2EC9               	goto	u1385
  1566  06C7  3014               	movlw	20
  1567  06C8  0279               	subwf	??_MoistureCheck+2,w
  1568  06C9                     u1385:	
  1569  06C9  1C03               	skipc
  1570  06CA  2F06               	goto	l1177
  1571  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1572  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1573  06CD  0832               	movf	_mh,w
  1574  06CE  00F7               	movwf	??_MoistureCheck
  1575  06CF  01F8               	clrf	??_MoistureCheck+1
  1576  06D0  0877               	movf	??_MoistureCheck,w
  1577  06D1  00F0               	movwf	___wmul@multiplier
  1578  06D2  0878               	movf	??_MoistureCheck+1,w
  1579  06D3  00F1               	movwf	___wmul@multiplier+1
  1580  06D4  300A               	movlw	10
  1581  06D5  00F2               	movwf	___wmul@multiplicand
  1582  06D6  3000               	movlw	0
  1583  06D7  00F3               	movwf	___wmul@multiplicand+1
  1584  06D8  2385               	fcall	___wmul
  1585  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1586  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1587  06DB  0833               	movf	_ml,w
  1588  06DC  0770               	addwf	?___wmul,w
  1589  06DD  00F9               	movwf	??_MoistureCheck+2
  1590  06DE  3000               	movlw	0
  1591  06DF  1803               	skipnc
  1592  06E0  3001               	movlw	1
  1593  06E1  0771               	addwf	?___wmul+1,w
  1594  06E2  00FA               	movwf	??_MoistureCheck+3
  1595  06E3  087A               	movf	??_MoistureCheck+3,w
  1596  06E4  3A80               	xorlw	128
  1597  06E5  00FF               	movwf	127
  1598  06E6  3080               	movlw	128
  1599  06E7  027F               	subwf	127,w
  1600  06E8  1D03               	skipz
  1601  06E9  2EEC               	goto	u1395
  1602  06EA  3015               	movlw	21
  1603  06EB  0279               	subwf	??_MoistureCheck+2,w
  1604  06EC                     u1395:	
  1605  06EC  1803               	skipnc
  1606  06ED  2F06               	goto	l1177
  1607                           
  1608                           ;main.c: 215: unsigned char l = Median(g, i, k);
  1609  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1610  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1611  06F0  0824               	movf	MoistureCheck@i,w
  1612  06F1  00F7               	movwf	??_MoistureCheck
  1613  06F2  0877               	movf	??_MoistureCheck,w
  1614  06F3  00F0               	movwf	Median@c
  1615  06F4  0825               	movf	MoistureCheck@k,w
  1616  06F5  00F8               	movwf	??_MoistureCheck+1
  1617  06F6  0878               	movf	??_MoistureCheck+1,w
  1618  06F7  00F1               	movwf	Median@e
  1619  06F8  0823               	movf	MoistureCheck@g,w
  1620  06F9  2364               	fcall	_Median
  1621  06FA  00F9               	movwf	??_MoistureCheck+2
  1622  06FB  0879               	movf	??_MoistureCheck+2,w
  1623  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1624  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1625  06FE  00AA               	movwf	MoistureCheck@l
  1626                           
  1627                           ;main.c: 217: if (l < 127) {
  1628  06FF  307F               	movlw	127
  1629  0700  022A               	subwf	MoistureCheck@l,w
  1630  0701  1803               	skipnc
  1631  0702  2F05               	goto	l78
  1632                           
  1633                           ;main.c: 218: RB6 = 0;
  1634  0703  1306               	bcf	6,6	;volatile
  1635                           
  1636                           ;main.c: 219: } else {
  1637  0704  2F06               	goto	l1177
  1638  0705                     l78:	
  1639                           
  1640                           ;main.c: 220: RB6 = 1;
  1641  0705  1706               	bsf	6,6	;volatile
  1642  0706                     l1177:	
  1643                           
  1644                           ;main.c: 221: }
  1645                           ;main.c: 222: }
  1646                           ;main.c: 228: if (mh * 10 + ml >= 21 && mh * 10 + ml < 35) {
  1647  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1648  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1649  0708  0832               	movf	_mh,w
  1650  0709  00F7               	movwf	??_MoistureCheck
  1651  070A  01F8               	clrf	??_MoistureCheck+1
  1652  070B  0877               	movf	??_MoistureCheck,w
  1653  070C  00F0               	movwf	___wmul@multiplier
  1654  070D  0878               	movf	??_MoistureCheck+1,w
  1655  070E  00F1               	movwf	___wmul@multiplier+1
  1656  070F  300A               	movlw	10
  1657  0710  00F2               	movwf	___wmul@multiplicand
  1658  0711  3000               	movlw	0
  1659  0712  00F3               	movwf	___wmul@multiplicand+1
  1660  0713  2385               	fcall	___wmul
  1661  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0716  0833               	movf	_ml,w
  1664  0717  0770               	addwf	?___wmul,w
  1665  0718  00F9               	movwf	??_MoistureCheck+2
  1666  0719  3000               	movlw	0
  1667  071A  1803               	skipnc
  1668  071B  3001               	movlw	1
  1669  071C  0771               	addwf	?___wmul+1,w
  1670  071D  00FA               	movwf	??_MoistureCheck+3
  1671  071E  087A               	movf	??_MoistureCheck+3,w
  1672  071F  3A80               	xorlw	128
  1673  0720  00FF               	movwf	127
  1674  0721  3080               	movlw	128
  1675  0722  027F               	subwf	127,w
  1676  0723  1D03               	skipz
  1677  0724  2F27               	goto	u1415
  1678  0725  3015               	movlw	21
  1679  0726  0279               	subwf	??_MoistureCheck+2,w
  1680  0727                     u1415:	
  1681  0727  1C03               	skipc
  1682  0728  2F4F               	goto	l1183
  1683  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1684  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1685  072B  0832               	movf	_mh,w
  1686  072C  00F7               	movwf	??_MoistureCheck
  1687  072D  01F8               	clrf	??_MoistureCheck+1
  1688  072E  0877               	movf	??_MoistureCheck,w
  1689  072F  00F0               	movwf	___wmul@multiplier
  1690  0730  0878               	movf	??_MoistureCheck+1,w
  1691  0731  00F1               	movwf	___wmul@multiplier+1
  1692  0732  300A               	movlw	10
  1693  0733  00F2               	movwf	___wmul@multiplicand
  1694  0734  3000               	movlw	0
  1695  0735  00F3               	movwf	___wmul@multiplicand+1
  1696  0736  2385               	fcall	___wmul
  1697  0737  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0738  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0739  0833               	movf	_ml,w
  1700  073A  0770               	addwf	?___wmul,w
  1701  073B  00F9               	movwf	??_MoistureCheck+2
  1702  073C  3000               	movlw	0
  1703  073D  1803               	skipnc
  1704  073E  3001               	movlw	1
  1705  073F  0771               	addwf	?___wmul+1,w
  1706  0740  00FA               	movwf	??_MoistureCheck+3
  1707  0741  087A               	movf	??_MoistureCheck+3,w
  1708  0742  3A80               	xorlw	128
  1709  0743  00FF               	movwf	127
  1710  0744  3080               	movlw	128
  1711  0745  027F               	subwf	127,w
  1712  0746  1D03               	skipz
  1713  0747  2F4A               	goto	u1425
  1714  0748  3023               	movlw	35
  1715  0749  0279               	subwf	??_MoistureCheck+2,w
  1716  074A                     u1425:	
  1717  074A  1803               	skipnc
  1718  074B  2F4F               	goto	l1183
  1719                           
  1720                           ;main.c: 229: RB6 = 1;
  1721  074C  1283               	bcf	3,5	;RP0=0, select bank0
  1722  074D  1303               	bcf	3,6	;RP1=0, select bank0
  1723  074E  1706               	bsf	6,6	;volatile
  1724  074F                     l1183:	
  1725                           
  1726                           ;main.c: 230: }
  1727                           ;main.c: 236: if (mh * 10 + ml >= 35 && mh * 10 + ml < 36) {
  1728  074F  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0750  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0751  0832               	movf	_mh,w
  1731  0752  00F7               	movwf	??_MoistureCheck
  1732  0753  01F8               	clrf	??_MoistureCheck+1
  1733  0754  0877               	movf	??_MoistureCheck,w
  1734  0755  00F0               	movwf	___wmul@multiplier
  1735  0756  0878               	movf	??_MoistureCheck+1,w
  1736  0757  00F1               	movwf	___wmul@multiplier+1
  1737  0758  300A               	movlw	10
  1738  0759  00F2               	movwf	___wmul@multiplicand
  1739  075A  3000               	movlw	0
  1740  075B  00F3               	movwf	___wmul@multiplicand+1
  1741  075C  2385               	fcall	___wmul
  1742  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1743  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1744  075F  0833               	movf	_ml,w
  1745  0760  0770               	addwf	?___wmul,w
  1746  0761  00F9               	movwf	??_MoistureCheck+2
  1747  0762  3000               	movlw	0
  1748  0763  1803               	skipnc
  1749  0764  3001               	movlw	1
  1750  0765  0771               	addwf	?___wmul+1,w
  1751  0766  00FA               	movwf	??_MoistureCheck+3
  1752  0767  087A               	movf	??_MoistureCheck+3,w
  1753  0768  3A80               	xorlw	128
  1754  0769  00FF               	movwf	127
  1755  076A  3080               	movlw	128
  1756  076B  027F               	subwf	127,w
  1757  076C  1D03               	skipz
  1758  076D  2F70               	goto	u1435
  1759  076E  3023               	movlw	35
  1760  076F  0279               	subwf	??_MoistureCheck+2,w
  1761  0770                     u1435:	
  1762  0770  1C03               	skipc
  1763  0771  2FAD               	goto	l1193
  1764  0772  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0773  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0774  0832               	movf	_mh,w
  1767  0775  00F7               	movwf	??_MoistureCheck
  1768  0776  01F8               	clrf	??_MoistureCheck+1
  1769  0777  0877               	movf	??_MoistureCheck,w
  1770  0778  00F0               	movwf	___wmul@multiplier
  1771  0779  0878               	movf	??_MoistureCheck+1,w
  1772  077A  00F1               	movwf	___wmul@multiplier+1
  1773  077B  300A               	movlw	10
  1774  077C  00F2               	movwf	___wmul@multiplicand
  1775  077D  3000               	movlw	0
  1776  077E  00F3               	movwf	___wmul@multiplicand+1
  1777  077F  2385               	fcall	___wmul
  1778  0780  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0781  1303               	bcf	3,6	;RP1=0, select bank0
  1780  0782  0833               	movf	_ml,w
  1781  0783  0770               	addwf	?___wmul,w
  1782  0784  00F9               	movwf	??_MoistureCheck+2
  1783  0785  3000               	movlw	0
  1784  0786  1803               	skipnc
  1785  0787  3001               	movlw	1
  1786  0788  0771               	addwf	?___wmul+1,w
  1787  0789  00FA               	movwf	??_MoistureCheck+3
  1788  078A  087A               	movf	??_MoistureCheck+3,w
  1789  078B  3A80               	xorlw	128
  1790  078C  00FF               	movwf	127
  1791  078D  3080               	movlw	128
  1792  078E  027F               	subwf	127,w
  1793  078F  1D03               	skipz
  1794  0790  2F93               	goto	u1445
  1795  0791  3024               	movlw	36
  1796  0792  0279               	subwf	??_MoistureCheck+2,w
  1797  0793                     u1445:	
  1798  0793  1803               	skipnc
  1799  0794  2FAD               	goto	l1193
  1800                           
  1801                           ;main.c: 237: unsigned char r = Median(m, o, q);
  1802  0795  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0796  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0797  0827               	movf	MoistureCheck@o,w
  1805  0798  00F7               	movwf	??_MoistureCheck
  1806  0799  0877               	movf	??_MoistureCheck,w
  1807  079A  00F0               	movwf	Median@c
  1808  079B  0828               	movf	MoistureCheck@q,w
  1809  079C  00F8               	movwf	??_MoistureCheck+1
  1810  079D  0878               	movf	??_MoistureCheck+1,w
  1811  079E  00F1               	movwf	Median@e
  1812  079F  0826               	movf	MoistureCheck@m,w
  1813  07A0  2364               	fcall	_Median
  1814  07A1  00F9               	movwf	??_MoistureCheck+2
  1815  07A2  0879               	movf	??_MoistureCheck+2,w
  1816  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  1817  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  1818  07A5  00AB               	movwf	MoistureCheck@r
  1819                           
  1820                           ;main.c: 239: if (r < 127) {
  1821  07A6  307F               	movlw	127
  1822  07A7  022B               	subwf	MoistureCheck@r,w
  1823  07A8  1803               	skipnc
  1824  07A9  2FAC               	goto	l82
  1825                           
  1826                           ;main.c: 240: RC2 = 0;
  1827  07AA  1107               	bcf	7,2	;volatile
  1828                           
  1829                           ;main.c: 241: } else {
  1830  07AB  2FAD               	goto	l1193
  1831  07AC                     l82:	
  1832                           
  1833                           ;main.c: 242: RC2 = 1;
  1834  07AC  1507               	bsf	7,2	;volatile
  1835  07AD                     l1193:	
  1836                           
  1837                           ;main.c: 243: }
  1838                           ;main.c: 244: }
  1839                           ;main.c: 250: if (mh * 10 + ml >= 36 && mh * 10 + ml < 60) {
  1840  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1841  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1842  07AF  0832               	movf	_mh,w
  1843  07B0  00F7               	movwf	??_MoistureCheck
  1844  07B1  01F8               	clrf	??_MoistureCheck+1
  1845  07B2  0877               	movf	??_MoistureCheck,w
  1846  07B3  00F0               	movwf	___wmul@multiplier
  1847  07B4  0878               	movf	??_MoistureCheck+1,w
  1848  07B5  00F1               	movwf	___wmul@multiplier+1
  1849  07B6  300A               	movlw	10
  1850  07B7  00F2               	movwf	___wmul@multiplicand
  1851  07B8  3000               	movlw	0
  1852  07B9  00F3               	movwf	___wmul@multiplicand+1
  1853  07BA  2385               	fcall	___wmul
  1854  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1855  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1856  07BD  0833               	movf	_ml,w
  1857  07BE  0770               	addwf	?___wmul,w
  1858  07BF  00F9               	movwf	??_MoistureCheck+2
  1859  07C0  3000               	movlw	0
  1860  07C1  1803               	skipnc
  1861  07C2  3001               	movlw	1
  1862  07C3  0771               	addwf	?___wmul+1,w
  1863  07C4  00FA               	movwf	??_MoistureCheck+3
  1864  07C5  087A               	movf	??_MoistureCheck+3,w
  1865  07C6  3A80               	xorlw	128
  1866  07C7  00FF               	movwf	127
  1867  07C8  3080               	movlw	128
  1868  07C9  027F               	subwf	127,w
  1869  07CA  1D03               	skipz
  1870  07CB  2FCE               	goto	u1465
  1871  07CC  3024               	movlw	36
  1872  07CD  0279               	subwf	??_MoistureCheck+2,w
  1873  07CE                     u1465:	
  1874  07CE  1C03               	skipc
  1875  07CF  0008               	return
  1876  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1877  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1878  07D2  0832               	movf	_mh,w
  1879  07D3  00F7               	movwf	??_MoistureCheck
  1880  07D4  01F8               	clrf	??_MoistureCheck+1
  1881  07D5  0877               	movf	??_MoistureCheck,w
  1882  07D6  00F0               	movwf	___wmul@multiplier
  1883  07D7  0878               	movf	??_MoistureCheck+1,w
  1884  07D8  00F1               	movwf	___wmul@multiplier+1
  1885  07D9  300A               	movlw	10
  1886  07DA  00F2               	movwf	___wmul@multiplicand
  1887  07DB  3000               	movlw	0
  1888  07DC  00F3               	movwf	___wmul@multiplicand+1
  1889  07DD  2385               	fcall	___wmul
  1890  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1891  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1892  07E0  0833               	movf	_ml,w
  1893  07E1  0770               	addwf	?___wmul,w
  1894  07E2  00F9               	movwf	??_MoistureCheck+2
  1895  07E3  3000               	movlw	0
  1896  07E4  1803               	skipnc
  1897  07E5  3001               	movlw	1
  1898  07E6  0771               	addwf	?___wmul+1,w
  1899  07E7  00FA               	movwf	??_MoistureCheck+3
  1900  07E8  087A               	movf	??_MoistureCheck+3,w
  1901  07E9  3A80               	xorlw	128
  1902  07EA  00FF               	movwf	127
  1903  07EB  3080               	movlw	128
  1904  07EC  027F               	subwf	127,w
  1905  07ED  1D03               	skipz
  1906  07EE  2FF1               	goto	u1475
  1907  07EF  303C               	movlw	60
  1908  07F0  0279               	subwf	??_MoistureCheck+2,w
  1909  07F1                     u1475:	
  1910  07F1  1803               	skipnc
  1911  07F2  0008               	return
  1912                           
  1913                           ;main.c: 251: RC2 = 1;
  1914  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  1915  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  1916  07F5  1507               	bsf	7,2	;volatile
  1917  07F6  0008               	return
  1918  07F7                     __end_of_MoistureCheck:	
  1919                           
  1920                           	psect	text2
  1921  0385                     __ptext2:	
  1922 ;; *************** function ___wmul *****************
  1923 ;; Defined at:
  1924 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  multiplier      2    0[COMMON] unsigned int 
  1927 ;;  multiplicand    2    2[COMMON] unsigned int 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  product         2    4[COMMON] unsigned int 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  2    0[COMMON] unsigned int 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1
  1939 ;;      Params:         4       0       0
  1940 ;;      Locals:         2       0       0
  1941 ;;      Temps:          0       0       0
  1942 ;;      Totals:         6       0       0
  1943 ;;Total ram usage:        6 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;;		_MoistureCheck
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function ___wmul
  1955  0385                     ___wmul:	
  1956                           
  1957                           ;incstack = 0
  1958                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1959  0385  01F4               	clrf	___wmul@product
  1960  0386  01F5               	clrf	___wmul@product+1
  1961  0387                     l1055:	
  1962  0387  1C70               	btfss	___wmul@multiplier,0
  1963  0388  2B8F               	goto	l165
  1964  0389  0872               	movf	___wmul@multiplicand,w
  1965  038A  07F4               	addwf	___wmul@product,f
  1966  038B  1803               	skipnc
  1967  038C  0AF5               	incf	___wmul@product+1,f
  1968  038D  0873               	movf	___wmul@multiplicand+1,w
  1969  038E  07F5               	addwf	___wmul@product+1,f
  1970  038F                     l165:	
  1971  038F  3001               	movlw	1
  1972  0390                     u1135:	
  1973  0390  1003               	clrc
  1974  0391  0DF2               	rlf	___wmul@multiplicand,f
  1975  0392  0DF3               	rlf	___wmul@multiplicand+1,f
  1976  0393  3EFF               	addlw	-1
  1977  0394  1D03               	skipz
  1978  0395  2B90               	goto	u1135
  1979  0396  3001               	movlw	1
  1980  0397                     u1145:	
  1981  0397  1003               	clrc
  1982  0398  0CF1               	rrf	___wmul@multiplier+1,f
  1983  0399  0CF0               	rrf	___wmul@multiplier,f
  1984  039A  3EFF               	addlw	-1
  1985  039B  1D03               	skipz
  1986  039C  2B97               	goto	u1145
  1987  039D  0870               	movf	___wmul@multiplier,w
  1988  039E  0471               	iorwf	___wmul@multiplier+1,w
  1989  039F  1D03               	btfss	3,2
  1990  03A0  2B87               	goto	l1055
  1991  03A1  0875               	movf	___wmul@product+1,w
  1992  03A2  00F1               	movwf	?___wmul+1
  1993  03A3  0874               	movf	___wmul@product,w
  1994  03A4  00F0               	movwf	?___wmul
  1995  03A5  0008               	return
  1996  03A6                     __end_of___wmul:	
  1997                           
  1998                           	psect	text3
  1999  0364                     __ptext3:	
  2000 ;; *************** function _Median *****************
  2001 ;; Defined at:
  2002 ;;		line 44 in file "user.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  a               1    wreg     unsigned char 
  2005 ;;  c               1    0[COMMON] unsigned char 
  2006 ;;  e               1    1[COMMON] unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  a               1    4[COMMON] unsigned char 
  2009 ;;  d               1    6[COMMON] unsigned char 
  2010 ;;  b               1    5[COMMON] unsigned char 
  2011 ;;  f               1    3[COMMON] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      unsigned char 
  2014 ;; Registers used:
  2015 ;;		wreg
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1
  2021 ;;      Params:         2       0       0
  2022 ;;      Locals:         4       0       0
  2023 ;;      Temps:          1       0       0
  2024 ;;      Totals:         7       0       0
  2025 ;;Total ram usage:        7 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_MoistureCheck
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _Median
  2036  0364                     _Median:	
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _Median: [wreg]
  2040                           ;Median@a stored from wreg
  2041  0364  00F4               	movwf	Median@a
  2042                           
  2043                           ;user.c: 46: unsigned char b, d, f;
  2044                           ;user.c: 48: if (a > c){
  2045  0365  0874               	movf	Median@a,w
  2046  0366  0270               	subwf	Median@c,w
  2047  0367  1803               	skipnc
  2048  0368  2B6B               	goto	l1041
  2049                           
  2050                           ;user.c: 49: b = a;
  2051  0369  0874               	movf	Median@a,w
  2052  036A  2B6C               	goto	L1
  2053  036B                     l1041:	
  2054                           ;user.c: 50: }
  2055                           
  2056                           
  2057                           ;user.c: 51: else{
  2058                           ;user.c: 52: b = c;
  2059  036B  0870               	movf	Median@c,w
  2060  036C                     L1:	
  2061  036C  00F2               	movwf	??_Median
  2062  036D  0872               	movf	??_Median,w
  2063  036E  00F5               	movwf	Median@b
  2064                           
  2065                           ;user.c: 53: }
  2066                           ;user.c: 55: if(c > e){
  2067  036F  0870               	movf	Median@c,w
  2068  0370  0271               	subwf	Median@e,w
  2069  0371  1803               	skipnc
  2070  0372  2B75               	goto	l1045
  2071                           
  2072                           ;user.c: 56: d = c;
  2073  0373  0870               	movf	Median@c,w
  2074  0374  2B76               	goto	L2
  2075  0375                     l1045:	
  2076                           ;user.c: 57: }
  2077                           
  2078                           
  2079                           ;user.c: 58: else{
  2080                           ;user.c: 59: d = e;
  2081  0375  0871               	movf	Median@e,w
  2082  0376                     L2:	
  2083  0376  00F2               	movwf	??_Median
  2084  0377  0872               	movf	??_Median,w
  2085  0378  00F6               	movwf	Median@d
  2086                           
  2087                           ;user.c: 60: }
  2088                           ;user.c: 62: if(b < d){
  2089  0379  0876               	movf	Median@d,w
  2090  037A  0275               	subwf	Median@b,w
  2091  037B  1803               	skipnc
  2092  037C  2B7F               	goto	l1049
  2093                           
  2094                           ;user.c: 63: f = b;
  2095  037D  0875               	movf	Median@b,w
  2096  037E  2B80               	goto	L3
  2097  037F                     l1049:	
  2098                           ;user.c: 64: }
  2099                           
  2100                           
  2101                           ;user.c: 65: else{
  2102                           ;user.c: 66: f = d;
  2103  037F  0876               	movf	Median@d,w
  2104  0380                     L3:	
  2105  0380  00F2               	movwf	??_Median
  2106  0381  0872               	movf	??_Median,w
  2107  0382  00F3               	movwf	Median@f
  2108                           
  2109                           ;user.c: 67: }
  2110                           ;user.c: 69: return f;
  2111  0383  0873               	movf	Median@f,w
  2112  0384  0008               	return
  2113  0385                     __end_of_Median:	
  2114                           
  2115                           	psect	text4
  2116  0347                     __ptext4:	
  2117 ;; *************** function _ADCRead *****************
  2118 ;; Defined at:
  2119 ;;		line 26 in file "user.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  ch              1    wreg     unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  ch              1    1[COMMON] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      unsigned char 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1
  2133 ;;      Params:         0       0       0
  2134 ;;      Locals:         1       0       0
  2135 ;;      Temps:          1       0       0
  2136 ;;      Totals:         2       0       0
  2137 ;;Total ram usage:        2 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_MoistureCheck
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function _ADCRead
  2148  0347                     _ADCRead:	
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _ADCRead: [wreg+status,2+status,0]
  2152                           ;ADCRead@ch stored from wreg
  2153  0347  00F1               	movwf	ADCRead@ch
  2154                           
  2155                           ;user.c: 28: ADCON0=0x00;
  2156  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2158  034A  019F               	clrf	31	;volatile
  2159                           
  2160                           ;user.c: 29: ADCON0=(ch<<2);
  2161  034B  0871               	movf	ADCRead@ch,w
  2162  034C  00F0               	movwf	??_ADCRead
  2163  034D  3001               	movlw	1
  2164  034E                     u1075:	
  2165  034E  1003               	clrc
  2166  034F  0DF0               	rlf	??_ADCRead,f
  2167  0350  3EFF               	addlw	-1
  2168  0351  1D03               	skipz
  2169  0352  2B4E               	goto	u1075
  2170  0353  1003               	clrc
  2171  0354  0D70               	rlf	??_ADCRead,w
  2172  0355  009F               	movwf	31	;volatile
  2173                           
  2174                           ;user.c: 30: ADON=1;
  2175  0356  141F               	bsf	31,0	;volatile
  2176                           
  2177                           ;user.c: 31: _delay((unsigned long)((300)*(2000000L/4000000.0)));
  2178  0357  3031               	movlw	49
  2179  0358  00F0               	movwf	??_ADCRead
  2180  0359                     u1607:	
  2181  0359  0BF0               	decfsz	??_ADCRead,f
  2182  035A  2B59               	goto	u1607
  2183  035B  2B5C               	nop2	;nop
  2184                           
  2185                           ;user.c: 32: GO_nDONE=1;
  2186  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2187  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2188  035E  149F               	bsf	31,1	;volatile
  2189  035F                     l149:	
  2190                           ;user.c: 33: while(GO_nDONE);
  2191                           
  2192  035F  189F               	btfsc	31,1	;volatile
  2193  0360  2B5F               	goto	l149
  2194                           
  2195                           ;user.c: 34: ADON=0;
  2196  0361  101F               	bcf	31,0	;volatile
  2197                           
  2198                           ;user.c: 35: return ADRES;
  2199  0362  081E               	movf	30,w	;volatile
  2200  0363  0008               	return
  2201  0364                     __end_of_ADCRead:	
  2202                           
  2203                           	psect	text5
  2204  0331                     __ptext5:	
  2205 ;; *************** function _ADCInit *****************
  2206 ;; Defined at:
  2207 ;;		line 15 in file "user.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;		None               void
  2214 ;; Registers used:
  2215 ;;		wreg
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1
  2221 ;;      Params:         0       0       0
  2222 ;;      Locals:         0       0       0
  2223 ;;      Temps:          0       0       0
  2224 ;;      Totals:         0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_MoistureCheck
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           
  2235                           ;psect for function _ADCInit
  2236  0331                     _ADCInit:	
  2237                           
  2238                           ;user.c: 17: ADCON1 = 0x10;
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in _ADCInit: [wreg]
  2242  0331  3010               	movlw	16
  2243  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2244  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2245  0334  009F               	movwf	31	;volatile
  2246  0335  0008               	return
  2247  0336                     __end_of_ADCInit:	
  2248                           
  2249                           	psect	text6
  2250  03A6                     __ptext6:	
  2251 ;; *************** function _Init *****************
  2252 ;; Defined at:
  2253 ;;		line 37 in file "system.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;		None               void
  2260 ;; Registers used:
  2261 ;;		wreg
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1
  2267 ;;      Params:         0       0       0
  2268 ;;      Locals:         0       0       0
  2269 ;;      Temps:          0       0       0
  2270 ;;      Totals:         0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _Init
  2282  03A6                     _Init:	
  2283                           
  2284                           ;system.c: 39: TRISA = 0b00011111;
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _Init: [wreg]
  2288  03A6  301F               	movlw	31
  2289  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2290  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2291  03A9  0085               	movwf	5	;volatile
  2292                           
  2293                           ;system.c: 40: ANSELA = 0b00010100;
  2294  03AA  3014               	movlw	20
  2295  03AB  1683               	bsf	3,5	;RP0=1, select bank3
  2296  03AC  1703               	bsf	3,6	;RP1=1, select bank3
  2297  03AD  0085               	movwf	5	;volatile
  2298                           
  2299                           ;system.c: 41: PORTA = 0xff;
  2300  03AE  30FF               	movlw	255
  2301  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2302  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2303  03B1  0085               	movwf	5	;volatile
  2304                           
  2305                           ;system.c: 46: TRISB = 0b00110000;
  2306  03B2  3030               	movlw	48
  2307  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2308  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2309  03B5  0086               	movwf	6	;volatile
  2310                           
  2311                           ;system.c: 47: ANSELB = 0b00110000;
  2312  03B6  3030               	movlw	48
  2313  03B7  1683               	bsf	3,5	;RP0=1, select bank3
  2314  03B8  1703               	bsf	3,6	;RP1=1, select bank3
  2315  03B9  0086               	movwf	6	;volatile
  2316                           
  2317                           ;system.c: 48: PORTB = 0xff;
  2318  03BA  30FF               	movlw	255
  2319  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2320  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2321  03BD  0086               	movwf	6	;volatile
  2322                           
  2323                           ;system.c: 53: TRISC = 0b11001011;
  2324  03BE  30CB               	movlw	203
  2325  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2326  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2327  03C1  0087               	movwf	7	;volatile
  2328                           
  2329                           ;system.c: 54: ANSELC = 0b11001011;
  2330  03C2  30CB               	movlw	203
  2331  03C3  1683               	bsf	3,5	;RP0=1, select bank3
  2332  03C4  1703               	bsf	3,6	;RP1=1, select bank3
  2333  03C5  0087               	movwf	7	;volatile
  2334                           
  2335                           ;system.c: 55: PORTC = 0xff;
  2336  03C6  30FF               	movlw	255
  2337  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2338  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2339  03C9  0087               	movwf	7	;volatile
  2340                           
  2341                           ;system.c: 60: IRCF1 = 0;
  2342  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2343  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2344  03CC  1290               	bcf	16,5	;volatile
  2345                           
  2346                           ;system.c: 61: IRCF0 = 0;
  2347  03CD  1210               	bcf	16,4	;volatile
  2348                           
  2349                           ;system.c: 62: OSCTUNE = 0x3e;
  2350  03CE  303E               	movlw	62
  2351  03CF  0091               	movwf	17	;volatile
  2352                           
  2353                           ;system.c: 64: FVRCON = 0xc3;
  2354  03D0  30C3               	movlw	195
  2355  03D1  009D               	movwf	29	;volatile
  2356  03D2  0008               	return
  2357  03D3                     __end_of_Init:	
  2358                           
  2359                           	psect	text7
  2360  0336                     __ptext7:	
  2361 ;; *************** function _ConfigureOscillator *****************
  2362 ;; Defined at:
  2363 ;;		line 18 in file "system.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;		None
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;		None               void
  2370 ;; Registers used:
  2371 ;;		status,2
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMMON   BANK0   BANK1
  2377 ;;      Params:         0       0       0
  2378 ;;      Locals:         0       0       0
  2379 ;;      Temps:          0       0       0
  2380 ;;      Totals:         0       0       0
  2381 ;;Total ram usage:        0 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; This function calls:
  2384 ;;		Nothing
  2385 ;; This function is called by:
  2386 ;;		_main
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _ConfigureOscillator
  2392  0336                     _ConfigureOscillator:	
  2393                           
  2394                           ;system.c: 20: IRCF1 = 0;
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _ConfigureOscillator: [status,2]
  2398  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2399  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2400  0338  1290               	bcf	16,5	;volatile
  2401                           
  2402                           ;system.c: 21: IRCF0 = 0;
  2403  0339  1210               	bcf	16,4	;volatile
  2404                           
  2405                           ;system.c: 22: OSCTUNE = 0x00;
  2406  033A  0191               	clrf	17	;volatile
  2407                           
  2408                           ;system.c: 24: TMR0 = 0;
  2409  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2410  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2411  033D  0181               	clrf	1	;volatile
  2412                           
  2413                           ;system.c: 25: T0CS = 0;
  2414  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2415  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2416  0340  1281               	bcf	1,5	;volatile
  2417                           
  2418                           ;system.c: 26: T0SE = 0;
  2419  0341  1201               	bcf	1,4	;volatile
  2420                           
  2421                           ;system.c: 27: PSA = 0;
  2422  0342  1181               	bcf	1,3	;volatile
  2423                           
  2424                           ;system.c: 28: PS0 = 1;
  2425  0343  1401               	bsf	1,0	;volatile
  2426                           
  2427                           ;system.c: 29: PS1 = 1;
  2428  0344  1481               	bsf	1,1	;volatile
  2429                           
  2430                           ;system.c: 30: PS2 = 1;
  2431  0345  1501               	bsf	1,2	;volatile
  2432  0346  0008               	return
  2433  0347                     __end_of_ConfigureOscillator:	
  2434  007E                     btemp	set	126	;btemp
  2435  007E                     wtemp	set	126
  2436  007E                     wtemp0	set	126
  2437  0080                     wtemp1	set	128
  2438  0082                     wtemp2	set	130
  2439  0084                     wtemp3	set	132
  2440  0086                     wtemp4	set	134
  2441  0088                     wtemp5	set	136
  2442  007F                     wtemp6	set	127
  2443  007E                     ttemp	set	126
  2444  007E                     ttemp0	set	126
  2445  0081                     ttemp1	set	129
  2446  0084                     ttemp2	set	132
  2447  0087                     ttemp3	set	135
  2448  007F                     ttemp4	set	127
  2449  007E                     ltemp	set	126
  2450  007E                     ltemp0	set	126
  2451  0082                     ltemp1	set	130
  2452  0086                     ltemp2	set	134
  2453  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     17      24
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MoistureCheck
    _MoistureCheck->_Median

Critical Paths under _main in BANK0

    _main->_MoistureCheck

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6533
                                             11 COMMON     2     2      0
                                             13 BANK0      4     4      0
                _ConfigureOscillator
                               _Init
                      _MoistureCheck
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _MoistureCheck                                       17    17      0    3981
                                              7 COMMON     4     4      0
                                              0 BANK0     13    13      0
                            _ADCInit
                            _ADCRead
                             _Median
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2512
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Median                                               7     5      2     745
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              2     2      0      31
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _Init
   _MoistureCheck
     _ADCInit
     _ADCRead
     _Median
     ___wmul
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      18       5       30.0%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25       8        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Jan 05 20:09:32 2016

                          l52 0439                            l44 03E3                            l82 07AC  
                          l74 065E                            l78 0705                            _hh 0031  
                          _hl 0037                            _mh 0032                            _ml 0033  
                          _sh 0034                            _sl 0035           ___wmul@multiplicand 0072  
                         l149 035F                           l165 038F                           _RA5 002D  
                         _RC2 003A                           _RC4 003C                           _RB6 0036  
                         _RC5 003D                           _RB7 0037                           _PS0 0408  
                         _PS1 0409                           _PS2 040A                           _PSA 040B  
             __end_of_ADCInit 0336               __end_of_ADCRead 0364                          l1111 0521  
                        l1041 036B                          l1131 0558                          l1123 0542  
                        l1115 052C                          l1107 0516                          l1045 0375  
                        l1055 0387                          l1151 0601                          l1135 0563  
                        l1127 054D                          l1119 0537                          l1207 03DA  
                        l1049 037F                          l1161 065F                          l1145 05B7  
                        l1241 0422                          l1139 056D                          l1235 0419  
                        l1219 03F8                          l1253 0435                          l1229 0410  
                        l1183 074F                          l1167 06A8                          l1095 04BE  
                        l1247 042B                          l1193 07AD                          l1177 0706  
                        l1257 043A                          _ADON 00F8                          _T0CS 040D  
                        u1135 0390                          u1145 0397                          u1305 05B1  
                        u1075 034E                          u1315 05D8                          _T0SE 040C  
                        u1325 05FB                          u1415 0727                          u1335 0622  
                        u1175 04B8                          u1425 074A                          u1345 0645  
                        u1185 04DF                          u1435 0770                          u1195 0502  
                        u1445 0793                          u1365 0680                          u1607 0359  
                        u1375 06A3                          u1295 058E                          u1465 07CE  
                        u1385 06C9                          u1475 07F1                          u1395 06EC  
                        u1585 0458                          u1595 047A                          _TMR0 0001  
                        _Init 03A6                          _main 03D3                          btemp 007E  
               __CFG_BOREN$ON 0000                          ltemp 007E                          start 0000  
                        ttemp 007E                          wtemp 007E         __end_of_MoistureCheck 07F7  
                       ?_Init 0070                         ?_main 0070                         _ADRES 001E  
               __CFG_WDTE$OFF 0000                         _IRCF0 0484                         _IRCF1 0485  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
         _ConfigureOscillator 0336                 __CFG_PWRTE$ON 0000                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F          ?_ConfigureOscillator 0070               __initialization 07F7  
                __end_of_Init 03D3                  __end_of_main 047E                     ??_ADCInit 0070  
                   ??_ADCRead 0070                        ??_Init 0070                        ??_main 002D  
                   ADCRead@ch 0071                        _ADCON0 001F                        _ADCON1 009F  
                      _ANSELA 0185                        _ANSELB 0186                        _ANSELC 0187  
                      _FVRCON 009D                        _TMR0IF 005A         ??_ConfigureOscillator 0070  
                      _Median 0364                        ___wmul 0385       __end_of__initialization 07FE  
              __pcstackCOMMON 0070                  __pidataBANK0 0330                  __pbitnvBANK0 01B0  
                  __pbssBANK0 0031                       ?_Median 0070                    __pmaintext 03D3  
                     ?___wmul 0070                       _ADCInit 0331                       _ADCRead 0347  
                     _OSCTUNE 0091                       Median@a 0074                       Median@b 0075  
                     Median@c 0070                       Median@d 0076                       Median@e 0071  
                     Median@f 0073               __size_of_Median 0021               __size_of___wmul 0021  
                     __ptext1 047E                       __ptext2 0385                       __ptext3 0364  
                     __ptext4 0347                       __ptext5 0331                       __ptext6 03A6  
                     __ptext7 0336          end_of_initialization 07FE        __size_of_MoistureCheck 0379  
 __end_of_ConfigureOscillator 0347                    main@Toggle 01B0                __end_of_Median 0385  
               _MoistureCheck 047E                __end_of___wmul 03A6           start_initialization 07F7  
                    ??_Median 0072                      ??___wmul 0074                ?_MoistureCheck 0070  
                 __pdataBANK0 0037                      ?_ADCInit 0070                      ?_ADCRead 0070  
                   ___latbits 0000                 __pcstackBANK0 0020                MoistureCheck@a 0020  
              MoistureCheck@c 0021                MoistureCheck@e 0022                MoistureCheck@f 0029  
              MoistureCheck@g 0023                MoistureCheck@i 0024                MoistureCheck@k 0025  
              MoistureCheck@l 002A                MoistureCheck@m 0026                MoistureCheck@o 0027  
              MoistureCheck@q 0028                MoistureCheck@r 002B                MoistureCheck@t 002C  
              ___wmul@product 0074               ??_MoistureCheck 0077                      _GO_nDONE 00F9  
            __size_of_ADCInit 0005              __size_of_ADCRead 001D             ___wmul@multiplier 0070  
               __size_of_Init 002D                 __size_of_main 00AB  __size_of_ConfigureOscillator 0011  
                    main@bres 007B            __CFG_FOSC$INTOSCIO 0000  
