

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 17 23:22:05 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    67                           	dabs	1,0x620,48
    68                           	dabs	1,0x5A8,72
    69                           	dabs	1,0x5A0,8
    70                           	dabs	1,0x520,80
    71                           	dabs	1,0x4A0,80
    72                           	dabs	1,0x420,80
    73                           	dabs	1,0x3A0,80
    74                           	dabs	1,0x328,72
    75                           	dabs	1,0x21E8,0,_Isamples
    76                           	dabs	1,0x2378,0,_Vsamples
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 1.45
    80                           ; Generated 16/11/2017 GMT
    81                           ; 
    82                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F18855 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  001C                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  008C                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  008E                     	;# 
   146  008F                     	;# 
   147  0090                     	;# 
   148  0090                     	;# 
   149  0091                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0097                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  0110                     	;# 
   168  0110                     	;# 
   169  0111                     	;# 
   170  0112                     	;# 
   171  0112                     	;# 
   172  0113                     	;# 
   173  0114                     	;# 
   174  0114                     	;# 
   175  0115                     	;# 
   176  0116                     	;# 
   177  0116                     	;# 
   178  0117                     	;# 
   179  0119                     	;# 
   180  0119                     	;# 
   181  0119                     	;# 
   182  011A                     	;# 
   183  011A                     	;# 
   184  011A                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011B                     	;# 
   188  011B                     	;# 
   189  011B                     	;# 
   190  011C                     	;# 
   191  011C                     	;# 
   192  011C                     	;# 
   193  011D                     	;# 
   194  011D                     	;# 
   195  011D                     	;# 
   196  011E                     	;# 
   197  011E                     	;# 
   198  011E                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  011F                     	;# 
   202  011F                     	;# 
   203  011F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  018E                     	;# 
   207  018F                     	;# 
   208  0190                     	;# 
   209  0191                     	;# 
   210  0192                     	;# 
   211  0196                     	;# 
   212  0197                     	;# 
   213  0198                     	;# 
   214  0199                     	;# 
   215  019A                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  020C                     	;# 
   219  020C                     	;# 
   220  020D                     	;# 
   221  020E                     	;# 
   222  020F                     	;# 
   223  020F                     	;# 
   224  0210                     	;# 
   225  0210                     	;# 
   226  0211                     	;# 
   227  0211                     	;# 
   228  0212                     	;# 
   229  0212                     	;# 
   230  0213                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0216                     	;# 
   235  0216                     	;# 
   236  0217                     	;# 
   237  0217                     	;# 
   238  0218                     	;# 
   239  0218                     	;# 
   240  0219                     	;# 
   241  021A                     	;# 
   242  021B                     	;# 
   243  021B                     	;# 
   244  021C                     	;# 
   245  021C                     	;# 
   246  021D                     	;# 
   247  021D                     	;# 
   248  021E                     	;# 
   249  021F                     	;# 
   250  028C                     	;# 
   251  028C                     	;# 
   252  028D                     	;# 
   253  028D                     	;# 
   254  028E                     	;# 
   255  028F                     	;# 
   256  0290                     	;# 
   257  0290                     	;# 
   258  0291                     	;# 
   259  0292                     	;# 
   260  0292                     	;# 
   261  0293                     	;# 
   262  0293                     	;# 
   263  0294                     	;# 
   264  0295                     	;# 
   265  0296                     	;# 
   266  0296                     	;# 
   267  0297                     	;# 
   268  0298                     	;# 
   269  0298                     	;# 
   270  0299                     	;# 
   271  0299                     	;# 
   272  029A                     	;# 
   273  029B                     	;# 
   274  029C                     	;# 
   275  029C                     	;# 
   276  029D                     	;# 
   277  030C                     	;# 
   278  030C                     	;# 
   279  030D                     	;# 
   280  030E                     	;# 
   281  030F                     	;# 
   282  0310                     	;# 
   283  0310                     	;# 
   284  0311                     	;# 
   285  0312                     	;# 
   286  0313                     	;# 
   287  0314                     	;# 
   288  0314                     	;# 
   289  0315                     	;# 
   290  0316                     	;# 
   291  0317                     	;# 
   292  0318                     	;# 
   293  0318                     	;# 
   294  0319                     	;# 
   295  031A                     	;# 
   296  031B                     	;# 
   297  031C                     	;# 
   298  031C                     	;# 
   299  031D                     	;# 
   300  031E                     	;# 
   301  031F                     	;# 
   302  038C                     	;# 
   303  038D                     	;# 
   304  038E                     	;# 
   305  0390                     	;# 
   306  0391                     	;# 
   307  0392                     	;# 
   308  040C                     	;# 
   309  040D                     	;# 
   310  040E                     	;# 
   311  040F                     	;# 
   312  0410                     	;# 
   313  0411                     	;# 
   314  0416                     	;# 
   315  0416                     	;# 
   316  0417                     	;# 
   317  0418                     	;# 
   318  0418                     	;# 
   319  0419                     	;# 
   320  041A                     	;# 
   321  041A                     	;# 
   322  041B                     	;# 
   323  041C                     	;# 
   324  041C                     	;# 
   325  041D                     	;# 
   326  041E                     	;# 
   327  041F                     	;# 
   328  048C                     	;# 
   329  048C                     	;# 
   330  048D                     	;# 
   331  048E                     	;# 
   332  048F                     	;# 
   333  048F                     	;# 
   334  0490                     	;# 
   335  0491                     	;# 
   336  0492                     	;# 
   337  0492                     	;# 
   338  0493                     	;# 
   339  0494                     	;# 
   340  0495                     	;# 
   341  0495                     	;# 
   342  0496                     	;# 
   343  0497                     	;# 
   344  0498                     	;# 
   345  0499                     	;# 
   346  049A                     	;# 
   347  049B                     	;# 
   348  049C                     	;# 
   349  049D                     	;# 
   350  050C                     	;# 
   351  050C                     	;# 
   352  050D                     	;# 
   353  050E                     	;# 
   354  050F                     	;# 
   355  050F                     	;# 
   356  0510                     	;# 
   357  0511                     	;# 
   358  0512                     	;# 
   359  0512                     	;# 
   360  0513                     	;# 
   361  0514                     	;# 
   362  0515                     	;# 
   363  0515                     	;# 
   364  0516                     	;# 
   365  0517                     	;# 
   366  0518                     	;# 
   367  0519                     	;# 
   368  051A                     	;# 
   369  051B                     	;# 
   370  051C                     	;# 
   371  051D                     	;# 
   372  058C                     	;# 
   373  058C                     	;# 
   374  058D                     	;# 
   375  058E                     	;# 
   376  058F                     	;# 
   377  058F                     	;# 
   378  0590                     	;# 
   379  0591                     	;# 
   380  0592                     	;# 
   381  0593                     	;# 
   382  060C                     	;# 
   383  060D                     	;# 
   384  060E                     	;# 
   385  060F                     	;# 
   386  0610                     	;# 
   387  0611                     	;# 
   388  0612                     	;# 
   389  0613                     	;# 
   390  0614                     	;# 
   391  0616                     	;# 
   392  0617                     	;# 
   393  0618                     	;# 
   394  0619                     	;# 
   395  061A                     	;# 
   396  061B                     	;# 
   397  061C                     	;# 
   398  061D                     	;# 
   399  061E                     	;# 
   400  068C                     	;# 
   401  068D                     	;# 
   402  068E                     	;# 
   403  068F                     	;# 
   404  0690                     	;# 
   405  0691                     	;# 
   406  0692                     	;# 
   407  0693                     	;# 
   408  0694                     	;# 
   409  070C                     	;# 
   410  070D                     	;# 
   411  070E                     	;# 
   412  070F                     	;# 
   413  0710                     	;# 
   414  0711                     	;# 
   415  0712                     	;# 
   416  0713                     	;# 
   417  0714                     	;# 
   418  0716                     	;# 
   419  0717                     	;# 
   420  0718                     	;# 
   421  0719                     	;# 
   422  071A                     	;# 
   423  071B                     	;# 
   424  071C                     	;# 
   425  071D                     	;# 
   426  071E                     	;# 
   427  0796                     	;# 
   428  0797                     	;# 
   429  0798                     	;# 
   430  0799                     	;# 
   431  079A                     	;# 
   432  079B                     	;# 
   433  080C                     	;# 
   434  080D                     	;# 
   435  080E                     	;# 
   436  080F                     	;# 
   437  0810                     	;# 
   438  0811                     	;# 
   439  0812                     	;# 
   440  0813                     	;# 
   441  0814                     	;# 
   442  081A                     	;# 
   443  081B                     	;# 
   444  081C                     	;# 
   445  081D                     	;# 
   446  081E                     	;# 
   447  081F                     	;# 
   448  088C                     	;# 
   449  088D                     	;# 
   450  088E                     	;# 
   451  088F                     	;# 
   452  0890                     	;# 
   453  0891                     	;# 
   454  0892                     	;# 
   455  0893                     	;# 
   456  0895                     	;# 
   457  0896                     	;# 
   458  0897                     	;# 
   459  0898                     	;# 
   460  0899                     	;# 
   461  089A                     	;# 
   462  089B                     	;# 
   463  090C                     	;# 
   464  090E                     	;# 
   465  090F                     	;# 
   466  091F                     	;# 
   467  091F                     	;# 
   468  098F                     	;# 
   469  098F                     	;# 
   470  0990                     	;# 
   471  0991                     	;# 
   472  0992                     	;# 
   473  0993                     	;# 
   474  0994                     	;# 
   475  0995                     	;# 
   476  0996                     	;# 
   477  0997                     	;# 
   478  0E0F                     	;# 
   479  0E10                     	;# 
   480  0E11                     	;# 
   481  0E12                     	;# 
   482  0E13                     	;# 
   483  0E14                     	;# 
   484  0E15                     	;# 
   485  0E16                     	;# 
   486  0E17                     	;# 
   487  0E18                     	;# 
   488  0E19                     	;# 
   489  0E1A                     	;# 
   490  0E1B                     	;# 
   491  0E1C                     	;# 
   492  0E1D                     	;# 
   493  0E1E                     	;# 
   494  0E1F                     	;# 
   495  0E20                     	;# 
   496  0E21                     	;# 
   497  0E22                     	;# 
   498  0E23                     	;# 
   499  0E24                     	;# 
   500  0E25                     	;# 
   501  0E26                     	;# 
   502  0E27                     	;# 
   503  0E28                     	;# 
   504  0E29                     	;# 
   505  0E2A                     	;# 
   506  0E2B                     	;# 
   507  0E2C                     	;# 
   508  0E2D                     	;# 
   509  0E2E                     	;# 
   510  0E2F                     	;# 
   511  0E30                     	;# 
   512  0E31                     	;# 
   513  0E32                     	;# 
   514  0E33                     	;# 
   515  0E34                     	;# 
   516  0E35                     	;# 
   517  0E36                     	;# 
   518  0E37                     	;# 
   519  0E8F                     	;# 
   520  0E90                     	;# 
   521  0E91                     	;# 
   522  0E92                     	;# 
   523  0E93                     	;# 
   524  0E94                     	;# 
   525  0E95                     	;# 
   526  0E96                     	;# 
   527  0E97                     	;# 
   528  0E9C                     	;# 
   529  0E9D                     	;# 
   530  0E9E                     	;# 
   531  0EA1                     	;# 
   532  0EA2                     	;# 
   533  0EA3                     	;# 
   534  0EA4                     	;# 
   535  0EA5                     	;# 
   536  0EA9                     	;# 
   537  0EAA                     	;# 
   538  0EAB                     	;# 
   539  0EAC                     	;# 
   540  0EB1                     	;# 
   541  0EB2                     	;# 
   542  0EB3                     	;# 
   543  0EB8                     	;# 
   544  0EB9                     	;# 
   545  0EBA                     	;# 
   546  0EBB                     	;# 
   547  0EBC                     	;# 
   548  0EBD                     	;# 
   549  0EBE                     	;# 
   550  0EC3                     	;# 
   551  0EC5                     	;# 
   552  0EC6                     	;# 
   553  0EC7                     	;# 
   554  0EC8                     	;# 
   555  0EC9                     	;# 
   556  0ECA                     	;# 
   557  0ECB                     	;# 
   558  0ECC                     	;# 
   559  0F10                     	;# 
   560  0F11                     	;# 
   561  0F12                     	;# 
   562  0F13                     	;# 
   563  0F14                     	;# 
   564  0F15                     	;# 
   565  0F16                     	;# 
   566  0F17                     	;# 
   567  0F18                     	;# 
   568  0F19                     	;# 
   569  0F1A                     	;# 
   570  0F1B                     	;# 
   571  0F1C                     	;# 
   572  0F1D                     	;# 
   573  0F1E                     	;# 
   574  0F1F                     	;# 
   575  0F20                     	;# 
   576  0F21                     	;# 
   577  0F22                     	;# 
   578  0F23                     	;# 
   579  0F24                     	;# 
   580  0F25                     	;# 
   581  0F26                     	;# 
   582  0F27                     	;# 
   583  0F38                     	;# 
   584  0F39                     	;# 
   585  0F3A                     	;# 
   586  0F3B                     	;# 
   587  0F3C                     	;# 
   588  0F3D                     	;# 
   589  0F3E                     	;# 
   590  0F3F                     	;# 
   591  0F40                     	;# 
   592  0F41                     	;# 
   593  0F43                     	;# 
   594  0F44                     	;# 
   595  0F45                     	;# 
   596  0F46                     	;# 
   597  0F47                     	;# 
   598  0F48                     	;# 
   599  0F49                     	;# 
   600  0F4A                     	;# 
   601  0F4B                     	;# 
   602  0F4C                     	;# 
   603  0F4E                     	;# 
   604  0F4F                     	;# 
   605  0F50                     	;# 
   606  0F51                     	;# 
   607  0F52                     	;# 
   608  0F53                     	;# 
   609  0F54                     	;# 
   610  0F55                     	;# 
   611  0F56                     	;# 
   612  0F57                     	;# 
   613  0F65                     	;# 
   614  0F68                     	;# 
   615  0F69                     	;# 
   616  0F6A                     	;# 
   617  0F6B                     	;# 
   618  0FE4                     	;# 
   619  0FE5                     	;# 
   620  0FE6                     	;# 
   621  0FE7                     	;# 
   622  0FE8                     	;# 
   623  0FE9                     	;# 
   624  0FEA                     	;# 
   625  0FEB                     	;# 
   626  0FED                     	;# 
   627  0FEE                     	;# 
   628  0FEF                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0008                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0016                     	;# 
   649  0017                     	;# 
   650  0018                     	;# 
   651  001C                     	;# 
   652  001C                     	;# 
   653  001D                     	;# 
   654  001D                     	;# 
   655  001E                     	;# 
   656  001F                     	;# 
   657  008C                     	;# 
   658  008C                     	;# 
   659  008D                     	;# 
   660  008E                     	;# 
   661  008E                     	;# 
   662  008F                     	;# 
   663  0090                     	;# 
   664  0090                     	;# 
   665  0091                     	;# 
   666  0093                     	;# 
   667  0094                     	;# 
   668  0095                     	;# 
   669  0096                     	;# 
   670  0097                     	;# 
   671  0098                     	;# 
   672  0099                     	;# 
   673  009A                     	;# 
   674  009B                     	;# 
   675  009C                     	;# 
   676  009D                     	;# 
   677  009E                     	;# 
   678  010C                     	;# 
   679  010D                     	;# 
   680  010E                     	;# 
   681  010E                     	;# 
   682  010F                     	;# 
   683  0110                     	;# 
   684  0110                     	;# 
   685  0111                     	;# 
   686  0112                     	;# 
   687  0112                     	;# 
   688  0113                     	;# 
   689  0114                     	;# 
   690  0114                     	;# 
   691  0115                     	;# 
   692  0116                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  0119                     	;# 
   696  0119                     	;# 
   697  0119                     	;# 
   698  011A                     	;# 
   699  011A                     	;# 
   700  011A                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011B                     	;# 
   704  011B                     	;# 
   705  011B                     	;# 
   706  011C                     	;# 
   707  011C                     	;# 
   708  011C                     	;# 
   709  011D                     	;# 
   710  011D                     	;# 
   711  011D                     	;# 
   712  011E                     	;# 
   713  011E                     	;# 
   714  011E                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  011F                     	;# 
   718  011F                     	;# 
   719  011F                     	;# 
   720  018C                     	;# 
   721  018D                     	;# 
   722  018E                     	;# 
   723  018F                     	;# 
   724  0190                     	;# 
   725  0191                     	;# 
   726  0192                     	;# 
   727  0196                     	;# 
   728  0197                     	;# 
   729  0198                     	;# 
   730  0199                     	;# 
   731  019A                     	;# 
   732  019B                     	;# 
   733  019C                     	;# 
   734  020C                     	;# 
   735  020C                     	;# 
   736  020D                     	;# 
   737  020E                     	;# 
   738  020F                     	;# 
   739  020F                     	;# 
   740  0210                     	;# 
   741  0210                     	;# 
   742  0211                     	;# 
   743  0211                     	;# 
   744  0212                     	;# 
   745  0212                     	;# 
   746  0213                     	;# 
   747  0214                     	;# 
   748  0215                     	;# 
   749  0215                     	;# 
   750  0216                     	;# 
   751  0216                     	;# 
   752  0217                     	;# 
   753  0217                     	;# 
   754  0218                     	;# 
   755  0218                     	;# 
   756  0219                     	;# 
   757  021A                     	;# 
   758  021B                     	;# 
   759  021B                     	;# 
   760  021C                     	;# 
   761  021C                     	;# 
   762  021D                     	;# 
   763  021D                     	;# 
   764  021E                     	;# 
   765  021F                     	;# 
   766  028C                     	;# 
   767  028C                     	;# 
   768  028D                     	;# 
   769  028D                     	;# 
   770  028E                     	;# 
   771  028F                     	;# 
   772  0290                     	;# 
   773  0290                     	;# 
   774  0291                     	;# 
   775  0292                     	;# 
   776  0292                     	;# 
   777  0293                     	;# 
   778  0293                     	;# 
   779  0294                     	;# 
   780  0295                     	;# 
   781  0296                     	;# 
   782  0296                     	;# 
   783  0297                     	;# 
   784  0298                     	;# 
   785  0298                     	;# 
   786  0299                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  029B                     	;# 
   790  029C                     	;# 
   791  029C                     	;# 
   792  029D                     	;# 
   793  030C                     	;# 
   794  030C                     	;# 
   795  030D                     	;# 
   796  030E                     	;# 
   797  030F                     	;# 
   798  0310                     	;# 
   799  0310                     	;# 
   800  0311                     	;# 
   801  0312                     	;# 
   802  0313                     	;# 
   803  0314                     	;# 
   804  0314                     	;# 
   805  0315                     	;# 
   806  0316                     	;# 
   807  0317                     	;# 
   808  0318                     	;# 
   809  0318                     	;# 
   810  0319                     	;# 
   811  031A                     	;# 
   812  031B                     	;# 
   813  031C                     	;# 
   814  031C                     	;# 
   815  031D                     	;# 
   816  031E                     	;# 
   817  031F                     	;# 
   818  038C                     	;# 
   819  038D                     	;# 
   820  038E                     	;# 
   821  0390                     	;# 
   822  0391                     	;# 
   823  0392                     	;# 
   824  040C                     	;# 
   825  040D                     	;# 
   826  040E                     	;# 
   827  040F                     	;# 
   828  0410                     	;# 
   829  0411                     	;# 
   830  0416                     	;# 
   831  0416                     	;# 
   832  0417                     	;# 
   833  0418                     	;# 
   834  0418                     	;# 
   835  0419                     	;# 
   836  041A                     	;# 
   837  041A                     	;# 
   838  041B                     	;# 
   839  041C                     	;# 
   840  041C                     	;# 
   841  041D                     	;# 
   842  041E                     	;# 
   843  041F                     	;# 
   844  048C                     	;# 
   845  048C                     	;# 
   846  048D                     	;# 
   847  048E                     	;# 
   848  048F                     	;# 
   849  048F                     	;# 
   850  0490                     	;# 
   851  0491                     	;# 
   852  0492                     	;# 
   853  0492                     	;# 
   854  0493                     	;# 
   855  0494                     	;# 
   856  0495                     	;# 
   857  0495                     	;# 
   858  0496                     	;# 
   859  0497                     	;# 
   860  0498                     	;# 
   861  0499                     	;# 
   862  049A                     	;# 
   863  049B                     	;# 
   864  049C                     	;# 
   865  049D                     	;# 
   866  050C                     	;# 
   867  050C                     	;# 
   868  050D                     	;# 
   869  050E                     	;# 
   870  050F                     	;# 
   871  050F                     	;# 
   872  0510                     	;# 
   873  0511                     	;# 
   874  0512                     	;# 
   875  0512                     	;# 
   876  0513                     	;# 
   877  0514                     	;# 
   878  0515                     	;# 
   879  0515                     	;# 
   880  0516                     	;# 
   881  0517                     	;# 
   882  0518                     	;# 
   883  0519                     	;# 
   884  051A                     	;# 
   885  051B                     	;# 
   886  051C                     	;# 
   887  051D                     	;# 
   888  058C                     	;# 
   889  058C                     	;# 
   890  058D                     	;# 
   891  058E                     	;# 
   892  058F                     	;# 
   893  058F                     	;# 
   894  0590                     	;# 
   895  0591                     	;# 
   896  0592                     	;# 
   897  0593                     	;# 
   898  060C                     	;# 
   899  060D                     	;# 
   900  060E                     	;# 
   901  060F                     	;# 
   902  0610                     	;# 
   903  0611                     	;# 
   904  0612                     	;# 
   905  0613                     	;# 
   906  0614                     	;# 
   907  0616                     	;# 
   908  0617                     	;# 
   909  0618                     	;# 
   910  0619                     	;# 
   911  061A                     	;# 
   912  061B                     	;# 
   913  061C                     	;# 
   914  061D                     	;# 
   915  061E                     	;# 
   916  068C                     	;# 
   917  068D                     	;# 
   918  068E                     	;# 
   919  068F                     	;# 
   920  0690                     	;# 
   921  0691                     	;# 
   922  0692                     	;# 
   923  0693                     	;# 
   924  0694                     	;# 
   925  070C                     	;# 
   926  070D                     	;# 
   927  070E                     	;# 
   928  070F                     	;# 
   929  0710                     	;# 
   930  0711                     	;# 
   931  0712                     	;# 
   932  0713                     	;# 
   933  0714                     	;# 
   934  0716                     	;# 
   935  0717                     	;# 
   936  0718                     	;# 
   937  0719                     	;# 
   938  071A                     	;# 
   939  071B                     	;# 
   940  071C                     	;# 
   941  071D                     	;# 
   942  071E                     	;# 
   943  0796                     	;# 
   944  0797                     	;# 
   945  0798                     	;# 
   946  0799                     	;# 
   947  079A                     	;# 
   948  079B                     	;# 
   949  080C                     	;# 
   950  080D                     	;# 
   951  080E                     	;# 
   952  080F                     	;# 
   953  0810                     	;# 
   954  0811                     	;# 
   955  0812                     	;# 
   956  0813                     	;# 
   957  0814                     	;# 
   958  081A                     	;# 
   959  081B                     	;# 
   960  081C                     	;# 
   961  081D                     	;# 
   962  081E                     	;# 
   963  081F                     	;# 
   964  088C                     	;# 
   965  088D                     	;# 
   966  088E                     	;# 
   967  088F                     	;# 
   968  0890                     	;# 
   969  0891                     	;# 
   970  0892                     	;# 
   971  0893                     	;# 
   972  0895                     	;# 
   973  0896                     	;# 
   974  0897                     	;# 
   975  0898                     	;# 
   976  0899                     	;# 
   977  089A                     	;# 
   978  089B                     	;# 
   979  090C                     	;# 
   980  090E                     	;# 
   981  090F                     	;# 
   982  091F                     	;# 
   983  091F                     	;# 
   984  098F                     	;# 
   985  098F                     	;# 
   986  0990                     	;# 
   987  0991                     	;# 
   988  0992                     	;# 
   989  0993                     	;# 
   990  0994                     	;# 
   991  0995                     	;# 
   992  0996                     	;# 
   993  0997                     	;# 
   994  0E0F                     	;# 
   995  0E10                     	;# 
   996  0E11                     	;# 
   997  0E12                     	;# 
   998  0E13                     	;# 
   999  0E14                     	;# 
  1000  0E15                     	;# 
  1001  0E16                     	;# 
  1002  0E17                     	;# 
  1003  0E18                     	;# 
  1004  0E19                     	;# 
  1005  0E1A                     	;# 
  1006  0E1B                     	;# 
  1007  0E1C                     	;# 
  1008  0E1D                     	;# 
  1009  0E1E                     	;# 
  1010  0E1F                     	;# 
  1011  0E20                     	;# 
  1012  0E21                     	;# 
  1013  0E22                     	;# 
  1014  0E23                     	;# 
  1015  0E24                     	;# 
  1016  0E25                     	;# 
  1017  0E26                     	;# 
  1018  0E27                     	;# 
  1019  0E28                     	;# 
  1020  0E29                     	;# 
  1021  0E2A                     	;# 
  1022  0E2B                     	;# 
  1023  0E2C                     	;# 
  1024  0E2D                     	;# 
  1025  0E2E                     	;# 
  1026  0E2F                     	;# 
  1027  0E30                     	;# 
  1028  0E31                     	;# 
  1029  0E32                     	;# 
  1030  0E33                     	;# 
  1031  0E34                     	;# 
  1032  0E35                     	;# 
  1033  0E36                     	;# 
  1034  0E37                     	;# 
  1035  0E8F                     	;# 
  1036  0E90                     	;# 
  1037  0E91                     	;# 
  1038  0E92                     	;# 
  1039  0E93                     	;# 
  1040  0E94                     	;# 
  1041  0E95                     	;# 
  1042  0E96                     	;# 
  1043  0E97                     	;# 
  1044  0E9C                     	;# 
  1045  0E9D                     	;# 
  1046  0E9E                     	;# 
  1047  0EA1                     	;# 
  1048  0EA2                     	;# 
  1049  0EA3                     	;# 
  1050  0EA4                     	;# 
  1051  0EA5                     	;# 
  1052  0EA9                     	;# 
  1053  0EAA                     	;# 
  1054  0EAB                     	;# 
  1055  0EAC                     	;# 
  1056  0EB1                     	;# 
  1057  0EB2                     	;# 
  1058  0EB3                     	;# 
  1059  0EB8                     	;# 
  1060  0EB9                     	;# 
  1061  0EBA                     	;# 
  1062  0EBB                     	;# 
  1063  0EBC                     	;# 
  1064  0EBD                     	;# 
  1065  0EBE                     	;# 
  1066  0EC3                     	;# 
  1067  0EC5                     	;# 
  1068  0EC6                     	;# 
  1069  0EC7                     	;# 
  1070  0EC8                     	;# 
  1071  0EC9                     	;# 
  1072  0ECA                     	;# 
  1073  0ECB                     	;# 
  1074  0ECC                     	;# 
  1075  0F10                     	;# 
  1076  0F11                     	;# 
  1077  0F12                     	;# 
  1078  0F13                     	;# 
  1079  0F14                     	;# 
  1080  0F15                     	;# 
  1081  0F16                     	;# 
  1082  0F17                     	;# 
  1083  0F18                     	;# 
  1084  0F19                     	;# 
  1085  0F1A                     	;# 
  1086  0F1B                     	;# 
  1087  0F1C                     	;# 
  1088  0F1D                     	;# 
  1089  0F1E                     	;# 
  1090  0F1F                     	;# 
  1091  0F20                     	;# 
  1092  0F21                     	;# 
  1093  0F22                     	;# 
  1094  0F23                     	;# 
  1095  0F24                     	;# 
  1096  0F25                     	;# 
  1097  0F26                     	;# 
  1098  0F27                     	;# 
  1099  0F38                     	;# 
  1100  0F39                     	;# 
  1101  0F3A                     	;# 
  1102  0F3B                     	;# 
  1103  0F3C                     	;# 
  1104  0F3D                     	;# 
  1105  0F3E                     	;# 
  1106  0F3F                     	;# 
  1107  0F40                     	;# 
  1108  0F41                     	;# 
  1109  0F43                     	;# 
  1110  0F44                     	;# 
  1111  0F45                     	;# 
  1112  0F46                     	;# 
  1113  0F47                     	;# 
  1114  0F48                     	;# 
  1115  0F49                     	;# 
  1116  0F4A                     	;# 
  1117  0F4B                     	;# 
  1118  0F4C                     	;# 
  1119  0F4E                     	;# 
  1120  0F4F                     	;# 
  1121  0F50                     	;# 
  1122  0F51                     	;# 
  1123  0F52                     	;# 
  1124  0F53                     	;# 
  1125  0F54                     	;# 
  1126  0F55                     	;# 
  1127  0F56                     	;# 
  1128  0F57                     	;# 
  1129  0F65                     	;# 
  1130  0F68                     	;# 
  1131  0F69                     	;# 
  1132  0F6A                     	;# 
  1133  0F6B                     	;# 
  1134  0FE4                     	;# 
  1135  0FE5                     	;# 
  1136  0FE6                     	;# 
  1137  0FE7                     	;# 
  1138  0FE8                     	;# 
  1139  0FE9                     	;# 
  1140  0FEA                     	;# 
  1141  0FEB                     	;# 
  1142  0FED                     	;# 
  1143  0FEE                     	;# 
  1144  0FEF                     	;# 
  1145  0000                     	;# 
  1146  0001                     	;# 
  1147  0002                     	;# 
  1148  0003                     	;# 
  1149  0004                     	;# 
  1150  0005                     	;# 
  1151  0006                     	;# 
  1152  0007                     	;# 
  1153  0008                     	;# 
  1154  0009                     	;# 
  1155  000A                     	;# 
  1156  000B                     	;# 
  1157  000C                     	;# 
  1158  000D                     	;# 
  1159  000E                     	;# 
  1160  0010                     	;# 
  1161  0011                     	;# 
  1162  0012                     	;# 
  1163  0013                     	;# 
  1164  0016                     	;# 
  1165  0017                     	;# 
  1166  0018                     	;# 
  1167  001C                     	;# 
  1168  001C                     	;# 
  1169  001D                     	;# 
  1170  001D                     	;# 
  1171  001E                     	;# 
  1172  001F                     	;# 
  1173  008C                     	;# 
  1174  008C                     	;# 
  1175  008D                     	;# 
  1176  008E                     	;# 
  1177  008E                     	;# 
  1178  008F                     	;# 
  1179  0090                     	;# 
  1180  0090                     	;# 
  1181  0091                     	;# 
  1182  0093                     	;# 
  1183  0094                     	;# 
  1184  0095                     	;# 
  1185  0096                     	;# 
  1186  0097                     	;# 
  1187  0098                     	;# 
  1188  0099                     	;# 
  1189  009A                     	;# 
  1190  009B                     	;# 
  1191  009C                     	;# 
  1192  009D                     	;# 
  1193  009E                     	;# 
  1194  010C                     	;# 
  1195  010D                     	;# 
  1196  010E                     	;# 
  1197  010E                     	;# 
  1198  010F                     	;# 
  1199  0110                     	;# 
  1200  0110                     	;# 
  1201  0111                     	;# 
  1202  0112                     	;# 
  1203  0112                     	;# 
  1204  0113                     	;# 
  1205  0114                     	;# 
  1206  0114                     	;# 
  1207  0115                     	;# 
  1208  0116                     	;# 
  1209  0116                     	;# 
  1210  0117                     	;# 
  1211  0119                     	;# 
  1212  0119                     	;# 
  1213  0119                     	;# 
  1214  011A                     	;# 
  1215  011A                     	;# 
  1216  011A                     	;# 
  1217  011B                     	;# 
  1218  011B                     	;# 
  1219  011B                     	;# 
  1220  011B                     	;# 
  1221  011B                     	;# 
  1222  011C                     	;# 
  1223  011C                     	;# 
  1224  011C                     	;# 
  1225  011D                     	;# 
  1226  011D                     	;# 
  1227  011D                     	;# 
  1228  011E                     	;# 
  1229  011E                     	;# 
  1230  011E                     	;# 
  1231  011F                     	;# 
  1232  011F                     	;# 
  1233  011F                     	;# 
  1234  011F                     	;# 
  1235  011F                     	;# 
  1236  018C                     	;# 
  1237  018D                     	;# 
  1238  018E                     	;# 
  1239  018F                     	;# 
  1240  0190                     	;# 
  1241  0191                     	;# 
  1242  0192                     	;# 
  1243  0196                     	;# 
  1244  0197                     	;# 
  1245  0198                     	;# 
  1246  0199                     	;# 
  1247  019A                     	;# 
  1248  019B                     	;# 
  1249  019C                     	;# 
  1250  020C                     	;# 
  1251  020C                     	;# 
  1252  020D                     	;# 
  1253  020E                     	;# 
  1254  020F                     	;# 
  1255  020F                     	;# 
  1256  0210                     	;# 
  1257  0210                     	;# 
  1258  0211                     	;# 
  1259  0211                     	;# 
  1260  0212                     	;# 
  1261  0212                     	;# 
  1262  0213                     	;# 
  1263  0214                     	;# 
  1264  0215                     	;# 
  1265  0215                     	;# 
  1266  0216                     	;# 
  1267  0216                     	;# 
  1268  0217                     	;# 
  1269  0217                     	;# 
  1270  0218                     	;# 
  1271  0218                     	;# 
  1272  0219                     	;# 
  1273  021A                     	;# 
  1274  021B                     	;# 
  1275  021B                     	;# 
  1276  021C                     	;# 
  1277  021C                     	;# 
  1278  021D                     	;# 
  1279  021D                     	;# 
  1280  021E                     	;# 
  1281  021F                     	;# 
  1282  028C                     	;# 
  1283  028C                     	;# 
  1284  028D                     	;# 
  1285  028D                     	;# 
  1286  028E                     	;# 
  1287  028F                     	;# 
  1288  0290                     	;# 
  1289  0290                     	;# 
  1290  0291                     	;# 
  1291  0292                     	;# 
  1292  0292                     	;# 
  1293  0293                     	;# 
  1294  0293                     	;# 
  1295  0294                     	;# 
  1296  0295                     	;# 
  1297  0296                     	;# 
  1298  0296                     	;# 
  1299  0297                     	;# 
  1300  0298                     	;# 
  1301  0298                     	;# 
  1302  0299                     	;# 
  1303  0299                     	;# 
  1304  029A                     	;# 
  1305  029B                     	;# 
  1306  029C                     	;# 
  1307  029C                     	;# 
  1308  029D                     	;# 
  1309  030C                     	;# 
  1310  030C                     	;# 
  1311  030D                     	;# 
  1312  030E                     	;# 
  1313  030F                     	;# 
  1314  0310                     	;# 
  1315  0310                     	;# 
  1316  0311                     	;# 
  1317  0312                     	;# 
  1318  0313                     	;# 
  1319  0314                     	;# 
  1320  0314                     	;# 
  1321  0315                     	;# 
  1322  0316                     	;# 
  1323  0317                     	;# 
  1324  0318                     	;# 
  1325  0318                     	;# 
  1326  0319                     	;# 
  1327  031A                     	;# 
  1328  031B                     	;# 
  1329  031C                     	;# 
  1330  031C                     	;# 
  1331  031D                     	;# 
  1332  031E                     	;# 
  1333  031F                     	;# 
  1334  038C                     	;# 
  1335  038D                     	;# 
  1336  038E                     	;# 
  1337  0390                     	;# 
  1338  0391                     	;# 
  1339  0392                     	;# 
  1340  040C                     	;# 
  1341  040D                     	;# 
  1342  040E                     	;# 
  1343  040F                     	;# 
  1344  0410                     	;# 
  1345  0411                     	;# 
  1346  0416                     	;# 
  1347  0416                     	;# 
  1348  0417                     	;# 
  1349  0418                     	;# 
  1350  0418                     	;# 
  1351  0419                     	;# 
  1352  041A                     	;# 
  1353  041A                     	;# 
  1354  041B                     	;# 
  1355  041C                     	;# 
  1356  041C                     	;# 
  1357  041D                     	;# 
  1358  041E                     	;# 
  1359  041F                     	;# 
  1360  048C                     	;# 
  1361  048C                     	;# 
  1362  048D                     	;# 
  1363  048E                     	;# 
  1364  048F                     	;# 
  1365  048F                     	;# 
  1366  0490                     	;# 
  1367  0491                     	;# 
  1368  0492                     	;# 
  1369  0492                     	;# 
  1370  0493                     	;# 
  1371  0494                     	;# 
  1372  0495                     	;# 
  1373  0495                     	;# 
  1374  0496                     	;# 
  1375  0497                     	;# 
  1376  0498                     	;# 
  1377  0499                     	;# 
  1378  049A                     	;# 
  1379  049B                     	;# 
  1380  049C                     	;# 
  1381  049D                     	;# 
  1382  050C                     	;# 
  1383  050C                     	;# 
  1384  050D                     	;# 
  1385  050E                     	;# 
  1386  050F                     	;# 
  1387  050F                     	;# 
  1388  0510                     	;# 
  1389  0511                     	;# 
  1390  0512                     	;# 
  1391  0512                     	;# 
  1392  0513                     	;# 
  1393  0514                     	;# 
  1394  0515                     	;# 
  1395  0515                     	;# 
  1396  0516                     	;# 
  1397  0517                     	;# 
  1398  0518                     	;# 
  1399  0519                     	;# 
  1400  051A                     	;# 
  1401  051B                     	;# 
  1402  051C                     	;# 
  1403  051D                     	;# 
  1404  058C                     	;# 
  1405  058C                     	;# 
  1406  058D                     	;# 
  1407  058E                     	;# 
  1408  058F                     	;# 
  1409  058F                     	;# 
  1410  0590                     	;# 
  1411  0591                     	;# 
  1412  0592                     	;# 
  1413  0593                     	;# 
  1414  060C                     	;# 
  1415  060D                     	;# 
  1416  060E                     	;# 
  1417  060F                     	;# 
  1418  0610                     	;# 
  1419  0611                     	;# 
  1420  0612                     	;# 
  1421  0613                     	;# 
  1422  0614                     	;# 
  1423  0616                     	;# 
  1424  0617                     	;# 
  1425  0618                     	;# 
  1426  0619                     	;# 
  1427  061A                     	;# 
  1428  061B                     	;# 
  1429  061C                     	;# 
  1430  061D                     	;# 
  1431  061E                     	;# 
  1432  068C                     	;# 
  1433  068D                     	;# 
  1434  068E                     	;# 
  1435  068F                     	;# 
  1436  0690                     	;# 
  1437  0691                     	;# 
  1438  0692                     	;# 
  1439  0693                     	;# 
  1440  0694                     	;# 
  1441  070C                     	;# 
  1442  070D                     	;# 
  1443  070E                     	;# 
  1444  070F                     	;# 
  1445  0710                     	;# 
  1446  0711                     	;# 
  1447  0712                     	;# 
  1448  0713                     	;# 
  1449  0714                     	;# 
  1450  0716                     	;# 
  1451  0717                     	;# 
  1452  0718                     	;# 
  1453  0719                     	;# 
  1454  071A                     	;# 
  1455  071B                     	;# 
  1456  071C                     	;# 
  1457  071D                     	;# 
  1458  071E                     	;# 
  1459  0796                     	;# 
  1460  0797                     	;# 
  1461  0798                     	;# 
  1462  0799                     	;# 
  1463  079A                     	;# 
  1464  079B                     	;# 
  1465  080C                     	;# 
  1466  080D                     	;# 
  1467  080E                     	;# 
  1468  080F                     	;# 
  1469  0810                     	;# 
  1470  0811                     	;# 
  1471  0812                     	;# 
  1472  0813                     	;# 
  1473  0814                     	;# 
  1474  081A                     	;# 
  1475  081B                     	;# 
  1476  081C                     	;# 
  1477  081D                     	;# 
  1478  081E                     	;# 
  1479  081F                     	;# 
  1480  088C                     	;# 
  1481  088D                     	;# 
  1482  088E                     	;# 
  1483  088F                     	;# 
  1484  0890                     	;# 
  1485  0891                     	;# 
  1486  0892                     	;# 
  1487  0893                     	;# 
  1488  0895                     	;# 
  1489  0896                     	;# 
  1490  0897                     	;# 
  1491  0898                     	;# 
  1492  0899                     	;# 
  1493  089A                     	;# 
  1494  089B                     	;# 
  1495  090C                     	;# 
  1496  090E                     	;# 
  1497  090F                     	;# 
  1498  091F                     	;# 
  1499  091F                     	;# 
  1500  098F                     	;# 
  1501  098F                     	;# 
  1502  0990                     	;# 
  1503  0991                     	;# 
  1504  0992                     	;# 
  1505  0993                     	;# 
  1506  0994                     	;# 
  1507  0995                     	;# 
  1508  0996                     	;# 
  1509  0997                     	;# 
  1510  0E0F                     	;# 
  1511  0E10                     	;# 
  1512  0E11                     	;# 
  1513  0E12                     	;# 
  1514  0E13                     	;# 
  1515  0E14                     	;# 
  1516  0E15                     	;# 
  1517  0E16                     	;# 
  1518  0E17                     	;# 
  1519  0E18                     	;# 
  1520  0E19                     	;# 
  1521  0E1A                     	;# 
  1522  0E1B                     	;# 
  1523  0E1C                     	;# 
  1524  0E1D                     	;# 
  1525  0E1E                     	;# 
  1526  0E1F                     	;# 
  1527  0E20                     	;# 
  1528  0E21                     	;# 
  1529  0E22                     	;# 
  1530  0E23                     	;# 
  1531  0E24                     	;# 
  1532  0E25                     	;# 
  1533  0E26                     	;# 
  1534  0E27                     	;# 
  1535  0E28                     	;# 
  1536  0E29                     	;# 
  1537  0E2A                     	;# 
  1538  0E2B                     	;# 
  1539  0E2C                     	;# 
  1540  0E2D                     	;# 
  1541  0E2E                     	;# 
  1542  0E2F                     	;# 
  1543  0E30                     	;# 
  1544  0E31                     	;# 
  1545  0E32                     	;# 
  1546  0E33                     	;# 
  1547  0E34                     	;# 
  1548  0E35                     	;# 
  1549  0E36                     	;# 
  1550  0E37                     	;# 
  1551  0E8F                     	;# 
  1552  0E90                     	;# 
  1553  0E91                     	;# 
  1554  0E92                     	;# 
  1555  0E93                     	;# 
  1556  0E94                     	;# 
  1557  0E95                     	;# 
  1558  0E96                     	;# 
  1559  0E97                     	;# 
  1560  0E9C                     	;# 
  1561  0E9D                     	;# 
  1562  0E9E                     	;# 
  1563  0EA1                     	;# 
  1564  0EA2                     	;# 
  1565  0EA3                     	;# 
  1566  0EA4                     	;# 
  1567  0EA5                     	;# 
  1568  0EA9                     	;# 
  1569  0EAA                     	;# 
  1570  0EAB                     	;# 
  1571  0EAC                     	;# 
  1572  0EB1                     	;# 
  1573  0EB2                     	;# 
  1574  0EB3                     	;# 
  1575  0EB8                     	;# 
  1576  0EB9                     	;# 
  1577  0EBA                     	;# 
  1578  0EBB                     	;# 
  1579  0EBC                     	;# 
  1580  0EBD                     	;# 
  1581  0EBE                     	;# 
  1582  0EC3                     	;# 
  1583  0EC5                     	;# 
  1584  0EC6                     	;# 
  1585  0EC7                     	;# 
  1586  0EC8                     	;# 
  1587  0EC9                     	;# 
  1588  0ECA                     	;# 
  1589  0ECB                     	;# 
  1590  0ECC                     	;# 
  1591  0F10                     	;# 
  1592  0F11                     	;# 
  1593  0F12                     	;# 
  1594  0F13                     	;# 
  1595  0F14                     	;# 
  1596  0F15                     	;# 
  1597  0F16                     	;# 
  1598  0F17                     	;# 
  1599  0F18                     	;# 
  1600  0F19                     	;# 
  1601  0F1A                     	;# 
  1602  0F1B                     	;# 
  1603  0F1C                     	;# 
  1604  0F1D                     	;# 
  1605  0F1E                     	;# 
  1606  0F1F                     	;# 
  1607  0F20                     	;# 
  1608  0F21                     	;# 
  1609  0F22                     	;# 
  1610  0F23                     	;# 
  1611  0F24                     	;# 
  1612  0F25                     	;# 
  1613  0F26                     	;# 
  1614  0F27                     	;# 
  1615  0F38                     	;# 
  1616  0F39                     	;# 
  1617  0F3A                     	;# 
  1618  0F3B                     	;# 
  1619  0F3C                     	;# 
  1620  0F3D                     	;# 
  1621  0F3E                     	;# 
  1622  0F3F                     	;# 
  1623  0F40                     	;# 
  1624  0F41                     	;# 
  1625  0F43                     	;# 
  1626  0F44                     	;# 
  1627  0F45                     	;# 
  1628  0F46                     	;# 
  1629  0F47                     	;# 
  1630  0F48                     	;# 
  1631  0F49                     	;# 
  1632  0F4A                     	;# 
  1633  0F4B                     	;# 
  1634  0F4C                     	;# 
  1635  0F4E                     	;# 
  1636  0F4F                     	;# 
  1637  0F50                     	;# 
  1638  0F51                     	;# 
  1639  0F52                     	;# 
  1640  0F53                     	;# 
  1641  0F54                     	;# 
  1642  0F55                     	;# 
  1643  0F56                     	;# 
  1644  0F57                     	;# 
  1645  0F65                     	;# 
  1646  0F68                     	;# 
  1647  0F69                     	;# 
  1648  0F6A                     	;# 
  1649  0F6B                     	;# 
  1650  0FE4                     	;# 
  1651  0FE5                     	;# 
  1652  0FE6                     	;# 
  1653  0FE7                     	;# 
  1654  0FE8                     	;# 
  1655  0FE9                     	;# 
  1656  0FEA                     	;# 
  1657  0FEB                     	;# 
  1658  0FED                     	;# 
  1659  0FEE                     	;# 
  1660  0FEF                     	;# 
  1661  0000                     	;# 
  1662  0001                     	;# 
  1663  0002                     	;# 
  1664  0003                     	;# 
  1665  0004                     	;# 
  1666  0005                     	;# 
  1667  0006                     	;# 
  1668  0007                     	;# 
  1669  0008                     	;# 
  1670  0009                     	;# 
  1671  000A                     	;# 
  1672  000B                     	;# 
  1673  000C                     	;# 
  1674  000D                     	;# 
  1675  000E                     	;# 
  1676  0010                     	;# 
  1677  0011                     	;# 
  1678  0012                     	;# 
  1679  0013                     	;# 
  1680  0016                     	;# 
  1681  0017                     	;# 
  1682  0018                     	;# 
  1683  001C                     	;# 
  1684  001C                     	;# 
  1685  001D                     	;# 
  1686  001D                     	;# 
  1687  001E                     	;# 
  1688  001F                     	;# 
  1689  008C                     	;# 
  1690  008C                     	;# 
  1691  008D                     	;# 
  1692  008E                     	;# 
  1693  008E                     	;# 
  1694  008F                     	;# 
  1695  0090                     	;# 
  1696  0090                     	;# 
  1697  0091                     	;# 
  1698  0093                     	;# 
  1699  0094                     	;# 
  1700  0095                     	;# 
  1701  0096                     	;# 
  1702  0097                     	;# 
  1703  0098                     	;# 
  1704  0099                     	;# 
  1705  009A                     	;# 
  1706  009B                     	;# 
  1707  009C                     	;# 
  1708  009D                     	;# 
  1709  009E                     	;# 
  1710  010C                     	;# 
  1711  010D                     	;# 
  1712  010E                     	;# 
  1713  010E                     	;# 
  1714  010F                     	;# 
  1715  0110                     	;# 
  1716  0110                     	;# 
  1717  0111                     	;# 
  1718  0112                     	;# 
  1719  0112                     	;# 
  1720  0113                     	;# 
  1721  0114                     	;# 
  1722  0114                     	;# 
  1723  0115                     	;# 
  1724  0116                     	;# 
  1725  0116                     	;# 
  1726  0117                     	;# 
  1727  0119                     	;# 
  1728  0119                     	;# 
  1729  0119                     	;# 
  1730  011A                     	;# 
  1731  011A                     	;# 
  1732  011A                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011B                     	;# 
  1736  011B                     	;# 
  1737  011B                     	;# 
  1738  011C                     	;# 
  1739  011C                     	;# 
  1740  011C                     	;# 
  1741  011D                     	;# 
  1742  011D                     	;# 
  1743  011D                     	;# 
  1744  011E                     	;# 
  1745  011E                     	;# 
  1746  011E                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  011F                     	;# 
  1750  011F                     	;# 
  1751  011F                     	;# 
  1752  018C                     	;# 
  1753  018D                     	;# 
  1754  018E                     	;# 
  1755  018F                     	;# 
  1756  0190                     	;# 
  1757  0191                     	;# 
  1758  0192                     	;# 
  1759  0196                     	;# 
  1760  0197                     	;# 
  1761  0198                     	;# 
  1762  0199                     	;# 
  1763  019A                     	;# 
  1764  019B                     	;# 
  1765  019C                     	;# 
  1766  020C                     	;# 
  1767  020C                     	;# 
  1768  020D                     	;# 
  1769  020E                     	;# 
  1770  020F                     	;# 
  1771  020F                     	;# 
  1772  0210                     	;# 
  1773  0210                     	;# 
  1774  0211                     	;# 
  1775  0211                     	;# 
  1776  0212                     	;# 
  1777  0212                     	;# 
  1778  0213                     	;# 
  1779  0214                     	;# 
  1780  0215                     	;# 
  1781  0215                     	;# 
  1782  0216                     	;# 
  1783  0216                     	;# 
  1784  0217                     	;# 
  1785  0217                     	;# 
  1786  0218                     	;# 
  1787  0218                     	;# 
  1788  0219                     	;# 
  1789  021A                     	;# 
  1790  021B                     	;# 
  1791  021B                     	;# 
  1792  021C                     	;# 
  1793  021C                     	;# 
  1794  021D                     	;# 
  1795  021D                     	;# 
  1796  021E                     	;# 
  1797  021F                     	;# 
  1798  028C                     	;# 
  1799  028C                     	;# 
  1800  028D                     	;# 
  1801  028D                     	;# 
  1802  028E                     	;# 
  1803  028F                     	;# 
  1804  0290                     	;# 
  1805  0290                     	;# 
  1806  0291                     	;# 
  1807  0292                     	;# 
  1808  0292                     	;# 
  1809  0293                     	;# 
  1810  0293                     	;# 
  1811  0294                     	;# 
  1812  0295                     	;# 
  1813  0296                     	;# 
  1814  0296                     	;# 
  1815  0297                     	;# 
  1816  0298                     	;# 
  1817  0298                     	;# 
  1818  0299                     	;# 
  1819  0299                     	;# 
  1820  029A                     	;# 
  1821  029B                     	;# 
  1822  029C                     	;# 
  1823  029C                     	;# 
  1824  029D                     	;# 
  1825  030C                     	;# 
  1826  030C                     	;# 
  1827  030D                     	;# 
  1828  030E                     	;# 
  1829  030F                     	;# 
  1830  0310                     	;# 
  1831  0310                     	;# 
  1832  0311                     	;# 
  1833  0312                     	;# 
  1834  0313                     	;# 
  1835  0314                     	;# 
  1836  0314                     	;# 
  1837  0315                     	;# 
  1838  0316                     	;# 
  1839  0317                     	;# 
  1840  0318                     	;# 
  1841  0318                     	;# 
  1842  0319                     	;# 
  1843  031A                     	;# 
  1844  031B                     	;# 
  1845  031C                     	;# 
  1846  031C                     	;# 
  1847  031D                     	;# 
  1848  031E                     	;# 
  1849  031F                     	;# 
  1850  038C                     	;# 
  1851  038D                     	;# 
  1852  038E                     	;# 
  1853  0390                     	;# 
  1854  0391                     	;# 
  1855  0392                     	;# 
  1856  040C                     	;# 
  1857  040D                     	;# 
  1858  040E                     	;# 
  1859  040F                     	;# 
  1860  0410                     	;# 
  1861  0411                     	;# 
  1862  0416                     	;# 
  1863  0416                     	;# 
  1864  0417                     	;# 
  1865  0418                     	;# 
  1866  0418                     	;# 
  1867  0419                     	;# 
  1868  041A                     	;# 
  1869  041A                     	;# 
  1870  041B                     	;# 
  1871  041C                     	;# 
  1872  041C                     	;# 
  1873  041D                     	;# 
  1874  041E                     	;# 
  1875  041F                     	;# 
  1876  048C                     	;# 
  1877  048C                     	;# 
  1878  048D                     	;# 
  1879  048E                     	;# 
  1880  048F                     	;# 
  1881  048F                     	;# 
  1882  0490                     	;# 
  1883  0491                     	;# 
  1884  0492                     	;# 
  1885  0492                     	;# 
  1886  0493                     	;# 
  1887  0494                     	;# 
  1888  0495                     	;# 
  1889  0495                     	;# 
  1890  0496                     	;# 
  1891  0497                     	;# 
  1892  0498                     	;# 
  1893  0499                     	;# 
  1894  049A                     	;# 
  1895  049B                     	;# 
  1896  049C                     	;# 
  1897  049D                     	;# 
  1898  050C                     	;# 
  1899  050C                     	;# 
  1900  050D                     	;# 
  1901  050E                     	;# 
  1902  050F                     	;# 
  1903  050F                     	;# 
  1904  0510                     	;# 
  1905  0511                     	;# 
  1906  0512                     	;# 
  1907  0512                     	;# 
  1908  0513                     	;# 
  1909  0514                     	;# 
  1910  0515                     	;# 
  1911  0515                     	;# 
  1912  0516                     	;# 
  1913  0517                     	;# 
  1914  0518                     	;# 
  1915  0519                     	;# 
  1916  051A                     	;# 
  1917  051B                     	;# 
  1918  051C                     	;# 
  1919  051D                     	;# 
  1920  058C                     	;# 
  1921  058C                     	;# 
  1922  058D                     	;# 
  1923  058E                     	;# 
  1924  058F                     	;# 
  1925  058F                     	;# 
  1926  0590                     	;# 
  1927  0591                     	;# 
  1928  0592                     	;# 
  1929  0593                     	;# 
  1930  060C                     	;# 
  1931  060D                     	;# 
  1932  060E                     	;# 
  1933  060F                     	;# 
  1934  0610                     	;# 
  1935  0611                     	;# 
  1936  0612                     	;# 
  1937  0613                     	;# 
  1938  0614                     	;# 
  1939  0616                     	;# 
  1940  0617                     	;# 
  1941  0618                     	;# 
  1942  0619                     	;# 
  1943  061A                     	;# 
  1944  061B                     	;# 
  1945  061C                     	;# 
  1946  061D                     	;# 
  1947  061E                     	;# 
  1948  068C                     	;# 
  1949  068D                     	;# 
  1950  068E                     	;# 
  1951  068F                     	;# 
  1952  0690                     	;# 
  1953  0691                     	;# 
  1954  0692                     	;# 
  1955  0693                     	;# 
  1956  0694                     	;# 
  1957  070C                     	;# 
  1958  070D                     	;# 
  1959  070E                     	;# 
  1960  070F                     	;# 
  1961  0710                     	;# 
  1962  0711                     	;# 
  1963  0712                     	;# 
  1964  0713                     	;# 
  1965  0714                     	;# 
  1966  0716                     	;# 
  1967  0717                     	;# 
  1968  0718                     	;# 
  1969  0719                     	;# 
  1970  071A                     	;# 
  1971  071B                     	;# 
  1972  071C                     	;# 
  1973  071D                     	;# 
  1974  071E                     	;# 
  1975  0796                     	;# 
  1976  0797                     	;# 
  1977  0798                     	;# 
  1978  0799                     	;# 
  1979  079A                     	;# 
  1980  079B                     	;# 
  1981  080C                     	;# 
  1982  080D                     	;# 
  1983  080E                     	;# 
  1984  080F                     	;# 
  1985  0810                     	;# 
  1986  0811                     	;# 
  1987  0812                     	;# 
  1988  0813                     	;# 
  1989  0814                     	;# 
  1990  081A                     	;# 
  1991  081B                     	;# 
  1992  081C                     	;# 
  1993  081D                     	;# 
  1994  081E                     	;# 
  1995  081F                     	;# 
  1996  088C                     	;# 
  1997  088D                     	;# 
  1998  088E                     	;# 
  1999  088F                     	;# 
  2000  0890                     	;# 
  2001  0891                     	;# 
  2002  0892                     	;# 
  2003  0893                     	;# 
  2004  0895                     	;# 
  2005  0896                     	;# 
  2006  0897                     	;# 
  2007  0898                     	;# 
  2008  0899                     	;# 
  2009  089A                     	;# 
  2010  089B                     	;# 
  2011  090C                     	;# 
  2012  090E                     	;# 
  2013  090F                     	;# 
  2014  091F                     	;# 
  2015  091F                     	;# 
  2016  098F                     	;# 
  2017  098F                     	;# 
  2018  0990                     	;# 
  2019  0991                     	;# 
  2020  0992                     	;# 
  2021  0993                     	;# 
  2022  0994                     	;# 
  2023  0995                     	;# 
  2024  0996                     	;# 
  2025  0997                     	;# 
  2026  0E0F                     	;# 
  2027  0E10                     	;# 
  2028  0E11                     	;# 
  2029  0E12                     	;# 
  2030  0E13                     	;# 
  2031  0E14                     	;# 
  2032  0E15                     	;# 
  2033  0E16                     	;# 
  2034  0E17                     	;# 
  2035  0E18                     	;# 
  2036  0E19                     	;# 
  2037  0E1A                     	;# 
  2038  0E1B                     	;# 
  2039  0E1C                     	;# 
  2040  0E1D                     	;# 
  2041  0E1E                     	;# 
  2042  0E1F                     	;# 
  2043  0E20                     	;# 
  2044  0E21                     	;# 
  2045  0E22                     	;# 
  2046  0E23                     	;# 
  2047  0E24                     	;# 
  2048  0E25                     	;# 
  2049  0E26                     	;# 
  2050  0E27                     	;# 
  2051  0E28                     	;# 
  2052  0E29                     	;# 
  2053  0E2A                     	;# 
  2054  0E2B                     	;# 
  2055  0E2C                     	;# 
  2056  0E2D                     	;# 
  2057  0E2E                     	;# 
  2058  0E2F                     	;# 
  2059  0E30                     	;# 
  2060  0E31                     	;# 
  2061  0E32                     	;# 
  2062  0E33                     	;# 
  2063  0E34                     	;# 
  2064  0E35                     	;# 
  2065  0E36                     	;# 
  2066  0E37                     	;# 
  2067  0E8F                     	;# 
  2068  0E90                     	;# 
  2069  0E91                     	;# 
  2070  0E92                     	;# 
  2071  0E93                     	;# 
  2072  0E94                     	;# 
  2073  0E95                     	;# 
  2074  0E96                     	;# 
  2075  0E97                     	;# 
  2076  0E9C                     	;# 
  2077  0E9D                     	;# 
  2078  0E9E                     	;# 
  2079  0EA1                     	;# 
  2080  0EA2                     	;# 
  2081  0EA3                     	;# 
  2082  0EA4                     	;# 
  2083  0EA5                     	;# 
  2084  0EA9                     	;# 
  2085  0EAA                     	;# 
  2086  0EAB                     	;# 
  2087  0EAC                     	;# 
  2088  0EB1                     	;# 
  2089  0EB2                     	;# 
  2090  0EB3                     	;# 
  2091  0EB8                     	;# 
  2092  0EB9                     	;# 
  2093  0EBA                     	;# 
  2094  0EBB                     	;# 
  2095  0EBC                     	;# 
  2096  0EBD                     	;# 
  2097  0EBE                     	;# 
  2098  0EC3                     	;# 
  2099  0EC5                     	;# 
  2100  0EC6                     	;# 
  2101  0EC7                     	;# 
  2102  0EC8                     	;# 
  2103  0EC9                     	;# 
  2104  0ECA                     	;# 
  2105  0ECB                     	;# 
  2106  0ECC                     	;# 
  2107  0F10                     	;# 
  2108  0F11                     	;# 
  2109  0F12                     	;# 
  2110  0F13                     	;# 
  2111  0F14                     	;# 
  2112  0F15                     	;# 
  2113  0F16                     	;# 
  2114  0F17                     	;# 
  2115  0F18                     	;# 
  2116  0F19                     	;# 
  2117  0F1A                     	;# 
  2118  0F1B                     	;# 
  2119  0F1C                     	;# 
  2120  0F1D                     	;# 
  2121  0F1E                     	;# 
  2122  0F1F                     	;# 
  2123  0F20                     	;# 
  2124  0F21                     	;# 
  2125  0F22                     	;# 
  2126  0F23                     	;# 
  2127  0F24                     	;# 
  2128  0F25                     	;# 
  2129  0F26                     	;# 
  2130  0F27                     	;# 
  2131  0F38                     	;# 
  2132  0F39                     	;# 
  2133  0F3A                     	;# 
  2134  0F3B                     	;# 
  2135  0F3C                     	;# 
  2136  0F3D                     	;# 
  2137  0F3E                     	;# 
  2138  0F3F                     	;# 
  2139  0F40                     	;# 
  2140  0F41                     	;# 
  2141  0F43                     	;# 
  2142  0F44                     	;# 
  2143  0F45                     	;# 
  2144  0F46                     	;# 
  2145  0F47                     	;# 
  2146  0F48                     	;# 
  2147  0F49                     	;# 
  2148  0F4A                     	;# 
  2149  0F4B                     	;# 
  2150  0F4C                     	;# 
  2151  0F4E                     	;# 
  2152  0F4F                     	;# 
  2153  0F50                     	;# 
  2154  0F51                     	;# 
  2155  0F52                     	;# 
  2156  0F53                     	;# 
  2157  0F54                     	;# 
  2158  0F55                     	;# 
  2159  0F56                     	;# 
  2160  0F57                     	;# 
  2161  0F65                     	;# 
  2162  0F68                     	;# 
  2163  0F69                     	;# 
  2164  0F6A                     	;# 
  2165  0F6B                     	;# 
  2166  0FE4                     	;# 
  2167  0FE5                     	;# 
  2168  0FE6                     	;# 
  2169  0FE7                     	;# 
  2170  0FE8                     	;# 
  2171  0FE9                     	;# 
  2172  0FEA                     	;# 
  2173  0FEB                     	;# 
  2174  0FED                     	;# 
  2175  0FEE                     	;# 
  2176  0FEF                     	;# 
  2177  0000                     	;# 
  2178  0001                     	;# 
  2179  0002                     	;# 
  2180  0003                     	;# 
  2181  0004                     	;# 
  2182  0005                     	;# 
  2183  0006                     	;# 
  2184  0007                     	;# 
  2185  0008                     	;# 
  2186  0009                     	;# 
  2187  000A                     	;# 
  2188  000B                     	;# 
  2189  000C                     	;# 
  2190  000D                     	;# 
  2191  000E                     	;# 
  2192  0010                     	;# 
  2193  0011                     	;# 
  2194  0012                     	;# 
  2195  0013                     	;# 
  2196  0016                     	;# 
  2197  0017                     	;# 
  2198  0018                     	;# 
  2199  001C                     	;# 
  2200  001C                     	;# 
  2201  001D                     	;# 
  2202  001D                     	;# 
  2203  001E                     	;# 
  2204  001F                     	;# 
  2205  008C                     	;# 
  2206  008C                     	;# 
  2207  008D                     	;# 
  2208  008E                     	;# 
  2209  008E                     	;# 
  2210  008F                     	;# 
  2211  0090                     	;# 
  2212  0090                     	;# 
  2213  0091                     	;# 
  2214  0093                     	;# 
  2215  0094                     	;# 
  2216  0095                     	;# 
  2217  0096                     	;# 
  2218  0097                     	;# 
  2219  0098                     	;# 
  2220  0099                     	;# 
  2221  009A                     	;# 
  2222  009B                     	;# 
  2223  009C                     	;# 
  2224  009D                     	;# 
  2225  009E                     	;# 
  2226  010C                     	;# 
  2227  010D                     	;# 
  2228  010E                     	;# 
  2229  010E                     	;# 
  2230  010F                     	;# 
  2231  0110                     	;# 
  2232  0110                     	;# 
  2233  0111                     	;# 
  2234  0112                     	;# 
  2235  0112                     	;# 
  2236  0113                     	;# 
  2237  0114                     	;# 
  2238  0114                     	;# 
  2239  0115                     	;# 
  2240  0116                     	;# 
  2241  0116                     	;# 
  2242  0117                     	;# 
  2243  0119                     	;# 
  2244  0119                     	;# 
  2245  0119                     	;# 
  2246  011A                     	;# 
  2247  011A                     	;# 
  2248  011A                     	;# 
  2249  011B                     	;# 
  2250  011B                     	;# 
  2251  011B                     	;# 
  2252  011B                     	;# 
  2253  011B                     	;# 
  2254  011C                     	;# 
  2255  011C                     	;# 
  2256  011C                     	;# 
  2257  011D                     	;# 
  2258  011D                     	;# 
  2259  011D                     	;# 
  2260  011E                     	;# 
  2261  011E                     	;# 
  2262  011E                     	;# 
  2263  011F                     	;# 
  2264  011F                     	;# 
  2265  011F                     	;# 
  2266  011F                     	;# 
  2267  011F                     	;# 
  2268  018C                     	;# 
  2269  018D                     	;# 
  2270  018E                     	;# 
  2271  018F                     	;# 
  2272  0190                     	;# 
  2273  0191                     	;# 
  2274  0192                     	;# 
  2275  0196                     	;# 
  2276  0197                     	;# 
  2277  0198                     	;# 
  2278  0199                     	;# 
  2279  019A                     	;# 
  2280  019B                     	;# 
  2281  019C                     	;# 
  2282  020C                     	;# 
  2283  020C                     	;# 
  2284  020D                     	;# 
  2285  020E                     	;# 
  2286  020F                     	;# 
  2287  020F                     	;# 
  2288  0210                     	;# 
  2289  0210                     	;# 
  2290  0211                     	;# 
  2291  0211                     	;# 
  2292  0212                     	;# 
  2293  0212                     	;# 
  2294  0213                     	;# 
  2295  0214                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0216                     	;# 
  2299  0216                     	;# 
  2300  0217                     	;# 
  2301  0217                     	;# 
  2302  0218                     	;# 
  2303  0218                     	;# 
  2304  0219                     	;# 
  2305  021A                     	;# 
  2306  021B                     	;# 
  2307  021B                     	;# 
  2308  021C                     	;# 
  2309  021C                     	;# 
  2310  021D                     	;# 
  2311  021D                     	;# 
  2312  021E                     	;# 
  2313  021F                     	;# 
  2314  028C                     	;# 
  2315  028C                     	;# 
  2316  028D                     	;# 
  2317  028D                     	;# 
  2318  028E                     	;# 
  2319  028F                     	;# 
  2320  0290                     	;# 
  2321  0290                     	;# 
  2322  0291                     	;# 
  2323  0292                     	;# 
  2324  0292                     	;# 
  2325  0293                     	;# 
  2326  0293                     	;# 
  2327  0294                     	;# 
  2328  0295                     	;# 
  2329  0296                     	;# 
  2330  0296                     	;# 
  2331  0297                     	;# 
  2332  0298                     	;# 
  2333  0298                     	;# 
  2334  0299                     	;# 
  2335  0299                     	;# 
  2336  029A                     	;# 
  2337  029B                     	;# 
  2338  029C                     	;# 
  2339  029C                     	;# 
  2340  029D                     	;# 
  2341  030C                     	;# 
  2342  030C                     	;# 
  2343  030D                     	;# 
  2344  030E                     	;# 
  2345  030F                     	;# 
  2346  0310                     	;# 
  2347  0310                     	;# 
  2348  0311                     	;# 
  2349  0312                     	;# 
  2350  0313                     	;# 
  2351  0314                     	;# 
  2352  0314                     	;# 
  2353  0315                     	;# 
  2354  0316                     	;# 
  2355  0317                     	;# 
  2356  0318                     	;# 
  2357  0318                     	;# 
  2358  0319                     	;# 
  2359  031A                     	;# 
  2360  031B                     	;# 
  2361  031C                     	;# 
  2362  031C                     	;# 
  2363  031D                     	;# 
  2364  031E                     	;# 
  2365  031F                     	;# 
  2366  038C                     	;# 
  2367  038D                     	;# 
  2368  038E                     	;# 
  2369  0390                     	;# 
  2370  0391                     	;# 
  2371  0392                     	;# 
  2372  040C                     	;# 
  2373  040D                     	;# 
  2374  040E                     	;# 
  2375  040F                     	;# 
  2376  0410                     	;# 
  2377  0411                     	;# 
  2378  0416                     	;# 
  2379  0416                     	;# 
  2380  0417                     	;# 
  2381  0418                     	;# 
  2382  0418                     	;# 
  2383  0419                     	;# 
  2384  041A                     	;# 
  2385  041A                     	;# 
  2386  041B                     	;# 
  2387  041C                     	;# 
  2388  041C                     	;# 
  2389  041D                     	;# 
  2390  041E                     	;# 
  2391  041F                     	;# 
  2392  048C                     	;# 
  2393  048C                     	;# 
  2394  048D                     	;# 
  2395  048E                     	;# 
  2396  048F                     	;# 
  2397  048F                     	;# 
  2398  0490                     	;# 
  2399  0491                     	;# 
  2400  0492                     	;# 
  2401  0492                     	;# 
  2402  0493                     	;# 
  2403  0494                     	;# 
  2404  0495                     	;# 
  2405  0495                     	;# 
  2406  0496                     	;# 
  2407  0497                     	;# 
  2408  0498                     	;# 
  2409  0499                     	;# 
  2410  049A                     	;# 
  2411  049B                     	;# 
  2412  049C                     	;# 
  2413  049D                     	;# 
  2414  050C                     	;# 
  2415  050C                     	;# 
  2416  050D                     	;# 
  2417  050E                     	;# 
  2418  050F                     	;# 
  2419  050F                     	;# 
  2420  0510                     	;# 
  2421  0511                     	;# 
  2422  0512                     	;# 
  2423  0512                     	;# 
  2424  0513                     	;# 
  2425  0514                     	;# 
  2426  0515                     	;# 
  2427  0515                     	;# 
  2428  0516                     	;# 
  2429  0517                     	;# 
  2430  0518                     	;# 
  2431  0519                     	;# 
  2432  051A                     	;# 
  2433  051B                     	;# 
  2434  051C                     	;# 
  2435  051D                     	;# 
  2436  058C                     	;# 
  2437  058C                     	;# 
  2438  058D                     	;# 
  2439  058E                     	;# 
  2440  058F                     	;# 
  2441  058F                     	;# 
  2442  0590                     	;# 
  2443  0591                     	;# 
  2444  0592                     	;# 
  2445  0593                     	;# 
  2446  060C                     	;# 
  2447  060D                     	;# 
  2448  060E                     	;# 
  2449  060F                     	;# 
  2450  0610                     	;# 
  2451  0611                     	;# 
  2452  0612                     	;# 
  2453  0613                     	;# 
  2454  0614                     	;# 
  2455  0616                     	;# 
  2456  0617                     	;# 
  2457  0618                     	;# 
  2458  0619                     	;# 
  2459  061A                     	;# 
  2460  061B                     	;# 
  2461  061C                     	;# 
  2462  061D                     	;# 
  2463  061E                     	;# 
  2464  068C                     	;# 
  2465  068D                     	;# 
  2466  068E                     	;# 
  2467  068F                     	;# 
  2468  0690                     	;# 
  2469  0691                     	;# 
  2470  0692                     	;# 
  2471  0693                     	;# 
  2472  0694                     	;# 
  2473  070C                     	;# 
  2474  070D                     	;# 
  2475  070E                     	;# 
  2476  070F                     	;# 
  2477  0710                     	;# 
  2478  0711                     	;# 
  2479  0712                     	;# 
  2480  0713                     	;# 
  2481  0714                     	;# 
  2482  0716                     	;# 
  2483  0717                     	;# 
  2484  0718                     	;# 
  2485  0719                     	;# 
  2486  071A                     	;# 
  2487  071B                     	;# 
  2488  071C                     	;# 
  2489  071D                     	;# 
  2490  071E                     	;# 
  2491  0796                     	;# 
  2492  0797                     	;# 
  2493  0798                     	;# 
  2494  0799                     	;# 
  2495  079A                     	;# 
  2496  079B                     	;# 
  2497  080C                     	;# 
  2498  080D                     	;# 
  2499  080E                     	;# 
  2500  080F                     	;# 
  2501  0810                     	;# 
  2502  0811                     	;# 
  2503  0812                     	;# 
  2504  0813                     	;# 
  2505  0814                     	;# 
  2506  081A                     	;# 
  2507  081B                     	;# 
  2508  081C                     	;# 
  2509  081D                     	;# 
  2510  081E                     	;# 
  2511  081F                     	;# 
  2512  088C                     	;# 
  2513  088D                     	;# 
  2514  088E                     	;# 
  2515  088F                     	;# 
  2516  0890                     	;# 
  2517  0891                     	;# 
  2518  0892                     	;# 
  2519  0893                     	;# 
  2520  0895                     	;# 
  2521  0896                     	;# 
  2522  0897                     	;# 
  2523  0898                     	;# 
  2524  0899                     	;# 
  2525  089A                     	;# 
  2526  089B                     	;# 
  2527  090C                     	;# 
  2528  090E                     	;# 
  2529  090F                     	;# 
  2530  091F                     	;# 
  2531  091F                     	;# 
  2532  098F                     	;# 
  2533  098F                     	;# 
  2534  0990                     	;# 
  2535  0991                     	;# 
  2536  0992                     	;# 
  2537  0993                     	;# 
  2538  0994                     	;# 
  2539  0995                     	;# 
  2540  0996                     	;# 
  2541  0997                     	;# 
  2542  0E0F                     	;# 
  2543  0E10                     	;# 
  2544  0E11                     	;# 
  2545  0E12                     	;# 
  2546  0E13                     	;# 
  2547  0E14                     	;# 
  2548  0E15                     	;# 
  2549  0E16                     	;# 
  2550  0E17                     	;# 
  2551  0E18                     	;# 
  2552  0E19                     	;# 
  2553  0E1A                     	;# 
  2554  0E1B                     	;# 
  2555  0E1C                     	;# 
  2556  0E1D                     	;# 
  2557  0E1E                     	;# 
  2558  0E1F                     	;# 
  2559  0E20                     	;# 
  2560  0E21                     	;# 
  2561  0E22                     	;# 
  2562  0E23                     	;# 
  2563  0E24                     	;# 
  2564  0E25                     	;# 
  2565  0E26                     	;# 
  2566  0E27                     	;# 
  2567  0E28                     	;# 
  2568  0E29                     	;# 
  2569  0E2A                     	;# 
  2570  0E2B                     	;# 
  2571  0E2C                     	;# 
  2572  0E2D                     	;# 
  2573  0E2E                     	;# 
  2574  0E2F                     	;# 
  2575  0E30                     	;# 
  2576  0E31                     	;# 
  2577  0E32                     	;# 
  2578  0E33                     	;# 
  2579  0E34                     	;# 
  2580  0E35                     	;# 
  2581  0E36                     	;# 
  2582  0E37                     	;# 
  2583  0E8F                     	;# 
  2584  0E90                     	;# 
  2585  0E91                     	;# 
  2586  0E92                     	;# 
  2587  0E93                     	;# 
  2588  0E94                     	;# 
  2589  0E95                     	;# 
  2590  0E96                     	;# 
  2591  0E97                     	;# 
  2592  0E9C                     	;# 
  2593  0E9D                     	;# 
  2594  0E9E                     	;# 
  2595  0EA1                     	;# 
  2596  0EA2                     	;# 
  2597  0EA3                     	;# 
  2598  0EA4                     	;# 
  2599  0EA5                     	;# 
  2600  0EA9                     	;# 
  2601  0EAA                     	;# 
  2602  0EAB                     	;# 
  2603  0EAC                     	;# 
  2604  0EB1                     	;# 
  2605  0EB2                     	;# 
  2606  0EB3                     	;# 
  2607  0EB8                     	;# 
  2608  0EB9                     	;# 
  2609  0EBA                     	;# 
  2610  0EBB                     	;# 
  2611  0EBC                     	;# 
  2612  0EBD                     	;# 
  2613  0EBE                     	;# 
  2614  0EC3                     	;# 
  2615  0EC5                     	;# 
  2616  0EC6                     	;# 
  2617  0EC7                     	;# 
  2618  0EC8                     	;# 
  2619  0EC9                     	;# 
  2620  0ECA                     	;# 
  2621  0ECB                     	;# 
  2622  0ECC                     	;# 
  2623  0F10                     	;# 
  2624  0F11                     	;# 
  2625  0F12                     	;# 
  2626  0F13                     	;# 
  2627  0F14                     	;# 
  2628  0F15                     	;# 
  2629  0F16                     	;# 
  2630  0F17                     	;# 
  2631  0F18                     	;# 
  2632  0F19                     	;# 
  2633  0F1A                     	;# 
  2634  0F1B                     	;# 
  2635  0F1C                     	;# 
  2636  0F1D                     	;# 
  2637  0F1E                     	;# 
  2638  0F1F                     	;# 
  2639  0F20                     	;# 
  2640  0F21                     	;# 
  2641  0F22                     	;# 
  2642  0F23                     	;# 
  2643  0F24                     	;# 
  2644  0F25                     	;# 
  2645  0F26                     	;# 
  2646  0F27                     	;# 
  2647  0F38                     	;# 
  2648  0F39                     	;# 
  2649  0F3A                     	;# 
  2650  0F3B                     	;# 
  2651  0F3C                     	;# 
  2652  0F3D                     	;# 
  2653  0F3E                     	;# 
  2654  0F3F                     	;# 
  2655  0F40                     	;# 
  2656  0F41                     	;# 
  2657  0F43                     	;# 
  2658  0F44                     	;# 
  2659  0F45                     	;# 
  2660  0F46                     	;# 
  2661  0F47                     	;# 
  2662  0F48                     	;# 
  2663  0F49                     	;# 
  2664  0F4A                     	;# 
  2665  0F4B                     	;# 
  2666  0F4C                     	;# 
  2667  0F4E                     	;# 
  2668  0F4F                     	;# 
  2669  0F50                     	;# 
  2670  0F51                     	;# 
  2671  0F52                     	;# 
  2672  0F53                     	;# 
  2673  0F54                     	;# 
  2674  0F55                     	;# 
  2675  0F56                     	;# 
  2676  0F57                     	;# 
  2677  0F65                     	;# 
  2678  0F68                     	;# 
  2679  0F69                     	;# 
  2680  0F6A                     	;# 
  2681  0F6B                     	;# 
  2682  0FE4                     	;# 
  2683  0FE5                     	;# 
  2684  0FE6                     	;# 
  2685  0FE7                     	;# 
  2686  0FE8                     	;# 
  2687  0FE9                     	;# 
  2688  0FEA                     	;# 
  2689  0FEB                     	;# 
  2690  0FED                     	;# 
  2691  0FEE                     	;# 
  2692  0FEF                     	;# 
  2693  0000                     	;# 
  2694  0001                     	;# 
  2695  0002                     	;# 
  2696  0003                     	;# 
  2697  0004                     	;# 
  2698  0005                     	;# 
  2699  0006                     	;# 
  2700  0007                     	;# 
  2701  0008                     	;# 
  2702  0009                     	;# 
  2703  000A                     	;# 
  2704  000B                     	;# 
  2705  000C                     	;# 
  2706  000D                     	;# 
  2707  000E                     	;# 
  2708  0010                     	;# 
  2709  0011                     	;# 
  2710  0012                     	;# 
  2711  0013                     	;# 
  2712  0016                     	;# 
  2713  0017                     	;# 
  2714  0018                     	;# 
  2715  001C                     	;# 
  2716  001C                     	;# 
  2717  001D                     	;# 
  2718  001D                     	;# 
  2719  001E                     	;# 
  2720  001F                     	;# 
  2721  008C                     	;# 
  2722  008C                     	;# 
  2723  008D                     	;# 
  2724  008E                     	;# 
  2725  008E                     	;# 
  2726  008F                     	;# 
  2727  0090                     	;# 
  2728  0090                     	;# 
  2729  0091                     	;# 
  2730  0093                     	;# 
  2731  0094                     	;# 
  2732  0095                     	;# 
  2733  0096                     	;# 
  2734  0097                     	;# 
  2735  0098                     	;# 
  2736  0099                     	;# 
  2737  009A                     	;# 
  2738  009B                     	;# 
  2739  009C                     	;# 
  2740  009D                     	;# 
  2741  009E                     	;# 
  2742  010C                     	;# 
  2743  010D                     	;# 
  2744  010E                     	;# 
  2745  010E                     	;# 
  2746  010F                     	;# 
  2747  0110                     	;# 
  2748  0110                     	;# 
  2749  0111                     	;# 
  2750  0112                     	;# 
  2751  0112                     	;# 
  2752  0113                     	;# 
  2753  0114                     	;# 
  2754  0114                     	;# 
  2755  0115                     	;# 
  2756  0116                     	;# 
  2757  0116                     	;# 
  2758  0117                     	;# 
  2759  0119                     	;# 
  2760  0119                     	;# 
  2761  0119                     	;# 
  2762  011A                     	;# 
  2763  011A                     	;# 
  2764  011A                     	;# 
  2765  011B                     	;# 
  2766  011B                     	;# 
  2767  011B                     	;# 
  2768  011B                     	;# 
  2769  011B                     	;# 
  2770  011C                     	;# 
  2771  011C                     	;# 
  2772  011C                     	;# 
  2773  011D                     	;# 
  2774  011D                     	;# 
  2775  011D                     	;# 
  2776  011E                     	;# 
  2777  011E                     	;# 
  2778  011E                     	;# 
  2779  011F                     	;# 
  2780  011F                     	;# 
  2781  011F                     	;# 
  2782  011F                     	;# 
  2783  011F                     	;# 
  2784  018C                     	;# 
  2785  018D                     	;# 
  2786  018E                     	;# 
  2787  018F                     	;# 
  2788  0190                     	;# 
  2789  0191                     	;# 
  2790  0192                     	;# 
  2791  0196                     	;# 
  2792  0197                     	;# 
  2793  0198                     	;# 
  2794  0199                     	;# 
  2795  019A                     	;# 
  2796  019B                     	;# 
  2797  019C                     	;# 
  2798  020C                     	;# 
  2799  020C                     	;# 
  2800  020D                     	;# 
  2801  020E                     	;# 
  2802  020F                     	;# 
  2803  020F                     	;# 
  2804  0210                     	;# 
  2805  0210                     	;# 
  2806  0211                     	;# 
  2807  0211                     	;# 
  2808  0212                     	;# 
  2809  0212                     	;# 
  2810  0213                     	;# 
  2811  0214                     	;# 
  2812  0215                     	;# 
  2813  0215                     	;# 
  2814  0216                     	;# 
  2815  0216                     	;# 
  2816  0217                     	;# 
  2817  0217                     	;# 
  2818  0218                     	;# 
  2819  0218                     	;# 
  2820  0219                     	;# 
  2821  021A                     	;# 
  2822  021B                     	;# 
  2823  021B                     	;# 
  2824  021C                     	;# 
  2825  021C                     	;# 
  2826  021D                     	;# 
  2827  021D                     	;# 
  2828  021E                     	;# 
  2829  021F                     	;# 
  2830  028C                     	;# 
  2831  028C                     	;# 
  2832  028D                     	;# 
  2833  028D                     	;# 
  2834  028E                     	;# 
  2835  028F                     	;# 
  2836  0290                     	;# 
  2837  0290                     	;# 
  2838  0291                     	;# 
  2839  0292                     	;# 
  2840  0292                     	;# 
  2841  0293                     	;# 
  2842  0293                     	;# 
  2843  0294                     	;# 
  2844  0295                     	;# 
  2845  0296                     	;# 
  2846  0296                     	;# 
  2847  0297                     	;# 
  2848  0298                     	;# 
  2849  0298                     	;# 
  2850  0299                     	;# 
  2851  0299                     	;# 
  2852  029A                     	;# 
  2853  029B                     	;# 
  2854  029C                     	;# 
  2855  029C                     	;# 
  2856  029D                     	;# 
  2857  030C                     	;# 
  2858  030C                     	;# 
  2859  030D                     	;# 
  2860  030E                     	;# 
  2861  030F                     	;# 
  2862  0310                     	;# 
  2863  0310                     	;# 
  2864  0311                     	;# 
  2865  0312                     	;# 
  2866  0313                     	;# 
  2867  0314                     	;# 
  2868  0314                     	;# 
  2869  0315                     	;# 
  2870  0316                     	;# 
  2871  0317                     	;# 
  2872  0318                     	;# 
  2873  0318                     	;# 
  2874  0319                     	;# 
  2875  031A                     	;# 
  2876  031B                     	;# 
  2877  031C                     	;# 
  2878  031C                     	;# 
  2879  031D                     	;# 
  2880  031E                     	;# 
  2881  031F                     	;# 
  2882  038C                     	;# 
  2883  038D                     	;# 
  2884  038E                     	;# 
  2885  0390                     	;# 
  2886  0391                     	;# 
  2887  0392                     	;# 
  2888  040C                     	;# 
  2889  040D                     	;# 
  2890  040E                     	;# 
  2891  040F                     	;# 
  2892  0410                     	;# 
  2893  0411                     	;# 
  2894  0416                     	;# 
  2895  0416                     	;# 
  2896  0417                     	;# 
  2897  0418                     	;# 
  2898  0418                     	;# 
  2899  0419                     	;# 
  2900  041A                     	;# 
  2901  041A                     	;# 
  2902  041B                     	;# 
  2903  041C                     	;# 
  2904  041C                     	;# 
  2905  041D                     	;# 
  2906  041E                     	;# 
  2907  041F                     	;# 
  2908  048C                     	;# 
  2909  048C                     	;# 
  2910  048D                     	;# 
  2911  048E                     	;# 
  2912  048F                     	;# 
  2913  048F                     	;# 
  2914  0490                     	;# 
  2915  0491                     	;# 
  2916  0492                     	;# 
  2917  0492                     	;# 
  2918  0493                     	;# 
  2919  0494                     	;# 
  2920  0495                     	;# 
  2921  0495                     	;# 
  2922  0496                     	;# 
  2923  0497                     	;# 
  2924  0498                     	;# 
  2925  0499                     	;# 
  2926  049A                     	;# 
  2927  049B                     	;# 
  2928  049C                     	;# 
  2929  049D                     	;# 
  2930  050C                     	;# 
  2931  050C                     	;# 
  2932  050D                     	;# 
  2933  050E                     	;# 
  2934  050F                     	;# 
  2935  050F                     	;# 
  2936  0510                     	;# 
  2937  0511                     	;# 
  2938  0512                     	;# 
  2939  0512                     	;# 
  2940  0513                     	;# 
  2941  0514                     	;# 
  2942  0515                     	;# 
  2943  0515                     	;# 
  2944  0516                     	;# 
  2945  0517                     	;# 
  2946  0518                     	;# 
  2947  0519                     	;# 
  2948  051A                     	;# 
  2949  051B                     	;# 
  2950  051C                     	;# 
  2951  051D                     	;# 
  2952  058C                     	;# 
  2953  058C                     	;# 
  2954  058D                     	;# 
  2955  058E                     	;# 
  2956  058F                     	;# 
  2957  058F                     	;# 
  2958  0590                     	;# 
  2959  0591                     	;# 
  2960  0592                     	;# 
  2961  0593                     	;# 
  2962  060C                     	;# 
  2963  060D                     	;# 
  2964  060E                     	;# 
  2965  060F                     	;# 
  2966  0610                     	;# 
  2967  0611                     	;# 
  2968  0612                     	;# 
  2969  0613                     	;# 
  2970  0614                     	;# 
  2971  0616                     	;# 
  2972  0617                     	;# 
  2973  0618                     	;# 
  2974  0619                     	;# 
  2975  061A                     	;# 
  2976  061B                     	;# 
  2977  061C                     	;# 
  2978  061D                     	;# 
  2979  061E                     	;# 
  2980  068C                     	;# 
  2981  068D                     	;# 
  2982  068E                     	;# 
  2983  068F                     	;# 
  2984  0690                     	;# 
  2985  0691                     	;# 
  2986  0692                     	;# 
  2987  0693                     	;# 
  2988  0694                     	;# 
  2989  070C                     	;# 
  2990  070D                     	;# 
  2991  070E                     	;# 
  2992  070F                     	;# 
  2993  0710                     	;# 
  2994  0711                     	;# 
  2995  0712                     	;# 
  2996  0713                     	;# 
  2997  0714                     	;# 
  2998  0716                     	;# 
  2999  0717                     	;# 
  3000  0718                     	;# 
  3001  0719                     	;# 
  3002  071A                     	;# 
  3003  071B                     	;# 
  3004  071C                     	;# 
  3005  071D                     	;# 
  3006  071E                     	;# 
  3007  0796                     	;# 
  3008  0797                     	;# 
  3009  0798                     	;# 
  3010  0799                     	;# 
  3011  079A                     	;# 
  3012  079B                     	;# 
  3013  080C                     	;# 
  3014  080D                     	;# 
  3015  080E                     	;# 
  3016  080F                     	;# 
  3017  0810                     	;# 
  3018  0811                     	;# 
  3019  0812                     	;# 
  3020  0813                     	;# 
  3021  0814                     	;# 
  3022  081A                     	;# 
  3023  081B                     	;# 
  3024  081C                     	;# 
  3025  081D                     	;# 
  3026  081E                     	;# 
  3027  081F                     	;# 
  3028  088C                     	;# 
  3029  088D                     	;# 
  3030  088E                     	;# 
  3031  088F                     	;# 
  3032  0890                     	;# 
  3033  0891                     	;# 
  3034  0892                     	;# 
  3035  0893                     	;# 
  3036  0895                     	;# 
  3037  0896                     	;# 
  3038  0897                     	;# 
  3039  0898                     	;# 
  3040  0899                     	;# 
  3041  089A                     	;# 
  3042  089B                     	;# 
  3043  090C                     	;# 
  3044  090E                     	;# 
  3045  090F                     	;# 
  3046  091F                     	;# 
  3047  091F                     	;# 
  3048  098F                     	;# 
  3049  098F                     	;# 
  3050  0990                     	;# 
  3051  0991                     	;# 
  3052  0992                     	;# 
  3053  0993                     	;# 
  3054  0994                     	;# 
  3055  0995                     	;# 
  3056  0996                     	;# 
  3057  0997                     	;# 
  3058  0E0F                     	;# 
  3059  0E10                     	;# 
  3060  0E11                     	;# 
  3061  0E12                     	;# 
  3062  0E13                     	;# 
  3063  0E14                     	;# 
  3064  0E15                     	;# 
  3065  0E16                     	;# 
  3066  0E17                     	;# 
  3067  0E18                     	;# 
  3068  0E19                     	;# 
  3069  0E1A                     	;# 
  3070  0E1B                     	;# 
  3071  0E1C                     	;# 
  3072  0E1D                     	;# 
  3073  0E1E                     	;# 
  3074  0E1F                     	;# 
  3075  0E20                     	;# 
  3076  0E21                     	;# 
  3077  0E22                     	;# 
  3078  0E23                     	;# 
  3079  0E24                     	;# 
  3080  0E25                     	;# 
  3081  0E26                     	;# 
  3082  0E27                     	;# 
  3083  0E28                     	;# 
  3084  0E29                     	;# 
  3085  0E2A                     	;# 
  3086  0E2B                     	;# 
  3087  0E2C                     	;# 
  3088  0E2D                     	;# 
  3089  0E2E                     	;# 
  3090  0E2F                     	;# 
  3091  0E30                     	;# 
  3092  0E31                     	;# 
  3093  0E32                     	;# 
  3094  0E33                     	;# 
  3095  0E34                     	;# 
  3096  0E35                     	;# 
  3097  0E36                     	;# 
  3098  0E37                     	;# 
  3099  0E8F                     	;# 
  3100  0E90                     	;# 
  3101  0E91                     	;# 
  3102  0E92                     	;# 
  3103  0E93                     	;# 
  3104  0E94                     	;# 
  3105  0E95                     	;# 
  3106  0E96                     	;# 
  3107  0E97                     	;# 
  3108  0E9C                     	;# 
  3109  0E9D                     	;# 
  3110  0E9E                     	;# 
  3111  0EA1                     	;# 
  3112  0EA2                     	;# 
  3113  0EA3                     	;# 
  3114  0EA4                     	;# 
  3115  0EA5                     	;# 
  3116  0EA9                     	;# 
  3117  0EAA                     	;# 
  3118  0EAB                     	;# 
  3119  0EAC                     	;# 
  3120  0EB1                     	;# 
  3121  0EB2                     	;# 
  3122  0EB3                     	;# 
  3123  0EB8                     	;# 
  3124  0EB9                     	;# 
  3125  0EBA                     	;# 
  3126  0EBB                     	;# 
  3127  0EBC                     	;# 
  3128  0EBD                     	;# 
  3129  0EBE                     	;# 
  3130  0EC3                     	;# 
  3131  0EC5                     	;# 
  3132  0EC6                     	;# 
  3133  0EC7                     	;# 
  3134  0EC8                     	;# 
  3135  0EC9                     	;# 
  3136  0ECA                     	;# 
  3137  0ECB                     	;# 
  3138  0ECC                     	;# 
  3139  0F10                     	;# 
  3140  0F11                     	;# 
  3141  0F12                     	;# 
  3142  0F13                     	;# 
  3143  0F14                     	;# 
  3144  0F15                     	;# 
  3145  0F16                     	;# 
  3146  0F17                     	;# 
  3147  0F18                     	;# 
  3148  0F19                     	;# 
  3149  0F1A                     	;# 
  3150  0F1B                     	;# 
  3151  0F1C                     	;# 
  3152  0F1D                     	;# 
  3153  0F1E                     	;# 
  3154  0F1F                     	;# 
  3155  0F20                     	;# 
  3156  0F21                     	;# 
  3157  0F22                     	;# 
  3158  0F23                     	;# 
  3159  0F24                     	;# 
  3160  0F25                     	;# 
  3161  0F26                     	;# 
  3162  0F27                     	;# 
  3163  0F38                     	;# 
  3164  0F39                     	;# 
  3165  0F3A                     	;# 
  3166  0F3B                     	;# 
  3167  0F3C                     	;# 
  3168  0F3D                     	;# 
  3169  0F3E                     	;# 
  3170  0F3F                     	;# 
  3171  0F40                     	;# 
  3172  0F41                     	;# 
  3173  0F43                     	;# 
  3174  0F44                     	;# 
  3175  0F45                     	;# 
  3176  0F46                     	;# 
  3177  0F47                     	;# 
  3178  0F48                     	;# 
  3179  0F49                     	;# 
  3180  0F4A                     	;# 
  3181  0F4B                     	;# 
  3182  0F4C                     	;# 
  3183  0F4E                     	;# 
  3184  0F4F                     	;# 
  3185  0F50                     	;# 
  3186  0F51                     	;# 
  3187  0F52                     	;# 
  3188  0F53                     	;# 
  3189  0F54                     	;# 
  3190  0F55                     	;# 
  3191  0F56                     	;# 
  3192  0F57                     	;# 
  3193  0F65                     	;# 
  3194  0F68                     	;# 
  3195  0F69                     	;# 
  3196  0F6A                     	;# 
  3197  0F6B                     	;# 
  3198  0FE4                     	;# 
  3199  0FE5                     	;# 
  3200  0FE6                     	;# 
  3201  0FE7                     	;# 
  3202  0FE8                     	;# 
  3203  0FE9                     	;# 
  3204  0FEA                     	;# 
  3205  0FEB                     	;# 
  3206  0FED                     	;# 
  3207  0FEE                     	;# 
  3208  0FEF                     	;# 
  3209  0000                     	;# 
  3210  0001                     	;# 
  3211  0002                     	;# 
  3212  0003                     	;# 
  3213  0004                     	;# 
  3214  0005                     	;# 
  3215  0006                     	;# 
  3216  0007                     	;# 
  3217  0008                     	;# 
  3218  0009                     	;# 
  3219  000A                     	;# 
  3220  000B                     	;# 
  3221  000C                     	;# 
  3222  000D                     	;# 
  3223  000E                     	;# 
  3224  0010                     	;# 
  3225  0011                     	;# 
  3226  0012                     	;# 
  3227  0013                     	;# 
  3228  0016                     	;# 
  3229  0017                     	;# 
  3230  0018                     	;# 
  3231  001C                     	;# 
  3232  001C                     	;# 
  3233  001D                     	;# 
  3234  001D                     	;# 
  3235  001E                     	;# 
  3236  001F                     	;# 
  3237  008C                     	;# 
  3238  008C                     	;# 
  3239  008D                     	;# 
  3240  008E                     	;# 
  3241  008E                     	;# 
  3242  008F                     	;# 
  3243  0090                     	;# 
  3244  0090                     	;# 
  3245  0091                     	;# 
  3246  0093                     	;# 
  3247  0094                     	;# 
  3248  0095                     	;# 
  3249  0096                     	;# 
  3250  0097                     	;# 
  3251  0098                     	;# 
  3252  0099                     	;# 
  3253  009A                     	;# 
  3254  009B                     	;# 
  3255  009C                     	;# 
  3256  009D                     	;# 
  3257  009E                     	;# 
  3258  010C                     	;# 
  3259  010D                     	;# 
  3260  010E                     	;# 
  3261  010E                     	;# 
  3262  010F                     	;# 
  3263  0110                     	;# 
  3264  0110                     	;# 
  3265  0111                     	;# 
  3266  0112                     	;# 
  3267  0112                     	;# 
  3268  0113                     	;# 
  3269  0114                     	;# 
  3270  0114                     	;# 
  3271  0115                     	;# 
  3272  0116                     	;# 
  3273  0116                     	;# 
  3274  0117                     	;# 
  3275  0119                     	;# 
  3276  0119                     	;# 
  3277  0119                     	;# 
  3278  011A                     	;# 
  3279  011A                     	;# 
  3280  011A                     	;# 
  3281  011B                     	;# 
  3282  011B                     	;# 
  3283  011B                     	;# 
  3284  011B                     	;# 
  3285  011B                     	;# 
  3286  011C                     	;# 
  3287  011C                     	;# 
  3288  011C                     	;# 
  3289  011D                     	;# 
  3290  011D                     	;# 
  3291  011D                     	;# 
  3292  011E                     	;# 
  3293  011E                     	;# 
  3294  011E                     	;# 
  3295  011F                     	;# 
  3296  011F                     	;# 
  3297  011F                     	;# 
  3298  011F                     	;# 
  3299  011F                     	;# 
  3300  018C                     	;# 
  3301  018D                     	;# 
  3302  018E                     	;# 
  3303  018F                     	;# 
  3304  0190                     	;# 
  3305  0191                     	;# 
  3306  0192                     	;# 
  3307  0196                     	;# 
  3308  0197                     	;# 
  3309  0198                     	;# 
  3310  0199                     	;# 
  3311  019A                     	;# 
  3312  019B                     	;# 
  3313  019C                     	;# 
  3314  020C                     	;# 
  3315  020C                     	;# 
  3316  020D                     	;# 
  3317  020E                     	;# 
  3318  020F                     	;# 
  3319  020F                     	;# 
  3320  0210                     	;# 
  3321  0210                     	;# 
  3322  0211                     	;# 
  3323  0211                     	;# 
  3324  0212                     	;# 
  3325  0212                     	;# 
  3326  0213                     	;# 
  3327  0214                     	;# 
  3328  0215                     	;# 
  3329  0215                     	;# 
  3330  0216                     	;# 
  3331  0216                     	;# 
  3332  0217                     	;# 
  3333  0217                     	;# 
  3334  0218                     	;# 
  3335  0218                     	;# 
  3336  0219                     	;# 
  3337  021A                     	;# 
  3338  021B                     	;# 
  3339  021B                     	;# 
  3340  021C                     	;# 
  3341  021C                     	;# 
  3342  021D                     	;# 
  3343  021D                     	;# 
  3344  021E                     	;# 
  3345  021F                     	;# 
  3346  028C                     	;# 
  3347  028C                     	;# 
  3348  028D                     	;# 
  3349  028D                     	;# 
  3350  028E                     	;# 
  3351  028F                     	;# 
  3352  0290                     	;# 
  3353  0290                     	;# 
  3354  0291                     	;# 
  3355  0292                     	;# 
  3356  0292                     	;# 
  3357  0293                     	;# 
  3358  0293                     	;# 
  3359  0294                     	;# 
  3360  0295                     	;# 
  3361  0296                     	;# 
  3362  0296                     	;# 
  3363  0297                     	;# 
  3364  0298                     	;# 
  3365  0298                     	;# 
  3366  0299                     	;# 
  3367  0299                     	;# 
  3368  029A                     	;# 
  3369  029B                     	;# 
  3370  029C                     	;# 
  3371  029C                     	;# 
  3372  029D                     	;# 
  3373  030C                     	;# 
  3374  030C                     	;# 
  3375  030D                     	;# 
  3376  030E                     	;# 
  3377  030F                     	;# 
  3378  0310                     	;# 
  3379  0310                     	;# 
  3380  0311                     	;# 
  3381  0312                     	;# 
  3382  0313                     	;# 
  3383  0314                     	;# 
  3384  0314                     	;# 
  3385  0315                     	;# 
  3386  0316                     	;# 
  3387  0317                     	;# 
  3388  0318                     	;# 
  3389  0318                     	;# 
  3390  0319                     	;# 
  3391  031A                     	;# 
  3392  031B                     	;# 
  3393  031C                     	;# 
  3394  031C                     	;# 
  3395  031D                     	;# 
  3396  031E                     	;# 
  3397  031F                     	;# 
  3398  038C                     	;# 
  3399  038D                     	;# 
  3400  038E                     	;# 
  3401  0390                     	;# 
  3402  0391                     	;# 
  3403  0392                     	;# 
  3404  040C                     	;# 
  3405  040D                     	;# 
  3406  040E                     	;# 
  3407  040F                     	;# 
  3408  0410                     	;# 
  3409  0411                     	;# 
  3410  0416                     	;# 
  3411  0416                     	;# 
  3412  0417                     	;# 
  3413  0418                     	;# 
  3414  0418                     	;# 
  3415  0419                     	;# 
  3416  041A                     	;# 
  3417  041A                     	;# 
  3418  041B                     	;# 
  3419  041C                     	;# 
  3420  041C                     	;# 
  3421  041D                     	;# 
  3422  041E                     	;# 
  3423  041F                     	;# 
  3424  048C                     	;# 
  3425  048C                     	;# 
  3426  048D                     	;# 
  3427  048E                     	;# 
  3428  048F                     	;# 
  3429  048F                     	;# 
  3430  0490                     	;# 
  3431  0491                     	;# 
  3432  0492                     	;# 
  3433  0492                     	;# 
  3434  0493                     	;# 
  3435  0494                     	;# 
  3436  0495                     	;# 
  3437  0495                     	;# 
  3438  0496                     	;# 
  3439  0497                     	;# 
  3440  0498                     	;# 
  3441  0499                     	;# 
  3442  049A                     	;# 
  3443  049B                     	;# 
  3444  049C                     	;# 
  3445  049D                     	;# 
  3446  050C                     	;# 
  3447  050C                     	;# 
  3448  050D                     	;# 
  3449  050E                     	;# 
  3450  050F                     	;# 
  3451  050F                     	;# 
  3452  0510                     	;# 
  3453  0511                     	;# 
  3454  0512                     	;# 
  3455  0512                     	;# 
  3456  0513                     	;# 
  3457  0514                     	;# 
  3458  0515                     	;# 
  3459  0515                     	;# 
  3460  0516                     	;# 
  3461  0517                     	;# 
  3462  0518                     	;# 
  3463  0519                     	;# 
  3464  051A                     	;# 
  3465  051B                     	;# 
  3466  051C                     	;# 
  3467  051D                     	;# 
  3468  058C                     	;# 
  3469  058C                     	;# 
  3470  058D                     	;# 
  3471  058E                     	;# 
  3472  058F                     	;# 
  3473  058F                     	;# 
  3474  0590                     	;# 
  3475  0591                     	;# 
  3476  0592                     	;# 
  3477  0593                     	;# 
  3478  060C                     	;# 
  3479  060D                     	;# 
  3480  060E                     	;# 
  3481  060F                     	;# 
  3482  0610                     	;# 
  3483  0611                     	;# 
  3484  0612                     	;# 
  3485  0613                     	;# 
  3486  0614                     	;# 
  3487  0616                     	;# 
  3488  0617                     	;# 
  3489  0618                     	;# 
  3490  0619                     	;# 
  3491  061A                     	;# 
  3492  061B                     	;# 
  3493  061C                     	;# 
  3494  061D                     	;# 
  3495  061E                     	;# 
  3496  068C                     	;# 
  3497  068D                     	;# 
  3498  068E                     	;# 
  3499  068F                     	;# 
  3500  0690                     	;# 
  3501  0691                     	;# 
  3502  0692                     	;# 
  3503  0693                     	;# 
  3504  0694                     	;# 
  3505  070C                     	;# 
  3506  070D                     	;# 
  3507  070E                     	;# 
  3508  070F                     	;# 
  3509  0710                     	;# 
  3510  0711                     	;# 
  3511  0712                     	;# 
  3512  0713                     	;# 
  3513  0714                     	;# 
  3514  0716                     	;# 
  3515  0717                     	;# 
  3516  0718                     	;# 
  3517  0719                     	;# 
  3518  071A                     	;# 
  3519  071B                     	;# 
  3520  071C                     	;# 
  3521  071D                     	;# 
  3522  071E                     	;# 
  3523  0796                     	;# 
  3524  0797                     	;# 
  3525  0798                     	;# 
  3526  0799                     	;# 
  3527  079A                     	;# 
  3528  079B                     	;# 
  3529  080C                     	;# 
  3530  080D                     	;# 
  3531  080E                     	;# 
  3532  080F                     	;# 
  3533  0810                     	;# 
  3534  0811                     	;# 
  3535  0812                     	;# 
  3536  0813                     	;# 
  3537  0814                     	;# 
  3538  081A                     	;# 
  3539  081B                     	;# 
  3540  081C                     	;# 
  3541  081D                     	;# 
  3542  081E                     	;# 
  3543  081F                     	;# 
  3544  088C                     	;# 
  3545  088D                     	;# 
  3546  088E                     	;# 
  3547  088F                     	;# 
  3548  0890                     	;# 
  3549  0891                     	;# 
  3550  0892                     	;# 
  3551  0893                     	;# 
  3552  0895                     	;# 
  3553  0896                     	;# 
  3554  0897                     	;# 
  3555  0898                     	;# 
  3556  0899                     	;# 
  3557  089A                     	;# 
  3558  089B                     	;# 
  3559  090C                     	;# 
  3560  090E                     	;# 
  3561  090F                     	;# 
  3562  091F                     	;# 
  3563  091F                     	;# 
  3564  098F                     	;# 
  3565  098F                     	;# 
  3566  0990                     	;# 
  3567  0991                     	;# 
  3568  0992                     	;# 
  3569  0993                     	;# 
  3570  0994                     	;# 
  3571  0995                     	;# 
  3572  0996                     	;# 
  3573  0997                     	;# 
  3574  0E0F                     	;# 
  3575  0E10                     	;# 
  3576  0E11                     	;# 
  3577  0E12                     	;# 
  3578  0E13                     	;# 
  3579  0E14                     	;# 
  3580  0E15                     	;# 
  3581  0E16                     	;# 
  3582  0E17                     	;# 
  3583  0E18                     	;# 
  3584  0E19                     	;# 
  3585  0E1A                     	;# 
  3586  0E1B                     	;# 
  3587  0E1C                     	;# 
  3588  0E1D                     	;# 
  3589  0E1E                     	;# 
  3590  0E1F                     	;# 
  3591  0E20                     	;# 
  3592  0E21                     	;# 
  3593  0E22                     	;# 
  3594  0E23                     	;# 
  3595  0E24                     	;# 
  3596  0E25                     	;# 
  3597  0E26                     	;# 
  3598  0E27                     	;# 
  3599  0E28                     	;# 
  3600  0E29                     	;# 
  3601  0E2A                     	;# 
  3602  0E2B                     	;# 
  3603  0E2C                     	;# 
  3604  0E2D                     	;# 
  3605  0E2E                     	;# 
  3606  0E2F                     	;# 
  3607  0E30                     	;# 
  3608  0E31                     	;# 
  3609  0E32                     	;# 
  3610  0E33                     	;# 
  3611  0E34                     	;# 
  3612  0E35                     	;# 
  3613  0E36                     	;# 
  3614  0E37                     	;# 
  3615  0E8F                     	;# 
  3616  0E90                     	;# 
  3617  0E91                     	;# 
  3618  0E92                     	;# 
  3619  0E93                     	;# 
  3620  0E94                     	;# 
  3621  0E95                     	;# 
  3622  0E96                     	;# 
  3623  0E97                     	;# 
  3624  0E9C                     	;# 
  3625  0E9D                     	;# 
  3626  0E9E                     	;# 
  3627  0EA1                     	;# 
  3628  0EA2                     	;# 
  3629  0EA3                     	;# 
  3630  0EA4                     	;# 
  3631  0EA5                     	;# 
  3632  0EA9                     	;# 
  3633  0EAA                     	;# 
  3634  0EAB                     	;# 
  3635  0EAC                     	;# 
  3636  0EB1                     	;# 
  3637  0EB2                     	;# 
  3638  0EB3                     	;# 
  3639  0EB8                     	;# 
  3640  0EB9                     	;# 
  3641  0EBA                     	;# 
  3642  0EBB                     	;# 
  3643  0EBC                     	;# 
  3644  0EBD                     	;# 
  3645  0EBE                     	;# 
  3646  0EC3                     	;# 
  3647  0EC5                     	;# 
  3648  0EC6                     	;# 
  3649  0EC7                     	;# 
  3650  0EC8                     	;# 
  3651  0EC9                     	;# 
  3652  0ECA                     	;# 
  3653  0ECB                     	;# 
  3654  0ECC                     	;# 
  3655  0F10                     	;# 
  3656  0F11                     	;# 
  3657  0F12                     	;# 
  3658  0F13                     	;# 
  3659  0F14                     	;# 
  3660  0F15                     	;# 
  3661  0F16                     	;# 
  3662  0F17                     	;# 
  3663  0F18                     	;# 
  3664  0F19                     	;# 
  3665  0F1A                     	;# 
  3666  0F1B                     	;# 
  3667  0F1C                     	;# 
  3668  0F1D                     	;# 
  3669  0F1E                     	;# 
  3670  0F1F                     	;# 
  3671  0F20                     	;# 
  3672  0F21                     	;# 
  3673  0F22                     	;# 
  3674  0F23                     	;# 
  3675  0F24                     	;# 
  3676  0F25                     	;# 
  3677  0F26                     	;# 
  3678  0F27                     	;# 
  3679  0F38                     	;# 
  3680  0F39                     	;# 
  3681  0F3A                     	;# 
  3682  0F3B                     	;# 
  3683  0F3C                     	;# 
  3684  0F3D                     	;# 
  3685  0F3E                     	;# 
  3686  0F3F                     	;# 
  3687  0F40                     	;# 
  3688  0F41                     	;# 
  3689  0F43                     	;# 
  3690  0F44                     	;# 
  3691  0F45                     	;# 
  3692  0F46                     	;# 
  3693  0F47                     	;# 
  3694  0F48                     	;# 
  3695  0F49                     	;# 
  3696  0F4A                     	;# 
  3697  0F4B                     	;# 
  3698  0F4C                     	;# 
  3699  0F4E                     	;# 
  3700  0F4F                     	;# 
  3701  0F50                     	;# 
  3702  0F51                     	;# 
  3703  0F52                     	;# 
  3704  0F53                     	;# 
  3705  0F54                     	;# 
  3706  0F55                     	;# 
  3707  0F56                     	;# 
  3708  0F57                     	;# 
  3709  0F65                     	;# 
  3710  0F68                     	;# 
  3711  0F69                     	;# 
  3712  0F6A                     	;# 
  3713  0F6B                     	;# 
  3714  0FE4                     	;# 
  3715  0FE5                     	;# 
  3716  0FE6                     	;# 
  3717  0FE7                     	;# 
  3718  0FE8                     	;# 
  3719  0FE9                     	;# 
  3720  0FEA                     	;# 
  3721  0FEB                     	;# 
  3722  0FED                     	;# 
  3723  0FEE                     	;# 
  3724  0FEF                     	;# 
  3725  0000                     	;# 
  3726  0001                     	;# 
  3727  0002                     	;# 
  3728  0003                     	;# 
  3729  0004                     	;# 
  3730  0005                     	;# 
  3731  0006                     	;# 
  3732  0007                     	;# 
  3733  0008                     	;# 
  3734  0009                     	;# 
  3735  000A                     	;# 
  3736  000B                     	;# 
  3737  000C                     	;# 
  3738  000D                     	;# 
  3739  000E                     	;# 
  3740  0010                     	;# 
  3741  0011                     	;# 
  3742  0012                     	;# 
  3743  0013                     	;# 
  3744  0016                     	;# 
  3745  0017                     	;# 
  3746  0018                     	;# 
  3747  001C                     	;# 
  3748  001C                     	;# 
  3749  001D                     	;# 
  3750  001D                     	;# 
  3751  001E                     	;# 
  3752  001F                     	;# 
  3753  008C                     	;# 
  3754  008C                     	;# 
  3755  008D                     	;# 
  3756  008E                     	;# 
  3757  008E                     	;# 
  3758  008F                     	;# 
  3759  0090                     	;# 
  3760  0090                     	;# 
  3761  0091                     	;# 
  3762  0093                     	;# 
  3763  0094                     	;# 
  3764  0095                     	;# 
  3765  0096                     	;# 
  3766  0097                     	;# 
  3767  0098                     	;# 
  3768  0099                     	;# 
  3769  009A                     	;# 
  3770  009B                     	;# 
  3771  009C                     	;# 
  3772  009D                     	;# 
  3773  009E                     	;# 
  3774  010C                     	;# 
  3775  010D                     	;# 
  3776  010E                     	;# 
  3777  010E                     	;# 
  3778  010F                     	;# 
  3779  0110                     	;# 
  3780  0110                     	;# 
  3781  0111                     	;# 
  3782  0112                     	;# 
  3783  0112                     	;# 
  3784  0113                     	;# 
  3785  0114                     	;# 
  3786  0114                     	;# 
  3787  0115                     	;# 
  3788  0116                     	;# 
  3789  0116                     	;# 
  3790  0117                     	;# 
  3791  0119                     	;# 
  3792  0119                     	;# 
  3793  0119                     	;# 
  3794  011A                     	;# 
  3795  011A                     	;# 
  3796  011A                     	;# 
  3797  011B                     	;# 
  3798  011B                     	;# 
  3799  011B                     	;# 
  3800  011B                     	;# 
  3801  011B                     	;# 
  3802  011C                     	;# 
  3803  011C                     	;# 
  3804  011C                     	;# 
  3805  011D                     	;# 
  3806  011D                     	;# 
  3807  011D                     	;# 
  3808  011E                     	;# 
  3809  011E                     	;# 
  3810  011E                     	;# 
  3811  011F                     	;# 
  3812  011F                     	;# 
  3813  011F                     	;# 
  3814  011F                     	;# 
  3815  011F                     	;# 
  3816  018C                     	;# 
  3817  018D                     	;# 
  3818  018E                     	;# 
  3819  018F                     	;# 
  3820  0190                     	;# 
  3821  0191                     	;# 
  3822  0192                     	;# 
  3823  0196                     	;# 
  3824  0197                     	;# 
  3825  0198                     	;# 
  3826  0199                     	;# 
  3827  019A                     	;# 
  3828  019B                     	;# 
  3829  019C                     	;# 
  3830  020C                     	;# 
  3831  020C                     	;# 
  3832  020D                     	;# 
  3833  020E                     	;# 
  3834  020F                     	;# 
  3835  020F                     	;# 
  3836  0210                     	;# 
  3837  0210                     	;# 
  3838  0211                     	;# 
  3839  0211                     	;# 
  3840  0212                     	;# 
  3841  0212                     	;# 
  3842  0213                     	;# 
  3843  0214                     	;# 
  3844  0215                     	;# 
  3845  0215                     	;# 
  3846  0216                     	;# 
  3847  0216                     	;# 
  3848  0217                     	;# 
  3849  0217                     	;# 
  3850  0218                     	;# 
  3851  0218                     	;# 
  3852  0219                     	;# 
  3853  021A                     	;# 
  3854  021B                     	;# 
  3855  021B                     	;# 
  3856  021C                     	;# 
  3857  021C                     	;# 
  3858  021D                     	;# 
  3859  021D                     	;# 
  3860  021E                     	;# 
  3861  021F                     	;# 
  3862  028C                     	;# 
  3863  028C                     	;# 
  3864  028D                     	;# 
  3865  028D                     	;# 
  3866  028E                     	;# 
  3867  028F                     	;# 
  3868  0290                     	;# 
  3869  0290                     	;# 
  3870  0291                     	;# 
  3871  0292                     	;# 
  3872  0292                     	;# 
  3873  0293                     	;# 
  3874  0293                     	;# 
  3875  0294                     	;# 
  3876  0295                     	;# 
  3877  0296                     	;# 
  3878  0296                     	;# 
  3879  0297                     	;# 
  3880  0298                     	;# 
  3881  0298                     	;# 
  3882  0299                     	;# 
  3883  0299                     	;# 
  3884  029A                     	;# 
  3885  029B                     	;# 
  3886  029C                     	;# 
  3887  029C                     	;# 
  3888  029D                     	;# 
  3889  030C                     	;# 
  3890  030C                     	;# 
  3891  030D                     	;# 
  3892  030E                     	;# 
  3893  030F                     	;# 
  3894  0310                     	;# 
  3895  0310                     	;# 
  3896  0311                     	;# 
  3897  0312                     	;# 
  3898  0313                     	;# 
  3899  0314                     	;# 
  3900  0314                     	;# 
  3901  0315                     	;# 
  3902  0316                     	;# 
  3903  0317                     	;# 
  3904  0318                     	;# 
  3905  0318                     	;# 
  3906  0319                     	;# 
  3907  031A                     	;# 
  3908  031B                     	;# 
  3909  031C                     	;# 
  3910  031C                     	;# 
  3911  031D                     	;# 
  3912  031E                     	;# 
  3913  031F                     	;# 
  3914  038C                     	;# 
  3915  038D                     	;# 
  3916  038E                     	;# 
  3917  0390                     	;# 
  3918  0391                     	;# 
  3919  0392                     	;# 
  3920  040C                     	;# 
  3921  040D                     	;# 
  3922  040E                     	;# 
  3923  040F                     	;# 
  3924  0410                     	;# 
  3925  0411                     	;# 
  3926  0416                     	;# 
  3927  0416                     	;# 
  3928  0417                     	;# 
  3929  0418                     	;# 
  3930  0418                     	;# 
  3931  0419                     	;# 
  3932  041A                     	;# 
  3933  041A                     	;# 
  3934  041B                     	;# 
  3935  041C                     	;# 
  3936  041C                     	;# 
  3937  041D                     	;# 
  3938  041E                     	;# 
  3939  041F                     	;# 
  3940  048C                     	;# 
  3941  048C                     	;# 
  3942  048D                     	;# 
  3943  048E                     	;# 
  3944  048F                     	;# 
  3945  048F                     	;# 
  3946  0490                     	;# 
  3947  0491                     	;# 
  3948  0492                     	;# 
  3949  0492                     	;# 
  3950  0493                     	;# 
  3951  0494                     	;# 
  3952  0495                     	;# 
  3953  0495                     	;# 
  3954  0496                     	;# 
  3955  0497                     	;# 
  3956  0498                     	;# 
  3957  0499                     	;# 
  3958  049A                     	;# 
  3959  049B                     	;# 
  3960  049C                     	;# 
  3961  049D                     	;# 
  3962  050C                     	;# 
  3963  050C                     	;# 
  3964  050D                     	;# 
  3965  050E                     	;# 
  3966  050F                     	;# 
  3967  050F                     	;# 
  3968  0510                     	;# 
  3969  0511                     	;# 
  3970  0512                     	;# 
  3971  0512                     	;# 
  3972  0513                     	;# 
  3973  0514                     	;# 
  3974  0515                     	;# 
  3975  0515                     	;# 
  3976  0516                     	;# 
  3977  0517                     	;# 
  3978  0518                     	;# 
  3979  0519                     	;# 
  3980  051A                     	;# 
  3981  051B                     	;# 
  3982  051C                     	;# 
  3983  051D                     	;# 
  3984  058C                     	;# 
  3985  058C                     	;# 
  3986  058D                     	;# 
  3987  058E                     	;# 
  3988  058F                     	;# 
  3989  058F                     	;# 
  3990  0590                     	;# 
  3991  0591                     	;# 
  3992  0592                     	;# 
  3993  0593                     	;# 
  3994  060C                     	;# 
  3995  060D                     	;# 
  3996  060E                     	;# 
  3997  060F                     	;# 
  3998  0610                     	;# 
  3999  0611                     	;# 
  4000  0612                     	;# 
  4001  0613                     	;# 
  4002  0614                     	;# 
  4003  0616                     	;# 
  4004  0617                     	;# 
  4005  0618                     	;# 
  4006  0619                     	;# 
  4007  061A                     	;# 
  4008  061B                     	;# 
  4009  061C                     	;# 
  4010  061D                     	;# 
  4011  061E                     	;# 
  4012  068C                     	;# 
  4013  068D                     	;# 
  4014  068E                     	;# 
  4015  068F                     	;# 
  4016  0690                     	;# 
  4017  0691                     	;# 
  4018  0692                     	;# 
  4019  0693                     	;# 
  4020  0694                     	;# 
  4021  070C                     	;# 
  4022  070D                     	;# 
  4023  070E                     	;# 
  4024  070F                     	;# 
  4025  0710                     	;# 
  4026  0711                     	;# 
  4027  0712                     	;# 
  4028  0713                     	;# 
  4029  0714                     	;# 
  4030  0716                     	;# 
  4031  0717                     	;# 
  4032  0718                     	;# 
  4033  0719                     	;# 
  4034  071A                     	;# 
  4035  071B                     	;# 
  4036  071C                     	;# 
  4037  071D                     	;# 
  4038  071E                     	;# 
  4039  0796                     	;# 
  4040  0797                     	;# 
  4041  0798                     	;# 
  4042  0799                     	;# 
  4043  079A                     	;# 
  4044  079B                     	;# 
  4045  080C                     	;# 
  4046  080D                     	;# 
  4047  080E                     	;# 
  4048  080F                     	;# 
  4049  0810                     	;# 
  4050  0811                     	;# 
  4051  0812                     	;# 
  4052  0813                     	;# 
  4053  0814                     	;# 
  4054  081A                     	;# 
  4055  081B                     	;# 
  4056  081C                     	;# 
  4057  081D                     	;# 
  4058  081E                     	;# 
  4059  081F                     	;# 
  4060  088C                     	;# 
  4061  088D                     	;# 
  4062  088E                     	;# 
  4063  088F                     	;# 
  4064  0890                     	;# 
  4065  0891                     	;# 
  4066  0892                     	;# 
  4067  0893                     	;# 
  4068  0895                     	;# 
  4069  0896                     	;# 
  4070  0897                     	;# 
  4071  0898                     	;# 
  4072  0899                     	;# 
  4073  089A                     	;# 
  4074  089B                     	;# 
  4075  090C                     	;# 
  4076  090E                     	;# 
  4077  090F                     	;# 
  4078  091F                     	;# 
  4079  091F                     	;# 
  4080  098F                     	;# 
  4081  098F                     	;# 
  4082  0990                     	;# 
  4083  0991                     	;# 
  4084  0992                     	;# 
  4085  0993                     	;# 
  4086  0994                     	;# 
  4087  0995                     	;# 
  4088  0996                     	;# 
  4089  0997                     	;# 
  4090  0E0F                     	;# 
  4091  0E10                     	;# 
  4092  0E11                     	;# 
  4093  0E12                     	;# 
  4094  0E13                     	;# 
  4095  0E14                     	;# 
  4096  0E15                     	;# 
  4097  0E16                     	;# 
  4098  0E17                     	;# 
  4099  0E18                     	;# 
  4100  0E19                     	;# 
  4101  0E1A                     	;# 
  4102  0E1B                     	;# 
  4103  0E1C                     	;# 
  4104  0E1D                     	;# 
  4105  0E1E                     	;# 
  4106  0E1F                     	;# 
  4107  0E20                     	;# 
  4108  0E21                     	;# 
  4109  0E22                     	;# 
  4110  0E23                     	;# 
  4111  0E24                     	;# 
  4112  0E25                     	;# 
  4113  0E26                     	;# 
  4114  0E27                     	;# 
  4115  0E28                     	;# 
  4116  0E29                     	;# 
  4117  0E2A                     	;# 
  4118  0E2B                     	;# 
  4119  0E2C                     	;# 
  4120  0E2D                     	;# 
  4121  0E2E                     	;# 
  4122  0E2F                     	;# 
  4123  0E30                     	;# 
  4124  0E31                     	;# 
  4125  0E32                     	;# 
  4126  0E33                     	;# 
  4127  0E34                     	;# 
  4128  0E35                     	;# 
  4129  0E36                     	;# 
  4130  0E37                     	;# 
  4131  0E8F                     	;# 
  4132  0E90                     	;# 
  4133  0E91                     	;# 
  4134  0E92                     	;# 
  4135  0E93                     	;# 
  4136  0E94                     	;# 
  4137  0E95                     	;# 
  4138  0E96                     	;# 
  4139  0E97                     	;# 
  4140  0E9C                     	;# 
  4141  0E9D                     	;# 
  4142  0E9E                     	;# 
  4143  0EA1                     	;# 
  4144  0EA2                     	;# 
  4145  0EA3                     	;# 
  4146  0EA4                     	;# 
  4147  0EA5                     	;# 
  4148  0EA9                     	;# 
  4149  0EAA                     	;# 
  4150  0EAB                     	;# 
  4151  0EAC                     	;# 
  4152  0EB1                     	;# 
  4153  0EB2                     	;# 
  4154  0EB3                     	;# 
  4155  0EB8                     	;# 
  4156  0EB9                     	;# 
  4157  0EBA                     	;# 
  4158  0EBB                     	;# 
  4159  0EBC                     	;# 
  4160  0EBD                     	;# 
  4161  0EBE                     	;# 
  4162  0EC3                     	;# 
  4163  0EC5                     	;# 
  4164  0EC6                     	;# 
  4165  0EC7                     	;# 
  4166  0EC8                     	;# 
  4167  0EC9                     	;# 
  4168  0ECA                     	;# 
  4169  0ECB                     	;# 
  4170  0ECC                     	;# 
  4171  0F10                     	;# 
  4172  0F11                     	;# 
  4173  0F12                     	;# 
  4174  0F13                     	;# 
  4175  0F14                     	;# 
  4176  0F15                     	;# 
  4177  0F16                     	;# 
  4178  0F17                     	;# 
  4179  0F18                     	;# 
  4180  0F19                     	;# 
  4181  0F1A                     	;# 
  4182  0F1B                     	;# 
  4183  0F1C                     	;# 
  4184  0F1D                     	;# 
  4185  0F1E                     	;# 
  4186  0F1F                     	;# 
  4187  0F20                     	;# 
  4188  0F21                     	;# 
  4189  0F22                     	;# 
  4190  0F23                     	;# 
  4191  0F24                     	;# 
  4192  0F25                     	;# 
  4193  0F26                     	;# 
  4194  0F27                     	;# 
  4195  0F38                     	;# 
  4196  0F39                     	;# 
  4197  0F3A                     	;# 
  4198  0F3B                     	;# 
  4199  0F3C                     	;# 
  4200  0F3D                     	;# 
  4201  0F3E                     	;# 
  4202  0F3F                     	;# 
  4203  0F40                     	;# 
  4204  0F41                     	;# 
  4205  0F43                     	;# 
  4206  0F44                     	;# 
  4207  0F45                     	;# 
  4208  0F46                     	;# 
  4209  0F47                     	;# 
  4210  0F48                     	;# 
  4211  0F49                     	;# 
  4212  0F4A                     	;# 
  4213  0F4B                     	;# 
  4214  0F4C                     	;# 
  4215  0F4E                     	;# 
  4216  0F4F                     	;# 
  4217  0F50                     	;# 
  4218  0F51                     	;# 
  4219  0F52                     	;# 
  4220  0F53                     	;# 
  4221  0F54                     	;# 
  4222  0F55                     	;# 
  4223  0F56                     	;# 
  4224  0F57                     	;# 
  4225  0F65                     	;# 
  4226  0F68                     	;# 
  4227  0F69                     	;# 
  4228  0F6A                     	;# 
  4229  0F6B                     	;# 
  4230  0FE4                     	;# 
  4231  0FE5                     	;# 
  4232  0FE6                     	;# 
  4233  0FE7                     	;# 
  4234  0FE8                     	;# 
  4235  0FE9                     	;# 
  4236  0FEA                     	;# 
  4237  0FEB                     	;# 
  4238  0FED                     	;# 
  4239  0FEE                     	;# 
  4240  0FEF                     	;# 
  4241  0000                     	;# 
  4242  0001                     	;# 
  4243  0002                     	;# 
  4244  0003                     	;# 
  4245  0004                     	;# 
  4246  0005                     	;# 
  4247  0006                     	;# 
  4248  0007                     	;# 
  4249  0008                     	;# 
  4250  0009                     	;# 
  4251  000A                     	;# 
  4252  000B                     	;# 
  4253  000C                     	;# 
  4254  000D                     	;# 
  4255  000E                     	;# 
  4256  0010                     	;# 
  4257  0011                     	;# 
  4258  0012                     	;# 
  4259  0013                     	;# 
  4260  0016                     	;# 
  4261  0017                     	;# 
  4262  0018                     	;# 
  4263  001C                     	;# 
  4264  001C                     	;# 
  4265  001D                     	;# 
  4266  001D                     	;# 
  4267  001E                     	;# 
  4268  001F                     	;# 
  4269  008C                     	;# 
  4270  008C                     	;# 
  4271  008D                     	;# 
  4272  008E                     	;# 
  4273  008E                     	;# 
  4274  008F                     	;# 
  4275  0090                     	;# 
  4276  0090                     	;# 
  4277  0091                     	;# 
  4278  0093                     	;# 
  4279  0094                     	;# 
  4280  0095                     	;# 
  4281  0096                     	;# 
  4282  0097                     	;# 
  4283  0098                     	;# 
  4284  0099                     	;# 
  4285  009A                     	;# 
  4286  009B                     	;# 
  4287  009C                     	;# 
  4288  009D                     	;# 
  4289  009E                     	;# 
  4290  010C                     	;# 
  4291  010D                     	;# 
  4292  010E                     	;# 
  4293  010E                     	;# 
  4294  010F                     	;# 
  4295  0110                     	;# 
  4296  0110                     	;# 
  4297  0111                     	;# 
  4298  0112                     	;# 
  4299  0112                     	;# 
  4300  0113                     	;# 
  4301  0114                     	;# 
  4302  0114                     	;# 
  4303  0115                     	;# 
  4304  0116                     	;# 
  4305  0116                     	;# 
  4306  0117                     	;# 
  4307  0119                     	;# 
  4308  0119                     	;# 
  4309  0119                     	;# 
  4310  011A                     	;# 
  4311  011A                     	;# 
  4312  011A                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011B                     	;# 
  4316  011B                     	;# 
  4317  011B                     	;# 
  4318  011C                     	;# 
  4319  011C                     	;# 
  4320  011C                     	;# 
  4321  011D                     	;# 
  4322  011D                     	;# 
  4323  011D                     	;# 
  4324  011E                     	;# 
  4325  011E                     	;# 
  4326  011E                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  011F                     	;# 
  4330  011F                     	;# 
  4331  011F                     	;# 
  4332  018C                     	;# 
  4333  018D                     	;# 
  4334  018E                     	;# 
  4335  018F                     	;# 
  4336  0190                     	;# 
  4337  0191                     	;# 
  4338  0192                     	;# 
  4339  0196                     	;# 
  4340  0197                     	;# 
  4341  0198                     	;# 
  4342  0199                     	;# 
  4343  019A                     	;# 
  4344  019B                     	;# 
  4345  019C                     	;# 
  4346  020C                     	;# 
  4347  020C                     	;# 
  4348  020D                     	;# 
  4349  020E                     	;# 
  4350  020F                     	;# 
  4351  020F                     	;# 
  4352  0210                     	;# 
  4353  0210                     	;# 
  4354  0211                     	;# 
  4355  0211                     	;# 
  4356  0212                     	;# 
  4357  0212                     	;# 
  4358  0213                     	;# 
  4359  0214                     	;# 
  4360  0215                     	;# 
  4361  0215                     	;# 
  4362  0216                     	;# 
  4363  0216                     	;# 
  4364  0217                     	;# 
  4365  0217                     	;# 
  4366  0218                     	;# 
  4367  0218                     	;# 
  4368  0219                     	;# 
  4369  021A                     	;# 
  4370  021B                     	;# 
  4371  021B                     	;# 
  4372  021C                     	;# 
  4373  021C                     	;# 
  4374  021D                     	;# 
  4375  021D                     	;# 
  4376  021E                     	;# 
  4377  021F                     	;# 
  4378  028C                     	;# 
  4379  028C                     	;# 
  4380  028D                     	;# 
  4381  028D                     	;# 
  4382  028E                     	;# 
  4383  028F                     	;# 
  4384  0290                     	;# 
  4385  0290                     	;# 
  4386  0291                     	;# 
  4387  0292                     	;# 
  4388  0292                     	;# 
  4389  0293                     	;# 
  4390  0293                     	;# 
  4391  0294                     	;# 
  4392  0295                     	;# 
  4393  0296                     	;# 
  4394  0296                     	;# 
  4395  0297                     	;# 
  4396  0298                     	;# 
  4397  0298                     	;# 
  4398  0299                     	;# 
  4399  0299                     	;# 
  4400  029A                     	;# 
  4401  029B                     	;# 
  4402  029C                     	;# 
  4403  029C                     	;# 
  4404  029D                     	;# 
  4405  030C                     	;# 
  4406  030C                     	;# 
  4407  030D                     	;# 
  4408  030E                     	;# 
  4409  030F                     	;# 
  4410  0310                     	;# 
  4411  0310                     	;# 
  4412  0311                     	;# 
  4413  0312                     	;# 
  4414  0313                     	;# 
  4415  0314                     	;# 
  4416  0314                     	;# 
  4417  0315                     	;# 
  4418  0316                     	;# 
  4419  0317                     	;# 
  4420  0318                     	;# 
  4421  0318                     	;# 
  4422  0319                     	;# 
  4423  031A                     	;# 
  4424  031B                     	;# 
  4425  031C                     	;# 
  4426  031C                     	;# 
  4427  031D                     	;# 
  4428  031E                     	;# 
  4429  031F                     	;# 
  4430  038C                     	;# 
  4431  038D                     	;# 
  4432  038E                     	;# 
  4433  0390                     	;# 
  4434  0391                     	;# 
  4435  0392                     	;# 
  4436  040C                     	;# 
  4437  040D                     	;# 
  4438  040E                     	;# 
  4439  040F                     	;# 
  4440  0410                     	;# 
  4441  0411                     	;# 
  4442  0416                     	;# 
  4443  0416                     	;# 
  4444  0417                     	;# 
  4445  0418                     	;# 
  4446  0418                     	;# 
  4447  0419                     	;# 
  4448  041A                     	;# 
  4449  041A                     	;# 
  4450  041B                     	;# 
  4451  041C                     	;# 
  4452  041C                     	;# 
  4453  041D                     	;# 
  4454  041E                     	;# 
  4455  041F                     	;# 
  4456  048C                     	;# 
  4457  048C                     	;# 
  4458  048D                     	;# 
  4459  048E                     	;# 
  4460  048F                     	;# 
  4461  048F                     	;# 
  4462  0490                     	;# 
  4463  0491                     	;# 
  4464  0492                     	;# 
  4465  0492                     	;# 
  4466  0493                     	;# 
  4467  0494                     	;# 
  4468  0495                     	;# 
  4469  0495                     	;# 
  4470  0496                     	;# 
  4471  0497                     	;# 
  4472  0498                     	;# 
  4473  0499                     	;# 
  4474  049A                     	;# 
  4475  049B                     	;# 
  4476  049C                     	;# 
  4477  049D                     	;# 
  4478  050C                     	;# 
  4479  050C                     	;# 
  4480  050D                     	;# 
  4481  050E                     	;# 
  4482  050F                     	;# 
  4483  050F                     	;# 
  4484  0510                     	;# 
  4485  0511                     	;# 
  4486  0512                     	;# 
  4487  0512                     	;# 
  4488  0513                     	;# 
  4489  0514                     	;# 
  4490  0515                     	;# 
  4491  0515                     	;# 
  4492  0516                     	;# 
  4493  0517                     	;# 
  4494  0518                     	;# 
  4495  0519                     	;# 
  4496  051A                     	;# 
  4497  051B                     	;# 
  4498  051C                     	;# 
  4499  051D                     	;# 
  4500  058C                     	;# 
  4501  058C                     	;# 
  4502  058D                     	;# 
  4503  058E                     	;# 
  4504  058F                     	;# 
  4505  058F                     	;# 
  4506  0590                     	;# 
  4507  0591                     	;# 
  4508  0592                     	;# 
  4509  0593                     	;# 
  4510  060C                     	;# 
  4511  060D                     	;# 
  4512  060E                     	;# 
  4513  060F                     	;# 
  4514  0610                     	;# 
  4515  0611                     	;# 
  4516  0612                     	;# 
  4517  0613                     	;# 
  4518  0614                     	;# 
  4519  0616                     	;# 
  4520  0617                     	;# 
  4521  0618                     	;# 
  4522  0619                     	;# 
  4523  061A                     	;# 
  4524  061B                     	;# 
  4525  061C                     	;# 
  4526  061D                     	;# 
  4527  061E                     	;# 
  4528  068C                     	;# 
  4529  068D                     	;# 
  4530  068E                     	;# 
  4531  068F                     	;# 
  4532  0690                     	;# 
  4533  0691                     	;# 
  4534  0692                     	;# 
  4535  0693                     	;# 
  4536  0694                     	;# 
  4537  070C                     	;# 
  4538  070D                     	;# 
  4539  070E                     	;# 
  4540  070F                     	;# 
  4541  0710                     	;# 
  4542  0711                     	;# 
  4543  0712                     	;# 
  4544  0713                     	;# 
  4545  0714                     	;# 
  4546  0716                     	;# 
  4547  0717                     	;# 
  4548  0718                     	;# 
  4549  0719                     	;# 
  4550  071A                     	;# 
  4551  071B                     	;# 
  4552  071C                     	;# 
  4553  071D                     	;# 
  4554  071E                     	;# 
  4555  0796                     	;# 
  4556  0797                     	;# 
  4557  0798                     	;# 
  4558  0799                     	;# 
  4559  079A                     	;# 
  4560  079B                     	;# 
  4561  080C                     	;# 
  4562  080D                     	;# 
  4563  080E                     	;# 
  4564  080F                     	;# 
  4565  0810                     	;# 
  4566  0811                     	;# 
  4567  0812                     	;# 
  4568  0813                     	;# 
  4569  0814                     	;# 
  4570  081A                     	;# 
  4571  081B                     	;# 
  4572  081C                     	;# 
  4573  081D                     	;# 
  4574  081E                     	;# 
  4575  081F                     	;# 
  4576  088C                     	;# 
  4577  088D                     	;# 
  4578  088E                     	;# 
  4579  088F                     	;# 
  4580  0890                     	;# 
  4581  0891                     	;# 
  4582  0892                     	;# 
  4583  0893                     	;# 
  4584  0895                     	;# 
  4585  0896                     	;# 
  4586  0897                     	;# 
  4587  0898                     	;# 
  4588  0899                     	;# 
  4589  089A                     	;# 
  4590  089B                     	;# 
  4591  090C                     	;# 
  4592  090E                     	;# 
  4593  090F                     	;# 
  4594  091F                     	;# 
  4595  091F                     	;# 
  4596  098F                     	;# 
  4597  098F                     	;# 
  4598  0990                     	;# 
  4599  0991                     	;# 
  4600  0992                     	;# 
  4601  0993                     	;# 
  4602  0994                     	;# 
  4603  0995                     	;# 
  4604  0996                     	;# 
  4605  0997                     	;# 
  4606  0E0F                     	;# 
  4607  0E10                     	;# 
  4608  0E11                     	;# 
  4609  0E12                     	;# 
  4610  0E13                     	;# 
  4611  0E14                     	;# 
  4612  0E15                     	;# 
  4613  0E16                     	;# 
  4614  0E17                     	;# 
  4615  0E18                     	;# 
  4616  0E19                     	;# 
  4617  0E1A                     	;# 
  4618  0E1B                     	;# 
  4619  0E1C                     	;# 
  4620  0E1D                     	;# 
  4621  0E1E                     	;# 
  4622  0E1F                     	;# 
  4623  0E20                     	;# 
  4624  0E21                     	;# 
  4625  0E22                     	;# 
  4626  0E23                     	;# 
  4627  0E24                     	;# 
  4628  0E25                     	;# 
  4629  0E26                     	;# 
  4630  0E27                     	;# 
  4631  0E28                     	;# 
  4632  0E29                     	;# 
  4633  0E2A                     	;# 
  4634  0E2B                     	;# 
  4635  0E2C                     	;# 
  4636  0E2D                     	;# 
  4637  0E2E                     	;# 
  4638  0E2F                     	;# 
  4639  0E30                     	;# 
  4640  0E31                     	;# 
  4641  0E32                     	;# 
  4642  0E33                     	;# 
  4643  0E34                     	;# 
  4644  0E35                     	;# 
  4645  0E36                     	;# 
  4646  0E37                     	;# 
  4647  0E8F                     	;# 
  4648  0E90                     	;# 
  4649  0E91                     	;# 
  4650  0E92                     	;# 
  4651  0E93                     	;# 
  4652  0E94                     	;# 
  4653  0E95                     	;# 
  4654  0E96                     	;# 
  4655  0E97                     	;# 
  4656  0E9C                     	;# 
  4657  0E9D                     	;# 
  4658  0E9E                     	;# 
  4659  0EA1                     	;# 
  4660  0EA2                     	;# 
  4661  0EA3                     	;# 
  4662  0EA4                     	;# 
  4663  0EA5                     	;# 
  4664  0EA9                     	;# 
  4665  0EAA                     	;# 
  4666  0EAB                     	;# 
  4667  0EAC                     	;# 
  4668  0EB1                     	;# 
  4669  0EB2                     	;# 
  4670  0EB3                     	;# 
  4671  0EB8                     	;# 
  4672  0EB9                     	;# 
  4673  0EBA                     	;# 
  4674  0EBB                     	;# 
  4675  0EBC                     	;# 
  4676  0EBD                     	;# 
  4677  0EBE                     	;# 
  4678  0EC3                     	;# 
  4679  0EC5                     	;# 
  4680  0EC6                     	;# 
  4681  0EC7                     	;# 
  4682  0EC8                     	;# 
  4683  0EC9                     	;# 
  4684  0ECA                     	;# 
  4685  0ECB                     	;# 
  4686  0ECC                     	;# 
  4687  0F10                     	;# 
  4688  0F11                     	;# 
  4689  0F12                     	;# 
  4690  0F13                     	;# 
  4691  0F14                     	;# 
  4692  0F15                     	;# 
  4693  0F16                     	;# 
  4694  0F17                     	;# 
  4695  0F18                     	;# 
  4696  0F19                     	;# 
  4697  0F1A                     	;# 
  4698  0F1B                     	;# 
  4699  0F1C                     	;# 
  4700  0F1D                     	;# 
  4701  0F1E                     	;# 
  4702  0F1F                     	;# 
  4703  0F20                     	;# 
  4704  0F21                     	;# 
  4705  0F22                     	;# 
  4706  0F23                     	;# 
  4707  0F24                     	;# 
  4708  0F25                     	;# 
  4709  0F26                     	;# 
  4710  0F27                     	;# 
  4711  0F38                     	;# 
  4712  0F39                     	;# 
  4713  0F3A                     	;# 
  4714  0F3B                     	;# 
  4715  0F3C                     	;# 
  4716  0F3D                     	;# 
  4717  0F3E                     	;# 
  4718  0F3F                     	;# 
  4719  0F40                     	;# 
  4720  0F41                     	;# 
  4721  0F43                     	;# 
  4722  0F44                     	;# 
  4723  0F45                     	;# 
  4724  0F46                     	;# 
  4725  0F47                     	;# 
  4726  0F48                     	;# 
  4727  0F49                     	;# 
  4728  0F4A                     	;# 
  4729  0F4B                     	;# 
  4730  0F4C                     	;# 
  4731  0F4E                     	;# 
  4732  0F4F                     	;# 
  4733  0F50                     	;# 
  4734  0F51                     	;# 
  4735  0F52                     	;# 
  4736  0F53                     	;# 
  4737  0F54                     	;# 
  4738  0F55                     	;# 
  4739  0F56                     	;# 
  4740  0F57                     	;# 
  4741  0F65                     	;# 
  4742  0F68                     	;# 
  4743  0F69                     	;# 
  4744  0F6A                     	;# 
  4745  0F6B                     	;# 
  4746  0FE4                     	;# 
  4747  0FE5                     	;# 
  4748  0FE6                     	;# 
  4749  0FE7                     	;# 
  4750  0FE8                     	;# 
  4751  0FE9                     	;# 
  4752  0FEA                     	;# 
  4753  0FEB                     	;# 
  4754  0FED                     	;# 
  4755  0FEE                     	;# 
  4756  0FEF                     	;# 
  4757  0000                     	;# 
  4758  0001                     	;# 
  4759  0002                     	;# 
  4760  0003                     	;# 
  4761  0004                     	;# 
  4762  0005                     	;# 
  4763  0006                     	;# 
  4764  0007                     	;# 
  4765  0008                     	;# 
  4766  0009                     	;# 
  4767  000A                     	;# 
  4768  000B                     	;# 
  4769  000C                     	;# 
  4770  000D                     	;# 
  4771  000E                     	;# 
  4772  0010                     	;# 
  4773  0011                     	;# 
  4774  0012                     	;# 
  4775  0013                     	;# 
  4776  0016                     	;# 
  4777  0017                     	;# 
  4778  0018                     	;# 
  4779  001C                     	;# 
  4780  001C                     	;# 
  4781  001D                     	;# 
  4782  001D                     	;# 
  4783  001E                     	;# 
  4784  001F                     	;# 
  4785  008C                     	;# 
  4786  008C                     	;# 
  4787  008D                     	;# 
  4788  008E                     	;# 
  4789  008E                     	;# 
  4790  008F                     	;# 
  4791  0090                     	;# 
  4792  0090                     	;# 
  4793  0091                     	;# 
  4794  0093                     	;# 
  4795  0094                     	;# 
  4796  0095                     	;# 
  4797  0096                     	;# 
  4798  0097                     	;# 
  4799  0098                     	;# 
  4800  0099                     	;# 
  4801  009A                     	;# 
  4802  009B                     	;# 
  4803  009C                     	;# 
  4804  009D                     	;# 
  4805  009E                     	;# 
  4806  010C                     	;# 
  4807  010D                     	;# 
  4808  010E                     	;# 
  4809  010E                     	;# 
  4810  010F                     	;# 
  4811  0110                     	;# 
  4812  0110                     	;# 
  4813  0111                     	;# 
  4814  0112                     	;# 
  4815  0112                     	;# 
  4816  0113                     	;# 
  4817  0114                     	;# 
  4818  0114                     	;# 
  4819  0115                     	;# 
  4820  0116                     	;# 
  4821  0116                     	;# 
  4822  0117                     	;# 
  4823  0119                     	;# 
  4824  0119                     	;# 
  4825  0119                     	;# 
  4826  011A                     	;# 
  4827  011A                     	;# 
  4828  011A                     	;# 
  4829  011B                     	;# 
  4830  011B                     	;# 
  4831  011B                     	;# 
  4832  011B                     	;# 
  4833  011B                     	;# 
  4834  011C                     	;# 
  4835  011C                     	;# 
  4836  011C                     	;# 
  4837  011D                     	;# 
  4838  011D                     	;# 
  4839  011D                     	;# 
  4840  011E                     	;# 
  4841  011E                     	;# 
  4842  011E                     	;# 
  4843  011F                     	;# 
  4844  011F                     	;# 
  4845  011F                     	;# 
  4846  011F                     	;# 
  4847  011F                     	;# 
  4848  018C                     	;# 
  4849  018D                     	;# 
  4850  018E                     	;# 
  4851  018F                     	;# 
  4852  0190                     	;# 
  4853  0191                     	;# 
  4854  0192                     	;# 
  4855  0196                     	;# 
  4856  0197                     	;# 
  4857  0198                     	;# 
  4858  0199                     	;# 
  4859  019A                     	;# 
  4860  019B                     	;# 
  4861  019C                     	;# 
  4862  020C                     	;# 
  4863  020C                     	;# 
  4864  020D                     	;# 
  4865  020E                     	;# 
  4866  020F                     	;# 
  4867  020F                     	;# 
  4868  0210                     	;# 
  4869  0210                     	;# 
  4870  0211                     	;# 
  4871  0211                     	;# 
  4872  0212                     	;# 
  4873  0212                     	;# 
  4874  0213                     	;# 
  4875  0214                     	;# 
  4876  0215                     	;# 
  4877  0215                     	;# 
  4878  0216                     	;# 
  4879  0216                     	;# 
  4880  0217                     	;# 
  4881  0217                     	;# 
  4882  0218                     	;# 
  4883  0218                     	;# 
  4884  0219                     	;# 
  4885  021A                     	;# 
  4886  021B                     	;# 
  4887  021B                     	;# 
  4888  021C                     	;# 
  4889  021C                     	;# 
  4890  021D                     	;# 
  4891  021D                     	;# 
  4892  021E                     	;# 
  4893  021F                     	;# 
  4894  028C                     	;# 
  4895  028C                     	;# 
  4896  028D                     	;# 
  4897  028D                     	;# 
  4898  028E                     	;# 
  4899  028F                     	;# 
  4900  0290                     	;# 
  4901  0290                     	;# 
  4902  0291                     	;# 
  4903  0292                     	;# 
  4904  0292                     	;# 
  4905  0293                     	;# 
  4906  0293                     	;# 
  4907  0294                     	;# 
  4908  0295                     	;# 
  4909  0296                     	;# 
  4910  0296                     	;# 
  4911  0297                     	;# 
  4912  0298                     	;# 
  4913  0298                     	;# 
  4914  0299                     	;# 
  4915  0299                     	;# 
  4916  029A                     	;# 
  4917  029B                     	;# 
  4918  029C                     	;# 
  4919  029C                     	;# 
  4920  029D                     	;# 
  4921  030C                     	;# 
  4922  030C                     	;# 
  4923  030D                     	;# 
  4924  030E                     	;# 
  4925  030F                     	;# 
  4926  0310                     	;# 
  4927  0310                     	;# 
  4928  0311                     	;# 
  4929  0312                     	;# 
  4930  0313                     	;# 
  4931  0314                     	;# 
  4932  0314                     	;# 
  4933  0315                     	;# 
  4934  0316                     	;# 
  4935  0317                     	;# 
  4936  0318                     	;# 
  4937  0318                     	;# 
  4938  0319                     	;# 
  4939  031A                     	;# 
  4940  031B                     	;# 
  4941  031C                     	;# 
  4942  031C                     	;# 
  4943  031D                     	;# 
  4944  031E                     	;# 
  4945  031F                     	;# 
  4946  038C                     	;# 
  4947  038D                     	;# 
  4948  038E                     	;# 
  4949  0390                     	;# 
  4950  0391                     	;# 
  4951  0392                     	;# 
  4952  040C                     	;# 
  4953  040D                     	;# 
  4954  040E                     	;# 
  4955  040F                     	;# 
  4956  0410                     	;# 
  4957  0411                     	;# 
  4958  0416                     	;# 
  4959  0416                     	;# 
  4960  0417                     	;# 
  4961  0418                     	;# 
  4962  0418                     	;# 
  4963  0419                     	;# 
  4964  041A                     	;# 
  4965  041A                     	;# 
  4966  041B                     	;# 
  4967  041C                     	;# 
  4968  041C                     	;# 
  4969  041D                     	;# 
  4970  041E                     	;# 
  4971  041F                     	;# 
  4972  048C                     	;# 
  4973  048C                     	;# 
  4974  048D                     	;# 
  4975  048E                     	;# 
  4976  048F                     	;# 
  4977  048F                     	;# 
  4978  0490                     	;# 
  4979  0491                     	;# 
  4980  0492                     	;# 
  4981  0492                     	;# 
  4982  0493                     	;# 
  4983  0494                     	;# 
  4984  0495                     	;# 
  4985  0495                     	;# 
  4986  0496                     	;# 
  4987  0497                     	;# 
  4988  0498                     	;# 
  4989  0499                     	;# 
  4990  049A                     	;# 
  4991  049B                     	;# 
  4992  049C                     	;# 
  4993  049D                     	;# 
  4994  050C                     	;# 
  4995  050C                     	;# 
  4996  050D                     	;# 
  4997  050E                     	;# 
  4998  050F                     	;# 
  4999  050F                     	;# 
  5000  0510                     	;# 
  5001  0511                     	;# 
  5002  0512                     	;# 
  5003  0512                     	;# 
  5004  0513                     	;# 
  5005  0514                     	;# 
  5006  0515                     	;# 
  5007  0515                     	;# 
  5008  0516                     	;# 
  5009  0517                     	;# 
  5010  0518                     	;# 
  5011  0519                     	;# 
  5012  051A                     	;# 
  5013  051B                     	;# 
  5014  051C                     	;# 
  5015  051D                     	;# 
  5016  058C                     	;# 
  5017  058C                     	;# 
  5018  058D                     	;# 
  5019  058E                     	;# 
  5020  058F                     	;# 
  5021  058F                     	;# 
  5022  0590                     	;# 
  5023  0591                     	;# 
  5024  0592                     	;# 
  5025  0593                     	;# 
  5026  060C                     	;# 
  5027  060D                     	;# 
  5028  060E                     	;# 
  5029  060F                     	;# 
  5030  0610                     	;# 
  5031  0611                     	;# 
  5032  0612                     	;# 
  5033  0613                     	;# 
  5034  0614                     	;# 
  5035  0616                     	;# 
  5036  0617                     	;# 
  5037  0618                     	;# 
  5038  0619                     	;# 
  5039  061A                     	;# 
  5040  061B                     	;# 
  5041  061C                     	;# 
  5042  061D                     	;# 
  5043  061E                     	;# 
  5044  068C                     	;# 
  5045  068D                     	;# 
  5046  068E                     	;# 
  5047  068F                     	;# 
  5048  0690                     	;# 
  5049  0691                     	;# 
  5050  0692                     	;# 
  5051  0693                     	;# 
  5052  0694                     	;# 
  5053  070C                     	;# 
  5054  070D                     	;# 
  5055  070E                     	;# 
  5056  070F                     	;# 
  5057  0710                     	;# 
  5058  0711                     	;# 
  5059  0712                     	;# 
  5060  0713                     	;# 
  5061  0714                     	;# 
  5062  0716                     	;# 
  5063  0717                     	;# 
  5064  0718                     	;# 
  5065  0719                     	;# 
  5066  071A                     	;# 
  5067  071B                     	;# 
  5068  071C                     	;# 
  5069  071D                     	;# 
  5070  071E                     	;# 
  5071  0796                     	;# 
  5072  0797                     	;# 
  5073  0798                     	;# 
  5074  0799                     	;# 
  5075  079A                     	;# 
  5076  079B                     	;# 
  5077  080C                     	;# 
  5078  080D                     	;# 
  5079  080E                     	;# 
  5080  080F                     	;# 
  5081  0810                     	;# 
  5082  0811                     	;# 
  5083  0812                     	;# 
  5084  0813                     	;# 
  5085  0814                     	;# 
  5086  081A                     	;# 
  5087  081B                     	;# 
  5088  081C                     	;# 
  5089  081D                     	;# 
  5090  081E                     	;# 
  5091  081F                     	;# 
  5092  088C                     	;# 
  5093  088D                     	;# 
  5094  088E                     	;# 
  5095  088F                     	;# 
  5096  0890                     	;# 
  5097  0891                     	;# 
  5098  0892                     	;# 
  5099  0893                     	;# 
  5100  0895                     	;# 
  5101  0896                     	;# 
  5102  0897                     	;# 
  5103  0898                     	;# 
  5104  0899                     	;# 
  5105  089A                     	;# 
  5106  089B                     	;# 
  5107  090C                     	;# 
  5108  090E                     	;# 
  5109  090F                     	;# 
  5110  091F                     	;# 
  5111  091F                     	;# 
  5112  098F                     	;# 
  5113  098F                     	;# 
  5114  0990                     	;# 
  5115  0991                     	;# 
  5116  0992                     	;# 
  5117  0993                     	;# 
  5118  0994                     	;# 
  5119  0995                     	;# 
  5120  0996                     	;# 
  5121  0997                     	;# 
  5122  0E0F                     	;# 
  5123  0E10                     	;# 
  5124  0E11                     	;# 
  5125  0E12                     	;# 
  5126  0E13                     	;# 
  5127  0E14                     	;# 
  5128  0E15                     	;# 
  5129  0E16                     	;# 
  5130  0E17                     	;# 
  5131  0E18                     	;# 
  5132  0E19                     	;# 
  5133  0E1A                     	;# 
  5134  0E1B                     	;# 
  5135  0E1C                     	;# 
  5136  0E1D                     	;# 
  5137  0E1E                     	;# 
  5138  0E1F                     	;# 
  5139  0E20                     	;# 
  5140  0E21                     	;# 
  5141  0E22                     	;# 
  5142  0E23                     	;# 
  5143  0E24                     	;# 
  5144  0E25                     	;# 
  5145  0E26                     	;# 
  5146  0E27                     	;# 
  5147  0E28                     	;# 
  5148  0E29                     	;# 
  5149  0E2A                     	;# 
  5150  0E2B                     	;# 
  5151  0E2C                     	;# 
  5152  0E2D                     	;# 
  5153  0E2E                     	;# 
  5154  0E2F                     	;# 
  5155  0E30                     	;# 
  5156  0E31                     	;# 
  5157  0E32                     	;# 
  5158  0E33                     	;# 
  5159  0E34                     	;# 
  5160  0E35                     	;# 
  5161  0E36                     	;# 
  5162  0E37                     	;# 
  5163  0E8F                     	;# 
  5164  0E90                     	;# 
  5165  0E91                     	;# 
  5166  0E92                     	;# 
  5167  0E93                     	;# 
  5168  0E94                     	;# 
  5169  0E95                     	;# 
  5170  0E96                     	;# 
  5171  0E97                     	;# 
  5172  0E9C                     	;# 
  5173  0E9D                     	;# 
  5174  0E9E                     	;# 
  5175  0EA1                     	;# 
  5176  0EA2                     	;# 
  5177  0EA3                     	;# 
  5178  0EA4                     	;# 
  5179  0EA5                     	;# 
  5180  0EA9                     	;# 
  5181  0EAA                     	;# 
  5182  0EAB                     	;# 
  5183  0EAC                     	;# 
  5184  0EB1                     	;# 
  5185  0EB2                     	;# 
  5186  0EB3                     	;# 
  5187  0EB8                     	;# 
  5188  0EB9                     	;# 
  5189  0EBA                     	;# 
  5190  0EBB                     	;# 
  5191  0EBC                     	;# 
  5192  0EBD                     	;# 
  5193  0EBE                     	;# 
  5194  0EC3                     	;# 
  5195  0EC5                     	;# 
  5196  0EC6                     	;# 
  5197  0EC7                     	;# 
  5198  0EC8                     	;# 
  5199  0EC9                     	;# 
  5200  0ECA                     	;# 
  5201  0ECB                     	;# 
  5202  0ECC                     	;# 
  5203  0F10                     	;# 
  5204  0F11                     	;# 
  5205  0F12                     	;# 
  5206  0F13                     	;# 
  5207  0F14                     	;# 
  5208  0F15                     	;# 
  5209  0F16                     	;# 
  5210  0F17                     	;# 
  5211  0F18                     	;# 
  5212  0F19                     	;# 
  5213  0F1A                     	;# 
  5214  0F1B                     	;# 
  5215  0F1C                     	;# 
  5216  0F1D                     	;# 
  5217  0F1E                     	;# 
  5218  0F1F                     	;# 
  5219  0F20                     	;# 
  5220  0F21                     	;# 
  5221  0F22                     	;# 
  5222  0F23                     	;# 
  5223  0F24                     	;# 
  5224  0F25                     	;# 
  5225  0F26                     	;# 
  5226  0F27                     	;# 
  5227  0F38                     	;# 
  5228  0F39                     	;# 
  5229  0F3A                     	;# 
  5230  0F3B                     	;# 
  5231  0F3C                     	;# 
  5232  0F3D                     	;# 
  5233  0F3E                     	;# 
  5234  0F3F                     	;# 
  5235  0F40                     	;# 
  5236  0F41                     	;# 
  5237  0F43                     	;# 
  5238  0F44                     	;# 
  5239  0F45                     	;# 
  5240  0F46                     	;# 
  5241  0F47                     	;# 
  5242  0F48                     	;# 
  5243  0F49                     	;# 
  5244  0F4A                     	;# 
  5245  0F4B                     	;# 
  5246  0F4C                     	;# 
  5247  0F4E                     	;# 
  5248  0F4F                     	;# 
  5249  0F50                     	;# 
  5250  0F51                     	;# 
  5251  0F52                     	;# 
  5252  0F53                     	;# 
  5253  0F54                     	;# 
  5254  0F55                     	;# 
  5255  0F56                     	;# 
  5256  0F57                     	;# 
  5257  0F65                     	;# 
  5258  0F68                     	;# 
  5259  0F69                     	;# 
  5260  0F6A                     	;# 
  5261  0F6B                     	;# 
  5262  0FE4                     	;# 
  5263  0FE5                     	;# 
  5264  0FE6                     	;# 
  5265  0FE7                     	;# 
  5266  0FE8                     	;# 
  5267  0FE9                     	;# 
  5268  0FEA                     	;# 
  5269  0FEB                     	;# 
  5270  0FED                     	;# 
  5271  0FEE                     	;# 
  5272  0FEF                     	;_Isamples
  5273                           
  5274                           	psect	idataBANK0
  5275  0804                     __pidataBANK0:	
  5276                           
  5277                           ;initializer for _batteryTemp
  5278  0804  34FA               	retlw	250
  5279  0805  3400               	retlw	0
  5280                           
  5281                           	psect	idataBANK2
  5282  1FDD                     __pidataBANK2:	
  5283                           
  5284                           ;initializer for _Vchannels
  5285  1FDD  3415               	retlw	21
  5286  1FDE  3400               	retlw	0
  5287  1FDF  3411               	retlw	17
  5288  1FE0  3400               	retlw	0
  5289  1FE1  3417               	retlw	23
  5290  1FE2  3400               	retlw	0
  5291  1FE3  3413               	retlw	19
  5292  1FE4  3400               	retlw	0
  5293                           
  5294                           ;initializer for _Ichannels
  5295  1FE5  3414               	retlw	20
  5296  1FE6  3400               	retlw	0
  5297  1FE7  3410               	retlw	16
  5298  1FE8  3400               	retlw	0
  5299  1FE9  3416               	retlw	22
  5300  1FEA  3400               	retlw	0
  5301  1FEB  3412               	retlw	18
  5302  1FEC  3400               	retlw	0
  5303                           
  5304                           	psect	stringtext1
  5305  1000                     __pstringtext1:	
  5306  1000                     _fonts:	
  5307  1000  3400               	retlw	0
  5308  1001  3400               	retlw	0
  5309  1002  3400               	retlw	0
  5310  1003  3400               	retlw	0
  5311  1004  344E               	retlw	78
  5312  1005  3400               	retlw	0
  5313  1006  3406               	retlw	6
  5314  1007  3400               	retlw	0
  5315  1008  3406               	retlw	6
  5316  1009  34FF               	retlw	255
  5317  100A  34FF               	retlw	255
  5318  100B  34FF               	retlw	255
  5319  100C  3448               	retlw	72
  5320  100D  34D6               	retlw	214
  5321  100E  3424               	retlw	36
  5322  100F  3412               	retlw	18
  5323  1010  3408               	retlw	8
  5324  1011  3424               	retlw	36
  5325  1012  34FF               	retlw	255
  5326  1013  34FF               	retlw	255
  5327  1014  34FF               	retlw	255
  5328  1015  3400               	retlw	0
  5329  1016  3406               	retlw	6
  5330  1017  3400               	retlw	0
  5331  1018  3438               	retlw	56
  5332  1019  3444               	retlw	68
  5333  101A  3482               	retlw	130
  5334  101B  3482               	retlw	130
  5335  101C  3444               	retlw	68
  5336  101D  3438               	retlw	56
  5337  101E  3414               	retlw	20
  5338  101F  3408               	retlw	8
  5339  1020  343E               	retlw	62
  5340  1021  3410               	retlw	16
  5341  1022  3438               	retlw	56
  5342  1023  3410               	retlw	16
  5343  1024  34A0               	retlw	160
  5344  1025  3460               	retlw	96
  5345  1026  3400               	retlw	0
  5346  1027  3410               	retlw	16
  5347  1028  3410               	retlw	16
  5348  1029  3410               	retlw	16
  5349  102A  3460               	retlw	96
  5350  102B  3460               	retlw	96
  5351  102C  3400               	retlw	0
  5352  102D  3460               	retlw	96
  5353  102E  3418               	retlw	24
  5354  102F  3406               	retlw	6
  5355  1030  347C               	retlw	124
  5356  1031  3442               	retlw	66
  5357  1032  347C               	retlw	124
  5358  1033  3444               	retlw	68
  5359  1034  347E               	retlw	126
  5360  1035  3440               	retlw	64
  5361  1036  3464               	retlw	100
  5362  1037  3452               	retlw	82
  5363  1038  344C               	retlw	76
  5364  1039  344A               	retlw	74
  5365  103A  344A               	retlw	74
  5366  103B  3434               	retlw	52
  5367  103C  3438               	retlw	56
  5368  103D  3424               	retlw	36
  5369  103E  347E               	retlw	126
  5370  103F  344E               	retlw	78
  5371  1040  344A               	retlw	74
  5372  1041  3432               	retlw	50
  5373  1042  343C               	retlw	60
  5374  1043  344A               	retlw	74
  5375  1044  3432               	retlw	50
  5376  1045  3462               	retlw	98
  5377  1046  341A               	retlw	26
  5378  1047  3406               	retlw	6
  5379  1048  3476               	retlw	118
  5380  1049  344A               	retlw	74
  5381  104A  3476               	retlw	118
  5382  104B  344C               	retlw	76
  5383  104C  3452               	retlw	82
  5384  104D  343C               	retlw	60
  5385  104E  346C               	retlw	108
  5386  104F  346C               	retlw	108
  5387  1050  3400               	retlw	0
  5388  1051  34AC               	retlw	172
  5389  1052  346C               	retlw	108
  5390  1053  3400               	retlw	0
  5391  1054  3410               	retlw	16
  5392  1055  3428               	retlw	40
  5393  1056  3444               	retlw	68
  5394  1057  3428               	retlw	40
  5395  1058  3428               	retlw	40
  5396  1059  3428               	retlw	40
  5397  105A  3444               	retlw	68
  5398  105B  3428               	retlw	40
  5399  105C  3410               	retlw	16
  5400  105D  3402               	retlw	2
  5401  105E  3459               	retlw	89
  5402  105F  3406               	retlw	6
  5403  1060  34FF               	retlw	255
  5404  1061  34FF               	retlw	255
  5405  1062  34FF               	retlw	255
  5406  1063  347C               	retlw	124
  5407  1064  3412               	retlw	18
  5408  1065  347C               	retlw	124
  5409  1066  347E               	retlw	126
  5410  1067  345A               	retlw	90
  5411  1068  3434               	retlw	52
  5412  1069  343C               	retlw	60
  5413  106A  3442               	retlw	66
  5414  106B  3442               	retlw	66
  5415  106C  347E               	retlw	126
  5416  106D  3442               	retlw	66
  5417  106E  343C               	retlw	60
  5418  106F  347E               	retlw	126
  5419  1070  344A               	retlw	74
  5420  1071  3442               	retlw	66
  5421  1072  347E               	retlw	126
  5422  1073  340A               	retlw	10
  5423  1074  340A               	retlw	10
  5424  1075  343C               	retlw	60
  5425  1076  3452               	retlw	82
  5426  1077  3434               	retlw	52
  5427  1078  347E               	retlw	126
  5428  1079  3408               	retlw	8
  5429  107A  347E               	retlw	126
  5430  107B  3442               	retlw	66
  5431  107C  347E               	retlw	126
  5432  107D  3442               	retlw	66
  5433  107E  3430               	retlw	48
  5434  107F  3440               	retlw	64
  5435  1080  343E               	retlw	62
  5436  1081  347E               	retlw	126
  5437  1082  3418               	retlw	24
  5438  1083  3466               	retlw	102
  5439  1084  347E               	retlw	126
  5440  1085  3440               	retlw	64
  5441  1086  3440               	retlw	64
  5442  1087  347E               	retlw	126
  5443  1088  341C               	retlw	28
  5444  1089  347E               	retlw	126
  5445  108A  347E               	retlw	126
  5446  108B  3402               	retlw	2
  5447  108C  347E               	retlw	126
  5448  108D  343C               	retlw	60
  5449  108E  3442               	retlw	66
  5450  108F  343C               	retlw	60
  5451  1090  347E               	retlw	126
  5452  1091  3412               	retlw	18
  5453  1092  340C               	retlw	12
  5454  1093  347E               	retlw	126
  5455  1094  3462               	retlw	98
  5456  1095  34FE               	retlw	254
  5457  1096  347E               	retlw	126
  5458  1097  3432               	retlw	50
  5459  1098  344E               	retlw	78
  5460  1099  3444               	retlw	68
  5461  109A  344A               	retlw	74
  5462  109B  3432               	retlw	50
  5463  109C  3402               	retlw	2
  5464  109D  347E               	retlw	126
  5465  109E  3402               	retlw	2
  5466  109F  347E               	retlw	126
  5467  10A0  3440               	retlw	64
  5468  10A1  347E               	retlw	126
  5469  10A2  343E               	retlw	62
  5470  10A3  3440               	retlw	64
  5471  10A4  343E               	retlw	62
  5472  10A5  347E               	retlw	126
  5473  10A6  3438               	retlw	56
  5474  10A7  347E               	retlw	126
  5475  10A8  3466               	retlw	102
  5476  10A9  3418               	retlw	24
  5477  10AA  3466               	retlw	102
  5478  10AB  340E               	retlw	14
  5479  10AC  3470               	retlw	112
  5480  10AD  340E               	retlw	14
  5481  10AE  3462               	retlw	98
  5482  10AF  345A               	retlw	90
  5483  10B0  3446               	retlw	70
  5484  10B1  3400               	retlw	0
  5485  10B2  347E               	retlw	126
  5486  10B3  3442               	retlw	66
  5487  10B4  3406               	retlw	6
  5488  10B5  3418               	retlw	24
  5489  10B6  3460               	retlw	96
  5490  10B7  3442               	retlw	66
  5491  10B8  347E               	retlw	126
  5492  10B9  3400               	retlw	0
  5493  10BA  3404               	retlw	4
  5494  10BB  3402               	retlw	2
  5495  10BC  3404               	retlw	4
  5496  10BD  3440               	retlw	64
  5497  10BE  3440               	retlw	64
  5498  10BF  3440               	retlw	64
  5499  10C0  3400               	retlw	0
  5500  10C1  3402               	retlw	2
  5501  10C2  3404               	retlw	4
  5502  10C3  3474               	retlw	116
  5503  10C4  3454               	retlw	84
  5504  10C5  3478               	retlw	120
  5505  10C6  347E               	retlw	126
  5506  10C7  3448               	retlw	72
  5507  10C8  3430               	retlw	48
  5508  10C9  3430               	retlw	48
  5509  10CA  3448               	retlw	72
  5510  10CB  3448               	retlw	72
  5511  10CC  3430               	retlw	48
  5512  10CD  3448               	retlw	72
  5513  10CE  347E               	retlw	126
  5514  10CF  3438               	retlw	56
  5515  10D0  3454               	retlw	84
  5516  10D1  3458               	retlw	88
  5517  10D2  347C               	retlw	124
  5518  10D3  340A               	retlw	10
  5519  10D4  3402               	retlw	2
  5520  10D5  3498               	retlw	152
  5521  10D6  34A4               	retlw	164
  5522  10D7  347C               	retlw	124
  5523  10D8  347E               	retlw	126
  5524  10D9  3408               	retlw	8
  5525  10DA  3470               	retlw	112
  5526  10DB  3448               	retlw	72
  5527  10DC  347A               	retlw	122
  5528  10DD  3440               	retlw	64
  5529  10DE  3488               	retlw	136
  5530  10DF  34FA               	retlw	250
  5531  10E0  3400               	retlw	0
  5532  10E1  347E               	retlw	126
  5533  10E2  3418               	retlw	24
  5534  10E3  3464               	retlw	100
  5535  10E4  3442               	retlw	66
  5536  10E5  347E               	retlw	126
  5537  10E6  3440               	retlw	64
  5538  10E7  347C               	retlw	124
  5539  10E8  3438               	retlw	56
  5540  10E9  347C               	retlw	124
  5541  10EA  347C               	retlw	124
  5542  10EB  3404               	retlw	4
  5543  10EC  3478               	retlw	120
  5544  10ED  3438               	retlw	56
  5545  10EE  3444               	retlw	68
  5546  10EF  3438               	retlw	56
  5547  10F0  34FC               	retlw	252
  5548  10F1  3424               	retlw	36
  5549  10F2  3418               	retlw	24
  5550  10F3  3418               	retlw	24
  5551  10F4  3424               	retlw	36
  5552  10F5  34FC               	retlw	252
  5553  10F6  3478               	retlw	120
  5554  10F7  3404               	retlw	4
  5555  10F8  3404               	retlw	4
  5556  10F9  3448               	retlw	72
  5557  10FA  3454               	retlw	84
  5558  10FB  3424               	retlw	36
  5559  10FC  3404               	retlw	4
  5560  10FD  343E               	retlw	62
  5561  10FE  3444               	retlw	68
  5562  10FF  347C               	retlw	124
  5563  1100  3440               	retlw	64
  5564  1101  347C               	retlw	124
  5565  1102  343C               	retlw	60
  5566  1103  3440               	retlw	64
  5567  1104  343C               	retlw	60
  5568  1105  347C               	retlw	124
  5569  1106  3430               	retlw	48
  5570  1107  347C               	retlw	124
  5571  1108  346C               	retlw	108
  5572  1109  3410               	retlw	16
  5573  110A  346C               	retlw	108
  5574  110B  349C               	retlw	156
  5575  110C  34A0               	retlw	160
  5576  110D  347C               	retlw	124
  5577  110E  3464               	retlw	100
  5578  110F  3454               	retlw	84
  5579  1110  344C               	retlw	76
  5580  1111  340C               	retlw	12
  5581  1112  3412               	retlw	18
  5582  1113  340C               	retlw	12
  5583  1114  34FF               	retlw	255
  5584  1115  34FF               	retlw	255
  5585  1116  34FF               	retlw	255
  5586  1117  34FF               	retlw	255
  5587  1118  34FF               	retlw	255
  5588  1119  34FF               	retlw	255
  5589  111A  34FF               	retlw	255
  5590  111B  34FF               	retlw	255
  5591  111C  34FF               	retlw	255
  5592  111D  34FF               	retlw	255
  5593  111E  34FF               	retlw	255
  5594  111F  34FF               	retlw	255
  5595  1120  34FF               	retlw	255
  5596  1121  34FF               	retlw	255
  5597  1122  34FF               	retlw	255
  5598  1123  34FF               	retlw	255
  5599  1124  34FF               	retlw	255
  5600  1125  34FF               	retlw	255
  5601  1126  34FC               	retlw	252
  5602  1127  3440               	retlw	64
  5603  1128  347C               	retlw	124
  5604  1129  34FF               	retlw	255
  5605  112A  34FF               	retlw	255
  5606  112B  34FF               	retlw	255
  5607  112C  34FF               	retlw	255
  5608  112D  34FF               	retlw	255
  5609  112E  34FF               	retlw	255
  5610  112F                     __end_of_fonts:	
  5611                           
  5612                           	psect	stringtext2
  5613  1800                     __pstringtext2:	
  5614  1800                     log@coeff:	
  5615  1800  3400               	retlw	0
  5616  1801  3400               	retlw	0
  5617  1802  3400               	retlw	0
  5618  1803  3400               	retlw	0
  5619  1804  3480               	retlw	128
  5620  1805  343F               	retlw	63
  5621  1806  34F0               	retlw	240
  5622  1807  34FF               	retlw	255
  5623  1808  34BE               	retlw	190
  5624  1809  34E2               	retlw	226
  5625  180A  34A9               	retlw	169
  5626  180B  343E               	retlw	62
  5627  180C  3483               	retlw	131
  5628  180D  3476               	retlw	118
  5629  180E  34BE               	retlw	190
  5630  180F  34AE               	retlw	174
  5631  1810  342B               	retlw	43
  5632  1811  343E               	retlw	62
  5633  1812  343C               	retlw	60
  5634  1813  34C3               	retlw	195
  5635  1814  34BD               	retlw	189
  5636  1815  34D2               	retlw	210
  5637  1816  3413               	retlw	19
  5638  1817  343D               	retlw	61
  5639  1818  3478               	retlw	120
  5640  1819  34D3               	retlw	211
  5641  181A  34BB               	retlw	187
  5642  181B                     __end_oflog@coeff:	
  5643  0013                     _TRISC	set	19
  5644  0012                     _TRISB	set	18
  5645  0011                     _TRISA	set	17
  5646  0018                     _LATC	set	24
  5647  0017                     _LATB	set	23
  5648  0016                     _LATA	set	22
  5649  0016                     _LATAbits	set	22
  5650  0011                     _TRISAbits	set	17
  5651  00B5                     _LATA5	set	181
  5652  006A                     _RB2	set	106
  5653  005F                     _GIE	set	95
  5654  0093                     _ADCON0	set	147
  5655  009D                     _ADACQ	set	157
  5656  009C                     _ADPRE	set	156
  5657  009B                     _ADCAP	set	155
  5658  009A                     _ADREF	set	154
  5659  0098                     _ADCLK	set	152
  5660  0097                     _ADSTAT	set	151
  5661  0099                     _ADACT	set	153
  5662  0096                     _ADCON3	set	150
  5663  0095                     _ADCON2	set	149
  5664  0094                     _ADCON1	set	148
  5665  008C                     _ADRESL	set	140
  5666  008D                     _ADRESH	set	141
  5667  0093                     _ADCON0bits	set	147
  5668  009E                     _ADPCH	set	158
  5669  0113                     _ADSTPTH	set	275
  5670  0112                     _ADSTPTL	set	274
  5671  0111                     _ADUTHH	set	273
  5672  0110                     _ADUTHL	set	272
  5673  010F                     _ADLTHH	set	271
  5674  010E                     _ADLTHL	set	270
  5675  010D                     _ADRPT	set	269
  5676  021E                     _CCPTMRS0bits	set	542
  5677  021F                     _CCPTMRS1bits	set	543
  5678  0294                     _T4CONbits	set	660
  5679  0292                     _T4TMR	set	658
  5680  0293                     _T4PR	set	659
  5681  0297                     _T4RST	set	663
  5682  0295                     _T4HLT	set	661
  5683  0296                     _T4CLKCON	set	662
  5684  0294                     _T4CON	set	660
  5685  028E                     _T2CONbits	set	654
  5686  028C                     _T2TMR	set	652
  5687  028D                     _T2PR	set	653
  5688  0291                     _T2RST	set	657
  5689  028F                     _T2HLT	set	655
  5690  0290                     _T2CLKCON	set	656
  5691  028E                     _T2CON	set	654
  5692  030C                     _CCPR1L	set	780
  5693  030D                     _CCPR1H	set	781
  5694  030E                     _CCP1CONbits	set	782
  5695  0390                     _PWM7DCL	set	912
  5696  0391                     _PWM7DCH	set	913
  5697  0392                     _PWM7CON	set	914
  5698  038C                     _PWM6DCL	set	908
  5699  038D                     _PWM6DCH	set	909
  5700  038E                     _PWM6CON	set	910
  5701  0710                     _PIR4bits	set	1808
  5702  0716                     _PIE0bits	set	1814
  5703  0892                     _OSCTUNE	set	2194
  5704  0893                     _OSCFRQ	set	2195
  5705  0891                     _OSCEN	set	2193
  5706  088F                     _OSCCON3	set	2191
  5707  088D                     _OSCCON1	set	2189
  5708  090C                     _FVRCON	set	2316
  5709  0E8F                     _PPSLOCKbits	set	3727
  5710  0E8F                     _PPSLOCK	set	3727
  5711  0F18                     _RB0PPS	set	3864
  5712  0F17                     _RA7PPS	set	3863
  5713  0F16                     _RA6PPS	set	3862
  5714  0F4E                     _ANSELC	set	3918
  5715  0F43                     _ANSELB	set	3907
  5716  0F38                     _ANSELA	set	3896
  5717  0F65                     _WPUE	set	3941
  5718  0F4F                     _WPUC	set	3919
  5719  0F44                     _WPUB	set	3908
  5720  0F39                     _WPUA	set	3897
  5721  181B                     STR_3:	
  5722  181B  3452               	retlw	82	;'R'
  5723  181C  3465               	retlw	101	;'e'
  5724  181D  3466               	retlw	102	;'f'
  5725  181E  343A               	retlw	58	;':'
  5726  181F  3400               	retlw	0
  5727                           
  5728                           	psect	stringtext3
  5729  1820                     __pstringtext3:	
  5730  1820                     STR_2:	
  5731  1820  344F               	retlw	79	;'O'
  5732  1821  3475               	retlw	117	;'u'
  5733  1822  3474               	retlw	116	;'t'
  5734  1823  343A               	retlw	58	;':'
  5735  1824  3400               	retlw	0
  5736                           
  5737                           	psect	stringtext4
  5738  1825                     __pstringtext4:	
  5739  1825                     STR_1:	
  5740  1825  3449               	retlw	73	;'I'
  5741  1826  346E               	retlw	110	;'n'
  5742  1827  343A               	retlw	58	;':'
  5743  1828  3400               	retlw	0
  5744                           
  5745                           	psect	stringtext5
  5746  0000                     __pstringtext5:	
  5747                           
  5748                           ; #config settings
  5749  0000                     
  5750                           	psect	cinit
  5751  07BC                     start_initialization:	
  5752  07BC                     __initialization:		;BIGRAM
  5753                           
  5754                           ; Initialize objects allocated to BANK0
  5755  07BC  3188  2004  3187   	fcall	__pidataBANK0	;fetch initializer
  5756  07BF  00ED               	movwf	__pdataBANK0& (0+127)
  5757  07C0  3188  2005  3187   	fcall	__pidataBANK0+1	;fetch initializer
  5758  07C3  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  5759                           
  5760                           ; Initialize objects allocated to BANK2
  5761  07C4  30DD               	movlw	low __pidataBANK2
  5762  07C5  0084               	movwf	4
  5763  07C6  309F               	movlw	(high __pidataBANK2)| (0+128)
  5764  07C7  0085               	movwf	5
  5765  07C8  3048               	movlw	low __pdataBANK2
  5766  07C9  0086               	movwf	6
  5767  07CA  3001               	movlw	high __pdataBANK2
  5768  07CB  0087               	movwf	7
  5769  07CC  3000               	movlw	0
  5770  07CD  00FF               	movwf	btemp+1
  5771  07CE  3010               	movlw	16
  5772  07CF  319F  27B5  3187   	fcall	init_ram
  5773                           
  5774                           ; Clear objects allocated to BIGRAM
  5775  07D2  30E8               	movlw	low (0+8680)
  5776  07D3  0084               	movwf	4
  5777  07D4  3021               	movlw	high (0+8680)
  5778  07D5  0085               	movwf	5
  5779  07D6  3008               	movlw	8
  5780  07D7  00FE               	movwf	btemp
  5781  07D8  3002               	movlw	2
  5782  07D9  00FF               	movwf	btemp+1
  5783  07DA  319F  27A9  3187   	fcall	clear_ram0
  5784                           
  5785                           ; Clear objects allocated to BANK0
  5786  07DD  305A               	movlw	low __pbssBANK0
  5787  07DE  0084               	movwf	4
  5788  07DF  3000               	movlw	high __pbssBANK0
  5789  07E0  0085               	movwf	5
  5790  07E1  3013               	movlw	19
  5791  07E2  00FE               	movwf	btemp
  5792  07E3  3000               	movlw	0
  5793  07E4  00FF               	movwf	btemp+1
  5794  07E5  319F  27A9  3187   	fcall	clear_ram0
  5795                           
  5796                           ; Clear objects allocated to BANK1
  5797  07E8  30A0               	movlw	low __pbssBANK1
  5798  07E9  0084               	movwf	4
  5799  07EA  3000               	movlw	high __pbssBANK1
  5800  07EB  0085               	movwf	5
  5801  07EC  3034               	movlw	52
  5802  07ED  00FE               	movwf	btemp
  5803  07EE  3000               	movlw	0
  5804  07EF  00FF               	movwf	btemp+1
  5805  07F0  319F  27A9  3187   	fcall	clear_ram0
  5806                           
  5807                           ; Clear objects allocated to BANK2
  5808  07F3  3020               	movlw	low __pbssBANK2
  5809  07F4  0084               	movwf	4
  5810  07F5  3001               	movlw	high __pbssBANK2
  5811  07F6  0085               	movwf	5
  5812  07F7  3028               	movlw	40
  5813  07F8  00FE               	movwf	btemp
  5814  07F9  3000               	movlw	0
  5815  07FA  00FF               	movwf	btemp+1
  5816  07FB  319F  27A9         	fcall	clear_ram0
  5817  07FD                     end_of_initialization:	
  5818                           ;End of C runtime variable initialization code
  5819                           
  5820  07FD                     __end_of__initialization:	
  5821  07FD  0020               	movlb	0
  5822  07FE  3182  2A17         	ljmp	_main	;jump to C main() function
  5823                           
  5824                           	psect	bssBANK0
  5825  005A                     __pbssBANK0:	
  5826  005A                     _Vref:	
  5827  005A                     	ds	4
  5828  005E                     _readButtons:	
  5829  005E                     	ds	2
  5830  0060                     _VHoldMode:	
  5831  0060                     	ds	2
  5832  0062                     _Imode:	
  5833  0062                     	ds	2
  5834  0064                     _batteryState:	
  5835  0064                     	ds	2
  5836  0066                     _VsampleIndex:	
  5837  0066                     	ds	2
  5838  0068                     _IsampleIndex:	
  5839  0068                     	ds	2
  5840  006A                     _j:	
  5841  006A                     	ds	1
  5842  006B                     _lastButton:	
  5843  006B                     	ds	1
  5844  006C                     _button:	
  5845  006C                     	ds	1
  5846                           
  5847                           	psect	dataBANK0
  5848  006D                     __pdataBANK0:	
  5849  006D                     _batteryTemp:	
  5850  006D                     	ds	2
  5851                           
  5852                           	psect	bssBANK1
  5853  00A0                     __pbssBANK1:	
  5854  00A0                     _Ianalogs:	
  5855  00A0                     	ds	8
  5856  00A8                     _voltage:	
  5857  00A8                     	ds	8
  5858  00B0                     _current:	
  5859  00B0                     	ds	8
  5860  00B8                     LCDWriteInt@F14392:	
  5861  00B8                     	ds	5
  5862  00BD                     _stateCounter:	
  5863  00BD                     	ds	4
  5864  00C1                     _Iref:	
  5865  00C1                     	ds	4
  5866  00C5                     _IminCount:	
  5867  00C5                     	ds	4
  5868  00C9                     _Imin:	
  5869  00C9                     	ds	4
  5870  00CD                     _errno:	
  5871  00CD                     	ds	2
  5872  00CF                     _Iout:	
  5873  00CF                     	ds	2
  5874  00D1                     _cc_cv:	
  5875  00D1                     	ds	2
  5876  00D3                     _x:	
  5877  00D3                     	ds	1
  5878                           
  5879                           	psect	bssBANK2
  5880  0120                     __pbssBANK2:	
  5881  0120                     _Vtotals:	
  5882  0120                     	ds	16
  5883  0130                     _Itotals:	
  5884  0130                     	ds	16
  5885  0140                     _Vanalogs:	
  5886  0140                     	ds	8
  5887                           
  5888                           	psect	dataBANK2
  5889  0148                     __pdataBANK2:	
  5890  0148                     _Vchannels:	
  5891  0148                     	ds	8
  5892  0150                     _Ichannels:	
  5893  0150                     	ds	8
  5894                           
  5895                           	psect	inittext
  5896  1FB5                     init_ram:	
  5897  1FB5  00FE               	movwf	126
  5898  1FB6                     initloop:	
  5899  1FB6  0012               	moviw fsr0++
  5900  1FB7  001E               	movwi fsr1++
  5901  1FB8  3001               	movlw	1
  5902  1FB9  02FE               	subwf	126,f
  5903  1FBA  3000               	movlw	0
  5904  1FBB  3BFF               	subwfb	127,f
  5905  1FBC  087F               	movf	127,w
  5906  1FBD  047E               	iorwf	126,w
  5907  1FBE  1903               	btfsc	3,2
  5908  1FBF  3400               	retlw	0
  5909  1FC0  2FB6               	goto	initloop
  5910                           
  5911                           	psect	clrtext
  5912  1FA9                     clear_ram0:	
  5913                           ;	Called with FSR0 containing the base address, and
  5914                           ;	btemp/btemp+1 has the size to clear
  5915                           
  5916  1FA9  0064               	clrwdt	;clear the watchdog before getting into this loop
  5917  1FAA                     clrloop0:	
  5918  1FAA  0180               	clrf	0	;clear RAM location pointed to by FSR
  5919  1FAB  3101               	addfsr 0,1
  5920  1FAC  3001               	movlw	1
  5921  1FAD  02FE               	subwf	126,f
  5922  1FAE  3000               	movlw	0
  5923  1FAF  3BFF               	subwfb	127,f
  5924  1FB0  087F               	movf	127,w
  5925  1FB1  047E               	iorwf	126,w
  5926  1FB2  1903               	btfsc	3,2
  5927  1FB3  3400               	retlw	0	;all done for this memory range, return
  5928  1FB4  2FAA               	goto	clrloop0	;have we reached the end yet?
  5929                           
  5930                           	psect	cstackBANK1
  5931  00D4                     __pcstackBANK1:	
  5932  00D4                     main@efficiency:	
  5933                           
  5934                           ; 3 bytes @ 0x0
  5935  00D4                     	ds	3
  5936  00D7                     main@faultCount:	
  5937                           
  5938                           ; 2 bytes @ 0x3
  5939  00D7                     	ds	2
  5940  00D9                     main@faultNotReset:	
  5941                           
  5942                           ; 2 bytes @ 0x5
  5943  00D9                     	ds	2
  5944  00DB                     main@displayRefresh:	
  5945                           
  5946                           ; 1 bytes @ 0x7
  5947  00DB                     	ds	1
  5948  00DC                     main@fastLoop:	
  5949                           
  5950                           ; 1 bytes @ 0x8
  5951  00DC                     	ds	1
  5952  00DD                     main@slowLoop:	
  5953                           
  5954                           ; 1 bytes @ 0x9
  5955  00DD                     	ds	1
  5956  00DE                     main@MPPT1:	
  5957                           
  5958                           ; 2 bytes @ 0xA
  5959  00DE                     	ds	2
  5960  00E0                     main@MPPT0:	
  5961                           
  5962                           ; 2 bytes @ 0xC
  5963  00E0                     	ds	2
  5964  00E2                     main@largerIOut:	
  5965                           
  5966                           ; 2 bytes @ 0xE
  5967  00E2                     	ds	2
  5968  00E4                     main@menuButton:	
  5969                           
  5970                           ; 1 bytes @ 0x10
  5971  00E4                     	ds	1
  5972  00E5                     main@dutyCycle1:	
  5973                           
  5974                           ; 2 bytes @ 0x11
  5975  00E5                     	ds	2
  5976  00E7                     main@tempFanOutput:	
  5977                           
  5978                           ; 2 bytes @ 0x13
  5979  00E7                     	ds	2
  5980  00E9                     main@dutyCycle6:	
  5981                           
  5982                           ; 2 bytes @ 0x15
  5983  00E9                     	ds	2
  5984  00EB                     main@dutyCycle7:	
  5985                           
  5986                           ; 2 bytes @ 0x17
  5987  00EB                     	ds	2
  5988  00ED                     main@j:	
  5989                           
  5990                           ; 1 bytes @ 0x19
  5991  00ED                     	ds	1
  5992                           
  5993                           	psect	cstackCOMMON
  5994  0070                     __pcstackCOMMON:	
  5995  0070                     ?___ftge:	
  5996  0070                     ?_LCDWrite:	
  5997                           ; 1 bit 
  5998                           
  5999  0070                     ?_OSCILLATOR_Initialize:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ??_OSCILLATOR_Initialize:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ?_TMR2_Initialize:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ??_TMR2_Initialize:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ?_TMR4_Initialize:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ??_TMR4_Initialize:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ?_calculateCurrent0:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_calculateCurrent1:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ?_calculateCurrent2:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ?_calculateCurrent3:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ?_ADC_Initialize:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ??_ADC_Initialize:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ?_Init_Battery_State_Machine:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0070                     ?_Battery_State_Machine:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0070                     ?_cc_cv_mode:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0070                     ?_readButton:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0070                     ?_LCDWriteCharacter:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0070                     ?_LCDClear:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0070                     ?_LCDInit:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0070                     ?_PIN_MANAGER_Initialize:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0070                     ??_PIN_MANAGER_Initialize:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0070                     ?_PWM_Initialize:	
  6063                           ; 1 bytes @ 0x0
  6064                           
  6065  0070                     ??_PWM_Initialize:	
  6066                           ; 1 bytes @ 0x0
  6067                           
  6068  0070                     ?_PWM6_LoadDutyValue:	
  6069                           ; 1 bytes @ 0x0
  6070                           
  6071  0070                     ?_PWM7_LoadDutyValue:	
  6072                           ; 1 bytes @ 0x0
  6073                           
  6074  0070                     ?_PWM1_LoadDutyValue:	
  6075                           ; 1 bytes @ 0x0
  6076                           
  6077  0070                     ?_SYSTEM_Initialize:	
  6078                           ; 1 bytes @ 0x0
  6079                           
  6080  0070                     ?_main:	
  6081                           ; 1 bytes @ 0x0
  6082                           
  6083  0070                     ?_ADCRead:	
  6084                           ; 1 bytes @ 0x0
  6085                           
  6086  0070                     ?___wmul:	
  6087                           ; 2 bytes @ 0x0
  6088                           
  6089  0070                     ?___awdiv:	
  6090                           ; 2 bytes @ 0x0
  6091                           
  6092  0070                     ?___lwmod:	
  6093                           ; 2 bytes @ 0x0
  6094                           
  6095  0070                     ?___ftpack:	
  6096                           ; 2 bytes @ 0x0
  6097                           
  6098  0070                     ?_frexp:	
  6099                           ; 3 bytes @ 0x0
  6100                           
  6101  0070                     ?___aldiv:	
  6102                           ; 3 bytes @ 0x0
  6103                           
  6104  0070                     LCDWrite@data:	
  6105                           ; 4 bytes @ 0x0
  6106                           
  6107  0070                     PIN_MANAGER_Initialize@state:	
  6108                           ; 1 bytes @ 0x0
  6109                           
  6110  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6111                           ; 1 bytes @ 0x0
  6112                           
  6113  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6114                           ; 2 bytes @ 0x0
  6115                           
  6116  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6117                           ; 2 bytes @ 0x0
  6118                           
  6119  0070                     ___wmul@multiplier:	
  6120                           ; 2 bytes @ 0x0
  6121                           
  6122  0070                     ___awdiv@divisor:	
  6123                           ; 2 bytes @ 0x0
  6124                           
  6125  0070                     ___lwmod@divisor:	
  6126                           ; 2 bytes @ 0x0
  6127                           
  6128  0070                     ___ftpack@arg:	
  6129                           ; 2 bytes @ 0x0
  6130                           
  6131  0070                     ___ftge@ff1:	
  6132                           ; 3 bytes @ 0x0
  6133                           
  6134  0070                     frexp@value:	
  6135                           ; 3 bytes @ 0x0
  6136                           
  6137  0070                     ___aldiv@divisor:	
  6138                           ; 3 bytes @ 0x0
  6139                           
  6140                           
  6141                           ; 4 bytes @ 0x0
  6142  0070                     	ds	1
  6143  0071                     ??_LCDWrite:	
  6144                           
  6145                           ; 1 bytes @ 0x1
  6146  0071                     	ds	1
  6147  0072                     ??_PWM6_LoadDutyValue:	
  6148  0072                     ??_PWM7_LoadDutyValue:	
  6149                           ; 1 bytes @ 0x2
  6150                           
  6151  0072                     ??_PWM1_LoadDutyValue:	
  6152                           ; 1 bytes @ 0x2
  6153                           
  6154  0072                     LCDWrite@data_or_command:	
  6155                           ; 1 bytes @ 0x2
  6156                           
  6157  0072                     ___wmul@multiplicand:	
  6158                           ; 1 bytes @ 0x2
  6159                           
  6160  0072                     ___awdiv@dividend:	
  6161                           ; 2 bytes @ 0x2
  6162                           
  6163  0072                     ___lwmod@dividend:	
  6164                           ; 2 bytes @ 0x2
  6165                           
  6166                           
  6167                           ; 2 bytes @ 0x2
  6168  0072                     	ds	1
  6169  0073                     ??_ADCRead:	
  6170  0073                     ADCRead@channel:	
  6171                           ; 1 bytes @ 0x3
  6172                           
  6173  0073                     LCDWrite@d:	
  6174                           ; 1 bytes @ 0x3
  6175                           
  6176  0073                     ___ftpack@exp:	
  6177                           ; 1 bytes @ 0x3
  6178                           
  6179  0073                     frexp@eptr:	
  6180                           ; 1 bytes @ 0x3
  6181                           
  6182  0073                     ___ftge@ff2:	
  6183                           ; 1 bytes @ 0x3
  6184                           
  6185                           
  6186                           ; 3 bytes @ 0x3
  6187  0073                     	ds	1
  6188  0074                     ??_frexp:	
  6189  0074                     ??_readButton:	
  6190                           ; 1 bytes @ 0x4
  6191                           
  6192  0074                     ??___wmul:	
  6193                           ; 1 bytes @ 0x4
  6194                           
  6195  0074                     ??___awdiv:	
  6196                           ; 1 bytes @ 0x4
  6197                           
  6198  0074                     ??___lwmod:	
  6199                           ; 1 bytes @ 0x4
  6200                           
  6201  0074                     LCDWrite@i:	
  6202                           ; 1 bytes @ 0x4
  6203                           
  6204  0074                     ___ftpack@sign:	
  6205                           ; 1 bytes @ 0x4
  6206                           
  6207  0074                     ___wmul@product:	
  6208                           ; 1 bytes @ 0x4
  6209                           
  6210  0074                     ___aldiv@dividend:	
  6211                           ; 2 bytes @ 0x4
  6212                           
  6213                           
  6214                           ; 4 bytes @ 0x4
  6215  0074                     	ds	1
  6216  0075                     ??___ftpack:	
  6217  0075                     ?_gotoXY:	
  6218                           ; 1 bytes @ 0x5
  6219                           
  6220  0075                     ??_LCDInit:	
  6221                           ; 1 bytes @ 0x5
  6222                           
  6223  0075                     gotoXY@y:	
  6224                           ; 1 bytes @ 0x5
  6225                           
  6226  0075                     ___awdiv@counter:	
  6227                           ; 1 bytes @ 0x5
  6228                           
  6229  0075                     ___lwmod@counter:	
  6230                           ; 1 bytes @ 0x5
  6231                           
  6232                           
  6233                           ; 1 bytes @ 0x5
  6234  0075                     	ds	1
  6235  0076                     ??_gotoXY:	
  6236  0076                     ??_LCDWriteCharacter:	
  6237                           ; 1 bytes @ 0x6
  6238                           
  6239  0076                     ??___ftge:	
  6240                           ; 1 bytes @ 0x6
  6241                           
  6242  0076                     ___awdiv@sign:	
  6243                           ; 1 bytes @ 0x6
  6244                           
  6245                           
  6246                           ; 1 bytes @ 0x6
  6247  0076                     	ds	1
  6248  0077                     gotoXY@x:	
  6249  0077                     ___awdiv@quotient:	
  6250                           ; 1 bytes @ 0x7
  6251                           
  6252                           
  6253                           ; 2 bytes @ 0x7
  6254  0077                     	ds	1
  6255  0078                     ??_LCDClear:	
  6256  0078                     ??___aldiv:	
  6257                           ; 1 bytes @ 0x8
  6258                           
  6259  0078                     ?___awtoft:	
  6260                           ; 1 bytes @ 0x8
  6261                           
  6262  0078                     ___awtoft@c:	
  6263                           ; 3 bytes @ 0x8
  6264                           
  6265                           
  6266                           ; 2 bytes @ 0x8
  6267  0078                     	ds	1
  6268  0079                     LCDWriteCharacter@character:	
  6269  0079                     readIAnalog@analog_channel:	
  6270                           ; 1 bytes @ 0x9
  6271                           
  6272  0079                     readVAnalog@analog_channel:	
  6273                           ; 2 bytes @ 0x9
  6274                           
  6275  0079                     LCDClear@index:	
  6276                           ; 2 bytes @ 0x9
  6277                           
  6278                           
  6279                           ; 2 bytes @ 0x9
  6280  0079                     	ds	1
  6281  007A                     LCDWriteCharacter@base:	
  6282                           
  6283                           ; 2 bytes @ 0xA
  6284  007A                     	ds	1
  6285  007B                     ??___awtoft:	
  6286  007B                     readIAnalog@value:	
  6287                           ; 1 bytes @ 0xB
  6288                           
  6289  007B                     readVAnalog@value:	
  6290                           ; 2 bytes @ 0xB
  6291                           
  6292                           
  6293                           ; 2 bytes @ 0xB
  6294  007B                     	ds	1
  6295  007C                     ?_LCDWriteString:	
  6296  007C                     LCDWriteString@characters:	
  6297                           ; 1 bytes @ 0xC
  6298                           
  6299                           
  6300                           ; 2 bytes @ 0xC
  6301  007C                     	ds	1
  6302  007D                     ___awtoft@sign:	
  6303                           
  6304                           ; 1 bytes @ 0xD
  6305  007D                     	ds	1
  6306  007E                     ??_eval_poly:	
  6307  007E                     ??_tempCalc:	
  6308                           ; 1 bytes @ 0xE
  6309                           
  6310  007E                     ??___ftsub:	
  6311                           ; 1 bytes @ 0xE
  6312                           
  6313                           
  6314                           	psect	cstackBANK0
  6315  0020                     __pcstackBANK0:	
  6316                           ; 1 bytes @ 0xE
  6317                           
  6318  0020                     ??_LCDWriteString:	
  6319  0020                     ?_LCDWriteInt:	
  6320                           ; 1 bytes @ 0x0
  6321                           
  6322  0020                     ?___ftdiv:	
  6323                           ; 1 bytes @ 0x0
  6324                           
  6325  0020                     ?___ftmul:	
  6326                           ; 3 bytes @ 0x0
  6327                           
  6328  0020                     ___aldiv@counter:	
  6329                           ; 3 bytes @ 0x0
  6330                           
  6331  0020                     LCDWriteInt@value:	
  6332                           ; 1 bytes @ 0x0
  6333                           
  6334  0020                     ___ftdiv@f2:	
  6335                           ; 2 bytes @ 0x0
  6336                           
  6337  0020                     ___ftmul@f1:	
  6338                           ; 3 bytes @ 0x0
  6339                           
  6340                           
  6341                           ; 3 bytes @ 0x0
  6342  0020                     	ds	1
  6343  0021                     ___aldiv@sign:	
  6344                           
  6345                           ; 1 bytes @ 0x1
  6346  0021                     	ds	1
  6347  0022                     LCDWriteInt@fieldLength:	
  6348  0022                     ___aldiv@quotient:	
  6349                           ; 1 bytes @ 0x2
  6350                           
  6351                           
  6352                           ; 4 bytes @ 0x2
  6353  0022                     	ds	1
  6354  0023                     LCDWriteInt@numPlaces:	
  6355  0023                     ___ftdiv@f1:	
  6356                           ; 1 bytes @ 0x3
  6357                           
  6358  0023                     ___ftmul@f2:	
  6359                           ; 3 bytes @ 0x3
  6360                           
  6361                           
  6362                           ; 3 bytes @ 0x3
  6363  0023                     	ds	1
  6364  0024                     LCDWriteInt@sign:	
  6365                           
  6366                           ; 1 bytes @ 0x4
  6367  0024                     	ds	1
  6368  0025                     ??_LCDWriteInt:	
  6369                           
  6370                           ; 1 bytes @ 0x5
  6371  0025                     	ds	1
  6372  0026                     ??___ftdiv:	
  6373  0026                     ??___ftmul:	
  6374                           ; 1 bytes @ 0x6
  6375                           
  6376  0026                     ?_readIAnalog:	
  6377                           ; 1 bytes @ 0x6
  6378                           
  6379  0026                     ?_readVAnalog:	
  6380                           ; 2 bytes @ 0x6
  6381                           
  6382  0026                     readIAnalog@channel:	
  6383                           ; 2 bytes @ 0x6
  6384                           
  6385  0026                     readVAnalog@channel:	
  6386                           ; 2 bytes @ 0x6
  6387                           
  6388                           
  6389                           ; 2 bytes @ 0x6
  6390  0026                     	ds	2
  6391  0028                     ??_readIAnalog:	
  6392  0028                     ??_readVAnalog:	
  6393                           ; 1 bytes @ 0x8
  6394                           
  6395                           
  6396                           ; 1 bytes @ 0x8
  6397  0028                     	ds	1
  6398  0029                     LCDWriteInt@str:	
  6399                           
  6400                           ; 5 bytes @ 0x9
  6401  0029                     	ds	1
  6402  002A                     ___ftdiv@cntr:	
  6403  002A                     ___ftmul@exp:	
  6404                           ; 1 bytes @ 0xA
  6405                           
  6406                           
  6407                           ; 1 bytes @ 0xA
  6408  002A                     	ds	1
  6409  002B                     ___ftdiv@f3:	
  6410  002B                     ___ftmul@f3_as_product:	
  6411                           ; 3 bytes @ 0xB
  6412                           
  6413                           
  6414                           ; 3 bytes @ 0xB
  6415  002B                     	ds	3
  6416  002E                     LCDWriteInt@j:	
  6417  002E                     ___ftdiv@exp:	
  6418                           ; 1 bytes @ 0xE
  6419                           
  6420  002E                     ___ftmul@cntr:	
  6421                           ; 1 bytes @ 0xE
  6422                           
  6423                           
  6424                           ; 1 bytes @ 0xE
  6425  002E                     	ds	1
  6426  002F                     LCDWriteInt@i:	
  6427  002F                     ___ftdiv@sign:	
  6428                           ; 1 bytes @ 0xF
  6429                           
  6430  002F                     ___ftmul@sign:	
  6431                           ; 1 bytes @ 0xF
  6432                           
  6433                           
  6434                           ; 1 bytes @ 0xF
  6435  002F                     	ds	1
  6436  0030                     ?___ftadd:	
  6437  0030                     ?___fttol:	
  6438                           ; 3 bytes @ 0x10
  6439                           
  6440  0030                     ___ftadd@f1:	
  6441                           ; 4 bytes @ 0x10
  6442                           
  6443  0030                     ___fttol@f1:	
  6444                           ; 3 bytes @ 0x10
  6445                           
  6446                           
  6447                           ; 3 bytes @ 0x10
  6448  0030                     	ds	3
  6449  0033                     ___ftadd@f2:	
  6450                           
  6451                           ; 3 bytes @ 0x13
  6452  0033                     	ds	1
  6453  0034                     ??___fttol:	
  6454                           
  6455                           ; 1 bytes @ 0x14
  6456  0034                     	ds	2
  6457  0036                     ??___ftadd:	
  6458                           
  6459                           ; 1 bytes @ 0x16
  6460  0036                     	ds	2
  6461  0038                     ___fttol@sign1:	
  6462                           
  6463                           ; 1 bytes @ 0x18
  6464  0038                     	ds	1
  6465  0039                     ___fttol@lval:	
  6466                           
  6467                           ; 4 bytes @ 0x19
  6468  0039                     	ds	1
  6469  003A                     ___ftadd@sign:	
  6470                           
  6471                           ; 1 bytes @ 0x1A
  6472  003A                     	ds	1
  6473  003B                     ___ftadd@exp2:	
  6474                           
  6475                           ; 1 bytes @ 0x1B
  6476  003B                     	ds	1
  6477  003C                     ___ftadd@exp1:	
  6478                           
  6479                           ; 1 bytes @ 0x1C
  6480  003C                     	ds	1
  6481  003D                     ?_eval_poly:	
  6482  003D                     ?___ftsub:	
  6483                           ; 3 bytes @ 0x1D
  6484                           
  6485  003D                     ___fttol@exp1:	
  6486                           ; 3 bytes @ 0x1D
  6487                           
  6488  003D                     ___ftsub@f2:	
  6489                           ; 1 bytes @ 0x1D
  6490                           
  6491  003D                     eval_poly@x:	
  6492                           ; 3 bytes @ 0x1D
  6493                           
  6494                           
  6495                           ; 3 bytes @ 0x1D
  6496  003D                     	ds	1
  6497  003E                     ??_calculateCurrent0:	
  6498  003E                     ??_calculateCurrent1:	
  6499                           ; 1 bytes @ 0x1E
  6500                           
  6501  003E                     ??_calculateCurrent2:	
  6502                           ; 1 bytes @ 0x1E
  6503                           
  6504  003E                     ??_calculateCurrent3:	
  6505                           ; 1 bytes @ 0x1E
  6506                           
  6507  003E                     ??_Init_Battery_State_Machine:	
  6508                           ; 1 bytes @ 0x1E
  6509                           
  6510  003E                     ??_Battery_State_Machine:	
  6511                           ; 1 bytes @ 0x1E
  6512                           
  6513  003E                     ??_cc_cv_mode:	
  6514                           ; 1 bytes @ 0x1E
  6515                           
  6516                           
  6517                           ; 1 bytes @ 0x1E
  6518  003E                     	ds	2
  6519  0040                     eval_poly@d:	
  6520  0040                     ___ftsub@f1:	
  6521                           ; 2 bytes @ 0x20
  6522                           
  6523                           
  6524                           ; 3 bytes @ 0x20
  6525  0040                     	ds	2
  6526  0042                     Init_Battery_State_Machine@z:	
  6527  0042                     eval_poly@n:	
  6528                           ; 1 bytes @ 0x22
  6529                           
  6530                           
  6531                           ; 2 bytes @ 0x22
  6532  0042                     	ds	1
  6533  0043                     ??_SYSTEM_Initialize:	
  6534  0043                     Battery_State_Machine@z:	
  6535                           ; 1 bytes @ 0x23
  6536                           
  6537                           
  6538                           ; 1 bytes @ 0x23
  6539  0043                     	ds	1
  6540  0044                     eval_poly@res:	
  6541                           
  6542                           ; 3 bytes @ 0x24
  6543  0044                     	ds	1
  6544  0045                     cc_cv_mode@z:	
  6545                           
  6546                           ; 1 bytes @ 0x25
  6547  0045                     	ds	2
  6548  0047                     ?_log:	
  6549  0047                     log@x:	
  6550                           ; 3 bytes @ 0x27
  6551                           
  6552                           
  6553                           ; 3 bytes @ 0x27
  6554  0047                     	ds	3
  6555  004A                     ??_log:	
  6556                           
  6557                           ; 1 bytes @ 0x2A
  6558  004A                     	ds	1
  6559  004B                     log@exponent:	
  6560                           
  6561                           ; 2 bytes @ 0x2B
  6562  004B                     	ds	2
  6563  004D                     ?_tempCalc:	
  6564  004D                     tempCalc@analogValue:	
  6565                           ; 2 bytes @ 0x2D
  6566                           
  6567                           
  6568                           ; 2 bytes @ 0x2D
  6569  004D                     	ds	2
  6570  004F                     tempCalc@R:	
  6571                           
  6572                           ; 3 bytes @ 0x2F
  6573  004F                     	ds	3
  6574  0052                     _tempCalc$1311:	
  6575                           
  6576                           ; 3 bytes @ 0x32
  6577  0052                     	ds	3
  6578  0055                     tempCalc@steinhart:	
  6579                           
  6580                           ; 3 bytes @ 0x35
  6581  0055                     	ds	3
  6582  0058                     ??_main:	
  6583                           
  6584                           ; 1 bytes @ 0x38
  6585  0058                     	ds	2
  6586                           
  6587                           	psect	maintext
  6588  0217                     __pmaintext:	
  6589 ;;
  6590 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6591 ;;
  6592 ;; *************** function _main *****************
  6593 ;; Defined at:
  6594 ;;		line 33 in file "main.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;  efficiency      3    0[BANK1 ] float 
  6599 ;;  dutyCycle7      2   23[BANK1 ] unsigned int 
  6600 ;;  dutyCycle6      2   21[BANK1 ] unsigned int 
  6601 ;;  tempFanOutpu    2   19[BANK1 ] unsigned int 
  6602 ;;  dutyCycle1      2   17[BANK1 ] unsigned int 
  6603 ;;  largerIOut      2   14[BANK1 ] int 
  6604 ;;  MPPT0           2   12[BANK1 ] int 
  6605 ;;  MPPT1           2   10[BANK1 ] int 
  6606 ;;  faultNotRese    2    5[BANK1 ] unsigned int 
  6607 ;;  faultCount      2    3[BANK1 ] unsigned int 
  6608 ;;  j               1   25[BANK1 ] unsigned char 
  6609 ;;  menuButton      1   16[BANK1 ] unsigned char 
  6610 ;;  slowLoop        1    9[BANK1 ] unsigned char 
  6611 ;;  fastLoop        1    8[BANK1 ] unsigned char 
  6612 ;;  displayRefre    1    7[BANK1 ] unsigned char 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : B1F/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;      Totals:         0       2      26       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;Total ram usage:       28 bytes
  6627 ;; Hardware stack levels required when called:    5
  6628 ;; This function calls:
  6629 ;;		_ADCRead
  6630 ;;		_Battery_State_Machine
  6631 ;;		_LCDClear
  6632 ;;		_LCDInit
  6633 ;;		_LCDWriteCharacter
  6634 ;;		_LCDWriteInt
  6635 ;;		_LCDWriteString
  6636 ;;		_PWM1_LoadDutyValue
  6637 ;;		_PWM6_LoadDutyValue
  6638 ;;		_PWM7_LoadDutyValue
  6639 ;;		_SYSTEM_Initialize
  6640 ;;		___awtoft
  6641 ;;		___ftdiv
  6642 ;;		___fttol
  6643 ;;		_calculateCurrent0
  6644 ;;		_calculateCurrent1
  6645 ;;		_calculateCurrent2
  6646 ;;		_calculateCurrent3
  6647 ;;		_cc_cv_mode
  6648 ;;		_gotoXY
  6649 ;;		_readButton
  6650 ;;		_readIAnalog
  6651 ;;		_readVAnalog
  6652 ;;		_tempCalc
  6653 ;; This function is called by:
  6654 ;;		Startup code after reset
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           
  6659                           ;psect for function _main
  6660  0217                     _main:	
  6661                           
  6662                           ;main.c: 35: int16_t MPPT0 = 3144;
  6663                           
  6664                           ;incstack = 0
  6665                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6666  0217  3048               	movlw	72
  6667  0218  0021               	movlb	1	; select bank1
  6668  0219  00E0               	movwf	main@MPPT0^(0+128)
  6669  021A  300C               	movlw	12
  6670  021B  00E1               	movwf	(main@MPPT0^(0+128)+1)
  6671                           
  6672                           ;main.c: 36: int16_t MPPT1 = 3144;
  6673  021C  3048               	movlw	72
  6674  021D  00DE               	movwf	main@MPPT1^(0+128)
  6675  021E  300C               	movlw	12
  6676  021F  00DF               	movwf	(main@MPPT1^(0+128)+1)
  6677                           
  6678                           ;main.c: 38: extern uint8_t batteryState[2];
  6679                           ;main.c: 39: uint8_t displayRefresh = 0;
  6680  0220  01DB               	clrf	main@displayRefresh^(0+128)
  6681                           
  6682                           ;main.c: 40: uint16_t dutyCycle6 = 1023;
  6683  0221  30FF               	movlw	255
  6684  0222  00E9               	movwf	main@dutyCycle6^(0+128)
  6685  0223  3003               	movlw	3
  6686  0224  00EA               	movwf	(main@dutyCycle6^(0+128)+1)
  6687                           
  6688                           ;main.c: 41: uint16_t dutyCycle7 = 1023;
  6689  0225  30FF               	movlw	255
  6690  0226  00EB               	movwf	main@dutyCycle7^(0+128)
  6691  0227  3003               	movlw	3
  6692  0228  00EC               	movwf	(main@dutyCycle7^(0+128)+1)
  6693                           
  6694                           ;main.c: 42: uint16_t dutyCycle1 = 260;
  6695  0229  3004               	movlw	4
  6696  022A  00E5               	movwf	main@dutyCycle1^(0+128)
  6697  022B  3001               	movlw	1
  6698  022C  00E6               	movwf	(main@dutyCycle1^(0+128)+1)
  6699                           
  6700                           ;main.c: 43: float efficiency = 0;
  6701  022D  3000               	movlw	0
  6702  022E  00D4               	movwf	main@efficiency^(0+128)
  6703  022F  3000               	movlw	0
  6704  0230  00D5               	movwf	(main@efficiency+1)^(0+128)
  6705  0231  3000               	movlw	0
  6706  0232  00D6               	movwf	(main@efficiency+2)^(0+128)
  6707                           
  6708                           ;main.c: 44: uint16_t faultCount = 0;
  6709  0233  01D7               	clrf	main@faultCount^(0+128)
  6710  0234  01D8               	clrf	(main@faultCount+1)^(0+128)
  6711                           
  6712                           ;main.c: 45: uint16_t faultNotReset = 0;
  6713  0235  01D9               	clrf	main@faultNotReset^(0+128)
  6714  0236  01DA               	clrf	(main@faultNotReset+1)^(0+128)
  6715                           
  6716                           ;main.c: 46: extern uint16_t IminCount[2];
  6717                           ;main.c: 47: extern int8_t Imode[2];
  6718                           ;main.c: 48: int16_t largerIOut = 0;
  6719  0237  01E2               	clrf	main@largerIOut^(0+128)
  6720  0238  01E3               	clrf	(main@largerIOut+1)^(0+128)
  6721                           
  6722                           ;main.c: 49: extern int16_t Iref[2];
  6723                           ;main.c: 50: uint8_t j = 0;
  6724  0239  01ED               	clrf	main@j^(0+128)
  6725                           
  6726                           ;main.c: 51: uint8_t menuButton = 0;
  6727  023A  01E4               	clrf	main@menuButton^(0+128)
  6728                           
  6729                           ;main.c: 52: uint8_t fastLoop = 0;
  6730  023B  01DC               	clrf	main@fastLoop^(0+128)
  6731                           
  6732                           ;main.c: 53: uint8_t slowLoop = 200;
  6733  023C  30C8               	movlw	200
  6734  023D  0020               	movlb	0	; select bank0
  6735  023E  00D8               	movwf	??_main
  6736  023F  0858               	movf	??_main,w
  6737  0240  0021               	movlb	1	; select bank1
  6738  0241  00DD               	movwf	main@slowLoop^(0+128)
  6739                           
  6740                           ;main.c: 54: uint16_t tempFanOutput = 60;
  6741  0242  303C               	movlw	60
  6742  0243  00E7               	movwf	main@tempFanOutput^(0+128)
  6743  0244  3000               	movlw	0
  6744  0245  00E8               	movwf	(main@tempFanOutput^(0+128)+1)
  6745                           
  6746                           ;main.c: 55: extern int8_t VHoldMode[2];
  6747                           ;main.c: 56: extern int16_t Vref[2];
  6748                           ;main.c: 59: SYSTEM_Initialize();
  6749  0246  3193  2307  3182   	fcall	_SYSTEM_Initialize
  6750                           
  6751                           ;main.c: 61: LCDClear();
  6752  0249  3192  2243  3182   	fcall	_LCDClear
  6753  024C                     l3267:	
  6754                           ;main.c: 63: void calculateCurrent0(void);
  6755                           ;main.c: 64: void calculateCurrent1(void);
  6756                           ;main.c: 65: void calculateCurrent2(void);
  6757                           ;main.c: 66: void calculateCurrent3(void);
  6758                           ;main.c: 69: while (1)
  6759                           
  6760                           
  6761                           ;main.c: 70: {
  6762                           ;main.c: 71: if(!(RB2))
  6763  024C  0020               	movlb	0	; select bank0
  6764  024D  190D               	btfsc	13,2	;volatile
  6765  024E  2A60               	goto	l3275
  6766                           
  6767                           ;main.c: 72: {
  6768                           ;main.c: 73: LATA5=0;
  6769  024F  1296               	bcf	22,5	;volatile
  6770                           
  6771                           ;main.c: 74: _delay((unsigned long)((1000)*(32000000/4000000.0)));
  6772  0250  300B               	movlw	11
  6773  0251  0020               	movlb	0	; select bank0
  6774  0252  00D8               	movwf	??_main
  6775  0253  3062               	movlw	98
  6776  0254                     u4327:	
  6777  0254  0B89               	decfsz	9,f
  6778  0255  2A54               	goto	u4327
  6779  0256  0BD8               	decfsz	??_main,f
  6780  0257  2A54               	goto	u4327
  6781  0258  0000               	nop
  6782                           
  6783                           ;main.c: 75: faultCount+=1;
  6784  0259  3001               	movlw	1
  6785  025A  0021               	movlb	1	; select bank1
  6786  025B  07D7               	addwf	main@faultCount^(0+128),f
  6787  025C  3000               	movlw	0
  6788  025D  3DD8               	addwfc	(main@faultCount+1)^(0+128),f
  6789                           
  6790                           ;main.c: 76: LATA5=1;
  6791  025E  0020               	movlb	0	; select bank0
  6792  025F  1696               	bsf	22,5	;volatile
  6793  0260                     l3275:	
  6794                           
  6795                           ;main.c: 77: }
  6796                           ;main.c: 78: for(j=0;j<4;j++) Ianalogs[j]=readIAnalog(j);
  6797  0260  0021               	movlb	1	; select bank1
  6798  0261  01ED               	clrf	main@j^(0+128)
  6799  0262  3004               	movlw	4
  6800  0263  026D               	subwf	main@j^(0+128),w
  6801  0264  1803               	btfsc	3,0
  6802  0265  2A84               	goto	l3287
  6803  0266                     l3281:	
  6804  0266  086D               	movf	main@j^(0+128),w
  6805  0267  0020               	movlb	0	; select bank0
  6806  0268  00D8               	movwf	??_main
  6807  0269  01D9               	clrf	??_main+1
  6808  026A  0858               	movf	??_main,w
  6809  026B  00A6               	movwf	readIAnalog@channel
  6810  026C  0859               	movf	??_main+1,w
  6811  026D  00A7               	movwf	readIAnalog@channel+1
  6812  026E  318C  2445  3182   	fcall	_readIAnalog
  6813  0271  0021               	movlb	1	; select bank1
  6814  0272  356D               	lslf	main@j^(0+128),w
  6815  0273  3EA0               	addlw	(low (_Ianalogs| 0))& (0+255)
  6816  0274  0086               	movwf	6
  6817  0275  0187               	clrf	7
  6818  0276  0020               	movlb	0	; select bank0
  6819  0277  0826               	movf	?_readIAnalog,w
  6820  0278  3FC0               	movwi [0]fsr1
  6821  0279  0827               	movf	?_readIAnalog+1,w
  6822  027A  3FC1               	movwi [1]fsr1
  6823  027B  3001               	movlw	1
  6824  027C  00D8               	movwf	??_main
  6825  027D  0858               	movf	??_main,w
  6826  027E  0021               	movlb	1	; select bank1
  6827  027F  07ED               	addwf	main@j^(0+128),f
  6828  0280  3004               	movlw	4
  6829  0281  026D               	subwf	main@j^(0+128),w
  6830  0282  1C03               	skipc
  6831  0283  2A66               	goto	l3281
  6832  0284                     l3287:	
  6833                           
  6834                           ;main.c: 80: for(j=0;j<4;j++) Vanalogs[j]=readVAnalog(j);
  6835  0284  01ED               	clrf	main@j^(0+128)
  6836  0285  3004               	movlw	4
  6837  0286  026D               	subwf	main@j^(0+128),w
  6838  0287  1803               	btfsc	3,0
  6839  0288  2AA8               	goto	l471
  6840  0289                     l3293:	
  6841  0289  086D               	movf	main@j^(0+128),w
  6842  028A  0020               	movlb	0	; select bank0
  6843  028B  00D8               	movwf	??_main
  6844  028C  01D9               	clrf	??_main+1
  6845  028D  0858               	movf	??_main,w
  6846  028E  00A6               	movwf	readVAnalog@channel
  6847  028F  0859               	movf	??_main+1,w
  6848  0290  00A7               	movwf	readVAnalog@channel+1
  6849  0291  318D  2583  3182   	fcall	_readVAnalog
  6850  0294  0021               	movlb	1	; select bank1
  6851  0295  356D               	lslf	main@j^(0+128),w
  6852  0296  3E40               	addlw	(low (_Vanalogs| (0+256)))& (0+255)
  6853  0297  0086               	movwf	6
  6854  0298  3001               	movlw	1	; select bank2/3
  6855  0299  0087               	movwf	7
  6856  029A  0020               	movlb	0	; select bank0
  6857  029B  0826               	movf	?_readVAnalog,w
  6858  029C  3FC0               	movwi [0]fsr1
  6859  029D  0827               	movf	?_readVAnalog+1,w
  6860  029E  3FC1               	movwi [1]fsr1
  6861  029F  3001               	movlw	1
  6862  02A0  00D8               	movwf	??_main
  6863  02A1  0858               	movf	??_main,w
  6864  02A2  0021               	movlb	1	; select bank1
  6865  02A3  07ED               	addwf	main@j^(0+128),f
  6866  02A4  3004               	movlw	4
  6867  02A5  026D               	subwf	main@j^(0+128),w
  6868  02A6  1C03               	skipc
  6869  02A7  2A89               	goto	l3293
  6870  02A8                     l471:	
  6871                           
  6872                           ;main.c: 82: if(!(RB2))faultNotReset+=1;
  6873  02A8  0020               	movlb	0	; select bank0
  6874  02A9  190D               	btfsc	13,2	;volatile
  6875  02AA  2AB0               	goto	l472
  6876  02AB  3001               	movlw	1
  6877  02AC  0021               	movlb	1	; select bank1
  6878  02AD  07D9               	addwf	main@faultNotReset^(0+128),f
  6879  02AE  3000               	movlw	0
  6880  02AF  3DDA               	addwfc	(main@faultNotReset+1)^(0+128),f
  6881  02B0                     l472:	
  6882                           
  6883                           ;main.c: 84: if(fastLoop>5)
  6884  02B0  3006               	movlw	6
  6885  02B1  0021               	movlb	1	; select bank1
  6886  02B2  025C               	subwf	main@fastLoop^(0+128),w
  6887  02B3  1C03               	skipc
  6888  02B4  2C22               	goto	l3357
  6889                           
  6890                           ;main.c: 85: {
  6891                           ;main.c: 86: voltage[0]=(int16_t)(Vanalogs[0]/.54245);
  6892  02B5  0022               	movlb	2	; select bank2
  6893  02B6  0841               	movf	(_Vanalogs+1)^(0+256),w
  6894  02B7  00F9               	movwf	___awtoft@c+1
  6895  02B8  0840               	movf	_Vanalogs^(0+256),w
  6896  02B9  00F8               	movwf	___awtoft@c
  6897  02BA  3191  21FE  3182   	fcall	___awtoft
  6898  02BD  0878               	movf	?___awtoft,w
  6899  02BE  0020               	movlb	0	; select bank0
  6900  02BF  00A3               	movwf	___ftdiv@f1
  6901  02C0  0879               	movf	?___awtoft+1,w
  6902  02C1  00A4               	movwf	___ftdiv@f1+1
  6903  02C2  087A               	movf	?___awtoft+2,w
  6904  02C3  00A5               	movwf	___ftdiv@f1+2
  6905  02C4  30DE               	movlw	222
  6906  02C5  00A0               	movwf	___ftdiv@f2
  6907  02C6  300A               	movlw	10
  6908  02C7  00A1               	movwf	___ftdiv@f2+1
  6909  02C8  303F               	movlw	63
  6910  02C9  00A2               	movwf	___ftdiv@f2+2
  6911  02CA  3197  2757  3182   	fcall	___ftdiv
  6912  02CD  0020               	movlb	0	; select bank0
  6913  02CE  0820               	movf	?___ftdiv,w
  6914  02CF  00B0               	movwf	___fttol@f1
  6915  02D0  0821               	movf	?___ftdiv+1,w
  6916  02D1  00B1               	movwf	___fttol@f1+1
  6917  02D2  0822               	movf	?___ftdiv+2,w
  6918  02D3  00B2               	movwf	___fttol@f1+2
  6919  02D4  3180  2019  3182   	fcall	___fttol
  6920  02D7  0020               	movlb	0	; select bank0
  6921  02D8  0831               	movf	?___fttol+1,w
  6922  02D9  0021               	movlb	1	; select bank1
  6923  02DA  00A9               	movwf	(_voltage+1)^(0+128)
  6924  02DB  0020               	movlb	0	; select bank0
  6925  02DC  0830               	movf	?___fttol,w
  6926  02DD  0021               	movlb	1	; select bank1
  6927  02DE  00A8               	movwf	_voltage^(0+128)
  6928                           
  6929                           ;main.c: 88: voltage[1]=(int16_t)(Vanalogs[1]/.54395);
  6930  02DF  0022               	movlb	2	; select bank2
  6931  02E0  0843               	movf	((_Vanalogs+1)^(0+256)+2),w
  6932  02E1  00F9               	movwf	___awtoft@c+1
  6933  02E2  0842               	movf	(_Vanalogs^(0+256)+2),w
  6934  02E3  00F8               	movwf	___awtoft@c
  6935  02E4  3191  21FE  3182   	fcall	___awtoft
  6936  02E7  0878               	movf	?___awtoft,w
  6937  02E8  0020               	movlb	0	; select bank0
  6938  02E9  00A3               	movwf	___ftdiv@f1
  6939  02EA  0879               	movf	?___awtoft+1,w
  6940  02EB  00A4               	movwf	___ftdiv@f1+1
  6941  02EC  087A               	movf	?___awtoft+2,w
  6942  02ED  00A5               	movwf	___ftdiv@f1+2
  6943  02EE  3040               	movlw	64
  6944  02EF  00A0               	movwf	___ftdiv@f2
  6945  02F0  300B               	movlw	11
  6946  02F1  00A1               	movwf	___ftdiv@f2+1
  6947  02F2  303F               	movlw	63
  6948  02F3  00A2               	movwf	___ftdiv@f2+2
  6949  02F4  3197  2757  3182   	fcall	___ftdiv
  6950  02F7  0020               	movlb	0	; select bank0
  6951  02F8  0820               	movf	?___ftdiv,w
  6952  02F9  00B0               	movwf	___fttol@f1
  6953  02FA  0821               	movf	?___ftdiv+1,w
  6954  02FB  00B1               	movwf	___fttol@f1+1
  6955  02FC  0822               	movf	?___ftdiv+2,w
  6956  02FD  00B2               	movwf	___fttol@f1+2
  6957  02FE  3180  2019  3182   	fcall	___fttol
  6958  0301  0020               	movlb	0	; select bank0
  6959  0302  0831               	movf	?___fttol+1,w
  6960  0303  0021               	movlb	1	; select bank1
  6961  0304  00AB               	movwf	((_voltage+1)^(0+128)+2)
  6962  0305  0020               	movlb	0	; select bank0
  6963  0306  0830               	movf	?___fttol,w
  6964  0307  0021               	movlb	1	; select bank1
  6965  0308  00AA               	movwf	(_voltage^(0+128)+2)
  6966                           
  6967                           ;main.c: 90: voltage[2]=(int16_t)(Vanalogs[2]/.208100558);
  6968  0309  0022               	movlb	2	; select bank2
  6969  030A  0845               	movf	((_Vanalogs+1)^(0+256)+4),w
  6970  030B  00F9               	movwf	___awtoft@c+1
  6971  030C  0844               	movf	(_Vanalogs^(0+256)+4),w
  6972  030D  00F8               	movwf	___awtoft@c
  6973  030E  3191  21FE  3182   	fcall	___awtoft
  6974  0311  0878               	movf	?___awtoft,w
  6975  0312  0020               	movlb	0	; select bank0
  6976  0313  00A3               	movwf	___ftdiv@f1
  6977  0314  0879               	movf	?___awtoft+1,w
  6978  0315  00A4               	movwf	___ftdiv@f1+1
  6979  0316  087A               	movf	?___awtoft+2,w
  6980  0317  00A5               	movwf	___ftdiv@f1+2
  6981  0318  3018               	movlw	24
  6982  0319  00A0               	movwf	___ftdiv@f2
  6983  031A  3055               	movlw	85
  6984  031B  00A1               	movwf	___ftdiv@f2+1
  6985  031C  303E               	movlw	62
  6986  031D  00A2               	movwf	___ftdiv@f2+2
  6987  031E  3197  2757  3182   	fcall	___ftdiv
  6988  0321  0020               	movlb	0	; select bank0
  6989  0322  0820               	movf	?___ftdiv,w
  6990  0323  00B0               	movwf	___fttol@f1
  6991  0324  0821               	movf	?___ftdiv+1,w
  6992  0325  00B1               	movwf	___fttol@f1+1
  6993  0326  0822               	movf	?___ftdiv+2,w
  6994  0327  00B2               	movwf	___fttol@f1+2
  6995  0328  3180  2019  3182   	fcall	___fttol
  6996  032B  0020               	movlb	0	; select bank0
  6997  032C  0831               	movf	?___fttol+1,w
  6998  032D  0021               	movlb	1	; select bank1
  6999  032E  00AD               	movwf	((_voltage+1)^(0+128)+4)
  7000  032F  0020               	movlb	0	; select bank0
  7001  0330  0830               	movf	?___fttol,w
  7002  0331  0021               	movlb	1	; select bank1
  7003  0332  00AC               	movwf	(_voltage^(0+128)+4)
  7004                           
  7005                           ;main.c: 92: voltage[3]=(int16_t)(Vanalogs[3]/.207755);
  7006  0333  0022               	movlb	2	; select bank2
  7007  0334  0847               	movf	((_Vanalogs+1)^(0+256)+6),w
  7008  0335  00F9               	movwf	___awtoft@c+1
  7009  0336  0846               	movf	(_Vanalogs^(0+256)+6),w
  7010  0337  00F8               	movwf	___awtoft@c
  7011  0338  3191  21FE  3182   	fcall	___awtoft
  7012  033B  0878               	movf	?___awtoft,w
  7013  033C  0020               	movlb	0	; select bank0
  7014  033D  00A3               	movwf	___ftdiv@f1
  7015  033E  0879               	movf	?___awtoft+1,w
  7016  033F  00A4               	movwf	___ftdiv@f1+1
  7017  0340  087A               	movf	?___awtoft+2,w
  7018  0341  00A5               	movwf	___ftdiv@f1+2
  7019  0342  30BE               	movlw	190
  7020  0343  00A0               	movwf	___ftdiv@f2
  7021  0344  3054               	movlw	84
  7022  0345  00A1               	movwf	___ftdiv@f2+1
  7023  0346  303E               	movlw	62
  7024  0347  00A2               	movwf	___ftdiv@f2+2
  7025  0348  3197  2757  3182   	fcall	___ftdiv
  7026  034B  0020               	movlb	0	; select bank0
  7027  034C  0820               	movf	?___ftdiv,w
  7028  034D  00B0               	movwf	___fttol@f1
  7029  034E  0821               	movf	?___ftdiv+1,w
  7030  034F  00B1               	movwf	___fttol@f1+1
  7031  0350  0822               	movf	?___ftdiv+2,w
  7032  0351  00B2               	movwf	___fttol@f1+2
  7033  0352  3180  2019  3182   	fcall	___fttol
  7034  0355  0020               	movlb	0	; select bank0
  7035  0356  0831               	movf	?___fttol+1,w
  7036  0357  0021               	movlb	1	; select bank1
  7037  0358  00AF               	movwf	((_voltage+1)^(0+128)+6)
  7038  0359  0020               	movlb	0	; select bank0
  7039  035A  0830               	movf	?___fttol,w
  7040  035B  0021               	movlb	1	; select bank1
  7041  035C  00AE               	movwf	(_voltage^(0+128)+6)
  7042                           
  7043                           ;main.c: 94: calculateCurrent0();
  7044  035D  3193  23B8  3182   	fcall	_calculateCurrent0
  7045                           
  7046                           ;main.c: 96: calculateCurrent1();
  7047  0360  3193  23FD  3182   	fcall	_calculateCurrent1
  7048                           
  7049                           ;main.c: 98: calculateCurrent2();
  7050  0363  3194  2442  3182   	fcall	_calculateCurrent2
  7051                           
  7052                           ;main.c: 100: calculateCurrent3();
  7053  0366  3188  2006  3182   	fcall	_calculateCurrent3
  7054                           
  7055                           ;main.c: 102: if(Imode[0])
  7056  0369  0020               	movlb	0	; select bank0
  7057  036A  0862               	movf	_Imode,w
  7058  036B  1903               	btfsc	3,2
  7059  036C  2B8E               	goto	l3317
  7060                           
  7061                           ;main.c: 103: {
  7062                           ;main.c: 104: if(voltage[2]<MPPT0)
  7063  036D  0021               	movlb	1	; select bank1
  7064  036E  082D               	movf	((_voltage+1)^(0+128)+4),w
  7065  036F  3A80               	xorlw	128
  7066  0370  0020               	movlb	0	; select bank0
  7067  0371  00D8               	movwf	??_main
  7068  0372  0021               	movlb	1	; select bank1
  7069  0373  0861               	movf	(main@MPPT0+1)^(0+128),w
  7070  0374  3A80               	xorlw	128
  7071  0375  0020               	movlb	0	; select bank0
  7072  0376  0258               	subwf	??_main,w
  7073  0377  1D03               	skipz
  7074  0378  2B7C               	goto	u3995
  7075  0379  0021               	movlb	1	; select bank1
  7076  037A  0860               	movf	main@MPPT0^(0+128),w
  7077  037B  022C               	subwf	(_voltage^(0+128)+4),w
  7078  037C                     u3995:	
  7079  037C  1C03               	btfss	3,0
  7080  037D  2B9F               	goto	L3
  7081                           
  7082                           ;main.c: 111: else if(voltage[2]>MPPT0)
  7083                           
  7084                           ;main.c: 109: }
  7085                           ;main.c: 110: }
  7086                           
  7087                           ;main.c: 107: {
  7088                           ;main.c: 108: dutyCycle6+=1;
  7089                           
  7090                           ;main.c: 105: {
  7091                           ;main.c: 106: if(dutyCycle6<1023)
  7092  037E  0021               	movlb	1	; select bank1
  7093  037F  0861               	movf	(main@MPPT0+1)^(0+128),w
  7094  0380  3A80               	xorlw	128
  7095  0381  0020               	movlb	0	; select bank0
  7096  0382  00D8               	movwf	??_main
  7097  0383  0021               	movlb	1	; select bank1
  7098  0384  082D               	movf	((_voltage+1)^(0+128)+4),w
  7099  0385  3A80               	xorlw	128
  7100  0386  0020               	movlb	0	; select bank0
  7101  0387  0258               	subwf	??_main,w
  7102  0388  1D03               	skipz
  7103  0389  2BB9               	goto	u4055
  7104  038A  0021               	movlb	1	; select bank1
  7105  038B  082C               	movf	(_voltage^(0+128)+4),w
  7106  038C  0260               	subwf	main@MPPT0^(0+128),w
  7107  038D  2BB9               	goto	u4055
  7108  038E                     l3317:	
  7109                           ;main.c: 119: }
  7110                           
  7111                           ;main.c: 116: }
  7112                           ;main.c: 117: }
  7113                           
  7114                           ;main.c: 114: {
  7115                           ;main.c: 115: dutyCycle6-=1;
  7116                           
  7117                           ;main.c: 112: {
  7118                           ;main.c: 113: if(dutyCycle6>0)
  7119                           
  7120                           
  7121                           ;main.c: 120: else
  7122                           ;main.c: 121: {
  7123                           ;main.c: 122: if(voltage[0]>(int16_t)Vref[0])
  7124  038E  0020               	movlb	0	; select bank0
  7125  038F  085B               	movf	_Vref+1,w
  7126  0390  3A80               	xorlw	128
  7127  0391  00D8               	movwf	??_main
  7128  0392  0021               	movlb	1	; select bank1
  7129  0393  0829               	movf	(_voltage+1)^(0+128),w
  7130  0394  3A80               	xorlw	128
  7131  0395  0020               	movlb	0	; select bank0
  7132  0396  0258               	subwf	??_main,w
  7133  0397  1D03               	skipz
  7134  0398  2B9D               	goto	u4035
  7135  0399  0021               	movlb	1	; select bank1
  7136  039A  0828               	movf	_voltage^(0+128),w
  7137  039B  0020               	movlb	0	; select bank0
  7138  039C  025A               	subwf	_Vref,w
  7139  039D                     u4035:	
  7140  039D  1803               	skipnc
  7141  039E  2BAC               	goto	l3323
  7142  039F                     L3:	
  7143                           
  7144                           ;main.c: 123: {
  7145                           ;main.c: 124: if(dutyCycle6<1023) dutyCycle6+=1;
  7146  039F  3003               	movlw	3
  7147  03A0  0021               	movlb	1	; select bank1
  7148  03A1  026A               	subwf	(main@dutyCycle6+1)^(0+128),w
  7149  03A2  30FF               	movlw	255
  7150  03A3  1903               	skipnz
  7151  03A4  0269               	subwf	main@dutyCycle6^(0+128),w
  7152  03A5  1803               	skipnc
  7153  03A6  2BC4               	goto	l3329
  7154  03A7  3001               	movlw	1
  7155  03A8  07E9               	addwf	main@dutyCycle6^(0+128),f
  7156  03A9  3000               	movlw	0
  7157  03AA  3DEA               	addwfc	(main@dutyCycle6+1)^(0+128),f
  7158                           
  7159                           ;main.c: 125: }
  7160  03AB  2BC4               	goto	l3329
  7161  03AC                     l3323:	
  7162                           
  7163                           ;main.c: 126: else if(voltage[0]<(int16_t)Vref[0])
  7164  03AC  0021               	movlb	1	; select bank1
  7165  03AD  0829               	movf	(_voltage+1)^(0+128),w
  7166  03AE  3A80               	xorlw	128
  7167  03AF  0020               	movlb	0	; select bank0
  7168  03B0  00D8               	movwf	??_main
  7169  03B1  085B               	movf	_Vref+1,w
  7170  03B2  3A80               	xorlw	128
  7171  03B3  0258               	subwf	??_main,w
  7172  03B4  1D03               	skipz
  7173  03B5  2BB9               	goto	u4055
  7174  03B6  085A               	movf	_Vref,w
  7175  03B7  0021               	movlb	1	; select bank1
  7176  03B8  0228               	subwf	_voltage^(0+128),w
  7177  03B9                     u4055:	
  7178  03B9  1803               	skipnc
  7179  03BA  2BC4               	goto	l3329
  7180                           
  7181                           ;main.c: 127: {
  7182                           ;main.c: 128: if(dutyCycle6>0) dutyCycle6-=1;;
  7183  03BB  0021               	movlb	1	; select bank1
  7184  03BC  0869               	movf	main@dutyCycle6^(0+128),w
  7185  03BD  046A               	iorwf	(main@dutyCycle6+1)^(0+128),w
  7186  03BE  1903               	btfsc	3,2
  7187  03BF  2BC4               	goto	l3329
  7188  03C0  3001               	movlw	1
  7189  03C1  02E9               	subwf	main@dutyCycle6^(0+128),f
  7190  03C2  3000               	movlw	0
  7191  03C3  3BEA               	subwfb	(main@dutyCycle6+1)^(0+128),f
  7192  03C4                     l3329:	
  7193                           ;main.c: 129: }
  7194                           
  7195                           
  7196                           ;main.c: 131: }
  7197                           ;main.c: 133: if(Imode[1])
  7198  03C4  0020               	movlb	0	; select bank0
  7199  03C5  0863               	movf	_Imode+1,w
  7200  03C6  1903               	btfsc	3,2
  7201  03C7  2BDA               	goto	l3341
  7202                           
  7203                           ;main.c: 134: {
  7204                           ;main.c: 135: if(voltage[3]<MPPT1)
  7205  03C8  0021               	movlb	1	; select bank1
  7206  03C9  082F               	movf	((_voltage+1)^(0+128)+6),w
  7207  03CA  3A80               	xorlw	128
  7208  03CB  0020               	movlb	0	; select bank0
  7209  03CC  00D8               	movwf	??_main
  7210  03CD  0021               	movlb	1	; select bank1
  7211  03CE  085F               	movf	(main@MPPT1+1)^(0+128),w
  7212  03CF  3A80               	xorlw	128
  7213  03D0  0020               	movlb	0	; select bank0
  7214  03D1  0258               	subwf	??_main,w
  7215  03D2  1D03               	skipz
  7216  03D3  2BD7               	goto	u4085
  7217  03D4  0021               	movlb	1	; select bank1
  7218  03D5  085E               	movf	main@MPPT1^(0+128),w
  7219  03D6  022E               	subwf	(_voltage^(0+128)+6),w
  7220  03D7                     u4085:	
  7221  03D7  1C03               	btfss	3,0
  7222  03D8  2BEB               	goto	L4
  7223                           
  7224                           ;main.c: 140: }
  7225                           ;main.c: 141: }
  7226                           
  7227                           ;main.c: 138: {
  7228                           ;main.c: 139: dutyCycle7+=1;
  7229                           
  7230                           ;main.c: 136: {
  7231                           ;main.c: 137: if(dutyCycle7<1023)
  7232  03D9  2C07               	goto	L5
  7233  03DA                     l3341:	
  7234                           ;main.c: 145: }
  7235                           ;main.c: 146: }
  7236                           
  7237                           ;main.c: 143: {
  7238                           ;main.c: 144: dutyCycle7-=1;
  7239                           
  7240                           ;main.c: 142: else if(dutyCycle7>0)
  7241                           
  7242                           
  7243                           ;main.c: 147: else
  7244                           ;main.c: 148: {
  7245                           ;main.c: 149: if(voltage[1]>(int16_t)Vref[1])
  7246  03DA  0020               	movlb	0	; select bank0
  7247  03DB  085D               	movf	_Vref+3,w
  7248  03DC  3A80               	xorlw	128
  7249  03DD  00D8               	movwf	??_main
  7250  03DE  0021               	movlb	1	; select bank1
  7251  03DF  082B               	movf	((_voltage+1)^(0+128)+2),w
  7252  03E0  3A80               	xorlw	128
  7253  03E1  0020               	movlb	0	; select bank0
  7254  03E2  0258               	subwf	??_main,w
  7255  03E3  1D03               	skipz
  7256  03E4  2BE9               	goto	u4115
  7257  03E5  0021               	movlb	1	; select bank1
  7258  03E6  082A               	movf	(_voltage^(0+128)+2),w
  7259  03E7  0020               	movlb	0	; select bank0
  7260  03E8  025C               	subwf	_Vref+2,w
  7261  03E9                     u4115:	
  7262  03E9  1803               	skipnc
  7263  03EA  2BF8               	goto	l3347
  7264  03EB                     L4:	
  7265                           
  7266                           ;main.c: 150: {
  7267                           ;main.c: 151: if(dutyCycle7<1023) dutyCycle7+=1;
  7268  03EB  3003               	movlw	3
  7269  03EC  0021               	movlb	1	; select bank1
  7270  03ED  026C               	subwf	(main@dutyCycle7+1)^(0+128),w
  7271  03EE  30FF               	movlw	255
  7272  03EF  1903               	skipnz
  7273  03F0  026B               	subwf	main@dutyCycle7^(0+128),w
  7274  03F1  1803               	skipnc
  7275  03F2  2C10               	goto	l3353
  7276  03F3  3001               	movlw	1
  7277  03F4  07EB               	addwf	main@dutyCycle7^(0+128),f
  7278  03F5  3000               	movlw	0
  7279  03F6  3DEC               	addwfc	(main@dutyCycle7+1)^(0+128),f
  7280                           
  7281                           ;main.c: 152: }
  7282  03F7  2C10               	goto	l3353
  7283  03F8                     l3347:	
  7284                           
  7285                           ;main.c: 153: else if(voltage[1]<(int16_t)Vref[1])
  7286  03F8  0021               	movlb	1	; select bank1
  7287  03F9  082B               	movf	((_voltage+1)^(0+128)+2),w
  7288  03FA  3A80               	xorlw	128
  7289  03FB  0020               	movlb	0	; select bank0
  7290  03FC  00D8               	movwf	??_main
  7291  03FD  085D               	movf	_Vref+3,w
  7292  03FE  3A80               	xorlw	128
  7293  03FF  0258               	subwf	??_main,w
  7294  0400  1D03               	skipz
  7295  0401  2C05               	goto	u4135
  7296  0402  085C               	movf	_Vref+2,w
  7297  0403  0021               	movlb	1	; select bank1
  7298  0404  022A               	subwf	(_voltage^(0+128)+2),w
  7299  0405                     u4135:	
  7300  0405  1803               	skipnc
  7301  0406  2C10               	goto	l3353
  7302  0407                     L5:	
  7303                           
  7304                           ;main.c: 154: {
  7305                           ;main.c: 155: if(dutyCycle7>0) dutyCycle7-=1;;
  7306  0407  0021               	movlb	1	; select bank1
  7307  0408  086B               	movf	main@dutyCycle7^(0+128),w
  7308  0409  046C               	iorwf	(main@dutyCycle7+1)^(0+128),w
  7309  040A  1903               	btfsc	3,2
  7310  040B  2C10               	goto	l3353
  7311  040C  3001               	movlw	1
  7312  040D  02EB               	subwf	main@dutyCycle7^(0+128),f
  7313  040E  3000               	movlw	0
  7314  040F  3BEC               	subwfb	(main@dutyCycle7+1)^(0+128),f
  7315  0410                     l3353:	
  7316                           ;main.c: 156: }
  7317                           
  7318                           
  7319                           ;main.c: 158: }
  7320                           ;main.c: 159: PWM6_LoadDutyValue(dutyCycle6);
  7321  0410  0021               	movlb	1	; select bank1
  7322  0411  086A               	movf	(main@dutyCycle6+1)^(0+128),w
  7323  0412  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7324  0413  0869               	movf	main@dutyCycle6^(0+128),w
  7325  0414  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7326  0415  3191  215B  3182   	fcall	_PWM6_LoadDutyValue
  7327                           
  7328                           ;main.c: 160: PWM7_LoadDutyValue(dutyCycle7);
  7329  0418  0021               	movlb	1	; select bank1
  7330  0419  086C               	movf	(main@dutyCycle7+1)^(0+128),w
  7331  041A  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7332  041B  086B               	movf	main@dutyCycle7^(0+128),w
  7333  041C  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7334  041D  3191  2171  3182   	fcall	_PWM7_LoadDutyValue
  7335                           
  7336                           ;main.c: 161: fastLoop=0;
  7337  0420  0021               	movlb	1	; select bank1
  7338  0421  01DC               	clrf	main@fastLoop^(0+128)
  7339  0422                     l3357:	
  7340                           
  7341                           ;main.c: 162: }
  7342                           ;main.c: 164: fastLoop+=1;
  7343  0422  3001               	movlw	1
  7344  0423  0020               	movlb	0	; select bank0
  7345  0424  00D8               	movwf	??_main
  7346  0425  0858               	movf	??_main,w
  7347  0426  0021               	movlb	1	; select bank1
  7348  0427  07DC               	addwf	main@fastLoop^(0+128),f
  7349                           
  7350                           ;main.c: 165: slowLoop+=1;
  7351  0428  3001               	movlw	1
  7352  0429  0020               	movlb	0	; select bank0
  7353  042A  00D8               	movwf	??_main
  7354  042B  0858               	movf	??_main,w
  7355  042C  0021               	movlb	1	; select bank1
  7356  042D  07DD               	addwf	main@slowLoop^(0+128),f
  7357                           
  7358                           ;main.c: 168: menuButton = readButton();
  7359  042E  3196  2653  3182   	fcall	_readButton
  7360  0431  0020               	movlb	0	; select bank0
  7361  0432  00D8               	movwf	??_main
  7362  0433  0858               	movf	??_main,w
  7363  0434  0021               	movlb	1	; select bank1
  7364  0435  00E4               	movwf	main@menuButton^(0+128)
  7365                           
  7366                           ;main.c: 169: if(menuButton == 2) if(MPPT0>2700)MPPT1-=1;
  7367  0436  3002               	movlw	2
  7368  0437  0664               	xorwf	main@menuButton^(0+128),w
  7369  0438  1D03               	btfss	3,2
  7370  0439  2C4C               	goto	l3369
  7371  043A  0861               	movf	(main@MPPT0+1)^(0+128),w
  7372  043B  3A80               	xorlw	128
  7373  043C  0020               	movlb	0	; select bank0
  7374  043D  00D8               	movwf	??_main
  7375  043E  308A               	movlw	138
  7376  043F  0258               	subwf	??_main,w
  7377  0440  1D03               	skipz
  7378  0441  2C45               	goto	u4165
  7379  0442  308D               	movlw	141
  7380  0443  0021               	movlb	1	; select bank1
  7381  0444  0260               	subwf	main@MPPT0^(0+128),w
  7382  0445                     u4165:	
  7383  0445  1C03               	skipc
  7384  0446  2C4C               	goto	l3369
  7385  0447  30FF               	movlw	255
  7386  0448  0021               	movlb	1	; select bank1
  7387  0449  07DE               	addwf	main@MPPT1^(0+128),f
  7388  044A  30FF               	movlw	255
  7389  044B  3DDF               	addwfc	(main@MPPT1+1)^(0+128),f
  7390  044C                     l3369:	
  7391                           
  7392                           ;main.c: 170: if(menuButton == 3)if(MPPT1<3200)MPPT1+=1;
  7393  044C  3003               	movlw	3
  7394  044D  0021               	movlb	1	; select bank1
  7395  044E  0664               	xorwf	main@menuButton^(0+128),w
  7396  044F  1D03               	btfss	3,2
  7397  0450  2C63               	goto	l3375
  7398  0451  085F               	movf	(main@MPPT1+1)^(0+128),w
  7399  0452  3A80               	xorlw	128
  7400  0453  0020               	movlb	0	; select bank0
  7401  0454  00D8               	movwf	??_main
  7402  0455  308C               	movlw	140
  7403  0456  0258               	subwf	??_main,w
  7404  0457  1D03               	skipz
  7405  0458  2C5C               	goto	u4185
  7406  0459  3080               	movlw	128
  7407  045A  0021               	movlb	1	; select bank1
  7408  045B  025E               	subwf	main@MPPT1^(0+128),w
  7409  045C                     u4185:	
  7410  045C  1803               	skipnc
  7411  045D  2C63               	goto	l3375
  7412  045E  3001               	movlw	1
  7413  045F  0021               	movlb	1	; select bank1
  7414  0460  07DE               	addwf	main@MPPT1^(0+128),f
  7415  0461  3000               	movlw	0
  7416  0462  3DDF               	addwfc	(main@MPPT1+1)^(0+128),f
  7417  0463                     l3375:	
  7418                           
  7419                           ;main.c: 171: if(menuButton == 1)LCDInit();
  7420  0463  0021               	movlb	1	; select bank1
  7421  0464  0364               	decf	main@menuButton^(0+128),w
  7422  0465  1D03               	btfss	3,2
  7423  0466  2C6A               	goto	l3379
  7424  0467  3192  22CC  3182   	fcall	_LCDInit
  7425  046A                     l3379:	
  7426                           
  7427                           ;main.c: 173: if(slowLoop>250)
  7428  046A  30FB               	movlw	251
  7429  046B  0021               	movlb	1	; select bank1
  7430  046C  025D               	subwf	main@slowLoop^(0+128),w
  7431  046D  1C03               	skipc
  7432  046E  2A4C               	goto	l3267
  7433                           
  7434                           ;main.c: 174: {
  7435                           ;main.c: 175: if(current[0]>current[1])
  7436  046F  0833               	movf	((_current+1)^(0+128)+2),w
  7437  0470  3A80               	xorlw	128
  7438  0471  0020               	movlb	0	; select bank0
  7439  0472  00D8               	movwf	??_main
  7440  0473  0021               	movlb	1	; select bank1
  7441  0474  0831               	movf	(_current+1)^(0+128),w
  7442  0475  3A80               	xorlw	128
  7443  0476  0020               	movlb	0	; select bank0
  7444  0477  0258               	subwf	??_main,w
  7445  0478  1D03               	skipz
  7446  0479  2C7D               	goto	u4215
  7447  047A  0021               	movlb	1	; select bank1
  7448  047B  0830               	movf	_current^(0+128),w
  7449  047C  0232               	subwf	(_current^(0+128)+2),w
  7450  047D                     u4215:	
  7451  047D  1803               	skipnc
  7452  047E  2C84               	goto	l3385
  7453                           
  7454                           ;main.c: 176: {
  7455                           ;main.c: 177: largerIOut=current[0];
  7456  047F  0021               	movlb	1	; select bank1
  7457  0480  0831               	movf	(_current+1)^(0+128),w
  7458  0481  00E3               	movwf	(main@largerIOut+1)^(0+128)
  7459  0482  0830               	movf	_current^(0+128),w
  7460  0483  2C88               	goto	L1
  7461  0484                     l3385:	
  7462                           ;main.c: 178: }
  7463                           
  7464                           
  7465                           ;main.c: 179: else
  7466                           ;main.c: 180: {
  7467                           ;main.c: 181: largerIOut=current[1];
  7468  0484  0021               	movlb	1	; select bank1
  7469  0485  0833               	movf	((_current+1)^(0+128)+2),w
  7470  0486  00E3               	movwf	(main@largerIOut+1)^(0+128)
  7471  0487  0832               	movf	(_current^(0+128)+2),w
  7472  0488                     L1:	
  7473  0488  00E2               	movwf	main@largerIOut^(0+128)
  7474                           
  7475                           ;main.c: 182: }
  7476                           ;main.c: 184: if(largerIOut>25)
  7477  0489  0863               	movf	(main@largerIOut+1)^(0+128),w
  7478  048A  3A80               	xorlw	128
  7479  048B  0020               	movlb	0	; select bank0
  7480  048C  00D8               	movwf	??_main
  7481  048D  3080               	movlw	128
  7482  048E  0258               	subwf	??_main,w
  7483  048F  1D03               	skipz
  7484  0490  2C94               	goto	u4225
  7485  0491  301A               	movlw	26
  7486  0492  0021               	movlb	1	; select bank1
  7487  0493  0262               	subwf	main@largerIOut^(0+128),w
  7488  0494                     u4225:	
  7489  0494  1C03               	skipc
  7490  0495  2CE8               	goto	l3405
  7491                           
  7492                           ;main.c: 185: {
  7493                           ;main.c: 186: if((uint16_t)largerIOut+5>dutyCycle1)
  7494  0496  0021               	movlb	1	; select bank1
  7495  0497  0862               	movf	main@largerIOut^(0+128),w
  7496  0498  3E05               	addlw	5
  7497  0499  0020               	movlb	0	; select bank0
  7498  049A  00D8               	movwf	??_main
  7499  049B  3000               	movlw	0
  7500  049C  0021               	movlb	1	; select bank1
  7501  049D  3D63               	addwfc	(main@largerIOut+1)^(0+128),w
  7502  049E  0020               	movlb	0	; select bank0
  7503  049F  00D9               	movwf	??_main+1
  7504  04A0  0859               	movf	??_main+1,w
  7505  04A1  0021               	movlb	1	; select bank1
  7506  04A2  0266               	subwf	(main@dutyCycle1+1)^(0+128),w
  7507  04A3  1D03               	skipz
  7508  04A4  2CA9               	goto	u4235
  7509  04A5  0020               	movlb	0	; select bank0
  7510  04A6  0858               	movf	??_main,w
  7511  04A7  0021               	movlb	1	; select bank1
  7512  04A8  0265               	subwf	main@dutyCycle1^(0+128),w
  7513  04A9                     u4235:	
  7514  04A9  1803               	skipnc
  7515  04AA  2CB0               	goto	l3391
  7516                           
  7517                           ;main.c: 187: {
  7518                           ;main.c: 188: dutyCycle1+=1;
  7519  04AB  3001               	movlw	1
  7520  04AC  07E5               	addwf	main@dutyCycle1^(0+128),f
  7521  04AD  3000               	movlw	0
  7522  04AE  3DE6               	addwfc	(main@dutyCycle1+1)^(0+128),f
  7523                           
  7524                           ;main.c: 189: }
  7525  04AF  2CB4               	goto	l3393
  7526  04B0                     l3391:	
  7527                           
  7528                           ;main.c: 190: else dutyCycle1-=1;
  7529  04B0  3001               	movlw	1
  7530  04B1  02E5               	subwf	main@dutyCycle1^(0+128),f
  7531  04B2  3000               	movlw	0
  7532  04B3  3BE6               	subwfb	(main@dutyCycle1+1)^(0+128),f
  7533  04B4                     l3393:	
  7534                           
  7535                           ;main.c: 192: if((uint16_t)largerIOut+5>tempFanOutput)
  7536  04B4  0862               	movf	main@largerIOut^(0+128),w
  7537  04B5  3E05               	addlw	5
  7538  04B6  0020               	movlb	0	; select bank0
  7539  04B7  00D8               	movwf	??_main
  7540  04B8  3000               	movlw	0
  7541  04B9  0021               	movlb	1	; select bank1
  7542  04BA  3D63               	addwfc	(main@largerIOut+1)^(0+128),w
  7543  04BB  0020               	movlb	0	; select bank0
  7544  04BC  00D9               	movwf	??_main+1
  7545  04BD  0859               	movf	??_main+1,w
  7546  04BE  0021               	movlb	1	; select bank1
  7547  04BF  0268               	subwf	(main@tempFanOutput+1)^(0+128),w
  7548  04C0  1D03               	skipz
  7549  04C1  2CC6               	goto	u4245
  7550  04C2  0020               	movlb	0	; select bank0
  7551  04C3  0858               	movf	??_main,w
  7552  04C4  0021               	movlb	1	; select bank1
  7553  04C5  0267               	subwf	main@tempFanOutput^(0+128),w
  7554  04C6                     u4245:	
  7555  04C6  1803               	skipnc
  7556  04C7  2CD4               	goto	l3399
  7557                           
  7558                           ;main.c: 193: {
  7559                           ;main.c: 194: if(tempFanOutput<75)
  7560  04C8  3000               	movlw	0
  7561  04C9  0268               	subwf	(main@tempFanOutput+1)^(0+128),w
  7562  04CA  304B               	movlw	75
  7563  04CB  1903               	skipnz
  7564  04CC  0267               	subwf	main@tempFanOutput^(0+128),w
  7565  04CD  1803               	skipnc
  7566  04CE  2CDC               	goto	l513
  7567                           
  7568                           ;main.c: 195: {
  7569                           ;main.c: 196: tempFanOutput+=1;
  7570  04CF  3001               	movlw	1
  7571  04D0  07E7               	addwf	main@tempFanOutput^(0+128),f
  7572  04D1  3000               	movlw	0
  7573  04D2  3DE8               	addwfc	(main@tempFanOutput+1)^(0+128),f
  7574                           
  7575                           ;main.c: 197: }
  7576                           ;main.c: 198: }
  7577  04D3  2CDC               	goto	l513
  7578  04D4                     l3399:	
  7579                           
  7580                           ;main.c: 199: else
  7581                           ;main.c: 200: {
  7582                           ;main.c: 201: if(tempFanOutput>0)tempFanOutput-=1;
  7583  04D4  0867               	movf	main@tempFanOutput^(0+128),w
  7584  04D5  0468               	iorwf	(main@tempFanOutput+1)^(0+128),w
  7585  04D6  1903               	btfsc	3,2
  7586  04D7  2CDC               	goto	l513
  7587  04D8  3001               	movlw	1
  7588  04D9  02E7               	subwf	main@tempFanOutput^(0+128),f
  7589  04DA  3000               	movlw	0
  7590  04DB  3BE8               	subwfb	(main@tempFanOutput+1)^(0+128),f
  7591  04DC                     l513:	
  7592                           
  7593                           ;main.c: 202: }
  7594                           ;main.c: 204: dutyCycle1=tempFanOutput;
  7595  04DC  0868               	movf	(main@tempFanOutput+1)^(0+128),w
  7596  04DD  00E6               	movwf	(main@dutyCycle1+1)^(0+128)
  7597  04DE  0867               	movf	main@tempFanOutput^(0+128),w
  7598  04DF  00E5               	movwf	main@dutyCycle1^(0+128)
  7599                           
  7600                           ;main.c: 205: if(dutyCycle1<19)dutyCycle1=0;
  7601  04E0  3000               	movlw	0
  7602  04E1  0266               	subwf	(main@dutyCycle1+1)^(0+128),w
  7603  04E2  3013               	movlw	19
  7604  04E3  1903               	skipnz
  7605  04E4  0265               	subwf	main@dutyCycle1^(0+128),w
  7606  04E5  1803               	skipnc
  7607  04E6  2CEB               	goto	l3407
  7608  04E7  2CE9               	goto	L2
  7609  04E8                     l3405:	
  7610                           ;main.c: 206: }
  7611                           
  7612                           
  7613                           ;main.c: 207: else
  7614                           ;main.c: 208: {
  7615                           ;main.c: 209: dutyCycle1=0;
  7616  04E8  0021               	movlb	1	; select bank1
  7617  04E9                     L2:	
  7618  04E9  01E5               	clrf	main@dutyCycle1^(0+128)
  7619  04EA  01E6               	clrf	(main@dutyCycle1+1)^(0+128)
  7620  04EB                     l3407:	
  7621                           
  7622                           ;main.c: 210: }
  7623                           ;main.c: 211: if(!(RB2))
  7624  04EB  0020               	movlb	0	; select bank0
  7625  04EC  190D               	btfsc	13,2	;volatile
  7626  04ED  2CFC               	goto	l3411
  7627                           
  7628                           ;main.c: 212: {
  7629                           ;main.c: 213: dutyCycle1=55;
  7630  04EE  3037               	movlw	55
  7631  04EF  0021               	movlb	1	; select bank1
  7632  04F0  00E5               	movwf	main@dutyCycle1^(0+128)
  7633  04F1  3000               	movlw	0
  7634  04F2  00E6               	movwf	(main@dutyCycle1^(0+128)+1)
  7635                           
  7636                           ;main.c: 214: batteryState[0]=CHARGE;
  7637  04F3  3004               	movlw	4
  7638  04F4  0020               	movlb	0	; select bank0
  7639  04F5  00D8               	movwf	??_main
  7640  04F6  0858               	movf	??_main,w
  7641  04F7  00E4               	movwf	_batteryState
  7642                           
  7643                           ;main.c: 215: batteryState[1]=CHARGE;
  7644  04F8  3004               	movlw	4
  7645  04F9  00D8               	movwf	??_main
  7646  04FA  0858               	movf	??_main,w
  7647  04FB  00E5               	movwf	_batteryState+1
  7648  04FC                     l3411:	
  7649                           
  7650                           ;main.c: 216: }
  7651                           ;main.c: 218: PWM1_LoadDutyValue(dutyCycle1);
  7652  04FC  0021               	movlb	1	; select bank1
  7653  04FD  0866               	movf	(main@dutyCycle1+1)^(0+128),w
  7654  04FE  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  7655  04FF  0865               	movf	main@dutyCycle1^(0+128),w
  7656  0500  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  7657  0501  3191  2145  3182   	fcall	_PWM1_LoadDutyValue
  7658                           
  7659                           ;main.c: 220: ADREF = 0x00;
  7660  0504  0021               	movlb	1	; select bank1
  7661  0505  019A               	clrf	26	;volatile
  7662                           
  7663                           ;main.c: 221: batteryTemp=tempCalc(ADCRead(9));
  7664  0506  3009               	movlw	9
  7665  0507  3180  2004  3182   	fcall	_ADCRead
  7666  050A  0871               	movf	?_ADCRead+1,w
  7667  050B  0020               	movlb	0	; select bank0
  7668  050C  00CE               	movwf	tempCalc@analogValue+1
  7669  050D  0870               	movf	?_ADCRead,w
  7670  050E  00CD               	movwf	tempCalc@analogValue
  7671  050F  318A  2268  3182   	fcall	_tempCalc
  7672  0512  0020               	movlb	0	; select bank0
  7673  0513  084E               	movf	?_tempCalc+1,w
  7674  0514  00EE               	movwf	_batteryTemp+1
  7675  0515  084D               	movf	?_tempCalc,w
  7676  0516  00ED               	movwf	_batteryTemp
  7677                           
  7678                           ;main.c: 222: ADREF = 0x03;
  7679  0517  3003               	movlw	3
  7680  0518  0021               	movlb	1	; select bank1
  7681  0519  009A               	movwf	26	;volatile
  7682                           
  7683                           ;main.c: 224: displayRefresh+=1;
  7684  051A  3001               	movlw	1
  7685  051B  0020               	movlb	0	; select bank0
  7686  051C  00D8               	movwf	??_main
  7687  051D  0858               	movf	??_main,w
  7688  051E  0021               	movlb	1	; select bank1
  7689  051F  07DB               	addwf	main@displayRefresh^(0+128),f
  7690                           
  7691                           ;main.c: 225: if(displayRefresh>80)
  7692  0520  3051               	movlw	81
  7693  0521  025B               	subwf	main@displayRefresh^(0+128),w
  7694  0522  1C03               	skipc
  7695  0523  2D29               	goto	l3427
  7696                           
  7697                           ;main.c: 226: {
  7698                           ;main.c: 227: LCDClear();
  7699  0524  3192  2243  3182   	fcall	_LCDClear
  7700                           
  7701                           ;main.c: 228: displayRefresh=0;
  7702  0527  0021               	movlb	1	; select bank1
  7703  0528  01DB               	clrf	main@displayRefresh^(0+128)
  7704  0529                     l3427:	
  7705                           
  7706                           ;main.c: 230: }
  7707                           ;main.c: 231: Battery_State_Machine(0);
  7708  0529  3000               	movlw	0
  7709  052A  3180  20A0  3182   	fcall	_Battery_State_Machine
  7710                           
  7711                           ;main.c: 232: Battery_State_Machine(1);
  7712  052D  3001               	movlw	1
  7713  052E  3180  20A0  3182   	fcall	_Battery_State_Machine
  7714                           
  7715                           ;main.c: 235: { gotoXY(0,0); LCDWriteString("In:");};
  7716  0531  01F5               	clrf	gotoXY@y
  7717  0532  3000               	movlw	0
  7718  0533  319F  27ED  3182   	fcall	_gotoXY
  7719  0536  3025               	movlw	low (STR_1| (0+32768))
  7720  0537  00FC               	movwf	LCDWriteString@characters
  7721  0538  3098               	movlw	high (STR_1| (0+32768))
  7722  0539  00FD               	movwf	LCDWriteString@characters+1
  7723  053A  3191  2131  3182   	fcall	_LCDWriteString
  7724                           
  7725                           ;main.c: 236: { gotoXY(26,0); LCDWriteString("Out:");};
  7726  053D  01F5               	clrf	gotoXY@y
  7727  053E  301A               	movlw	26
  7728  053F  319F  27ED  3182   	fcall	_gotoXY
  7729  0542  3020               	movlw	low (STR_2| (0+32768))
  7730  0543  00FC               	movwf	LCDWriteString@characters
  7731  0544  3098               	movlw	high (STR_2| (0+32768))
  7732  0545  00FD               	movwf	LCDWriteString@characters+1
  7733  0546  3191  2131  3182   	fcall	_LCDWriteString
  7734                           
  7735                           ;main.c: 237: { gotoXY(52,0); LCDWriteString("Ref:");};
  7736  0549  01F5               	clrf	gotoXY@y
  7737  054A  3034               	movlw	52
  7738  054B  319F  27ED  3182   	fcall	_gotoXY
  7739  054E  301B               	movlw	low (STR_3| (0+32768))
  7740  054F  00FC               	movwf	LCDWriteString@characters
  7741  0550  3098               	movlw	high (STR_3| (0+32768))
  7742  0551  00FD               	movwf	LCDWriteString@characters+1
  7743  0552  3191  2131  3182   	fcall	_LCDWriteString
  7744                           
  7745                           ;main.c: 239: { gotoXY(0,1); LCDWriteInt(voltage[2],4, 2, 0);};
  7746  0555  01F5               	clrf	gotoXY@y
  7747  0556  0AF5               	incf	gotoXY@y,f
  7748  0557  3000               	movlw	0
  7749  0558  319F  27ED  3182   	fcall	_gotoXY
  7750  055B  0021               	movlb	1	; select bank1
  7751  055C  082D               	movf	((_voltage+1)^(0+128)+4),w
  7752  055D  0020               	movlb	0	; select bank0
  7753  055E  00A1               	movwf	LCDWriteInt@value+1
  7754  055F  0021               	movlb	1	; select bank1
  7755  0560  082C               	movf	(_voltage^(0+128)+4),w
  7756  0561  0020               	movlb	0	; select bank0
  7757  0562  00A0               	movwf	LCDWriteInt@value
  7758  0563  3004               	movlw	4
  7759  0564  00D8               	movwf	??_main
  7760  0565  0858               	movf	??_main,w
  7761  0566  00A2               	movwf	LCDWriteInt@fieldLength
  7762  0567  3002               	movlw	2
  7763  0568  00D9               	movwf	??_main+1
  7764  0569  0859               	movf	??_main+1,w
  7765  056A  00A3               	movwf	LCDWriteInt@numPlaces
  7766  056B  01A4               	clrf	LCDWriteInt@sign
  7767  056C  3189  21AF  3182   	fcall	_LCDWriteInt
  7768                           
  7769                           ;main.c: 241: LCDWriteCharacter('V');
  7770  056F  3056               	movlw	86
  7771  0570  3194  24D8  3182   	fcall	_LCDWriteCharacter
  7772                           
  7773                           ;main.c: 243: { gotoXY(26,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7774  0573  01F5               	clrf	gotoXY@y
  7775  0574  0AF5               	incf	gotoXY@y,f
  7776  0575  301A               	movlw	26
  7777  0576  319F  27ED  3182   	fcall	_gotoXY
  7778  0579  0021               	movlb	1	; select bank1
  7779  057A  0829               	movf	(_voltage+1)^(0+128),w
  7780  057B  0020               	movlb	0	; select bank0
  7781  057C  00A1               	movwf	LCDWriteInt@value+1
  7782  057D  0021               	movlb	1	; select bank1
  7783  057E  0828               	movf	_voltage^(0+128),w
  7784  057F  0020               	movlb	0	; select bank0
  7785  0580  00A0               	movwf	LCDWriteInt@value
  7786  0581  3004               	movlw	4
  7787  0582  00D8               	movwf	??_main
  7788  0583  0858               	movf	??_main,w
  7789  0584  00A2               	movwf	LCDWriteInt@fieldLength
  7790  0585  3002               	movlw	2
  7791  0586  00D9               	movwf	??_main+1
  7792  0587  0859               	movf	??_main+1,w
  7793  0588  00A3               	movwf	LCDWriteInt@numPlaces
  7794  0589  01A4               	clrf	LCDWriteInt@sign
  7795  058A  3189  21AF  3182   	fcall	_LCDWriteInt
  7796                           
  7797                           ;main.c: 245: LCDWriteCharacter('V');
  7798  058D  3056               	movlw	86
  7799  058E  3194  24D8  3182   	fcall	_LCDWriteCharacter
  7800                           
  7801                           ;main.c: 247: { gotoXY(52,1); LCDWriteInt(Vref[0],4, 2, 0);};
  7802  0591  01F5               	clrf	gotoXY@y
  7803  0592  0AF5               	incf	gotoXY@y,f
  7804  0593  3034               	movlw	52
  7805  0594  319F  27ED  3182   	fcall	_gotoXY
  7806  0597  0020               	movlb	0	; select bank0
  7807  0598  085B               	movf	_Vref+1,w
  7808  0599  00A1               	movwf	LCDWriteInt@value+1
  7809  059A  085A               	movf	_Vref,w
  7810  059B  00A0               	movwf	LCDWriteInt@value
  7811  059C  3004               	movlw	4
  7812  059D  00D8               	movwf	??_main
  7813  059E  0858               	movf	??_main,w
  7814  059F  00A2               	movwf	LCDWriteInt@fieldLength
  7815  05A0  3002               	movlw	2
  7816  05A1  00D9               	movwf	??_main+1
  7817  05A2  0859               	movf	??_main+1,w
  7818  05A3  00A3               	movwf	LCDWriteInt@numPlaces
  7819  05A4  01A4               	clrf	LCDWriteInt@sign
  7820  05A5  3189  21AF  3182   	fcall	_LCDWriteInt
  7821                           
  7822                           ;main.c: 248: LCDWriteCharacter('V');
  7823  05A8  3056               	movlw	86
  7824  05A9  3194  24D8  3182   	fcall	_LCDWriteCharacter
  7825                           
  7826                           ;main.c: 250: { gotoXY(80,1); LCDWriteInt(Imode[0],1, 0, 0);};
  7827  05AC  01F5               	clrf	gotoXY@y
  7828  05AD  0AF5               	incf	gotoXY@y,f
  7829  05AE  3050               	movlw	80
  7830  05AF  319F  27ED  3182   	fcall	_gotoXY
  7831  05B2  0020               	movlb	0	; select bank0
  7832  05B3  0862               	movf	_Imode,w
  7833  05B4  00A0               	movwf	LCDWriteInt@value
  7834  05B5  01A1               	clrf	LCDWriteInt@value+1
  7835  05B6  1BA0               	btfsc	LCDWriteInt@value,7
  7836  05B7  03A1               	decf	LCDWriteInt@value+1,f
  7837  05B8  01A2               	clrf	LCDWriteInt@fieldLength
  7838  05B9  0AA2               	incf	LCDWriteInt@fieldLength,f
  7839  05BA  01A3               	clrf	LCDWriteInt@numPlaces
  7840  05BB  01A4               	clrf	LCDWriteInt@sign
  7841  05BC  3189  21AF  3182   	fcall	_LCDWriteInt
  7842                           
  7843                           ;main.c: 252: { gotoXY(0,2); LCDWriteInt(current[2],3, 1, 0);};
  7844  05BF  3002               	movlw	2
  7845  05C0  0020               	movlb	0	; select bank0
  7846  05C1  00D8               	movwf	??_main
  7847  05C2  0858               	movf	??_main,w
  7848  05C3  00F5               	movwf	gotoXY@y
  7849  05C4  3000               	movlw	0
  7850  05C5  319F  27ED  3182   	fcall	_gotoXY
  7851  05C8  0021               	movlb	1	; select bank1
  7852  05C9  0835               	movf	((_current+1)^(0+128)+4),w
  7853  05CA  0020               	movlb	0	; select bank0
  7854  05CB  00A1               	movwf	LCDWriteInt@value+1
  7855  05CC  0021               	movlb	1	; select bank1
  7856  05CD  0834               	movf	(_current^(0+128)+4),w
  7857  05CE  0020               	movlb	0	; select bank0
  7858  05CF  00A0               	movwf	LCDWriteInt@value
  7859  05D0  3003               	movlw	3
  7860  05D1  00D8               	movwf	??_main
  7861  05D2  0858               	movf	??_main,w
  7862  05D3  00A2               	movwf	LCDWriteInt@fieldLength
  7863  05D4  01A3               	clrf	LCDWriteInt@numPlaces
  7864  05D5  0AA3               	incf	LCDWriteInt@numPlaces,f
  7865  05D6  01A4               	clrf	LCDWriteInt@sign
  7866  05D7  3189  21AF  3182   	fcall	_LCDWriteInt
  7867                           
  7868                           ;main.c: 253: LCDWriteCharacter('A');
  7869  05DA  3041               	movlw	65
  7870  05DB  3194  24D8  3182   	fcall	_LCDWriteCharacter
  7871                           
  7872                           ;main.c: 255: { gotoXY(26,2); LCDWriteInt(current[0],3, 1, 0);};
  7873  05DE  3002               	movlw	2
  7874  05DF  0020               	movlb	0	; select bank0
  7875  05E0  00D8               	movwf	??_main
  7876  05E1  0858               	movf	??_main,w
  7877  05E2  00F5               	movwf	gotoXY@y
  7878  05E3  301A               	movlw	26
  7879  05E4  319F  27ED  3182   	fcall	_gotoXY
  7880  05E7  0021               	movlb	1	; select bank1
  7881  05E8  0831               	movf	(_current+1)^(0+128),w
  7882  05E9  0020               	movlb	0	; select bank0
  7883  05EA  00A1               	movwf	LCDWriteInt@value+1
  7884  05EB  0021               	movlb	1	; select bank1
  7885  05EC  0830               	movf	_current^(0+128),w
  7886  05ED  0020               	movlb	0	; select bank0
  7887  05EE  00A0               	movwf	LCDWriteInt@value
  7888  05EF  3003               	movlw	3
  7889  05F0  00D8               	movwf	??_main
  7890  05F1  0858               	movf	??_main,w
  7891  05F2  00A2               	movwf	LCDWriteInt@fieldLength
  7892  05F3  01A3               	clrf	LCDWriteInt@numPlaces
  7893  05F4  0AA3               	incf	LCDWriteInt@numPlaces,f
  7894  05F5  01A4               	clrf	LCDWriteInt@sign
  7895  05F6  3189  21AF  3182   	fcall	_LCDWriteInt
  7896                           
  7897                           ;main.c: 256: LCDWriteCharacter('A');
  7898  05F9  3041               	movlw	65
  7899  05FA  3194  24D8  3182   	fcall	_LCDWriteCharacter
  7900                           
  7901                           ;main.c: 258: { gotoXY(52,2); LCDWriteInt(Iref[0],3, 1, 0);};
  7902  05FD  3002               	movlw	2
  7903  05FE  0020               	movlb	0	; select bank0
  7904  05FF  00D8               	movwf	??_main
  7905  0600  0858               	movf	??_main,w
  7906  0601  00F5               	movwf	gotoXY@y
  7907  0602  3034               	movlw	52
  7908  0603  319F  27ED  3182   	fcall	_gotoXY
  7909  0606  0021               	movlb	1	; select bank1
  7910  0607  0842               	movf	(_Iref+1)^(0+128),w
  7911  0608  0020               	movlb	0	; select bank0
  7912  0609  00A1               	movwf	LCDWriteInt@value+1
  7913  060A  0021               	movlb	1	; select bank1
  7914  060B  0841               	movf	_Iref^(0+128),w
  7915  060C  0020               	movlb	0	; select bank0
  7916  060D  00A0               	movwf	LCDWriteInt@value
  7917  060E  3003               	movlw	3
  7918  060F  00D8               	movwf	??_main
  7919  0610  0858               	movf	??_main,w
  7920  0611  00A2               	movwf	LCDWriteInt@fieldLength
  7921  0612  01A3               	clrf	LCDWriteInt@numPlaces
  7922  0613  0AA3               	incf	LCDWriteInt@numPlaces,f
  7923  0614  01A4               	clrf	LCDWriteInt@sign
  7924  0615  3189  21AF  3182   	fcall	_LCDWriteInt
  7925                           
  7926                           ;main.c: 259: LCDWriteCharacter('A');
  7927  0618  3041               	movlw	65
  7928  0619  3194  24D8  3182   	fcall	_LCDWriteCharacter
  7929                           
  7930                           ;main.c: 261: { gotoXY(80,2); LCDWriteInt(batteryState[0],1, 0, 0);};
  7931  061C  3002               	movlw	2
  7932  061D  0020               	movlb	0	; select bank0
  7933  061E  00D8               	movwf	??_main
  7934  061F  0858               	movf	??_main,w
  7935  0620  00F5               	movwf	gotoXY@y
  7936  0621  3050               	movlw	80
  7937  0622  319F  27ED  3182   	fcall	_gotoXY
  7938  0625  0020               	movlb	0	; select bank0
  7939  0626  0864               	movf	_batteryState,w
  7940  0627  00D8               	movwf	??_main
  7941  0628  01D9               	clrf	??_main+1
  7942  0629  0858               	movf	??_main,w
  7943  062A  00A0               	movwf	LCDWriteInt@value
  7944  062B  0859               	movf	??_main+1,w
  7945  062C  00A1               	movwf	LCDWriteInt@value+1
  7946  062D  01A2               	clrf	LCDWriteInt@fieldLength
  7947  062E  0AA2               	incf	LCDWriteInt@fieldLength,f
  7948  062F  01A3               	clrf	LCDWriteInt@numPlaces
  7949  0630  01A4               	clrf	LCDWriteInt@sign
  7950  0631  3189  21AF  3182   	fcall	_LCDWriteInt
  7951                           
  7952                           ;main.c: 263: { gotoXY(0,3); LCDWriteInt(voltage[3],4, 2, 0);};
  7953  0634  3003               	movlw	3
  7954  0635  0020               	movlb	0	; select bank0
  7955  0636  00D8               	movwf	??_main
  7956  0637  0858               	movf	??_main,w
  7957  0638  00F5               	movwf	gotoXY@y
  7958  0639  3000               	movlw	0
  7959  063A  319F  27ED  3182   	fcall	_gotoXY
  7960  063D  0021               	movlb	1	; select bank1
  7961  063E  082F               	movf	((_voltage+1)^(0+128)+6),w
  7962  063F  0020               	movlb	0	; select bank0
  7963  0640  00A1               	movwf	LCDWriteInt@value+1
  7964  0641  0021               	movlb	1	; select bank1
  7965  0642  082E               	movf	(_voltage^(0+128)+6),w
  7966  0643  0020               	movlb	0	; select bank0
  7967  0644  00A0               	movwf	LCDWriteInt@value
  7968  0645  3004               	movlw	4
  7969  0646  00D8               	movwf	??_main
  7970  0647  0858               	movf	??_main,w
  7971  0648  00A2               	movwf	LCDWriteInt@fieldLength
  7972  0649  3002               	movlw	2
  7973  064A  00D9               	movwf	??_main+1
  7974  064B  0859               	movf	??_main+1,w
  7975  064C  00A3               	movwf	LCDWriteInt@numPlaces
  7976  064D  01A4               	clrf	LCDWriteInt@sign
  7977  064E  3189  21AF  3182   	fcall	_LCDWriteInt
  7978                           
  7979                           ;main.c: 265: LCDWriteCharacter('V');
  7980  0651  3056               	movlw	86
  7981  0652  3194  24D8  3182   	fcall	_LCDWriteCharacter
  7982                           
  7983                           ;main.c: 267: { gotoXY(26,3); LCDWriteInt(voltage[1],4, 2, 0);};
  7984  0655  3003               	movlw	3
  7985  0656  0020               	movlb	0	; select bank0
  7986  0657  00D8               	movwf	??_main
  7987  0658  0858               	movf	??_main,w
  7988  0659  00F5               	movwf	gotoXY@y
  7989  065A  301A               	movlw	26
  7990  065B  319F  27ED  3182   	fcall	_gotoXY
  7991  065E  0021               	movlb	1	; select bank1
  7992  065F  082B               	movf	((_voltage+1)^(0+128)+2),w
  7993  0660  0020               	movlb	0	; select bank0
  7994  0661  00A1               	movwf	LCDWriteInt@value+1
  7995  0662  0021               	movlb	1	; select bank1
  7996  0663  082A               	movf	(_voltage^(0+128)+2),w
  7997  0664  0020               	movlb	0	; select bank0
  7998  0665  00A0               	movwf	LCDWriteInt@value
  7999  0666  3004               	movlw	4
  8000  0667  00D8               	movwf	??_main
  8001  0668  0858               	movf	??_main,w
  8002  0669  00A2               	movwf	LCDWriteInt@fieldLength
  8003  066A  3002               	movlw	2
  8004  066B  00D9               	movwf	??_main+1
  8005  066C  0859               	movf	??_main+1,w
  8006  066D  00A3               	movwf	LCDWriteInt@numPlaces
  8007  066E  01A4               	clrf	LCDWriteInt@sign
  8008  066F  3189  21AF  3182   	fcall	_LCDWriteInt
  8009                           
  8010                           ;main.c: 269: LCDWriteCharacter('V');
  8011  0672  3056               	movlw	86
  8012  0673  3194  24D8  3182   	fcall	_LCDWriteCharacter
  8013                           
  8014                           ;main.c: 271: { gotoXY(52,3); LCDWriteInt(Vref[1],4, 2, 0);};
  8015  0676  3003               	movlw	3
  8016  0677  0020               	movlb	0	; select bank0
  8017  0678  00D8               	movwf	??_main
  8018  0679  0858               	movf	??_main,w
  8019  067A  00F5               	movwf	gotoXY@y
  8020  067B  3034               	movlw	52
  8021  067C  319F  27ED  3182   	fcall	_gotoXY
  8022  067F  0020               	movlb	0	; select bank0
  8023  0680  085D               	movf	_Vref+3,w
  8024  0681  00A1               	movwf	LCDWriteInt@value+1
  8025  0682  085C               	movf	_Vref+2,w
  8026  0683  00A0               	movwf	LCDWriteInt@value
  8027  0684  3004               	movlw	4
  8028  0685  00D8               	movwf	??_main
  8029  0686  0858               	movf	??_main,w
  8030  0687  00A2               	movwf	LCDWriteInt@fieldLength
  8031  0688  3002               	movlw	2
  8032  0689  00D9               	movwf	??_main+1
  8033  068A  0859               	movf	??_main+1,w
  8034  068B  00A3               	movwf	LCDWriteInt@numPlaces
  8035  068C  01A4               	clrf	LCDWriteInt@sign
  8036  068D  3189  21AF  3182   	fcall	_LCDWriteInt
  8037                           
  8038                           ;main.c: 272: LCDWriteCharacter('V');
  8039  0690  3056               	movlw	86
  8040  0691  3194  24D8  3182   	fcall	_LCDWriteCharacter
  8041                           
  8042                           ;main.c: 274: { gotoXY(80,3); LCDWriteInt(Imode[1],1, 0, 0);};
  8043  0694  3003               	movlw	3
  8044  0695  0020               	movlb	0	; select bank0
  8045  0696  00D8               	movwf	??_main
  8046  0697  0858               	movf	??_main,w
  8047  0698  00F5               	movwf	gotoXY@y
  8048  0699  3050               	movlw	80
  8049  069A  319F  27ED  3182   	fcall	_gotoXY
  8050  069D  0020               	movlb	0	; select bank0
  8051  069E  0863               	movf	_Imode+1,w
  8052  069F  00A0               	movwf	LCDWriteInt@value
  8053  06A0  01A1               	clrf	LCDWriteInt@value+1
  8054  06A1  1BA0               	btfsc	LCDWriteInt@value,7
  8055  06A2  03A1               	decf	LCDWriteInt@value+1,f
  8056  06A3  01A2               	clrf	LCDWriteInt@fieldLength
  8057  06A4  0AA2               	incf	LCDWriteInt@fieldLength,f
  8058  06A5  01A3               	clrf	LCDWriteInt@numPlaces
  8059  06A6  01A4               	clrf	LCDWriteInt@sign
  8060  06A7  3189  21AF  3182   	fcall	_LCDWriteInt
  8061                           
  8062                           ;main.c: 283: { gotoXY(0,4); LCDWriteInt(current[3],3, 1, 0);};
  8063  06AA  3004               	movlw	4
  8064  06AB  0020               	movlb	0	; select bank0
  8065  06AC  00D8               	movwf	??_main
  8066  06AD  0858               	movf	??_main,w
  8067  06AE  00F5               	movwf	gotoXY@y
  8068  06AF  3000               	movlw	0
  8069  06B0  319F  27ED  3182   	fcall	_gotoXY
  8070  06B3  0021               	movlb	1	; select bank1
  8071  06B4  0837               	movf	((_current+1)^(0+128)+6),w
  8072  06B5  0020               	movlb	0	; select bank0
  8073  06B6  00A1               	movwf	LCDWriteInt@value+1
  8074  06B7  0021               	movlb	1	; select bank1
  8075  06B8  0836               	movf	(_current^(0+128)+6),w
  8076  06B9  0020               	movlb	0	; select bank0
  8077  06BA  00A0               	movwf	LCDWriteInt@value
  8078  06BB  3003               	movlw	3
  8079  06BC  00D8               	movwf	??_main
  8080  06BD  0858               	movf	??_main,w
  8081  06BE  00A2               	movwf	LCDWriteInt@fieldLength
  8082  06BF  01A3               	clrf	LCDWriteInt@numPlaces
  8083  06C0  0AA3               	incf	LCDWriteInt@numPlaces,f
  8084  06C1  01A4               	clrf	LCDWriteInt@sign
  8085  06C2  3189  21AF  3182   	fcall	_LCDWriteInt
  8086                           
  8087                           ;main.c: 284: LCDWriteCharacter('A');
  8088  06C5  3041               	movlw	65
  8089  06C6  3194  24D8  3182   	fcall	_LCDWriteCharacter
  8090                           
  8091                           ;main.c: 286: { gotoXY(26,4); LCDWriteInt(current[1],3, 1, 0);};
  8092  06C9  3004               	movlw	4
  8093  06CA  0020               	movlb	0	; select bank0
  8094  06CB  00D8               	movwf	??_main
  8095  06CC  0858               	movf	??_main,w
  8096  06CD  00F5               	movwf	gotoXY@y
  8097  06CE  301A               	movlw	26
  8098  06CF  319F  27ED  3182   	fcall	_gotoXY
  8099  06D2  0021               	movlb	1	; select bank1
  8100  06D3  0833               	movf	((_current+1)^(0+128)+2),w
  8101  06D4  0020               	movlb	0	; select bank0
  8102  06D5  00A1               	movwf	LCDWriteInt@value+1
  8103  06D6  0021               	movlb	1	; select bank1
  8104  06D7  0832               	movf	(_current^(0+128)+2),w
  8105  06D8  0020               	movlb	0	; select bank0
  8106  06D9  00A0               	movwf	LCDWriteInt@value
  8107  06DA  3003               	movlw	3
  8108  06DB  00D8               	movwf	??_main
  8109  06DC  0858               	movf	??_main,w
  8110  06DD  00A2               	movwf	LCDWriteInt@fieldLength
  8111  06DE  01A3               	clrf	LCDWriteInt@numPlaces
  8112  06DF  0AA3               	incf	LCDWriteInt@numPlaces,f
  8113  06E0  01A4               	clrf	LCDWriteInt@sign
  8114  06E1  3189  21AF  3182   	fcall	_LCDWriteInt
  8115                           
  8116                           ;main.c: 287: LCDWriteCharacter('A');
  8117  06E4  3041               	movlw	65
  8118  06E5  3194  24D8  3182   	fcall	_LCDWriteCharacter
  8119                           
  8120                           ;main.c: 289: { gotoXY(52,4); LCDWriteInt(Iref[1],3, 1, 0);};
  8121  06E8  3004               	movlw	4
  8122  06E9  0020               	movlb	0	; select bank0
  8123  06EA  00D8               	movwf	??_main
  8124  06EB  0858               	movf	??_main,w
  8125  06EC  00F5               	movwf	gotoXY@y
  8126  06ED  3034               	movlw	52
  8127  06EE  319F  27ED  3182   	fcall	_gotoXY
  8128  06F1  0021               	movlb	1	; select bank1
  8129  06F2  0844               	movf	((_Iref+1)^(0+128)+2),w
  8130  06F3  0020               	movlb	0	; select bank0
  8131  06F4  00A1               	movwf	LCDWriteInt@value+1
  8132  06F5  0021               	movlb	1	; select bank1
  8133  06F6  0843               	movf	(_Iref^(0+128)+2),w
  8134  06F7  0020               	movlb	0	; select bank0
  8135  06F8  00A0               	movwf	LCDWriteInt@value
  8136  06F9  3003               	movlw	3
  8137  06FA  00D8               	movwf	??_main
  8138  06FB  0858               	movf	??_main,w
  8139  06FC  00A2               	movwf	LCDWriteInt@fieldLength
  8140  06FD  01A3               	clrf	LCDWriteInt@numPlaces
  8141  06FE  0AA3               	incf	LCDWriteInt@numPlaces,f
  8142  06FF  01A4               	clrf	LCDWriteInt@sign
  8143  0700  3189  21AF  3182   	fcall	_LCDWriteInt
  8144                           
  8145                           ;main.c: 290: LCDWriteCharacter('A');
  8146  0703  3041               	movlw	65
  8147  0704  3194  24D8  3182   	fcall	_LCDWriteCharacter
  8148                           
  8149                           ;main.c: 292: { gotoXY(80,4); LCDWriteInt(batteryState[1],1, 0, 0);};
  8150  0707  3004               	movlw	4
  8151  0708  0020               	movlb	0	; select bank0
  8152  0709  00D8               	movwf	??_main
  8153  070A  0858               	movf	??_main,w
  8154  070B  00F5               	movwf	gotoXY@y
  8155  070C  3050               	movlw	80
  8156  070D  319F  27ED  3182   	fcall	_gotoXY
  8157  0710  0020               	movlb	0	; select bank0
  8158  0711  0865               	movf	_batteryState+1,w
  8159  0712  00D8               	movwf	??_main
  8160  0713  01D9               	clrf	??_main+1
  8161  0714  0858               	movf	??_main,w
  8162  0715  00A0               	movwf	LCDWriteInt@value
  8163  0716  0859               	movf	??_main+1,w
  8164  0717  00A1               	movwf	LCDWriteInt@value+1
  8165  0718  01A2               	clrf	LCDWriteInt@fieldLength
  8166  0719  0AA2               	incf	LCDWriteInt@fieldLength,f
  8167  071A  01A3               	clrf	LCDWriteInt@numPlaces
  8168  071B  01A4               	clrf	LCDWriteInt@sign
  8169  071C  3189  21AF  3182   	fcall	_LCDWriteInt
  8170                           
  8171                           ;main.c: 296: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  8172  071F  3005               	movlw	5
  8173  0720  0020               	movlb	0	; select bank0
  8174  0721  00D8               	movwf	??_main
  8175  0722  0858               	movf	??_main,w
  8176  0723  00F5               	movwf	gotoXY@y
  8177  0724  3000               	movlw	0
  8178  0725  319F  27ED  3182   	fcall	_gotoXY
  8179  0728  0021               	movlb	1	; select bank1
  8180  0729  086A               	movf	(main@dutyCycle6+1)^(0+128),w
  8181  072A  0020               	movlb	0	; select bank0
  8182  072B  00A1               	movwf	LCDWriteInt@value+1
  8183  072C  0021               	movlb	1	; select bank1
  8184  072D  0869               	movf	main@dutyCycle6^(0+128),w
  8185  072E  0020               	movlb	0	; select bank0
  8186  072F  00A0               	movwf	LCDWriteInt@value
  8187  0730  3004               	movlw	4
  8188  0731  00D8               	movwf	??_main
  8189  0732  0858               	movf	??_main,w
  8190  0733  00A2               	movwf	LCDWriteInt@fieldLength
  8191  0734  01A3               	clrf	LCDWriteInt@numPlaces
  8192  0735  01A4               	clrf	LCDWriteInt@sign
  8193  0736  3189  21AF  3182   	fcall	_LCDWriteInt
  8194                           
  8195                           ;main.c: 297: { gotoXY(18,5); LCDWriteInt(VHoldMode[0],1, 0, 0);};
  8196  0739  3005               	movlw	5
  8197  073A  0020               	movlb	0	; select bank0
  8198  073B  00D8               	movwf	??_main
  8199  073C  0858               	movf	??_main,w
  8200  073D  00F5               	movwf	gotoXY@y
  8201  073E  3012               	movlw	18
  8202  073F  319F  27ED  3182   	fcall	_gotoXY
  8203  0742  0020               	movlb	0	; select bank0
  8204  0743  0860               	movf	_VHoldMode,w
  8205  0744  00A0               	movwf	LCDWriteInt@value
  8206  0745  01A1               	clrf	LCDWriteInt@value+1
  8207  0746  1BA0               	btfsc	LCDWriteInt@value,7
  8208  0747  03A1               	decf	LCDWriteInt@value+1,f
  8209  0748  01A2               	clrf	LCDWriteInt@fieldLength
  8210  0749  0AA2               	incf	LCDWriteInt@fieldLength,f
  8211  074A  01A3               	clrf	LCDWriteInt@numPlaces
  8212  074B  01A4               	clrf	LCDWriteInt@sign
  8213  074C  3189  21AF  3182   	fcall	_LCDWriteInt
  8214                           
  8215                           ;main.c: 298: LCDWriteCharacter(' ');
  8216  074F  3020               	movlw	32
  8217  0750  3194  24D8  3182   	fcall	_LCDWriteCharacter
  8218                           
  8219                           ;main.c: 299: { gotoXY(28,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  8220  0753  3005               	movlw	5
  8221  0754  0020               	movlb	0	; select bank0
  8222  0755  00D8               	movwf	??_main
  8223  0756  0858               	movf	??_main,w
  8224  0757  00F5               	movwf	gotoXY@y
  8225  0758  301C               	movlw	28
  8226  0759  319F  27ED  3182   	fcall	_gotoXY
  8227  075C  0021               	movlb	1	; select bank1
  8228  075D  086C               	movf	(main@dutyCycle7+1)^(0+128),w
  8229  075E  0020               	movlb	0	; select bank0
  8230  075F  00A1               	movwf	LCDWriteInt@value+1
  8231  0760  0021               	movlb	1	; select bank1
  8232  0761  086B               	movf	main@dutyCycle7^(0+128),w
  8233  0762  0020               	movlb	0	; select bank0
  8234  0763  00A0               	movwf	LCDWriteInt@value
  8235  0764  3004               	movlw	4
  8236  0765  00D8               	movwf	??_main
  8237  0766  0858               	movf	??_main,w
  8238  0767  00A2               	movwf	LCDWriteInt@fieldLength
  8239  0768  01A3               	clrf	LCDWriteInt@numPlaces
  8240  0769  01A4               	clrf	LCDWriteInt@sign
  8241  076A  3189  21AF  3182   	fcall	_LCDWriteInt
  8242                           
  8243                           ;main.c: 300: { gotoXY(46,5); LCDWriteInt(VHoldMode[1],1, 0, 0);};
  8244  076D  3005               	movlw	5
  8245  076E  0020               	movlb	0	; select bank0
  8246  076F  00D8               	movwf	??_main
  8247  0770  0858               	movf	??_main,w
  8248  0771  00F5               	movwf	gotoXY@y
  8249  0772  302E               	movlw	46
  8250  0773  319F  27ED  3182   	fcall	_gotoXY
  8251  0776  0020               	movlb	0	; select bank0
  8252  0777  0861               	movf	_VHoldMode+1,w
  8253  0778  00A0               	movwf	LCDWriteInt@value
  8254  0779  01A1               	clrf	LCDWriteInt@value+1
  8255  077A  1BA0               	btfsc	LCDWriteInt@value,7
  8256  077B  03A1               	decf	LCDWriteInt@value+1,f
  8257  077C  01A2               	clrf	LCDWriteInt@fieldLength
  8258  077D  0AA2               	incf	LCDWriteInt@fieldLength,f
  8259  077E  01A3               	clrf	LCDWriteInt@numPlaces
  8260  077F  01A4               	clrf	LCDWriteInt@sign
  8261  0780  3189  21AF  3182   	fcall	_LCDWriteInt
  8262                           
  8263                           ;main.c: 301: LCDWriteCharacter(' ');
  8264  0783  3020               	movlw	32
  8265  0784  3194  24D8  3182   	fcall	_LCDWriteCharacter
  8266                           
  8267                           ;main.c: 302: { gotoXY(56,5); LCDWriteInt(batteryTemp,3, 1, 0);};
  8268  0787  3005               	movlw	5
  8269  0788  0020               	movlb	0	; select bank0
  8270  0789  00D8               	movwf	??_main
  8271  078A  0858               	movf	??_main,w
  8272  078B  00F5               	movwf	gotoXY@y
  8273  078C  3038               	movlw	56
  8274  078D  319F  27ED  3182   	fcall	_gotoXY
  8275  0790  0020               	movlb	0	; select bank0
  8276  0791  086E               	movf	_batteryTemp+1,w
  8277  0792  00A1               	movwf	LCDWriteInt@value+1
  8278  0793  086D               	movf	_batteryTemp,w
  8279  0794  00A0               	movwf	LCDWriteInt@value
  8280  0795  3003               	movlw	3
  8281  0796  00D8               	movwf	??_main
  8282  0797  0858               	movf	??_main,w
  8283  0798  00A2               	movwf	LCDWriteInt@fieldLength
  8284  0799  01A3               	clrf	LCDWriteInt@numPlaces
  8285  079A  0AA3               	incf	LCDWriteInt@numPlaces,f
  8286  079B  01A4               	clrf	LCDWriteInt@sign
  8287  079C  3189  21AF  3182   	fcall	_LCDWriteInt
  8288                           
  8289                           ;main.c: 303: LCDWriteCharacter(123);
  8290  079F  307B               	movlw	123
  8291  07A0  3194  24D8  3182   	fcall	_LCDWriteCharacter
  8292                           
  8293                           ;main.c: 304: LCDWriteCharacter('C');
  8294  07A3  3043               	movlw	67
  8295  07A4  3194  24D8  3182   	fcall	_LCDWriteCharacter
  8296                           
  8297                           ;main.c: 374: if(batteryState[0] > FINISHED)
  8298  07A7  3003               	movlw	3
  8299  07A8  0020               	movlb	0	; select bank0
  8300  07A9  0264               	subwf	_batteryState,w
  8301  07AA  1C03               	skipc
  8302  07AB  2FB0               	goto	l3563
  8303                           
  8304                           ;main.c: 375: {
  8305                           ;main.c: 376: cc_cv_mode(0);
  8306  07AC  3000               	movlw	0
  8307  07AD  318E  26C1  3182   	fcall	_cc_cv_mode
  8308  07B0                     l3563:	
  8309                           
  8310                           ;main.c: 377: }
  8311                           ;main.c: 378: if(batteryState[1] > FINISHED)
  8312  07B0  3003               	movlw	3
  8313  07B1  0020               	movlb	0	; select bank0
  8314  07B2  0265               	subwf	_batteryState+1,w
  8315  07B3  1C03               	skipc
  8316  07B4  2FB9               	goto	l3567
  8317                           
  8318                           ;main.c: 379: {
  8319                           ;main.c: 380: cc_cv_mode(1);
  8320  07B5  3001               	movlw	1
  8321  07B6  318E  26C1  3182   	fcall	_cc_cv_mode
  8322  07B9                     l3567:	
  8323                           
  8324                           ;main.c: 381: }
  8325                           ;main.c: 382: slowLoop=0;
  8326  07B9  0021               	movlb	1	; select bank1
  8327  07BA  01DD               	clrf	main@slowLoop^(0+128)
  8328  07BB  2A4C               	goto	l3267
  8329  07BC                     __end_of_main:	
  8330                           
  8331                           	psect	text1
  8332  0A68                     __ptext1:	
  8333 ;; *************** function _tempCalc *****************
  8334 ;; Defined at:
  8335 ;;		line 4 in file "tempCalc.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  analogValue     2   45[BANK0 ] int 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  steinhart       3   53[BANK0 ] float 
  8340 ;;  R               3   47[BANK0 ] float 
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  2   45[BANK0 ] int 
  8343 ;; Registers used:
  8344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8351 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8353 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;Total ram usage:       11 bytes
  8355 ;; Hardware stack levels used:    1
  8356 ;; Hardware stack levels required when called:    4
  8357 ;; This function calls:
  8358 ;;		___awtoft
  8359 ;;		___ftadd
  8360 ;;		___ftdiv
  8361 ;;		___ftmul
  8362 ;;		___ftsub
  8363 ;;		___fttol
  8364 ;;		_log
  8365 ;; This function is called by:
  8366 ;;		_main
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           
  8371                           ;psect for function _tempCalc
  8372  0A68                     _tempCalc:	
  8373                           
  8374                           ;tempCalc.c: 6: float R, steinhart;
  8375                           ;tempCalc.c: 7: R=10030/(1023/(float)analogValue-1);
  8376                           
  8377                           ;incstack = 0
  8378                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8379  0A68  3000               	movlw	0
  8380  0A69  0020               	movlb	0	; select bank0
  8381  0A6A  00B0               	movwf	___ftadd@f1
  8382  0A6B  3080               	movlw	128
  8383  0A6C  00B1               	movwf	___ftadd@f1+1
  8384  0A6D  30BF               	movlw	191
  8385  0A6E  00B2               	movwf	___ftadd@f1+2
  8386  0A6F  084E               	movf	tempCalc@analogValue+1,w
  8387  0A70  00F9               	movwf	___awtoft@c+1
  8388  0A71  084D               	movf	tempCalc@analogValue,w
  8389  0A72  00F8               	movwf	___awtoft@c
  8390  0A73  3191  21FE  318A   	fcall	___awtoft
  8391  0A76  0878               	movf	?___awtoft,w
  8392  0A77  0020               	movlb	0	; select bank0
  8393  0A78  00A0               	movwf	___ftdiv@f2
  8394  0A79  0879               	movf	?___awtoft+1,w
  8395  0A7A  00A1               	movwf	___ftdiv@f2+1
  8396  0A7B  087A               	movf	?___awtoft+2,w
  8397  0A7C  00A2               	movwf	___ftdiv@f2+2
  8398  0A7D  30C0               	movlw	192
  8399  0A7E  00A3               	movwf	___ftdiv@f1
  8400  0A7F  307F               	movlw	127
  8401  0A80  00A4               	movwf	___ftdiv@f1+1
  8402  0A81  3044               	movlw	68
  8403  0A82  00A5               	movwf	___ftdiv@f1+2
  8404  0A83  3197  2757  318A   	fcall	___ftdiv
  8405  0A86  0020               	movlb	0	; select bank0
  8406  0A87  0820               	movf	?___ftdiv,w
  8407  0A88  00B3               	movwf	___ftadd@f2
  8408  0A89  0821               	movf	?___ftdiv+1,w
  8409  0A8A  00B4               	movwf	___ftadd@f2+1
  8410  0A8B  0822               	movf	?___ftdiv+2,w
  8411  0A8C  00B5               	movwf	___ftadd@f2+2
  8412  0A8D  318B  234F  318A   	fcall	___ftadd
  8413  0A90  0020               	movlb	0	; select bank0
  8414  0A91  0830               	movf	?___ftadd,w
  8415  0A92  00D2               	movwf	_tempCalc$1311
  8416  0A93  0831               	movf	?___ftadd+1,w
  8417  0A94  00D3               	movwf	_tempCalc$1311+1
  8418  0A95  0832               	movf	?___ftadd+2,w
  8419  0A96  00D4               	movwf	_tempCalc$1311+2
  8420                           
  8421                           ;tempCalc.c: 6: float R, steinhart;
  8422                           ;tempCalc.c: 7: R=10030/(1023/(float)analogValue-1);
  8423  0A97  0852               	movf	_tempCalc$1311,w
  8424  0A98  00A0               	movwf	___ftdiv@f2
  8425  0A99  0853               	movf	_tempCalc$1311+1,w
  8426  0A9A  00A1               	movwf	___ftdiv@f2+1
  8427  0A9B  0854               	movf	_tempCalc$1311+2,w
  8428  0A9C  00A2               	movwf	___ftdiv@f2+2
  8429  0A9D  30B8               	movlw	184
  8430  0A9E  00A3               	movwf	___ftdiv@f1
  8431  0A9F  301C               	movlw	28
  8432  0AA0  00A4               	movwf	___ftdiv@f1+1
  8433  0AA1  3046               	movlw	70
  8434  0AA2  00A5               	movwf	___ftdiv@f1+2
  8435  0AA3  3197  2757  318A   	fcall	___ftdiv
  8436  0AA6  0020               	movlb	0	; select bank0
  8437  0AA7  0820               	movf	?___ftdiv,w
  8438  0AA8  00CF               	movwf	tempCalc@R
  8439  0AA9  0821               	movf	?___ftdiv+1,w
  8440  0AAA  00D0               	movwf	tempCalc@R+1
  8441  0AAB  0822               	movf	?___ftdiv+2,w
  8442  0AAC  00D1               	movwf	tempCalc@R+2
  8443                           
  8444                           ;tempCalc.c: 8: steinhart=R/10010;
  8445  0AAD  3068               	movlw	104
  8446  0AAE  00A0               	movwf	___ftdiv@f2
  8447  0AAF  301C               	movlw	28
  8448  0AB0  00A1               	movwf	___ftdiv@f2+1
  8449  0AB1  3046               	movlw	70
  8450  0AB2  00A2               	movwf	___ftdiv@f2+2
  8451  0AB3  084F               	movf	tempCalc@R,w
  8452  0AB4  00A3               	movwf	___ftdiv@f1
  8453  0AB5  0850               	movf	tempCalc@R+1,w
  8454  0AB6  00A4               	movwf	___ftdiv@f1+1
  8455  0AB7  0851               	movf	tempCalc@R+2,w
  8456  0AB8  00A5               	movwf	___ftdiv@f1+2
  8457  0AB9  3197  2757  318A   	fcall	___ftdiv
  8458  0ABC  0020               	movlb	0	; select bank0
  8459  0ABD  0820               	movf	?___ftdiv,w
  8460  0ABE  00D5               	movwf	tempCalc@steinhart
  8461  0ABF  0821               	movf	?___ftdiv+1,w
  8462  0AC0  00D6               	movwf	tempCalc@steinhart+1
  8463  0AC1  0822               	movf	?___ftdiv+2,w
  8464  0AC2  00D7               	movwf	tempCalc@steinhart+2
  8465                           
  8466                           ;tempCalc.c: 9: steinhart=log(steinhart);
  8467  0AC3  0855               	movf	tempCalc@steinhart,w
  8468  0AC4  00C7               	movwf	log@x
  8469  0AC5  0856               	movf	tempCalc@steinhart+1,w
  8470  0AC6  00C8               	movwf	log@x+1
  8471  0AC7  0857               	movf	tempCalc@steinhart+2,w
  8472  0AC8  00C9               	movwf	log@x+2
  8473  0AC9  3188  204B  318A   	fcall	_log
  8474  0ACC  0020               	movlb	0	; select bank0
  8475  0ACD  0847               	movf	?_log,w
  8476  0ACE  00D5               	movwf	tempCalc@steinhart
  8477  0ACF  0848               	movf	?_log+1,w
  8478  0AD0  00D6               	movwf	tempCalc@steinhart+1
  8479  0AD1  0849               	movf	?_log+2,w
  8480  0AD2  00D7               	movwf	tempCalc@steinhart+2
  8481                           
  8482                           ;tempCalc.c: 10: steinhart/=3795.3;
  8483  0AD3  3035               	movlw	53
  8484  0AD4  00A0               	movwf	___ftdiv@f2
  8485  0AD5  306D               	movlw	109
  8486  0AD6  00A1               	movwf	___ftdiv@f2+1
  8487  0AD7  3045               	movlw	69
  8488  0AD8  00A2               	movwf	___ftdiv@f2+2
  8489  0AD9  0855               	movf	tempCalc@steinhart,w
  8490  0ADA  00A3               	movwf	___ftdiv@f1
  8491  0ADB  0856               	movf	tempCalc@steinhart+1,w
  8492  0ADC  00A4               	movwf	___ftdiv@f1+1
  8493  0ADD  0857               	movf	tempCalc@steinhart+2,w
  8494  0ADE  00A5               	movwf	___ftdiv@f1+2
  8495  0ADF  3197  2757  318A   	fcall	___ftdiv
  8496  0AE2  0020               	movlb	0	; select bank0
  8497  0AE3  0820               	movf	?___ftdiv,w
  8498  0AE4  00D5               	movwf	tempCalc@steinhart
  8499  0AE5  0821               	movf	?___ftdiv+1,w
  8500  0AE6  00D6               	movwf	tempCalc@steinhart+1
  8501  0AE7  0822               	movf	?___ftdiv+2,w
  8502  0AE8  00D7               	movwf	tempCalc@steinhart+2
  8503                           
  8504                           ;tempCalc.c: 11: steinhart+=1.0/(25+273.15);
  8505  0AE9  30CF               	movlw	207
  8506  0AEA  00B0               	movwf	___ftadd@f1
  8507  0AEB  305B               	movlw	91
  8508  0AEC  00B1               	movwf	___ftadd@f1+1
  8509  0AED  303B               	movlw	59
  8510  0AEE  00B2               	movwf	___ftadd@f1+2
  8511  0AEF  0855               	movf	tempCalc@steinhart,w
  8512  0AF0  00B3               	movwf	___ftadd@f2
  8513  0AF1  0856               	movf	tempCalc@steinhart+1,w
  8514  0AF2  00B4               	movwf	___ftadd@f2+1
  8515  0AF3  0857               	movf	tempCalc@steinhart+2,w
  8516  0AF4  00B5               	movwf	___ftadd@f2+2
  8517  0AF5  318B  234F  318A   	fcall	___ftadd
  8518  0AF8  0020               	movlb	0	; select bank0
  8519  0AF9  0830               	movf	?___ftadd,w
  8520  0AFA  00D5               	movwf	tempCalc@steinhart
  8521  0AFB  0831               	movf	?___ftadd+1,w
  8522  0AFC  00D6               	movwf	tempCalc@steinhart+1
  8523  0AFD  0832               	movf	?___ftadd+2,w
  8524  0AFE  00D7               	movwf	tempCalc@steinhart+2
  8525                           
  8526                           ;tempCalc.c: 12: steinhart=1.0/steinhart;
  8527  0AFF  0855               	movf	tempCalc@steinhart,w
  8528  0B00  00A0               	movwf	___ftdiv@f2
  8529  0B01  0856               	movf	tempCalc@steinhart+1,w
  8530  0B02  00A1               	movwf	___ftdiv@f2+1
  8531  0B03  0857               	movf	tempCalc@steinhart+2,w
  8532  0B04  00A2               	movwf	___ftdiv@f2+2
  8533  0B05  3000               	movlw	0
  8534  0B06  00A3               	movwf	___ftdiv@f1
  8535  0B07  3080               	movlw	128
  8536  0B08  00A4               	movwf	___ftdiv@f1+1
  8537  0B09  303F               	movlw	63
  8538  0B0A  00A5               	movwf	___ftdiv@f1+2
  8539  0B0B  3197  2757  318A   	fcall	___ftdiv
  8540  0B0E  0020               	movlb	0	; select bank0
  8541  0B0F  0820               	movf	?___ftdiv,w
  8542  0B10  00D5               	movwf	tempCalc@steinhart
  8543  0B11  0821               	movf	?___ftdiv+1,w
  8544  0B12  00D6               	movwf	tempCalc@steinhart+1
  8545  0B13  0822               	movf	?___ftdiv+2,w
  8546  0B14  00D7               	movwf	tempCalc@steinhart+2
  8547                           
  8548                           ;tempCalc.c: 13: steinhart-=273;
  8549  0B15  3080               	movlw	128
  8550  0B16  00BD               	movwf	___ftsub@f2
  8551  0B17  3088               	movlw	136
  8552  0B18  00BE               	movwf	___ftsub@f2+1
  8553  0B19  3043               	movlw	67
  8554  0B1A  00BF               	movwf	___ftsub@f2+2
  8555  0B1B  0855               	movf	tempCalc@steinhart,w
  8556  0B1C  00C0               	movwf	___ftsub@f1
  8557  0B1D  0856               	movf	tempCalc@steinhart+1,w
  8558  0B1E  00C1               	movwf	___ftsub@f1+1
  8559  0B1F  0857               	movf	tempCalc@steinhart+2,w
  8560  0B20  00C2               	movwf	___ftsub@f1+2
  8561  0B21  3191  21A2  318A   	fcall	___ftsub
  8562  0B24  0020               	movlb	0	; select bank0
  8563  0B25  083D               	movf	?___ftsub,w
  8564  0B26  00D5               	movwf	tempCalc@steinhart
  8565  0B27  083E               	movf	?___ftsub+1,w
  8566  0B28  00D6               	movwf	tempCalc@steinhart+1
  8567  0B29  083F               	movf	?___ftsub+2,w
  8568  0B2A  00D7               	movwf	tempCalc@steinhart+2
  8569                           
  8570                           ;tempCalc.c: 15: steinhart*=10;
  8571  0B2B  3000               	movlw	0
  8572  0B2C  00A0               	movwf	___ftmul@f1
  8573  0B2D  3020               	movlw	32
  8574  0B2E  00A1               	movwf	___ftmul@f1+1
  8575  0B2F  3041               	movlw	65
  8576  0B30  00A2               	movwf	___ftmul@f1+2
  8577  0B31  0855               	movf	tempCalc@steinhart,w
  8578  0B32  00A3               	movwf	___ftmul@f2
  8579  0B33  0856               	movf	tempCalc@steinhart+1,w
  8580  0B34  00A4               	movwf	___ftmul@f2+1
  8581  0B35  0857               	movf	tempCalc@steinhart+2,w
  8582  0B36  00A5               	movwf	___ftmul@f2+2
  8583  0B37  3188  20FB  318A   	fcall	___ftmul
  8584  0B3A  0020               	movlb	0	; select bank0
  8585  0B3B  0820               	movf	?___ftmul,w
  8586  0B3C  00D5               	movwf	tempCalc@steinhart
  8587  0B3D  0821               	movf	?___ftmul+1,w
  8588  0B3E  00D6               	movwf	tempCalc@steinhart+1
  8589  0B3F  0822               	movf	?___ftmul+2,w
  8590  0B40  00D7               	movwf	tempCalc@steinhart+2
  8591                           
  8592                           ;tempCalc.c: 18: return (int16_t)steinhart;
  8593  0B41  0855               	movf	tempCalc@steinhart,w
  8594  0B42  00B0               	movwf	___fttol@f1
  8595  0B43  0856               	movf	tempCalc@steinhart+1,w
  8596  0B44  00B1               	movwf	___fttol@f1+1
  8597  0B45  0857               	movf	tempCalc@steinhart+2,w
  8598  0B46  00B2               	movwf	___fttol@f1+2
  8599  0B47  3180  2019         	fcall	___fttol
  8600  0B49  0020               	movlb	0	; select bank0
  8601  0B4A  0831               	movf	?___fttol+1,w
  8602  0B4B  00CE               	movwf	?_tempCalc+1
  8603  0B4C  0830               	movf	?___fttol,w
  8604  0B4D  00CD               	movwf	?_tempCalc
  8605  0B4E  0008               	return
  8606  0B4F                     __end_of_tempCalc:	
  8607                           
  8608                           	psect	text2
  8609  084B                     __ptext2:	
  8610 ;; *************** function _log *****************
  8611 ;; Defined at:
  8612 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  x               3   39[BANK0 ] int 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;  exponent        2   43[BANK0 ] int 
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  3   39[BANK0 ] int 
  8619 ;; Registers used:
  8620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8626 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8627 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8628 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8629 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8630 ;;Total ram usage:        6 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; Hardware stack levels required when called:    3
  8633 ;; This function calls:
  8634 ;;		___awtoft
  8635 ;;		___ftadd
  8636 ;;		___ftge
  8637 ;;		___ftmul
  8638 ;;		_eval_poly
  8639 ;;		_frexp
  8640 ;; This function is called by:
  8641 ;;		_tempCalc
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           
  8646                           ;psect for function _log
  8647  084B                     _log:	
  8648                           
  8649                           ;incstack = 0
  8650                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8651  084B  0020               	movlb	0	; select bank0
  8652  084C  0847               	movf	log@x,w
  8653  084D  00F0               	movwf	___ftge@ff1
  8654  084E  0848               	movf	log@x+1,w
  8655  084F  00F1               	movwf	___ftge@ff1+1
  8656  0850  0849               	movf	log@x+2,w
  8657  0851  00F2               	movwf	___ftge@ff1+2
  8658  0852  3000               	movlw	0
  8659  0853  00F3               	movwf	___ftge@ff2
  8660  0854  3000               	movlw	0
  8661  0855  00F4               	movwf	___ftge@ff2+1
  8662  0856  3000               	movlw	0
  8663  0857  00F5               	movwf	___ftge@ff2+2
  8664  0858  3193  2342  3188   	fcall	___ftge
  8665  085B  1803               	btfsc	3,0
  8666  085C  286A               	goto	l2787
  8667  085D  3021               	movlw	33
  8668  085E  0021               	movlb	1	; select bank1
  8669  085F  00CD               	movwf	_errno^(0+128)
  8670  0860  3000               	movlw	0
  8671  0861  00CE               	movwf	(_errno^(0+128)+1)
  8672  0862  3000               	movlw	0
  8673  0863  0020               	movlb	0	; select bank0
  8674  0864  00C7               	movwf	?_log
  8675  0865  3000               	movlw	0
  8676  0866  00C8               	movwf	?_log+1
  8677  0867  3000               	movlw	0
  8678  0868  00C9               	movwf	?_log+2
  8679  0869  0008               	return
  8680  086A                     l2787:	
  8681  086A  0020               	movlb	0	; select bank0
  8682  086B  0849               	movf	log@x+2,w
  8683  086C  0448               	iorwf	log@x+1,w
  8684  086D  0447               	iorwf	log@x,w
  8685  086E  1D03               	skipz
  8686  086F  287D               	goto	l2793
  8687  0870  3022               	movlw	34
  8688  0871  0021               	movlb	1	; select bank1
  8689  0872  00CD               	movwf	_errno^(0+128)
  8690  0873  3000               	movlw	0
  8691  0874  00CE               	movwf	(_errno^(0+128)+1)
  8692  0875  3000               	movlw	0
  8693  0876  0020               	movlb	0	; select bank0
  8694  0877  00C7               	movwf	?_log
  8695  0878  3000               	movlw	0
  8696  0879  00C8               	movwf	?_log+1
  8697  087A  3000               	movlw	0
  8698  087B  00C9               	movwf	?_log+2
  8699  087C  0008               	return
  8700  087D                     l2793:	
  8701  087D  3000               	movlw	0
  8702  087E  00B0               	movwf	___ftadd@f1
  8703  087F  3080               	movlw	128
  8704  0880  00B1               	movwf	___ftadd@f1+1
  8705  0881  30BF               	movlw	191
  8706  0882  00B2               	movwf	___ftadd@f1+2
  8707  0883  3000               	movlw	0
  8708  0884  00A0               	movwf	___ftmul@f1
  8709  0885  3000               	movlw	0
  8710  0886  00A1               	movwf	___ftmul@f1+1
  8711  0887  3040               	movlw	64
  8712  0888  00A2               	movwf	___ftmul@f1+2
  8713  0889  304B               	movlw	(low (log@exponent| 0))& (0+255)
  8714  088A  00CA               	movwf	??_log
  8715  088B  084A               	movf	??_log,w
  8716  088C  00F3               	movwf	frexp@eptr
  8717  088D  0847               	movf	log@x,w
  8718  088E  00F0               	movwf	frexp@value
  8719  088F  0848               	movf	log@x+1,w
  8720  0890  00F1               	movwf	frexp@value+1
  8721  0891  0849               	movf	log@x+2,w
  8722  0892  00F2               	movwf	frexp@value+2
  8723  0893  3193  237D  3188   	fcall	_frexp
  8724  0896  0870               	movf	?_frexp,w
  8725  0897  0020               	movlb	0	; select bank0
  8726  0898  00A3               	movwf	___ftmul@f2
  8727  0899  0871               	movf	?_frexp+1,w
  8728  089A  00A4               	movwf	___ftmul@f2+1
  8729  089B  0872               	movf	?_frexp+2,w
  8730  089C  00A5               	movwf	___ftmul@f2+2
  8731  089D  3188  20FB  3188   	fcall	___ftmul
  8732  08A0  0020               	movlb	0	; select bank0
  8733  08A1  0820               	movf	?___ftmul,w
  8734  08A2  00B3               	movwf	___ftadd@f2
  8735  08A3  0821               	movf	?___ftmul+1,w
  8736  08A4  00B4               	movwf	___ftadd@f2+1
  8737  08A5  0822               	movf	?___ftmul+2,w
  8738  08A6  00B5               	movwf	___ftadd@f2+2
  8739  08A7  318B  234F  3188   	fcall	___ftadd
  8740  08AA  0020               	movlb	0	; select bank0
  8741  08AB  0830               	movf	?___ftadd,w
  8742  08AC  00C7               	movwf	log@x
  8743  08AD  0831               	movf	?___ftadd+1,w
  8744  08AE  00C8               	movwf	log@x+1
  8745  08AF  0832               	movf	?___ftadd+2,w
  8746  08B0  00C9               	movwf	log@x+2
  8747  08B1  30FF               	movlw	255
  8748  08B2  07CB               	addwf	log@exponent,f
  8749  08B3  30FF               	movlw	255
  8750  08B4  3DCC               	addwfc	log@exponent+1,f
  8751  08B5  0847               	movf	log@x,w
  8752  08B6  00BD               	movwf	eval_poly@x
  8753  08B7  0848               	movf	log@x+1,w
  8754  08B8  00BE               	movwf	eval_poly@x+1
  8755  08B9  0849               	movf	log@x+2,w
  8756  08BA  00BF               	movwf	eval_poly@x+2
  8757  08BB  3000               	movlw	low (log@coeff| (0+32768))
  8758  08BC  00C0               	movwf	eval_poly@d
  8759  08BD  3098               	movlw	high (log@coeff| (0+32768))
  8760  08BE  00C1               	movwf	eval_poly@d+1
  8761  08BF  3008               	movlw	8
  8762  08C0  00C2               	movwf	eval_poly@n
  8763  08C1  3000               	movlw	0
  8764  08C2  00C3               	movwf	eval_poly@n+1
  8765  08C3  3195  252C  3188   	fcall	_eval_poly
  8766  08C6  0020               	movlb	0	; select bank0
  8767  08C7  083D               	movf	?_eval_poly,w
  8768  08C8  00C7               	movwf	log@x
  8769  08C9  083E               	movf	?_eval_poly+1,w
  8770  08CA  00C8               	movwf	log@x+1
  8771  08CB  083F               	movf	?_eval_poly+2,w
  8772  08CC  00C9               	movwf	log@x+2
  8773  08CD  0847               	movf	log@x,w
  8774  08CE  00B0               	movwf	___ftadd@f1
  8775  08CF  0848               	movf	log@x+1,w
  8776  08D0  00B1               	movwf	___ftadd@f1+1
  8777  08D1  0849               	movf	log@x+2,w
  8778  08D2  00B2               	movwf	___ftadd@f1+2
  8779  08D3  3072               	movlw	114
  8780  08D4  00A0               	movwf	___ftmul@f1
  8781  08D5  3031               	movlw	49
  8782  08D6  00A1               	movwf	___ftmul@f1+1
  8783  08D7  303F               	movlw	63
  8784  08D8  00A2               	movwf	___ftmul@f1+2
  8785  08D9  084C               	movf	log@exponent+1,w
  8786  08DA  00F9               	movwf	___awtoft@c+1
  8787  08DB  084B               	movf	log@exponent,w
  8788  08DC  00F8               	movwf	___awtoft@c
  8789  08DD  3191  21FE  3188   	fcall	___awtoft
  8790  08E0  0878               	movf	?___awtoft,w
  8791  08E1  0020               	movlb	0	; select bank0
  8792  08E2  00A3               	movwf	___ftmul@f2
  8793  08E3  0879               	movf	?___awtoft+1,w
  8794  08E4  00A4               	movwf	___ftmul@f2+1
  8795  08E5  087A               	movf	?___awtoft+2,w
  8796  08E6  00A5               	movwf	___ftmul@f2+2
  8797  08E7  3188  20FB  3188   	fcall	___ftmul
  8798  08EA  0020               	movlb	0	; select bank0
  8799  08EB  0820               	movf	?___ftmul,w
  8800  08EC  00B3               	movwf	___ftadd@f2
  8801  08ED  0821               	movf	?___ftmul+1,w
  8802  08EE  00B4               	movwf	___ftadd@f2+1
  8803  08EF  0822               	movf	?___ftmul+2,w
  8804  08F0  00B5               	movwf	___ftadd@f2+2
  8805  08F1  318B  234F         	fcall	___ftadd
  8806  08F3  0020               	movlb	0	; select bank0
  8807  08F4  0830               	movf	?___ftadd,w
  8808  08F5  00C7               	movwf	?_log
  8809  08F6  0831               	movf	?___ftadd+1,w
  8810  08F7  00C8               	movwf	?_log+1
  8811  08F8  0832               	movf	?___ftadd+2,w
  8812  08F9  00C9               	movwf	?_log+2
  8813  08FA  0008               	return
  8814  08FB                     __end_of_log:	
  8815                           
  8816                           	psect	text3
  8817  137D                     __ptext3:	
  8818 ;; *************** function _frexp *****************
  8819 ;; Defined at:
  8820 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;  value           3    0[COMMON] int 
  8823 ;;  eptr            1    3[COMMON] PTR int 
  8824 ;;		 -> log@exponent(2), 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;		None
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  3    0[COMMON] PTR int 
  8829 ;; Registers used:
  8830 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8839 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;Total ram usage:        6 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; This function calls:
  8843 ;;		Nothing
  8844 ;; This function is called by:
  8845 ;;		_log
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           
  8850                           ;psect for function _frexp
  8851  137D                     _frexp:	
  8852                           
  8853                           ;incstack = 0
  8854                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8855  137D  0872               	movf	frexp@value+2,w
  8856  137E  0471               	iorwf	frexp@value+1,w
  8857  137F  0470               	iorwf	frexp@value,w
  8858  1380  1D03               	skipz
  8859  1381  2B8F               	goto	l2583
  8860  1382  0873               	movf	frexp@eptr,w
  8861  1383  0086               	movwf	6
  8862  1384  0187               	clrf	7
  8863  1385  3000               	movlw	0
  8864  1386  3FC0               	movwi [0]fsr1
  8865  1387  3FC1               	movwi [1]fsr1
  8866  1388  3000               	movlw	0
  8867  1389  00F0               	movwf	?_frexp
  8868  138A  3000               	movlw	0
  8869  138B  00F1               	movwf	?_frexp+1
  8870  138C  3000               	movlw	0
  8871  138D  00F2               	movwf	?_frexp+2
  8872  138E  0008               	return
  8873  138F                     l2583:	
  8874  138F  0872               	movf	frexp@value+2,w
  8875  1390  397F               	andlw	127
  8876  1391  00F4               	movwf	??_frexp
  8877  1392  01F5               	clrf	??_frexp+1
  8878  1393  35F4               	lslf	??_frexp,f
  8879  1394  0DF5               	rlf	??_frexp+1,f
  8880  1395  0873               	movf	frexp@eptr,w
  8881  1396  0086               	movwf	6
  8882  1397  0187               	clrf	7
  8883  1398  0874               	movf	??_frexp,w
  8884  1399  3FC0               	movwi [0]fsr1
  8885  139A  0875               	movf	??_frexp+1,w
  8886  139B  3FC1               	movwi [1]fsr1
  8887  139C  0D71               	rlf	frexp@value+1,w
  8888  139D  0D71               	rlf	frexp@value+1,w
  8889  139E  3901               	andlw	1
  8890  139F  00F4               	movwf	??_frexp
  8891  13A0  01F5               	clrf	??_frexp+1
  8892  13A1  0873               	movf	frexp@eptr,w
  8893  13A2  0086               	movwf	6
  8894  13A3  0187               	clrf	7
  8895  13A4  0874               	movf	??_frexp,w
  8896  13A5  0481               	iorwf	1,f
  8897  13A6  3141               	addfsr 1,1
  8898  13A7  0875               	movf	??_frexp+1,w
  8899  13A8  0481               	iorwf	1,f
  8900  13A9  0873               	movf	frexp@eptr,w
  8901  13AA  0086               	movwf	6
  8902  13AB  0187               	clrf	7
  8903  13AC  3082               	movlw	130
  8904  13AD  0781               	addwf	1,f
  8905  13AE  3141               	addfsr 1,1
  8906  13AF  30FF               	movlw	255
  8907  13B0  3D81               	addwfc	1,f
  8908  13B1  317F               	addfsr 1,-1
  8909  13B2  0872               	movf	frexp@value+2,w
  8910  13B3  3980               	andlw	-128
  8911  13B4  383F               	iorlw	63
  8912  13B5  00F2               	movwf	frexp@value+2
  8913  13B6  13F1               	bcf	frexp@value+1,7
  8914  13B7  0008               	return
  8915  13B8                     __end_of_frexp:	
  8916                           
  8917                           	psect	text4
  8918  152C                     __ptext4:	
  8919 ;; *************** function _eval_poly *****************
  8920 ;; Defined at:
  8921 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;  x               3   29[BANK0 ] PTR int 
  8924 ;;  d               2   32[BANK0 ] PTR const 
  8925 ;;		 -> log@coeff(27), 
  8926 ;;  n               2   34[BANK0 ] int 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;  res             3   36[BANK0 ] int 
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  3   29[BANK0 ] int 
  8931 ;; Registers used:
  8932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8938 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;Total ram usage:       10 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:    2
  8945 ;; This function calls:
  8946 ;;		___ftadd
  8947 ;;		___ftmul
  8948 ;;		___wmul
  8949 ;; This function is called by:
  8950 ;;		_log
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           
  8955                           ;psect for function _eval_poly
  8956  152C                     _eval_poly:	
  8957                           
  8958                           ;incstack = 0
  8959                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8960  152C  0020               	movlb	0	; select bank0
  8961  152D  0843               	movf	eval_poly@n+1,w
  8962  152E  00F1               	movwf	___wmul@multiplier+1
  8963  152F  0842               	movf	eval_poly@n,w
  8964  1530  00F0               	movwf	___wmul@multiplier
  8965  1531  3003               	movlw	3
  8966  1532  00F2               	movwf	___wmul@multiplicand
  8967  1533  3000               	movlw	0
  8968  1534  00F3               	movwf	___wmul@multiplicand+1
  8969  1535  3191  2187  3195   	fcall	___wmul
  8970  1538  0020               	movlb	0	; select bank0
  8971  1539  0840               	movf	eval_poly@d,w
  8972  153A  0770               	addwf	?___wmul,w
  8973  153B  0084               	movwf	4
  8974  153C  0841               	movf	eval_poly@d+1,w
  8975  153D  3D71               	addwfc	?___wmul+1,w
  8976  153E  0085               	movwf	5
  8977  153F  3F00               	moviw [0]fsr0
  8978  1540  00C4               	movwf	eval_poly@res
  8979  1541  3F01               	moviw [1]fsr0
  8980  1542  00C5               	movwf	eval_poly@res+1
  8981  1543  3F02               	moviw [2]fsr0
  8982  1544                     L6:	
  8983  1544  00C6               	movwf	eval_poly@res+2
  8984  1545  0842               	movf	eval_poly@n,w
  8985  1546  0443               	iorwf	eval_poly@n+1,w
  8986  1547  1903               	btfsc	3,2
  8987  1548  2D85               	goto	l2601
  8988  1549  30FF               	movlw	255
  8989  154A  07C2               	addwf	eval_poly@n,f
  8990  154B  30FF               	movlw	255
  8991  154C  3DC3               	addwfc	eval_poly@n+1,f
  8992  154D  0843               	movf	eval_poly@n+1,w
  8993  154E  00F1               	movwf	___wmul@multiplier+1
  8994  154F  0842               	movf	eval_poly@n,w
  8995  1550  00F0               	movwf	___wmul@multiplier
  8996  1551  3003               	movlw	3
  8997  1552  00F2               	movwf	___wmul@multiplicand
  8998  1553  3000               	movlw	0
  8999  1554  00F3               	movwf	___wmul@multiplicand+1
  9000  1555  3191  2187  3195   	fcall	___wmul
  9001  1558  0020               	movlb	0	; select bank0
  9002  1559  0840               	movf	eval_poly@d,w
  9003  155A  0770               	addwf	?___wmul,w
  9004  155B  0084               	movwf	4
  9005  155C  0841               	movf	eval_poly@d+1,w
  9006  155D  3D71               	addwfc	?___wmul+1,w
  9007  155E  0085               	movwf	5
  9008  155F  3F00               	moviw [0]fsr0
  9009  1560  00B0               	movwf	___ftadd@f1
  9010  1561  3F01               	moviw [1]fsr0
  9011  1562  00B1               	movwf	___ftadd@f1+1
  9012  1563  3F02               	moviw [2]fsr0
  9013  1564  00B2               	movwf	___ftadd@f1+2
  9014  1565  0844               	movf	eval_poly@res,w
  9015  1566  00A0               	movwf	___ftmul@f1
  9016  1567  0845               	movf	eval_poly@res+1,w
  9017  1568  00A1               	movwf	___ftmul@f1+1
  9018  1569  0846               	movf	eval_poly@res+2,w
  9019  156A  00A2               	movwf	___ftmul@f1+2
  9020  156B  083D               	movf	eval_poly@x,w
  9021  156C  00A3               	movwf	___ftmul@f2
  9022  156D  083E               	movf	eval_poly@x+1,w
  9023  156E  00A4               	movwf	___ftmul@f2+1
  9024  156F  083F               	movf	eval_poly@x+2,w
  9025  1570  00A5               	movwf	___ftmul@f2+2
  9026  1571  3188  20FB  3195   	fcall	___ftmul
  9027  1574  0020               	movlb	0	; select bank0
  9028  1575  0820               	movf	?___ftmul,w
  9029  1576  00B3               	movwf	___ftadd@f2
  9030  1577  0821               	movf	?___ftmul+1,w
  9031  1578  00B4               	movwf	___ftadd@f2+1
  9032  1579  0822               	movf	?___ftmul+2,w
  9033  157A  00B5               	movwf	___ftadd@f2+2
  9034  157B  318B  234F  3195   	fcall	___ftadd
  9035  157E  0020               	movlb	0	; select bank0
  9036  157F  0830               	movf	?___ftadd,w
  9037  1580  00C4               	movwf	eval_poly@res
  9038  1581  0831               	movf	?___ftadd+1,w
  9039  1582  00C5               	movwf	eval_poly@res+1
  9040  1583  0832               	movf	?___ftadd+2,w
  9041  1584  2D44               	goto	L6
  9042  1585                     l2601:	
  9043  1585  0844               	movf	eval_poly@res,w
  9044  1586  00BD               	movwf	?_eval_poly
  9045  1587  0845               	movf	eval_poly@res+1,w
  9046  1588  00BE               	movwf	?_eval_poly+1
  9047  1589  0846               	movf	eval_poly@res+2,w
  9048  158A  00BF               	movwf	?_eval_poly+2
  9049  158B  0008               	return
  9050  158C                     __end_of_eval_poly:	
  9051                           
  9052                           	psect	text5
  9053  1342                     __ptext5:	
  9054 ;; *************** function ___ftge *****************
  9055 ;; Defined at:
  9056 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  ff1             3    0[COMMON] float 
  9059 ;;  ff2             3    3[COMMON] float 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;		None               void
  9064 ;; Registers used:
  9065 ;;		wreg, status,2, status,0
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9071 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;Total ram usage:        9 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; This function calls:
  9078 ;;		Nothing
  9079 ;; This function is called by:
  9080 ;;		_log
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           
  9085                           ;psect for function ___ftge
  9086  1342                     ___ftge:	
  9087                           
  9088                           ;incstack = 0
  9089                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9090  1342  1FF2               	btfss	___ftge@ff1+2,7
  9091  1343  2B58               	goto	l2517
  9092  1344  0970               	comf	___ftge@ff1,w
  9093  1345  00F6               	movwf	??___ftge
  9094  1346  0971               	comf	___ftge@ff1+1,w
  9095  1347  00F7               	movwf	??___ftge+1
  9096  1348  0972               	comf	___ftge@ff1+2,w
  9097  1349  00F8               	movwf	??___ftge+2
  9098  134A  0AF6               	incf	??___ftge,f
  9099  134B  1903               	skipnz
  9100  134C  0AF7               	incf	??___ftge+1,f
  9101  134D  1903               	skipnz
  9102  134E  0AF8               	incf	??___ftge+2,f
  9103  134F  3000               	movlw	0
  9104  1350  0776               	addwf	??___ftge,w
  9105  1351  00F0               	movwf	___ftge@ff1
  9106  1352  3000               	movlw	0
  9107  1353  3D77               	addwfc	??___ftge+1,w
  9108  1354  00F1               	movwf	___ftge@ff1+1
  9109  1355  3080               	movlw	128
  9110  1356  3D78               	addwfc	??___ftge+2,w
  9111  1357  00F2               	movwf	___ftge@ff1+2
  9112  1358                     l2517:	
  9113  1358  1FF5               	btfss	___ftge@ff2+2,7
  9114  1359  2B6E               	goto	l2521
  9115  135A  0973               	comf	___ftge@ff2,w
  9116  135B  00F6               	movwf	??___ftge
  9117  135C  0974               	comf	___ftge@ff2+1,w
  9118  135D  00F7               	movwf	??___ftge+1
  9119  135E  0975               	comf	___ftge@ff2+2,w
  9120  135F  00F8               	movwf	??___ftge+2
  9121  1360  0AF6               	incf	??___ftge,f
  9122  1361  1903               	skipnz
  9123  1362  0AF7               	incf	??___ftge+1,f
  9124  1363  1903               	skipnz
  9125  1364  0AF8               	incf	??___ftge+2,f
  9126  1365  3000               	movlw	0
  9127  1366  0776               	addwf	??___ftge,w
  9128  1367  00F3               	movwf	___ftge@ff2
  9129  1368  3000               	movlw	0
  9130  1369  3D77               	addwfc	??___ftge+1,w
  9131  136A  00F4               	movwf	___ftge@ff2+1
  9132  136B  3080               	movlw	128
  9133  136C  3D78               	addwfc	??___ftge+2,w
  9134  136D  00F5               	movwf	___ftge@ff2+2
  9135  136E                     l2521:	
  9136  136E  3080               	movlw	128
  9137  136F  06F2               	xorwf	___ftge@ff1+2,f
  9138  1370  3080               	movlw	128
  9139  1371  06F5               	xorwf	___ftge@ff2+2,f
  9140  1372  0875               	movf	___ftge@ff2+2,w
  9141  1373  0272               	subwf	___ftge@ff1+2,w
  9142  1374  1D03               	skipz
  9143  1375  0008               	return
  9144  1376  0874               	movf	___ftge@ff2+1,w
  9145  1377  0271               	subwf	___ftge@ff1+1,w
  9146  1378  1D03               	skipz
  9147  1379  0008               	return
  9148  137A  0873               	movf	___ftge@ff2,w
  9149  137B  0270               	subwf	___ftge@ff1,w
  9150  137C  0008               	return
  9151  137D                     __end_of___ftge:	
  9152                           
  9153                           	psect	text6
  9154  11A2                     __ptext6:	
  9155 ;; *************** function ___ftsub *****************
  9156 ;; Defined at:
  9157 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;  f2              3   29[BANK0 ] float 
  9160 ;;  f1              3   32[BANK0 ] float 
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  3   29[BANK0 ] float 
  9165 ;; Registers used:
  9166 ;;		wreg, status,2, status,0, pclath, cstack
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9172 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;Total ram usage:        6 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:    2
  9179 ;; This function calls:
  9180 ;;		___ftadd
  9181 ;; This function is called by:
  9182 ;;		_tempCalc
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           
  9187                           ;psect for function ___ftsub
  9188  11A2                     ___ftsub:	
  9189                           
  9190                           ;incstack = 0
  9191                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9192  11A2  0020               	movlb	0	; select bank0
  9193  11A3  083F               	movf	___ftsub@f2+2,w
  9194  11A4  043E               	iorwf	___ftsub@f2+1,w
  9195  11A5  043D               	iorwf	___ftsub@f2,w
  9196  11A6  1903               	skipnz
  9197  11A7  29AA               	goto	l2933
  9198  11A8  3080               	movlw	128
  9199  11A9  06BF               	xorwf	___ftsub@f2+2,f
  9200  11AA                     l2933:	
  9201  11AA  0840               	movf	___ftsub@f1,w
  9202  11AB  00B0               	movwf	___ftadd@f1
  9203  11AC  0841               	movf	___ftsub@f1+1,w
  9204  11AD  00B1               	movwf	___ftadd@f1+1
  9205  11AE  0842               	movf	___ftsub@f1+2,w
  9206  11AF  00B2               	movwf	___ftadd@f1+2
  9207  11B0  083D               	movf	___ftsub@f2,w
  9208  11B1  00B3               	movwf	___ftadd@f2
  9209  11B2  083E               	movf	___ftsub@f2+1,w
  9210  11B3  00B4               	movwf	___ftadd@f2+1
  9211  11B4  083F               	movf	___ftsub@f2+2,w
  9212  11B5  00B5               	movwf	___ftadd@f2+2
  9213  11B6  318B  234F         	fcall	___ftadd
  9214  11B8  0020               	movlb	0	; select bank0
  9215  11B9  0830               	movf	?___ftadd,w
  9216  11BA  00BD               	movwf	?___ftsub
  9217  11BB  0831               	movf	?___ftadd+1,w
  9218  11BC  00BE               	movwf	?___ftsub+1
  9219  11BD  0832               	movf	?___ftadd+2,w
  9220  11BE  00BF               	movwf	?___ftsub+2
  9221  11BF  0008               	return
  9222  11C0                     __end_of___ftsub:	
  9223                           
  9224                           	psect	text7
  9225  0B4F                     __ptext7:	
  9226 ;; *************** function ___ftadd *****************
  9227 ;; Defined at:
  9228 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;  f1              3   16[BANK0 ] float 
  9231 ;;  f2              3   19[BANK0 ] float 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;  exp1            1   28[BANK0 ] unsigned char 
  9234 ;;  exp2            1   27[BANK0 ] unsigned char 
  9235 ;;  sign            1   26[BANK0 ] unsigned char 
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  3   16[BANK0 ] float 
  9238 ;; Registers used:
  9239 ;;		wreg, status,2, status,0, pclath, cstack
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9245 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9246 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;Total ram usage:       13 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:    1
  9252 ;; This function calls:
  9253 ;;		___ftpack
  9254 ;; This function is called by:
  9255 ;;		_tempCalc
  9256 ;;		___ftsub
  9257 ;;		_log
  9258 ;;		_eval_poly
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           
  9263                           ;psect for function ___ftadd
  9264  0B4F                     ___ftadd:	
  9265                           
  9266                           ;incstack = 0
  9267                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9268  0B4F  0020               	movlb	0	; select bank0
  9269  0B50  0830               	movf	___ftadd@f1,w
  9270  0B51  00B6               	movwf	??___ftadd
  9271  0B52  0831               	movf	___ftadd@f1+1,w
  9272  0B53  00B7               	movwf	??___ftadd+1
  9273  0B54  0832               	movf	___ftadd@f1+2,w
  9274  0B55  00B8               	movwf	??___ftadd+2
  9275  0B56  1003               	clrc
  9276  0B57  0D37               	rlf	??___ftadd+1,w
  9277  0B58  0D38               	rlf	??___ftadd+2,w
  9278  0B59  00B9               	movwf	??___ftadd+3
  9279  0B5A  0839               	movf	??___ftadd+3,w
  9280  0B5B  00BC               	movwf	___ftadd@exp1
  9281  0B5C  0833               	movf	___ftadd@f2,w
  9282  0B5D  00B6               	movwf	??___ftadd
  9283  0B5E  0834               	movf	___ftadd@f2+1,w
  9284  0B5F  00B7               	movwf	??___ftadd+1
  9285  0B60  0835               	movf	___ftadd@f2+2,w
  9286  0B61  00B8               	movwf	??___ftadd+2
  9287  0B62  1003               	clrc
  9288  0B63  0D37               	rlf	??___ftadd+1,w
  9289  0B64  0D38               	rlf	??___ftadd+2,w
  9290  0B65  00B9               	movwf	??___ftadd+3
  9291  0B66  0839               	movf	??___ftadd+3,w
  9292  0B67  00BB               	movwf	___ftadd@exp2
  9293  0B68  083C               	movf	___ftadd@exp1,w
  9294  0B69  1903               	btfsc	3,2
  9295  0B6A  2B77               	goto	l2385
  9296  0B6B  083B               	movf	___ftadd@exp2,w
  9297  0B6C  023C               	subwf	___ftadd@exp1,w
  9298  0B6D  1803               	skipnc
  9299  0B6E  2B7E               	goto	l2389
  9300  0B6F  033C               	decf	___ftadd@exp1,w
  9301  0B70  3AFF               	xorlw	255
  9302  0B71  073B               	addwf	___ftadd@exp2,w
  9303  0B72  00B6               	movwf	??___ftadd
  9304  0B73  3019               	movlw	25
  9305  0B74  0236               	subwf	??___ftadd,w
  9306  0B75  1C03               	skipc
  9307  0B76  2B7E               	goto	l2389
  9308  0B77                     l2385:	
  9309  0B77  0833               	movf	___ftadd@f2,w
  9310  0B78  00B0               	movwf	?___ftadd
  9311  0B79  0834               	movf	___ftadd@f2+1,w
  9312  0B7A  00B1               	movwf	?___ftadd+1
  9313  0B7B  0835               	movf	___ftadd@f2+2,w
  9314  0B7C  00B2               	movwf	?___ftadd+2
  9315  0B7D  0008               	return
  9316  0B7E                     l2389:	
  9317  0B7E  083B               	movf	___ftadd@exp2,w
  9318  0B7F  1903               	btfsc	3,2
  9319  0B80  0008               	return
  9320  0B81  083C               	movf	___ftadd@exp1,w
  9321  0B82  023B               	subwf	___ftadd@exp2,w
  9322  0B83  1803               	skipnc
  9323  0B84  2B8D               	goto	l2395
  9324  0B85  033B               	decf	___ftadd@exp2,w
  9325  0B86  3AFF               	xorlw	255
  9326  0B87  073C               	addwf	___ftadd@exp1,w
  9327  0B88  00B6               	movwf	??___ftadd
  9328  0B89  3019               	movlw	25
  9329  0B8A  0236               	subwf	??___ftadd,w
  9330  0B8B  1803               	btfsc	3,0
  9331  0B8C  0008               	return
  9332  0B8D                     l2395:	
  9333  0B8D  3006               	movlw	6
  9334  0B8E  00B6               	movwf	??___ftadd
  9335  0B8F  0836               	movf	??___ftadd,w
  9336  0B90  00BA               	movwf	___ftadd@sign
  9337  0B91  1BB2               	btfsc	___ftadd@f1+2,7
  9338  0B92  17BA               	bsf	___ftadd@sign,7
  9339  0B93  1BB5               	btfsc	___ftadd@f2+2,7
  9340  0B94  173A               	bsf	___ftadd@sign,6
  9341  0B95  17B1               	bsf	___ftadd@f1+1,7
  9342  0B96  30FF               	movlw	255
  9343  0B97  05B0               	andwf	___ftadd@f1,f
  9344  0B98  30FF               	movlw	255
  9345  0B99  05B1               	andwf	___ftadd@f1+1,f
  9346  0B9A  3000               	movlw	0
  9347  0B9B  05B2               	andwf	___ftadd@f1+2,f
  9348  0B9C  17B4               	bsf	___ftadd@f2+1,7
  9349  0B9D  30FF               	movlw	255
  9350  0B9E  05B3               	andwf	___ftadd@f2,f
  9351  0B9F  30FF               	movlw	255
  9352  0BA0  05B4               	andwf	___ftadd@f2+1,f
  9353  0BA1  3000               	movlw	0
  9354  0BA2  05B5               	andwf	___ftadd@f2+2,f
  9355  0BA3  083B               	movf	___ftadd@exp2,w
  9356  0BA4  023C               	subwf	___ftadd@exp1,w
  9357  0BA5  1803               	skipnc
  9358  0BA6  2BC9               	goto	l2417
  9359  0BA7                     l2407:	
  9360  0BA7  3001               	movlw	1
  9361  0BA8                     u2455:	
  9362  0BA8  35B3               	lslf	___ftadd@f2,f
  9363  0BA9  0DB4               	rlf	___ftadd@f2+1,f
  9364  0BAA  0DB5               	rlf	___ftadd@f2+2,f
  9365  0BAB  0B89               	decfsz	9,f
  9366  0BAC  2BA8               	goto	u2455
  9367  0BAD  3001               	movlw	1
  9368  0BAE  02BB               	subwf	___ftadd@exp2,f
  9369  0BAF  083B               	movf	___ftadd@exp2,w
  9370  0BB0  063C               	xorwf	___ftadd@exp1,w
  9371  0BB1  1903               	skipnz
  9372  0BB2  2BC4               	goto	l2415
  9373  0BB3  3001               	movlw	1
  9374  0BB4  02BA               	subwf	___ftadd@sign,f
  9375  0BB5  083A               	movf	___ftadd@sign,w
  9376  0BB6  3907               	andlw	7
  9377  0BB7  1903               	btfsc	3,2
  9378  0BB8  2BC4               	goto	l2415
  9379  0BB9  2BA7               	goto	l2407
  9380  0BBA                     l2413:	
  9381  0BBA  3001               	movlw	1
  9382  0BBB                     u2485:	
  9383  0BBB  36B2               	lsrf	___ftadd@f1+2,f
  9384  0BBC  0CB1               	rrf	___ftadd@f1+1,f
  9385  0BBD  0CB0               	rrf	___ftadd@f1,f
  9386  0BBE  0B89               	decfsz	9,f
  9387  0BBF  2BBB               	goto	u2485
  9388  0BC0  3001               	movlw	1
  9389  0BC1  00B6               	movwf	??___ftadd
  9390  0BC2  0836               	movf	??___ftadd,w
  9391  0BC3  07BC               	addwf	___ftadd@exp1,f
  9392  0BC4                     l2415:	
  9393  0BC4  083C               	movf	___ftadd@exp1,w
  9394  0BC5  063B               	xorwf	___ftadd@exp2,w
  9395  0BC6  1903               	btfsc	3,2
  9396  0BC7  2BEE               	goto	l817
  9397  0BC8  2BBA               	goto	l2413
  9398  0BC9                     l2417:	
  9399  0BC9  083C               	movf	___ftadd@exp1,w
  9400  0BCA  023B               	subwf	___ftadd@exp2,w
  9401  0BCB  1803               	skipnc
  9402  0BCC  2BEE               	goto	l817
  9403  0BCD                     l2419:	
  9404  0BCD  3001               	movlw	1
  9405  0BCE                     u2515:	
  9406  0BCE  35B0               	lslf	___ftadd@f1,f
  9407  0BCF  0DB1               	rlf	___ftadd@f1+1,f
  9408  0BD0  0DB2               	rlf	___ftadd@f1+2,f
  9409  0BD1  0B89               	decfsz	9,f
  9410  0BD2  2BCE               	goto	u2515
  9411  0BD3  3001               	movlw	1
  9412  0BD4  02BC               	subwf	___ftadd@exp1,f
  9413  0BD5  083B               	movf	___ftadd@exp2,w
  9414  0BD6  063C               	xorwf	___ftadd@exp1,w
  9415  0BD7  1903               	skipnz
  9416  0BD8  2BEA               	goto	l2427
  9417  0BD9  3001               	movlw	1
  9418  0BDA  02BA               	subwf	___ftadd@sign,f
  9419  0BDB  083A               	movf	___ftadd@sign,w
  9420  0BDC  3907               	andlw	7
  9421  0BDD  1903               	btfsc	3,2
  9422  0BDE  2BEA               	goto	l2427
  9423  0BDF  2BCD               	goto	l2419
  9424  0BE0                     l2425:	
  9425  0BE0  3001               	movlw	1
  9426  0BE1                     u2545:	
  9427  0BE1  36B5               	lsrf	___ftadd@f2+2,f
  9428  0BE2  0CB4               	rrf	___ftadd@f2+1,f
  9429  0BE3  0CB3               	rrf	___ftadd@f2,f
  9430  0BE4  0B89               	decfsz	9,f
  9431  0BE5  2BE1               	goto	u2545
  9432  0BE6  3001               	movlw	1
  9433  0BE7  00B6               	movwf	??___ftadd
  9434  0BE8  0836               	movf	??___ftadd,w
  9435  0BE9  07BB               	addwf	___ftadd@exp2,f
  9436  0BEA                     l2427:	
  9437  0BEA  083C               	movf	___ftadd@exp1,w
  9438  0BEB  063B               	xorwf	___ftadd@exp2,w
  9439  0BEC  1D03               	skipz
  9440  0BED  2BE0               	goto	l2425
  9441  0BEE                     l817:	
  9442  0BEE  1FBA               	btfss	___ftadd@sign,7
  9443  0BEF  2C00               	goto	l2431
  9444  0BF0  30FF               	movlw	255
  9445  0BF1  06B0               	xorwf	___ftadd@f1,f
  9446  0BF2  30FF               	movlw	255
  9447  0BF3  06B1               	xorwf	___ftadd@f1+1,f
  9448  0BF4  30FF               	movlw	255
  9449  0BF5  06B2               	xorwf	___ftadd@f1+2,f
  9450  0BF6  3001               	movlw	1
  9451  0BF7  07B0               	addwf	___ftadd@f1,f
  9452  0BF8  3000               	movlw	0
  9453  0BF9  1803               	skipnc
  9454  0BFA  3001               	movlw	1
  9455  0BFB  07B1               	addwf	___ftadd@f1+1,f
  9456  0BFC  3000               	movlw	0
  9457  0BFD  1803               	skipnc
  9458  0BFE  3001               	movlw	1
  9459  0BFF  07B2               	addwf	___ftadd@f1+2,f
  9460  0C00                     l2431:	
  9461  0C00  1F3A               	btfss	___ftadd@sign,6
  9462  0C01  2C12               	goto	l2435
  9463  0C02  30FF               	movlw	255
  9464  0C03  06B3               	xorwf	___ftadd@f2,f
  9465  0C04  30FF               	movlw	255
  9466  0C05  06B4               	xorwf	___ftadd@f2+1,f
  9467  0C06  30FF               	movlw	255
  9468  0C07  06B5               	xorwf	___ftadd@f2+2,f
  9469  0C08  3001               	movlw	1
  9470  0C09  07B3               	addwf	___ftadd@f2,f
  9471  0C0A  3000               	movlw	0
  9472  0C0B  1803               	skipnc
  9473  0C0C  3001               	movlw	1
  9474  0C0D  07B4               	addwf	___ftadd@f2+1,f
  9475  0C0E  3000               	movlw	0
  9476  0C0F  1803               	skipnc
  9477  0C10  3001               	movlw	1
  9478  0C11  07B5               	addwf	___ftadd@f2+2,f
  9479  0C12                     l2435:	
  9480  0C12  01BA               	clrf	___ftadd@sign
  9481  0C13  0830               	movf	___ftadd@f1,w
  9482  0C14  07B3               	addwf	___ftadd@f2,f
  9483  0C15  0831               	movf	___ftadd@f1+1,w
  9484  0C16  3DB4               	addwfc	___ftadd@f2+1,f
  9485  0C17  0832               	movf	___ftadd@f1+2,w
  9486  0C18  3DB5               	addwfc	___ftadd@f2+2,f
  9487  0C19  1FB5               	btfss	___ftadd@f2+2,7
  9488  0C1A  2C2D               	goto	l2445
  9489  0C1B  30FF               	movlw	255
  9490  0C1C  06B3               	xorwf	___ftadd@f2,f
  9491  0C1D  30FF               	movlw	255
  9492  0C1E  06B4               	xorwf	___ftadd@f2+1,f
  9493  0C1F  30FF               	movlw	255
  9494  0C20  06B5               	xorwf	___ftadd@f2+2,f
  9495  0C21  3001               	movlw	1
  9496  0C22  07B3               	addwf	___ftadd@f2,f
  9497  0C23  3000               	movlw	0
  9498  0C24  1803               	skipnc
  9499  0C25  3001               	movlw	1
  9500  0C26  07B4               	addwf	___ftadd@f2+1,f
  9501  0C27  3000               	movlw	0
  9502  0C28  1803               	skipnc
  9503  0C29  3001               	movlw	1
  9504  0C2A  07B5               	addwf	___ftadd@f2+2,f
  9505  0C2B  01BA               	clrf	___ftadd@sign
  9506  0C2C  0ABA               	incf	___ftadd@sign,f
  9507  0C2D                     l2445:	
  9508  0C2D  0833               	movf	___ftadd@f2,w
  9509  0C2E  00F0               	movwf	___ftpack@arg
  9510  0C2F  0834               	movf	___ftadd@f2+1,w
  9511  0C30  00F1               	movwf	___ftpack@arg+1
  9512  0C31  0835               	movf	___ftadd@f2+2,w
  9513  0C32  00F2               	movwf	___ftpack@arg+2
  9514  0C33  083C               	movf	___ftadd@exp1,w
  9515  0C34  00B6               	movwf	??___ftadd
  9516  0C35  0836               	movf	??___ftadd,w
  9517  0C36  00F3               	movwf	___ftpack@exp
  9518  0C37  083A               	movf	___ftadd@sign,w
  9519  0C38  00B7               	movwf	??___ftadd+1
  9520  0C39  0837               	movf	??___ftadd+1,w
  9521  0C3A  00F4               	movwf	___ftpack@sign
  9522  0C3B  3195  25EF         	fcall	___ftpack
  9523  0C3D  0870               	movf	?___ftpack,w
  9524  0C3E  0020               	movlb	0	; select bank0
  9525  0C3F  00B0               	movwf	?___ftadd
  9526  0C40  0871               	movf	?___ftpack+1,w
  9527  0C41  00B1               	movwf	?___ftadd+1
  9528  0C42  0872               	movf	?___ftpack+2,w
  9529  0C43  00B2               	movwf	?___ftadd+2
  9530  0C44  0008               	return
  9531  0C45                     __end_of___ftadd:	
  9532                           
  9533                           	psect	text8
  9534  0D83                     __ptext8:	
  9535 ;; *************** function _readVAnalog *****************
  9536 ;; Defined at:
  9537 ;;		line 103 in file "adc.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  channel         2    6[BANK0 ] unsigned int 
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;  value           2   11[COMMON] int 
  9542 ;;  analog_chann    2    9[COMMON] unsigned int 
  9543 ;; Return value:  Size  Location     Type
  9544 ;;                  2    6[BANK0 ] int 
  9545 ;; Registers used:
  9546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 0/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9552 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;      Totals:         4      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;Total ram usage:       24 bytes
  9557 ;; Hardware stack levels used:    1
  9558 ;; Hardware stack levels required when called:    1
  9559 ;; This function calls:
  9560 ;;		_ADCRead
  9561 ;;		___aldiv
  9562 ;;		___wmul
  9563 ;; This function is called by:
  9564 ;;		_main
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           
  9569                           ;psect for function _readVAnalog
  9570  0D83                     _readVAnalog:	
  9571                           
  9572                           ;adc.c: 105: int16_t value;
  9573                           ;adc.c: 107: uint16_t analog_channel = Vchannels[channel];
  9574                           
  9575                           ;incstack = 0
  9576                           ; Regs used in _readVAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9577  0D83  0020               	movlb	0	; select bank0
  9578  0D84  3526               	lslf	readVAnalog@channel,w
  9579  0D85  3E48               	addlw	(low (_Vchannels| (0+256)))& (0+255)
  9580  0D86  0086               	movwf	6
  9581  0D87  3001               	movlw	1	; select bank2/3
  9582  0D88  0087               	movwf	7
  9583  0D89  3F40               	moviw [0]fsr1
  9584  0D8A  00F9               	movwf	readVAnalog@analog_channel
  9585  0D8B  3F41               	moviw [1]fsr1
  9586  0D8C  00FA               	movwf	readVAnalog@analog_channel+1
  9587                           
  9588                           ;adc.c: 109: value = ADCRead(analog_channel);
  9589  0D8D  0879               	movf	readVAnalog@analog_channel,w
  9590  0D8E  3180  2004  318D   	fcall	_ADCRead
  9591  0D91  0871               	movf	?_ADCRead+1,w
  9592  0D92  00FC               	movwf	readVAnalog@value+1
  9593  0D93  0870               	movf	?_ADCRead,w
  9594  0D94  00FB               	movwf	readVAnalog@value
  9595                           
  9596                           ;adc.c: 111: Vtotals[channel] = Vtotals[channel]-Vsamples[channel][VsampleIndex];
  9597  0D95  0020               	movlb	0	; select bank0
  9598  0D96  0826               	movf	readVAnalog@channel,w
  9599  0D97  00A8               	movwf	??_readVAnalog
  9600  0D98  3001               	movlw	1
  9601  0D99                     u3375:	
  9602  0D99  35A8               	lslf	??_readVAnalog,f
  9603  0D9A  3EFF               	addlw	-1
  9604  0D9B  1D03               	skipz
  9605  0D9C  2D99               	goto	u3375
  9606  0D9D  3528               	lslf	??_readVAnalog,w
  9607  0D9E  3E20               	addlw	(low (_Vtotals| (0+256)))& (0+255)
  9608  0D9F  0086               	movwf	6
  9609  0DA0  3001               	movlw	1	; select bank2/3
  9610  0DA1  0087               	movwf	7
  9611  0DA2  3F40               	moviw [0]fsr1
  9612  0DA3  00A9               	movwf	??_readVAnalog+1
  9613  0DA4  3F41               	moviw [1]fsr1
  9614  0DA5  00AA               	movwf	??_readVAnalog+2
  9615  0DA6  3F42               	moviw [2]fsr1
  9616  0DA7  00AB               	movwf	??_readVAnalog+3
  9617  0DA8  3F43               	moviw [3]fsr1
  9618  0DA9  00AC               	movwf	??_readVAnalog+4
  9619  0DAA  0867               	movf	_VsampleIndex+1,w
  9620  0DAB  00AE               	movwf	??_readVAnalog+6
  9621  0DAC  0866               	movf	_VsampleIndex,w
  9622  0DAD  00AD               	movwf	??_readVAnalog+5
  9623  0DAE  35AD               	lslf	??_readVAnalog+5,f
  9624  0DAF  0DAE               	rlf	??_readVAnalog+6,f
  9625  0DB0  0827               	movf	readVAnalog@channel+1,w
  9626  0DB1  00F1               	movwf	___wmul@multiplier+1
  9627  0DB2  0826               	movf	readVAnalog@channel,w
  9628  0DB3  00F0               	movwf	___wmul@multiplier
  9629  0DB4  301E               	movlw	30
  9630  0DB5  00F2               	movwf	___wmul@multiplicand
  9631  0DB6  3000               	movlw	0
  9632  0DB7  00F3               	movwf	___wmul@multiplicand+1
  9633  0DB8  3191  2187  318D   	fcall	___wmul
  9634  0DBB  3078               	movlw	120
  9635  0DBC  0020               	movlb	0	; select bank0
  9636  0DBD  00AF               	movwf	??_readVAnalog+7
  9637  0DBE  3023               	movlw	35
  9638  0DBF  00B0               	movwf	??_readVAnalog+8
  9639  0DC0  0870               	movf	?___wmul,w
  9640  0DC1  072F               	addwf	??_readVAnalog+7,w
  9641  0DC2  00B1               	movwf	??_readVAnalog+9
  9642  0DC3  0871               	movf	?___wmul+1,w
  9643  0DC4  3D30               	addwfc	??_readVAnalog+8,w
  9644  0DC5  00B2               	movwf	??_readVAnalog+10
  9645  0DC6  082D               	movf	??_readVAnalog+5,w
  9646  0DC7  0731               	addwf	??_readVAnalog+9,w
  9647  0DC8  0086               	movwf	6
  9648  0DC9  082E               	movf	??_readVAnalog+6,w
  9649  0DCA  3D32               	addwfc	??_readVAnalog+10,w
  9650  0DCB  0087               	movwf	7
  9651  0DCC  3F40               	moviw [0]fsr1
  9652  0DCD  00B3               	movwf	??_readVAnalog+11
  9653  0DCE  3F41               	moviw [1]fsr1
  9654  0DCF  00B4               	movwf	??_readVAnalog+12
  9655  0DD0  0833               	movf	??_readVAnalog+11,w
  9656  0DD1  00B5               	movwf	??_readVAnalog+13
  9657  0DD2  0834               	movf	??_readVAnalog+12,w
  9658  0DD3  00B6               	movwf	??_readVAnalog+14
  9659  0DD4  3000               	movlw	0
  9660  0DD5  1BB6               	btfsc	??_readVAnalog+14,7
  9661  0DD6  30FF               	movlw	255
  9662  0DD7  00B7               	movwf	??_readVAnalog+15
  9663  0DD8  00B8               	movwf	??_readVAnalog+16
  9664  0DD9  09B5               	comf	??_readVAnalog+13,f
  9665  0DDA  09B6               	comf	??_readVAnalog+14,f
  9666  0DDB  09B7               	comf	??_readVAnalog+15,f
  9667  0DDC  09B8               	comf	??_readVAnalog+16,f
  9668  0DDD  0AB5               	incf	??_readVAnalog+13,f
  9669  0DDE  1903               	skipnz
  9670  0DDF  0AB6               	incf	??_readVAnalog+14,f
  9671  0DE0  1903               	skipnz
  9672  0DE1  0AB7               	incf	??_readVAnalog+15,f
  9673  0DE2  1903               	skipnz
  9674  0DE3  0AB8               	incf	??_readVAnalog+16,f
  9675  0DE4  0835               	movf	??_readVAnalog+13,w
  9676  0DE5  07A9               	addwf	??_readVAnalog+1,f
  9677  0DE6  0836               	movf	??_readVAnalog+14,w
  9678  0DE7  3DAA               	addwfc	??_readVAnalog+2,f
  9679  0DE8  0837               	movf	??_readVAnalog+15,w
  9680  0DE9  3DAB               	addwfc	??_readVAnalog+3,f
  9681  0DEA  0838               	movf	??_readVAnalog+16,w
  9682  0DEB  3DAC               	addwfc	??_readVAnalog+4,f
  9683  0DEC  0826               	movf	readVAnalog@channel,w
  9684  0DED  00B9               	movwf	??_readVAnalog+17
  9685  0DEE  3001               	movlw	1
  9686  0DEF                     u3385:	
  9687  0DEF  35B9               	lslf	??_readVAnalog+17,f
  9688  0DF0  3EFF               	addlw	-1
  9689  0DF1  1D03               	skipz
  9690  0DF2  2DEF               	goto	u3385
  9691  0DF3  3539               	lslf	??_readVAnalog+17,w
  9692  0DF4  3E20               	addlw	(low (_Vtotals| (0+256)))& (0+255)
  9693  0DF5  0086               	movwf	6
  9694  0DF6  3001               	movlw	1	; select bank2/3
  9695  0DF7  0087               	movwf	7
  9696  0DF8  0829               	movf	??_readVAnalog+1,w
  9697  0DF9  3FC0               	movwi [0]fsr1
  9698  0DFA  082A               	movf	??_readVAnalog+2,w
  9699  0DFB  3FC1               	movwi [1]fsr1
  9700  0DFC  082B               	movf	??_readVAnalog+3,w
  9701  0DFD  3FC2               	movwi [2]fsr1
  9702  0DFE  082C               	movf	??_readVAnalog+4,w
  9703  0DFF  3FC3               	movwi [3]fsr1
  9704                           
  9705                           ;adc.c: 113: Vsamples[channel][VsampleIndex] = value;
  9706  0E00  0867               	movf	_VsampleIndex+1,w
  9707  0E01  00A9               	movwf	??_readVAnalog+1
  9708  0E02  0866               	movf	_VsampleIndex,w
  9709  0E03  00A8               	movwf	??_readVAnalog
  9710  0E04  35A8               	lslf	??_readVAnalog,f
  9711  0E05  0DA9               	rlf	??_readVAnalog+1,f
  9712  0E06  0827               	movf	readVAnalog@channel+1,w
  9713  0E07  00F1               	movwf	___wmul@multiplier+1
  9714  0E08  0826               	movf	readVAnalog@channel,w
  9715  0E09  00F0               	movwf	___wmul@multiplier
  9716  0E0A  301E               	movlw	30
  9717  0E0B  00F2               	movwf	___wmul@multiplicand
  9718  0E0C  3000               	movlw	0
  9719  0E0D  00F3               	movwf	___wmul@multiplicand+1
  9720  0E0E  3191  2187  318D   	fcall	___wmul
  9721  0E11  3078               	movlw	120
  9722  0E12  0020               	movlb	0	; select bank0
  9723  0E13  00AA               	movwf	??_readVAnalog+2
  9724  0E14  3023               	movlw	35
  9725  0E15  00AB               	movwf	??_readVAnalog+3
  9726  0E16  0870               	movf	?___wmul,w
  9727  0E17  072A               	addwf	??_readVAnalog+2,w
  9728  0E18  00AC               	movwf	??_readVAnalog+4
  9729  0E19  0871               	movf	?___wmul+1,w
  9730  0E1A  3D2B               	addwfc	??_readVAnalog+3,w
  9731  0E1B  00AD               	movwf	??_readVAnalog+5
  9732  0E1C  0828               	movf	??_readVAnalog,w
  9733  0E1D  072C               	addwf	??_readVAnalog+4,w
  9734  0E1E  0086               	movwf	6
  9735  0E1F  0829               	movf	??_readVAnalog+1,w
  9736  0E20  3D2D               	addwfc	??_readVAnalog+5,w
  9737  0E21  0087               	movwf	7
  9738  0E22  087B               	movf	readVAnalog@value,w
  9739  0E23  3FC0               	movwi [0]fsr1
  9740  0E24  087C               	movf	readVAnalog@value+1,w
  9741  0E25  3FC1               	movwi [1]fsr1
  9742                           
  9743                           ;adc.c: 115: Vtotals[channel] = Vtotals[channel]+Vsamples[channel][VsampleIndex];
  9744  0E26  0826               	movf	readVAnalog@channel,w
  9745  0E27  00A8               	movwf	??_readVAnalog
  9746  0E28  3001               	movlw	1
  9747  0E29                     u3395:	
  9748  0E29  35A8               	lslf	??_readVAnalog,f
  9749  0E2A  3EFF               	addlw	-1
  9750  0E2B  1D03               	skipz
  9751  0E2C  2E29               	goto	u3395
  9752  0E2D  3528               	lslf	??_readVAnalog,w
  9753  0E2E  3E20               	addlw	(low (_Vtotals| (0+256)))& (0+255)
  9754  0E2F  0086               	movwf	6
  9755  0E30  3001               	movlw	1	; select bank2/3
  9756  0E31  0087               	movwf	7
  9757  0E32  3F40               	moviw [0]fsr1
  9758  0E33  00A9               	movwf	??_readVAnalog+1
  9759  0E34  3F41               	moviw [1]fsr1
  9760  0E35  00AA               	movwf	??_readVAnalog+2
  9761  0E36  3F42               	moviw [2]fsr1
  9762  0E37  00AB               	movwf	??_readVAnalog+3
  9763  0E38  3F43               	moviw [3]fsr1
  9764  0E39  00AC               	movwf	??_readVAnalog+4
  9765  0E3A  0867               	movf	_VsampleIndex+1,w
  9766  0E3B  00AE               	movwf	??_readVAnalog+6
  9767  0E3C  0866               	movf	_VsampleIndex,w
  9768  0E3D  00AD               	movwf	??_readVAnalog+5
  9769  0E3E  35AD               	lslf	??_readVAnalog+5,f
  9770  0E3F  0DAE               	rlf	??_readVAnalog+6,f
  9771  0E40  0827               	movf	readVAnalog@channel+1,w
  9772  0E41  00F1               	movwf	___wmul@multiplier+1
  9773  0E42  0826               	movf	readVAnalog@channel,w
  9774  0E43  00F0               	movwf	___wmul@multiplier
  9775  0E44  301E               	movlw	30
  9776  0E45  00F2               	movwf	___wmul@multiplicand
  9777  0E46  3000               	movlw	0
  9778  0E47  00F3               	movwf	___wmul@multiplicand+1
  9779  0E48  3191  2187  318D   	fcall	___wmul
  9780  0E4B  3078               	movlw	120
  9781  0E4C  0020               	movlb	0	; select bank0
  9782  0E4D  00AF               	movwf	??_readVAnalog+7
  9783  0E4E  3023               	movlw	35
  9784  0E4F  00B0               	movwf	??_readVAnalog+8
  9785  0E50  0870               	movf	?___wmul,w
  9786  0E51  072F               	addwf	??_readVAnalog+7,w
  9787  0E52  00B1               	movwf	??_readVAnalog+9
  9788  0E53  0871               	movf	?___wmul+1,w
  9789  0E54  3D30               	addwfc	??_readVAnalog+8,w
  9790  0E55  00B2               	movwf	??_readVAnalog+10
  9791  0E56  082D               	movf	??_readVAnalog+5,w
  9792  0E57  0731               	addwf	??_readVAnalog+9,w
  9793  0E58  0086               	movwf	6
  9794  0E59  082E               	movf	??_readVAnalog+6,w
  9795  0E5A  3D32               	addwfc	??_readVAnalog+10,w
  9796  0E5B  0087               	movwf	7
  9797  0E5C  3F40               	moviw [0]fsr1
  9798  0E5D  00B3               	movwf	??_readVAnalog+11
  9799  0E5E  3F41               	moviw [1]fsr1
  9800  0E5F  00B4               	movwf	??_readVAnalog+12
  9801  0E60  0833               	movf	??_readVAnalog+11,w
  9802  0E61  00B5               	movwf	??_readVAnalog+13
  9803  0E62  0834               	movf	??_readVAnalog+12,w
  9804  0E63  00B6               	movwf	??_readVAnalog+14
  9805  0E64  3000               	movlw	0
  9806  0E65  1BB6               	btfsc	??_readVAnalog+14,7
  9807  0E66  30FF               	movlw	255
  9808  0E67  00B7               	movwf	??_readVAnalog+15
  9809  0E68  00B8               	movwf	??_readVAnalog+16
  9810  0E69  0835               	movf	??_readVAnalog+13,w
  9811  0E6A  07A9               	addwf	??_readVAnalog+1,f
  9812  0E6B  0836               	movf	??_readVAnalog+14,w
  9813  0E6C  3DAA               	addwfc	??_readVAnalog+2,f
  9814  0E6D  0837               	movf	??_readVAnalog+15,w
  9815  0E6E  3DAB               	addwfc	??_readVAnalog+3,f
  9816  0E6F  0838               	movf	??_readVAnalog+16,w
  9817  0E70  3DAC               	addwfc	??_readVAnalog+4,f
  9818  0E71  0826               	movf	readVAnalog@channel,w
  9819  0E72  00B9               	movwf	??_readVAnalog+17
  9820  0E73  3001               	movlw	1
  9821  0E74                     u3405:	
  9822  0E74  35B9               	lslf	??_readVAnalog+17,f
  9823  0E75  3EFF               	addlw	-1
  9824  0E76  1D03               	skipz
  9825  0E77  2E74               	goto	u3405
  9826  0E78  3539               	lslf	??_readVAnalog+17,w
  9827  0E79  3E20               	addlw	(low (_Vtotals| (0+256)))& (0+255)
  9828  0E7A  0086               	movwf	6
  9829  0E7B  3001               	movlw	1	; select bank2/3
  9830  0E7C  0087               	movwf	7
  9831  0E7D  0829               	movf	??_readVAnalog+1,w
  9832  0E7E  3FC0               	movwi [0]fsr1
  9833  0E7F  082A               	movf	??_readVAnalog+2,w
  9834  0E80  3FC1               	movwi [1]fsr1
  9835  0E81  082B               	movf	??_readVAnalog+3,w
  9836  0E82  3FC2               	movwi [2]fsr1
  9837  0E83  082C               	movf	??_readVAnalog+4,w
  9838  0E84  3FC3               	movwi [3]fsr1
  9839                           
  9840                           ;adc.c: 117: if(channel>=(4-1))
  9841  0E85  3000               	movlw	0
  9842  0E86  0227               	subwf	readVAnalog@channel+1,w
  9843  0E87  3003               	movlw	3
  9844  0E88  1903               	skipnz
  9845  0E89  0226               	subwf	readVAnalog@channel,w
  9846  0E8A  1C03               	skipc
  9847  0E8B  2E99               	goto	l2993
  9848                           
  9849                           ;adc.c: 118: {
  9850                           ;adc.c: 119: VsampleIndex+=1;
  9851  0E8C  3001               	movlw	1
  9852  0E8D  07E6               	addwf	_VsampleIndex,f
  9853  0E8E  3000               	movlw	0
  9854  0E8F  3DE7               	addwfc	_VsampleIndex+1,f
  9855                           
  9856                           ;adc.c: 120: if(VsampleIndex >= 15)VsampleIndex = 0;
  9857  0E90  3000               	movlw	0
  9858  0E91  0267               	subwf	_VsampleIndex+1,w
  9859  0E92  300F               	movlw	15
  9860  0E93  1903               	skipnz
  9861  0E94  0266               	subwf	_VsampleIndex,w
  9862  0E95  1C03               	skipc
  9863  0E96  2E99               	goto	l2993
  9864  0E97  01E6               	clrf	_VsampleIndex
  9865  0E98  01E7               	clrf	_VsampleIndex+1
  9866  0E99                     l2993:	
  9867                           
  9868                           ;adc.c: 121: }
  9869                           ;adc.c: 123: value = Vtotals[channel]/15;
  9870  0E99  3000               	movlw	0
  9871  0E9A  00F3               	movwf	___aldiv@divisor+3
  9872  0E9B  3000               	movlw	0
  9873  0E9C  00F2               	movwf	___aldiv@divisor+2
  9874  0E9D  3000               	movlw	0
  9875  0E9E  00F1               	movwf	___aldiv@divisor+1
  9876  0E9F  300F               	movlw	15
  9877  0EA0  00F0               	movwf	___aldiv@divisor
  9878  0EA1  0826               	movf	readVAnalog@channel,w
  9879  0EA2  00A8               	movwf	??_readVAnalog
  9880  0EA3  3001               	movlw	1
  9881  0EA4                     u3435:	
  9882  0EA4  35A8               	lslf	??_readVAnalog,f
  9883  0EA5  3EFF               	addlw	-1
  9884  0EA6  1D03               	skipz
  9885  0EA7  2EA4               	goto	u3435
  9886  0EA8  3528               	lslf	??_readVAnalog,w
  9887  0EA9  3E20               	addlw	(low (_Vtotals| (0+256)))& (0+255)
  9888  0EAA  0086               	movwf	6
  9889  0EAB  3001               	movlw	1	; select bank2/3
  9890  0EAC  0087               	movwf	7
  9891  0EAD  3F40               	moviw [0]fsr1
  9892  0EAE  00F4               	movwf	___aldiv@dividend
  9893  0EAF  3F41               	moviw [1]fsr1
  9894  0EB0  00F5               	movwf	___aldiv@dividend+1
  9895  0EB1  3F42               	moviw [2]fsr1
  9896  0EB2  00F6               	movwf	___aldiv@dividend+2
  9897  0EB3  3F43               	moviw [3]fsr1
  9898  0EB4  00F7               	movwf	___aldiv@dividend+3
  9899  0EB5  3196  26D5         	fcall	___aldiv
  9900  0EB7  0871               	movf	?___aldiv+1,w
  9901  0EB8  00FC               	movwf	readVAnalog@value+1
  9902  0EB9  0870               	movf	?___aldiv,w
  9903  0EBA  00FB               	movwf	readVAnalog@value
  9904                           
  9905                           ;adc.c: 125: return value;
  9906  0EBB  087C               	movf	readVAnalog@value+1,w
  9907  0EBC  0020               	movlb	0	; select bank0
  9908  0EBD  00A7               	movwf	?_readVAnalog+1
  9909  0EBE  087B               	movf	readVAnalog@value,w
  9910  0EBF  00A6               	movwf	?_readVAnalog
  9911  0EC0  0008               	return
  9912  0EC1                     __end_of_readVAnalog:	
  9913                           
  9914                           	psect	text9
  9915  0C45                     __ptext9:	
  9916 ;; *************** function _readIAnalog *****************
  9917 ;; Defined at:
  9918 ;;		line 77 in file "adc.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;  channel         2    6[BANK0 ] unsigned int 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  value           2   11[COMMON] int 
  9923 ;;  analog_chann    2    9[COMMON] unsigned int 
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  2    6[BANK0 ] int 
  9926 ;; Registers used:
  9927 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9928 ;; Tracked objects:
  9929 ;;		On entry : 0/0
  9930 ;;		On exit  : 0/0
  9931 ;;		Unchanged: 0/0
  9932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9933 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9936 ;;      Totals:         4      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9937 ;;Total ram usage:       24 bytes
  9938 ;; Hardware stack levels used:    1
  9939 ;; Hardware stack levels required when called:    1
  9940 ;; This function calls:
  9941 ;;		_ADCRead
  9942 ;;		___aldiv
  9943 ;;		___wmul
  9944 ;; This function is called by:
  9945 ;;		_main
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949                           
  9950                           ;psect for function _readIAnalog
  9951  0C45                     _readIAnalog:	
  9952                           
  9953                           ;adc.c: 79: int16_t value;
  9954                           ;adc.c: 81: uint16_t analog_channel = Ichannels[channel];
  9955                           
  9956                           ;incstack = 0
  9957                           ; Regs used in _readIAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9958  0C45  0020               	movlb	0	; select bank0
  9959  0C46  3526               	lslf	readIAnalog@channel,w
  9960  0C47  3E50               	addlw	(low (_Ichannels| (0+256)))& (0+255)
  9961  0C48  0086               	movwf	6
  9962  0C49  3001               	movlw	1	; select bank2/3
  9963  0C4A  0087               	movwf	7
  9964  0C4B  3F40               	moviw [0]fsr1
  9965  0C4C  00F9               	movwf	readIAnalog@analog_channel
  9966  0C4D  3F41               	moviw [1]fsr1
  9967  0C4E  00FA               	movwf	readIAnalog@analog_channel+1
  9968                           
  9969                           ;adc.c: 83: value = ADCRead(analog_channel);
  9970  0C4F  0879               	movf	readIAnalog@analog_channel,w
  9971  0C50  3180  2004  318C   	fcall	_ADCRead
  9972  0C53  0871               	movf	?_ADCRead+1,w
  9973  0C54  00FC               	movwf	readIAnalog@value+1
  9974  0C55  0870               	movf	?_ADCRead,w
  9975  0C56  00FB               	movwf	readIAnalog@value
  9976                           
  9977                           ;adc.c: 85: Itotals[channel] = Itotals[channel]-Isamples[channel][IsampleIndex];
  9978  0C57  0020               	movlb	0	; select bank0
  9979  0C58  0826               	movf	readIAnalog@channel,w
  9980  0C59  00A8               	movwf	??_readIAnalog
  9981  0C5A  3001               	movlw	1
  9982  0C5B                     u3305:	
  9983  0C5B  35A8               	lslf	??_readIAnalog,f
  9984  0C5C  3EFF               	addlw	-1
  9985  0C5D  1D03               	skipz
  9986  0C5E  2C5B               	goto	u3305
  9987  0C5F  3528               	lslf	??_readIAnalog,w
  9988  0C60  3E30               	addlw	(low (_Itotals| (0+256)))& (0+255)
  9989  0C61  0086               	movwf	6
  9990  0C62  3001               	movlw	1	; select bank2/3
  9991  0C63  0087               	movwf	7
  9992  0C64  3F40               	moviw [0]fsr1
  9993  0C65  00A9               	movwf	??_readIAnalog+1
  9994  0C66  3F41               	moviw [1]fsr1
  9995  0C67  00AA               	movwf	??_readIAnalog+2
  9996  0C68  3F42               	moviw [2]fsr1
  9997  0C69  00AB               	movwf	??_readIAnalog+3
  9998  0C6A  3F43               	moviw [3]fsr1
  9999  0C6B  00AC               	movwf	??_readIAnalog+4
 10000  0C6C  0869               	movf	_IsampleIndex+1,w
 10001  0C6D  00AE               	movwf	??_readIAnalog+6
 10002  0C6E  0868               	movf	_IsampleIndex,w
 10003  0C6F  00AD               	movwf	??_readIAnalog+5
 10004  0C70  35AD               	lslf	??_readIAnalog+5,f
 10005  0C71  0DAE               	rlf	??_readIAnalog+6,f
 10006  0C72  0827               	movf	readIAnalog@channel+1,w
 10007  0C73  00F1               	movwf	___wmul@multiplier+1
 10008  0C74  0826               	movf	readIAnalog@channel,w
 10009  0C75  00F0               	movwf	___wmul@multiplier
 10010  0C76  3064               	movlw	100
 10011  0C77  00F2               	movwf	___wmul@multiplicand
 10012  0C78  3000               	movlw	0
 10013  0C79  00F3               	movwf	___wmul@multiplicand+1
 10014  0C7A  3191  2187  318C   	fcall	___wmul
 10015  0C7D  30E8               	movlw	232
 10016  0C7E  0020               	movlb	0	; select bank0
 10017  0C7F  00AF               	movwf	??_readIAnalog+7
 10018  0C80  3021               	movlw	33
 10019  0C81  00B0               	movwf	??_readIAnalog+8
 10020  0C82  0870               	movf	?___wmul,w
 10021  0C83  072F               	addwf	??_readIAnalog+7,w
 10022  0C84  00B1               	movwf	??_readIAnalog+9
 10023  0C85  0871               	movf	?___wmul+1,w
 10024  0C86  3D30               	addwfc	??_readIAnalog+8,w
 10025  0C87  00B2               	movwf	??_readIAnalog+10
 10026  0C88  082D               	movf	??_readIAnalog+5,w
 10027  0C89  0731               	addwf	??_readIAnalog+9,w
 10028  0C8A  0086               	movwf	6
 10029  0C8B  082E               	movf	??_readIAnalog+6,w
 10030  0C8C  3D32               	addwfc	??_readIAnalog+10,w
 10031  0C8D  0087               	movwf	7
 10032  0C8E  3F40               	moviw [0]fsr1
 10033  0C8F  00B3               	movwf	??_readIAnalog+11
 10034  0C90  3F41               	moviw [1]fsr1
 10035  0C91  00B4               	movwf	??_readIAnalog+12
 10036  0C92  0833               	movf	??_readIAnalog+11,w
 10037  0C93  00B5               	movwf	??_readIAnalog+13
 10038  0C94  0834               	movf	??_readIAnalog+12,w
 10039  0C95  00B6               	movwf	??_readIAnalog+14
 10040  0C96  3000               	movlw	0
 10041  0C97  1BB6               	btfsc	??_readIAnalog+14,7
 10042  0C98  30FF               	movlw	255
 10043  0C99  00B7               	movwf	??_readIAnalog+15
 10044  0C9A  00B8               	movwf	??_readIAnalog+16
 10045  0C9B  09B5               	comf	??_readIAnalog+13,f
 10046  0C9C  09B6               	comf	??_readIAnalog+14,f
 10047  0C9D  09B7               	comf	??_readIAnalog+15,f
 10048  0C9E  09B8               	comf	??_readIAnalog+16,f
 10049  0C9F  0AB5               	incf	??_readIAnalog+13,f
 10050  0CA0  1903               	skipnz
 10051  0CA1  0AB6               	incf	??_readIAnalog+14,f
 10052  0CA2  1903               	skipnz
 10053  0CA3  0AB7               	incf	??_readIAnalog+15,f
 10054  0CA4  1903               	skipnz
 10055  0CA5  0AB8               	incf	??_readIAnalog+16,f
 10056  0CA6  0835               	movf	??_readIAnalog+13,w
 10057  0CA7  07A9               	addwf	??_readIAnalog+1,f
 10058  0CA8  0836               	movf	??_readIAnalog+14,w
 10059  0CA9  3DAA               	addwfc	??_readIAnalog+2,f
 10060  0CAA  0837               	movf	??_readIAnalog+15,w
 10061  0CAB  3DAB               	addwfc	??_readIAnalog+3,f
 10062  0CAC  0838               	movf	??_readIAnalog+16,w
 10063  0CAD  3DAC               	addwfc	??_readIAnalog+4,f
 10064  0CAE  0826               	movf	readIAnalog@channel,w
 10065  0CAF  00B9               	movwf	??_readIAnalog+17
 10066  0CB0  3001               	movlw	1
 10067  0CB1                     u3315:	
 10068  0CB1  35B9               	lslf	??_readIAnalog+17,f
 10069  0CB2  3EFF               	addlw	-1
 10070  0CB3  1D03               	skipz
 10071  0CB4  2CB1               	goto	u3315
 10072  0CB5  3539               	lslf	??_readIAnalog+17,w
 10073  0CB6  3E30               	addlw	(low (_Itotals| (0+256)))& (0+255)
 10074  0CB7  0086               	movwf	6
 10075  0CB8  3001               	movlw	1	; select bank2/3
 10076  0CB9  0087               	movwf	7
 10077  0CBA  0829               	movf	??_readIAnalog+1,w
 10078  0CBB  3FC0               	movwi [0]fsr1
 10079  0CBC  082A               	movf	??_readIAnalog+2,w
 10080  0CBD  3FC1               	movwi [1]fsr1
 10081  0CBE  082B               	movf	??_readIAnalog+3,w
 10082  0CBF  3FC2               	movwi [2]fsr1
 10083  0CC0  082C               	movf	??_readIAnalog+4,w
 10084  0CC1  3FC3               	movwi [3]fsr1
 10085                           
 10086                           ;adc.c: 87: Isamples[channel][IsampleIndex] = value;
 10087  0CC2  0869               	movf	_IsampleIndex+1,w
 10088  0CC3  00A9               	movwf	??_readIAnalog+1
 10089  0CC4  0868               	movf	_IsampleIndex,w
 10090  0CC5  00A8               	movwf	??_readIAnalog
 10091  0CC6  35A8               	lslf	??_readIAnalog,f
 10092  0CC7  0DA9               	rlf	??_readIAnalog+1,f
 10093  0CC8  0827               	movf	readIAnalog@channel+1,w
 10094  0CC9  00F1               	movwf	___wmul@multiplier+1
 10095  0CCA  0826               	movf	readIAnalog@channel,w
 10096  0CCB  00F0               	movwf	___wmul@multiplier
 10097  0CCC  3064               	movlw	100
 10098  0CCD  00F2               	movwf	___wmul@multiplicand
 10099  0CCE  3000               	movlw	0
 10100  0CCF  00F3               	movwf	___wmul@multiplicand+1
 10101  0CD0  3191  2187  318C   	fcall	___wmul
 10102  0CD3  30E8               	movlw	232
 10103  0CD4  0020               	movlb	0	; select bank0
 10104  0CD5  00AA               	movwf	??_readIAnalog+2
 10105  0CD6  3021               	movlw	33
 10106  0CD7  00AB               	movwf	??_readIAnalog+3
 10107  0CD8  0870               	movf	?___wmul,w
 10108  0CD9  072A               	addwf	??_readIAnalog+2,w
 10109  0CDA  00AC               	movwf	??_readIAnalog+4
 10110  0CDB  0871               	movf	?___wmul+1,w
 10111  0CDC  3D2B               	addwfc	??_readIAnalog+3,w
 10112  0CDD  00AD               	movwf	??_readIAnalog+5
 10113  0CDE  0828               	movf	??_readIAnalog,w
 10114  0CDF  072C               	addwf	??_readIAnalog+4,w
 10115  0CE0  0086               	movwf	6
 10116  0CE1  0829               	movf	??_readIAnalog+1,w
 10117  0CE2  3D2D               	addwfc	??_readIAnalog+5,w
 10118  0CE3  0087               	movwf	7
 10119  0CE4  087B               	movf	readIAnalog@value,w
 10120  0CE5  3FC0               	movwi [0]fsr1
 10121  0CE6  087C               	movf	readIAnalog@value+1,w
 10122  0CE7  3FC1               	movwi [1]fsr1
 10123                           
 10124                           ;adc.c: 89: Itotals[channel] = Itotals[channel]+Isamples[channel][IsampleIndex];
 10125  0CE8  0826               	movf	readIAnalog@channel,w
 10126  0CE9  00A8               	movwf	??_readIAnalog
 10127  0CEA  3001               	movlw	1
 10128  0CEB                     u3325:	
 10129  0CEB  35A8               	lslf	??_readIAnalog,f
 10130  0CEC  3EFF               	addlw	-1
 10131  0CED  1D03               	skipz
 10132  0CEE  2CEB               	goto	u3325
 10133  0CEF  3528               	lslf	??_readIAnalog,w
 10134  0CF0  3E30               	addlw	(low (_Itotals| (0+256)))& (0+255)
 10135  0CF1  0086               	movwf	6
 10136  0CF2  3001               	movlw	1	; select bank2/3
 10137  0CF3  0087               	movwf	7
 10138  0CF4  3F40               	moviw [0]fsr1
 10139  0CF5  00A9               	movwf	??_readIAnalog+1
 10140  0CF6  3F41               	moviw [1]fsr1
 10141  0CF7  00AA               	movwf	??_readIAnalog+2
 10142  0CF8  3F42               	moviw [2]fsr1
 10143  0CF9  00AB               	movwf	??_readIAnalog+3
 10144  0CFA  3F43               	moviw [3]fsr1
 10145  0CFB  00AC               	movwf	??_readIAnalog+4
 10146  0CFC  0869               	movf	_IsampleIndex+1,w
 10147  0CFD  00AE               	movwf	??_readIAnalog+6
 10148  0CFE  0868               	movf	_IsampleIndex,w
 10149  0CFF  00AD               	movwf	??_readIAnalog+5
 10150  0D00  35AD               	lslf	??_readIAnalog+5,f
 10151  0D01  0DAE               	rlf	??_readIAnalog+6,f
 10152  0D02  0827               	movf	readIAnalog@channel+1,w
 10153  0D03  00F1               	movwf	___wmul@multiplier+1
 10154  0D04  0826               	movf	readIAnalog@channel,w
 10155  0D05  00F0               	movwf	___wmul@multiplier
 10156  0D06  3064               	movlw	100
 10157  0D07  00F2               	movwf	___wmul@multiplicand
 10158  0D08  3000               	movlw	0
 10159  0D09  00F3               	movwf	___wmul@multiplicand+1
 10160  0D0A  3191  2187  318C   	fcall	___wmul
 10161  0D0D  30E8               	movlw	232
 10162  0D0E  0020               	movlb	0	; select bank0
 10163  0D0F  00AF               	movwf	??_readIAnalog+7
 10164  0D10  3021               	movlw	33
 10165  0D11  00B0               	movwf	??_readIAnalog+8
 10166  0D12  0870               	movf	?___wmul,w
 10167  0D13  072F               	addwf	??_readIAnalog+7,w
 10168  0D14  00B1               	movwf	??_readIAnalog+9
 10169  0D15  0871               	movf	?___wmul+1,w
 10170  0D16  3D30               	addwfc	??_readIAnalog+8,w
 10171  0D17  00B2               	movwf	??_readIAnalog+10
 10172  0D18  082D               	movf	??_readIAnalog+5,w
 10173  0D19  0731               	addwf	??_readIAnalog+9,w
 10174  0D1A  0086               	movwf	6
 10175  0D1B  082E               	movf	??_readIAnalog+6,w
 10176  0D1C  3D32               	addwfc	??_readIAnalog+10,w
 10177  0D1D  0087               	movwf	7
 10178  0D1E  3F40               	moviw [0]fsr1
 10179  0D1F  00B3               	movwf	??_readIAnalog+11
 10180  0D20  3F41               	moviw [1]fsr1
 10181  0D21  00B4               	movwf	??_readIAnalog+12
 10182  0D22  0833               	movf	??_readIAnalog+11,w
 10183  0D23  00B5               	movwf	??_readIAnalog+13
 10184  0D24  0834               	movf	??_readIAnalog+12,w
 10185  0D25  00B6               	movwf	??_readIAnalog+14
 10186  0D26  3000               	movlw	0
 10187  0D27  1BB6               	btfsc	??_readIAnalog+14,7
 10188  0D28  30FF               	movlw	255
 10189  0D29  00B7               	movwf	??_readIAnalog+15
 10190  0D2A  00B8               	movwf	??_readIAnalog+16
 10191  0D2B  0835               	movf	??_readIAnalog+13,w
 10192  0D2C  07A9               	addwf	??_readIAnalog+1,f
 10193  0D2D  0836               	movf	??_readIAnalog+14,w
 10194  0D2E  3DAA               	addwfc	??_readIAnalog+2,f
 10195  0D2F  0837               	movf	??_readIAnalog+15,w
 10196  0D30  3DAB               	addwfc	??_readIAnalog+3,f
 10197  0D31  0838               	movf	??_readIAnalog+16,w
 10198  0D32  3DAC               	addwfc	??_readIAnalog+4,f
 10199  0D33  0826               	movf	readIAnalog@channel,w
 10200  0D34  00B9               	movwf	??_readIAnalog+17
 10201  0D35  3001               	movlw	1
 10202  0D36                     u3335:	
 10203  0D36  35B9               	lslf	??_readIAnalog+17,f
 10204  0D37  3EFF               	addlw	-1
 10205  0D38  1D03               	skipz
 10206  0D39  2D36               	goto	u3335
 10207  0D3A  3539               	lslf	??_readIAnalog+17,w
 10208  0D3B  3E30               	addlw	(low (_Itotals| (0+256)))& (0+255)
 10209  0D3C  0086               	movwf	6
 10210  0D3D  3001               	movlw	1	; select bank2/3
 10211  0D3E  0087               	movwf	7
 10212  0D3F  0829               	movf	??_readIAnalog+1,w
 10213  0D40  3FC0               	movwi [0]fsr1
 10214  0D41  082A               	movf	??_readIAnalog+2,w
 10215  0D42  3FC1               	movwi [1]fsr1
 10216  0D43  082B               	movf	??_readIAnalog+3,w
 10217  0D44  3FC2               	movwi [2]fsr1
 10218  0D45  082C               	movf	??_readIAnalog+4,w
 10219  0D46  3FC3               	movwi [3]fsr1
 10220                           
 10221                           ;adc.c: 91: if(channel>=(4-1))
 10222  0D47  3000               	movlw	0
 10223  0D48  0227               	subwf	readIAnalog@channel+1,w
 10224  0D49  3003               	movlw	3
 10225  0D4A  1903               	skipnz
 10226  0D4B  0226               	subwf	readIAnalog@channel,w
 10227  0D4C  1C03               	skipc
 10228  0D4D  2D5B               	goto	l2973
 10229                           
 10230                           ;adc.c: 92: {
 10231                           ;adc.c: 93: IsampleIndex+=1;
 10232  0D4E  3001               	movlw	1
 10233  0D4F  07E8               	addwf	_IsampleIndex,f
 10234  0D50  3000               	movlw	0
 10235  0D51  3DE9               	addwfc	_IsampleIndex+1,f
 10236                           
 10237                           ;adc.c: 94: if(IsampleIndex >= 50)IsampleIndex = 0;
 10238  0D52  3000               	movlw	0
 10239  0D53  0269               	subwf	_IsampleIndex+1,w
 10240  0D54  3032               	movlw	50
 10241  0D55  1903               	skipnz
 10242  0D56  0268               	subwf	_IsampleIndex,w
 10243  0D57  1C03               	skipc
 10244  0D58  2D5B               	goto	l2973
 10245  0D59  01E8               	clrf	_IsampleIndex
 10246  0D5A  01E9               	clrf	_IsampleIndex+1
 10247  0D5B                     l2973:	
 10248                           
 10249                           ;adc.c: 95: }
 10250                           ;adc.c: 97: value = Itotals[channel]/50;
 10251  0D5B  3000               	movlw	0
 10252  0D5C  00F3               	movwf	___aldiv@divisor+3
 10253  0D5D  3000               	movlw	0
 10254  0D5E  00F2               	movwf	___aldiv@divisor+2
 10255  0D5F  3000               	movlw	0
 10256  0D60  00F1               	movwf	___aldiv@divisor+1
 10257  0D61  3032               	movlw	50
 10258  0D62  00F0               	movwf	___aldiv@divisor
 10259  0D63  0826               	movf	readIAnalog@channel,w
 10260  0D64  00A8               	movwf	??_readIAnalog
 10261  0D65  3001               	movlw	1
 10262  0D66                     u3365:	
 10263  0D66  35A8               	lslf	??_readIAnalog,f
 10264  0D67  3EFF               	addlw	-1
 10265  0D68  1D03               	skipz
 10266  0D69  2D66               	goto	u3365
 10267  0D6A  3528               	lslf	??_readIAnalog,w
 10268  0D6B  3E30               	addlw	(low (_Itotals| (0+256)))& (0+255)
 10269  0D6C  0086               	movwf	6
 10270  0D6D  3001               	movlw	1	; select bank2/3
 10271  0D6E  0087               	movwf	7
 10272  0D6F  3F40               	moviw [0]fsr1
 10273  0D70  00F4               	movwf	___aldiv@dividend
 10274  0D71  3F41               	moviw [1]fsr1
 10275  0D72  00F5               	movwf	___aldiv@dividend+1
 10276  0D73  3F42               	moviw [2]fsr1
 10277  0D74  00F6               	movwf	___aldiv@dividend+2
 10278  0D75  3F43               	moviw [3]fsr1
 10279  0D76  00F7               	movwf	___aldiv@dividend+3
 10280  0D77  3196  26D5         	fcall	___aldiv
 10281  0D79  0871               	movf	?___aldiv+1,w
 10282  0D7A  00FC               	movwf	readIAnalog@value+1
 10283  0D7B  0870               	movf	?___aldiv,w
 10284  0D7C  00FB               	movwf	readIAnalog@value
 10285                           
 10286                           ;adc.c: 99: return value;
 10287  0D7D  087C               	movf	readIAnalog@value+1,w
 10288  0D7E  0020               	movlb	0	; select bank0
 10289  0D7F  00A7               	movwf	?_readIAnalog+1
 10290  0D80  087B               	movf	readIAnalog@value,w
 10291  0D81  00A6               	movwf	?_readIAnalog
 10292  0D82  0008               	return
 10293  0D83                     __end_of_readIAnalog:	
 10294                           
 10295                           	psect	text10
 10296  16D5                     __ptext10:	
 10297 ;; *************** function ___aldiv *****************
 10298 ;; Defined at:
 10299 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;  divisor         4    0[COMMON] long 
 10302 ;;  dividend        4    4[COMMON] long 
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;  quotient        4    2[BANK0 ] long 
 10305 ;;  sign            1    1[BANK0 ] unsigned char 
 10306 ;;  counter         1    0[BANK0 ] unsigned char 
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  4    0[COMMON] long 
 10309 ;; Registers used:
 10310 ;;		wreg, status,2, status,0
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10316 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10317 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10319 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10320 ;;Total ram usage:       15 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; This function calls:
 10323 ;;		Nothing
 10324 ;; This function is called by:
 10325 ;;		_readIAnalog
 10326 ;;		_readVAnalog
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           
 10331                           ;psect for function ___aldiv
 10332  16D5                     ___aldiv:	
 10333                           
 10334                           ;incstack = 0
 10335                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10336  16D5  0020               	movlb	0	; select bank0
 10337  16D6  01A1               	clrf	___aldiv@sign
 10338  16D7  1FF3               	btfss	___aldiv@divisor+3,7
 10339  16D8  2EE6               	goto	l680
 10340  16D9  09F0               	comf	___aldiv@divisor,f
 10341  16DA  09F1               	comf	___aldiv@divisor+1,f
 10342  16DB  09F2               	comf	___aldiv@divisor+2,f
 10343  16DC  09F3               	comf	___aldiv@divisor+3,f
 10344  16DD  0AF0               	incf	___aldiv@divisor,f
 10345  16DE  1903               	skipnz
 10346  16DF  0AF1               	incf	___aldiv@divisor+1,f
 10347  16E0  1903               	skipnz
 10348  16E1  0AF2               	incf	___aldiv@divisor+2,f
 10349  16E2  1903               	skipnz
 10350  16E3  0AF3               	incf	___aldiv@divisor+3,f
 10351  16E4  01A1               	clrf	___aldiv@sign
 10352  16E5  0AA1               	incf	___aldiv@sign,f
 10353  16E6                     l680:	
 10354  16E6  1FF7               	btfss	___aldiv@dividend+3,7
 10355  16E7  2EF7               	goto	l2813
 10356  16E8  09F4               	comf	___aldiv@dividend,f
 10357  16E9  09F5               	comf	___aldiv@dividend+1,f
 10358  16EA  09F6               	comf	___aldiv@dividend+2,f
 10359  16EB  09F7               	comf	___aldiv@dividend+3,f
 10360  16EC  0AF4               	incf	___aldiv@dividend,f
 10361  16ED  1903               	skipnz
 10362  16EE  0AF5               	incf	___aldiv@dividend+1,f
 10363  16EF  1903               	skipnz
 10364  16F0  0AF6               	incf	___aldiv@dividend+2,f
 10365  16F1  1903               	skipnz
 10366  16F2  0AF7               	incf	___aldiv@dividend+3,f
 10367  16F3  3001               	movlw	1
 10368  16F4  00F8               	movwf	??___aldiv
 10369  16F5  0878               	movf	??___aldiv,w
 10370  16F6  06A1               	xorwf	___aldiv@sign,f
 10371  16F7                     l2813:	
 10372  16F7  3000               	movlw	0
 10373  16F8  00A5               	movwf	___aldiv@quotient+3
 10374  16F9  3000               	movlw	0
 10375  16FA  00A4               	movwf	___aldiv@quotient+2
 10376  16FB  3000               	movlw	0
 10377  16FC  00A3               	movwf	___aldiv@quotient+1
 10378  16FD  3000               	movlw	0
 10379  16FE  00A2               	movwf	___aldiv@quotient
 10380  16FF  0873               	movf	___aldiv@divisor+3,w
 10381  1700  0472               	iorwf	___aldiv@divisor+2,w
 10382  1701  0471               	iorwf	___aldiv@divisor+1,w
 10383  1702  0470               	iorwf	___aldiv@divisor,w
 10384  1703  1903               	skipnz
 10385  1704  2F40               	goto	l2835
 10386  1705  01A0               	clrf	___aldiv@counter
 10387  1706  0AA0               	incf	___aldiv@counter,f
 10388  1707                     l2821:	
 10389  1707  1BF3               	btfsc	___aldiv@divisor+3,7
 10390  1708  2F15               	goto	l2823
 10391  1709  3001               	movlw	1
 10392  170A                     u2985:	
 10393  170A  35F0               	lslf	___aldiv@divisor,f
 10394  170B  0DF1               	rlf	___aldiv@divisor+1,f
 10395  170C  0DF2               	rlf	___aldiv@divisor+2,f
 10396  170D  0DF3               	rlf	___aldiv@divisor+3,f
 10397  170E  0B89               	decfsz	9,f
 10398  170F  2F0A               	goto	u2985
 10399  1710  3001               	movlw	1
 10400  1711  00F8               	movwf	??___aldiv
 10401  1712  0878               	movf	??___aldiv,w
 10402  1713  07A0               	addwf	___aldiv@counter,f
 10403  1714  2F07               	goto	l2821
 10404  1715                     l2823:	
 10405  1715  3001               	movlw	1
 10406  1716                     u3005:	
 10407  1716  35A2               	lslf	___aldiv@quotient,f
 10408  1717  0DA3               	rlf	___aldiv@quotient+1,f
 10409  1718  0DA4               	rlf	___aldiv@quotient+2,f
 10410  1719  0DA5               	rlf	___aldiv@quotient+3,f
 10411  171A  0B89               	decfsz	9,f
 10412  171B  2F16               	goto	u3005
 10413  171C  0873               	movf	___aldiv@divisor+3,w
 10414  171D  0277               	subwf	___aldiv@dividend+3,w
 10415  171E  1D03               	skipz
 10416  171F  2F2A               	goto	u3015
 10417  1720  0872               	movf	___aldiv@divisor+2,w
 10418  1721  0276               	subwf	___aldiv@dividend+2,w
 10419  1722  1D03               	skipz
 10420  1723  2F2A               	goto	u3015
 10421  1724  0871               	movf	___aldiv@divisor+1,w
 10422  1725  0275               	subwf	___aldiv@dividend+1,w
 10423  1726  1D03               	skipz
 10424  1727  2F2A               	goto	u3015
 10425  1728  0870               	movf	___aldiv@divisor,w
 10426  1729  0274               	subwf	___aldiv@dividend,w
 10427  172A                     u3015:	
 10428  172A  1C03               	skipc
 10429  172B  2F35               	goto	l2831
 10430  172C  0870               	movf	___aldiv@divisor,w
 10431  172D  02F4               	subwf	___aldiv@dividend,f
 10432  172E  0871               	movf	___aldiv@divisor+1,w
 10433  172F  3BF5               	subwfb	___aldiv@dividend+1,f
 10434  1730  0872               	movf	___aldiv@divisor+2,w
 10435  1731  3BF6               	subwfb	___aldiv@dividend+2,f
 10436  1732  0873               	movf	___aldiv@divisor+3,w
 10437  1733  3BF7               	subwfb	___aldiv@dividend+3,f
 10438  1734  1422               	bsf	___aldiv@quotient,0
 10439  1735                     l2831:	
 10440  1735  3001               	movlw	1
 10441  1736                     u3025:	
 10442  1736  36F3               	lsrf	___aldiv@divisor+3,f
 10443  1737  0CF2               	rrf	___aldiv@divisor+2,f
 10444  1738  0CF1               	rrf	___aldiv@divisor+1,f
 10445  1739  0CF0               	rrf	___aldiv@divisor,f
 10446  173A  0B89               	decfsz	9,f
 10447  173B  2F36               	goto	u3025
 10448  173C  3001               	movlw	1
 10449  173D  02A0               	subwf	___aldiv@counter,f
 10450  173E  1D03               	btfss	3,2
 10451  173F  2F15               	goto	l2823
 10452  1740                     l2835:	
 10453  1740  0821               	movf	___aldiv@sign,w
 10454  1741  1903               	btfsc	3,2
 10455  1742  2F4E               	goto	l2839
 10456  1743  09A2               	comf	___aldiv@quotient,f
 10457  1744  09A3               	comf	___aldiv@quotient+1,f
 10458  1745  09A4               	comf	___aldiv@quotient+2,f
 10459  1746  09A5               	comf	___aldiv@quotient+3,f
 10460  1747  0AA2               	incf	___aldiv@quotient,f
 10461  1748  1903               	skipnz
 10462  1749  0AA3               	incf	___aldiv@quotient+1,f
 10463  174A  1903               	skipnz
 10464  174B  0AA4               	incf	___aldiv@quotient+2,f
 10465  174C  1903               	skipnz
 10466  174D  0AA5               	incf	___aldiv@quotient+3,f
 10467  174E                     l2839:	
 10468  174E  0825               	movf	___aldiv@quotient+3,w
 10469  174F  00F3               	movwf	?___aldiv+3
 10470  1750  0824               	movf	___aldiv@quotient+2,w
 10471  1751  00F2               	movwf	?___aldiv+2
 10472  1752  0823               	movf	___aldiv@quotient+1,w
 10473  1753  00F1               	movwf	?___aldiv+1
 10474  1754  0822               	movf	___aldiv@quotient,w
 10475  1755  00F0               	movwf	?___aldiv
 10476  1756  0008               	return
 10477  1757                     __end_of___aldiv:	
 10478                           
 10479                           	psect	text11
 10480  1653                     __ptext11:	
 10481 ;; *************** function _readButton *****************
 10482 ;; Defined at:
 10483 ;;		line 8 in file "buttons.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;		None
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;		None
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  1    wreg      unsigned char 
 10490 ;; Registers used:
 10491 ;;		wreg, status,2, status,0, pclath, cstack
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10501 ;;Total ram usage:        2 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; Hardware stack levels required when called:    1
 10504 ;; This function calls:
 10505 ;;		_ADCRead
 10506 ;; This function is called by:
 10507 ;;		_main
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           
 10512                           ;psect for function _readButton
 10513  1653                     _readButton:	
 10514                           
 10515                           ;buttons.c: 10: readButtons=ADCRead(11);
 10516                           
 10517                           ;incstack = 0
 10518                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
 10519  1653  300B               	movlw	11
 10520  1654  3180  2004  3196   	fcall	_ADCRead
 10521  1657  0871               	movf	?_ADCRead+1,w
 10522  1658  0020               	movlb	0	; select bank0
 10523  1659  00DF               	movwf	_readButtons+1
 10524  165A  0870               	movf	?_ADCRead,w
 10525  165B  00DE               	movwf	_readButtons
 10526                           
 10527                           ;buttons.c: 12: if(readButtons>=365&&readButtons<405)
 10528  165C  085F               	movf	_readButtons+1,w
 10529  165D  3A80               	xorlw	128
 10530  165E  00F4               	movwf	??_readButton
 10531  165F  3081               	movlw	129
 10532  1660  0274               	subwf	??_readButton,w
 10533  1661  1D03               	skipz
 10534  1662  2E65               	goto	u3655
 10535  1663  306D               	movlw	109
 10536  1664  025E               	subwf	_readButtons,w
 10537  1665                     u3655:	
 10538  1665  1C03               	skipc
 10539  1666  2E77               	goto	l3081
 10540  1667  0020               	movlb	0	; select bank0
 10541  1668  085F               	movf	_readButtons+1,w
 10542  1669  3A80               	xorlw	128
 10543  166A  00F4               	movwf	??_readButton
 10544  166B  3081               	movlw	129
 10545  166C  0274               	subwf	??_readButton,w
 10546  166D  1D03               	skipz
 10547  166E  2E71               	goto	u3665
 10548  166F  3095               	movlw	149
 10549  1670  025E               	subwf	_readButtons,w
 10550  1671                     u3665:	
 10551  1671  1803               	skipnc
 10552  1672  2E77               	goto	l3081
 10553                           
 10554                           ;buttons.c: 13: {
 10555                           ;buttons.c: 14: button=1;
 10556  1673  0020               	movlb	0	; select bank0
 10557  1674  01EC               	clrf	_button
 10558  1675  0AEC               	incf	_button,f
 10559                           
 10560                           ;buttons.c: 15: }
 10561  1676  2EA5               	goto	l3093
 10562  1677                     l3081:	
 10563                           
 10564                           ;buttons.c: 17: else if(readButtons>=535&&readButtons<590)
 10565  1677  0020               	movlb	0	; select bank0
 10566  1678  085F               	movf	_readButtons+1,w
 10567  1679  3A80               	xorlw	128
 10568  167A  00F4               	movwf	??_readButton
 10569  167B  3082               	movlw	130
 10570  167C  0274               	subwf	??_readButton,w
 10571  167D  1D03               	skipz
 10572  167E  2E81               	goto	u3675
 10573  167F  3017               	movlw	23
 10574  1680  025E               	subwf	_readButtons,w
 10575  1681                     u3675:	
 10576  1681  1C03               	skipc
 10577  1682  2E91               	goto	l3087
 10578  1683  0020               	movlb	0	; select bank0
 10579  1684  085F               	movf	_readButtons+1,w
 10580  1685  3A80               	xorlw	128
 10581  1686  00F4               	movwf	??_readButton
 10582  1687  3082               	movlw	130
 10583  1688  0274               	subwf	??_readButton,w
 10584  1689  1D03               	skipz
 10585  168A  2E8D               	goto	u3685
 10586  168B  304E               	movlw	78
 10587  168C  025E               	subwf	_readButtons,w
 10588  168D                     u3685:	
 10589  168D  1803               	skipnc
 10590  168E  2E91               	goto	l3087
 10591                           
 10592                           ;buttons.c: 18: {
 10593                           ;buttons.c: 19: button=2;
 10594  168F  3002               	movlw	2
 10595  1690  2E9E               	goto	L8
 10596  1691                     l3087:	
 10597                           ;buttons.c: 20: }
 10598                           
 10599                           
 10600                           ;buttons.c: 22: else if(readButtons>745)
 10601  1691  0020               	movlb	0	; select bank0
 10602  1692  085F               	movf	_readButtons+1,w
 10603  1693  3A80               	xorlw	128
 10604  1694  00F4               	movwf	??_readButton
 10605  1695  3082               	movlw	130
 10606  1696  0274               	subwf	??_readButton,w
 10607  1697  1D03               	skipz
 10608  1698  2E9B               	goto	u3695
 10609  1699  30EA               	movlw	234
 10610  169A  025E               	subwf	_readButtons,w
 10611  169B                     u3695:	
 10612  169B  1C03               	skipc
 10613  169C  2EA3               	goto	l3091
 10614                           
 10615                           ;buttons.c: 23: {
 10616                           ;buttons.c: 24: button=3;
 10617  169D  3003               	movlw	3
 10618  169E                     L8:	
 10619  169E  00F4               	movwf	??_readButton
 10620  169F  0874               	movf	??_readButton,w
 10621  16A0  0020               	movlb	0	; select bank0
 10622  16A1  00EC               	movwf	_button
 10623                           
 10624                           ;buttons.c: 25: }
 10625  16A2  2EA5               	goto	l3093
 10626  16A3                     l3091:	
 10627                           
 10628                           ;buttons.c: 27: else
 10629                           ;buttons.c: 28: {
 10630                           ;buttons.c: 29: button=0;
 10631  16A3  0020               	movlb	0	; select bank0
 10632  16A4  01EC               	clrf	_button
 10633  16A5                     l3093:	
 10634                           
 10635                           ;buttons.c: 30: }
 10636                           ;buttons.c: 32: if (button!=0)
 10637  16A5  086C               	movf	_button,w
 10638  16A6  1903               	btfsc	3,2
 10639  16A7  2ED2               	goto	l3113
 10640                           
 10641                           ;buttons.c: 33: {
 10642                           ;buttons.c: 34: if (button!=lastButton)
 10643  16A8  086C               	movf	_button,w
 10644  16A9  066B               	xorwf	_lastButton,w
 10645  16AA  1903               	skipnz
 10646  16AB  2EB1               	goto	l3101
 10647                           
 10648                           ;buttons.c: 35: {
 10649                           ;buttons.c: 36: lastButton=button;
 10650  16AC  086C               	movf	_button,w
 10651  16AD  00F4               	movwf	??_readButton
 10652  16AE  0874               	movf	??_readButton,w
 10653  16AF  00EB               	movwf	_lastButton
 10654  16B0  2ED2               	goto	l3113
 10655  16B1                     l3101:	
 10656                           ;buttons.c: 38: }
 10657                           
 10658                           ;buttons.c: 37: j=0;
 10659                           
 10660                           
 10661                           ;buttons.c: 39: else
 10662                           ;buttons.c: 40: {
 10663                           ;buttons.c: 41: j+=1;
 10664  16B1  3001               	movlw	1
 10665  16B2  00F4               	movwf	??_readButton
 10666  16B3  0874               	movf	??_readButton,w
 10667  16B4  07EA               	addwf	_j,f
 10668                           
 10669                           ;buttons.c: 43: if(j==1)
 10670  16B5  036A               	decf	_j,w
 10671  16B6  1D03               	btfss	3,2
 10672  16B7  2EBA               	goto	l3107
 10673                           
 10674                           ;buttons.c: 44: {
 10675                           ;buttons.c: 45: return (lastButton);
 10676  16B8  086B               	movf	_lastButton,w
 10677  16B9  0008               	return
 10678  16BA                     l3107:	
 10679                           
 10680                           ;buttons.c: 46: }
 10681                           ;buttons.c: 48: if (j>10)
 10682  16BA  086A               	movf	_j,w
 10683  16BB  3A80               	xorlw	128
 10684  16BC  3E75               	addlw	-139
 10685  16BD  1C03               	skipc
 10686  16BE  2ED3               	goto	l3115
 10687                           
 10688                           ;buttons.c: 49: {
 10689                           ;buttons.c: 50: _delay((unsigned long)((25)*(32000000/4000.0)));
 10690  16BF  3002               	movlw	2
 10691  16C0  00F5               	movwf	??_readButton+1
 10692  16C1  3004               	movlw	4
 10693  16C2  00F4               	movwf	??_readButton
 10694  16C3  30BA               	movlw	186
 10695  16C4                     u4337:	
 10696  16C4  0B89               	decfsz	9,f
 10697  16C5  2EC4               	goto	u4337
 10698  16C6  0BF4               	decfsz	??_readButton,f
 10699  16C7  2EC4               	goto	u4337
 10700  16C8  0BF5               	decfsz	??_readButton+1,f
 10701  16C9  2EC4               	goto	u4337
 10702  16CA  3200               	nop2
 10703                           
 10704                           ;buttons.c: 51: j=10;
 10705  16CB  300A               	movlw	10
 10706  16CC  00F4               	movwf	??_readButton
 10707  16CD  0874               	movf	??_readButton,w
 10708  16CE  0020               	movlb	0	; select bank0
 10709  16CF  00EA               	movwf	_j
 10710                           
 10711                           ;buttons.c: 52: return (lastButton);
 10712  16D0  086B               	movf	_lastButton,w
 10713  16D1  0008               	return
 10714  16D2                     l3113:	
 10715                           ;buttons.c: 53: }
 10716                           ;buttons.c: 54: }
 10717                           ;buttons.c: 55: goto end;
 10718                           
 10719                           
 10720                           ;buttons.c: 56: }
 10721                           ;buttons.c: 58: j=0;
 10722  16D2  01EA               	clrf	_j
 10723  16D3                     l3115:	
 10724                           ;buttons.c: 60: end:
 10725                           
 10726                           
 10727                           ;buttons.c: 62: return (0);
 10728  16D3  3000               	movlw	0
 10729  16D4  0008               	return
 10730  16D5                     __end_of_readButton:	
 10731                           
 10732                           	psect	text12
 10733  0004                     __ptext12:	
 10734 ;; *************** function _ADCRead *****************
 10735 ;; Defined at:
 10736 ;;		line 21 in file "adc.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  channel         1    wreg     enum E14315
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;  channel         1    3[COMMON] enum E14315
 10741 ;; Return value:  Size  Location     Type
 10742 ;;                  2    0[COMMON] int 
 10743 ;; Registers used:
 10744 ;;		wreg
 10745 ;; Tracked objects:
 10746 ;;		On entry : 0/0
 10747 ;;		On exit  : 0/0
 10748 ;;		Unchanged: 0/0
 10749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10750 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;Total ram usage:        4 bytes
 10755 ;; Hardware stack levels used:    1
 10756 ;; This function calls:
 10757 ;;		Nothing
 10758 ;; This function is called by:
 10759 ;;		_readIAnalog
 10760 ;;		_readVAnalog
 10761 ;;		_readButton
 10762 ;;		_main
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           
 10767                           ;psect for function _ADCRead
 10768  0004                     _ADCRead:	
 10769                           
 10770                           ;incstack = 0
 10771                           ; Regs used in _ADCRead: [wreg]
 10772                           ;ADCRead@channel stored from wreg
 10773  0004  00F3               	movwf	ADCRead@channel
 10774                           
 10775                           ;adc.c: 23: ADPCH = channel_VSS;
 10776  0005  303C               	movlw	60
 10777  0006  0021               	movlb	1	; select bank1
 10778  0007  009E               	movwf	30	;volatile
 10779                           
 10780                           ;adc.c: 25: ADCON0bits.ADON = 1;
 10781  0008  1793               	bsf	19,7	;volatile
 10782                           
 10783                           ;adc.c: 27: ADCON0bits.ADCONT = 0;
 10784  0009  1313               	bcf	19,6	;volatile
 10785                           
 10786                           ;adc.c: 29: ADCON0bits.ADGO = 1;
 10787  000A  1413               	bsf	19,0	;volatile
 10788  000B                     l65:	
 10789                           ;adc.c: 32: {
 10790                           
 10791                           ;adc.c: 31: while(ADCON0bits.ADGO)
 10792                           
 10793  000B  1813               	btfsc	19,0	;volatile
 10794  000C  280B               	goto	l65
 10795                           
 10796                           ;adc.c: 33: }
 10797                           ;adc.c: 35: ADPCH = channel;
 10798  000D  0873               	movf	ADCRead@channel,w
 10799  000E  009E               	movwf	30	;volatile
 10800                           
 10801                           ;adc.c: 37: ADCON0bits.ADON = 1;
 10802  000F  1793               	bsf	19,7	;volatile
 10803                           
 10804                           ;adc.c: 39: ADCON0bits.ADCONT = 0;
 10805  0010  1313               	bcf	19,6	;volatile
 10806                           
 10807                           ;adc.c: 41: ADCON0bits.ADGO = 1;
 10808  0011  1413               	bsf	19,0	;volatile
 10809  0012                     l68:	
 10810                           ;adc.c: 44: {
 10811                           
 10812                           ;adc.c: 43: while(ADCON0bits.ADGO)
 10813                           
 10814  0012  1813               	btfsc	19,0	;volatile
 10815  0013  2812               	goto	l68
 10816                           
 10817                           ;adc.c: 45: }
 10818                           ;adc.c: 47: return ((ADRESH<<8)+ADRESL);
 10819  0014  080D               	movf	13,w	;volatile
 10820  0015  00F1               	movwf	?_ADCRead+1
 10821  0016  080C               	movf	12,w	;volatile
 10822  0017  00F0               	movwf	?_ADCRead
 10823  0018  0008               	return
 10824  0019                     __end_of_ADCRead:	
 10825                           
 10826                           	psect	text13
 10827  0EC1                     __ptext13:	
 10828 ;; *************** function _cc_cv_mode *****************
 10829 ;; Defined at:
 10830 ;;		line 83 in file "battery_charger.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  z               1    wreg     unsigned char 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;  z               1   37[BANK0 ] unsigned char 
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      void 
 10837 ;; Registers used:
 10838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10846 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10847 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;Total ram usage:        8 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:    2
 10851 ;; This function calls:
 10852 ;;		___awtoft
 10853 ;;		___ftmul
 10854 ;;		___fttol
 10855 ;; This function is called by:
 10856 ;;		_main
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           
 10861                           ;psect for function _cc_cv_mode
 10862  0EC1                     _cc_cv_mode:	
 10863                           
 10864                           ;incstack = 0
 10865                           ; Regs used in _cc_cv_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10866                           ;cc_cv_mode@z stored from wreg
 10867  0EC1  0020               	movlb	0	; select bank0
 10868  0EC2  00C5               	movwf	cc_cv_mode@z
 10869                           
 10870                           ;battery_charger.c: 85: if(voltage[z]>=Vref[z])
 10871  0EC3  3545               	lslf	cc_cv_mode@z,w
 10872  0EC4  3E5A               	addlw	(low (_Vref| 0))& (0+255)
 10873  0EC5  0086               	movwf	6
 10874  0EC6  0187               	clrf	7
 10875  0EC7  3F40               	moviw [0]fsr1
 10876  0EC8  00BE               	movwf	??_cc_cv_mode
 10877  0EC9  3F41               	moviw [1]fsr1
 10878  0ECA  00BF               	movwf	??_cc_cv_mode+1
 10879  0ECB  3545               	lslf	cc_cv_mode@z,w
 10880  0ECC  3EA8               	addlw	(low (_voltage| 0))& (0+255)
 10881  0ECD  0086               	movwf	6
 10882  0ECE  0187               	clrf	7
 10883  0ECF  3F40               	moviw [0]fsr1
 10884  0ED0  00C0               	movwf	??_cc_cv_mode+2
 10885  0ED1  3F41               	moviw [1]fsr1
 10886  0ED2  00C1               	movwf	??_cc_cv_mode+3
 10887  0ED3  0841               	movf	??_cc_cv_mode+3,w
 10888  0ED4  3A80               	xorlw	128
 10889  0ED5  00C2               	movwf	??_cc_cv_mode+4
 10890  0ED6  083F               	movf	??_cc_cv_mode+1,w
 10891  0ED7  3A80               	xorlw	128
 10892  0ED8  0242               	subwf	??_cc_cv_mode+4,w
 10893  0ED9  1D03               	skipz
 10894  0EDA  2EDD               	goto	u3555
 10895  0EDB  083E               	movf	??_cc_cv_mode,w
 10896  0EDC  0240               	subwf	??_cc_cv_mode+2,w
 10897  0EDD                     u3555:	
 10898  0EDD  1C03               	skipc
 10899  0EDE  2F1D               	goto	l3057
 10900                           
 10901                           ;battery_charger.c: 86: {
 10902                           ;battery_charger.c: 87: if(VHoldMode[z]<9)VHoldMode[z]+=1;
 10903  0EDF  0020               	movlb	0	; select bank0
 10904  0EE0  0845               	movf	cc_cv_mode@z,w
 10905  0EE1  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 10906  0EE2  0086               	movwf	6
 10907  0EE3  0187               	clrf	7
 10908  0EE4  0801               	movf	1,w
 10909  0EE5  3A80               	xorlw	128
 10910  0EE6  3E77               	addlw	-137
 10911  0EE7  1803               	skipnc
 10912  0EE8  2EF1               	goto	l140
 10913  0EE9  3001               	movlw	1
 10914  0EEA  00BE               	movwf	??_cc_cv_mode
 10915  0EEB  0845               	movf	cc_cv_mode@z,w
 10916  0EEC  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 10917  0EED  0086               	movwf	6
 10918  0EEE  0187               	clrf	7
 10919  0EEF  083E               	movf	??_cc_cv_mode,w
 10920  0EF0  0781               	addwf	1,f
 10921  0EF1                     l140:	
 10922                           
 10923                           ;battery_charger.c: 88: if(VHoldMode[z]<9)VHoldMode[z]+=1;
 10924  0EF1  0845               	movf	cc_cv_mode@z,w
 10925  0EF2  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 10926  0EF3  0086               	movwf	6
 10927  0EF4  0187               	clrf	7
 10928  0EF5  0801               	movf	1,w
 10929  0EF6  3A80               	xorlw	128
 10930  0EF7  3E77               	addlw	-137
 10931  0EF8  1803               	skipnc
 10932  0EF9  2F02               	goto	l141
 10933  0EFA  3001               	movlw	1
 10934  0EFB  00BE               	movwf	??_cc_cv_mode
 10935  0EFC  0845               	movf	cc_cv_mode@z,w
 10936  0EFD  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 10937  0EFE  0086               	movwf	6
 10938  0EFF  0187               	clrf	7
 10939  0F00  083E               	movf	??_cc_cv_mode,w
 10940  0F01  0781               	addwf	1,f
 10941  0F02                     l141:	
 10942                           
 10943                           ;battery_charger.c: 90: if(cc_cv[z])
 10944  0F02  0845               	movf	cc_cv_mode@z,w
 10945  0F03  3ED1               	addlw	(low (_cc_cv| 0))& (0+255)
 10946  0F04  0086               	movwf	6
 10947  0F05  0187               	clrf	7
 10948  0F06  0801               	movf	1,w
 10949  0F07  1903               	btfsc	3,2
 10950  0F08  2F10               	goto	l3053
 10951                           
 10952                           ;battery_charger.c: 91: {
 10953                           ;battery_charger.c: 92: cc_cv[z]-=1;
 10954  0F09  0845               	movf	cc_cv_mode@z,w
 10955  0F0A  3ED1               	addlw	(low (_cc_cv| 0))& (0+255)
 10956  0F0B  0086               	movwf	6
 10957  0F0C  0187               	clrf	7
 10958  0F0D  3001               	movlw	1
 10959  0F0E  0281               	subwf	1,f
 10960                           
 10961                           ;battery_charger.c: 93: }
 10962  0F0F  2F45               	goto	l145
 10963  0F10                     l3053:	
 10964                           
 10965                           ;battery_charger.c: 94: else
 10966                           ;battery_charger.c: 95: {
 10967                           ;battery_charger.c: 96: if(Imode[z])
 10968  0F10  0845               	movf	cc_cv_mode@z,w
 10969  0F11  3E62               	addlw	(low (_Imode| 0))& (0+255)
 10970  0F12  0086               	movwf	6
 10971  0F13  0187               	clrf	7
 10972  0F14  0801               	movf	1,w
 10973  0F15  1903               	btfsc	3,2
 10974  0F16  2F45               	goto	l145
 10975                           
 10976                           ;battery_charger.c: 97: {
 10977                           ;battery_charger.c: 98: Imode[z]=0;
 10978  0F17  0845               	movf	cc_cv_mode@z,w
 10979  0F18  3E62               	addlw	(low (_Imode| 0))& (0+255)
 10980  0F19  0086               	movwf	6
 10981  0F1A  0187               	clrf	7
 10982  0F1B  0181               	clrf	1
 10983                           
 10984                           ;battery_charger.c: 99: }
 10985                           ;battery_charger.c: 100: }
 10986                           ;battery_charger.c: 101: }
 10987  0F1C  2F45               	goto	l145
 10988  0F1D                     l3057:	
 10989                           
 10990                           ;battery_charger.c: 102: else
 10991                           ;battery_charger.c: 103: {
 10992                           ;battery_charger.c: 104: VHoldMode[z]-=1;
 10993  0F1D  30FF               	movlw	255
 10994  0F1E  0020               	movlb	0	; select bank0
 10995  0F1F  00BE               	movwf	??_cc_cv_mode
 10996  0F20  0845               	movf	cc_cv_mode@z,w
 10997  0F21  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 10998  0F22  0086               	movwf	6
 10999  0F23  0187               	clrf	7
 11000  0F24  083E               	movf	??_cc_cv_mode,w
 11001  0F25  0781               	addwf	1,f
 11002                           
 11003                           ;battery_charger.c: 105: if(VHoldMode[z]<(9*-1))
 11004  0F26  0845               	movf	cc_cv_mode@z,w
 11005  0F27  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 11006  0F28  0086               	movwf	6
 11007  0F29  0187               	clrf	7
 11008  0F2A  0801               	movf	1,w
 11009  0F2B  3A80               	xorlw	128
 11010  0F2C  3E89               	addlw	137
 11011  0F2D  1803               	skipnc
 11012  0F2E  2F45               	goto	l145
 11013                           
 11014                           ;battery_charger.c: 106: {
 11015                           ;battery_charger.c: 107: Imode[z]=1;
 11016  0F2F  0845               	movf	cc_cv_mode@z,w
 11017  0F30  3E62               	addlw	(low (_Imode| 0))& (0+255)
 11018  0F31  0086               	movwf	6
 11019  0F32  0187               	clrf	7
 11020  0F33  0181               	clrf	1
 11021  0F34  0A81               	incf	1,f
 11022                           
 11023                           ;battery_charger.c: 108: cc_cv[z]=(9*2);
 11024  0F35  3012               	movlw	18
 11025  0F36  00BE               	movwf	??_cc_cv_mode
 11026  0F37  0845               	movf	cc_cv_mode@z,w
 11027  0F38  3ED1               	addlw	(low (_cc_cv| 0))& (0+255)
 11028  0F39  0086               	movwf	6
 11029  0F3A  0187               	clrf	7
 11030  0F3B  083E               	movf	??_cc_cv_mode,w
 11031  0F3C  0081               	movwf	1
 11032                           
 11033                           ;battery_charger.c: 109: VHoldMode[z]=(9*-1);
 11034  0F3D  30F7               	movlw	247
 11035  0F3E  00BE               	movwf	??_cc_cv_mode
 11036  0F3F  0845               	movf	cc_cv_mode@z,w
 11037  0F40  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 11038  0F41  0086               	movwf	6
 11039  0F42  0187               	clrf	7
 11040  0F43  083E               	movf	??_cc_cv_mode,w
 11041  0F44  0081               	movwf	1
 11042  0F45                     l145:	
 11043                           
 11044                           ;battery_charger.c: 110: }
 11045                           ;battery_charger.c: 111: }
 11046                           ;battery_charger.c: 113: if(current[z]>Iref[z])
 11047  0F45  3545               	lslf	cc_cv_mode@z,w
 11048  0F46  3EB0               	addlw	(low (_current| 0))& (0+255)
 11049  0F47  0086               	movwf	6
 11050  0F48  0187               	clrf	7
 11051  0F49  3F40               	moviw [0]fsr1
 11052  0F4A  00BE               	movwf	??_cc_cv_mode
 11053  0F4B  3F41               	moviw [1]fsr1
 11054  0F4C  00BF               	movwf	??_cc_cv_mode+1
 11055  0F4D  3545               	lslf	cc_cv_mode@z,w
 11056  0F4E  3EC1               	addlw	(low (_Iref| 0))& (0+255)
 11057  0F4F  0086               	movwf	6
 11058  0F50  0187               	clrf	7
 11059  0F51  3F40               	moviw [0]fsr1
 11060  0F52  00C0               	movwf	??_cc_cv_mode+2
 11061  0F53  3F41               	moviw [1]fsr1
 11062  0F54  00C1               	movwf	??_cc_cv_mode+3
 11063  0F55  0841               	movf	??_cc_cv_mode+3,w
 11064  0F56  3A80               	xorlw	128
 11065  0F57  00C2               	movwf	??_cc_cv_mode+4
 11066  0F58  083F               	movf	??_cc_cv_mode+1,w
 11067  0F59  3A80               	xorlw	128
 11068  0F5A  0242               	subwf	??_cc_cv_mode+4,w
 11069  0F5B  1D03               	skipz
 11070  0F5C  2F5F               	goto	u3615
 11071  0F5D  083E               	movf	??_cc_cv_mode,w
 11072  0F5E  0240               	subwf	??_cc_cv_mode+2,w
 11073  0F5F                     u3615:	
 11074  0F5F  1803               	skipnc
 11075  0F60  0008               	return
 11076                           
 11077                           ;battery_charger.c: 114: {
 11078                           ;battery_charger.c: 115: if(!(Imode[z]))
 11079  0F61  0020               	movlb	0	; select bank0
 11080  0F62  0845               	movf	cc_cv_mode@z,w
 11081  0F63  3E62               	addlw	(low (_Imode| 0))& (0+255)
 11082  0F64  0086               	movwf	6
 11083  0F65  0187               	clrf	7
 11084  0F66  0801               	movf	1,w
 11085  0F67  1D03               	btfss	3,2
 11086  0F68  0008               	return
 11087                           
 11088                           ;battery_charger.c: 116: {
 11089                           ;battery_charger.c: 117: if(batteryState[z]==FLOAT)
 11090  0F69  0845               	movf	cc_cv_mode@z,w
 11091  0F6A  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 11092  0F6B  0086               	movwf	6
 11093  0F6C  0187               	clrf	7
 11094  0F6D  3005               	movlw	5
 11095  0F6E  0601               	xorwf	1,w
 11096  0F6F  1D03               	btfss	3,2
 11097  0F70  0008               	return
 11098                           
 11099                           ;battery_charger.c: 118: {
 11100                           ;battery_charger.c: 119: if(voltage[z]<1350+(int16_t)((250-batteryTemp)*.24)-70)
 11101  0F71  096D               	comf	_batteryTemp,w
 11102  0F72  00BE               	movwf	??_cc_cv_mode
 11103  0F73  096E               	comf	_batteryTemp+1,w
 11104  0F74  00BF               	movwf	??_cc_cv_mode+1
 11105  0F75  0ABE               	incf	??_cc_cv_mode,f
 11106  0F76  1903               	skipnz
 11107  0F77  0ABF               	incf	??_cc_cv_mode+1,f
 11108  0F78  083E               	movf	??_cc_cv_mode,w
 11109  0F79  3EFA               	addlw	250
 11110  0F7A  00F8               	movwf	___awtoft@c
 11111  0F7B  3000               	movlw	0
 11112  0F7C  3D3F               	addwfc	??_cc_cv_mode+1,w
 11113  0F7D  00F9               	movwf	___awtoft@c+1
 11114  0F7E  3191  21FE  318E   	fcall	___awtoft
 11115  0F81  0878               	movf	?___awtoft,w
 11116  0F82  0020               	movlb	0	; select bank0
 11117  0F83  00A3               	movwf	___ftmul@f2
 11118  0F84  0879               	movf	?___awtoft+1,w
 11119  0F85  00A4               	movwf	___ftmul@f2+1
 11120  0F86  087A               	movf	?___awtoft+2,w
 11121  0F87  00A5               	movwf	___ftmul@f2+2
 11122  0F88  30C3               	movlw	195
 11123  0F89  00A0               	movwf	___ftmul@f1
 11124  0F8A  3075               	movlw	117
 11125  0F8B  00A1               	movwf	___ftmul@f1+1
 11126  0F8C  303E               	movlw	62
 11127  0F8D  00A2               	movwf	___ftmul@f1+2
 11128  0F8E  3188  20FB  318E   	fcall	___ftmul
 11129  0F91  0020               	movlb	0	; select bank0
 11130  0F92  0820               	movf	?___ftmul,w
 11131  0F93  00B0               	movwf	___fttol@f1
 11132  0F94  0821               	movf	?___ftmul+1,w
 11133  0F95  00B1               	movwf	___fttol@f1+1
 11134  0F96  0822               	movf	?___ftmul+2,w
 11135  0F97  00B2               	movwf	___fttol@f1+2
 11136  0F98  3180  2019  318E   	fcall	___fttol
 11137  0F9B  0020               	movlb	0	; select bank0
 11138  0F9C  0830               	movf	?___fttol,w
 11139  0F9D  3E00               	addlw	0
 11140  0F9E  00C0               	movwf	??_cc_cv_mode+2
 11141  0F9F  3005               	movlw	5
 11142  0FA0  3D31               	addwfc	?___fttol+1,w
 11143  0FA1  00C1               	movwf	??_cc_cv_mode+3
 11144  0FA2  3545               	lslf	cc_cv_mode@z,w
 11145  0FA3  3EA8               	addlw	(low (_voltage| 0))& (0+255)
 11146  0FA4  0086               	movwf	6
 11147  0FA5  0187               	clrf	7
 11148  0FA6  3F40               	moviw [0]fsr1
 11149  0FA7  00C2               	movwf	??_cc_cv_mode+4
 11150  0FA8  3F41               	moviw [1]fsr1
 11151  0FA9  00C3               	movwf	??_cc_cv_mode+5
 11152  0FAA  0843               	movf	??_cc_cv_mode+5,w
 11153  0FAB  3A80               	xorlw	128
 11154  0FAC  00C4               	movwf	??_cc_cv_mode+6
 11155  0FAD  0841               	movf	??_cc_cv_mode+3,w
 11156  0FAE  3A80               	xorlw	128
 11157  0FAF  0244               	subwf	??_cc_cv_mode+6,w
 11158  0FB0  1D03               	skipz
 11159  0FB1  2FB4               	goto	u3645
 11160  0FB2  0840               	movf	??_cc_cv_mode+2,w
 11161  0FB3  0242               	subwf	??_cc_cv_mode+4,w
 11162  0FB4                     u3645:	
 11163  0FB4  1803               	skipnc
 11164  0FB5  0008               	return
 11165                           
 11166                           ;battery_charger.c: 120: {
 11167                           ;battery_charger.c: 121: batteryState[z]=CHARGE;
 11168  0FB6  3004               	movlw	4
 11169  0FB7  0020               	movlb	0	; select bank0
 11170  0FB8  00BE               	movwf	??_cc_cv_mode
 11171  0FB9  0845               	movf	cc_cv_mode@z,w
 11172  0FBA  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 11173  0FBB  0086               	movwf	6
 11174  0FBC  0187               	clrf	7
 11175  0FBD  083E               	movf	??_cc_cv_mode,w
 11176  0FBE  0081               	movwf	1
 11177                           
 11178                           ;battery_charger.c: 122: Vref[z]=1425+(int16_t)((250-batteryTemp)*.24);
 11179  0FBF  096D               	comf	_batteryTemp,w
 11180  0FC0  00BE               	movwf	??_cc_cv_mode
 11181  0FC1  096E               	comf	_batteryTemp+1,w
 11182  0FC2  00BF               	movwf	??_cc_cv_mode+1
 11183  0FC3  0ABE               	incf	??_cc_cv_mode,f
 11184  0FC4  1903               	skipnz
 11185  0FC5  0ABF               	incf	??_cc_cv_mode+1,f
 11186  0FC6  083E               	movf	??_cc_cv_mode,w
 11187  0FC7  3EFA               	addlw	250
 11188  0FC8  00F8               	movwf	___awtoft@c
 11189  0FC9  3000               	movlw	0
 11190  0FCA  3D3F               	addwfc	??_cc_cv_mode+1,w
 11191  0FCB  00F9               	movwf	___awtoft@c+1
 11192  0FCC  3191  21FE  318E   	fcall	___awtoft
 11193  0FCF  0878               	movf	?___awtoft,w
 11194  0FD0  0020               	movlb	0	; select bank0
 11195  0FD1  00A3               	movwf	___ftmul@f2
 11196  0FD2  0879               	movf	?___awtoft+1,w
 11197  0FD3  00A4               	movwf	___ftmul@f2+1
 11198  0FD4  087A               	movf	?___awtoft+2,w
 11199  0FD5  00A5               	movwf	___ftmul@f2+2
 11200  0FD6  30C3               	movlw	195
 11201  0FD7  00A0               	movwf	___ftmul@f1
 11202  0FD8  3075               	movlw	117
 11203  0FD9  00A1               	movwf	___ftmul@f1+1
 11204  0FDA  303E               	movlw	62
 11205  0FDB  00A2               	movwf	___ftmul@f1+2
 11206  0FDC  3188  20FB  318E   	fcall	___ftmul
 11207  0FDF  0020               	movlb	0	; select bank0
 11208  0FE0  0820               	movf	?___ftmul,w
 11209  0FE1  00B0               	movwf	___fttol@f1
 11210  0FE2  0821               	movf	?___ftmul+1,w
 11211  0FE3  00B1               	movwf	___fttol@f1+1
 11212  0FE4  0822               	movf	?___ftmul+2,w
 11213  0FE5  00B2               	movwf	___fttol@f1+2
 11214  0FE6  3180  2019         	fcall	___fttol
 11215  0FE8  0020               	movlb	0	; select bank0
 11216  0FE9  0830               	movf	?___fttol,w
 11217  0FEA  3E91               	addlw	145
 11218  0FEB  00C0               	movwf	??_cc_cv_mode+2
 11219  0FEC  3005               	movlw	5
 11220  0FED  3D31               	addwfc	?___fttol+1,w
 11221  0FEE  00C1               	movwf	??_cc_cv_mode+3
 11222  0FEF  3545               	lslf	cc_cv_mode@z,w
 11223  0FF0  3E5A               	addlw	(low (_Vref| 0))& (0+255)
 11224  0FF1  0086               	movwf	6
 11225  0FF2  0187               	clrf	7
 11226  0FF3  0840               	movf	??_cc_cv_mode+2,w
 11227  0FF4  3FC0               	movwi [0]fsr1
 11228  0FF5  0841               	movf	??_cc_cv_mode+3,w
 11229  0FF6  3FC1               	movwi [1]fsr1
 11230                           
 11231                           ;battery_charger.c: 123: Iref[z]=35;
 11232  0FF7  3545               	lslf	cc_cv_mode@z,w
 11233  0FF8  3EC1               	addlw	(low (_Iref| 0))& (0+255)
 11234  0FF9  0086               	movwf	6
 11235  0FFA  0187               	clrf	7
 11236  0FFB  3023               	movlw	35
 11237  0FFC  3FC0               	movwi [0]fsr1
 11238  0FFD  3000               	movlw	0
 11239  0FFE  3FC1               	movwi [1]fsr1
 11240  0FFF  0008               	return
 11241  1000                     __end_of_cc_cv_mode:	
 11242                           
 11243                           	psect	text14
 11244  0806                     __ptext14:	
 11245 ;; *************** function _calculateCurrent3 *****************
 11246 ;; Defined at:
 11247 ;;		line 424 in file "main.c"
 11248 ;; Parameters:    Size  Location     Type
 11249 ;;		None
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;		None
 11252 ;; Return value:  Size  Location     Type
 11253 ;;                  1    wreg      void 
 11254 ;; Registers used:
 11255 ;;		wreg, status,2, status,0, pclath, cstack
 11256 ;; Tracked objects:
 11257 ;;		On entry : 0/0
 11258 ;;		On exit  : 0/0
 11259 ;;		Unchanged: 0/0
 11260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11263 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11264 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11265 ;;Total ram usage:        3 bytes
 11266 ;; Hardware stack levels used:    1
 11267 ;; Hardware stack levels required when called:    2
 11268 ;; This function calls:
 11269 ;;		___awtoft
 11270 ;;		___ftdiv
 11271 ;;		___fttol
 11272 ;; This function is called by:
 11273 ;;		_main
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           
 11278                           ;psect for function _calculateCurrent3
 11279  0806                     _calculateCurrent3:	
 11280                           
 11281                           ;main.c: 426: if(Ianalogs[3]-559<=0)
 11282                           
 11283                           ;incstack = 0
 11284                           ; Regs used in _calculateCurrent3: [wreg+status,2+status,0+pclath+cstack]
 11285  0806  0021               	movlb	1	; select bank1
 11286  0807  0826               	movf	(_Ianalogs^(0+128)+6),w
 11287  0808  3ED1               	addlw	209
 11288  0809  0020               	movlb	0	; select bank0
 11289  080A  00BE               	movwf	??_calculateCurrent3
 11290  080B  30FD               	movlw	253
 11291  080C  0021               	movlb	1	; select bank1
 11292  080D  3D27               	addwfc	((_Ianalogs+1)^(0+128)+6),w
 11293  080E  0020               	movlb	0	; select bank0
 11294  080F  00BF               	movwf	??_calculateCurrent3+1
 11295  0810  083F               	movf	??_calculateCurrent3+1,w
 11296  0811  3A80               	xorlw	128
 11297  0812  00C0               	movwf	??_calculateCurrent3+2
 11298  0813  3080               	movlw	128
 11299  0814  0240               	subwf	??_calculateCurrent3+2,w
 11300  0815  1D03               	skipz
 11301  0816  2819               	goto	u3905
 11302  0817  3001               	movlw	1
 11303  0818  023E               	subwf	??_calculateCurrent3,w
 11304  0819                     u3905:	
 11305  0819  1803               	skipnc
 11306  081A  281F               	goto	l3233
 11307                           
 11308                           ;main.c: 427: {
 11309                           ;main.c: 428: current[3]=0;
 11310  081B  0021               	movlb	1	; select bank1
 11311  081C  01B6               	clrf	(_current^(0+128)+6)
 11312  081D  01B7               	clrf	((_current+1)^(0+128)+6)
 11313                           
 11314                           ;main.c: 429: }
 11315  081E  0008               	return
 11316  081F                     l3233:	
 11317                           
 11318                           ;main.c: 430: else
 11319                           ;main.c: 431: {
 11320                           ;main.c: 432: current[3]=(int16_t)((Ianalogs[3]-559)/1.60575);
 11321  081F  0021               	movlb	1	; select bank1
 11322  0820  0826               	movf	(_Ianalogs^(0+128)+6),w
 11323  0821  3ED1               	addlw	209
 11324  0822  00F8               	movwf	___awtoft@c
 11325  0823  30FD               	movlw	253
 11326  0824  3D27               	addwfc	((_Ianalogs+1)^(0+128)+6),w
 11327  0825  00F9               	movwf	___awtoft@c+1
 11328  0826  3191  21FE  3188   	fcall	___awtoft
 11329  0829  0878               	movf	?___awtoft,w
 11330  082A  0020               	movlb	0	; select bank0
 11331  082B  00A3               	movwf	___ftdiv@f1
 11332  082C  0879               	movf	?___awtoft+1,w
 11333  082D  00A4               	movwf	___ftdiv@f1+1
 11334  082E  087A               	movf	?___awtoft+2,w
 11335  082F  00A5               	movwf	___ftdiv@f1+2
 11336  0830  3089               	movlw	137
 11337  0831  00A0               	movwf	___ftdiv@f2
 11338  0832  30CD               	movlw	205
 11339  0833  00A1               	movwf	___ftdiv@f2+1
 11340  0834  303F               	movlw	63
 11341  0835  00A2               	movwf	___ftdiv@f2+2
 11342  0836  3197  2757  3188   	fcall	___ftdiv
 11343  0839  0020               	movlb	0	; select bank0
 11344  083A  0820               	movf	?___ftdiv,w
 11345  083B  00B0               	movwf	___fttol@f1
 11346  083C  0821               	movf	?___ftdiv+1,w
 11347  083D  00B1               	movwf	___fttol@f1+1
 11348  083E  0822               	movf	?___ftdiv+2,w
 11349  083F  00B2               	movwf	___fttol@f1+2
 11350  0840  3180  2019         	fcall	___fttol
 11351  0842  0020               	movlb	0	; select bank0
 11352  0843  0831               	movf	?___fttol+1,w
 11353  0844  0021               	movlb	1	; select bank1
 11354  0845  00B7               	movwf	((_current+1)^(0+128)+6)
 11355  0846  0020               	movlb	0	; select bank0
 11356  0847  0830               	movf	?___fttol,w
 11357  0848  0021               	movlb	1	; select bank1
 11358  0849  00B6               	movwf	(_current^(0+128)+6)
 11359  084A  0008               	return
 11360  084B                     __end_of_calculateCurrent3:	
 11361                           
 11362                           	psect	text15
 11363  1442                     __ptext15:	
 11364 ;; *************** function _calculateCurrent2 *****************
 11365 ;; Defined at:
 11366 ;;		line 412 in file "main.c"
 11367 ;; Parameters:    Size  Location     Type
 11368 ;;		None
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;		None
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg, status,2, status,0, pclath, cstack
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11382 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;Total ram usage:        3 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:    2
 11387 ;; This function calls:
 11388 ;;		___awtoft
 11389 ;;		___ftdiv
 11390 ;;		___fttol
 11391 ;; This function is called by:
 11392 ;;		_main
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396                           
 11397                           ;psect for function _calculateCurrent2
 11398  1442                     _calculateCurrent2:	
 11399                           
 11400                           ;main.c: 414: if(Ianalogs[2]-589<=0)
 11401                           
 11402                           ;incstack = 0
 11403                           ; Regs used in _calculateCurrent2: [wreg+status,2+status,0+pclath+cstack]
 11404  1442  0021               	movlb	1	; select bank1
 11405  1443  0824               	movf	(_Ianalogs^(0+128)+4),w
 11406  1444  3EB3               	addlw	179
 11407  1445  0020               	movlb	0	; select bank0
 11408  1446  00BE               	movwf	??_calculateCurrent2
 11409  1447  30FD               	movlw	253
 11410  1448  0021               	movlb	1	; select bank1
 11411  1449  3D25               	addwfc	((_Ianalogs+1)^(0+128)+4),w
 11412  144A  0020               	movlb	0	; select bank0
 11413  144B  00BF               	movwf	??_calculateCurrent2+1
 11414  144C  083F               	movf	??_calculateCurrent2+1,w
 11415  144D  3A80               	xorlw	128
 11416  144E  00C0               	movwf	??_calculateCurrent2+2
 11417  144F  3080               	movlw	128
 11418  1450  0240               	subwf	??_calculateCurrent2+2,w
 11419  1451  1D03               	skipz
 11420  1452  2C55               	goto	u3895
 11421  1453  3001               	movlw	1
 11422  1454  023E               	subwf	??_calculateCurrent2,w
 11423  1455                     u3895:	
 11424  1455  1803               	skipnc
 11425  1456  2C5B               	goto	l3227
 11426                           
 11427                           ;main.c: 415: {
 11428                           ;main.c: 416: current[2]=0;
 11429  1457  0021               	movlb	1	; select bank1
 11430  1458  01B4               	clrf	(_current^(0+128)+4)
 11431  1459  01B5               	clrf	((_current+1)^(0+128)+4)
 11432                           
 11433                           ;main.c: 417: }
 11434  145A  0008               	return
 11435  145B                     l3227:	
 11436                           
 11437                           ;main.c: 418: else
 11438                           ;main.c: 419: {
 11439                           ;main.c: 420: current[2]=(int16_t)((Ianalogs[2]-589)/1.3165);
 11440  145B  0021               	movlb	1	; select bank1
 11441  145C  0824               	movf	(_Ianalogs^(0+128)+4),w
 11442  145D  3EB3               	addlw	179
 11443  145E  00F8               	movwf	___awtoft@c
 11444  145F  30FD               	movlw	253
 11445  1460  3D25               	addwfc	((_Ianalogs+1)^(0+128)+4),w
 11446  1461  00F9               	movwf	___awtoft@c+1
 11447  1462  3191  21FE  3194   	fcall	___awtoft
 11448  1465  0878               	movf	?___awtoft,w
 11449  1466  0020               	movlb	0	; select bank0
 11450  1467  00A3               	movwf	___ftdiv@f1
 11451  1468  0879               	movf	?___awtoft+1,w
 11452  1469  00A4               	movwf	___ftdiv@f1+1
 11453  146A  087A               	movf	?___awtoft+2,w
 11454  146B  00A5               	movwf	___ftdiv@f1+2
 11455  146C  3083               	movlw	131
 11456  146D  00A0               	movwf	___ftdiv@f2
 11457  146E  30A8               	movlw	168
 11458  146F  00A1               	movwf	___ftdiv@f2+1
 11459  1470  303F               	movlw	63
 11460  1471  00A2               	movwf	___ftdiv@f2+2
 11461  1472  3197  2757  3194   	fcall	___ftdiv
 11462  1475  0020               	movlb	0	; select bank0
 11463  1476  0820               	movf	?___ftdiv,w
 11464  1477  00B0               	movwf	___fttol@f1
 11465  1478  0821               	movf	?___ftdiv+1,w
 11466  1479  00B1               	movwf	___fttol@f1+1
 11467  147A  0822               	movf	?___ftdiv+2,w
 11468  147B  00B2               	movwf	___fttol@f1+2
 11469  147C  3180  2019         	fcall	___fttol
 11470  147E  0020               	movlb	0	; select bank0
 11471  147F  0831               	movf	?___fttol+1,w
 11472  1480  0021               	movlb	1	; select bank1
 11473  1481  00B5               	movwf	((_current+1)^(0+128)+4)
 11474  1482  0020               	movlb	0	; select bank0
 11475  1483  0830               	movf	?___fttol,w
 11476  1484  0021               	movlb	1	; select bank1
 11477  1485  00B4               	movwf	(_current^(0+128)+4)
 11478  1486  0008               	return
 11479  1487                     __end_of_calculateCurrent2:	
 11480                           
 11481                           	psect	text16
 11482  13FD                     __ptext16:	
 11483 ;; *************** function _calculateCurrent1 *****************
 11484 ;; Defined at:
 11485 ;;		line 400 in file "main.c"
 11486 ;; Parameters:    Size  Location     Type
 11487 ;;		None
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;		None
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  1    wreg      void 
 11492 ;; Registers used:
 11493 ;;		wreg, status,2, status,0, pclath, cstack
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;Total ram usage:        3 bytes
 11504 ;; Hardware stack levels used:    1
 11505 ;; Hardware stack levels required when called:    2
 11506 ;; This function calls:
 11507 ;;		___awtoft
 11508 ;;		___ftdiv
 11509 ;;		___fttol
 11510 ;; This function is called by:
 11511 ;;		_main
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           
 11516                           ;psect for function _calculateCurrent1
 11517  13FD                     _calculateCurrent1:	
 11518                           
 11519                           ;main.c: 402: if(Ianalogs[1]-561<=0)
 11520                           
 11521                           ;incstack = 0
 11522                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 11523  13FD  0021               	movlb	1	; select bank1
 11524  13FE  0822               	movf	(_Ianalogs^(0+128)+2),w
 11525  13FF  3ECF               	addlw	207
 11526  1400  0020               	movlb	0	; select bank0
 11527  1401  00BE               	movwf	??_calculateCurrent1
 11528  1402  30FD               	movlw	253
 11529  1403  0021               	movlb	1	; select bank1
 11530  1404  3D23               	addwfc	((_Ianalogs+1)^(0+128)+2),w
 11531  1405  0020               	movlb	0	; select bank0
 11532  1406  00BF               	movwf	??_calculateCurrent1+1
 11533  1407  083F               	movf	??_calculateCurrent1+1,w
 11534  1408  3A80               	xorlw	128
 11535  1409  00C0               	movwf	??_calculateCurrent1+2
 11536  140A  3080               	movlw	128
 11537  140B  0240               	subwf	??_calculateCurrent1+2,w
 11538  140C  1D03               	skipz
 11539  140D  2C10               	goto	u3885
 11540  140E  3001               	movlw	1
 11541  140F  023E               	subwf	??_calculateCurrent1,w
 11542  1410                     u3885:	
 11543  1410  1803               	skipnc
 11544  1411  2C16               	goto	l3221
 11545                           
 11546                           ;main.c: 403: {
 11547                           ;main.c: 404: current[1]=0;
 11548  1412  0021               	movlb	1	; select bank1
 11549  1413  01B2               	clrf	(_current^(0+128)+2)
 11550  1414  01B3               	clrf	((_current+1)^(0+128)+2)
 11551                           
 11552                           ;main.c: 405: }
 11553  1415  0008               	return
 11554  1416                     l3221:	
 11555                           
 11556                           ;main.c: 406: else
 11557                           ;main.c: 407: {
 11558                           ;main.c: 408: current[1]=(int16_t)((Ianalogs[1]-561)/1.99055);
 11559  1416  0021               	movlb	1	; select bank1
 11560  1417  0822               	movf	(_Ianalogs^(0+128)+2),w
 11561  1418  3ECF               	addlw	207
 11562  1419  00F8               	movwf	___awtoft@c
 11563  141A  30FD               	movlw	253
 11564  141B  3D23               	addwfc	((_Ianalogs+1)^(0+128)+2),w
 11565  141C  00F9               	movwf	___awtoft@c+1
 11566  141D  3191  21FE  3193   	fcall	___awtoft
 11567  1420  0878               	movf	?___awtoft,w
 11568  1421  0020               	movlb	0	; select bank0
 11569  1422  00A3               	movwf	___ftdiv@f1
 11570  1423  0879               	movf	?___awtoft+1,w
 11571  1424  00A4               	movwf	___ftdiv@f1+1
 11572  1425  087A               	movf	?___awtoft+2,w
 11573  1426  00A5               	movwf	___ftdiv@f1+2
 11574  1427  30CA               	movlw	202
 11575  1428  00A0               	movwf	___ftdiv@f2
 11576  1429  30FE               	movlw	254
 11577  142A  00A1               	movwf	___ftdiv@f2+1
 11578  142B  303F               	movlw	63
 11579  142C  00A2               	movwf	___ftdiv@f2+2
 11580  142D  3197  2757  3193   	fcall	___ftdiv
 11581  1430  0020               	movlb	0	; select bank0
 11582  1431  0820               	movf	?___ftdiv,w
 11583  1432  00B0               	movwf	___fttol@f1
 11584  1433  0821               	movf	?___ftdiv+1,w
 11585  1434  00B1               	movwf	___fttol@f1+1
 11586  1435  0822               	movf	?___ftdiv+2,w
 11587  1436  00B2               	movwf	___fttol@f1+2
 11588  1437  3180  2019         	fcall	___fttol
 11589  1439  0020               	movlb	0	; select bank0
 11590  143A  0831               	movf	?___fttol+1,w
 11591  143B  0021               	movlb	1	; select bank1
 11592  143C  00B3               	movwf	((_current+1)^(0+128)+2)
 11593  143D  0020               	movlb	0	; select bank0
 11594  143E  0830               	movf	?___fttol,w
 11595  143F  0021               	movlb	1	; select bank1
 11596  1440  00B2               	movwf	(_current^(0+128)+2)
 11597  1441  0008               	return
 11598  1442                     __end_of_calculateCurrent1:	
 11599                           
 11600                           	psect	text17
 11601  13B8                     __ptext17:	
 11602 ;; *************** function _calculateCurrent0 *****************
 11603 ;; Defined at:
 11604 ;;		line 388 in file "main.c"
 11605 ;; Parameters:    Size  Location     Type
 11606 ;;		None
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;		None
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  1    wreg      void 
 11611 ;; Registers used:
 11612 ;;		wreg, status,2, status,0, pclath, cstack
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/0
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11621 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11622 ;;Total ram usage:        3 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:    2
 11625 ;; This function calls:
 11626 ;;		___awtoft
 11627 ;;		___ftdiv
 11628 ;;		___fttol
 11629 ;; This function is called by:
 11630 ;;		_main
 11631 ;; This function uses a non-reentrant model
 11632 ;;
 11633                           
 11634                           
 11635                           ;psect for function _calculateCurrent0
 11636  13B8                     _calculateCurrent0:	
 11637                           
 11638                           ;main.c: 390: if(Ianalogs[0]-578<=0)
 11639                           
 11640                           ;incstack = 0
 11641                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 11642  13B8  0021               	movlb	1	; select bank1
 11643  13B9  0820               	movf	_Ianalogs^(0+128),w
 11644  13BA  3EBE               	addlw	190
 11645  13BB  0020               	movlb	0	; select bank0
 11646  13BC  00BE               	movwf	??_calculateCurrent0
 11647  13BD  30FD               	movlw	253
 11648  13BE  0021               	movlb	1	; select bank1
 11649  13BF  3D21               	addwfc	(_Ianalogs+1)^(0+128),w
 11650  13C0  0020               	movlb	0	; select bank0
 11651  13C1  00BF               	movwf	??_calculateCurrent0+1
 11652  13C2  083F               	movf	??_calculateCurrent0+1,w
 11653  13C3  3A80               	xorlw	128
 11654  13C4  00C0               	movwf	??_calculateCurrent0+2
 11655  13C5  3080               	movlw	128
 11656  13C6  0240               	subwf	??_calculateCurrent0+2,w
 11657  13C7  1D03               	skipz
 11658  13C8  2BCB               	goto	u3875
 11659  13C9  3001               	movlw	1
 11660  13CA  023E               	subwf	??_calculateCurrent0,w
 11661  13CB                     u3875:	
 11662  13CB  1803               	skipnc
 11663  13CC  2BD1               	goto	l3215
 11664                           
 11665                           ;main.c: 391: {
 11666                           ;main.c: 392: current[0]=0;
 11667  13CD  0021               	movlb	1	; select bank1
 11668  13CE  01B0               	clrf	_current^(0+128)
 11669  13CF  01B1               	clrf	(_current+1)^(0+128)
 11670                           
 11671                           ;main.c: 393: }
 11672  13D0  0008               	return
 11673  13D1                     l3215:	
 11674                           
 11675                           ;main.c: 394: else
 11676                           ;main.c: 395: {
 11677                           ;main.c: 396: current[0]=(int16_t)((Ianalogs[0]-578)/3.2323);
 11678  13D1  0021               	movlb	1	; select bank1
 11679  13D2  0820               	movf	_Ianalogs^(0+128),w
 11680  13D3  3EBE               	addlw	190
 11681  13D4  00F8               	movwf	___awtoft@c
 11682  13D5  30FD               	movlw	253
 11683  13D6  3D21               	addwfc	(_Ianalogs+1)^(0+128),w
 11684  13D7  00F9               	movwf	___awtoft@c+1
 11685  13D8  3191  21FE  3193   	fcall	___awtoft
 11686  13DB  0878               	movf	?___awtoft,w
 11687  13DC  0020               	movlb	0	; select bank0
 11688  13DD  00A3               	movwf	___ftdiv@f1
 11689  13DE  0879               	movf	?___awtoft+1,w
 11690  13DF  00A4               	movwf	___ftdiv@f1+1
 11691  13E0  087A               	movf	?___awtoft+2,w
 11692  13E1  00A5               	movwf	___ftdiv@f1+2
 11693  13E2  30DE               	movlw	222
 11694  13E3  00A0               	movwf	___ftdiv@f2
 11695  13E4  304E               	movlw	78
 11696  13E5  00A1               	movwf	___ftdiv@f2+1
 11697  13E6  3040               	movlw	64
 11698  13E7  00A2               	movwf	___ftdiv@f2+2
 11699  13E8  3197  2757  3193   	fcall	___ftdiv
 11700  13EB  0020               	movlb	0	; select bank0
 11701  13EC  0820               	movf	?___ftdiv,w
 11702  13ED  00B0               	movwf	___fttol@f1
 11703  13EE  0821               	movf	?___ftdiv+1,w
 11704  13EF  00B1               	movwf	___fttol@f1+1
 11705  13F0  0822               	movf	?___ftdiv+2,w
 11706  13F1  00B2               	movwf	___fttol@f1+2
 11707  13F2  3180  2019         	fcall	___fttol
 11708  13F4  0020               	movlb	0	; select bank0
 11709  13F5  0831               	movf	?___fttol+1,w
 11710  13F6  0021               	movlb	1	; select bank1
 11711  13F7  00B1               	movwf	(_current+1)^(0+128)
 11712  13F8  0020               	movlb	0	; select bank0
 11713  13F9  0830               	movf	?___fttol,w
 11714  13FA  0021               	movlb	1	; select bank1
 11715  13FB  00B0               	movwf	_current^(0+128)
 11716  13FC  0008               	return
 11717  13FD                     __end_of_calculateCurrent0:	
 11718                           
 11719                           	psect	text18
 11720  1757                     __ptext18:	
 11721 ;; *************** function ___ftdiv *****************
 11722 ;; Defined at:
 11723 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;  f2              3    0[BANK0 ] float 
 11726 ;;  f1              3    3[BANK0 ] float 
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;  f3              3   11[BANK0 ] float 
 11729 ;;  sign            1   15[BANK0 ] unsigned char 
 11730 ;;  exp             1   14[BANK0 ] unsigned char 
 11731 ;;  cntr            1   10[BANK0 ] unsigned char 
 11732 ;; Return value:  Size  Location     Type
 11733 ;;                  3    0[BANK0 ] float 
 11734 ;; Registers used:
 11735 ;;		wreg, status,2, status,0, pclath, cstack
 11736 ;; Tracked objects:
 11737 ;;		On entry : 0/0
 11738 ;;		On exit  : 0/0
 11739 ;;		Unchanged: 0/0
 11740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11741 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11743 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11744 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11745 ;;Total ram usage:       16 bytes
 11746 ;; Hardware stack levels used:    1
 11747 ;; Hardware stack levels required when called:    1
 11748 ;; This function calls:
 11749 ;;		___ftpack
 11750 ;; This function is called by:
 11751 ;;		_tempCalc
 11752 ;;		_main
 11753 ;;		_calculateCurrent0
 11754 ;;		_calculateCurrent1
 11755 ;;		_calculateCurrent2
 11756 ;;		_calculateCurrent3
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760                           
 11761                           ;psect for function ___ftdiv
 11762  1757                     ___ftdiv:	
 11763                           
 11764                           ;incstack = 0
 11765                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11766  1757  0020               	movlb	0	; select bank0
 11767  1758  0823               	movf	___ftdiv@f1,w
 11768  1759  00A6               	movwf	??___ftdiv
 11769  175A  0824               	movf	___ftdiv@f1+1,w
 11770  175B  00A7               	movwf	??___ftdiv+1
 11771  175C  0825               	movf	___ftdiv@f1+2,w
 11772  175D  00A8               	movwf	??___ftdiv+2
 11773  175E  1003               	clrc
 11774  175F  0D27               	rlf	??___ftdiv+1,w
 11775  1760  0D28               	rlf	??___ftdiv+2,w
 11776  1761  00A9               	movwf	??___ftdiv+3
 11777  1762  0829               	movf	??___ftdiv+3,w
 11778  1763  00AE               	movwf	___ftdiv@exp
 11779  1764  082E               	movf	___ftdiv@exp,w
 11780  1765  1D03               	btfss	3,2
 11781  1766  2F6E               	goto	l2893
 11782  1767  3000               	movlw	0
 11783  1768  00A0               	movwf	?___ftdiv
 11784  1769  3000               	movlw	0
 11785  176A  00A1               	movwf	?___ftdiv+1
 11786  176B  3000               	movlw	0
 11787  176C  00A2               	movwf	?___ftdiv+2
 11788  176D  0008               	return
 11789  176E                     l2893:	
 11790  176E  0820               	movf	___ftdiv@f2,w
 11791  176F  00A6               	movwf	??___ftdiv
 11792  1770  0821               	movf	___ftdiv@f2+1,w
 11793  1771  00A7               	movwf	??___ftdiv+1
 11794  1772  0822               	movf	___ftdiv@f2+2,w
 11795  1773  00A8               	movwf	??___ftdiv+2
 11796  1774  1003               	clrc
 11797  1775  0D27               	rlf	??___ftdiv+1,w
 11798  1776  0D28               	rlf	??___ftdiv+2,w
 11799  1777  00A9               	movwf	??___ftdiv+3
 11800  1778  0829               	movf	??___ftdiv+3,w
 11801  1779  00AF               	movwf	___ftdiv@sign
 11802  177A  082F               	movf	___ftdiv@sign,w
 11803  177B  1D03               	btfss	3,2
 11804  177C  2F84               	goto	l2899
 11805  177D  3000               	movlw	0
 11806  177E  00A0               	movwf	?___ftdiv
 11807  177F  3000               	movlw	0
 11808  1780  00A1               	movwf	?___ftdiv+1
 11809  1781  3000               	movlw	0
 11810  1782  00A2               	movwf	?___ftdiv+2
 11811  1783  0008               	return
 11812  1784                     l2899:	
 11813  1784  3000               	movlw	0
 11814  1785  00AB               	movwf	___ftdiv@f3
 11815  1786  3000               	movlw	0
 11816  1787  00AC               	movwf	___ftdiv@f3+1
 11817  1788  3000               	movlw	0
 11818  1789  00AD               	movwf	___ftdiv@f3+2
 11819  178A  3089               	movlw	137
 11820  178B  072F               	addwf	___ftdiv@sign,w
 11821  178C  00A6               	movwf	??___ftdiv
 11822  178D  0826               	movf	??___ftdiv,w
 11823  178E  02AE               	subwf	___ftdiv@exp,f
 11824  178F  0823               	movf	___ftdiv@f1,w
 11825  1790  00A6               	movwf	??___ftdiv
 11826  1791  0824               	movf	___ftdiv@f1+1,w
 11827  1792  00A7               	movwf	??___ftdiv+1
 11828  1793  0825               	movf	___ftdiv@f1+2,w
 11829  1794  00A8               	movwf	??___ftdiv+2
 11830  1795  3010               	movlw	16
 11831  1796                     u3175:	
 11832  1796  36A8               	lsrf	??___ftdiv+2,f
 11833  1797  0CA7               	rrf	??___ftdiv+1,f
 11834  1798  0CA6               	rrf	??___ftdiv,f
 11835  1799  0B89               	decfsz	9,f
 11836  179A  2F96               	goto	u3175
 11837  179B  0826               	movf	??___ftdiv,w
 11838  179C  00A9               	movwf	??___ftdiv+3
 11839  179D  0829               	movf	??___ftdiv+3,w
 11840  179E  00AF               	movwf	___ftdiv@sign
 11841  179F  0820               	movf	___ftdiv@f2,w
 11842  17A0  00A6               	movwf	??___ftdiv
 11843  17A1  0821               	movf	___ftdiv@f2+1,w
 11844  17A2  00A7               	movwf	??___ftdiv+1
 11845  17A3  0822               	movf	___ftdiv@f2+2,w
 11846  17A4  00A8               	movwf	??___ftdiv+2
 11847  17A5  3010               	movlw	16
 11848  17A6                     u3185:	
 11849  17A6  36A8               	lsrf	??___ftdiv+2,f
 11850  17A7  0CA7               	rrf	??___ftdiv+1,f
 11851  17A8  0CA6               	rrf	??___ftdiv,f
 11852  17A9  0B89               	decfsz	9,f
 11853  17AA  2FA6               	goto	u3185
 11854  17AB  0826               	movf	??___ftdiv,w
 11855  17AC  00A9               	movwf	??___ftdiv+3
 11856  17AD  0829               	movf	??___ftdiv+3,w
 11857  17AE  06AF               	xorwf	___ftdiv@sign,f
 11858  17AF  3080               	movlw	128
 11859  17B0  00A6               	movwf	??___ftdiv
 11860  17B1  0826               	movf	??___ftdiv,w
 11861  17B2  05AF               	andwf	___ftdiv@sign,f
 11862  17B3  17A4               	bsf	___ftdiv@f1+1,7
 11863  17B4  30FF               	movlw	255
 11864  17B5  05A3               	andwf	___ftdiv@f1,f
 11865  17B6  30FF               	movlw	255
 11866  17B7  05A4               	andwf	___ftdiv@f1+1,f
 11867  17B8  3000               	movlw	0
 11868  17B9  05A5               	andwf	___ftdiv@f1+2,f
 11869  17BA  17A1               	bsf	___ftdiv@f2+1,7
 11870  17BB  30FF               	movlw	255
 11871  17BC  05A0               	andwf	___ftdiv@f2,f
 11872  17BD  30FF               	movlw	255
 11873  17BE  05A1               	andwf	___ftdiv@f2+1,f
 11874  17BF  3000               	movlw	0
 11875  17C0  05A2               	andwf	___ftdiv@f2+2,f
 11876  17C1  3018               	movlw	24
 11877  17C2  00A6               	movwf	??___ftdiv
 11878  17C3  0826               	movf	??___ftdiv,w
 11879  17C4  00AA               	movwf	___ftdiv@cntr
 11880  17C5                     l2913:	
 11881  17C5  3001               	movlw	1
 11882  17C6                     u3195:	
 11883  17C6  35AB               	lslf	___ftdiv@f3,f
 11884  17C7  0DAC               	rlf	___ftdiv@f3+1,f
 11885  17C8  0DAD               	rlf	___ftdiv@f3+2,f
 11886  17C9  0B89               	decfsz	9,f
 11887  17CA  2FC6               	goto	u3195
 11888  17CB  0822               	movf	___ftdiv@f2+2,w
 11889  17CC  0225               	subwf	___ftdiv@f1+2,w
 11890  17CD  1D03               	skipz
 11891  17CE  2FD5               	goto	u3205
 11892  17CF  0821               	movf	___ftdiv@f2+1,w
 11893  17D0  0224               	subwf	___ftdiv@f1+1,w
 11894  17D1  1D03               	skipz
 11895  17D2  2FD5               	goto	u3205
 11896  17D3  0820               	movf	___ftdiv@f2,w
 11897  17D4  0223               	subwf	___ftdiv@f1,w
 11898  17D5                     u3205:	
 11899  17D5  1C03               	skipc
 11900  17D6  2FDE               	goto	l2921
 11901  17D7  0820               	movf	___ftdiv@f2,w
 11902  17D8  02A3               	subwf	___ftdiv@f1,f
 11903  17D9  0821               	movf	___ftdiv@f2+1,w
 11904  17DA  3BA4               	subwfb	___ftdiv@f1+1,f
 11905  17DB  0822               	movf	___ftdiv@f2+2,w
 11906  17DC  3BA5               	subwfb	___ftdiv@f1+2,f
 11907  17DD  142B               	bsf	___ftdiv@f3,0
 11908  17DE                     l2921:	
 11909  17DE  3001               	movlw	1
 11910  17DF                     u3215:	
 11911  17DF  35A3               	lslf	___ftdiv@f1,f
 11912  17E0  0DA4               	rlf	___ftdiv@f1+1,f
 11913  17E1  0DA5               	rlf	___ftdiv@f1+2,f
 11914  17E2  0B89               	decfsz	9,f
 11915  17E3  2FDF               	goto	u3215
 11916  17E4  3001               	movlw	1
 11917  17E5  02AA               	subwf	___ftdiv@cntr,f
 11918  17E6  1D03               	btfss	3,2
 11919  17E7  2FC5               	goto	l2913
 11920  17E8  082B               	movf	___ftdiv@f3,w
 11921  17E9  00F0               	movwf	___ftpack@arg
 11922  17EA  082C               	movf	___ftdiv@f3+1,w
 11923  17EB  00F1               	movwf	___ftpack@arg+1
 11924  17EC  082D               	movf	___ftdiv@f3+2,w
 11925  17ED  00F2               	movwf	___ftpack@arg+2
 11926  17EE  082E               	movf	___ftdiv@exp,w
 11927  17EF  00A6               	movwf	??___ftdiv
 11928  17F0  0826               	movf	??___ftdiv,w
 11929  17F1  00F3               	movwf	___ftpack@exp
 11930  17F2  082F               	movf	___ftdiv@sign,w
 11931  17F3  00A7               	movwf	??___ftdiv+1
 11932  17F4  0827               	movf	??___ftdiv+1,w
 11933  17F5  00F4               	movwf	___ftpack@sign
 11934  17F6  3195  25EF         	fcall	___ftpack
 11935  17F8  0870               	movf	?___ftpack,w
 11936  17F9  0020               	movlb	0	; select bank0
 11937  17FA  00A0               	movwf	?___ftdiv
 11938  17FB  0871               	movf	?___ftpack+1,w
 11939  17FC  00A1               	movwf	?___ftdiv+1
 11940  17FD  0872               	movf	?___ftpack+2,w
 11941  17FE  00A2               	movwf	?___ftdiv+2
 11942  17FF  0008               	return
 11943  1800                     __end_of___ftdiv:	
 11944                           
 11945                           	psect	text19
 11946  1307                     __ptext19:	
 11947 ;; *************** function _SYSTEM_Initialize *****************
 11948 ;; Defined at:
 11949 ;;		line 35 in file "system.c"
 11950 ;; Parameters:    Size  Location     Type
 11951 ;;		None
 11952 ;; Auto vars:     Size  Location     Type
 11953 ;;		None
 11954 ;; Return value:  Size  Location     Type
 11955 ;;                  1    wreg      void 
 11956 ;; Registers used:
 11957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11958 ;; Tracked objects:
 11959 ;;		On entry : 0/0
 11960 ;;		On exit  : 0/0
 11961 ;;		Unchanged: 0/0
 11962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11965 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11967 ;;Total ram usage:        2 bytes
 11968 ;; Hardware stack levels used:    1
 11969 ;; Hardware stack levels required when called:    3
 11970 ;; This function calls:
 11971 ;;		_ADC_Initialize
 11972 ;;		_Init_Battery_State_Machine
 11973 ;;		_LCDClear
 11974 ;;		_LCDInit
 11975 ;;		_OSCILLATOR_Initialize
 11976 ;;		_PIN_MANAGER_Initialize
 11977 ;;		_PWM_Initialize
 11978 ;;		_TMR2_Initialize
 11979 ;;		_TMR4_Initialize
 11980 ;; This function is called by:
 11981 ;;		_main
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           
 11986                           ;psect for function _SYSTEM_Initialize
 11987  1307                     _SYSTEM_Initialize:	
 11988                           
 11989                           ;system.c: 37: PIN_MANAGER_Initialize();
 11990                           
 11991                           ;incstack = 0
 11992                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11993  1307  3192  2295  3193   	fcall	_PIN_MANAGER_Initialize
 11994                           
 11995                           ;system.c: 38: OSCILLATOR_Initialize();
 11996  130A  319F  27A0  3193   	fcall	_OSCILLATOR_Initialize
 11997                           
 11998                           ;system.c: 40: ADC_Initialize();
 11999  130D  3191  21C0  3193   	fcall	_ADC_Initialize
 12000                           
 12001                           ;system.c: 41: PWM_Initialize();
 12002  1310  3191  21DF  3193   	fcall	_PWM_Initialize
 12003                           
 12004                           ;system.c: 43: TMR2_Initialize();
 12005  1313  319F  27C1  3193   	fcall	_TMR2_Initialize
 12006                           
 12007                           ;system.c: 44: TMR4_Initialize();
 12008  1316  319F  27CF  3193   	fcall	_TMR4_Initialize
 12009                           
 12010                           ;system.c: 45: Init_Battery_State_Machine(0);
 12011  1319  3000               	movlw	0
 12012  131A  3195  258C  3193   	fcall	_Init_Battery_State_Machine
 12013                           
 12014                           ;system.c: 46: Init_Battery_State_Machine(1);
 12015  131D  3001               	movlw	1
 12016  131E  3195  258C  3193   	fcall	_Init_Battery_State_Machine
 12017                           
 12018                           ;system.c: 47: LCDInit();
 12019  1321  3192  22CC  3193   	fcall	_LCDInit
 12020                           
 12021                           ;system.c: 48: _delay((unsigned long)((200)*(32000000/4000.0)));
 12022  1324  3009               	movlw	9
 12023  1325  0020               	movlb	0	; select bank0
 12024  1326  00C4               	movwf	??_SYSTEM_Initialize+1
 12025  1327  301E               	movlw	30
 12026  1328  00C3               	movwf	??_SYSTEM_Initialize
 12027  1329  30E4               	movlw	228
 12028  132A                     u4347:	
 12029  132A  0B89               	decfsz	9,f
 12030  132B  2B2A               	goto	u4347
 12031  132C  0BC3               	decfsz	??_SYSTEM_Initialize,f
 12032  132D  2B2A               	goto	u4347
 12033  132E  0BC4               	decfsz	??_SYSTEM_Initialize+1,f
 12034  132F  2B2A               	goto	u4347
 12035  1330  0000               	nop
 12036                           
 12037                           ;system.c: 49: LCDClear();
 12038  1331  3192  2243  3193   	fcall	_LCDClear
 12039                           
 12040                           ;system.c: 50: _delay((unsigned long)((200)*(32000000/4000.0)));
 12041  1334  3009               	movlw	9
 12042  1335  0020               	movlb	0	; select bank0
 12043  1336  00C4               	movwf	??_SYSTEM_Initialize+1
 12044  1337  301E               	movlw	30
 12045  1338  00C3               	movwf	??_SYSTEM_Initialize
 12046  1339  30E4               	movlw	228
 12047  133A                     u4357:	
 12048  133A  0B89               	decfsz	9,f
 12049  133B  2B3A               	goto	u4357
 12050  133C  0BC3               	decfsz	??_SYSTEM_Initialize,f
 12051  133D  2B3A               	goto	u4357
 12052  133E  0BC4               	decfsz	??_SYSTEM_Initialize+1,f
 12053  133F  2B3A               	goto	u4357
 12054  1340  0000               	nop
 12055  1341  0008               	return
 12056  1342                     __end_of_SYSTEM_Initialize:	
 12057                           
 12058                           	psect	text20
 12059  1FCF                     __ptext20:	
 12060 ;; *************** function _TMR4_Initialize *****************
 12061 ;; Defined at:
 12062 ;;		line 25 in file "tmr.c"
 12063 ;; Parameters:    Size  Location     Type
 12064 ;;		None
 12065 ;; Auto vars:     Size  Location     Type
 12066 ;;		None
 12067 ;; Return value:  Size  Location     Type
 12068 ;;                  1    wreg      void 
 12069 ;; Registers used:
 12070 ;;		wreg, status,2
 12071 ;; Tracked objects:
 12072 ;;		On entry : 0/0
 12073 ;;		On exit  : 0/0
 12074 ;;		Unchanged: 0/0
 12075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12080 ;;Total ram usage:        0 bytes
 12081 ;; Hardware stack levels used:    1
 12082 ;; This function calls:
 12083 ;;		Nothing
 12084 ;; This function is called by:
 12085 ;;		_SYSTEM_Initialize
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           
 12090                           ;psect for function _TMR4_Initialize
 12091  1FCF                     _TMR4_Initialize:	
 12092                           
 12093                           ;tmr.c: 27: T4CON = 0x00;
 12094                           
 12095                           ;incstack = 0
 12096                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 12097  1FCF  0025               	movlb	5	; select bank5
 12098  1FD0  0194               	clrf	20	;volatile
 12099                           
 12100                           ;tmr.c: 29: T4CLKCON = 0x01;
 12101  1FD1  3001               	movlw	1
 12102  1FD2  0096               	movwf	22	;volatile
 12103                           
 12104                           ;tmr.c: 31: T4HLT = 0x00;
 12105  1FD3  0195               	clrf	21	;volatile
 12106                           
 12107                           ;tmr.c: 33: T4RST = 0x00;
 12108  1FD4  0197               	clrf	23	;volatile
 12109                           
 12110                           ;tmr.c: 35: T4PR = 0xFE;
 12111  1FD5  30FE               	movlw	254
 12112  1FD6  0093               	movwf	19	;volatile
 12113                           
 12114                           ;tmr.c: 39: T4TMR = 0x00;
 12115  1FD7  0192               	clrf	18	;volatile
 12116                           
 12117                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 12118  1FD8  002E               	movlb	14	; select bank14
 12119  1FD9  1190               	bcf	16,3	;volatile
 12120                           
 12121                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 12122  1FDA  0025               	movlb	5	; select bank5
 12123  1FDB  1794               	bsf	20,7	;volatile
 12124  1FDC  0008               	return
 12125  1FDD                     __end_of_TMR4_Initialize:	
 12126                           
 12127                           	psect	text21
 12128  1FC1                     __ptext21:	
 12129 ;; *************** function _TMR2_Initialize *****************
 12130 ;; Defined at:
 12131 ;;		line 3 in file "tmr.c"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;		None
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;		None
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  1    wreg      void 
 12138 ;; Registers used:
 12139 ;;		wreg, status,2
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12149 ;;Total ram usage:        0 bytes
 12150 ;; Hardware stack levels used:    1
 12151 ;; This function calls:
 12152 ;;		Nothing
 12153 ;; This function is called by:
 12154 ;;		_SYSTEM_Initialize
 12155 ;; This function uses a non-reentrant model
 12156 ;;
 12157                           
 12158                           
 12159                           ;psect for function _TMR2_Initialize
 12160  1FC1                     _TMR2_Initialize:	
 12161                           
 12162                           ;tmr.c: 5: T2CON = 0x00;
 12163                           
 12164                           ;incstack = 0
 12165                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12166  1FC1  0025               	movlb	5	; select bank5
 12167  1FC2  018E               	clrf	14	;volatile
 12168                           
 12169                           ;tmr.c: 7: T2CLKCON = 0x01;
 12170  1FC3  3001               	movlw	1
 12171  1FC4  0090               	movwf	16	;volatile
 12172                           
 12173                           ;tmr.c: 9: T2HLT = 0x00;
 12174  1FC5  018F               	clrf	15	;volatile
 12175                           
 12176                           ;tmr.c: 11: T2RST = 0x00;
 12177  1FC6  0191               	clrf	17	;volatile
 12178                           
 12179                           ;tmr.c: 13: T2PR = 0xFE;
 12180  1FC7  30FE               	movlw	254
 12181  1FC8  008D               	movwf	13	;volatile
 12182                           
 12183                           ;tmr.c: 18: T2TMR = 0x00;
 12184  1FC9  018C               	clrf	12	;volatile
 12185                           
 12186                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 12187  1FCA  002E               	movlb	14	; select bank14
 12188  1FCB  1090               	bcf	16,1	;volatile
 12189                           
 12190                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 12191  1FCC  0025               	movlb	5	; select bank5
 12192  1FCD  178E               	bsf	14,7	;volatile
 12193  1FCE  0008               	return
 12194  1FCF                     __end_of_TMR2_Initialize:	
 12195                           
 12196                           	psect	text22
 12197  11DF                     __ptext22:	
 12198 ;; *************** function _PWM_Initialize *****************
 12199 ;; Defined at:
 12200 ;;		line 3 in file "pwm.c"
 12201 ;; Parameters:    Size  Location     Type
 12202 ;;		None
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;		None
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  1    wreg      void 
 12207 ;; Registers used:
 12208 ;;		wreg, status,2, status,0
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;Total ram usage:        0 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; This function calls:
 12221 ;;		Nothing
 12222 ;; This function is called by:
 12223 ;;		_SYSTEM_Initialize
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _PWM_Initialize
 12229  11DF                     _PWM_Initialize:	
 12230                           
 12231                           ;pwm.c: 5: PWM6CON = 0x80;
 12232                           
 12233                           ;incstack = 0
 12234                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 12235  11DF  3080               	movlw	128
 12236  11E0  0027               	movlb	7	; select bank7
 12237  11E1  008E               	movwf	14	;volatile
 12238                           
 12239                           ;pwm.c: 7: PWM6DCH = 0x00;
 12240  11E2  018D               	clrf	13	;volatile
 12241                           
 12242                           ;pwm.c: 9: PWM6DCL = 0x00;
 12243  11E3  018C               	clrf	12	;volatile
 12244                           
 12245                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 12246  11E4  0024               	movlb	4	; select bank4
 12247  11E5  081F               	movf	31,w	;volatile
 12248  11E6  39F3               	andlw	-13
 12249  11E7  3804               	iorlw	4
 12250  11E8  009F               	movwf	31	;volatile
 12251                           
 12252                           ;pwm.c: 14: PWM7CON = 0x80;
 12253  11E9  3080               	movlw	128
 12254  11EA  0027               	movlb	7	; select bank7
 12255  11EB  0092               	movwf	18	;volatile
 12256                           
 12257                           ;pwm.c: 16: PWM7DCH = 0x00;
 12258  11EC  0191               	clrf	17	;volatile
 12259                           
 12260                           ;pwm.c: 18: PWM7DCL = 0x00;
 12261  11ED  0190               	clrf	16	;volatile
 12262                           
 12263                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 12264  11EE  0024               	movlb	4	; select bank4
 12265  11EF  081F               	movf	31,w	;volatile
 12266  11F0  39CF               	andlw	-49
 12267  11F1  3820               	iorlw	32
 12268  11F2  009F               	movwf	31	;volatile
 12269                           
 12270                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 12271  11F3  0026               	movlb	6	; select bank6
 12272  11F4  178E               	bsf	14,7	;volatile
 12273                           
 12274                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 12275  11F5  160E               	bsf	14,4	;volatile
 12276                           
 12277                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 12278  11F6  300F               	movlw	15
 12279  11F7  048E               	iorwf	14,f	;volatile
 12280                           
 12281                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 12282  11F8  0024               	movlb	4	; select bank4
 12283  11F9  081E               	movf	30,w	;volatile
 12284  11FA  39FC               	andlw	-4
 12285  11FB  3801               	iorlw	1
 12286  11FC  009E               	movwf	30	;volatile
 12287  11FD  0008               	return
 12288  11FE                     __end_of_PWM_Initialize:	
 12289                           
 12290                           	psect	text23
 12291  1295                     __ptext23:	
 12292 ;; *************** function _PIN_MANAGER_Initialize *****************
 12293 ;; Defined at:
 12294 ;;		line 3 in file "pin_manager.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;		None
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;  state           1    0[COMMON] char 
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      void 
 12301 ;; Registers used:
 12302 ;;		wreg, status,2
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;Total ram usage:        1 bytes
 12313 ;; Hardware stack levels used:    1
 12314 ;; This function calls:
 12315 ;;		Nothing
 12316 ;; This function is called by:
 12317 ;;		_SYSTEM_Initialize
 12318 ;; This function uses a non-reentrant model
 12319 ;;
 12320                           
 12321                           
 12322                           ;psect for function _PIN_MANAGER_Initialize
 12323  1295                     _PIN_MANAGER_Initialize:	
 12324                           
 12325                           ;pin_manager.c: 5: LATA = 0x20;
 12326                           
 12327                           ;incstack = 0
 12328                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12329  1295  3020               	movlw	32
 12330  1296  0020               	movlb	0	; select bank0
 12331  1297  0096               	movwf	22	;volatile
 12332                           
 12333                           ;pin_manager.c: 6: LATB = 0x00;
 12334  1298  0197               	clrf	23	;volatile
 12335                           
 12336                           ;pin_manager.c: 7: LATC = 0x00;
 12337  1299  0198               	clrf	24	;volatile
 12338                           
 12339                           ;pin_manager.c: 9: WPUA = 0x00;
 12340  129A  003E               	movlb	30	; select bank30
 12341  129B  01B9               	clrf	57	;volatile
 12342                           
 12343                           ;pin_manager.c: 10: WPUB = 0x00;
 12344  129C  01C4               	clrf	68	;volatile
 12345                           
 12346                           ;pin_manager.c: 11: WPUC = 0x00;
 12347  129D  01CF               	clrf	79	;volatile
 12348                           
 12349                           ;pin_manager.c: 12: WPUE = 0x8;
 12350  129E  3008               	movlw	8
 12351  129F  00E5               	movwf	101	;volatile
 12352                           
 12353                           ;pin_manager.c: 14: TRISA = 0x00;
 12354  12A0  0020               	movlb	0	; select bank0
 12355  12A1  0191               	clrf	17	;volatile
 12356                           
 12357                           ;pin_manager.c: 15: TRISB = 0x0E;
 12358  12A2  300E               	movlw	14
 12359  12A3  0092               	movwf	18	;volatile
 12360                           
 12361                           ;pin_manager.c: 16: TRISC = 0xFF;
 12362  12A4  30FF               	movlw	255
 12363  12A5  0093               	movwf	19	;volatile
 12364                           
 12365                           ;pin_manager.c: 18: ANSELA = 0x00;
 12366  12A6  003E               	movlb	30	; select bank30
 12367  12A7  01B8               	clrf	56	;volatile
 12368                           
 12369                           ;pin_manager.c: 19: ANSELB = 0x0A;
 12370  12A8  300A               	movlw	10
 12371  12A9  00C3               	movwf	67	;volatile
 12372                           
 12373                           ;pin_manager.c: 20: ANSELC = 0xFF;
 12374  12AA  30FF               	movlw	255
 12375  12AB  00CE               	movwf	78	;volatile
 12376                           
 12377                           ;pin_manager.c: 23: PIE0bits.IOCIE = 0;
 12378  12AC  002E               	movlb	14	; select bank14
 12379  12AD  1216               	bcf	22,4	;volatile
 12380                           
 12381                           ;pin_manager.c: 24: int8_t state = GIE;
 12382  12AE  3000               	movlw	0
 12383  12AF  1B8B               	btfsc	11,7	;volatile
 12384  12B0  3001               	movlw	1
 12385  12B1  00F0               	movwf	PIN_MANAGER_Initialize@state
 12386                           
 12387                           ;pin_manager.c: 25: GIE = 0;
 12388  12B2  138B               	bcf	11,7	;volatile
 12389                           
 12390                           ;pin_manager.c: 26: PPSLOCK = 0x55;
 12391  12B3  3055               	movlw	85
 12392  12B4  003D               	movlb	29	; select bank29
 12393  12B5  008F               	movwf	15	;volsfr
 12394                           
 12395                           ;pin_manager.c: 27: PPSLOCK = 0xAA;
 12396  12B6  30AA               	movlw	170
 12397  12B7  008F               	movwf	15	;volsfr
 12398                           
 12399                           ;pin_manager.c: 28: PPSLOCKbits.PPSLOCKED = 0x00;
 12400  12B8  100F               	bcf	15,0	;volsfr
 12401                           
 12402                           ;pin_manager.c: 30: RA6PPS = 0x0E;
 12403  12B9  300E               	movlw	14
 12404  12BA  003E               	movlb	30	; select bank30
 12405  12BB  0096               	movwf	22	;volatile
 12406                           
 12407                           ;pin_manager.c: 31: RA7PPS = 0x0F;
 12408  12BC  300F               	movlw	15
 12409  12BD  0097               	movwf	23	;volatile
 12410                           
 12411                           ;pin_manager.c: 32: RB0PPS = 0x09;
 12412  12BE  3009               	movlw	9
 12413  12BF  0098               	movwf	24	;volatile
 12414                           
 12415                           ;pin_manager.c: 33: PPSLOCK = 0x55;
 12416  12C0  3055               	movlw	85
 12417  12C1  003D               	movlb	29	; select bank29
 12418  12C2  008F               	movwf	15	;volsfr
 12419                           
 12420                           ;pin_manager.c: 34: PPSLOCK = 0xAA;
 12421  12C3  30AA               	movlw	170
 12422  12C4  008F               	movwf	15	;volsfr
 12423                           
 12424                           ;pin_manager.c: 35: PPSLOCKbits.PPSLOCKED = 0x01;
 12425  12C5  140F               	bsf	15,0	;volsfr
 12426                           
 12427                           ;pin_manager.c: 36: GIE = state;
 12428  12C6  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12429  12C7  2ACA               	goto	u2910
 12430  12C8  178B               	bsf	11,7	;volatile
 12431  12C9  0008               	return
 12432  12CA                     u2910:	
 12433  12CA  138B               	bcf	11,7	;volatile
 12434  12CB  0008               	return
 12435  12CC                     __end_of_PIN_MANAGER_Initialize:	
 12436                           
 12437                           	psect	text24
 12438  1FA0                     __ptext24:	
 12439 ;; *************** function _OSCILLATOR_Initialize *****************
 12440 ;; Defined at:
 12441 ;;		line 53 in file "system.c"
 12442 ;; Parameters:    Size  Location     Type
 12443 ;;		None
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;		None
 12446 ;; Return value:  Size  Location     Type
 12447 ;;                  1    wreg      void 
 12448 ;; Registers used:
 12449 ;;		wreg, status,2
 12450 ;; Tracked objects:
 12451 ;;		On entry : 0/0
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12459 ;;Total ram usage:        0 bytes
 12460 ;; Hardware stack levels used:    1
 12461 ;; This function calls:
 12462 ;;		Nothing
 12463 ;; This function is called by:
 12464 ;;		_SYSTEM_Initialize
 12465 ;; This function uses a non-reentrant model
 12466 ;;
 12467                           
 12468                           
 12469                           ;psect for function _OSCILLATOR_Initialize
 12470  1FA0                     _OSCILLATOR_Initialize:	
 12471                           
 12472                           ;system.c: 55: OSCCON1 = 0x60;
 12473                           
 12474                           ;incstack = 0
 12475                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12476  1FA0  3060               	movlw	96
 12477  1FA1  0031               	movlb	17	; select bank17
 12478  1FA2  008D               	movwf	13	;volatile
 12479                           
 12480                           ;system.c: 56: OSCCON3 = 0x00;
 12481  1FA3  018F               	clrf	15	;volatile
 12482                           
 12483                           ;system.c: 57: OSCEN = 0x00;
 12484  1FA4  0191               	clrf	17	;volatile
 12485                           
 12486                           ;system.c: 58: OSCFRQ = 0x06;
 12487  1FA5  3006               	movlw	6
 12488  1FA6  0093               	movwf	19	;volatile
 12489                           
 12490                           ;system.c: 59: OSCTUNE = 0x00;
 12491  1FA7  0192               	clrf	18	;volatile
 12492  1FA8  0008               	return
 12493  1FA9                     __end_of_OSCILLATOR_Initialize:	
 12494                           
 12495                           	psect	text25
 12496  12CC                     __ptext25:	
 12497 ;; *************** function _LCDInit *****************
 12498 ;; Defined at:
 12499 ;;		line 247 in file "lcd.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;		None
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;		None
 12504 ;; Return value:  Size  Location     Type
 12505 ;;                  1    wreg      void 
 12506 ;; Registers used:
 12507 ;;		wreg, status,2, status,0, pclath, cstack
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12517 ;;Total ram usage:        1 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; Hardware stack levels required when called:    1
 12520 ;; This function calls:
 12521 ;;		_LCDWrite
 12522 ;; This function is called by:
 12523 ;;		_SYSTEM_Initialize
 12524 ;;		_main
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528                           
 12529                           ;psect for function _LCDInit
 12530  12CC                     _LCDInit:	
 12531                           
 12532                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12533                           
 12534                           ;incstack = 0
 12535                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12536  12CC  0020               	movlb	0	; select bank0
 12537  12CD  1011               	bcf	17,0	;volatile
 12538                           
 12539                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12540  12CE  1091               	bcf	17,1	;volatile
 12541                           
 12542                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12543  12CF  1111               	bcf	17,2	;volatile
 12544                           
 12545                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12546  12D0  1191               	bcf	17,3	;volatile
 12547                           
 12548                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12549  12D1  1211               	bcf	17,4	;volatile
 12550                           
 12551                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12552  12D2  1196               	bcf	22,3	;volatile
 12553                           
 12554                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12555  12D3  1216               	bcf	22,4	;volatile
 12556                           
 12557                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12558  12D4  1116               	bcf	22,2	;volatile
 12559                           
 12560                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12561  12D5  1016               	bcf	22,0	;volatile
 12562                           
 12563                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12564  12D6  1416               	bsf	22,0	;volatile
 12565                           
 12566                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12567  12D7  3021               	movlw	33
 12568  12D8  00F5               	movwf	??_LCDInit
 12569  12D9  0875               	movf	??_LCDInit,w
 12570  12DA  00F0               	movwf	LCDWrite@data
 12571  12DB  3000               	movlw	0
 12572  12DC  3192  221E  3192   	fcall	_LCDWrite
 12573                           
 12574                           ;lcd.c: 269: LCDWrite(0, 0XB9);
 12575  12DF  30B9               	movlw	185
 12576  12E0  00F5               	movwf	??_LCDInit
 12577  12E1  0875               	movf	??_LCDInit,w
 12578  12E2  00F0               	movwf	LCDWrite@data
 12579  12E3  3000               	movlw	0
 12580  12E4  3192  221E  3192   	fcall	_LCDWrite
 12581                           
 12582                           ;lcd.c: 271: LCDWrite(0, 0x04);
 12583  12E7  3004               	movlw	4
 12584  12E8  00F5               	movwf	??_LCDInit
 12585  12E9  0875               	movf	??_LCDInit,w
 12586  12EA  00F0               	movwf	LCDWrite@data
 12587  12EB  3000               	movlw	0
 12588  12EC  3192  221E  3192   	fcall	_LCDWrite
 12589                           
 12590                           ;lcd.c: 273: LCDWrite(0, 0x14);
 12591  12EF  3014               	movlw	20
 12592  12F0  00F5               	movwf	??_LCDInit
 12593  12F1  0875               	movf	??_LCDInit,w
 12594  12F2  00F0               	movwf	LCDWrite@data
 12595  12F3  3000               	movlw	0
 12596  12F4  3192  221E  3192   	fcall	_LCDWrite
 12597                           
 12598                           ;lcd.c: 275: LCDWrite(0, 0x20);
 12599  12F7  3020               	movlw	32
 12600  12F8  00F5               	movwf	??_LCDInit
 12601  12F9  0875               	movf	??_LCDInit,w
 12602  12FA  00F0               	movwf	LCDWrite@data
 12603  12FB  3000               	movlw	0
 12604  12FC  3192  221E  3192   	fcall	_LCDWrite
 12605                           
 12606                           ;lcd.c: 277: LCDWrite(0, 0x0C);
 12607  12FF  300C               	movlw	12
 12608  1300  00F5               	movwf	??_LCDInit
 12609  1301  0875               	movf	??_LCDInit,w
 12610  1302  00F0               	movwf	LCDWrite@data
 12611  1303  3000               	movlw	0
 12612  1304  3192  221E         	fcall	_LCDWrite
 12613  1306  0008               	return
 12614  1307                     __end_of_LCDInit:	
 12615                           
 12616                           	psect	text26
 12617  1243                     __ptext26:	
 12618 ;; *************** function _LCDClear *****************
 12619 ;; Defined at:
 12620 ;;		line 182 in file "lcd.c"
 12621 ;; Parameters:    Size  Location     Type
 12622 ;;		None
 12623 ;; Auto vars:     Size  Location     Type
 12624 ;;  index           2    9[COMMON] int 
 12625 ;; Return value:  Size  Location     Type
 12626 ;;                  1    wreg      void 
 12627 ;; Registers used:
 12628 ;;		wreg, status,2, status,0, pclath, cstack
 12629 ;; Tracked objects:
 12630 ;;		On entry : 0/0
 12631 ;;		On exit  : 0/0
 12632 ;;		Unchanged: 0/0
 12633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12637 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12638 ;;Total ram usage:        3 bytes
 12639 ;; Hardware stack levels used:    1
 12640 ;; Hardware stack levels required when called:    2
 12641 ;; This function calls:
 12642 ;;		_LCDWrite
 12643 ;;		_gotoXY
 12644 ;; This function is called by:
 12645 ;;		_SYSTEM_Initialize
 12646 ;;		_main
 12647 ;; This function uses a non-reentrant model
 12648 ;;
 12649                           
 12650                           
 12651                           ;psect for function _LCDClear
 12652  1243                     _LCDClear:	
 12653                           
 12654                           ;lcd.c: 184: int index;
 12655                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12656                           
 12657                           ;incstack = 0
 12658                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12659  1243  01F9               	clrf	LCDClear@index
 12660  1244  01FA               	clrf	LCDClear@index+1
 12661  1245  087A               	movf	LCDClear@index+1,w
 12662  1246  3A80               	xorlw	128
 12663  1247  00F8               	movwf	??_LCDClear
 12664  1248  3081               	movlw	129
 12665  1249  0278               	subwf	??_LCDClear,w
 12666  124A  1D03               	skipz
 12667  124B  2A4E               	goto	u2895
 12668  124C  30F8               	movlw	248
 12669  124D  0279               	subwf	LCDClear@index,w
 12670  124E                     u2895:	
 12671  124E  1803               	btfsc	3,0
 12672  124F  2A64               	goto	l2687
 12673  1250                     l2681:	
 12674                           
 12675                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12676  1250  01F0               	clrf	LCDWrite@data
 12677  1251  3001               	movlw	1
 12678  1252  3192  221E  3192   	fcall	_LCDWrite
 12679  1255  3001               	movlw	1
 12680  1256  07F9               	addwf	LCDClear@index,f
 12681  1257  3000               	movlw	0
 12682  1258  3DFA               	addwfc	LCDClear@index+1,f
 12683  1259  087A               	movf	LCDClear@index+1,w
 12684  125A  3A80               	xorlw	128
 12685  125B  00F8               	movwf	??_LCDClear
 12686  125C  3081               	movlw	129
 12687  125D  0278               	subwf	??_LCDClear,w
 12688  125E  1D03               	skipz
 12689  125F  2A62               	goto	u2905
 12690  1260  30F8               	movlw	248
 12691  1261  0279               	subwf	LCDClear@index,w
 12692  1262                     u2905:	
 12693  1262  1C03               	skipc
 12694  1263  2A50               	goto	l2681
 12695  1264                     l2687:	
 12696                           
 12697                           ;lcd.c: 187: gotoXY(0, 0);
 12698  1264  01F5               	clrf	gotoXY@y
 12699  1265  3000               	movlw	0
 12700  1266  319F  27ED         	fcall	_gotoXY
 12701  1268  0008               	return
 12702  1269                     __end_of_LCDClear:	
 12703                           
 12704                           	psect	text27
 12705  1FED                     __ptext27:	
 12706 ;; *************** function _gotoXY *****************
 12707 ;; Defined at:
 12708 ;;		line 124 in file "lcd.c"
 12709 ;; Parameters:    Size  Location     Type
 12710 ;;  x               1    wreg     unsigned char 
 12711 ;;  y               1    5[COMMON] unsigned char 
 12712 ;; Auto vars:     Size  Location     Type
 12713 ;;  x               1    7[COMMON] unsigned char 
 12714 ;; Return value:  Size  Location     Type
 12715 ;;                  1    wreg      void 
 12716 ;; Registers used:
 12717 ;;		wreg, status,2, status,0, pclath, cstack
 12718 ;; Tracked objects:
 12719 ;;		On entry : 0/0
 12720 ;;		On exit  : 0/0
 12721 ;;		Unchanged: 0/0
 12722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12723 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12726 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12727 ;;Total ram usage:        3 bytes
 12728 ;; Hardware stack levels used:    1
 12729 ;; Hardware stack levels required when called:    1
 12730 ;; This function calls:
 12731 ;;		_LCDWrite
 12732 ;; This function is called by:
 12733 ;;		_LCDClear
 12734 ;;		_main
 12735 ;; This function uses a non-reentrant model
 12736 ;;
 12737                           
 12738                           
 12739                           ;psect for function _gotoXY
 12740  1FED                     _gotoXY:	
 12741                           
 12742                           ;incstack = 0
 12743                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12744                           ;gotoXY@x stored from wreg
 12745  1FED  00F7               	movwf	gotoXY@x
 12746                           
 12747                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12748  1FEE  0877               	movf	gotoXY@x,w
 12749  1FEF  3880               	iorlw	128
 12750  1FF0  00F6               	movwf	??_gotoXY
 12751  1FF1  0876               	movf	??_gotoXY,w
 12752  1FF2  00F0               	movwf	LCDWrite@data
 12753  1FF3  3000               	movlw	0
 12754  1FF4  3192  221E  319F   	fcall	_LCDWrite
 12755                           
 12756                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12757  1FF7  0875               	movf	gotoXY@y,w
 12758  1FF8  3840               	iorlw	64
 12759  1FF9  00F6               	movwf	??_gotoXY
 12760  1FFA  0876               	movf	??_gotoXY,w
 12761  1FFB  00F0               	movwf	LCDWrite@data
 12762  1FFC  3000               	movlw	0
 12763  1FFD  3192  221E         	fcall	_LCDWrite
 12764  1FFF  0008               	return
 12765  2000                     __end_of_gotoXY:	
 12766                           
 12767                           	psect	text28
 12768  158C                     __ptext28:	
 12769 ;; *************** function _Init_Battery_State_Machine *****************
 12770 ;; Defined at:
 12771 ;;		line 18 in file "battery_charger.c"
 12772 ;; Parameters:    Size  Location     Type
 12773 ;;  z               1    wreg     unsigned char 
 12774 ;; Auto vars:     Size  Location     Type
 12775 ;;  z               1   34[BANK0 ] unsigned char 
 12776 ;; Return value:  Size  Location     Type
 12777 ;;                  1    wreg      void 
 12778 ;; Registers used:
 12779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12780 ;; Tracked objects:
 12781 ;;		On entry : 0/0
 12782 ;;		On exit  : 0/0
 12783 ;;		Unchanged: 0/0
 12784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12788 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12789 ;;Total ram usage:        5 bytes
 12790 ;; Hardware stack levels used:    1
 12791 ;; Hardware stack levels required when called:    2
 12792 ;; This function calls:
 12793 ;;		___awtoft
 12794 ;;		___ftmul
 12795 ;;		___fttol
 12796 ;; This function is called by:
 12797 ;;		_SYSTEM_Initialize
 12798 ;; This function uses a non-reentrant model
 12799 ;;
 12800                           
 12801                           
 12802                           ;psect for function _Init_Battery_State_Machine
 12803  158C                     _Init_Battery_State_Machine:	
 12804                           
 12805                           ;incstack = 0
 12806                           ; Regs used in _Init_Battery_State_Machine: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12807                           ;Init_Battery_State_Machine@z stored from wreg
 12808  158C  0020               	movlb	0	; select bank0
 12809  158D  00C2               	movwf	Init_Battery_State_Machine@z
 12810                           
 12811                           ;battery_charger.c: 20: batteryState[z] =PRECHARGE;
 12812  158E  3003               	movlw	3
 12813  158F  00BE               	movwf	??_Init_Battery_State_Machine
 12814  1590  0842               	movf	Init_Battery_State_Machine@z,w
 12815  1591  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 12816  1592  0086               	movwf	6
 12817  1593  0187               	clrf	7
 12818  1594  083E               	movf	??_Init_Battery_State_Machine,w
 12819  1595  0081               	movwf	1
 12820                           
 12821                           ;battery_charger.c: 21: stateCounter[z] =5;
 12822  1596  3542               	lslf	Init_Battery_State_Machine@z,w
 12823  1597  3EBD               	addlw	(low (_stateCounter| 0))& (0+255)
 12824  1598  0086               	movwf	6
 12825  1599  0187               	clrf	7
 12826  159A  3005               	movlw	5
 12827  159B  3FC0               	movwi [0]fsr1
 12828  159C  3000               	movlw	0
 12829  159D  3FC1               	movwi [1]fsr1
 12830                           
 12831                           ;battery_charger.c: 22: Iref[z] =10;
 12832  159E  3542               	lslf	Init_Battery_State_Machine@z,w
 12833  159F  3EC1               	addlw	(low (_Iref| 0))& (0+255)
 12834  15A0  0086               	movwf	6
 12835  15A1  0187               	clrf	7
 12836  15A2  300A               	movlw	10
 12837  15A3  3FC0               	movwi [0]fsr1
 12838  15A4  3000               	movlw	0
 12839  15A5  3FC1               	movwi [1]fsr1
 12840                           
 12841                           ;battery_charger.c: 23: Vref[z] =1425+(int16_t)((250-batteryTemp)*.24);
 12842  15A6  096D               	comf	_batteryTemp,w
 12843  15A7  00BE               	movwf	??_Init_Battery_State_Machine
 12844  15A8  096E               	comf	_batteryTemp+1,w
 12845  15A9  00BF               	movwf	??_Init_Battery_State_Machine+1
 12846  15AA  0ABE               	incf	??_Init_Battery_State_Machine,f
 12847  15AB  1903               	skipnz
 12848  15AC  0ABF               	incf	??_Init_Battery_State_Machine+1,f
 12849  15AD  083E               	movf	??_Init_Battery_State_Machine,w
 12850  15AE  3EFA               	addlw	250
 12851  15AF  00F8               	movwf	___awtoft@c
 12852  15B0  3000               	movlw	0
 12853  15B1  3D3F               	addwfc	??_Init_Battery_State_Machine+1,w
 12854  15B2  00F9               	movwf	___awtoft@c+1
 12855  15B3  3191  21FE  3195   	fcall	___awtoft
 12856  15B6  0878               	movf	?___awtoft,w
 12857  15B7  0020               	movlb	0	; select bank0
 12858  15B8  00A3               	movwf	___ftmul@f2
 12859  15B9  0879               	movf	?___awtoft+1,w
 12860  15BA  00A4               	movwf	___ftmul@f2+1
 12861  15BB  087A               	movf	?___awtoft+2,w
 12862  15BC  00A5               	movwf	___ftmul@f2+2
 12863  15BD  30C3               	movlw	195
 12864  15BE  00A0               	movwf	___ftmul@f1
 12865  15BF  3075               	movlw	117
 12866  15C0  00A1               	movwf	___ftmul@f1+1
 12867  15C1  303E               	movlw	62
 12868  15C2  00A2               	movwf	___ftmul@f1+2
 12869  15C3  3188  20FB  3195   	fcall	___ftmul
 12870  15C6  0020               	movlb	0	; select bank0
 12871  15C7  0820               	movf	?___ftmul,w
 12872  15C8  00B0               	movwf	___fttol@f1
 12873  15C9  0821               	movf	?___ftmul+1,w
 12874  15CA  00B1               	movwf	___fttol@f1+1
 12875  15CB  0822               	movf	?___ftmul+2,w
 12876  15CC  00B2               	movwf	___fttol@f1+2
 12877  15CD  3180  2019         	fcall	___fttol
 12878  15CF  0020               	movlb	0	; select bank0
 12879  15D0  0830               	movf	?___fttol,w
 12880  15D1  3E91               	addlw	145
 12881  15D2  00C0               	movwf	??_Init_Battery_State_Machine+2
 12882  15D3  3005               	movlw	5
 12883  15D4  3D31               	addwfc	?___fttol+1,w
 12884  15D5  00C1               	movwf	??_Init_Battery_State_Machine+3
 12885  15D6  3542               	lslf	Init_Battery_State_Machine@z,w
 12886  15D7  3E5A               	addlw	(low (_Vref| 0))& (0+255)
 12887  15D8  0086               	movwf	6
 12888  15D9  0187               	clrf	7
 12889  15DA  0840               	movf	??_Init_Battery_State_Machine+2,w
 12890  15DB  3FC0               	movwi [0]fsr1
 12891  15DC  0841               	movf	??_Init_Battery_State_Machine+3,w
 12892  15DD  3FC1               	movwi [1]fsr1
 12893                           
 12894                           ;battery_charger.c: 24: Imin[z] =15;
 12895  15DE  3542               	lslf	Init_Battery_State_Machine@z,w
 12896  15DF  3EC9               	addlw	(low (_Imin| 0))& (0+255)
 12897  15E0  0086               	movwf	6
 12898  15E1  0187               	clrf	7
 12899  15E2  300F               	movlw	15
 12900  15E3  3FC0               	movwi [0]fsr1
 12901  15E4  3000               	movlw	0
 12902  15E5  3FC1               	movwi [1]fsr1
 12903                           
 12904                           ;battery_charger.c: 25: IminCount[z] = 600;
 12905  15E6  3542               	lslf	Init_Battery_State_Machine@z,w
 12906  15E7  3EC5               	addlw	(low (_IminCount| 0))& (0+255)
 12907  15E8  0086               	movwf	6
 12908  15E9  0187               	clrf	7
 12909  15EA  3058               	movlw	88
 12910  15EB  3FC0               	movwi [0]fsr1
 12911  15EC  3002               	movlw	2
 12912  15ED  3FC1               	movwi [1]fsr1
 12913  15EE  0008               	return
 12914  15EF                     __end_of_Init_Battery_State_Machine:	
 12915                           
 12916                           	psect	text29
 12917  11C0                     __ptext29:	
 12918 ;; *************** function _ADC_Initialize *****************
 12919 ;; Defined at:
 12920 ;;		line 138 in file "adc.c"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;		None
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;		None
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      void 
 12927 ;; Registers used:
 12928 ;;		wreg, status,2
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12938 ;;Total ram usage:        0 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; This function calls:
 12941 ;;		Nothing
 12942 ;; This function is called by:
 12943 ;;		_SYSTEM_Initialize
 12944 ;; This function uses a non-reentrant model
 12945 ;;
 12946                           
 12947                           
 12948                           ;psect for function _ADC_Initialize
 12949  11C0                     _ADC_Initialize:	
 12950                           
 12951                           ;adc.c: 140: ADCON1 = 0x00;
 12952                           
 12953                           ;incstack = 0
 12954                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12955  11C0  0021               	movlb	1	; select bank1
 12956  11C1  0194               	clrf	20	;volatile
 12957                           
 12958                           ;adc.c: 142: ADCON2 = 0x00;
 12959  11C2  0195               	clrf	21	;volatile
 12960                           
 12961                           ;adc.c: 144: ADCON3 = 0x00;
 12962  11C3  0196               	clrf	22	;volatile
 12963                           
 12964                           ;adc.c: 146: ADACT = 0x00;
 12965  11C4  0199               	clrf	25	;volatile
 12966                           
 12967                           ;adc.c: 148: ADSTAT = 0x00;
 12968  11C5  0197               	clrf	23	;volatile
 12969                           
 12970                           ;adc.c: 150: FVRCON = 0b11000011;
 12971  11C6  30C3               	movlw	195
 12972  11C7  0032               	movlb	18	; select bank18
 12973  11C8  008C               	movwf	12	;volatile
 12974                           
 12975                           ;adc.c: 151: ADCLK = 0x3F;
 12976  11C9  303F               	movlw	63
 12977  11CA  0021               	movlb	1	; select bank1
 12978  11CB  0098               	movwf	24	;volatile
 12979                           
 12980                           ;adc.c: 158: ADREF = 0x03;
 12981  11CC  3003               	movlw	3
 12982  11CD  009A               	movwf	26	;volatile
 12983                           
 12984                           ;adc.c: 161: ADCAP = 0x00;
 12985  11CE  019B               	clrf	27	;volatile
 12986                           
 12987                           ;adc.c: 164: ADPRE = 0x07;
 12988  11CF  3007               	movlw	7
 12989  11D0  009C               	movwf	28	;volatile
 12990                           
 12991                           ;adc.c: 166: ADACQ = 0x00;
 12992  11D1  019D               	clrf	29	;volatile
 12993                           
 12994                           ;adc.c: 168: ADPCH = 0x00;
 12995  11D2  019E               	clrf	30	;volatile
 12996                           
 12997                           ;adc.c: 170: ADRPT = 0x00;
 12998  11D3  0022               	movlb	2	; select bank2
 12999  11D4  018D               	clrf	13	;volatile
 13000                           
 13001                           ;adc.c: 172: ADLTHL = 0x00;
 13002  11D5  018E               	clrf	14	;volatile
 13003                           
 13004                           ;adc.c: 174: ADLTHH = 0x00;
 13005  11D6  018F               	clrf	15	;volatile
 13006                           
 13007                           ;adc.c: 176: ADUTHL = 0x00;
 13008  11D7  0190               	clrf	16	;volatile
 13009                           
 13010                           ;adc.c: 178: ADUTHH = 0x00;
 13011  11D8  0191               	clrf	17	;volatile
 13012                           
 13013                           ;adc.c: 180: ADSTPTL = 0x00;
 13014  11D9  0192               	clrf	18	;volatile
 13015                           
 13016                           ;adc.c: 182: ADSTPTH = 0x00;
 13017  11DA  0193               	clrf	19	;volatile
 13018                           
 13019                           ;adc.c: 184: ADCON0 = 0x84;
 13020  11DB  3084               	movlw	132
 13021  11DC  0021               	movlb	1	; select bank1
 13022  11DD  0093               	movwf	19	;volatile
 13023  11DE  0008               	return
 13024  11DF                     __end_of_ADC_Initialize:	
 13025                           
 13026                           	psect	text30
 13027  1171                     __ptext30:	
 13028 ;; *************** function _PWM7_LoadDutyValue *****************
 13029 ;; Defined at:
 13030 ;;		line 37 in file "pwm.c"
 13031 ;; Parameters:    Size  Location     Type
 13032 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 13033 ;; Auto vars:     Size  Location     Type
 13034 ;;		None
 13035 ;; Return value:  Size  Location     Type
 13036 ;;                  1    wreg      void 
 13037 ;; Registers used:
 13038 ;;		wreg, status,2, status,0
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;Total ram usage:        4 bytes
 13049 ;; Hardware stack levels used:    1
 13050 ;; This function calls:
 13051 ;;		Nothing
 13052 ;; This function is called by:
 13053 ;;		_main
 13054 ;; This function uses a non-reentrant model
 13055 ;;
 13056                           
 13057                           
 13058                           ;psect for function _PWM7_LoadDutyValue
 13059  1171                     _PWM7_LoadDutyValue:	
 13060                           
 13061                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 13062                           
 13063                           ;incstack = 0
 13064                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 13065  1171  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 13066  1172  00F3               	movwf	??_PWM7_LoadDutyValue+1
 13067  1173  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 13068  1174  00F2               	movwf	??_PWM7_LoadDutyValue
 13069  1175  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 13070  1176  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 13071  1177  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 13072  1178  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 13073  1179  0872               	movf	??_PWM7_LoadDutyValue,w
 13074  117A  0027               	movlb	7	; select bank7
 13075  117B  0091               	movwf	17	;volatile
 13076                           
 13077                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 13078  117C  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 13079  117D  3903               	andlw	3
 13080  117E  00F2               	movwf	??_PWM7_LoadDutyValue
 13081  117F  3005               	movlw	5
 13082  1180                     u3855:	
 13083  1180  35F2               	lslf	??_PWM7_LoadDutyValue,f
 13084  1181  3EFF               	addlw	-1
 13085  1182  1D03               	skipz
 13086  1183  2980               	goto	u3855
 13087  1184  3572               	lslf	??_PWM7_LoadDutyValue,w
 13088  1185  0090               	movwf	16	;volatile
 13089  1186  0008               	return
 13090  1187                     __end_of_PWM7_LoadDutyValue:	
 13091                           
 13092                           	psect	text31
 13093  115B                     __ptext31:	
 13094 ;; *************** function _PWM6_LoadDutyValue *****************
 13095 ;; Defined at:
 13096 ;;		line 30 in file "pwm.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;		None
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  1    wreg      void 
 13103 ;; Registers used:
 13104 ;;		wreg, status,2, status,0
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13114 ;;Total ram usage:        4 bytes
 13115 ;; Hardware stack levels used:    1
 13116 ;; This function calls:
 13117 ;;		Nothing
 13118 ;; This function is called by:
 13119 ;;		_main
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           
 13124                           ;psect for function _PWM6_LoadDutyValue
 13125  115B                     _PWM6_LoadDutyValue:	
 13126                           
 13127                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 13128                           
 13129                           ;incstack = 0
 13130                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 13131  115B  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 13132  115C  00F3               	movwf	??_PWM6_LoadDutyValue+1
 13133  115D  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 13134  115E  00F2               	movwf	??_PWM6_LoadDutyValue
 13135  115F  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 13136  1160  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 13137  1161  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 13138  1162  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 13139  1163  0872               	movf	??_PWM6_LoadDutyValue,w
 13140  1164  0027               	movlb	7	; select bank7
 13141  1165  008D               	movwf	13	;volatile
 13142                           
 13143                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 13144  1166  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 13145  1167  3903               	andlw	3
 13146  1168  00F2               	movwf	??_PWM6_LoadDutyValue
 13147  1169  3005               	movlw	5
 13148  116A                     u3845:	
 13149  116A  35F2               	lslf	??_PWM6_LoadDutyValue,f
 13150  116B  3EFF               	addlw	-1
 13151  116C  1D03               	skipz
 13152  116D  296A               	goto	u3845
 13153  116E  3572               	lslf	??_PWM6_LoadDutyValue,w
 13154  116F  008C               	movwf	12	;volatile
 13155  1170  0008               	return
 13156  1171                     __end_of_PWM6_LoadDutyValue:	
 13157                           
 13158                           	psect	text32
 13159  1145                     __ptext32:	
 13160 ;; *************** function _PWM1_LoadDutyValue *****************
 13161 ;; Defined at:
 13162 ;;		line 44 in file "pwm.c"
 13163 ;; Parameters:    Size  Location     Type
 13164 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;		None
 13167 ;; Return value:  Size  Location     Type
 13168 ;;                  1    wreg      void 
 13169 ;; Registers used:
 13170 ;;		wreg, status,2, status,0
 13171 ;; Tracked objects:
 13172 ;;		On entry : 0/0
 13173 ;;		On exit  : 0/0
 13174 ;;		Unchanged: 0/0
 13175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;Total ram usage:        4 bytes
 13181 ;; Hardware stack levels used:    1
 13182 ;; This function calls:
 13183 ;;		Nothing
 13184 ;; This function is called by:
 13185 ;;		_main
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           
 13190                           ;psect for function _PWM1_LoadDutyValue
 13191  1145                     _PWM1_LoadDutyValue:	
 13192                           
 13193                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 13194                           
 13195                           ;incstack = 0
 13196                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 13197  1145  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 13198  1146  00F3               	movwf	??_PWM1_LoadDutyValue+1
 13199  1147  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 13200  1148  00F2               	movwf	??_PWM1_LoadDutyValue
 13201  1149  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 13202  114A  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 13203  114B  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 13204  114C  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 13205  114D  0872               	movf	??_PWM1_LoadDutyValue,w
 13206  114E  0026               	movlb	6	; select bank6
 13207  114F  008D               	movwf	13	;volatile
 13208                           
 13209                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 13210  1150  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 13211  1151  3903               	andlw	3
 13212  1152  00F2               	movwf	??_PWM1_LoadDutyValue
 13213  1153  3005               	movlw	5
 13214  1154                     u3865:	
 13215  1154  35F2               	lslf	??_PWM1_LoadDutyValue,f
 13216  1155  3EFF               	addlw	-1
 13217  1156  1D03               	skipz
 13218  1157  2954               	goto	u3865
 13219  1158  3572               	lslf	??_PWM1_LoadDutyValue,w
 13220  1159  008C               	movwf	12	;volatile
 13221  115A  0008               	return
 13222  115B                     __end_of_PWM1_LoadDutyValue:	
 13223                           
 13224                           	psect	text33
 13225  1131                     __ptext33:	
 13226 ;; *************** function _LCDWriteString *****************
 13227 ;; Defined at:
 13228 ;;		line 176 in file "lcd.c"
 13229 ;; Parameters:    Size  Location     Type
 13230 ;;  characters      2   12[COMMON] PTR const unsigned char 
 13231 ;;		 -> STR_3(5), STR_2(5), STR_1(4), 
 13232 ;; Auto vars:     Size  Location     Type
 13233 ;;		None
 13234 ;; Return value:  Size  Location     Type
 13235 ;;                  1    wreg      void 
 13236 ;; Registers used:
 13237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13238 ;; Tracked objects:
 13239 ;;		On entry : 0/0
 13240 ;;		On exit  : 0/0
 13241 ;;		Unchanged: 0/0
 13242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13245 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13246 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13247 ;;Total ram usage:        3 bytes
 13248 ;; Hardware stack levels used:    1
 13249 ;; Hardware stack levels required when called:    2
 13250 ;; This function calls:
 13251 ;;		_LCDWriteCharacter
 13252 ;; This function is called by:
 13253 ;;		_main
 13254 ;; This function uses a non-reentrant model
 13255 ;;
 13256                           
 13257                           
 13258                           ;psect for function _LCDWriteString
 13259  1131                     _LCDWriteString:	
 13260  1131                     l3125:	
 13261                           ;lcd.c: 178: while (*characters)
 13262                           
 13263                           ;incstack = 0
 13264                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13265                           
 13266  1131  087C               	movf	LCDWriteString@characters,w
 13267  1132  0084               	movwf	4
 13268  1133  087D               	movf	LCDWriteString@characters+1,w
 13269  1134  0085               	movwf	5
 13270  1135  0012               	moviw fsr0++
 13271  1136  1903               	btfsc	3,2
 13272  1137  0008               	return
 13273                           
 13274                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
 13275  1138  087C               	movf	LCDWriteString@characters,w
 13276  1139  0084               	movwf	4
 13277  113A  087D               	movf	LCDWriteString@characters+1,w
 13278  113B  0085               	movwf	5
 13279  113C  0800               	movf	0,w	;code access
 13280  113D  3194  24D8  3191   	fcall	_LCDWriteCharacter
 13281  1140  3001               	movlw	1
 13282  1141  07FC               	addwf	LCDWriteString@characters,f
 13283  1142  3000               	movlw	0
 13284  1143  3DFD               	addwfc	LCDWriteString@characters+1,f
 13285  1144  2931               	goto	l3125
 13286  1145                     __end_of_LCDWriteString:	
 13287                           
 13288                           	psect	text34
 13289  09AF                     __ptext34:	
 13290 ;; *************** function _LCDWriteInt *****************
 13291 ;; Defined at:
 13292 ;;		line 190 in file "lcd.c"
 13293 ;; Parameters:    Size  Location     Type
 13294 ;;  value           2    0[BANK0 ] int 
 13295 ;;  fieldLength     1    2[BANK0 ] char 
 13296 ;;  numPlaces       1    3[BANK0 ] unsigned char 
 13297 ;;  sign            1    4[BANK0 ] unsigned char 
 13298 ;; Auto vars:     Size  Location     Type
 13299 ;;  str             5    9[BANK0 ] unsigned char [5]
 13300 ;;  i               1   15[BANK0 ] unsigned char 
 13301 ;;  j               1   14[BANK0 ] unsigned char 
 13302 ;; Return value:  Size  Location     Type
 13303 ;;                  1    wreg      void 
 13304 ;; Registers used:
 13305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13306 ;; Tracked objects:
 13307 ;;		On entry : 0/0
 13308 ;;		On exit  : 0/0
 13309 ;;		Unchanged: 0/0
 13310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13311 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13312 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13313 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;Total ram usage:       16 bytes
 13316 ;; Hardware stack levels used:    1
 13317 ;; Hardware stack levels required when called:    2
 13318 ;; This function calls:
 13319 ;;		_LCDWriteCharacter
 13320 ;;		___awdiv
 13321 ;;		___lwmod
 13322 ;; This function is called by:
 13323 ;;		_main
 13324 ;; This function uses a non-reentrant model
 13325 ;;
 13326                           
 13327                           
 13328                           ;psect for function _LCDWriteInt
 13329  09AF                     _LCDWriteInt:	
 13330                           
 13331                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 13332                           
 13333                           ;incstack = 0
 13334                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13335  09AF  30B8               	movlw	low LCDWriteInt@F14392
 13336  09B0  0086               	movwf	6
 13337  09B1  3000               	movlw	high LCDWriteInt@F14392
 13338  09B2  0087               	movwf	7
 13339  09B3  3029               	movlw	low LCDWriteInt@str
 13340  09B4  0084               	movwf	4
 13341  09B5  3000               	movlw	high LCDWriteInt@str
 13342  09B6  0085               	movwf	5
 13343  09B7  3005               	movlw	5
 13344  09B8  0020               	movlb	0	; select bank0
 13345  09B9  00A5               	movwf	??_LCDWriteInt
 13346  09BA                     u3750:	
 13347  09BA  0016               	moviw fsr1++
 13348  09BB  001A               	movwi fsr0++
 13349  09BC  0BA5               	decfsz	??_LCDWriteInt,f
 13350  09BD  29BA               	goto	u3750
 13351                           
 13352                           ;lcd.c: 193: uint8_t i=4,j=0;
 13353  09BE  3004               	movlw	4
 13354  09BF  00A5               	movwf	??_LCDWriteInt
 13355  09C0  0825               	movf	??_LCDWriteInt,w
 13356  09C1  00AF               	movwf	LCDWriteInt@i
 13357  09C2  01AE               	clrf	LCDWriteInt@j
 13358                           
 13359                           ;lcd.c: 195: if(value<0)
 13360  09C3  1FA1               	btfss	LCDWriteInt@value+1,7
 13361  09C4  29D0               	goto	l3139
 13362                           
 13363                           ;lcd.c: 196: {
 13364                           ;lcd.c: 197: LCDWriteCharacter('-');
 13365  09C5  302D               	movlw	45
 13366  09C6  3194  24D8  3189   	fcall	_LCDWriteCharacter
 13367                           
 13368                           ;lcd.c: 198: value=value*-1;
 13369  09C9  0020               	movlb	0	; select bank0
 13370  09CA  09A0               	comf	LCDWriteInt@value,f
 13371  09CB  09A1               	comf	LCDWriteInt@value+1,f
 13372  09CC  0AA0               	incf	LCDWriteInt@value,f
 13373  09CD  1903               	skipnz
 13374  09CE  0AA1               	incf	LCDWriteInt@value+1,f
 13375                           
 13376                           ;lcd.c: 199: }
 13377  09CF  29D7               	goto	l3149
 13378  09D0                     l3139:	
 13379                           
 13380                           ;lcd.c: 201: else
 13381                           ;lcd.c: 202: {
 13382                           ;lcd.c: 203: if(sign == 1)
 13383  09D0  0324               	decf	LCDWriteInt@sign,w
 13384  09D1  1D03               	btfss	3,2
 13385  09D2  29D7               	goto	l3149
 13386                           
 13387                           ;lcd.c: 204: {
 13388                           ;lcd.c: 205: LCDWriteCharacter('+');
 13389  09D3  302B               	movlw	43
 13390  09D4  3194  24D8  3189   	fcall	_LCDWriteCharacter
 13391  09D7                     l3149:	
 13392                           ;lcd.c: 206: }
 13393                           ;lcd.c: 207: }
 13394                           ;lcd.c: 209: while(value)
 13395                           
 13396  09D7  0020               	movlb	0	; select bank0
 13397  09D8  0820               	movf	LCDWriteInt@value,w
 13398  09D9  0421               	iorwf	LCDWriteInt@value+1,w
 13399  09DA  1903               	btfsc	3,2
 13400  09DB  2A04               	goto	l3151
 13401                           
 13402                           ;lcd.c: 210: {
 13403                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 13404  09DC  300A               	movlw	10
 13405  09DD  00F0               	movwf	___lwmod@divisor
 13406  09DE  3000               	movlw	0
 13407  09DF  00F1               	movwf	___lwmod@divisor+1
 13408  09E0  0020               	movlb	0	; select bank0
 13409  09E1  0821               	movf	LCDWriteInt@value+1,w
 13410  09E2  00F3               	movwf	___lwmod@dividend+1
 13411  09E3  0820               	movf	LCDWriteInt@value,w
 13412  09E4  00F2               	movwf	___lwmod@dividend
 13413  09E5  3192  2269  3189   	fcall	___lwmod
 13414  09E8  0870               	movf	?___lwmod,w
 13415  09E9  0020               	movlb	0	; select bank0
 13416  09EA  00A5               	movwf	??_LCDWriteInt
 13417  09EB  082F               	movf	LCDWriteInt@i,w
 13418  09EC  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13419  09ED  0086               	movwf	6
 13420  09EE  0187               	clrf	7
 13421  09EF  0825               	movf	??_LCDWriteInt,w
 13422  09F0  0081               	movwf	1
 13423                           
 13424                           ;lcd.c: 212: value=value/10;
 13425  09F1  300A               	movlw	10
 13426  09F2  00F0               	movwf	___awdiv@divisor
 13427  09F3  3000               	movlw	0
 13428  09F4  00F1               	movwf	___awdiv@divisor+1
 13429  09F5  0821               	movf	LCDWriteInt@value+1,w
 13430  09F6  00F3               	movwf	___awdiv@dividend+1
 13431  09F7  0820               	movf	LCDWriteInt@value,w
 13432  09F8  00F2               	movwf	___awdiv@dividend
 13433  09F9  3194  2487  3189   	fcall	___awdiv
 13434  09FC  0871               	movf	?___awdiv+1,w
 13435  09FD  0020               	movlb	0	; select bank0
 13436  09FE  00A1               	movwf	LCDWriteInt@value+1
 13437  09FF  0870               	movf	?___awdiv,w
 13438  0A00  00A0               	movwf	LCDWriteInt@value
 13439                           
 13440                           ;lcd.c: 213: i--;
 13441  0A01  3001               	movlw	1
 13442  0A02  02AF               	subwf	LCDWriteInt@i,f
 13443  0A03  29D7               	goto	l3149
 13444  0A04                     l3151:	
 13445                           
 13446                           ;lcd.c: 214: }
 13447                           ;lcd.c: 215: if(fieldLength==-1)
 13448  0A04  0A22               	incf	LCDWriteInt@fieldLength,w
 13449  0A05  1903               	btfsc	3,2
 13450  0A06  2A0C               	goto	l3157
 13451  0A07  2A14               	goto	l3159
 13452  0A08                     l3155:	
 13453                           ;lcd.c: 216: {
 13454                           ;lcd.c: 217: while(str[j]==0)
 13455                           
 13456                           
 13457                           ;lcd.c: 218: {
 13458                           ;lcd.c: 219: j++;
 13459  0A08  3001               	movlw	1
 13460  0A09  00A5               	movwf	??_LCDWriteInt
 13461  0A0A  0825               	movf	??_LCDWriteInt,w
 13462  0A0B  07AE               	addwf	LCDWriteInt@j,f
 13463  0A0C                     l3157:	
 13464  0A0C  082E               	movf	LCDWriteInt@j,w
 13465  0A0D  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13466  0A0E  0086               	movwf	6
 13467  0A0F  0187               	clrf	7
 13468  0A10  0801               	movf	1,w
 13469  0A11  1D03               	btfss	3,2
 13470  0A12  2A1A               	goto	l3161
 13471  0A13  2A08               	goto	l3155
 13472  0A14                     l3159:	
 13473                           ;lcd.c: 220: }
 13474                           ;lcd.c: 221: }
 13475                           
 13476                           
 13477                           ;lcd.c: 222: else
 13478                           ;lcd.c: 223: {
 13479                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 13480  0A14  0322               	decf	LCDWriteInt@fieldLength,w
 13481  0A15  3AFF               	xorlw	255
 13482  0A16  3E05               	addlw	5
 13483  0A17  00A5               	movwf	??_LCDWriteInt
 13484  0A18  0825               	movf	??_LCDWriteInt,w
 13485  0A19  00AE               	movwf	LCDWriteInt@j
 13486  0A1A                     l3161:	
 13487                           
 13488                           ;lcd.c: 225: }
 13489                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 13490  0A1A  082E               	movf	LCDWriteInt@j,w
 13491  0A1B  00A5               	movwf	??_LCDWriteInt
 13492  0A1C  0825               	movf	??_LCDWriteInt,w
 13493  0A1D  00AF               	movwf	LCDWriteInt@i
 13494  0A1E                     l3167:	
 13495  0A1E  0823               	movf	LCDWriteInt@numPlaces,w
 13496  0A1F  00A5               	movwf	??_LCDWriteInt
 13497  0A20  01A6               	clrf	??_LCDWriteInt+1
 13498  0A21  09A5               	comf	??_LCDWriteInt,f
 13499  0A22  09A6               	comf	??_LCDWriteInt+1,f
 13500  0A23  0AA5               	incf	??_LCDWriteInt,f
 13501  0A24  1903               	skipnz
 13502  0A25  0AA6               	incf	??_LCDWriteInt+1,f
 13503  0A26  0825               	movf	??_LCDWriteInt,w
 13504  0A27  3E05               	addlw	5
 13505  0A28  00A7               	movwf	??_LCDWriteInt+2
 13506  0A29  3000               	movlw	0
 13507  0A2A  3D26               	addwfc	??_LCDWriteInt+1,w
 13508  0A2B  00A8               	movwf	??_LCDWriteInt+3
 13509  0A2C  0828               	movf	??_LCDWriteInt+3,w
 13510  0A2D  3A80               	xorlw	128
 13511  0A2E  3C80               	sublw	128
 13512  0A2F  1D03               	skipz
 13513  0A30  2A33               	goto	u3815
 13514  0A31  0827               	movf	??_LCDWriteInt+2,w
 13515  0A32  022F               	subwf	LCDWriteInt@i,w
 13516  0A33                     u3815:	
 13517  0A33  1803               	btfsc	3,0
 13518  0A34  2A45               	goto	l3169
 13519                           
 13520                           ;lcd.c: 228: {
 13521                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 13522  0A35  0020               	movlb	0	; select bank0
 13523  0A36  082F               	movf	LCDWriteInt@i,w
 13524  0A37  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13525  0A38  0086               	movwf	6
 13526  0A39  0187               	clrf	7
 13527  0A3A  0801               	movf	1,w
 13528  0A3B  3E30               	addlw	48
 13529  0A3C  3194  24D8  3189   	fcall	_LCDWriteCharacter
 13530  0A3F  3001               	movlw	1
 13531  0A40  0020               	movlb	0	; select bank0
 13532  0A41  00A5               	movwf	??_LCDWriteInt
 13533  0A42  0825               	movf	??_LCDWriteInt,w
 13534  0A43  07AF               	addwf	LCDWriteInt@i,f
 13535  0A44  2A1E               	goto	l3167
 13536  0A45                     l3169:	
 13537                           
 13538                           ;lcd.c: 230: }
 13539                           ;lcd.c: 232: if(numPlaces == 1)
 13540  0A45  0020               	movlb	0	; select bank0
 13541  0A46  0323               	decf	LCDWriteInt@numPlaces,w
 13542  0A47  1D03               	btfss	3,2
 13543  0A48  2A53               	goto	l3173
 13544                           
 13545                           ;lcd.c: 233: {
 13546                           ;lcd.c: 234: LCDWriteCharacter(46);
 13547  0A49  302E               	movlw	46
 13548  0A4A  3194  24D8  3189   	fcall	_LCDWriteCharacter
 13549                           
 13550                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 13551  0A4D  0020               	movlb	0	; select bank0
 13552  0A4E  082D               	movf	LCDWriteInt@str+4,w
 13553  0A4F  3E30               	addlw	48
 13554  0A50  3194  24D8  3189   	fcall	_LCDWriteCharacter
 13555  0A53                     l3173:	
 13556                           
 13557                           ;lcd.c: 236: }
 13558                           ;lcd.c: 238: if(numPlaces == 2)
 13559  0A53  3002               	movlw	2
 13560  0A54  0020               	movlb	0	; select bank0
 13561  0A55  0623               	xorwf	LCDWriteInt@numPlaces,w
 13562  0A56  1D03               	btfss	3,2
 13563  0A57  0008               	return
 13564                           
 13565                           ;lcd.c: 239: {
 13566                           ;lcd.c: 240: LCDWriteCharacter(46);
 13567  0A58  302E               	movlw	46
 13568  0A59  3194  24D8  3189   	fcall	_LCDWriteCharacter
 13569                           
 13570                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 13571  0A5C  0020               	movlb	0	; select bank0
 13572  0A5D  082C               	movf	LCDWriteInt@str+3,w
 13573  0A5E  3E30               	addlw	48
 13574  0A5F  3194  24D8  3189   	fcall	_LCDWriteCharacter
 13575                           
 13576                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 13577  0A62  0020               	movlb	0	; select bank0
 13578  0A63  082D               	movf	LCDWriteInt@str+4,w
 13579  0A64  3E30               	addlw	48
 13580  0A65  3194  24D8         	fcall	_LCDWriteCharacter
 13581  0A67  0008               	return
 13582  0A68                     __end_of_LCDWriteInt:	
 13583                           
 13584                           	psect	text35
 13585  1269                     __ptext35:	
 13586 ;; *************** function ___lwmod *****************
 13587 ;; Defined at:
 13588 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13589 ;; Parameters:    Size  Location     Type
 13590 ;;  divisor         2    0[COMMON] unsigned int 
 13591 ;;  dividend        2    2[COMMON] unsigned int 
 13592 ;; Auto vars:     Size  Location     Type
 13593 ;;  counter         1    5[COMMON] unsigned char 
 13594 ;; Return value:  Size  Location     Type
 13595 ;;                  2    0[COMMON] unsigned int 
 13596 ;; Registers used:
 13597 ;;		wreg, status,2, status,0
 13598 ;; Tracked objects:
 13599 ;;		On entry : 0/0
 13600 ;;		On exit  : 0/0
 13601 ;;		Unchanged: 0/0
 13602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13606 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13607 ;;Total ram usage:        6 bytes
 13608 ;; Hardware stack levels used:    1
 13609 ;; This function calls:
 13610 ;;		Nothing
 13611 ;; This function is called by:
 13612 ;;		_LCDWriteInt
 13613 ;; This function uses a non-reentrant model
 13614 ;;
 13615                           
 13616                           
 13617                           ;psect for function ___lwmod
 13618  1269                     ___lwmod:	
 13619                           
 13620                           ;incstack = 0
 13621                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13622  1269  0870               	movf	___lwmod@divisor,w
 13623  126A  0471               	iorwf	___lwmod@divisor+1,w
 13624  126B  1903               	btfsc	3,2
 13625  126C  2A90               	goto	l2955
 13626  126D  01F5               	clrf	___lwmod@counter
 13627  126E  0AF5               	incf	___lwmod@counter,f
 13628  126F                     l2945:	
 13629  126F  1BF1               	btfsc	___lwmod@divisor+1,7
 13630  1270  2A7B               	goto	l2947
 13631  1271  3001               	movlw	1
 13632  1272                     u3255:	
 13633  1272  35F0               	lslf	___lwmod@divisor,f
 13634  1273  0DF1               	rlf	___lwmod@divisor+1,f
 13635  1274  0B89               	decfsz	9,f
 13636  1275  2A72               	goto	u3255
 13637  1276  3001               	movlw	1
 13638  1277  00F4               	movwf	??___lwmod
 13639  1278  0874               	movf	??___lwmod,w
 13640  1279  07F5               	addwf	___lwmod@counter,f
 13641  127A  2A6F               	goto	l2945
 13642  127B                     l2947:	
 13643  127B  0871               	movf	___lwmod@divisor+1,w
 13644  127C  0273               	subwf	___lwmod@dividend+1,w
 13645  127D  1D03               	skipz
 13646  127E  2A81               	goto	u3275
 13647  127F  0870               	movf	___lwmod@divisor,w
 13648  1280  0272               	subwf	___lwmod@dividend,w
 13649  1281                     u3275:	
 13650  1281  1C03               	skipc
 13651  1282  2A87               	goto	l2951
 13652  1283  0870               	movf	___lwmod@divisor,w
 13653  1284  02F2               	subwf	___lwmod@dividend,f
 13654  1285  0871               	movf	___lwmod@divisor+1,w
 13655  1286  3BF3               	subwfb	___lwmod@dividend+1,f
 13656  1287                     l2951:	
 13657  1287  3001               	movlw	1
 13658  1288                     u3285:	
 13659  1288  36F1               	lsrf	___lwmod@divisor+1,f
 13660  1289  0CF0               	rrf	___lwmod@divisor,f
 13661  128A  0B89               	decfsz	9,f
 13662  128B  2A88               	goto	u3285
 13663  128C  3001               	movlw	1
 13664  128D  02F5               	subwf	___lwmod@counter,f
 13665  128E  1D03               	btfss	3,2
 13666  128F  2A7B               	goto	l2947
 13667  1290                     l2955:	
 13668  1290  0873               	movf	___lwmod@dividend+1,w
 13669  1291  00F1               	movwf	?___lwmod+1
 13670  1292  0872               	movf	___lwmod@dividend,w
 13671  1293  00F0               	movwf	?___lwmod
 13672  1294  0008               	return
 13673  1295                     __end_of___lwmod:	
 13674                           
 13675                           	psect	text36
 13676  1487                     __ptext36:	
 13677 ;; *************** function ___awdiv *****************
 13678 ;; Defined at:
 13679 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13680 ;; Parameters:    Size  Location     Type
 13681 ;;  divisor         2    0[COMMON] int 
 13682 ;;  dividend        2    2[COMMON] int 
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;  quotient        2    7[COMMON] int 
 13685 ;;  sign            1    6[COMMON] unsigned char 
 13686 ;;  counter         1    5[COMMON] unsigned char 
 13687 ;; Return value:  Size  Location     Type
 13688 ;;                  2    0[COMMON] int 
 13689 ;; Registers used:
 13690 ;;		wreg, status,2, status,0
 13691 ;; Tracked objects:
 13692 ;;		On entry : 0/0
 13693 ;;		On exit  : 0/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13697 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13699 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13700 ;;Total ram usage:        9 bytes
 13701 ;; Hardware stack levels used:    1
 13702 ;; This function calls:
 13703 ;;		Nothing
 13704 ;; This function is called by:
 13705 ;;		_LCDWriteInt
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           
 13710                           ;psect for function ___awdiv
 13711  1487                     ___awdiv:	
 13712                           
 13713                           ;incstack = 0
 13714                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13715  1487  01F6               	clrf	___awdiv@sign
 13716  1488  1FF1               	btfss	___awdiv@divisor+1,7
 13717  1489  2C91               	goto	l2851
 13718  148A  09F0               	comf	___awdiv@divisor,f
 13719  148B  09F1               	comf	___awdiv@divisor+1,f
 13720  148C  0AF0               	incf	___awdiv@divisor,f
 13721  148D  1903               	skipnz
 13722  148E  0AF1               	incf	___awdiv@divisor+1,f
 13723  148F  01F6               	clrf	___awdiv@sign
 13724  1490  0AF6               	incf	___awdiv@sign,f
 13725  1491                     l2851:	
 13726  1491  1FF3               	btfss	___awdiv@dividend+1,7
 13727  1492  2C9C               	goto	l2857
 13728  1493  09F2               	comf	___awdiv@dividend,f
 13729  1494  09F3               	comf	___awdiv@dividend+1,f
 13730  1495  0AF2               	incf	___awdiv@dividend,f
 13731  1496  1903               	skipnz
 13732  1497  0AF3               	incf	___awdiv@dividend+1,f
 13733  1498  3001               	movlw	1
 13734  1499  00F4               	movwf	??___awdiv
 13735  149A  0874               	movf	??___awdiv,w
 13736  149B  06F6               	xorwf	___awdiv@sign,f
 13737  149C                     l2857:	
 13738  149C  01F7               	clrf	___awdiv@quotient
 13739  149D  01F8               	clrf	___awdiv@quotient+1
 13740  149E  0870               	movf	___awdiv@divisor,w
 13741  149F  0471               	iorwf	___awdiv@divisor+1,w
 13742  14A0  1903               	btfsc	3,2
 13743  14A1  2CCB               	goto	l2879
 13744  14A2  01F5               	clrf	___awdiv@counter
 13745  14A3  0AF5               	incf	___awdiv@counter,f
 13746  14A4                     l2867:	
 13747  14A4  1BF1               	btfsc	___awdiv@divisor+1,7
 13748  14A5  2CB0               	goto	l2869
 13749  14A6  3001               	movlw	1
 13750  14A7                     u3085:	
 13751  14A7  35F0               	lslf	___awdiv@divisor,f
 13752  14A8  0DF1               	rlf	___awdiv@divisor+1,f
 13753  14A9  0B89               	decfsz	9,f
 13754  14AA  2CA7               	goto	u3085
 13755  14AB  3001               	movlw	1
 13756  14AC  00F4               	movwf	??___awdiv
 13757  14AD  0874               	movf	??___awdiv,w
 13758  14AE  07F5               	addwf	___awdiv@counter,f
 13759  14AF  2CA4               	goto	l2867
 13760  14B0                     l2869:	
 13761  14B0  3001               	movlw	1
 13762  14B1                     u3105:	
 13763  14B1  35F7               	lslf	___awdiv@quotient,f
 13764  14B2  0DF8               	rlf	___awdiv@quotient+1,f
 13765  14B3  0B89               	decfsz	9,f
 13766  14B4  2CB1               	goto	u3105
 13767  14B5  0871               	movf	___awdiv@divisor+1,w
 13768  14B6  0273               	subwf	___awdiv@dividend+1,w
 13769  14B7  1D03               	skipz
 13770  14B8  2CBB               	goto	u3115
 13771  14B9  0870               	movf	___awdiv@divisor,w
 13772  14BA  0272               	subwf	___awdiv@dividend,w
 13773  14BB                     u3115:	
 13774  14BB  1C03               	skipc
 13775  14BC  2CC2               	goto	l2875
 13776  14BD  0870               	movf	___awdiv@divisor,w
 13777  14BE  02F2               	subwf	___awdiv@dividend,f
 13778  14BF  0871               	movf	___awdiv@divisor+1,w
 13779  14C0  3BF3               	subwfb	___awdiv@dividend+1,f
 13780  14C1  1477               	bsf	___awdiv@quotient,0
 13781  14C2                     l2875:	
 13782  14C2  3001               	movlw	1
 13783  14C3                     u3125:	
 13784  14C3  36F1               	lsrf	___awdiv@divisor+1,f
 13785  14C4  0CF0               	rrf	___awdiv@divisor,f
 13786  14C5  0B89               	decfsz	9,f
 13787  14C6  2CC3               	goto	u3125
 13788  14C7  3001               	movlw	1
 13789  14C8  02F5               	subwf	___awdiv@counter,f
 13790  14C9  1D03               	btfss	3,2
 13791  14CA  2CB0               	goto	l2869
 13792  14CB                     l2879:	
 13793  14CB  0876               	movf	___awdiv@sign,w
 13794  14CC  1903               	btfsc	3,2
 13795  14CD  2CD3               	goto	l2883
 13796  14CE  09F7               	comf	___awdiv@quotient,f
 13797  14CF  09F8               	comf	___awdiv@quotient+1,f
 13798  14D0  0AF7               	incf	___awdiv@quotient,f
 13799  14D1  1903               	skipnz
 13800  14D2  0AF8               	incf	___awdiv@quotient+1,f
 13801  14D3                     l2883:	
 13802  14D3  0878               	movf	___awdiv@quotient+1,w
 13803  14D4  00F1               	movwf	?___awdiv+1
 13804  14D5  0877               	movf	___awdiv@quotient,w
 13805  14D6  00F0               	movwf	?___awdiv
 13806  14D7  0008               	return
 13807  14D8                     __end_of___awdiv:	
 13808                           
 13809                           	psect	text37
 13810  14D8                     __ptext37:	
 13811 ;; *************** function _LCDWriteCharacter *****************
 13812 ;; Defined at:
 13813 ;;		line 140 in file "lcd.c"
 13814 ;; Parameters:    Size  Location     Type
 13815 ;;  character       1    wreg     const unsigned char 
 13816 ;; Auto vars:     Size  Location     Type
 13817 ;;  character       1    9[COMMON] const unsigned char 
 13818 ;;  base            2   10[COMMON] unsigned int 
 13819 ;; Return value:  Size  Location     Type
 13820 ;;                  1    wreg      void 
 13821 ;; Registers used:
 13822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13823 ;; Tracked objects:
 13824 ;;		On entry : 0/0
 13825 ;;		On exit  : 0/0
 13826 ;;		Unchanged: 0/0
 13827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13829 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13831 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13832 ;;Total ram usage:        6 bytes
 13833 ;; Hardware stack levels used:    1
 13834 ;; Hardware stack levels required when called:    1
 13835 ;; This function calls:
 13836 ;;		_LCDWrite
 13837 ;;		___wmul
 13838 ;; This function is called by:
 13839 ;;		_LCDWriteString
 13840 ;;		_LCDWriteInt
 13841 ;;		_main
 13842 ;; This function uses a non-reentrant model
 13843 ;;
 13844                           
 13845                           
 13846                           ;psect for function _LCDWriteCharacter
 13847  14D8                     _LCDWriteCharacter:	
 13848                           
 13849                           ;incstack = 0
 13850                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13851                           ;LCDWriteCharacter@character stored from wreg
 13852  14D8  00F9               	movwf	LCDWriteCharacter@character
 13853                           
 13854                           ;lcd.c: 142: uint16_t base;
 13855                           ;lcd.c: 143: base = character - 0x20;
 13856  14D9  0879               	movf	LCDWriteCharacter@character,w
 13857  14DA  3EE0               	addlw	224
 13858  14DB  00FA               	movwf	LCDWriteCharacter@base
 13859  14DC  30FF               	movlw	255
 13860  14DD  1803               	skipnc
 13861  14DE  3000               	movlw	0
 13862  14DF  00FB               	movwf	LCDWriteCharacter@base+1
 13863                           
 13864                           ;lcd.c: 144: base *= 3;
 13865  14E0  3003               	movlw	3
 13866  14E1  00F0               	movwf	___wmul@multiplier
 13867  14E2  3000               	movlw	0
 13868  14E3  00F1               	movwf	___wmul@multiplier+1
 13869  14E4  087B               	movf	LCDWriteCharacter@base+1,w
 13870  14E5  00F3               	movwf	___wmul@multiplicand+1
 13871  14E6  087A               	movf	LCDWriteCharacter@base,w
 13872  14E7  00F2               	movwf	___wmul@multiplicand
 13873  14E8  3191  2187  3194   	fcall	___wmul
 13874  14EB  0871               	movf	?___wmul+1,w
 13875  14EC  00FB               	movwf	LCDWriteCharacter@base+1
 13876  14ED  0870               	movf	?___wmul,w
 13877  14EE  00FA               	movwf	LCDWriteCharacter@base
 13878                           
 13879                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13880  14EF  087B               	movf	LCDWriteCharacter@base+1,w
 13881  14F0  0085               	movwf	5
 13882  14F1  087A               	movf	LCDWriteCharacter@base,w
 13883  14F2  0084               	movwf	4
 13884  14F3  3000               	movlw	low (_fonts| (0+32768))
 13885  14F4  0784               	addwf	4,f
 13886  14F5  3090               	movlw	high (_fonts| (0+32768))
 13887  14F6  3D85               	addwfc	5,f
 13888  14F7  0800               	movf	0,w	;code access
 13889  14F8  00F6               	movwf	??_LCDWriteCharacter
 13890  14F9  0876               	movf	??_LCDWriteCharacter,w
 13891  14FA  00F0               	movwf	LCDWrite@data
 13892  14FB  3001               	movlw	1
 13893  14FC  3192  221E  3194   	fcall	_LCDWrite
 13894                           
 13895                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13896  14FF  087A               	movf	LCDWriteCharacter@base,w
 13897  1500  3E01               	addlw	1
 13898  1501  00F6               	movwf	??_LCDWriteCharacter
 13899  1502  3000               	movlw	0
 13900  1503  3D7B               	addwfc	LCDWriteCharacter@base+1,w
 13901  1504  00F7               	movwf	??_LCDWriteCharacter+1
 13902  1505  3000               	movlw	low (_fonts| (0+32768))
 13903  1506  0776               	addwf	??_LCDWriteCharacter,w
 13904  1507  0084               	movwf	4
 13905  1508  3090               	movlw	high (_fonts| (0+32768))
 13906  1509  3D77               	addwfc	??_LCDWriteCharacter+1,w
 13907  150A  0085               	movwf	5
 13908  150B  0800               	movf	0,w	;code access
 13909  150C  00F8               	movwf	??_LCDWriteCharacter+2
 13910  150D  0878               	movf	??_LCDWriteCharacter+2,w
 13911  150E  00F0               	movwf	LCDWrite@data
 13912  150F  3001               	movlw	1
 13913  1510  3192  221E  3194   	fcall	_LCDWrite
 13914                           
 13915                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13916  1513  087A               	movf	LCDWriteCharacter@base,w
 13917  1514  3E02               	addlw	2
 13918  1515  00F6               	movwf	??_LCDWriteCharacter
 13919  1516  3000               	movlw	0
 13920  1517  3D7B               	addwfc	LCDWriteCharacter@base+1,w
 13921  1518  00F7               	movwf	??_LCDWriteCharacter+1
 13922  1519  3000               	movlw	low (_fonts| (0+32768))
 13923  151A  0776               	addwf	??_LCDWriteCharacter,w
 13924  151B  0084               	movwf	4
 13925  151C  3090               	movlw	high (_fonts| (0+32768))
 13926  151D  3D77               	addwfc	??_LCDWriteCharacter+1,w
 13927  151E  0085               	movwf	5
 13928  151F  0800               	movf	0,w	;code access
 13929  1520  00F8               	movwf	??_LCDWriteCharacter+2
 13930  1521  0878               	movf	??_LCDWriteCharacter+2,w
 13931  1522  00F0               	movwf	LCDWrite@data
 13932  1523  3001               	movlw	1
 13933  1524  3192  221E  3194   	fcall	_LCDWrite
 13934                           
 13935                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13936  1527  01F0               	clrf	LCDWrite@data
 13937  1528  3001               	movlw	1
 13938  1529  3192  221E         	fcall	_LCDWrite
 13939  152B  0008               	return
 13940  152C                     __end_of_LCDWriteCharacter:	
 13941                           
 13942                           	psect	text38
 13943  1187                     __ptext38:	
 13944 ;; *************** function ___wmul *****************
 13945 ;; Defined at:
 13946 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13947 ;; Parameters:    Size  Location     Type
 13948 ;;  multiplier      2    0[COMMON] unsigned int 
 13949 ;;  multiplicand    2    2[COMMON] unsigned int 
 13950 ;; Auto vars:     Size  Location     Type
 13951 ;;  product         2    4[COMMON] unsigned int 
 13952 ;; Return value:  Size  Location     Type
 13953 ;;                  2    0[COMMON] unsigned int 
 13954 ;; Registers used:
 13955 ;;		wreg, status,2, status,0
 13956 ;; Tracked objects:
 13957 ;;		On entry : 0/0
 13958 ;;		On exit  : 0/0
 13959 ;;		Unchanged: 0/0
 13960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13965 ;;Total ram usage:        6 bytes
 13966 ;; Hardware stack levels used:    1
 13967 ;; This function calls:
 13968 ;;		Nothing
 13969 ;; This function is called by:
 13970 ;;		_readIAnalog
 13971 ;;		_readVAnalog
 13972 ;;		_LCDWriteCharacter
 13973 ;;		_eval_poly
 13974 ;; This function uses a non-reentrant model
 13975 ;;
 13976                           
 13977                           
 13978                           ;psect for function ___wmul
 13979  1187                     ___wmul:	
 13980                           
 13981                           ;incstack = 0
 13982                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13983  1187  01F4               	clrf	___wmul@product
 13984  1188  01F5               	clrf	___wmul@product+1
 13985  1189                     l2367:	
 13986  1189  1C70               	btfss	___wmul@multiplier,0
 13987  118A  298F               	goto	l625
 13988  118B  0872               	movf	___wmul@multiplicand,w
 13989  118C  07F4               	addwf	___wmul@product,f
 13990  118D  0873               	movf	___wmul@multiplicand+1,w
 13991  118E  3DF5               	addwfc	___wmul@product+1,f
 13992  118F                     l625:	
 13993  118F  3001               	movlw	1
 13994  1190                     u2335:	
 13995  1190  35F2               	lslf	___wmul@multiplicand,f
 13996  1191  0DF3               	rlf	___wmul@multiplicand+1,f
 13997  1192  0B89               	decfsz	9,f
 13998  1193  2990               	goto	u2335
 13999  1194  3001               	movlw	1
 14000  1195                     u2345:	
 14001  1195  36F1               	lsrf	___wmul@multiplier+1,f
 14002  1196  0CF0               	rrf	___wmul@multiplier,f
 14003  1197  0B89               	decfsz	9,f
 14004  1198  2995               	goto	u2345
 14005  1199  0870               	movf	___wmul@multiplier,w
 14006  119A  0471               	iorwf	___wmul@multiplier+1,w
 14007  119B  1D03               	btfss	3,2
 14008  119C  2989               	goto	l2367
 14009  119D  0875               	movf	___wmul@product+1,w
 14010  119E  00F1               	movwf	?___wmul+1
 14011  119F  0874               	movf	___wmul@product,w
 14012  11A0  00F0               	movwf	?___wmul
 14013  11A1  0008               	return
 14014  11A2                     __end_of___wmul:	
 14015                           
 14016                           	psect	text39
 14017  121E                     __ptext39:	
 14018 ;; *************** function _LCDWrite *****************
 14019 ;; Defined at:
 14020 ;;		line 281 in file "lcd.c"
 14021 ;; Parameters:    Size  Location     Type
 14022 ;;  data_or_comm    1    wreg     unsigned char 
 14023 ;;  data            1    0[COMMON] unsigned char 
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;  data_or_comm    1    2[COMMON] unsigned char 
 14026 ;;  i               1    4[COMMON] unsigned char 
 14027 ;;  d               1    3[COMMON] unsigned char 
 14028 ;; Return value:  Size  Location     Type
 14029 ;;                  1    wreg      void 
 14030 ;; Registers used:
 14031 ;;		wreg, status,2, status,0
 14032 ;; Tracked objects:
 14033 ;;		On entry : 0/0
 14034 ;;		On exit  : 0/0
 14035 ;;		Unchanged: 0/0
 14036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14037 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14038 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14040 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14041 ;;Total ram usage:        5 bytes
 14042 ;; Hardware stack levels used:    1
 14043 ;; This function calls:
 14044 ;;		Nothing
 14045 ;; This function is called by:
 14046 ;;		_gotoXY
 14047 ;;		_LCDWriteCharacter
 14048 ;;		_LCDClear
 14049 ;;		_LCDInit
 14050 ;; This function uses a non-reentrant model
 14051 ;;
 14052                           
 14053                           
 14054                           ;psect for function _LCDWrite
 14055  121E                     _LCDWrite:	
 14056                           
 14057                           ;incstack = 0
 14058                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 14059                           ;LCDWrite@data_or_command stored from wreg
 14060  121E  00F2               	movwf	LCDWrite@data_or_command
 14061                           
 14062                           ;lcd.c: 283: uint8_t i,d;
 14063                           ;lcd.c: 285: d=data;
 14064  121F  0870               	movf	LCDWrite@data,w
 14065  1220  00F1               	movwf	??_LCDWrite
 14066  1221  0871               	movf	??_LCDWrite,w
 14067  1222  00F3               	movwf	LCDWrite@d
 14068                           
 14069                           ;lcd.c: 287: if(data_or_command == 0)
 14070  1223  0872               	movf	LCDWrite@data_or_command,w
 14071  1224  1D03               	btfss	3,2
 14072  1225  2A29               	goto	l230
 14073                           
 14074                           ;lcd.c: 288: {
 14075                           ;lcd.c: 289: LATAbits.LATA2 = 0;
 14076  1226  0020               	movlb	0	; select bank0
 14077  1227  1116               	bcf	22,2	;volatile
 14078                           
 14079                           ;lcd.c: 290: }
 14080  1228  2A2B               	goto	l231
 14081  1229                     l230:	
 14082                           
 14083                           ;lcd.c: 291: else
 14084                           ;lcd.c: 292: {
 14085                           ;lcd.c: 293: LATAbits.LATA2 = 1;
 14086  1229  0020               	movlb	0	; select bank0
 14087  122A  1516               	bsf	22,2	;volatile
 14088  122B                     l231:	
 14089                           
 14090                           ;lcd.c: 294: }
 14091                           ;lcd.c: 296: LATAbits.LATA1 = 0;
 14092  122B  1096               	bcf	22,1	;volatile
 14093                           
 14094                           ;lcd.c: 298: for(i=0;i<8;i++)
 14095  122C  01F4               	clrf	LCDWrite@i
 14096  122D  3008               	movlw	8
 14097  122E  0274               	subwf	LCDWrite@i,w
 14098  122F  1803               	btfsc	3,0
 14099  1230  2A41               	goto	l233
 14100  1231                     l232:	
 14101                           
 14102                           ;lcd.c: 299: {
 14103                           ;lcd.c: 300: LATAbits.LATA3 = 0;
 14104  1231  1196               	bcf	22,3	;volatile
 14105                           
 14106                           ;lcd.c: 302: if(d&0x80)
 14107  1232  1FF3               	btfss	LCDWrite@d,7
 14108  1233  2A35               	goto	l234
 14109                           
 14110                           ;lcd.c: 303: {
 14111                           ;lcd.c: 304: LATAbits.LATA3 = 1;
 14112  1234  1596               	bsf	22,3	;volatile
 14113  1235                     l234:	
 14114                           
 14115                           ;lcd.c: 305: }
 14116                           ;lcd.c: 307: LATAbits.LATA4 = 1;
 14117  1235  1616               	bsf	22,4	;volatile
 14118                           
 14119                           ;lcd.c: 309: d<<=1;
 14120  1236  1003               	clrc
 14121  1237  0DF3               	rlf	LCDWrite@d,f
 14122                           
 14123                           ;lcd.c: 311: LATAbits.LATA4=0;
 14124  1238  1216               	bcf	22,4	;volatile
 14125  1239  3001               	movlw	1
 14126  123A  00F1               	movwf	??_LCDWrite
 14127  123B  0871               	movf	??_LCDWrite,w
 14128  123C  07F4               	addwf	LCDWrite@i,f
 14129  123D  3008               	movlw	8
 14130  123E  0274               	subwf	LCDWrite@i,w
 14131  123F  1C03               	skipc
 14132  1240  2A31               	goto	l232
 14133  1241                     l233:	
 14134                           
 14135                           ;lcd.c: 312: }
 14136                           ;lcd.c: 314: LATAbits.LATA1 = 1;
 14137  1241  1496               	bsf	22,1	;volatile
 14138  1242  0008               	return
 14139  1243                     __end_of_LCDWrite:	
 14140                           
 14141                           	psect	text40
 14142  00A0                     __ptext40:	
 14143 ;; *************** function _Battery_State_Machine *****************
 14144 ;; Defined at:
 14145 ;;		line 28 in file "battery_charger.c"
 14146 ;; Parameters:    Size  Location     Type
 14147 ;;  z               1    wreg     unsigned char 
 14148 ;; Auto vars:     Size  Location     Type
 14149 ;;  z               1   35[BANK0 ] unsigned char 
 14150 ;; Return value:  Size  Location     Type
 14151 ;;                  1    wreg      void 
 14152 ;; Registers used:
 14153 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14154 ;; Tracked objects:
 14155 ;;		On entry : 0/0
 14156 ;;		On exit  : 0/0
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14162 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;Total ram usage:        6 bytes
 14164 ;; Hardware stack levels used:    1
 14165 ;; Hardware stack levels required when called:    2
 14166 ;; This function calls:
 14167 ;;		___awtoft
 14168 ;;		___ftmul
 14169 ;;		___fttol
 14170 ;; This function is called by:
 14171 ;;		_main
 14172 ;; This function uses a non-reentrant model
 14173 ;;
 14174                           
 14175                           
 14176                           ;psect for function _Battery_State_Machine
 14177  00A0                     _Battery_State_Machine:	
 14178                           
 14179                           ;incstack = 0
 14180                           ; Regs used in _Battery_State_Machine: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14181                           ;Battery_State_Machine@z stored from wreg
 14182  00A0  0020               	movlb	0	; select bank0
 14183  00A1  00C3               	movwf	Battery_State_Machine@z
 14184                           
 14185                           ;battery_charger.c: 30: if(batteryState[z]==PRECHARGE)
 14186  00A2  0843               	movf	Battery_State_Machine@z,w
 14187  00A3  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 14188  00A4  0086               	movwf	6
 14189  00A5  0187               	clrf	7
 14190  00A6  3003               	movlw	3
 14191  00A7  0601               	xorwf	1,w
 14192  00A8  1D03               	btfss	3,2
 14193  00A9  28F7               	goto	l3011
 14194                           
 14195                           ;battery_charger.c: 31: {
 14196                           ;battery_charger.c: 32: if(voltage[z]<1075)
 14197  00AA  3543               	lslf	Battery_State_Machine@z,w
 14198  00AB  3EA8               	addlw	(low (_voltage| 0))& (0+255)
 14199  00AC  0086               	movwf	6
 14200  00AD  0187               	clrf	7
 14201  00AE  3F40               	moviw [0]fsr1
 14202  00AF  00BE               	movwf	??_Battery_State_Machine
 14203  00B0  3F41               	moviw [1]fsr1
 14204  00B1  00BF               	movwf	??_Battery_State_Machine+1
 14205  00B2  083F               	movf	??_Battery_State_Machine+1,w
 14206  00B3  3A80               	xorlw	128
 14207  00B4  00C0               	movwf	??_Battery_State_Machine+2
 14208  00B5  3084               	movlw	132
 14209  00B6  0240               	subwf	??_Battery_State_Machine+2,w
 14210  00B7  1D03               	skipz
 14211  00B8  28BB               	goto	u3455
 14212  00B9  3033               	movlw	51
 14213  00BA  023E               	subwf	??_Battery_State_Machine,w
 14214  00BB                     u3455:	
 14215  00BB  1803               	skipnc
 14216  00BC  28E5               	goto	l3009
 14217                           
 14218                           ;battery_charger.c: 33: {
 14219                           ;battery_charger.c: 34: if(stateCounter[z]>0)
 14220  00BD  0020               	movlb	0	; select bank0
 14221  00BE  3543               	lslf	Battery_State_Machine@z,w
 14222  00BF  3EBD               	addlw	(low (_stateCounter| 0))& (0+255)
 14223  00C0  0086               	movwf	6
 14224  00C1  0187               	clrf	7
 14225  00C2  3F40               	moviw [0]fsr1
 14226  00C3  00BE               	movwf	??_Battery_State_Machine
 14227  00C4  3F41               	moviw [1]fsr1
 14228  00C5  00BF               	movwf	??_Battery_State_Machine+1
 14229  00C6  083F               	movf	??_Battery_State_Machine+1,w
 14230  00C7  3A80               	xorlw	128
 14231  00C8  00C0               	movwf	??_Battery_State_Machine+2
 14232  00C9  3080               	movlw	128
 14233  00CA  0240               	subwf	??_Battery_State_Machine+2,w
 14234  00CB  1D03               	skipz
 14235  00CC  28CF               	goto	u3465
 14236  00CD  3001               	movlw	1
 14237  00CE  023E               	subwf	??_Battery_State_Machine,w
 14238  00CF                     u3465:	
 14239  00CF  1C03               	skipc
 14240  00D0  28DD               	goto	l3007
 14241                           
 14242                           ;battery_charger.c: 35: {
 14243                           ;battery_charger.c: 36: stateCounter[z]-=1;
 14244  00D1  0020               	movlb	0	; select bank0
 14245  00D2  3543               	lslf	Battery_State_Machine@z,w
 14246  00D3  3EBD               	addlw	(low (_stateCounter| 0))& (0+255)
 14247  00D4  0086               	movwf	6
 14248  00D5  0187               	clrf	7
 14249  00D6  30FF               	movlw	255
 14250  00D7  0781               	addwf	1,f
 14251  00D8  3141               	addfsr 1,1
 14252  00D9  30FF               	movlw	255
 14253  00DA  3D81               	addwfc	1,f
 14254  00DB  317F               	addfsr 1,-1
 14255                           
 14256                           ;battery_charger.c: 37: }
 14257  00DC  0008               	return
 14258  00DD                     l3007:	
 14259                           
 14260                           ;battery_charger.c: 38: else
 14261                           ;battery_charger.c: 39: {
 14262                           ;battery_charger.c: 40: batteryState[z]=FAULT;
 14263  00DD  0020               	movlb	0	; select bank0
 14264  00DE  0843               	movf	Battery_State_Machine@z,w
 14265  00DF  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 14266  00E0  0086               	movwf	6
 14267  00E1  0187               	clrf	7
 14268  00E2  0181               	clrf	1
 14269  00E3  0A81               	incf	1,f
 14270                           
 14271                           ;battery_charger.c: 41: }
 14272                           ;battery_charger.c: 42: }
 14273  00E4  0008               	return
 14274  00E5                     l3009:	
 14275                           
 14276                           ;battery_charger.c: 43: else
 14277                           ;battery_charger.c: 44: {
 14278                           ;battery_charger.c: 45: batteryState[z]=CHARGE;
 14279  00E5  3004               	movlw	4
 14280  00E6  0020               	movlb	0	; select bank0
 14281  00E7  00BE               	movwf	??_Battery_State_Machine
 14282  00E8  0843               	movf	Battery_State_Machine@z,w
 14283  00E9  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 14284  00EA  0086               	movwf	6
 14285  00EB  0187               	clrf	7
 14286  00EC  083E               	movf	??_Battery_State_Machine,w
 14287  00ED  0081               	movwf	1
 14288                           
 14289                           ;battery_charger.c: 46: Iref[z]=35;
 14290  00EE  3543               	lslf	Battery_State_Machine@z,w
 14291  00EF  3EC1               	addlw	(low (_Iref| 0))& (0+255)
 14292  00F0  0086               	movwf	6
 14293  00F1  0187               	clrf	7
 14294  00F2  3023               	movlw	35
 14295  00F3  3FC0               	movwi [0]fsr1
 14296  00F4  3000               	movlw	0
 14297  00F5  3FC1               	movwi [1]fsr1
 14298                           
 14299                           ;battery_charger.c: 47: }
 14300                           ;battery_charger.c: 48: }
 14301  00F6  0008               	return
 14302  00F7                     l3011:	
 14303                           
 14304                           ;battery_charger.c: 49: else if(batteryState[z]==CHARGE)
 14305  00F7  0843               	movf	Battery_State_Machine@z,w
 14306  00F8  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 14307  00F9  0086               	movwf	6
 14308  00FA  0187               	clrf	7
 14309  00FB  3004               	movlw	4
 14310  00FC  0601               	xorwf	1,w
 14311  00FD  1D03               	btfss	3,2
 14312  00FE  29B9               	goto	l3031
 14313                           
 14314                           ;battery_charger.c: 50: {
 14315                           ;battery_charger.c: 51: Vref[z]=1425+(int16_t)((250-batteryTemp)*.24);
 14316  00FF  096D               	comf	_batteryTemp,w
 14317  0100  00BE               	movwf	??_Battery_State_Machine
 14318  0101  096E               	comf	_batteryTemp+1,w
 14319  0102  00BF               	movwf	??_Battery_State_Machine+1
 14320  0103  0ABE               	incf	??_Battery_State_Machine,f
 14321  0104  1903               	skipnz
 14322  0105  0ABF               	incf	??_Battery_State_Machine+1,f
 14323  0106  083E               	movf	??_Battery_State_Machine,w
 14324  0107  3EFA               	addlw	250
 14325  0108  00F8               	movwf	___awtoft@c
 14326  0109  3000               	movlw	0
 14327  010A  3D3F               	addwfc	??_Battery_State_Machine+1,w
 14328  010B  00F9               	movwf	___awtoft@c+1
 14329  010C  3191  21FE  3180   	fcall	___awtoft
 14330  010F  0878               	movf	?___awtoft,w
 14331  0110  0020               	movlb	0	; select bank0
 14332  0111  00A3               	movwf	___ftmul@f2
 14333  0112  0879               	movf	?___awtoft+1,w
 14334  0113  00A4               	movwf	___ftmul@f2+1
 14335  0114  087A               	movf	?___awtoft+2,w
 14336  0115  00A5               	movwf	___ftmul@f2+2
 14337  0116  30C3               	movlw	195
 14338  0117  00A0               	movwf	___ftmul@f1
 14339  0118  3075               	movlw	117
 14340  0119  00A1               	movwf	___ftmul@f1+1
 14341  011A  303E               	movlw	62
 14342  011B  00A2               	movwf	___ftmul@f1+2
 14343  011C  3188  20FB  3180   	fcall	___ftmul
 14344  011F  0020               	movlb	0	; select bank0
 14345  0120  0820               	movf	?___ftmul,w
 14346  0121  00B0               	movwf	___fttol@f1
 14347  0122  0821               	movf	?___ftmul+1,w
 14348  0123  00B1               	movwf	___fttol@f1+1
 14349  0124  0822               	movf	?___ftmul+2,w
 14350  0125  00B2               	movwf	___fttol@f1+2
 14351  0126  3180  2019  3180   	fcall	___fttol
 14352  0129  0020               	movlb	0	; select bank0
 14353  012A  0830               	movf	?___fttol,w
 14354  012B  3E91               	addlw	145
 14355  012C  00C0               	movwf	??_Battery_State_Machine+2
 14356  012D  3005               	movlw	5
 14357  012E  3D31               	addwfc	?___fttol+1,w
 14358  012F  00C1               	movwf	??_Battery_State_Machine+3
 14359  0130  3543               	lslf	Battery_State_Machine@z,w
 14360  0131  3E5A               	addlw	(low (_Vref| 0))& (0+255)
 14361  0132  0086               	movwf	6
 14362  0133  0187               	clrf	7
 14363  0134  0840               	movf	??_Battery_State_Machine+2,w
 14364  0135  3FC0               	movwi [0]fsr1
 14365  0136  0841               	movf	??_Battery_State_Machine+3,w
 14366  0137  3FC1               	movwi [1]fsr1
 14367                           
 14368                           ;battery_charger.c: 52: if(!(Imode[z]))
 14369  0138  0843               	movf	Battery_State_Machine@z,w
 14370  0139  3E62               	addlw	(low (_Imode| 0))& (0+255)
 14371  013A  0086               	movwf	6
 14372  013B  0187               	clrf	7
 14373  013C  0801               	movf	1,w
 14374  013D  1D03               	btfss	3,2
 14375  013E  29A0               	goto	l3027
 14376                           
 14377                           ;battery_charger.c: 53: {
 14378                           ;battery_charger.c: 54: if(current[z] < Imin[z])
 14379  013F  3543               	lslf	Battery_State_Machine@z,w
 14380  0140  3EC9               	addlw	(low (_Imin| 0))& (0+255)
 14381  0141  0086               	movwf	6
 14382  0142  0187               	clrf	7
 14383  0143  3F40               	moviw [0]fsr1
 14384  0144  00BE               	movwf	??_Battery_State_Machine
 14385  0145  3F41               	moviw [1]fsr1
 14386  0146  00BF               	movwf	??_Battery_State_Machine+1
 14387  0147  3543               	lslf	Battery_State_Machine@z,w
 14388  0148  3EB0               	addlw	(low (_current| 0))& (0+255)
 14389  0149  0086               	movwf	6
 14390  014A  0187               	clrf	7
 14391  014B  3F40               	moviw [0]fsr1
 14392  014C  00C0               	movwf	??_Battery_State_Machine+2
 14393  014D  3F41               	moviw [1]fsr1
 14394  014E  00C1               	movwf	??_Battery_State_Machine+3
 14395  014F  0841               	movf	??_Battery_State_Machine+3,w
 14396  0150  3A80               	xorlw	128
 14397  0151  00C2               	movwf	??_Battery_State_Machine+4
 14398  0152  083F               	movf	??_Battery_State_Machine+1,w
 14399  0153  3A80               	xorlw	128
 14400  0154  0242               	subwf	??_Battery_State_Machine+4,w
 14401  0155  1D03               	skipz
 14402  0156  2959               	goto	u3495
 14403  0157  083E               	movf	??_Battery_State_Machine,w
 14404  0158  0240               	subwf	??_Battery_State_Machine+2,w
 14405  0159                     u3495:	
 14406  0159  1803               	skipnc
 14407  015A  2986               	goto	l3023
 14408                           
 14409                           ;battery_charger.c: 55: {
 14410                           ;battery_charger.c: 56: IminCount[z]-=2;
 14411  015B  0020               	movlb	0	; select bank0
 14412  015C  3543               	lslf	Battery_State_Machine@z,w
 14413  015D  3EC5               	addlw	(low (_IminCount| 0))& (0+255)
 14414  015E  0086               	movwf	6
 14415  015F  0187               	clrf	7
 14416  0160  3002               	movlw	2
 14417  0161  0281               	subwf	1,f
 14418  0162  3141               	addfsr 1,1
 14419  0163  3000               	movlw	0
 14420  0164  3B81               	subwfb	1,f
 14421  0165  317F               	addfsr 1,-1
 14422                           
 14423                           ;battery_charger.c: 57: if(IminCount[z]<10)
 14424  0166  3543               	lslf	Battery_State_Machine@z,w
 14425  0167  3EC5               	addlw	(low (_IminCount| 0))& (0+255)
 14426  0168  0086               	movwf	6
 14427  0169  0187               	clrf	7
 14428  016A  3F40               	moviw [0]fsr1
 14429  016B  00BE               	movwf	??_Battery_State_Machine
 14430  016C  3F41               	moviw [1]fsr1
 14431  016D  00BF               	movwf	??_Battery_State_Machine+1
 14432  016E  3000               	movlw	0
 14433  016F  023F               	subwf	??_Battery_State_Machine+1,w
 14434  0170  300A               	movlw	10
 14435  0171  1903               	skipnz
 14436  0172  023E               	subwf	??_Battery_State_Machine,w
 14437  0173  1803               	skipnc
 14438  0174  0008               	return
 14439                           
 14440                           ;battery_charger.c: 58: {
 14441                           ;battery_charger.c: 59: batteryState[z] = FLOAT;
 14442  0175  3005               	movlw	5
 14443  0176  00BE               	movwf	??_Battery_State_Machine
 14444  0177  0843               	movf	Battery_State_Machine@z,w
 14445  0178  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 14446  0179  0086               	movwf	6
 14447  017A  0187               	clrf	7
 14448  017B  083E               	movf	??_Battery_State_Machine,w
 14449  017C  0081               	movwf	1
 14450                           
 14451                           ;battery_charger.c: 60: IminCount[z]=10;
 14452  017D  3543               	lslf	Battery_State_Machine@z,w
 14453  017E  3EC5               	addlw	(low (_IminCount| 0))& (0+255)
 14454  017F  0086               	movwf	6
 14455  0180  0187               	clrf	7
 14456  0181  300A               	movlw	10
 14457  0182  3FC0               	movwi [0]fsr1
 14458  0183  3000               	movlw	0
 14459  0184  3FC1               	movwi [1]fsr1
 14460                           
 14461                           ;battery_charger.c: 61: }
 14462                           ;battery_charger.c: 62: }
 14463  0185  0008               	return
 14464  0186                     l3023:	
 14465                           
 14466                           ;battery_charger.c: 63: else
 14467                           ;battery_charger.c: 64: {
 14468                           ;battery_charger.c: 65: if(IminCount[z]<600)IminCount[z]+=1;
 14469  0186  0020               	movlb	0	; select bank0
 14470  0187  3543               	lslf	Battery_State_Machine@z,w
 14471  0188  3EC5               	addlw	(low (_IminCount| 0))& (0+255)
 14472  0189  0086               	movwf	6
 14473  018A  0187               	clrf	7
 14474  018B  3F40               	moviw [0]fsr1
 14475  018C  00BE               	movwf	??_Battery_State_Machine
 14476  018D  3F41               	moviw [1]fsr1
 14477  018E  00BF               	movwf	??_Battery_State_Machine+1
 14478  018F  3002               	movlw	2
 14479  0190  023F               	subwf	??_Battery_State_Machine+1,w
 14480  0191  3058               	movlw	88
 14481  0192  1903               	skipnz
 14482  0193  023E               	subwf	??_Battery_State_Machine,w
 14483  0194  1803               	skipnc
 14484  0195  0008               	return
 14485  0196  3543               	lslf	Battery_State_Machine@z,w
 14486  0197  3EC5               	addlw	(low (_IminCount| 0))& (0+255)
 14487  0198  0086               	movwf	6
 14488  0199  0187               	clrf	7
 14489  019A  3001               	movlw	1
 14490  019B  0781               	addwf	1,f
 14491  019C  3141               	addfsr 1,1
 14492  019D  1803               	skipnc
 14493  019E  0A81               	incf	1,f
 14494                           
 14495                           ;battery_charger.c: 66: }
 14496                           ;battery_charger.c: 67: }
 14497  019F  0008               	return
 14498  01A0                     l3027:	
 14499                           
 14500                           ;battery_charger.c: 68: else if(IminCount[z]<600)IminCount[z]+=1;
 14501  01A0  3543               	lslf	Battery_State_Machine@z,w
 14502  01A1  3EC5               	addlw	(low (_IminCount| 0))& (0+255)
 14503  01A2  0086               	movwf	6
 14504  01A3  0187               	clrf	7
 14505  01A4  3F40               	moviw [0]fsr1
 14506  01A5  00BE               	movwf	??_Battery_State_Machine
 14507  01A6  3F41               	moviw [1]fsr1
 14508  01A7  00BF               	movwf	??_Battery_State_Machine+1
 14509  01A8  3002               	movlw	2
 14510  01A9  023F               	subwf	??_Battery_State_Machine+1,w
 14511  01AA  3058               	movlw	88
 14512  01AB  1903               	skipnz
 14513  01AC  023E               	subwf	??_Battery_State_Machine,w
 14514  01AD  1803               	skipnc
 14515  01AE  0008               	return
 14516  01AF  3543               	lslf	Battery_State_Machine@z,w
 14517  01B0  3EC5               	addlw	(low (_IminCount| 0))& (0+255)
 14518  01B1  0086               	movwf	6
 14519  01B2  0187               	clrf	7
 14520  01B3  3001               	movlw	1
 14521  01B4  0781               	addwf	1,f
 14522  01B5  3141               	addfsr 1,1
 14523  01B6  1803               	skipnc
 14524  01B7  0A81               	incf	1,f
 14525                           
 14526                           ;battery_charger.c: 69: }
 14527  01B8  0008               	return
 14528  01B9                     l3031:	
 14529                           
 14530                           ;battery_charger.c: 70: else if(batteryState[z] == FLOAT)
 14531  01B9  0843               	movf	Battery_State_Machine@z,w
 14532  01BA  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 14533  01BB  0086               	movwf	6
 14534  01BC  0187               	clrf	7
 14535  01BD  3005               	movlw	5
 14536  01BE  0601               	xorwf	1,w
 14537  01BF  1D03               	btfss	3,2
 14538  01C0  2A07               	goto	l3039
 14539                           
 14540                           ;battery_charger.c: 71: {
 14541                           ;battery_charger.c: 72: Vref[z]=1350+(int16_t)((250-batteryTemp)*.24);
 14542  01C1  096D               	comf	_batteryTemp,w
 14543  01C2  00BE               	movwf	??_Battery_State_Machine
 14544  01C3  096E               	comf	_batteryTemp+1,w
 14545  01C4  00BF               	movwf	??_Battery_State_Machine+1
 14546  01C5  0ABE               	incf	??_Battery_State_Machine,f
 14547  01C6  1903               	skipnz
 14548  01C7  0ABF               	incf	??_Battery_State_Machine+1,f
 14549  01C8  083E               	movf	??_Battery_State_Machine,w
 14550  01C9  3EFA               	addlw	250
 14551  01CA  00F8               	movwf	___awtoft@c
 14552  01CB  3000               	movlw	0
 14553  01CC  3D3F               	addwfc	??_Battery_State_Machine+1,w
 14554  01CD  00F9               	movwf	___awtoft@c+1
 14555  01CE  3191  21FE  3180   	fcall	___awtoft
 14556  01D1  0878               	movf	?___awtoft,w
 14557  01D2  0020               	movlb	0	; select bank0
 14558  01D3  00A3               	movwf	___ftmul@f2
 14559  01D4  0879               	movf	?___awtoft+1,w
 14560  01D5  00A4               	movwf	___ftmul@f2+1
 14561  01D6  087A               	movf	?___awtoft+2,w
 14562  01D7  00A5               	movwf	___ftmul@f2+2
 14563  01D8  30C3               	movlw	195
 14564  01D9  00A0               	movwf	___ftmul@f1
 14565  01DA  3075               	movlw	117
 14566  01DB  00A1               	movwf	___ftmul@f1+1
 14567  01DC  303E               	movlw	62
 14568  01DD  00A2               	movwf	___ftmul@f1+2
 14569  01DE  3188  20FB  3180   	fcall	___ftmul
 14570  01E1  0020               	movlb	0	; select bank0
 14571  01E2  0820               	movf	?___ftmul,w
 14572  01E3  00B0               	movwf	___fttol@f1
 14573  01E4  0821               	movf	?___ftmul+1,w
 14574  01E5  00B1               	movwf	___fttol@f1+1
 14575  01E6  0822               	movf	?___ftmul+2,w
 14576  01E7  00B2               	movwf	___fttol@f1+2
 14577  01E8  3180  2019         	fcall	___fttol
 14578  01EA  0020               	movlb	0	; select bank0
 14579  01EB  0830               	movf	?___fttol,w
 14580  01EC  3E46               	addlw	70
 14581  01ED  00C0               	movwf	??_Battery_State_Machine+2
 14582  01EE  3005               	movlw	5
 14583  01EF  3D31               	addwfc	?___fttol+1,w
 14584  01F0  00C1               	movwf	??_Battery_State_Machine+3
 14585  01F1  3543               	lslf	Battery_State_Machine@z,w
 14586  01F2  3E5A               	addlw	(low (_Vref| 0))& (0+255)
 14587  01F3  0086               	movwf	6
 14588  01F4  0187               	clrf	7
 14589  01F5  0840               	movf	??_Battery_State_Machine+2,w
 14590  01F6  3FC0               	movwi [0]fsr1
 14591  01F7  0841               	movf	??_Battery_State_Machine+3,w
 14592  01F8  3FC1               	movwi [1]fsr1
 14593                           
 14594                           ;battery_charger.c: 73: Iref[z]=15;
 14595  01F9  3543               	lslf	Battery_State_Machine@z,w
 14596  01FA  3EC1               	addlw	(low (_Iref| 0))& (0+255)
 14597  01FB  0086               	movwf	6
 14598  01FC  0187               	clrf	7
 14599  01FD  300F               	movlw	15
 14600  01FE  3FC0               	movwi [0]fsr1
 14601  01FF  3000               	movlw	0
 14602  0200  3FC1               	movwi [1]fsr1
 14603                           
 14604                           ;battery_charger.c: 74: Imode[z]=0;
 14605  0201  0843               	movf	Battery_State_Machine@z,w
 14606  0202  3E62               	addlw	(low (_Imode| 0))& (0+255)
 14607  0203  0086               	movwf	6
 14608  0204  0187               	clrf	7
 14609  0205  0181               	clrf	1
 14610                           
 14611                           ;battery_charger.c: 75: }
 14612  0206  0008               	return
 14613  0207                     l3039:	
 14614                           
 14615                           ;battery_charger.c: 76: else
 14616                           ;battery_charger.c: 77: if(batteryState[z] == FAULT)
 14617  0207  0843               	movf	Battery_State_Machine@z,w
 14618  0208  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 14619  0209  0086               	movwf	6
 14620  020A  0187               	clrf	7
 14621  020B  0301               	decf	1,w
 14622  020C  1D03               	btfss	3,2
 14623  020D  0008               	return
 14624                           
 14625                           ;battery_charger.c: 78: {
 14626                           ;battery_charger.c: 79: batteryState[z]=PRECHARGE;
 14627  020E  3003               	movlw	3
 14628  020F  00BE               	movwf	??_Battery_State_Machine
 14629  0210  0843               	movf	Battery_State_Machine@z,w
 14630  0211  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 14631  0212  0086               	movwf	6
 14632  0213  0187               	clrf	7
 14633  0214  083E               	movf	??_Battery_State_Machine,w
 14634  0215  0081               	movwf	1
 14635  0216  0008               	return
 14636  0217                     __end_of_Battery_State_Machine:	
 14637                           
 14638                           	psect	text41
 14639  0019                     __ptext41:	
 14640 ;; *************** function ___fttol *****************
 14641 ;; Defined at:
 14642 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;  f1              3   16[BANK0 ] float 
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;  lval            4   25[BANK0 ] unsigned long 
 14647 ;;  exp1            1   29[BANK0 ] unsigned char 
 14648 ;;  sign1           1   24[BANK0 ] unsigned char 
 14649 ;; Return value:  Size  Location     Type
 14650 ;;                  4   16[BANK0 ] long 
 14651 ;; Registers used:
 14652 ;;		wreg, status,2, status,0
 14653 ;; Tracked objects:
 14654 ;;		On entry : 0/0
 14655 ;;		On exit  : 0/0
 14656 ;;		Unchanged: 0/0
 14657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14658 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14659 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14660 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14661 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14662 ;;Total ram usage:       14 bytes
 14663 ;; Hardware stack levels used:    1
 14664 ;; This function calls:
 14665 ;;		Nothing
 14666 ;; This function is called by:
 14667 ;;		_tempCalc
 14668 ;;		_main
 14669 ;;		_calculateCurrent0
 14670 ;;		_calculateCurrent1
 14671 ;;		_calculateCurrent2
 14672 ;;		_calculateCurrent3
 14673 ;;		_Init_Battery_State_Machine
 14674 ;;		_Battery_State_Machine
 14675 ;;		_cc_cv_mode
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679                           
 14680                           ;psect for function ___fttol
 14681  0019                     ___fttol:	
 14682                           
 14683                           ;incstack = 0
 14684                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 14685  0019  0020               	movlb	0	; select bank0
 14686  001A  0830               	movf	___fttol@f1,w
 14687  001B  00B4               	movwf	??___fttol
 14688  001C  0831               	movf	___fttol@f1+1,w
 14689  001D  00B5               	movwf	??___fttol+1
 14690  001E  0832               	movf	___fttol@f1+2,w
 14691  001F  00B6               	movwf	??___fttol+2
 14692  0020  1003               	clrc
 14693  0021  0D35               	rlf	??___fttol+1,w
 14694  0022  0D36               	rlf	??___fttol+2,w
 14695  0023  00B7               	movwf	??___fttol+3
 14696  0024  0837               	movf	??___fttol+3,w
 14697  0025  00BD               	movwf	___fttol@exp1
 14698  0026  083D               	movf	___fttol@exp1,w
 14699  0027  1D03               	btfss	3,2
 14700  0028  2832               	goto	l2539
 14701  0029  3000               	movlw	0
 14702  002A  00B3               	movwf	?___fttol+3
 14703  002B  3000               	movlw	0
 14704  002C  00B2               	movwf	?___fttol+2
 14705  002D  3000               	movlw	0
 14706  002E  00B1               	movwf	?___fttol+1
 14707  002F  3000               	movlw	0
 14708  0030  00B0               	movwf	?___fttol
 14709  0031  0008               	return
 14710  0032                     l2539:	
 14711  0032  0830               	movf	___fttol@f1,w
 14712  0033  00B4               	movwf	??___fttol
 14713  0034  0831               	movf	___fttol@f1+1,w
 14714  0035  00B5               	movwf	??___fttol+1
 14715  0036  0832               	movf	___fttol@f1+2,w
 14716  0037  00B6               	movwf	??___fttol+2
 14717  0038  3017               	movlw	23
 14718  0039                     u2765:	
 14719  0039  36B6               	lsrf	??___fttol+2,f
 14720  003A  0CB5               	rrf	??___fttol+1,f
 14721  003B  0CB4               	rrf	??___fttol,f
 14722  003C  0B89               	decfsz	9,f
 14723  003D  2839               	goto	u2765
 14724  003E  0834               	movf	??___fttol,w
 14725  003F  00B7               	movwf	??___fttol+3
 14726  0040  0837               	movf	??___fttol+3,w
 14727  0041  00B8               	movwf	___fttol@sign1
 14728  0042  17B1               	bsf	___fttol@f1+1,7
 14729  0043  30FF               	movlw	255
 14730  0044  05B0               	andwf	___fttol@f1,f
 14731  0045  30FF               	movlw	255
 14732  0046  05B1               	andwf	___fttol@f1+1,f
 14733  0047  3000               	movlw	0
 14734  0048  05B2               	andwf	___fttol@f1+2,f
 14735  0049  0830               	movf	___fttol@f1,w
 14736  004A  00B9               	movwf	___fttol@lval
 14737  004B  0831               	movf	___fttol@f1+1,w
 14738  004C  00BA               	movwf	___fttol@lval+1
 14739  004D  0832               	movf	___fttol@f1+2,w
 14740  004E  00BB               	movwf	___fttol@lval+2
 14741  004F  01BC               	clrf	___fttol@lval+3
 14742  0050  308E               	movlw	142
 14743  0051  02BD               	subwf	___fttol@exp1,f
 14744  0052  1FBD               	btfss	___fttol@exp1,7
 14745  0053  2870               	goto	l2559
 14746  0054  083D               	movf	___fttol@exp1,w
 14747  0055  3A80               	xorlw	128
 14748  0056  3E8F               	addlw	143
 14749  0057  1803               	skipnc
 14750  0058  2862               	goto	l2557
 14751  0059  3000               	movlw	0
 14752  005A  00B3               	movwf	?___fttol+3
 14753  005B  3000               	movlw	0
 14754  005C  00B2               	movwf	?___fttol+2
 14755  005D  3000               	movlw	0
 14756  005E  00B1               	movwf	?___fttol+1
 14757  005F  3000               	movlw	0
 14758  0060  00B0               	movwf	?___fttol
 14759  0061  0008               	return
 14760  0062                     l2557:	
 14761  0062  3001               	movlw	1
 14762  0063                     u2795:	
 14763  0063  36BC               	lsrf	___fttol@lval+3,f
 14764  0064  0CBB               	rrf	___fttol@lval+2,f
 14765  0065  0CBA               	rrf	___fttol@lval+1,f
 14766  0066  0CB9               	rrf	___fttol@lval,f
 14767  0067  0B89               	decfsz	9,f
 14768  0068  2863               	goto	u2795
 14769  0069  3001               	movlw	1
 14770  006A  00B4               	movwf	??___fttol
 14771  006B  0834               	movf	??___fttol,w
 14772  006C  07BD               	addwf	___fttol@exp1,f
 14773  006D  1903               	btfsc	3,2
 14774  006E  2889               	goto	l2567
 14775  006F  2862               	goto	l2557
 14776  0070                     l2559:	
 14777  0070  3018               	movlw	24
 14778  0071  023D               	subwf	___fttol@exp1,w
 14779  0072  1C03               	skipc
 14780  0073  2886               	goto	l877
 14781  0074  3000               	movlw	0
 14782  0075  00B3               	movwf	?___fttol+3
 14783  0076  3000               	movlw	0
 14784  0077  00B2               	movwf	?___fttol+2
 14785  0078  3000               	movlw	0
 14786  0079  00B1               	movwf	?___fttol+1
 14787  007A  3000               	movlw	0
 14788  007B  00B0               	movwf	?___fttol
 14789  007C  0008               	return
 14790  007D                     l2565:	
 14791  007D  3001               	movlw	1
 14792  007E                     u2825:	
 14793  007E  35B9               	lslf	___fttol@lval,f
 14794  007F  0DBA               	rlf	___fttol@lval+1,f
 14795  0080  0DBB               	rlf	___fttol@lval+2,f
 14796  0081  0DBC               	rlf	___fttol@lval+3,f
 14797  0082  0B89               	decfsz	9,f
 14798  0083  287E               	goto	u2825
 14799  0084  3001               	movlw	1
 14800  0085  02BD               	subwf	___fttol@exp1,f
 14801  0086                     l877:	
 14802  0086  083D               	movf	___fttol@exp1,w
 14803  0087  1D03               	btfss	3,2
 14804  0088  287D               	goto	l2565
 14805  0089                     l2567:	
 14806  0089  0838               	movf	___fttol@sign1,w
 14807  008A  1903               	btfsc	3,2
 14808  008B  2897               	goto	l2571
 14809  008C  09B9               	comf	___fttol@lval,f
 14810  008D  09BA               	comf	___fttol@lval+1,f
 14811  008E  09BB               	comf	___fttol@lval+2,f
 14812  008F  09BC               	comf	___fttol@lval+3,f
 14813  0090  0AB9               	incf	___fttol@lval,f
 14814  0091  1903               	skipnz
 14815  0092  0ABA               	incf	___fttol@lval+1,f
 14816  0093  1903               	skipnz
 14817  0094  0ABB               	incf	___fttol@lval+2,f
 14818  0095  1903               	skipnz
 14819  0096  0ABC               	incf	___fttol@lval+3,f
 14820  0097                     l2571:	
 14821  0097  083C               	movf	___fttol@lval+3,w
 14822  0098  00B3               	movwf	?___fttol+3
 14823  0099  083B               	movf	___fttol@lval+2,w
 14824  009A  00B2               	movwf	?___fttol+2
 14825  009B  083A               	movf	___fttol@lval+1,w
 14826  009C  00B1               	movwf	?___fttol+1
 14827  009D  0839               	movf	___fttol@lval,w
 14828  009E  00B0               	movwf	?___fttol
 14829  009F  0008               	return
 14830  00A0                     __end_of___fttol:	
 14831                           
 14832                           	psect	text42
 14833  08FB                     __ptext42:	
 14834 ;; *************** function ___ftmul *****************
 14835 ;; Defined at:
 14836 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 14837 ;; Parameters:    Size  Location     Type
 14838 ;;  f1              3    0[BANK0 ] float 
 14839 ;;  f2              3    3[BANK0 ] float 
 14840 ;; Auto vars:     Size  Location     Type
 14841 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 14842 ;;  sign            1   15[BANK0 ] unsigned char 
 14843 ;;  cntr            1   14[BANK0 ] unsigned char 
 14844 ;;  exp             1   10[BANK0 ] unsigned char 
 14845 ;; Return value:  Size  Location     Type
 14846 ;;                  3    0[BANK0 ] float 
 14847 ;; Registers used:
 14848 ;;		wreg, status,2, status,0, pclath, cstack
 14849 ;; Tracked objects:
 14850 ;;		On entry : 0/0
 14851 ;;		On exit  : 0/0
 14852 ;;		Unchanged: 0/0
 14853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14854 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14855 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14856 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14857 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14858 ;;Total ram usage:       16 bytes
 14859 ;; Hardware stack levels used:    1
 14860 ;; Hardware stack levels required when called:    1
 14861 ;; This function calls:
 14862 ;;		___ftpack
 14863 ;; This function is called by:
 14864 ;;		_Init_Battery_State_Machine
 14865 ;;		_Battery_State_Machine
 14866 ;;		_cc_cv_mode
 14867 ;;		_tempCalc
 14868 ;;		_log
 14869 ;;		_eval_poly
 14870 ;; This function uses a non-reentrant model
 14871 ;;
 14872                           
 14873                           
 14874                           ;psect for function ___ftmul
 14875  08FB                     ___ftmul:	
 14876                           
 14877                           ;incstack = 0
 14878                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 14879  08FB  0020               	movlb	0	; select bank0
 14880  08FC  0820               	movf	___ftmul@f1,w
 14881  08FD  00A6               	movwf	??___ftmul
 14882  08FE  0821               	movf	___ftmul@f1+1,w
 14883  08FF  00A7               	movwf	??___ftmul+1
 14884  0900  0822               	movf	___ftmul@f1+2,w
 14885  0901  00A8               	movwf	??___ftmul+2
 14886  0902  1003               	clrc
 14887  0903  0D27               	rlf	??___ftmul+1,w
 14888  0904  0D28               	rlf	??___ftmul+2,w
 14889  0905  00A9               	movwf	??___ftmul+3
 14890  0906  0829               	movf	??___ftmul+3,w
 14891  0907  00AA               	movwf	___ftmul@exp
 14892  0908  082A               	movf	___ftmul@exp,w
 14893  0909  1D03               	btfss	3,2
 14894  090A  2912               	goto	l2455
 14895  090B  3000               	movlw	0
 14896  090C  00A0               	movwf	?___ftmul
 14897  090D  3000               	movlw	0
 14898  090E  00A1               	movwf	?___ftmul+1
 14899  090F  3000               	movlw	0
 14900  0910  00A2               	movwf	?___ftmul+2
 14901  0911  0008               	return
 14902  0912                     l2455:	
 14903  0912  0823               	movf	___ftmul@f2,w
 14904  0913  00A6               	movwf	??___ftmul
 14905  0914  0824               	movf	___ftmul@f2+1,w
 14906  0915  00A7               	movwf	??___ftmul+1
 14907  0916  0825               	movf	___ftmul@f2+2,w
 14908  0917  00A8               	movwf	??___ftmul+2
 14909  0918  1003               	clrc
 14910  0919  0D27               	rlf	??___ftmul+1,w
 14911  091A  0D28               	rlf	??___ftmul+2,w
 14912  091B  00A9               	movwf	??___ftmul+3
 14913  091C  0829               	movf	??___ftmul+3,w
 14914  091D  00AF               	movwf	___ftmul@sign
 14915  091E  082F               	movf	___ftmul@sign,w
 14916  091F  1D03               	btfss	3,2
 14917  0920  2928               	goto	l2461
 14918  0921  3000               	movlw	0
 14919  0922  00A0               	movwf	?___ftmul
 14920  0923  3000               	movlw	0
 14921  0924  00A1               	movwf	?___ftmul+1
 14922  0925  3000               	movlw	0
 14923  0926  00A2               	movwf	?___ftmul+2
 14924  0927  0008               	return
 14925  0928                     l2461:	
 14926  0928  082F               	movf	___ftmul@sign,w
 14927  0929  3E7B               	addlw	123
 14928  092A  00A6               	movwf	??___ftmul
 14929  092B  0826               	movf	??___ftmul,w
 14930  092C  07AA               	addwf	___ftmul@exp,f
 14931  092D  0820               	movf	___ftmul@f1,w
 14932  092E  00A6               	movwf	??___ftmul
 14933  092F  0821               	movf	___ftmul@f1+1,w
 14934  0930  00A7               	movwf	??___ftmul+1
 14935  0931  0822               	movf	___ftmul@f1+2,w
 14936  0932  00A8               	movwf	??___ftmul+2
 14937  0933  3010               	movlw	16
 14938  0934                     u2615:	
 14939  0934  36A8               	lsrf	??___ftmul+2,f
 14940  0935  0CA7               	rrf	??___ftmul+1,f
 14941  0936  0CA6               	rrf	??___ftmul,f
 14942  0937  0B89               	decfsz	9,f
 14943  0938  2934               	goto	u2615
 14944  0939  0826               	movf	??___ftmul,w
 14945  093A  00A9               	movwf	??___ftmul+3
 14946  093B  0829               	movf	??___ftmul+3,w
 14947  093C  00AF               	movwf	___ftmul@sign
 14948  093D  0823               	movf	___ftmul@f2,w
 14949  093E  00A6               	movwf	??___ftmul
 14950  093F  0824               	movf	___ftmul@f2+1,w
 14951  0940  00A7               	movwf	??___ftmul+1
 14952  0941  0825               	movf	___ftmul@f2+2,w
 14953  0942  00A8               	movwf	??___ftmul+2
 14954  0943  3010               	movlw	16
 14955  0944                     u2625:	
 14956  0944  36A8               	lsrf	??___ftmul+2,f
 14957  0945  0CA7               	rrf	??___ftmul+1,f
 14958  0946  0CA6               	rrf	??___ftmul,f
 14959  0947  0B89               	decfsz	9,f
 14960  0948  2944               	goto	u2625
 14961  0949  0826               	movf	??___ftmul,w
 14962  094A  00A9               	movwf	??___ftmul+3
 14963  094B  0829               	movf	??___ftmul+3,w
 14964  094C  06AF               	xorwf	___ftmul@sign,f
 14965  094D  3080               	movlw	128
 14966  094E  00A6               	movwf	??___ftmul
 14967  094F  0826               	movf	??___ftmul,w
 14968  0950  05AF               	andwf	___ftmul@sign,f
 14969  0951  17A1               	bsf	___ftmul@f1+1,7
 14970  0952  17A4               	bsf	___ftmul@f2+1,7
 14971  0953  30FF               	movlw	255
 14972  0954  05A3               	andwf	___ftmul@f2,f
 14973  0955  30FF               	movlw	255
 14974  0956  05A4               	andwf	___ftmul@f2+1,f
 14975  0957  3000               	movlw	0
 14976  0958  05A5               	andwf	___ftmul@f2+2,f
 14977  0959  3000               	movlw	0
 14978  095A  00AB               	movwf	___ftmul@f3_as_product
 14979  095B  3000               	movlw	0
 14980  095C  00AC               	movwf	___ftmul@f3_as_product+1
 14981  095D  3000               	movlw	0
 14982  095E  00AD               	movwf	___ftmul@f3_as_product+2
 14983  095F  3007               	movlw	7
 14984  0960  00A6               	movwf	??___ftmul
 14985  0961  0826               	movf	??___ftmul,w
 14986  0962  00AE               	movwf	___ftmul@cntr
 14987  0963                     l2473:	
 14988  0963  1C20               	btfss	___ftmul@f1,0
 14989  0964  296B               	goto	l2477
 14990  0965  0823               	movf	___ftmul@f2,w
 14991  0966  07AB               	addwf	___ftmul@f3_as_product,f
 14992  0967  0824               	movf	___ftmul@f2+1,w
 14993  0968  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 14994  0969  0825               	movf	___ftmul@f2+2,w
 14995  096A  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 14996  096B                     l2477:	
 14997  096B  3001               	movlw	1
 14998  096C                     u2645:	
 14999  096C  36A2               	lsrf	___ftmul@f1+2,f
 15000  096D  0CA1               	rrf	___ftmul@f1+1,f
 15001  096E  0CA0               	rrf	___ftmul@f1,f
 15002  096F  0B89               	decfsz	9,f
 15003  0970  296C               	goto	u2645
 15004  0971  3001               	movlw	1
 15005  0972                     u2655:	
 15006  0972  35A3               	lslf	___ftmul@f2,f
 15007  0973  0DA4               	rlf	___ftmul@f2+1,f
 15008  0974  0DA5               	rlf	___ftmul@f2+2,f
 15009  0975  0B89               	decfsz	9,f
 15010  0976  2972               	goto	u2655
 15011  0977  3001               	movlw	1
 15012  0978  02AE               	subwf	___ftmul@cntr,f
 15013  0979  1D03               	btfss	3,2
 15014  097A  2963               	goto	l2473
 15015  097B  3009               	movlw	9
 15016  097C  00A6               	movwf	??___ftmul
 15017  097D  0826               	movf	??___ftmul,w
 15018  097E  00AE               	movwf	___ftmul@cntr
 15019  097F                     l2485:	
 15020  097F  1C20               	btfss	___ftmul@f1,0
 15021  0980  2987               	goto	l2489
 15022  0981  0823               	movf	___ftmul@f2,w
 15023  0982  07AB               	addwf	___ftmul@f3_as_product,f
 15024  0983  0824               	movf	___ftmul@f2+1,w
 15025  0984  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 15026  0985  0825               	movf	___ftmul@f2+2,w
 15027  0986  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 15028  0987                     l2489:	
 15029  0987  3001               	movlw	1
 15030  0988                     u2685:	
 15031  0988  36A2               	lsrf	___ftmul@f1+2,f
 15032  0989  0CA1               	rrf	___ftmul@f1+1,f
 15033  098A  0CA0               	rrf	___ftmul@f1,f
 15034  098B  0B89               	decfsz	9,f
 15035  098C  2988               	goto	u2685
 15036  098D  3001               	movlw	1
 15037  098E                     u2695:	
 15038  098E  36AD               	lsrf	___ftmul@f3_as_product+2,f
 15039  098F  0CAC               	rrf	___ftmul@f3_as_product+1,f
 15040  0990  0CAB               	rrf	___ftmul@f3_as_product,f
 15041  0991  0B89               	decfsz	9,f
 15042  0992  298E               	goto	u2695
 15043  0993  3001               	movlw	1
 15044  0994  02AE               	subwf	___ftmul@cntr,f
 15045  0995  1D03               	btfss	3,2
 15046  0996  297F               	goto	l2485
 15047  0997  082B               	movf	___ftmul@f3_as_product,w
 15048  0998  00F0               	movwf	___ftpack@arg
 15049  0999  082C               	movf	___ftmul@f3_as_product+1,w
 15050  099A  00F1               	movwf	___ftpack@arg+1
 15051  099B  082D               	movf	___ftmul@f3_as_product+2,w
 15052  099C  00F2               	movwf	___ftpack@arg+2
 15053  099D  082A               	movf	___ftmul@exp,w
 15054  099E  00A6               	movwf	??___ftmul
 15055  099F  0826               	movf	??___ftmul,w
 15056  09A0  00F3               	movwf	___ftpack@exp
 15057  09A1  082F               	movf	___ftmul@sign,w
 15058  09A2  00A7               	movwf	??___ftmul+1
 15059  09A3  0827               	movf	??___ftmul+1,w
 15060  09A4  00F4               	movwf	___ftpack@sign
 15061  09A5  3195  25EF         	fcall	___ftpack
 15062  09A7  0870               	movf	?___ftpack,w
 15063  09A8  0020               	movlb	0	; select bank0
 15064  09A9  00A0               	movwf	?___ftmul
 15065  09AA  0871               	movf	?___ftpack+1,w
 15066  09AB  00A1               	movwf	?___ftmul+1
 15067  09AC  0872               	movf	?___ftpack+2,w
 15068  09AD  00A2               	movwf	?___ftmul+2
 15069  09AE  0008               	return
 15070  09AF                     __end_of___ftmul:	
 15071                           
 15072                           	psect	text43
 15073  11FE                     __ptext43:	
 15074 ;; *************** function ___awtoft *****************
 15075 ;; Defined at:
 15076 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 15077 ;; Parameters:    Size  Location     Type
 15078 ;;  c               2    8[COMMON] int 
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;  sign            1   13[COMMON] unsigned char 
 15081 ;; Return value:  Size  Location     Type
 15082 ;;                  3    8[COMMON] float 
 15083 ;; Registers used:
 15084 ;;		wreg, status,2, status,0, pclath, cstack
 15085 ;; Tracked objects:
 15086 ;;		On entry : 0/0
 15087 ;;		On exit  : 0/0
 15088 ;;		Unchanged: 0/0
 15089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15090 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15093 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15094 ;;Total ram usage:        6 bytes
 15095 ;; Hardware stack levels used:    1
 15096 ;; Hardware stack levels required when called:    1
 15097 ;; This function calls:
 15098 ;;		___ftpack
 15099 ;; This function is called by:
 15100 ;;		_Init_Battery_State_Machine
 15101 ;;		_Battery_State_Machine
 15102 ;;		_cc_cv_mode
 15103 ;;		_tempCalc
 15104 ;;		_main
 15105 ;;		_calculateCurrent0
 15106 ;;		_calculateCurrent1
 15107 ;;		_calculateCurrent2
 15108 ;;		_calculateCurrent3
 15109 ;;		_log
 15110 ;; This function uses a non-reentrant model
 15111 ;;
 15112                           
 15113                           
 15114                           ;psect for function ___awtoft
 15115  11FE                     ___awtoft:	
 15116                           
 15117                           ;incstack = 0
 15118                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 15119  11FE  01FD               	clrf	___awtoft@sign
 15120  11FF  1FF9               	btfss	___awtoft@c+1,7
 15121  1200  2A08               	goto	l2509
 15122  1201  09F8               	comf	___awtoft@c,f
 15123  1202  09F9               	comf	___awtoft@c+1,f
 15124  1203  0AF8               	incf	___awtoft@c,f
 15125  1204  1903               	skipnz
 15126  1205  0AF9               	incf	___awtoft@c+1,f
 15127  1206  01FD               	clrf	___awtoft@sign
 15128  1207  0AFD               	incf	___awtoft@sign,f
 15129  1208                     l2509:	
 15130  1208  0878               	movf	___awtoft@c,w
 15131  1209  00F0               	movwf	___ftpack@arg
 15132  120A  0879               	movf	___awtoft@c+1,w
 15133  120B  00F1               	movwf	___ftpack@arg+1
 15134  120C  01F2               	clrf	___ftpack@arg+2
 15135  120D  308E               	movlw	142
 15136  120E  00FB               	movwf	??___awtoft
 15137  120F  087B               	movf	??___awtoft,w
 15138  1210  00F3               	movwf	___ftpack@exp
 15139  1211  087D               	movf	___awtoft@sign,w
 15140  1212  00FC               	movwf	??___awtoft+1
 15141  1213  087C               	movf	??___awtoft+1,w
 15142  1214  00F4               	movwf	___ftpack@sign
 15143  1215  3195  25EF         	fcall	___ftpack
 15144  1217  0870               	movf	?___ftpack,w
 15145  1218  00F8               	movwf	?___awtoft
 15146  1219  0871               	movf	?___ftpack+1,w
 15147  121A  00F9               	movwf	?___awtoft+1
 15148  121B  0872               	movf	?___ftpack+2,w
 15149  121C  00FA               	movwf	?___awtoft+2
 15150  121D  0008               	return
 15151  121E                     __end_of___awtoft:	
 15152                           
 15153                           	psect	text44
 15154  15EF                     __ptext44:	
 15155 ;; *************** function ___ftpack *****************
 15156 ;; Defined at:
 15157 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 15158 ;; Parameters:    Size  Location     Type
 15159 ;;  arg             3    0[COMMON] unsigned um
 15160 ;;  exp             1    3[COMMON] unsigned char 
 15161 ;;  sign            1    4[COMMON] unsigned char 
 15162 ;; Auto vars:     Size  Location     Type
 15163 ;;		None
 15164 ;; Return value:  Size  Location     Type
 15165 ;;                  3    0[COMMON] float 
 15166 ;; Registers used:
 15167 ;;		wreg, status,2, status,0
 15168 ;; Tracked objects:
 15169 ;;		On entry : 0/0
 15170 ;;		On exit  : 0/0
 15171 ;;		Unchanged: 0/0
 15172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15173 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15175 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15176 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15177 ;;Total ram usage:        8 bytes
 15178 ;; Hardware stack levels used:    1
 15179 ;; This function calls:
 15180 ;;		Nothing
 15181 ;; This function is called by:
 15182 ;;		___awtoft
 15183 ;;		___ftadd
 15184 ;;		___ftdiv
 15185 ;;		___ftmul
 15186 ;; This function uses a non-reentrant model
 15187 ;;
 15188                           
 15189                           
 15190                           ;psect for function ___ftpack
 15191  15EF                     ___ftpack:	
 15192                           
 15193                           ;incstack = 0
 15194                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 15195  15EF  0873               	movf	___ftpack@exp,w
 15196  15F0  1903               	btfsc	3,2
 15197  15F1  2DF7               	goto	l2315
 15198  15F2  0872               	movf	___ftpack@arg+2,w
 15199  15F3  0471               	iorwf	___ftpack@arg+1,w
 15200  15F4  0470               	iorwf	___ftpack@arg,w
 15201  15F5  1D03               	skipz
 15202  15F6  2E08               	goto	l2321
 15203  15F7                     l2315:	
 15204  15F7  3000               	movlw	0
 15205  15F8  00F0               	movwf	?___ftpack
 15206  15F9  3000               	movlw	0
 15207  15FA  00F1               	movwf	?___ftpack+1
 15208  15FB  3000               	movlw	0
 15209  15FC  00F2               	movwf	?___ftpack+2
 15210  15FD  0008               	return
 15211  15FE                     l2319:	
 15212  15FE  3001               	movlw	1
 15213  15FF  00F5               	movwf	??___ftpack
 15214  1600  0875               	movf	??___ftpack,w
 15215  1601  07F3               	addwf	___ftpack@exp,f
 15216  1602  3001               	movlw	1
 15217  1603                     u2185:	
 15218  1603  36F2               	lsrf	___ftpack@arg+2,f
 15219  1604  0CF1               	rrf	___ftpack@arg+1,f
 15220  1605  0CF0               	rrf	___ftpack@arg,f
 15221  1606  0B89               	decfsz	9,f
 15222  1607  2E03               	goto	u2185
 15223  1608                     l2321:	
 15224  1608  30FE               	movlw	254
 15225  1609  0572               	andwf	___ftpack@arg+2,w
 15226  160A  1903               	btfsc	3,2
 15227  160B  2E21               	goto	l786
 15228  160C  2DFE               	goto	l2319
 15229  160D                     l2323:	
 15230  160D  3001               	movlw	1
 15231  160E  00F5               	movwf	??___ftpack
 15232  160F  0875               	movf	??___ftpack,w
 15233  1610  07F3               	addwf	___ftpack@exp,f
 15234  1611  3001               	movlw	1
 15235  1612  07F0               	addwf	___ftpack@arg,f
 15236  1613  3000               	movlw	0
 15237  1614  1803               	skipnc
 15238  1615  3001               	movlw	1
 15239  1616  07F1               	addwf	___ftpack@arg+1,f
 15240  1617  3000               	movlw	0
 15241  1618  1803               	skipnc
 15242  1619  3001               	movlw	1
 15243  161A  07F2               	addwf	___ftpack@arg+2,f
 15244  161B  3001               	movlw	1
 15245  161C                     u2205:	
 15246  161C  36F2               	lsrf	___ftpack@arg+2,f
 15247  161D  0CF1               	rrf	___ftpack@arg+1,f
 15248  161E  0CF0               	rrf	___ftpack@arg,f
 15249  161F  0B89               	decfsz	9,f
 15250  1620  2E1C               	goto	u2205
 15251  1621                     l786:	
 15252  1621  30FF               	movlw	255
 15253  1622  0572               	andwf	___ftpack@arg+2,w
 15254  1623  1903               	btfsc	3,2
 15255  1624  2E2E               	goto	l2331
 15256  1625  2E0D               	goto	l2323
 15257  1626                     l2329:	
 15258  1626  3001               	movlw	1
 15259  1627  02F3               	subwf	___ftpack@exp,f
 15260  1628  3001               	movlw	1
 15261  1629                     u2225:	
 15262  1629  35F0               	lslf	___ftpack@arg,f
 15263  162A  0DF1               	rlf	___ftpack@arg+1,f
 15264  162B  0DF2               	rlf	___ftpack@arg+2,f
 15265  162C  0B89               	decfsz	9,f
 15266  162D  2E29               	goto	u2225
 15267  162E                     l2331:	
 15268  162E  1BF1               	btfsc	___ftpack@arg+1,7
 15269  162F  2E34               	goto	l793
 15270  1630  3002               	movlw	2
 15271  1631  0273               	subwf	___ftpack@exp,w
 15272  1632  1803               	skipnc
 15273  1633  2E26               	goto	l2329
 15274  1634                     l793:	
 15275  1634  1873               	btfsc	___ftpack@exp,0
 15276  1635  2E3C               	goto	l794
 15277  1636  30FF               	movlw	255
 15278  1637  05F0               	andwf	___ftpack@arg,f
 15279  1638  307F               	movlw	127
 15280  1639  05F1               	andwf	___ftpack@arg+1,f
 15281  163A  30FF               	movlw	255
 15282  163B  05F2               	andwf	___ftpack@arg+2,f
 15283  163C                     l794:	
 15284  163C  1003               	clrc
 15285  163D  0CF3               	rrf	___ftpack@exp,f
 15286  163E  0873               	movf	___ftpack@exp,w
 15287  163F  00F5               	movwf	??___ftpack
 15288  1640  01F6               	clrf	??___ftpack+1
 15289  1641  01F7               	clrf	??___ftpack+2
 15290  1642  3010               	movlw	16
 15291  1643                     u2265:	
 15292  1643  35F5               	lslf	??___ftpack,f
 15293  1644  0DF6               	rlf	??___ftpack+1,f
 15294  1645  0DF7               	rlf	??___ftpack+2,f
 15295  1646  0B89               	decfsz	9,f
 15296  1647  2E43               	goto	u2265
 15297  1648  0875               	movf	??___ftpack,w
 15298  1649  04F0               	iorwf	___ftpack@arg,f
 15299  164A  0876               	movf	??___ftpack+1,w
 15300  164B  04F1               	iorwf	___ftpack@arg+1,f
 15301  164C  0877               	movf	??___ftpack+2,w
 15302  164D  04F2               	iorwf	___ftpack@arg+2,f
 15303  164E  0874               	movf	___ftpack@sign,w
 15304  164F  1903               	btfsc	3,2
 15305  1650  0008               	return
 15306  1651  17F2               	bsf	___ftpack@arg+2,7
 15307  1652  0008               	return
 15308  1653                     __end_of___ftpack:	
 15309  007E                     btemp	set	126	;btemp
 15310  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    330
    Data        18
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      79
    BANK1            80     26      78
    BANK2            80      0      56
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6             8      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_LCDWriteString
    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftadd->___awtoft
    _readVAnalog->___aldiv
    _readIAnalog->___aldiv
    _readButton->_ADCRead
    _cc_cv_mode->___awtoft
    _calculateCurrent3->___awtoft
    _calculateCurrent2->___awtoft
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___ftdiv->___awtoft
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _Init_Battery_State_Machine->___awtoft
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul
    _Battery_State_Machine->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul
    _readVAnalog->___aldiv
    _readIAnalog->___aldiv
    _cc_cv_mode->___fttol
    _calculateCurrent3->___fttol
    _calculateCurrent2->___fttol
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    _SYSTEM_Initialize->_Init_Battery_State_Machine
    _Init_Battery_State_Machine->___fttol
    _Battery_State_Machine->___fttol
    ___fttol->___ftdiv
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0  114501
                                             56 BANK0      2     2      0
                                              0 BANK1     26    26      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                     _LCDWriteString
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                           ___awtoft
                            ___ftdiv
                            ___fttol
                  _calculateCurrent0
                  _calculateCurrent1
                  _calculateCurrent2
                  _calculateCurrent3
                         _cc_cv_mode
                             _gotoXY
                         _readButton
                        _readIAnalog
                        _readVAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   33966
                                             45 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17386
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7633
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3356
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3183
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readVAnalog                                         24    22      2    1922
                                              9 COMMON     4     4      0
                                              6 BANK0     20    18      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _readIAnalog                                         24    22      2    1922
                                              9 COMMON     4     4      0
                                              6 BANK0     20    18      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           8     8      0    6900
                                             30 BANK0      8     8      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent3                                    3     3      0    6692
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent2                                    3     3      0    6692
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6692
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6692
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3365
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0   10373
                                             35 BANK0      2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     803
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    3021
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2172
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           5     5      0    6526
                                             30 BANK0      5     5      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     1      2    2165
                                             12 COMMON     2     0      2
                                              0 BANK0      1     1      0
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7585
                                              0 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1961
                                              6 COMMON     6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1046
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     803
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                6     6      0    6966
                                             30 BANK0      6     6      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     734
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3067
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2593
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
     ___awdiv
     ___lwmod
   _LCDWriteString
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _calculateCurrent2
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _calculateCurrent3
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _cc_cv_mode
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _gotoXY
     _LCDWrite
   _readButton
     _ADCRead
   _readIAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _readVAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1A      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      38       9       70.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6                8      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 17 23:22:05 2018

                       _stateCounter 00BD                                    _j 006A  
                                  _x 00D3               LCDWriteInt@fieldLength 0022  
            __size_of_PWM_Initialize 001F                          __CFG_CP$OFF 0000  
                                 l65 000B                                   l68 0012  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 0072  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 003C  
                       ___ftadd@exp2 003B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 003A                                  l140 0EF1  
                                l141 0F02                                  l230 1229  
                                l231 122B                                  l232 1231  
                                l233 1241                                  l145 0F45  
                                l234 1235                                  l513 04DC  
                      LCDClear@index 0079                                  l471 02A8  
                                l472 02B0                                  l625 118F  
                                l680 16E6                                  l817 0BEE  
                                l793 1634                                  l794 163C  
                                l786 1621                                  l877 0086  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                         _VsampleIndex 0066  
                                _log 084B                      __end_of_ADCRead 0019  
                    _TMR2_Initialize 1FC1                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 1307  
                       ?_LCDWriteInt 0020                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l3011 00F7                                 l3101 16B1  
                               l3023 0186                                 l3031 01B9  
                               l3007 00DD                                 l2321 1608  
                               l3009 00E5                                 l3113 16D2  
                               l2331 162E                                 l2323 160D  
                               l2315 15F7                                 l3027 01A0  
                               l3107 16BA                                 l3115 16D3  
                               l3125 1131                                 l3221 1416  
                               l3053 0F10                                 l2413 0BBA  
                               l2319 15FE                                 l3039 0207  
                               l3151 0A04                                 l3215 13D1  
                               l2431 0C00                                 l2415 0BC4  
                               l2407 0BA7                                 l2329 1626  
                               l3161 0A1A                                 l3233 081F  
                               l3057 0F1D                                 l3081 1677  
                               l2425 0BE0                                 l2417 0BC9  
                               l2521 136E                                 l2601 1585  
                               l3155 0A08                                 l3139 09D0  
                               l3227 145B                                 l3091 16A3  
                               l2435 0C12                                 l2427 0BEA  
                               l2419 0BCD                                 l3411 04FC  
                               l3323 03AC                                 l2509 1208  
                               l2461 0928                                 l3173 0A53  
                               l3157 0A0C                                 l3149 09D7  
                               l3093 16A5                                 l2445 0C2D  
                               l2517 1358                                 l3405 04E8  
                               l3341 03DA                                 l3317 038E  
                               l2455 0912                                 l2367 1189  
                               l3167 0A1E                                 l3159 0A14  
                               l3087 1691                                 l3407 04EB  
                               l2473 0963                                 l3169 0A45  
                               l2385 0B77                                 l3353 0410  
                               l3329 03C4                                 l3281 0266  
                               l2571 0097                                 l2539 0032  
                               l2395 0B8D                                 l3427 0529  
                               l3347 03F8                                 l3275 0260  
                               l3267 024C                                 l2485 097F  
                               l2477 096B                                 l2565 007D  
                               l2557 0062                                 l2821 1707  
                               l2813 16F7                                 l2389 0B7E  
                               l3357 0422                                 l3293 0289  
                               l2567 0089                                 l2559 0070  
                               l2831 1735                                 l2823 1715  
                               l2583 138F                                 l3391 04B0  
                               l3375 0463                                 l3287 0284  
                               l2489 0987                                 l2681 1250  
                               l2921 17DE                                 l2913 17C5  
                               l3393 04B4                                 l3385 0484  
                               l3369 044C                                 l2851 1491  
                               l2835 1740                                 l3563 07B0  
                               l3379 046A                                 l2933 11AA  
                               l2951 1287                                 l2687 1264  
                               l2839 174E                                 l3567 07B9  
                               l3399 04D4                                 l2857 149C  
                               l2945 126F                                 l2793 087D  
                               l2883 14D3                                 l2875 14C2  
                               l2867 14A4                                 l2947 127B  
                               l2955 1290                                 l2787 086A  
                               l2869 14B0                                 l2893 176E  
                               l2973 0D5B                                 l2879 14CB  
                               l2993 0E99                                 l2899 1784  
                               ?_log 0047                                 STR_1 1825  
                               STR_2 1820                                 STR_3 181B  
                               u2205 161C                                 u3005 1716  
                               _LATA 0016                                 _LATB 0017  
                               u3015 172A                                 _LATC 0018  
                               u2225 1629                                 u3105 14B1  
                               u3025 1736                                 u3115 14BB  
                               u3125 14C3                                 u3205 17D5  
                               u2335 1190                                 u3215 17DF  
                               u2265 1643                                 u2185 1603  
                               u2345 1195                                 u3305 0C5B  
                               _T2PR 028D                                 u3315 0CB1  
                               u2515 0BCE                                 u4115 03E9  
                               u4035 039D                                 u3085 14A7  
                               u3325 0CEB                                 u3405 0E74  
                               u2615 0934                                 u3255 1272  
                               u3175 1796                                 u3335 0D36  
                               u2455 0BA8                                 u4215 047D  
                               u4135 0405                                 u4055 03B9  
                               u2625 0944                                 u3185 17A6  
                               u2545 0BE1                                 u4225 0494  
                               _T4PR 0293                                 u3275 1281  
                               u3195 17C6                                 u3435 0EA4  
                               u4235 04A9                                 u2645 096C  
                               u3285 1288                                 u3365 0D66  
                               u2485 0BBB                                 u4245 04C6  
                               u4165 0445                                 u4085 03D7  
                               u2910 12CA                                 u2655 0972  
                               u3455 00BB                                 u3615 0F5F  
                               u3375 0D99                                 u4327 0254  
                               u2825 007E                                 u3465 00CF  
                               u2905 1262                                 u4337 16C4  
                               u3385 0DEF                                 u4185 045C  
                               u4347 132A                                 u3555 0EDD  
                               u3395 0E29                                 u2685 0988  
                               u2765 0039                                 u4357 133A  
                               u3645 0FB4                                 u3750 09BA  
                               u2695 098E                                 u3495 0159  
                               u3815 0A33                                 u3655 1665  
                               u3905 0819                                 u3665 1671  
                               u2795 0063                                 u3675 1681  
                               u3845 116A                                 u3685 168D  
                               u3855 1180                                 u2895 124E  
                               u3695 169B                                 u3865 1154  
                               u2985 170A                                 u3875 13CB  
                               u3885 1410                                 u3895 1455  
                               u3995 037C                  tempCalc@analogValue 004D  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 00C9                                 _Iref 00C1  
                               _Iout 00CF                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 005A  
                               _main 0217                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               log@x 0047                         ?_readIAnalog 0026  
                      __CFG_BOREN$ON 0000                                 start 0002  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 002E                         ___ftmul@sign 002F  
                       ?_readVAnalog 0026                     __end_of_LCDClear 1269  
                       ___fttol@exp1 003D                                ??_log 004A  
                       ___fttol@lval 0039                         main@fastLoop 00DC  
__size_of_Init_Battery_State_Machine 0063       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 1243        __end_of_OSCILLATOR_Initialize 1FA9  
                    __end_of___aldiv 1757                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 14D8                                _ADPRE 009C  
                    __end_of___ftadd 0C45                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 1800  
                    __end_of___ftmul 09AF                      ___awdiv@divisor 0070  
                    __end_of___ftsub 11C0                      __end_of___fttol 00A0  
                              _T2CON 028E                                _LATA5 00B5  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 1295  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 1FCF  
                              _Imode 0062               ?_Battery_State_Machine 0070  
                              _cc_cv 00D1                        ___awtoft@sign 007D  
                              _frexp 137D                                _fonts 1000  
                              _errno 00CD                        ___ftpack@sign 0074  
                              main@j 00ED                         main@slowLoop 00DD  
                              status 0003                                wtemp0 007E  
                    __initialization 07BC                          log@exponent 004B  
                       __end_of_main 07BC              __end_of_TMR2_Initialize 1FCF  
                          ??_ADCRead 0073                               ??_main 0058  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
             Battery_State_Machine@z 0043              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             ?_frexp 0070                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _CCPR1H 030D  
                             _CCPR1L 030C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                     __end_of___awtoft 121E  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                     __end_of___ftpack 1653  
                             _RB0PPS 0F18                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000                       _LCDWriteString 1131  
                       _CCPTMRS0bits 021E                         _CCPTMRS1bits 021F  
                             ___ftge 1342                            ??___aldiv 0078  
                             ___wmul 1187                            ??___awdiv 0074  
                          ??___ftadd 0036                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 11DF                            ??___ftdiv 0026  
                          ??___ftmul 0026                            ??___ftsub 007E  
                          ??___fttol 0034                            ??___lwmod 0074  
                             _gotoXY 1FED                               _button 006C  
            __end_of_TMR4_Initialize 1FDD                     ___awdiv@quotient 0077  
          readVAnalog@analog_channel 0079                ___ftmul@f3_as_product 002B  
                   __end_of_tempCalc 0B4F                         LCDWrite@data 0070  
                       LCDWriteInt@i 002F                         LCDWriteInt@j 002E  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 1307  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0030  
                         ___ftadd@f2 0033                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070               __end_of_LCDWriteString 1145  
                       eval_poly@res 0044                           ___ftdiv@f1 0023  
                         ___ftdiv@f2 0020                           ___ftdiv@f3 002B  
                         ___awtoft@c 0078                           ___ftmul@f1 0020  
                         ___ftmul@f2 0023               __end_of_PWM_Initialize 11FE  
               __size_of_readIAnalog 013E                           ___ftsub@f1 0040  
                         ___ftsub@f2 003D                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                         __pidataBANK0 0804  
                       __pidataBANK2 1FDD                  ??_SYSTEM_Initialize 0043  
                      __end_of_frexp 13B8                        __end_of_fonts 112F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
               __size_of_readVAnalog 013E                   _PWM1_LoadDutyValue 1145  
                   ?_TMR2_Initialize 0070                           _cc_cv_mode 0EC1  
        __size_of_PWM7_LoadDutyValue 0016                       main@efficiency 00D4  
                ?_PWM1_LoadDutyValue 0070                    LCDWriteInt@F14392 00B8  
                  _calculateCurrent0 13B8                    _calculateCurrent1 13FD  
                  _calculateCurrent2 1442                    _calculateCurrent3 0806  
                            ??_frexp 0074            __end_of_SYSTEM_Initialize 1342  
                         __pbssBANK0 005A                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                   ?_calculateCurrent2 0070  
                 ?_calculateCurrent3 0070                         _batteryState 0064  
                 __size_of_eval_poly 0060                           ??_LCDClear 0078  
                     main@faultCount 00D7                           ??_LCDWrite 0071  
                    ?_LCDWriteString 007C                 ??_PWM1_LoadDutyValue 0072  
                ??_calculateCurrent0 003E                  ??_calculateCurrent1 003E  
                ??_calculateCurrent2 003E                  ??_calculateCurrent3 003E  
                    ?_PWM_Initialize 0070                           __pmaintext 0217  
                            ?___ftge 0070                              ?___wmul 0070  
                    __CFG_PPS1WAY$ON 0000           __end_of_PWM6_LoadDutyValue 1171  
                            ?_gotoXY 0075                              _ADCRead 0004  
                   ?_TMR4_Initialize 0070                            ?___awtoft 0078  
                          ?___ftpack 0070                              _ADSTPTH 0113  
                            _ADSTPTL 0112             __CFG_SCANE$not_available 0000  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 001F  
            ??_Battery_State_Machine 003E                       main@largerIOut 00E2  
                            _LCDInit 12CC            __end_of_calculateCurrent0 13FD  
          __end_of_calculateCurrent1 1442            __end_of_calculateCurrent2 1487  
          __end_of_calculateCurrent3 084B                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 00E4  
                     main@dutyCycle1 00E5                       main@dutyCycle6 00E9  
                     main@dutyCycle7 00EB                    main@tempFanOutput 00E7  
                         _lastButton 006B                            ?_tempCalc 004D  
                            _Itotals 0130                              ___aldiv 16D5  
                    __size_of___ftge 003B                              ___awdiv 1487  
                            ___ftadd 0B4F                           _readButton 1653  
                            ___ftdiv 1757                      __size_of___wmul 001B  
                            ___ftmul 08FB                              ___ftsub 11A2  
                            ___fttol 0019                   main@displayRefresh 00DB  
                            ___lwmod 1269                              _Vtotals 0120  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                    __end_of_eval_poly 158C  
                            __ptext1 0A68                              __ptext2 084B  
                            __ptext3 137D                              __ptext4 152C  
                            __ptext5 1342                              __ptext6 11A2  
                            __ptext7 0B4F                              __ptext8 0D83  
                            __ptext9 0C45                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 1FA0                            _T2CONbits 028E  
                            _current 00B0                         __size_of_log 00B0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
                          _T4CONbits 0294             ??_PIN_MANAGER_Initialize 0070  
         __size_of_SYSTEM_Initialize 003B                              clrloop0 1FAA  
                            _voltage 00A8         ??_Init_Battery_State_Machine 003E  
               end_of_initialization 07FD                LCDWriteCharacter@base 007A  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 1FB5                              initloop 1FB6  
                         ??_tempCalc 007E                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 14D8                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070                   readVAnalog@channel 0026  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
         __size_of_calculateCurrent2 0045           __size_of_calculateCurrent3 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0076  
                   __CFG_FEXTOSC$OFF 0000         PWM1_LoadDutyValue@dutyCycle1 0070  
                        _CCP1CONbits 030E                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 013F                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0079                    __size_of_LCDWrite 0025  
                        ___ftmul@exp 002A            __end_of_LCDWriteCharacter 152C  
                        ?_readButton 0070                            _Ichannels 0150  
          readIAnalog@analog_channel 0079                       __end_of___ftge 137D  
                          _VHoldMode 0060                       __end_of___wmul 11A2  
                     _ADC_Initialize 11C0                       __end_of_gotoXY 2000  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00C5  
                start_initialization 07BC                           eval_poly@d 0040  
                         eval_poly@n 0042                           eval_poly@x 003D  
                  main@faultNotReset 00D9      __size_of_PIN_MANAGER_Initialize 0037  
                        __end_of_log 08FB                        ??_LCDWriteInt 0025  
                   ??_LCDWriteString 0020                           frexp@value 0070  
                       _IsampleIndex 0068                     ??_PWM_Initialize 0070  
                      ??_readIAnalog 0028                            _Vchannels 0148  
                   __CFG_LPBOREN$OFF 0000                        ??_readVAnalog 0028  
                           ??___ftge 0076                    tempCalc@steinhart 0055  
                           ??___wmul 0074               __end_of_ADC_Initialize 11DF  
                      _tempCalc$1311 0052                          __pdataBANK0 006D  
                        __pdataBANK2 0148           __end_of_PWM7_LoadDutyValue 1187  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 21E8                     readVAnalog@value 007B  
     __size_of_Battery_State_Machine 0177        __end_of_Battery_State_Machine 0217  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00D4                   _PWM6_LoadDutyValue 115B  
           __size_of_TMR2_Initialize 000E   __end_of_Init_Battery_State_Machine 15EF  
         _Init_Battery_State_Machine 158C                  __size_of_readButton 0082  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 0A68  
                        _batteryTemp 006D          __size_of_PWM1_LoadDutyValue 0016  
             _PIN_MANAGER_Initialize 1295           __size_of_LCDWriteCharacter 0054  
                           ?___aldiv 0070                  __end_of_readIAnalog 0D83  
                  __size_of_tempCalc 00E7                             ?___awdiv 0070  
                           ?___ftadd 0030                             ?___ftdiv 0020  
                           ?___ftmul 0020                             ?___ftsub 003D  
                           ?___fttol 0030                     LCDWriteInt@value 0020  
                           ?___lwmod 0070                      ?_ADC_Initialize 0070  
               ??_PWM6_LoadDutyValue 0072                         ??_cc_cv_mode 003E  
                __end_of_readVAnalog 0EC1                            _eval_poly 152C  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003B  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                        cc_cv_mode@z 0045                             _LCDClear 1243  
                    ___aldiv@divisor 0070                      ___aldiv@counter 0020  
                     ___wmul@product 0074                             _LATAbits 0016  
                           _LCDWrite 121E                            clear_ram0 1FA9  
                           _PIE0bits 0716                   __end_of_cc_cv_mode 1000  
                           _PIR4bits 0710                     readIAnalog@value 007B  
                          main@MPPT0 00E0                            main@MPPT1 00DE  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0070                           ?_eval_poly 003D  
                   __size_of_LCDInit 003B                             _Ianalogs 00A0  
                        _LCDWriteInt 09AF          Init_Battery_State_Machine@z 0042  
                  ??_TMR2_Initialize 0070                             _Isamples 21E8  
                        _readIAnalog 0C45                            frexp@eptr 0073  
                           _Vanalogs 0140                          _readVAnalog 0D83  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 0023                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftmul 00B4  
                   __size_of___ftsub 001E                     __size_of___fttol 0087  
                           _Vsamples 2378                     __size_of___lwmod 002C  
                        _readButtons 005E                             ___awtoft 11FE  
                           ___ftpack 15EF                             __ptext10 16D5  
                           __ptext11 1653                             __ptext20 1FCF  
                           __ptext12 0004                             __ptext21 1FC1  
                           __ptext13 0EC1                             __ptext30 1171  
                           __ptext22 11DF                             __ptext14 0806  
                           __ptext31 115B                             __ptext23 1295  
                           __ptext15 1442                             __ptext40 00A0  
                           __ptext32 1145                             __ptext24 1FA0  
                           __ptext16 13FD                             __ptext41 0019  
                           __ptext33 1131                             __ptext25 12CC  
                           __ptext17 13B8                             __ptext42 08FB  
                           __ptext34 09AF                             __ptext26 1243  
                           __ptext18 1757                             __ptext43 11FE  
                           __ptext35 1269                             __ptext27 1FED  
                           __ptext19 1307                             __ptext44 15EF  
                           __ptext36 1487                             __ptext28 158C  
                           __ptext37 14D8                             __ptext29 11C0  
                           __ptext38 1187                             __ptext39 121E  
                    LCDWriteInt@sign 0024                            tempCalc@R 004F  
                 __end_of_readButton 16D5                    ??_TMR4_Initialize 0070  
                      __size_of_main 05A5                 __CFG_WDTCWS$WDTCWS_7 0000  
                           _tempCalc 0A68          PIN_MANAGER_Initialize@state 0070  
                           log@coeff 1800                          ??_eval_poly 007E  
                 _PWM7_LoadDutyValue 1171          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0029  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 1000                        __pstringtext2 1800  
                      __pstringtext3 1820                        __pstringtext4 1825  
                      __pstringtext5 0000                 ??_PWM7_LoadDutyValue 0072  
                    ___lwmod@divisor 0070                      ___lwmod@counter 0075  
           LCDWriteString@characters 007C                         ___aldiv@sign 0021  
                 readIAnalog@channel 0026                _Battery_State_Machine 00A0  
     __end_of_PIN_MANAGER_Initialize 12CC           __end_of_PWM1_LoadDutyValue 115B  
            __size_of_LCDWriteString 0014  
