

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Jun 10 09:46:00 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  001C                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0110                     	;# 
   114  0110                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0119                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011C                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011D                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011E                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011F                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  018F                     	;# 
   154  0190                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0196                     	;# 
   158  0197                     	;# 
   159  0198                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  020E                     	;# 
   167  020F                     	;# 
   168  020F                     	;# 
   169  0210                     	;# 
   170  0210                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  0218                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021B                     	;# 
   187  021C                     	;# 
   188  021C                     	;# 
   189  021D                     	;# 
   190  021D                     	;# 
   191  021E                     	;# 
   192  021F                     	;# 
   193  028C                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028D                     	;# 
   197  028E                     	;# 
   198  028F                     	;# 
   199  0290                     	;# 
   200  0290                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0293                     	;# 
   206  0294                     	;# 
   207  0295                     	;# 
   208  0296                     	;# 
   209  0296                     	;# 
   210  0297                     	;# 
   211  0298                     	;# 
   212  0298                     	;# 
   213  0299                     	;# 
   214  0299                     	;# 
   215  029A                     	;# 
   216  029B                     	;# 
   217  029C                     	;# 
   218  029C                     	;# 
   219  029D                     	;# 
   220  030C                     	;# 
   221  030C                     	;# 
   222  030D                     	;# 
   223  030E                     	;# 
   224  030F                     	;# 
   225  0310                     	;# 
   226  0310                     	;# 
   227  0311                     	;# 
   228  0312                     	;# 
   229  0313                     	;# 
   230  0314                     	;# 
   231  0314                     	;# 
   232  0315                     	;# 
   233  0316                     	;# 
   234  0317                     	;# 
   235  0318                     	;# 
   236  0318                     	;# 
   237  0319                     	;# 
   238  031A                     	;# 
   239  031B                     	;# 
   240  031C                     	;# 
   241  031C                     	;# 
   242  031D                     	;# 
   243  031E                     	;# 
   244  031F                     	;# 
   245  038C                     	;# 
   246  038D                     	;# 
   247  038E                     	;# 
   248  0390                     	;# 
   249  0391                     	;# 
   250  0392                     	;# 
   251  040C                     	;# 
   252  040D                     	;# 
   253  040E                     	;# 
   254  040F                     	;# 
   255  0410                     	;# 
   256  0411                     	;# 
   257  0416                     	;# 
   258  0416                     	;# 
   259  0417                     	;# 
   260  0418                     	;# 
   261  0418                     	;# 
   262  0419                     	;# 
   263  041A                     	;# 
   264  041A                     	;# 
   265  041B                     	;# 
   266  041C                     	;# 
   267  041C                     	;# 
   268  041D                     	;# 
   269  041E                     	;# 
   270  041F                     	;# 
   271  048C                     	;# 
   272  048C                     	;# 
   273  048D                     	;# 
   274  048E                     	;# 
   275  048F                     	;# 
   276  048F                     	;# 
   277  0490                     	;# 
   278  0491                     	;# 
   279  0492                     	;# 
   280  0492                     	;# 
   281  0493                     	;# 
   282  0494                     	;# 
   283  0495                     	;# 
   284  0495                     	;# 
   285  0496                     	;# 
   286  0497                     	;# 
   287  0498                     	;# 
   288  0499                     	;# 
   289  049A                     	;# 
   290  049B                     	;# 
   291  049C                     	;# 
   292  049D                     	;# 
   293  050C                     	;# 
   294  050C                     	;# 
   295  050D                     	;# 
   296  050E                     	;# 
   297  050F                     	;# 
   298  050F                     	;# 
   299  0510                     	;# 
   300  0511                     	;# 
   301  0512                     	;# 
   302  0512                     	;# 
   303  0513                     	;# 
   304  0514                     	;# 
   305  0515                     	;# 
   306  0515                     	;# 
   307  0516                     	;# 
   308  0517                     	;# 
   309  0518                     	;# 
   310  0519                     	;# 
   311  051A                     	;# 
   312  051B                     	;# 
   313  051C                     	;# 
   314  051D                     	;# 
   315  058C                     	;# 
   316  058C                     	;# 
   317  058D                     	;# 
   318  058E                     	;# 
   319  058F                     	;# 
   320  058F                     	;# 
   321  0590                     	;# 
   322  0591                     	;# 
   323  0592                     	;# 
   324  0593                     	;# 
   325  060C                     	;# 
   326  060D                     	;# 
   327  060E                     	;# 
   328  060F                     	;# 
   329  0610                     	;# 
   330  0611                     	;# 
   331  0612                     	;# 
   332  0613                     	;# 
   333  0614                     	;# 
   334  0616                     	;# 
   335  0617                     	;# 
   336  0618                     	;# 
   337  0619                     	;# 
   338  061A                     	;# 
   339  061B                     	;# 
   340  061C                     	;# 
   341  061D                     	;# 
   342  061E                     	;# 
   343  068C                     	;# 
   344  068D                     	;# 
   345  068E                     	;# 
   346  068F                     	;# 
   347  0690                     	;# 
   348  0691                     	;# 
   349  0692                     	;# 
   350  0693                     	;# 
   351  0694                     	;# 
   352  070C                     	;# 
   353  070D                     	;# 
   354  070E                     	;# 
   355  070F                     	;# 
   356  0710                     	;# 
   357  0711                     	;# 
   358  0712                     	;# 
   359  0713                     	;# 
   360  0714                     	;# 
   361  0716                     	;# 
   362  0717                     	;# 
   363  0718                     	;# 
   364  0719                     	;# 
   365  071A                     	;# 
   366  071B                     	;# 
   367  071C                     	;# 
   368  071D                     	;# 
   369  071E                     	;# 
   370  0796                     	;# 
   371  0797                     	;# 
   372  0798                     	;# 
   373  0799                     	;# 
   374  079A                     	;# 
   375  079B                     	;# 
   376  080C                     	;# 
   377  080D                     	;# 
   378  080E                     	;# 
   379  080F                     	;# 
   380  0810                     	;# 
   381  0811                     	;# 
   382  0812                     	;# 
   383  0813                     	;# 
   384  0814                     	;# 
   385  081A                     	;# 
   386  081B                     	;# 
   387  081C                     	;# 
   388  081D                     	;# 
   389  081E                     	;# 
   390  081F                     	;# 
   391  088C                     	;# 
   392  088D                     	;# 
   393  088E                     	;# 
   394  088F                     	;# 
   395  0890                     	;# 
   396  0891                     	;# 
   397  0892                     	;# 
   398  0893                     	;# 
   399  0895                     	;# 
   400  0896                     	;# 
   401  0897                     	;# 
   402  0898                     	;# 
   403  0899                     	;# 
   404  089A                     	;# 
   405  089B                     	;# 
   406  090C                     	;# 
   407  090E                     	;# 
   408  090F                     	;# 
   409  091F                     	;# 
   410  091F                     	;# 
   411  098F                     	;# 
   412  098F                     	;# 
   413  0990                     	;# 
   414  0991                     	;# 
   415  0992                     	;# 
   416  0993                     	;# 
   417  0994                     	;# 
   418  0995                     	;# 
   419  0996                     	;# 
   420  0997                     	;# 
   421  0E0F                     	;# 
   422  0E10                     	;# 
   423  0E11                     	;# 
   424  0E12                     	;# 
   425  0E13                     	;# 
   426  0E14                     	;# 
   427  0E15                     	;# 
   428  0E16                     	;# 
   429  0E17                     	;# 
   430  0E18                     	;# 
   431  0E19                     	;# 
   432  0E1A                     	;# 
   433  0E1B                     	;# 
   434  0E1C                     	;# 
   435  0E1D                     	;# 
   436  0E1E                     	;# 
   437  0E1F                     	;# 
   438  0E20                     	;# 
   439  0E21                     	;# 
   440  0E22                     	;# 
   441  0E23                     	;# 
   442  0E24                     	;# 
   443  0E25                     	;# 
   444  0E26                     	;# 
   445  0E27                     	;# 
   446  0E28                     	;# 
   447  0E29                     	;# 
   448  0E2A                     	;# 
   449  0E2B                     	;# 
   450  0E2C                     	;# 
   451  0E2D                     	;# 
   452  0E2E                     	;# 
   453  0E2F                     	;# 
   454  0E30                     	;# 
   455  0E31                     	;# 
   456  0E32                     	;# 
   457  0E33                     	;# 
   458  0E34                     	;# 
   459  0E35                     	;# 
   460  0E36                     	;# 
   461  0E37                     	;# 
   462  0E8F                     	;# 
   463  0E90                     	;# 
   464  0E91                     	;# 
   465  0E92                     	;# 
   466  0E93                     	;# 
   467  0E94                     	;# 
   468  0E95                     	;# 
   469  0E96                     	;# 
   470  0E97                     	;# 
   471  0E9C                     	;# 
   472  0E9D                     	;# 
   473  0E9E                     	;# 
   474  0EA1                     	;# 
   475  0EA2                     	;# 
   476  0EA3                     	;# 
   477  0EA4                     	;# 
   478  0EA5                     	;# 
   479  0EA9                     	;# 
   480  0EAA                     	;# 
   481  0EAB                     	;# 
   482  0EAC                     	;# 
   483  0EB1                     	;# 
   484  0EB2                     	;# 
   485  0EB3                     	;# 
   486  0EB8                     	;# 
   487  0EB9                     	;# 
   488  0EBA                     	;# 
   489  0EBB                     	;# 
   490  0EBC                     	;# 
   491  0EBD                     	;# 
   492  0EBE                     	;# 
   493  0EC3                     	;# 
   494  0EC5                     	;# 
   495  0EC6                     	;# 
   496  0EC7                     	;# 
   497  0EC8                     	;# 
   498  0EC9                     	;# 
   499  0ECA                     	;# 
   500  0ECB                     	;# 
   501  0ECC                     	;# 
   502  0F10                     	;# 
   503  0F11                     	;# 
   504  0F12                     	;# 
   505  0F13                     	;# 
   506  0F14                     	;# 
   507  0F15                     	;# 
   508  0F16                     	;# 
   509  0F17                     	;# 
   510  0F18                     	;# 
   511  0F19                     	;# 
   512  0F1A                     	;# 
   513  0F1B                     	;# 
   514  0F1C                     	;# 
   515  0F1D                     	;# 
   516  0F1E                     	;# 
   517  0F1F                     	;# 
   518  0F20                     	;# 
   519  0F21                     	;# 
   520  0F22                     	;# 
   521  0F23                     	;# 
   522  0F24                     	;# 
   523  0F25                     	;# 
   524  0F26                     	;# 
   525  0F27                     	;# 
   526  0F38                     	;# 
   527  0F39                     	;# 
   528  0F3A                     	;# 
   529  0F3B                     	;# 
   530  0F3C                     	;# 
   531  0F3D                     	;# 
   532  0F3E                     	;# 
   533  0F3F                     	;# 
   534  0F40                     	;# 
   535  0F41                     	;# 
   536  0F43                     	;# 
   537  0F44                     	;# 
   538  0F45                     	;# 
   539  0F46                     	;# 
   540  0F47                     	;# 
   541  0F48                     	;# 
   542  0F49                     	;# 
   543  0F4A                     	;# 
   544  0F4B                     	;# 
   545  0F4C                     	;# 
   546  0F4E                     	;# 
   547  0F4F                     	;# 
   548  0F50                     	;# 
   549  0F51                     	;# 
   550  0F52                     	;# 
   551  0F53                     	;# 
   552  0F54                     	;# 
   553  0F55                     	;# 
   554  0F56                     	;# 
   555  0F57                     	;# 
   556  0F65                     	;# 
   557  0F68                     	;# 
   558  0F69                     	;# 
   559  0F6A                     	;# 
   560  0F6B                     	;# 
   561  0FE4                     	;# 
   562  0FE5                     	;# 
   563  0FE6                     	;# 
   564  0FE7                     	;# 
   565  0FE8                     	;# 
   566  0FE9                     	;# 
   567  0FEA                     	;# 
   568  0FEB                     	;# 
   569  0FED                     	;# 
   570  0FEE                     	;# 
   571  0FEF                     	;# 
   572  0000                     	;# 
   573  0001                     	;# 
   574  0002                     	;# 
   575  0003                     	;# 
   576  0004                     	;# 
   577  0005                     	;# 
   578  0006                     	;# 
   579  0007                     	;# 
   580  0008                     	;# 
   581  0009                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  000E                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0016                     	;# 
   592  0017                     	;# 
   593  0018                     	;# 
   594  001C                     	;# 
   595  001C                     	;# 
   596  001D                     	;# 
   597  001D                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  008C                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  008E                     	;# 
   604  008E                     	;# 
   605  008F                     	;# 
   606  0090                     	;# 
   607  0090                     	;# 
   608  0091                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0097                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010E                     	;# 
   625  010F                     	;# 
   626  0110                     	;# 
   627  0110                     	;# 
   628  0111                     	;# 
   629  0112                     	;# 
   630  0112                     	;# 
   631  0113                     	;# 
   632  0114                     	;# 
   633  0114                     	;# 
   634  0115                     	;# 
   635  0116                     	;# 
   636  0116                     	;# 
   637  0117                     	;# 
   638  0119                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  011A                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011B                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011C                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011D                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011E                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011F                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  018E                     	;# 
   666  018F                     	;# 
   667  0190                     	;# 
   668  0191                     	;# 
   669  0192                     	;# 
   670  0196                     	;# 
   671  0197                     	;# 
   672  0198                     	;# 
   673  0199                     	;# 
   674  019A                     	;# 
   675  019B                     	;# 
   676  019C                     	;# 
   677  020C                     	;# 
   678  020D                     	;# 
   679  020E                     	;# 
   680  020F                     	;# 
   681  020F                     	;# 
   682  0210                     	;# 
   683  0210                     	;# 
   684  0211                     	;# 
   685  0211                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0214                     	;# 
   689  0215                     	;# 
   690  0215                     	;# 
   691  0216                     	;# 
   692  0216                     	;# 
   693  0217                     	;# 
   694  0217                     	;# 
   695  0218                     	;# 
   696  0219                     	;# 
   697  021A                     	;# 
   698  021B                     	;# 
   699  021B                     	;# 
   700  021C                     	;# 
   701  021C                     	;# 
   702  021D                     	;# 
   703  021D                     	;# 
   704  021E                     	;# 
   705  021F                     	;# 
   706  028C                     	;# 
   707  028C                     	;# 
   708  028D                     	;# 
   709  028D                     	;# 
   710  028E                     	;# 
   711  028F                     	;# 
   712  0290                     	;# 
   713  0290                     	;# 
   714  0291                     	;# 
   715  0292                     	;# 
   716  0292                     	;# 
   717  0293                     	;# 
   718  0293                     	;# 
   719  0294                     	;# 
   720  0295                     	;# 
   721  0296                     	;# 
   722  0296                     	;# 
   723  0297                     	;# 
   724  0298                     	;# 
   725  0298                     	;# 
   726  0299                     	;# 
   727  0299                     	;# 
   728  029A                     	;# 
   729  029B                     	;# 
   730  029C                     	;# 
   731  029C                     	;# 
   732  029D                     	;# 
   733  030C                     	;# 
   734  030C                     	;# 
   735  030D                     	;# 
   736  030E                     	;# 
   737  030F                     	;# 
   738  0310                     	;# 
   739  0310                     	;# 
   740  0311                     	;# 
   741  0312                     	;# 
   742  0313                     	;# 
   743  0314                     	;# 
   744  0314                     	;# 
   745  0315                     	;# 
   746  0316                     	;# 
   747  0317                     	;# 
   748  0318                     	;# 
   749  0318                     	;# 
   750  0319                     	;# 
   751  031A                     	;# 
   752  031B                     	;# 
   753  031C                     	;# 
   754  031C                     	;# 
   755  031D                     	;# 
   756  031E                     	;# 
   757  031F                     	;# 
   758  038C                     	;# 
   759  038D                     	;# 
   760  038E                     	;# 
   761  0390                     	;# 
   762  0391                     	;# 
   763  0392                     	;# 
   764  040C                     	;# 
   765  040D                     	;# 
   766  040E                     	;# 
   767  040F                     	;# 
   768  0410                     	;# 
   769  0411                     	;# 
   770  0416                     	;# 
   771  0416                     	;# 
   772  0417                     	;# 
   773  0418                     	;# 
   774  0418                     	;# 
   775  0419                     	;# 
   776  041A                     	;# 
   777  041A                     	;# 
   778  041B                     	;# 
   779  041C                     	;# 
   780  041C                     	;# 
   781  041D                     	;# 
   782  041E                     	;# 
   783  041F                     	;# 
   784  048C                     	;# 
   785  048C                     	;# 
   786  048D                     	;# 
   787  048E                     	;# 
   788  048F                     	;# 
   789  048F                     	;# 
   790  0490                     	;# 
   791  0491                     	;# 
   792  0492                     	;# 
   793  0492                     	;# 
   794  0493                     	;# 
   795  0494                     	;# 
   796  0495                     	;# 
   797  0495                     	;# 
   798  0496                     	;# 
   799  0497                     	;# 
   800  0498                     	;# 
   801  0499                     	;# 
   802  049A                     	;# 
   803  049B                     	;# 
   804  049C                     	;# 
   805  049D                     	;# 
   806  050C                     	;# 
   807  050C                     	;# 
   808  050D                     	;# 
   809  050E                     	;# 
   810  050F                     	;# 
   811  050F                     	;# 
   812  0510                     	;# 
   813  0511                     	;# 
   814  0512                     	;# 
   815  0512                     	;# 
   816  0513                     	;# 
   817  0514                     	;# 
   818  0515                     	;# 
   819  0515                     	;# 
   820  0516                     	;# 
   821  0517                     	;# 
   822  0518                     	;# 
   823  0519                     	;# 
   824  051A                     	;# 
   825  051B                     	;# 
   826  051C                     	;# 
   827  051D                     	;# 
   828  058C                     	;# 
   829  058C                     	;# 
   830  058D                     	;# 
   831  058E                     	;# 
   832  058F                     	;# 
   833  058F                     	;# 
   834  0590                     	;# 
   835  0591                     	;# 
   836  0592                     	;# 
   837  0593                     	;# 
   838  060C                     	;# 
   839  060D                     	;# 
   840  060E                     	;# 
   841  060F                     	;# 
   842  0610                     	;# 
   843  0611                     	;# 
   844  0612                     	;# 
   845  0613                     	;# 
   846  0614                     	;# 
   847  0616                     	;# 
   848  0617                     	;# 
   849  0618                     	;# 
   850  0619                     	;# 
   851  061A                     	;# 
   852  061B                     	;# 
   853  061C                     	;# 
   854  061D                     	;# 
   855  061E                     	;# 
   856  068C                     	;# 
   857  068D                     	;# 
   858  068E                     	;# 
   859  068F                     	;# 
   860  0690                     	;# 
   861  0691                     	;# 
   862  0692                     	;# 
   863  0693                     	;# 
   864  0694                     	;# 
   865  070C                     	;# 
   866  070D                     	;# 
   867  070E                     	;# 
   868  070F                     	;# 
   869  0710                     	;# 
   870  0711                     	;# 
   871  0712                     	;# 
   872  0713                     	;# 
   873  0714                     	;# 
   874  0716                     	;# 
   875  0717                     	;# 
   876  0718                     	;# 
   877  0719                     	;# 
   878  071A                     	;# 
   879  071B                     	;# 
   880  071C                     	;# 
   881  071D                     	;# 
   882  071E                     	;# 
   883  0796                     	;# 
   884  0797                     	;# 
   885  0798                     	;# 
   886  0799                     	;# 
   887  079A                     	;# 
   888  079B                     	;# 
   889  080C                     	;# 
   890  080D                     	;# 
   891  080E                     	;# 
   892  080F                     	;# 
   893  0810                     	;# 
   894  0811                     	;# 
   895  0812                     	;# 
   896  0813                     	;# 
   897  0814                     	;# 
   898  081A                     	;# 
   899  081B                     	;# 
   900  081C                     	;# 
   901  081D                     	;# 
   902  081E                     	;# 
   903  081F                     	;# 
   904  088C                     	;# 
   905  088D                     	;# 
   906  088E                     	;# 
   907  088F                     	;# 
   908  0890                     	;# 
   909  0891                     	;# 
   910  0892                     	;# 
   911  0893                     	;# 
   912  0895                     	;# 
   913  0896                     	;# 
   914  0897                     	;# 
   915  0898                     	;# 
   916  0899                     	;# 
   917  089A                     	;# 
   918  089B                     	;# 
   919  090C                     	;# 
   920  090E                     	;# 
   921  090F                     	;# 
   922  091F                     	;# 
   923  091F                     	;# 
   924  098F                     	;# 
   925  098F                     	;# 
   926  0990                     	;# 
   927  0991                     	;# 
   928  0992                     	;# 
   929  0993                     	;# 
   930  0994                     	;# 
   931  0995                     	;# 
   932  0996                     	;# 
   933  0997                     	;# 
   934  0E0F                     	;# 
   935  0E10                     	;# 
   936  0E11                     	;# 
   937  0E12                     	;# 
   938  0E13                     	;# 
   939  0E14                     	;# 
   940  0E15                     	;# 
   941  0E16                     	;# 
   942  0E17                     	;# 
   943  0E18                     	;# 
   944  0E19                     	;# 
   945  0E1A                     	;# 
   946  0E1B                     	;# 
   947  0E1C                     	;# 
   948  0E1D                     	;# 
   949  0E1E                     	;# 
   950  0E1F                     	;# 
   951  0E20                     	;# 
   952  0E21                     	;# 
   953  0E22                     	;# 
   954  0E23                     	;# 
   955  0E24                     	;# 
   956  0E25                     	;# 
   957  0E26                     	;# 
   958  0E27                     	;# 
   959  0E28                     	;# 
   960  0E29                     	;# 
   961  0E2A                     	;# 
   962  0E2B                     	;# 
   963  0E2C                     	;# 
   964  0E2D                     	;# 
   965  0E2E                     	;# 
   966  0E2F                     	;# 
   967  0E30                     	;# 
   968  0E31                     	;# 
   969  0E32                     	;# 
   970  0E33                     	;# 
   971  0E34                     	;# 
   972  0E35                     	;# 
   973  0E36                     	;# 
   974  0E37                     	;# 
   975  0E8F                     	;# 
   976  0E90                     	;# 
   977  0E91                     	;# 
   978  0E92                     	;# 
   979  0E93                     	;# 
   980  0E94                     	;# 
   981  0E95                     	;# 
   982  0E96                     	;# 
   983  0E97                     	;# 
   984  0E9C                     	;# 
   985  0E9D                     	;# 
   986  0E9E                     	;# 
   987  0EA1                     	;# 
   988  0EA2                     	;# 
   989  0EA3                     	;# 
   990  0EA4                     	;# 
   991  0EA5                     	;# 
   992  0EA9                     	;# 
   993  0EAA                     	;# 
   994  0EAB                     	;# 
   995  0EAC                     	;# 
   996  0EB1                     	;# 
   997  0EB2                     	;# 
   998  0EB3                     	;# 
   999  0EB8                     	;# 
  1000  0EB9                     	;# 
  1001  0EBA                     	;# 
  1002  0EBB                     	;# 
  1003  0EBC                     	;# 
  1004  0EBD                     	;# 
  1005  0EBE                     	;# 
  1006  0EC3                     	;# 
  1007  0EC5                     	;# 
  1008  0EC6                     	;# 
  1009  0EC7                     	;# 
  1010  0EC8                     	;# 
  1011  0EC9                     	;# 
  1012  0ECA                     	;# 
  1013  0ECB                     	;# 
  1014  0ECC                     	;# 
  1015  0F10                     	;# 
  1016  0F11                     	;# 
  1017  0F12                     	;# 
  1018  0F13                     	;# 
  1019  0F14                     	;# 
  1020  0F15                     	;# 
  1021  0F16                     	;# 
  1022  0F17                     	;# 
  1023  0F18                     	;# 
  1024  0F19                     	;# 
  1025  0F1A                     	;# 
  1026  0F1B                     	;# 
  1027  0F1C                     	;# 
  1028  0F1D                     	;# 
  1029  0F1E                     	;# 
  1030  0F1F                     	;# 
  1031  0F20                     	;# 
  1032  0F21                     	;# 
  1033  0F22                     	;# 
  1034  0F23                     	;# 
  1035  0F24                     	;# 
  1036  0F25                     	;# 
  1037  0F26                     	;# 
  1038  0F27                     	;# 
  1039  0F38                     	;# 
  1040  0F39                     	;# 
  1041  0F3A                     	;# 
  1042  0F3B                     	;# 
  1043  0F3C                     	;# 
  1044  0F3D                     	;# 
  1045  0F3E                     	;# 
  1046  0F3F                     	;# 
  1047  0F40                     	;# 
  1048  0F41                     	;# 
  1049  0F43                     	;# 
  1050  0F44                     	;# 
  1051  0F45                     	;# 
  1052  0F46                     	;# 
  1053  0F47                     	;# 
  1054  0F48                     	;# 
  1055  0F49                     	;# 
  1056  0F4A                     	;# 
  1057  0F4B                     	;# 
  1058  0F4C                     	;# 
  1059  0F4E                     	;# 
  1060  0F4F                     	;# 
  1061  0F50                     	;# 
  1062  0F51                     	;# 
  1063  0F52                     	;# 
  1064  0F53                     	;# 
  1065  0F54                     	;# 
  1066  0F55                     	;# 
  1067  0F56                     	;# 
  1068  0F57                     	;# 
  1069  0F65                     	;# 
  1070  0F68                     	;# 
  1071  0F69                     	;# 
  1072  0F6A                     	;# 
  1073  0F6B                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000D                     	;# 
  1099  000E                     	;# 
  1100  0010                     	;# 
  1101  0011                     	;# 
  1102  0012                     	;# 
  1103  0013                     	;# 
  1104  0016                     	;# 
  1105  0017                     	;# 
  1106  0018                     	;# 
  1107  001C                     	;# 
  1108  001C                     	;# 
  1109  001D                     	;# 
  1110  001D                     	;# 
  1111  001E                     	;# 
  1112  001F                     	;# 
  1113  008C                     	;# 
  1114  008C                     	;# 
  1115  008D                     	;# 
  1116  008E                     	;# 
  1117  008E                     	;# 
  1118  008F                     	;# 
  1119  0090                     	;# 
  1120  0090                     	;# 
  1121  0091                     	;# 
  1122  0093                     	;# 
  1123  0094                     	;# 
  1124  0095                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0098                     	;# 
  1128  0099                     	;# 
  1129  009A                     	;# 
  1130  009B                     	;# 
  1131  009C                     	;# 
  1132  009D                     	;# 
  1133  009E                     	;# 
  1134  010C                     	;# 
  1135  010D                     	;# 
  1136  010E                     	;# 
  1137  010E                     	;# 
  1138  010F                     	;# 
  1139  0110                     	;# 
  1140  0110                     	;# 
  1141  0111                     	;# 
  1142  0112                     	;# 
  1143  0112                     	;# 
  1144  0113                     	;# 
  1145  0114                     	;# 
  1146  0114                     	;# 
  1147  0115                     	;# 
  1148  0116                     	;# 
  1149  0116                     	;# 
  1150  0117                     	;# 
  1151  0119                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  011A                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011B                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011C                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011D                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011E                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011F                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  018C                     	;# 
  1177  018D                     	;# 
  1178  018E                     	;# 
  1179  018F                     	;# 
  1180  0190                     	;# 
  1181  0191                     	;# 
  1182  0192                     	;# 
  1183  0196                     	;# 
  1184  0197                     	;# 
  1185  0198                     	;# 
  1186  0199                     	;# 
  1187  019A                     	;# 
  1188  019B                     	;# 
  1189  019C                     	;# 
  1190  020C                     	;# 
  1191  020D                     	;# 
  1192  020E                     	;# 
  1193  020F                     	;# 
  1194  020F                     	;# 
  1195  0210                     	;# 
  1196  0210                     	;# 
  1197  0211                     	;# 
  1198  0211                     	;# 
  1199  0212                     	;# 
  1200  0213                     	;# 
  1201  0214                     	;# 
  1202  0215                     	;# 
  1203  0215                     	;# 
  1204  0216                     	;# 
  1205  0216                     	;# 
  1206  0217                     	;# 
  1207  0217                     	;# 
  1208  0218                     	;# 
  1209  0219                     	;# 
  1210  021A                     	;# 
  1211  021B                     	;# 
  1212  021B                     	;# 
  1213  021C                     	;# 
  1214  021C                     	;# 
  1215  021D                     	;# 
  1216  021D                     	;# 
  1217  021E                     	;# 
  1218  021F                     	;# 
  1219  028C                     	;# 
  1220  028C                     	;# 
  1221  028D                     	;# 
  1222  028D                     	;# 
  1223  028E                     	;# 
  1224  028F                     	;# 
  1225  0290                     	;# 
  1226  0290                     	;# 
  1227  0291                     	;# 
  1228  0292                     	;# 
  1229  0292                     	;# 
  1230  0293                     	;# 
  1231  0293                     	;# 
  1232  0294                     	;# 
  1233  0295                     	;# 
  1234  0296                     	;# 
  1235  0296                     	;# 
  1236  0297                     	;# 
  1237  0298                     	;# 
  1238  0298                     	;# 
  1239  0299                     	;# 
  1240  0299                     	;# 
  1241  029A                     	;# 
  1242  029B                     	;# 
  1243  029C                     	;# 
  1244  029C                     	;# 
  1245  029D                     	;# 
  1246  030C                     	;# 
  1247  030C                     	;# 
  1248  030D                     	;# 
  1249  030E                     	;# 
  1250  030F                     	;# 
  1251  0310                     	;# 
  1252  0310                     	;# 
  1253  0311                     	;# 
  1254  0312                     	;# 
  1255  0313                     	;# 
  1256  0314                     	;# 
  1257  0314                     	;# 
  1258  0315                     	;# 
  1259  0316                     	;# 
  1260  0317                     	;# 
  1261  0318                     	;# 
  1262  0318                     	;# 
  1263  0319                     	;# 
  1264  031A                     	;# 
  1265  031B                     	;# 
  1266  031C                     	;# 
  1267  031C                     	;# 
  1268  031D                     	;# 
  1269  031E                     	;# 
  1270  031F                     	;# 
  1271  038C                     	;# 
  1272  038D                     	;# 
  1273  038E                     	;# 
  1274  0390                     	;# 
  1275  0391                     	;# 
  1276  0392                     	;# 
  1277  040C                     	;# 
  1278  040D                     	;# 
  1279  040E                     	;# 
  1280  040F                     	;# 
  1281  0410                     	;# 
  1282  0411                     	;# 
  1283  0416                     	;# 
  1284  0416                     	;# 
  1285  0417                     	;# 
  1286  0418                     	;# 
  1287  0418                     	;# 
  1288  0419                     	;# 
  1289  041A                     	;# 
  1290  041A                     	;# 
  1291  041B                     	;# 
  1292  041C                     	;# 
  1293  041C                     	;# 
  1294  041D                     	;# 
  1295  041E                     	;# 
  1296  041F                     	;# 
  1297  048C                     	;# 
  1298  048C                     	;# 
  1299  048D                     	;# 
  1300  048E                     	;# 
  1301  048F                     	;# 
  1302  048F                     	;# 
  1303  0490                     	;# 
  1304  0491                     	;# 
  1305  0492                     	;# 
  1306  0492                     	;# 
  1307  0493                     	;# 
  1308  0494                     	;# 
  1309  0495                     	;# 
  1310  0495                     	;# 
  1311  0496                     	;# 
  1312  0497                     	;# 
  1313  0498                     	;# 
  1314  0499                     	;# 
  1315  049A                     	;# 
  1316  049B                     	;# 
  1317  049C                     	;# 
  1318  049D                     	;# 
  1319  050C                     	;# 
  1320  050C                     	;# 
  1321  050D                     	;# 
  1322  050E                     	;# 
  1323  050F                     	;# 
  1324  050F                     	;# 
  1325  0510                     	;# 
  1326  0511                     	;# 
  1327  0512                     	;# 
  1328  0512                     	;# 
  1329  0513                     	;# 
  1330  0514                     	;# 
  1331  0515                     	;# 
  1332  0515                     	;# 
  1333  0516                     	;# 
  1334  0517                     	;# 
  1335  0518                     	;# 
  1336  0519                     	;# 
  1337  051A                     	;# 
  1338  051B                     	;# 
  1339  051C                     	;# 
  1340  051D                     	;# 
  1341  058C                     	;# 
  1342  058C                     	;# 
  1343  058D                     	;# 
  1344  058E                     	;# 
  1345  058F                     	;# 
  1346  058F                     	;# 
  1347  0590                     	;# 
  1348  0591                     	;# 
  1349  0592                     	;# 
  1350  0593                     	;# 
  1351  060C                     	;# 
  1352  060D                     	;# 
  1353  060E                     	;# 
  1354  060F                     	;# 
  1355  0610                     	;# 
  1356  0611                     	;# 
  1357  0612                     	;# 
  1358  0613                     	;# 
  1359  0614                     	;# 
  1360  0616                     	;# 
  1361  0617                     	;# 
  1362  0618                     	;# 
  1363  0619                     	;# 
  1364  061A                     	;# 
  1365  061B                     	;# 
  1366  061C                     	;# 
  1367  061D                     	;# 
  1368  061E                     	;# 
  1369  068C                     	;# 
  1370  068D                     	;# 
  1371  068E                     	;# 
  1372  068F                     	;# 
  1373  0690                     	;# 
  1374  0691                     	;# 
  1375  0692                     	;# 
  1376  0693                     	;# 
  1377  0694                     	;# 
  1378  070C                     	;# 
  1379  070D                     	;# 
  1380  070E                     	;# 
  1381  070F                     	;# 
  1382  0710                     	;# 
  1383  0711                     	;# 
  1384  0712                     	;# 
  1385  0713                     	;# 
  1386  0714                     	;# 
  1387  0716                     	;# 
  1388  0717                     	;# 
  1389  0718                     	;# 
  1390  0719                     	;# 
  1391  071A                     	;# 
  1392  071B                     	;# 
  1393  071C                     	;# 
  1394  071D                     	;# 
  1395  071E                     	;# 
  1396  0796                     	;# 
  1397  0797                     	;# 
  1398  0798                     	;# 
  1399  0799                     	;# 
  1400  079A                     	;# 
  1401  079B                     	;# 
  1402  080C                     	;# 
  1403  080D                     	;# 
  1404  080E                     	;# 
  1405  080F                     	;# 
  1406  0810                     	;# 
  1407  0811                     	;# 
  1408  0812                     	;# 
  1409  0813                     	;# 
  1410  0814                     	;# 
  1411  081A                     	;# 
  1412  081B                     	;# 
  1413  081C                     	;# 
  1414  081D                     	;# 
  1415  081E                     	;# 
  1416  081F                     	;# 
  1417  088C                     	;# 
  1418  088D                     	;# 
  1419  088E                     	;# 
  1420  088F                     	;# 
  1421  0890                     	;# 
  1422  0891                     	;# 
  1423  0892                     	;# 
  1424  0893                     	;# 
  1425  0895                     	;# 
  1426  0896                     	;# 
  1427  0897                     	;# 
  1428  0898                     	;# 
  1429  0899                     	;# 
  1430  089A                     	;# 
  1431  089B                     	;# 
  1432  090C                     	;# 
  1433  090E                     	;# 
  1434  090F                     	;# 
  1435  091F                     	;# 
  1436  091F                     	;# 
  1437  098F                     	;# 
  1438  098F                     	;# 
  1439  0990                     	;# 
  1440  0991                     	;# 
  1441  0992                     	;# 
  1442  0993                     	;# 
  1443  0994                     	;# 
  1444  0995                     	;# 
  1445  0996                     	;# 
  1446  0997                     	;# 
  1447  0E0F                     	;# 
  1448  0E10                     	;# 
  1449  0E11                     	;# 
  1450  0E12                     	;# 
  1451  0E13                     	;# 
  1452  0E14                     	;# 
  1453  0E15                     	;# 
  1454  0E16                     	;# 
  1455  0E17                     	;# 
  1456  0E18                     	;# 
  1457  0E19                     	;# 
  1458  0E1A                     	;# 
  1459  0E1B                     	;# 
  1460  0E1C                     	;# 
  1461  0E1D                     	;# 
  1462  0E1E                     	;# 
  1463  0E1F                     	;# 
  1464  0E20                     	;# 
  1465  0E21                     	;# 
  1466  0E22                     	;# 
  1467  0E23                     	;# 
  1468  0E24                     	;# 
  1469  0E25                     	;# 
  1470  0E26                     	;# 
  1471  0E27                     	;# 
  1472  0E28                     	;# 
  1473  0E29                     	;# 
  1474  0E2A                     	;# 
  1475  0E2B                     	;# 
  1476  0E2C                     	;# 
  1477  0E2D                     	;# 
  1478  0E2E                     	;# 
  1479  0E2F                     	;# 
  1480  0E30                     	;# 
  1481  0E31                     	;# 
  1482  0E32                     	;# 
  1483  0E33                     	;# 
  1484  0E34                     	;# 
  1485  0E35                     	;# 
  1486  0E36                     	;# 
  1487  0E37                     	;# 
  1488  0E8F                     	;# 
  1489  0E90                     	;# 
  1490  0E91                     	;# 
  1491  0E92                     	;# 
  1492  0E93                     	;# 
  1493  0E94                     	;# 
  1494  0E95                     	;# 
  1495  0E96                     	;# 
  1496  0E97                     	;# 
  1497  0E9C                     	;# 
  1498  0E9D                     	;# 
  1499  0E9E                     	;# 
  1500  0EA1                     	;# 
  1501  0EA2                     	;# 
  1502  0EA3                     	;# 
  1503  0EA4                     	;# 
  1504  0EA5                     	;# 
  1505  0EA9                     	;# 
  1506  0EAA                     	;# 
  1507  0EAB                     	;# 
  1508  0EAC                     	;# 
  1509  0EB1                     	;# 
  1510  0EB2                     	;# 
  1511  0EB3                     	;# 
  1512  0EB8                     	;# 
  1513  0EB9                     	;# 
  1514  0EBA                     	;# 
  1515  0EBB                     	;# 
  1516  0EBC                     	;# 
  1517  0EBD                     	;# 
  1518  0EBE                     	;# 
  1519  0EC3                     	;# 
  1520  0EC5                     	;# 
  1521  0EC6                     	;# 
  1522  0EC7                     	;# 
  1523  0EC8                     	;# 
  1524  0EC9                     	;# 
  1525  0ECA                     	;# 
  1526  0ECB                     	;# 
  1527  0ECC                     	;# 
  1528  0F10                     	;# 
  1529  0F11                     	;# 
  1530  0F12                     	;# 
  1531  0F13                     	;# 
  1532  0F14                     	;# 
  1533  0F15                     	;# 
  1534  0F16                     	;# 
  1535  0F17                     	;# 
  1536  0F18                     	;# 
  1537  0F19                     	;# 
  1538  0F1A                     	;# 
  1539  0F1B                     	;# 
  1540  0F1C                     	;# 
  1541  0F1D                     	;# 
  1542  0F1E                     	;# 
  1543  0F1F                     	;# 
  1544  0F20                     	;# 
  1545  0F21                     	;# 
  1546  0F22                     	;# 
  1547  0F23                     	;# 
  1548  0F24                     	;# 
  1549  0F25                     	;# 
  1550  0F26                     	;# 
  1551  0F27                     	;# 
  1552  0F38                     	;# 
  1553  0F39                     	;# 
  1554  0F3A                     	;# 
  1555  0F3B                     	;# 
  1556  0F3C                     	;# 
  1557  0F3D                     	;# 
  1558  0F3E                     	;# 
  1559  0F3F                     	;# 
  1560  0F40                     	;# 
  1561  0F41                     	;# 
  1562  0F43                     	;# 
  1563  0F44                     	;# 
  1564  0F45                     	;# 
  1565  0F46                     	;# 
  1566  0F47                     	;# 
  1567  0F48                     	;# 
  1568  0F49                     	;# 
  1569  0F4A                     	;# 
  1570  0F4B                     	;# 
  1571  0F4C                     	;# 
  1572  0F4E                     	;# 
  1573  0F4F                     	;# 
  1574  0F50                     	;# 
  1575  0F51                     	;# 
  1576  0F52                     	;# 
  1577  0F53                     	;# 
  1578  0F54                     	;# 
  1579  0F55                     	;# 
  1580  0F56                     	;# 
  1581  0F57                     	;# 
  1582  0F65                     	;# 
  1583  0F68                     	;# 
  1584  0F69                     	;# 
  1585  0F6A                     	;# 
  1586  0F6B                     	;# 
  1587  0FE4                     	;# 
  1588  0FE5                     	;# 
  1589  0FE6                     	;# 
  1590  0FE7                     	;# 
  1591  0FE8                     	;# 
  1592  0FE9                     	;# 
  1593  0FEA                     	;# 
  1594  0FEB                     	;# 
  1595  0FED                     	;# 
  1596  0FEE                     	;# 
  1597  0FEF                     	;# 
  1598  0000                     	;# 
  1599  0001                     	;# 
  1600  0002                     	;# 
  1601  0003                     	;# 
  1602  0004                     	;# 
  1603  0005                     	;# 
  1604  0006                     	;# 
  1605  0007                     	;# 
  1606  0008                     	;# 
  1607  0009                     	;# 
  1608  000A                     	;# 
  1609  000B                     	;# 
  1610  000C                     	;# 
  1611  000D                     	;# 
  1612  000E                     	;# 
  1613  0010                     	;# 
  1614  0011                     	;# 
  1615  0012                     	;# 
  1616  0013                     	;# 
  1617  0016                     	;# 
  1618  0017                     	;# 
  1619  0018                     	;# 
  1620  001C                     	;# 
  1621  001C                     	;# 
  1622  001D                     	;# 
  1623  001D                     	;# 
  1624  001E                     	;# 
  1625  001F                     	;# 
  1626  008C                     	;# 
  1627  008C                     	;# 
  1628  008D                     	;# 
  1629  008E                     	;# 
  1630  008E                     	;# 
  1631  008F                     	;# 
  1632  0090                     	;# 
  1633  0090                     	;# 
  1634  0091                     	;# 
  1635  0093                     	;# 
  1636  0094                     	;# 
  1637  0095                     	;# 
  1638  0096                     	;# 
  1639  0097                     	;# 
  1640  0098                     	;# 
  1641  0099                     	;# 
  1642  009A                     	;# 
  1643  009B                     	;# 
  1644  009C                     	;# 
  1645  009D                     	;# 
  1646  009E                     	;# 
  1647  010C                     	;# 
  1648  010D                     	;# 
  1649  010E                     	;# 
  1650  010E                     	;# 
  1651  010F                     	;# 
  1652  0110                     	;# 
  1653  0110                     	;# 
  1654  0111                     	;# 
  1655  0112                     	;# 
  1656  0112                     	;# 
  1657  0113                     	;# 
  1658  0114                     	;# 
  1659  0114                     	;# 
  1660  0115                     	;# 
  1661  0116                     	;# 
  1662  0116                     	;# 
  1663  0117                     	;# 
  1664  0119                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  011A                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011B                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011C                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011D                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011E                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011F                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  018C                     	;# 
  1690  018D                     	;# 
  1691  018E                     	;# 
  1692  018F                     	;# 
  1693  0190                     	;# 
  1694  0191                     	;# 
  1695  0192                     	;# 
  1696  0196                     	;# 
  1697  0197                     	;# 
  1698  0198                     	;# 
  1699  0199                     	;# 
  1700  019A                     	;# 
  1701  019B                     	;# 
  1702  019C                     	;# 
  1703  020C                     	;# 
  1704  020D                     	;# 
  1705  020E                     	;# 
  1706  020F                     	;# 
  1707  020F                     	;# 
  1708  0210                     	;# 
  1709  0210                     	;# 
  1710  0211                     	;# 
  1711  0211                     	;# 
  1712  0212                     	;# 
  1713  0213                     	;# 
  1714  0214                     	;# 
  1715  0215                     	;# 
  1716  0215                     	;# 
  1717  0216                     	;# 
  1718  0216                     	;# 
  1719  0217                     	;# 
  1720  0217                     	;# 
  1721  0218                     	;# 
  1722  0219                     	;# 
  1723  021A                     	;# 
  1724  021B                     	;# 
  1725  021B                     	;# 
  1726  021C                     	;# 
  1727  021C                     	;# 
  1728  021D                     	;# 
  1729  021D                     	;# 
  1730  021E                     	;# 
  1731  021F                     	;# 
  1732  028C                     	;# 
  1733  028C                     	;# 
  1734  028D                     	;# 
  1735  028D                     	;# 
  1736  028E                     	;# 
  1737  028F                     	;# 
  1738  0290                     	;# 
  1739  0290                     	;# 
  1740  0291                     	;# 
  1741  0292                     	;# 
  1742  0292                     	;# 
  1743  0293                     	;# 
  1744  0293                     	;# 
  1745  0294                     	;# 
  1746  0295                     	;# 
  1747  0296                     	;# 
  1748  0296                     	;# 
  1749  0297                     	;# 
  1750  0298                     	;# 
  1751  0298                     	;# 
  1752  0299                     	;# 
  1753  0299                     	;# 
  1754  029A                     	;# 
  1755  029B                     	;# 
  1756  029C                     	;# 
  1757  029C                     	;# 
  1758  029D                     	;# 
  1759  030C                     	;# 
  1760  030C                     	;# 
  1761  030D                     	;# 
  1762  030E                     	;# 
  1763  030F                     	;# 
  1764  0310                     	;# 
  1765  0310                     	;# 
  1766  0311                     	;# 
  1767  0312                     	;# 
  1768  0313                     	;# 
  1769  0314                     	;# 
  1770  0314                     	;# 
  1771  0315                     	;# 
  1772  0316                     	;# 
  1773  0317                     	;# 
  1774  0318                     	;# 
  1775  0318                     	;# 
  1776  0319                     	;# 
  1777  031A                     	;# 
  1778  031B                     	;# 
  1779  031C                     	;# 
  1780  031C                     	;# 
  1781  031D                     	;# 
  1782  031E                     	;# 
  1783  031F                     	;# 
  1784  038C                     	;# 
  1785  038D                     	;# 
  1786  038E                     	;# 
  1787  0390                     	;# 
  1788  0391                     	;# 
  1789  0392                     	;# 
  1790  040C                     	;# 
  1791  040D                     	;# 
  1792  040E                     	;# 
  1793  040F                     	;# 
  1794  0410                     	;# 
  1795  0411                     	;# 
  1796  0416                     	;# 
  1797  0416                     	;# 
  1798  0417                     	;# 
  1799  0418                     	;# 
  1800  0418                     	;# 
  1801  0419                     	;# 
  1802  041A                     	;# 
  1803  041A                     	;# 
  1804  041B                     	;# 
  1805  041C                     	;# 
  1806  041C                     	;# 
  1807  041D                     	;# 
  1808  041E                     	;# 
  1809  041F                     	;# 
  1810  048C                     	;# 
  1811  048C                     	;# 
  1812  048D                     	;# 
  1813  048E                     	;# 
  1814  048F                     	;# 
  1815  048F                     	;# 
  1816  0490                     	;# 
  1817  0491                     	;# 
  1818  0492                     	;# 
  1819  0492                     	;# 
  1820  0493                     	;# 
  1821  0494                     	;# 
  1822  0495                     	;# 
  1823  0495                     	;# 
  1824  0496                     	;# 
  1825  0497                     	;# 
  1826  0498                     	;# 
  1827  0499                     	;# 
  1828  049A                     	;# 
  1829  049B                     	;# 
  1830  049C                     	;# 
  1831  049D                     	;# 
  1832  050C                     	;# 
  1833  050C                     	;# 
  1834  050D                     	;# 
  1835  050E                     	;# 
  1836  050F                     	;# 
  1837  050F                     	;# 
  1838  0510                     	;# 
  1839  0511                     	;# 
  1840  0512                     	;# 
  1841  0512                     	;# 
  1842  0513                     	;# 
  1843  0514                     	;# 
  1844  0515                     	;# 
  1845  0515                     	;# 
  1846  0516                     	;# 
  1847  0517                     	;# 
  1848  0518                     	;# 
  1849  0519                     	;# 
  1850  051A                     	;# 
  1851  051B                     	;# 
  1852  051C                     	;# 
  1853  051D                     	;# 
  1854  058C                     	;# 
  1855  058C                     	;# 
  1856  058D                     	;# 
  1857  058E                     	;# 
  1858  058F                     	;# 
  1859  058F                     	;# 
  1860  0590                     	;# 
  1861  0591                     	;# 
  1862  0592                     	;# 
  1863  0593                     	;# 
  1864  060C                     	;# 
  1865  060D                     	;# 
  1866  060E                     	;# 
  1867  060F                     	;# 
  1868  0610                     	;# 
  1869  0611                     	;# 
  1870  0612                     	;# 
  1871  0613                     	;# 
  1872  0614                     	;# 
  1873  0616                     	;# 
  1874  0617                     	;# 
  1875  0618                     	;# 
  1876  0619                     	;# 
  1877  061A                     	;# 
  1878  061B                     	;# 
  1879  061C                     	;# 
  1880  061D                     	;# 
  1881  061E                     	;# 
  1882  068C                     	;# 
  1883  068D                     	;# 
  1884  068E                     	;# 
  1885  068F                     	;# 
  1886  0690                     	;# 
  1887  0691                     	;# 
  1888  0692                     	;# 
  1889  0693                     	;# 
  1890  0694                     	;# 
  1891  070C                     	;# 
  1892  070D                     	;# 
  1893  070E                     	;# 
  1894  070F                     	;# 
  1895  0710                     	;# 
  1896  0711                     	;# 
  1897  0712                     	;# 
  1898  0713                     	;# 
  1899  0714                     	;# 
  1900  0716                     	;# 
  1901  0717                     	;# 
  1902  0718                     	;# 
  1903  0719                     	;# 
  1904  071A                     	;# 
  1905  071B                     	;# 
  1906  071C                     	;# 
  1907  071D                     	;# 
  1908  071E                     	;# 
  1909  0796                     	;# 
  1910  0797                     	;# 
  1911  0798                     	;# 
  1912  0799                     	;# 
  1913  079A                     	;# 
  1914  079B                     	;# 
  1915  080C                     	;# 
  1916  080D                     	;# 
  1917  080E                     	;# 
  1918  080F                     	;# 
  1919  0810                     	;# 
  1920  0811                     	;# 
  1921  0812                     	;# 
  1922  0813                     	;# 
  1923  0814                     	;# 
  1924  081A                     	;# 
  1925  081B                     	;# 
  1926  081C                     	;# 
  1927  081D                     	;# 
  1928  081E                     	;# 
  1929  081F                     	;# 
  1930  088C                     	;# 
  1931  088D                     	;# 
  1932  088E                     	;# 
  1933  088F                     	;# 
  1934  0890                     	;# 
  1935  0891                     	;# 
  1936  0892                     	;# 
  1937  0893                     	;# 
  1938  0895                     	;# 
  1939  0896                     	;# 
  1940  0897                     	;# 
  1941  0898                     	;# 
  1942  0899                     	;# 
  1943  089A                     	;# 
  1944  089B                     	;# 
  1945  090C                     	;# 
  1946  090E                     	;# 
  1947  090F                     	;# 
  1948  091F                     	;# 
  1949  091F                     	;# 
  1950  098F                     	;# 
  1951  098F                     	;# 
  1952  0990                     	;# 
  1953  0991                     	;# 
  1954  0992                     	;# 
  1955  0993                     	;# 
  1956  0994                     	;# 
  1957  0995                     	;# 
  1958  0996                     	;# 
  1959  0997                     	;# 
  1960  0E0F                     	;# 
  1961  0E10                     	;# 
  1962  0E11                     	;# 
  1963  0E12                     	;# 
  1964  0E13                     	;# 
  1965  0E14                     	;# 
  1966  0E15                     	;# 
  1967  0E16                     	;# 
  1968  0E17                     	;# 
  1969  0E18                     	;# 
  1970  0E19                     	;# 
  1971  0E1A                     	;# 
  1972  0E1B                     	;# 
  1973  0E1C                     	;# 
  1974  0E1D                     	;# 
  1975  0E1E                     	;# 
  1976  0E1F                     	;# 
  1977  0E20                     	;# 
  1978  0E21                     	;# 
  1979  0E22                     	;# 
  1980  0E23                     	;# 
  1981  0E24                     	;# 
  1982  0E25                     	;# 
  1983  0E26                     	;# 
  1984  0E27                     	;# 
  1985  0E28                     	;# 
  1986  0E29                     	;# 
  1987  0E2A                     	;# 
  1988  0E2B                     	;# 
  1989  0E2C                     	;# 
  1990  0E2D                     	;# 
  1991  0E2E                     	;# 
  1992  0E2F                     	;# 
  1993  0E30                     	;# 
  1994  0E31                     	;# 
  1995  0E32                     	;# 
  1996  0E33                     	;# 
  1997  0E34                     	;# 
  1998  0E35                     	;# 
  1999  0E36                     	;# 
  2000  0E37                     	;# 
  2001  0E8F                     	;# 
  2002  0E90                     	;# 
  2003  0E91                     	;# 
  2004  0E92                     	;# 
  2005  0E93                     	;# 
  2006  0E94                     	;# 
  2007  0E95                     	;# 
  2008  0E96                     	;# 
  2009  0E97                     	;# 
  2010  0E9C                     	;# 
  2011  0E9D                     	;# 
  2012  0E9E                     	;# 
  2013  0EA1                     	;# 
  2014  0EA2                     	;# 
  2015  0EA3                     	;# 
  2016  0EA4                     	;# 
  2017  0EA5                     	;# 
  2018  0EA9                     	;# 
  2019  0EAA                     	;# 
  2020  0EAB                     	;# 
  2021  0EAC                     	;# 
  2022  0EB1                     	;# 
  2023  0EB2                     	;# 
  2024  0EB3                     	;# 
  2025  0EB8                     	;# 
  2026  0EB9                     	;# 
  2027  0EBA                     	;# 
  2028  0EBB                     	;# 
  2029  0EBC                     	;# 
  2030  0EBD                     	;# 
  2031  0EBE                     	;# 
  2032  0EC3                     	;# 
  2033  0EC5                     	;# 
  2034  0EC6                     	;# 
  2035  0EC7                     	;# 
  2036  0EC8                     	;# 
  2037  0EC9                     	;# 
  2038  0ECA                     	;# 
  2039  0ECB                     	;# 
  2040  0ECC                     	;# 
  2041  0F10                     	;# 
  2042  0F11                     	;# 
  2043  0F12                     	;# 
  2044  0F13                     	;# 
  2045  0F14                     	;# 
  2046  0F15                     	;# 
  2047  0F16                     	;# 
  2048  0F17                     	;# 
  2049  0F18                     	;# 
  2050  0F19                     	;# 
  2051  0F1A                     	;# 
  2052  0F1B                     	;# 
  2053  0F1C                     	;# 
  2054  0F1D                     	;# 
  2055  0F1E                     	;# 
  2056  0F1F                     	;# 
  2057  0F20                     	;# 
  2058  0F21                     	;# 
  2059  0F22                     	;# 
  2060  0F23                     	;# 
  2061  0F24                     	;# 
  2062  0F25                     	;# 
  2063  0F26                     	;# 
  2064  0F27                     	;# 
  2065  0F38                     	;# 
  2066  0F39                     	;# 
  2067  0F3A                     	;# 
  2068  0F3B                     	;# 
  2069  0F3C                     	;# 
  2070  0F3D                     	;# 
  2071  0F3E                     	;# 
  2072  0F3F                     	;# 
  2073  0F40                     	;# 
  2074  0F41                     	;# 
  2075  0F43                     	;# 
  2076  0F44                     	;# 
  2077  0F45                     	;# 
  2078  0F46                     	;# 
  2079  0F47                     	;# 
  2080  0F48                     	;# 
  2081  0F49                     	;# 
  2082  0F4A                     	;# 
  2083  0F4B                     	;# 
  2084  0F4C                     	;# 
  2085  0F4E                     	;# 
  2086  0F4F                     	;# 
  2087  0F50                     	;# 
  2088  0F51                     	;# 
  2089  0F52                     	;# 
  2090  0F53                     	;# 
  2091  0F54                     	;# 
  2092  0F55                     	;# 
  2093  0F56                     	;# 
  2094  0F57                     	;# 
  2095  0F65                     	;# 
  2096  0F68                     	;# 
  2097  0F69                     	;# 
  2098  0F6A                     	;# 
  2099  0F6B                     	;# 
  2100  0FE4                     	;# 
  2101  0FE5                     	;# 
  2102  0FE6                     	;# 
  2103  0FE7                     	;# 
  2104  0FE8                     	;# 
  2105  0FE9                     	;# 
  2106  0FEA                     	;# 
  2107  0FEB                     	;# 
  2108  0FED                     	;# 
  2109  0FEE                     	;# 
  2110  0FEF                     	;# 
  2111  0000                     	;# 
  2112  0001                     	;# 
  2113  0002                     	;# 
  2114  0003                     	;# 
  2115  0004                     	;# 
  2116  0005                     	;# 
  2117  0006                     	;# 
  2118  0007                     	;# 
  2119  0008                     	;# 
  2120  0009                     	;# 
  2121  000A                     	;# 
  2122  000B                     	;# 
  2123  000C                     	;# 
  2124  000D                     	;# 
  2125  000E                     	;# 
  2126  0010                     	;# 
  2127  0011                     	;# 
  2128  0012                     	;# 
  2129  0013                     	;# 
  2130  0016                     	;# 
  2131  0017                     	;# 
  2132  0018                     	;# 
  2133  001C                     	;# 
  2134  001C                     	;# 
  2135  001D                     	;# 
  2136  001D                     	;# 
  2137  001E                     	;# 
  2138  001F                     	;# 
  2139  008C                     	;# 
  2140  008C                     	;# 
  2141  008D                     	;# 
  2142  008E                     	;# 
  2143  008E                     	;# 
  2144  008F                     	;# 
  2145  0090                     	;# 
  2146  0090                     	;# 
  2147  0091                     	;# 
  2148  0093                     	;# 
  2149  0094                     	;# 
  2150  0095                     	;# 
  2151  0096                     	;# 
  2152  0097                     	;# 
  2153  0098                     	;# 
  2154  0099                     	;# 
  2155  009A                     	;# 
  2156  009B                     	;# 
  2157  009C                     	;# 
  2158  009D                     	;# 
  2159  009E                     	;# 
  2160  010C                     	;# 
  2161  010D                     	;# 
  2162  010E                     	;# 
  2163  010E                     	;# 
  2164  010F                     	;# 
  2165  0110                     	;# 
  2166  0110                     	;# 
  2167  0111                     	;# 
  2168  0112                     	;# 
  2169  0112                     	;# 
  2170  0113                     	;# 
  2171  0114                     	;# 
  2172  0114                     	;# 
  2173  0115                     	;# 
  2174  0116                     	;# 
  2175  0116                     	;# 
  2176  0117                     	;# 
  2177  0119                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  011A                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011B                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011C                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011D                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011E                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011F                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  018C                     	;# 
  2203  018D                     	;# 
  2204  018E                     	;# 
  2205  018F                     	;# 
  2206  0190                     	;# 
  2207  0191                     	;# 
  2208  0192                     	;# 
  2209  0196                     	;# 
  2210  0197                     	;# 
  2211  0198                     	;# 
  2212  0199                     	;# 
  2213  019A                     	;# 
  2214  019B                     	;# 
  2215  019C                     	;# 
  2216  020C                     	;# 
  2217  020D                     	;# 
  2218  020E                     	;# 
  2219  020F                     	;# 
  2220  020F                     	;# 
  2221  0210                     	;# 
  2222  0210                     	;# 
  2223  0211                     	;# 
  2224  0211                     	;# 
  2225  0212                     	;# 
  2226  0213                     	;# 
  2227  0214                     	;# 
  2228  0215                     	;# 
  2229  0215                     	;# 
  2230  0216                     	;# 
  2231  0216                     	;# 
  2232  0217                     	;# 
  2233  0217                     	;# 
  2234  0218                     	;# 
  2235  0219                     	;# 
  2236  021A                     	;# 
  2237  021B                     	;# 
  2238  021B                     	;# 
  2239  021C                     	;# 
  2240  021C                     	;# 
  2241  021D                     	;# 
  2242  021D                     	;# 
  2243  021E                     	;# 
  2244  021F                     	;# 
  2245  028C                     	;# 
  2246  028C                     	;# 
  2247  028D                     	;# 
  2248  028D                     	;# 
  2249  028E                     	;# 
  2250  028F                     	;# 
  2251  0290                     	;# 
  2252  0290                     	;# 
  2253  0291                     	;# 
  2254  0292                     	;# 
  2255  0292                     	;# 
  2256  0293                     	;# 
  2257  0293                     	;# 
  2258  0294                     	;# 
  2259  0295                     	;# 
  2260  0296                     	;# 
  2261  0296                     	;# 
  2262  0297                     	;# 
  2263  0298                     	;# 
  2264  0298                     	;# 
  2265  0299                     	;# 
  2266  0299                     	;# 
  2267  029A                     	;# 
  2268  029B                     	;# 
  2269  029C                     	;# 
  2270  029C                     	;# 
  2271  029D                     	;# 
  2272  030C                     	;# 
  2273  030C                     	;# 
  2274  030D                     	;# 
  2275  030E                     	;# 
  2276  030F                     	;# 
  2277  0310                     	;# 
  2278  0310                     	;# 
  2279  0311                     	;# 
  2280  0312                     	;# 
  2281  0313                     	;# 
  2282  0314                     	;# 
  2283  0314                     	;# 
  2284  0315                     	;# 
  2285  0316                     	;# 
  2286  0317                     	;# 
  2287  0318                     	;# 
  2288  0318                     	;# 
  2289  0319                     	;# 
  2290  031A                     	;# 
  2291  031B                     	;# 
  2292  031C                     	;# 
  2293  031C                     	;# 
  2294  031D                     	;# 
  2295  031E                     	;# 
  2296  031F                     	;# 
  2297  038C                     	;# 
  2298  038D                     	;# 
  2299  038E                     	;# 
  2300  0390                     	;# 
  2301  0391                     	;# 
  2302  0392                     	;# 
  2303  040C                     	;# 
  2304  040D                     	;# 
  2305  040E                     	;# 
  2306  040F                     	;# 
  2307  0410                     	;# 
  2308  0411                     	;# 
  2309  0416                     	;# 
  2310  0416                     	;# 
  2311  0417                     	;# 
  2312  0418                     	;# 
  2313  0418                     	;# 
  2314  0419                     	;# 
  2315  041A                     	;# 
  2316  041A                     	;# 
  2317  041B                     	;# 
  2318  041C                     	;# 
  2319  041C                     	;# 
  2320  041D                     	;# 
  2321  041E                     	;# 
  2322  041F                     	;# 
  2323  048C                     	;# 
  2324  048C                     	;# 
  2325  048D                     	;# 
  2326  048E                     	;# 
  2327  048F                     	;# 
  2328  048F                     	;# 
  2329  0490                     	;# 
  2330  0491                     	;# 
  2331  0492                     	;# 
  2332  0492                     	;# 
  2333  0493                     	;# 
  2334  0494                     	;# 
  2335  0495                     	;# 
  2336  0495                     	;# 
  2337  0496                     	;# 
  2338  0497                     	;# 
  2339  0498                     	;# 
  2340  0499                     	;# 
  2341  049A                     	;# 
  2342  049B                     	;# 
  2343  049C                     	;# 
  2344  049D                     	;# 
  2345  050C                     	;# 
  2346  050C                     	;# 
  2347  050D                     	;# 
  2348  050E                     	;# 
  2349  050F                     	;# 
  2350  050F                     	;# 
  2351  0510                     	;# 
  2352  0511                     	;# 
  2353  0512                     	;# 
  2354  0512                     	;# 
  2355  0513                     	;# 
  2356  0514                     	;# 
  2357  0515                     	;# 
  2358  0515                     	;# 
  2359  0516                     	;# 
  2360  0517                     	;# 
  2361  0518                     	;# 
  2362  0519                     	;# 
  2363  051A                     	;# 
  2364  051B                     	;# 
  2365  051C                     	;# 
  2366  051D                     	;# 
  2367  058C                     	;# 
  2368  058C                     	;# 
  2369  058D                     	;# 
  2370  058E                     	;# 
  2371  058F                     	;# 
  2372  058F                     	;# 
  2373  0590                     	;# 
  2374  0591                     	;# 
  2375  0592                     	;# 
  2376  0593                     	;# 
  2377  060C                     	;# 
  2378  060D                     	;# 
  2379  060E                     	;# 
  2380  060F                     	;# 
  2381  0610                     	;# 
  2382  0611                     	;# 
  2383  0612                     	;# 
  2384  0613                     	;# 
  2385  0614                     	;# 
  2386  0616                     	;# 
  2387  0617                     	;# 
  2388  0618                     	;# 
  2389  0619                     	;# 
  2390  061A                     	;# 
  2391  061B                     	;# 
  2392  061C                     	;# 
  2393  061D                     	;# 
  2394  061E                     	;# 
  2395  068C                     	;# 
  2396  068D                     	;# 
  2397  068E                     	;# 
  2398  068F                     	;# 
  2399  0690                     	;# 
  2400  0691                     	;# 
  2401  0692                     	;# 
  2402  0693                     	;# 
  2403  0694                     	;# 
  2404  070C                     	;# 
  2405  070D                     	;# 
  2406  070E                     	;# 
  2407  070F                     	;# 
  2408  0710                     	;# 
  2409  0711                     	;# 
  2410  0712                     	;# 
  2411  0713                     	;# 
  2412  0714                     	;# 
  2413  0716                     	;# 
  2414  0717                     	;# 
  2415  0718                     	;# 
  2416  0719                     	;# 
  2417  071A                     	;# 
  2418  071B                     	;# 
  2419  071C                     	;# 
  2420  071D                     	;# 
  2421  071E                     	;# 
  2422  0796                     	;# 
  2423  0797                     	;# 
  2424  0798                     	;# 
  2425  0799                     	;# 
  2426  079A                     	;# 
  2427  079B                     	;# 
  2428  080C                     	;# 
  2429  080D                     	;# 
  2430  080E                     	;# 
  2431  080F                     	;# 
  2432  0810                     	;# 
  2433  0811                     	;# 
  2434  0812                     	;# 
  2435  0813                     	;# 
  2436  0814                     	;# 
  2437  081A                     	;# 
  2438  081B                     	;# 
  2439  081C                     	;# 
  2440  081D                     	;# 
  2441  081E                     	;# 
  2442  081F                     	;# 
  2443  088C                     	;# 
  2444  088D                     	;# 
  2445  088E                     	;# 
  2446  088F                     	;# 
  2447  0890                     	;# 
  2448  0891                     	;# 
  2449  0892                     	;# 
  2450  0893                     	;# 
  2451  0895                     	;# 
  2452  0896                     	;# 
  2453  0897                     	;# 
  2454  0898                     	;# 
  2455  0899                     	;# 
  2456  089A                     	;# 
  2457  089B                     	;# 
  2458  090C                     	;# 
  2459  090E                     	;# 
  2460  090F                     	;# 
  2461  091F                     	;# 
  2462  091F                     	;# 
  2463  098F                     	;# 
  2464  098F                     	;# 
  2465  0990                     	;# 
  2466  0991                     	;# 
  2467  0992                     	;# 
  2468  0993                     	;# 
  2469  0994                     	;# 
  2470  0995                     	;# 
  2471  0996                     	;# 
  2472  0997                     	;# 
  2473  0E0F                     	;# 
  2474  0E10                     	;# 
  2475  0E11                     	;# 
  2476  0E12                     	;# 
  2477  0E13                     	;# 
  2478  0E14                     	;# 
  2479  0E15                     	;# 
  2480  0E16                     	;# 
  2481  0E17                     	;# 
  2482  0E18                     	;# 
  2483  0E19                     	;# 
  2484  0E1A                     	;# 
  2485  0E1B                     	;# 
  2486  0E1C                     	;# 
  2487  0E1D                     	;# 
  2488  0E1E                     	;# 
  2489  0E1F                     	;# 
  2490  0E20                     	;# 
  2491  0E21                     	;# 
  2492  0E22                     	;# 
  2493  0E23                     	;# 
  2494  0E24                     	;# 
  2495  0E25                     	;# 
  2496  0E26                     	;# 
  2497  0E27                     	;# 
  2498  0E28                     	;# 
  2499  0E29                     	;# 
  2500  0E2A                     	;# 
  2501  0E2B                     	;# 
  2502  0E2C                     	;# 
  2503  0E2D                     	;# 
  2504  0E2E                     	;# 
  2505  0E2F                     	;# 
  2506  0E30                     	;# 
  2507  0E31                     	;# 
  2508  0E32                     	;# 
  2509  0E33                     	;# 
  2510  0E34                     	;# 
  2511  0E35                     	;# 
  2512  0E36                     	;# 
  2513  0E37                     	;# 
  2514  0E8F                     	;# 
  2515  0E90                     	;# 
  2516  0E91                     	;# 
  2517  0E92                     	;# 
  2518  0E93                     	;# 
  2519  0E94                     	;# 
  2520  0E95                     	;# 
  2521  0E96                     	;# 
  2522  0E97                     	;# 
  2523  0E9C                     	;# 
  2524  0E9D                     	;# 
  2525  0E9E                     	;# 
  2526  0EA1                     	;# 
  2527  0EA2                     	;# 
  2528  0EA3                     	;# 
  2529  0EA4                     	;# 
  2530  0EA5                     	;# 
  2531  0EA9                     	;# 
  2532  0EAA                     	;# 
  2533  0EAB                     	;# 
  2534  0EAC                     	;# 
  2535  0EB1                     	;# 
  2536  0EB2                     	;# 
  2537  0EB3                     	;# 
  2538  0EB8                     	;# 
  2539  0EB9                     	;# 
  2540  0EBA                     	;# 
  2541  0EBB                     	;# 
  2542  0EBC                     	;# 
  2543  0EBD                     	;# 
  2544  0EBE                     	;# 
  2545  0EC3                     	;# 
  2546  0EC5                     	;# 
  2547  0EC6                     	;# 
  2548  0EC7                     	;# 
  2549  0EC8                     	;# 
  2550  0EC9                     	;# 
  2551  0ECA                     	;# 
  2552  0ECB                     	;# 
  2553  0ECC                     	;# 
  2554  0F10                     	;# 
  2555  0F11                     	;# 
  2556  0F12                     	;# 
  2557  0F13                     	;# 
  2558  0F14                     	;# 
  2559  0F15                     	;# 
  2560  0F16                     	;# 
  2561  0F17                     	;# 
  2562  0F18                     	;# 
  2563  0F19                     	;# 
  2564  0F1A                     	;# 
  2565  0F1B                     	;# 
  2566  0F1C                     	;# 
  2567  0F1D                     	;# 
  2568  0F1E                     	;# 
  2569  0F1F                     	;# 
  2570  0F20                     	;# 
  2571  0F21                     	;# 
  2572  0F22                     	;# 
  2573  0F23                     	;# 
  2574  0F24                     	;# 
  2575  0F25                     	;# 
  2576  0F26                     	;# 
  2577  0F27                     	;# 
  2578  0F38                     	;# 
  2579  0F39                     	;# 
  2580  0F3A                     	;# 
  2581  0F3B                     	;# 
  2582  0F3C                     	;# 
  2583  0F3D                     	;# 
  2584  0F3E                     	;# 
  2585  0F3F                     	;# 
  2586  0F40                     	;# 
  2587  0F41                     	;# 
  2588  0F43                     	;# 
  2589  0F44                     	;# 
  2590  0F45                     	;# 
  2591  0F46                     	;# 
  2592  0F47                     	;# 
  2593  0F48                     	;# 
  2594  0F49                     	;# 
  2595  0F4A                     	;# 
  2596  0F4B                     	;# 
  2597  0F4C                     	;# 
  2598  0F4E                     	;# 
  2599  0F4F                     	;# 
  2600  0F50                     	;# 
  2601  0F51                     	;# 
  2602  0F52                     	;# 
  2603  0F53                     	;# 
  2604  0F54                     	;# 
  2605  0F55                     	;# 
  2606  0F56                     	;# 
  2607  0F57                     	;# 
  2608  0F65                     	;# 
  2609  0F68                     	;# 
  2610  0F69                     	;# 
  2611  0F6A                     	;# 
  2612  0F6B                     	;# 
  2613  0FE4                     	;# 
  2614  0FE5                     	;# 
  2615  0FE6                     	;# 
  2616  0FE7                     	;# 
  2617  0FE8                     	;# 
  2618  0FE9                     	;# 
  2619  0FEA                     	;# 
  2620  0FEB                     	;# 
  2621  0FED                     	;# 
  2622  0FEE                     	;# 
  2623  0FEF                     	;# 
  2624  0000                     	;# 
  2625  0001                     	;# 
  2626  0002                     	;# 
  2627  0003                     	;# 
  2628  0004                     	;# 
  2629  0005                     	;# 
  2630  0006                     	;# 
  2631  0007                     	;# 
  2632  0008                     	;# 
  2633  0009                     	;# 
  2634  000A                     	;# 
  2635  000B                     	;# 
  2636  000C                     	;# 
  2637  000D                     	;# 
  2638  000E                     	;# 
  2639  0010                     	;# 
  2640  0011                     	;# 
  2641  0012                     	;# 
  2642  0013                     	;# 
  2643  0016                     	;# 
  2644  0017                     	;# 
  2645  0018                     	;# 
  2646  001C                     	;# 
  2647  001C                     	;# 
  2648  001D                     	;# 
  2649  001D                     	;# 
  2650  001E                     	;# 
  2651  001F                     	;# 
  2652  008C                     	;# 
  2653  008C                     	;# 
  2654  008D                     	;# 
  2655  008E                     	;# 
  2656  008E                     	;# 
  2657  008F                     	;# 
  2658  0090                     	;# 
  2659  0090                     	;# 
  2660  0091                     	;# 
  2661  0093                     	;# 
  2662  0094                     	;# 
  2663  0095                     	;# 
  2664  0096                     	;# 
  2665  0097                     	;# 
  2666  0098                     	;# 
  2667  0099                     	;# 
  2668  009A                     	;# 
  2669  009B                     	;# 
  2670  009C                     	;# 
  2671  009D                     	;# 
  2672  009E                     	;# 
  2673  010C                     	;# 
  2674  010D                     	;# 
  2675  010E                     	;# 
  2676  010E                     	;# 
  2677  010F                     	;# 
  2678  0110                     	;# 
  2679  0110                     	;# 
  2680  0111                     	;# 
  2681  0112                     	;# 
  2682  0112                     	;# 
  2683  0113                     	;# 
  2684  0114                     	;# 
  2685  0114                     	;# 
  2686  0115                     	;# 
  2687  0116                     	;# 
  2688  0116                     	;# 
  2689  0117                     	;# 
  2690  0119                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  011A                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011B                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011C                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011D                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011E                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011F                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  018C                     	;# 
  2716  018D                     	;# 
  2717  018E                     	;# 
  2718  018F                     	;# 
  2719  0190                     	;# 
  2720  0191                     	;# 
  2721  0192                     	;# 
  2722  0196                     	;# 
  2723  0197                     	;# 
  2724  0198                     	;# 
  2725  0199                     	;# 
  2726  019A                     	;# 
  2727  019B                     	;# 
  2728  019C                     	;# 
  2729  020C                     	;# 
  2730  020D                     	;# 
  2731  020E                     	;# 
  2732  020F                     	;# 
  2733  020F                     	;# 
  2734  0210                     	;# 
  2735  0210                     	;# 
  2736  0211                     	;# 
  2737  0211                     	;# 
  2738  0212                     	;# 
  2739  0213                     	;# 
  2740  0214                     	;# 
  2741  0215                     	;# 
  2742  0215                     	;# 
  2743  0216                     	;# 
  2744  0216                     	;# 
  2745  0217                     	;# 
  2746  0217                     	;# 
  2747  0218                     	;# 
  2748  0219                     	;# 
  2749  021A                     	;# 
  2750  021B                     	;# 
  2751  021B                     	;# 
  2752  021C                     	;# 
  2753  021C                     	;# 
  2754  021D                     	;# 
  2755  021D                     	;# 
  2756  021E                     	;# 
  2757  021F                     	;# 
  2758  028C                     	;# 
  2759  028C                     	;# 
  2760  028D                     	;# 
  2761  028D                     	;# 
  2762  028E                     	;# 
  2763  028F                     	;# 
  2764  0290                     	;# 
  2765  0290                     	;# 
  2766  0291                     	;# 
  2767  0292                     	;# 
  2768  0292                     	;# 
  2769  0293                     	;# 
  2770  0293                     	;# 
  2771  0294                     	;# 
  2772  0295                     	;# 
  2773  0296                     	;# 
  2774  0296                     	;# 
  2775  0297                     	;# 
  2776  0298                     	;# 
  2777  0298                     	;# 
  2778  0299                     	;# 
  2779  0299                     	;# 
  2780  029A                     	;# 
  2781  029B                     	;# 
  2782  029C                     	;# 
  2783  029C                     	;# 
  2784  029D                     	;# 
  2785  030C                     	;# 
  2786  030C                     	;# 
  2787  030D                     	;# 
  2788  030E                     	;# 
  2789  030F                     	;# 
  2790  0310                     	;# 
  2791  0310                     	;# 
  2792  0311                     	;# 
  2793  0312                     	;# 
  2794  0313                     	;# 
  2795  0314                     	;# 
  2796  0314                     	;# 
  2797  0315                     	;# 
  2798  0316                     	;# 
  2799  0317                     	;# 
  2800  0318                     	;# 
  2801  0318                     	;# 
  2802  0319                     	;# 
  2803  031A                     	;# 
  2804  031B                     	;# 
  2805  031C                     	;# 
  2806  031C                     	;# 
  2807  031D                     	;# 
  2808  031E                     	;# 
  2809  031F                     	;# 
  2810  038C                     	;# 
  2811  038D                     	;# 
  2812  038E                     	;# 
  2813  0390                     	;# 
  2814  0391                     	;# 
  2815  0392                     	;# 
  2816  040C                     	;# 
  2817  040D                     	;# 
  2818  040E                     	;# 
  2819  040F                     	;# 
  2820  0410                     	;# 
  2821  0411                     	;# 
  2822  0416                     	;# 
  2823  0416                     	;# 
  2824  0417                     	;# 
  2825  0418                     	;# 
  2826  0418                     	;# 
  2827  0419                     	;# 
  2828  041A                     	;# 
  2829  041A                     	;# 
  2830  041B                     	;# 
  2831  041C                     	;# 
  2832  041C                     	;# 
  2833  041D                     	;# 
  2834  041E                     	;# 
  2835  041F                     	;# 
  2836  048C                     	;# 
  2837  048C                     	;# 
  2838  048D                     	;# 
  2839  048E                     	;# 
  2840  048F                     	;# 
  2841  048F                     	;# 
  2842  0490                     	;# 
  2843  0491                     	;# 
  2844  0492                     	;# 
  2845  0492                     	;# 
  2846  0493                     	;# 
  2847  0494                     	;# 
  2848  0495                     	;# 
  2849  0495                     	;# 
  2850  0496                     	;# 
  2851  0497                     	;# 
  2852  0498                     	;# 
  2853  0499                     	;# 
  2854  049A                     	;# 
  2855  049B                     	;# 
  2856  049C                     	;# 
  2857  049D                     	;# 
  2858  050C                     	;# 
  2859  050C                     	;# 
  2860  050D                     	;# 
  2861  050E                     	;# 
  2862  050F                     	;# 
  2863  050F                     	;# 
  2864  0510                     	;# 
  2865  0511                     	;# 
  2866  0512                     	;# 
  2867  0512                     	;# 
  2868  0513                     	;# 
  2869  0514                     	;# 
  2870  0515                     	;# 
  2871  0515                     	;# 
  2872  0516                     	;# 
  2873  0517                     	;# 
  2874  0518                     	;# 
  2875  0519                     	;# 
  2876  051A                     	;# 
  2877  051B                     	;# 
  2878  051C                     	;# 
  2879  051D                     	;# 
  2880  058C                     	;# 
  2881  058C                     	;# 
  2882  058D                     	;# 
  2883  058E                     	;# 
  2884  058F                     	;# 
  2885  058F                     	;# 
  2886  0590                     	;# 
  2887  0591                     	;# 
  2888  0592                     	;# 
  2889  0593                     	;# 
  2890  060C                     	;# 
  2891  060D                     	;# 
  2892  060E                     	;# 
  2893  060F                     	;# 
  2894  0610                     	;# 
  2895  0611                     	;# 
  2896  0612                     	;# 
  2897  0613                     	;# 
  2898  0614                     	;# 
  2899  0616                     	;# 
  2900  0617                     	;# 
  2901  0618                     	;# 
  2902  0619                     	;# 
  2903  061A                     	;# 
  2904  061B                     	;# 
  2905  061C                     	;# 
  2906  061D                     	;# 
  2907  061E                     	;# 
  2908  068C                     	;# 
  2909  068D                     	;# 
  2910  068E                     	;# 
  2911  068F                     	;# 
  2912  0690                     	;# 
  2913  0691                     	;# 
  2914  0692                     	;# 
  2915  0693                     	;# 
  2916  0694                     	;# 
  2917  070C                     	;# 
  2918  070D                     	;# 
  2919  070E                     	;# 
  2920  070F                     	;# 
  2921  0710                     	;# 
  2922  0711                     	;# 
  2923  0712                     	;# 
  2924  0713                     	;# 
  2925  0714                     	;# 
  2926  0716                     	;# 
  2927  0717                     	;# 
  2928  0718                     	;# 
  2929  0719                     	;# 
  2930  071A                     	;# 
  2931  071B                     	;# 
  2932  071C                     	;# 
  2933  071D                     	;# 
  2934  071E                     	;# 
  2935  0796                     	;# 
  2936  0797                     	;# 
  2937  0798                     	;# 
  2938  0799                     	;# 
  2939  079A                     	;# 
  2940  079B                     	;# 
  2941  080C                     	;# 
  2942  080D                     	;# 
  2943  080E                     	;# 
  2944  080F                     	;# 
  2945  0810                     	;# 
  2946  0811                     	;# 
  2947  0812                     	;# 
  2948  0813                     	;# 
  2949  0814                     	;# 
  2950  081A                     	;# 
  2951  081B                     	;# 
  2952  081C                     	;# 
  2953  081D                     	;# 
  2954  081E                     	;# 
  2955  081F                     	;# 
  2956  088C                     	;# 
  2957  088D                     	;# 
  2958  088E                     	;# 
  2959  088F                     	;# 
  2960  0890                     	;# 
  2961  0891                     	;# 
  2962  0892                     	;# 
  2963  0893                     	;# 
  2964  0895                     	;# 
  2965  0896                     	;# 
  2966  0897                     	;# 
  2967  0898                     	;# 
  2968  0899                     	;# 
  2969  089A                     	;# 
  2970  089B                     	;# 
  2971  090C                     	;# 
  2972  090E                     	;# 
  2973  090F                     	;# 
  2974  091F                     	;# 
  2975  091F                     	;# 
  2976  098F                     	;# 
  2977  098F                     	;# 
  2978  0990                     	;# 
  2979  0991                     	;# 
  2980  0992                     	;# 
  2981  0993                     	;# 
  2982  0994                     	;# 
  2983  0995                     	;# 
  2984  0996                     	;# 
  2985  0997                     	;# 
  2986  0E0F                     	;# 
  2987  0E10                     	;# 
  2988  0E11                     	;# 
  2989  0E12                     	;# 
  2990  0E13                     	;# 
  2991  0E14                     	;# 
  2992  0E15                     	;# 
  2993  0E16                     	;# 
  2994  0E17                     	;# 
  2995  0E18                     	;# 
  2996  0E19                     	;# 
  2997  0E1A                     	;# 
  2998  0E1B                     	;# 
  2999  0E1C                     	;# 
  3000  0E1D                     	;# 
  3001  0E1E                     	;# 
  3002  0E1F                     	;# 
  3003  0E20                     	;# 
  3004  0E21                     	;# 
  3005  0E22                     	;# 
  3006  0E23                     	;# 
  3007  0E24                     	;# 
  3008  0E25                     	;# 
  3009  0E26                     	;# 
  3010  0E27                     	;# 
  3011  0E28                     	;# 
  3012  0E29                     	;# 
  3013  0E2A                     	;# 
  3014  0E2B                     	;# 
  3015  0E2C                     	;# 
  3016  0E2D                     	;# 
  3017  0E2E                     	;# 
  3018  0E2F                     	;# 
  3019  0E30                     	;# 
  3020  0E31                     	;# 
  3021  0E32                     	;# 
  3022  0E33                     	;# 
  3023  0E34                     	;# 
  3024  0E35                     	;# 
  3025  0E36                     	;# 
  3026  0E37                     	;# 
  3027  0E8F                     	;# 
  3028  0E90                     	;# 
  3029  0E91                     	;# 
  3030  0E92                     	;# 
  3031  0E93                     	;# 
  3032  0E94                     	;# 
  3033  0E95                     	;# 
  3034  0E96                     	;# 
  3035  0E97                     	;# 
  3036  0E9C                     	;# 
  3037  0E9D                     	;# 
  3038  0E9E                     	;# 
  3039  0EA1                     	;# 
  3040  0EA2                     	;# 
  3041  0EA3                     	;# 
  3042  0EA4                     	;# 
  3043  0EA5                     	;# 
  3044  0EA9                     	;# 
  3045  0EAA                     	;# 
  3046  0EAB                     	;# 
  3047  0EAC                     	;# 
  3048  0EB1                     	;# 
  3049  0EB2                     	;# 
  3050  0EB3                     	;# 
  3051  0EB8                     	;# 
  3052  0EB9                     	;# 
  3053  0EBA                     	;# 
  3054  0EBB                     	;# 
  3055  0EBC                     	;# 
  3056  0EBD                     	;# 
  3057  0EBE                     	;# 
  3058  0EC3                     	;# 
  3059  0EC5                     	;# 
  3060  0EC6                     	;# 
  3061  0EC7                     	;# 
  3062  0EC8                     	;# 
  3063  0EC9                     	;# 
  3064  0ECA                     	;# 
  3065  0ECB                     	;# 
  3066  0ECC                     	;# 
  3067  0F10                     	;# 
  3068  0F11                     	;# 
  3069  0F12                     	;# 
  3070  0F13                     	;# 
  3071  0F14                     	;# 
  3072  0F15                     	;# 
  3073  0F16                     	;# 
  3074  0F17                     	;# 
  3075  0F18                     	;# 
  3076  0F19                     	;# 
  3077  0F1A                     	;# 
  3078  0F1B                     	;# 
  3079  0F1C                     	;# 
  3080  0F1D                     	;# 
  3081  0F1E                     	;# 
  3082  0F1F                     	;# 
  3083  0F20                     	;# 
  3084  0F21                     	;# 
  3085  0F22                     	;# 
  3086  0F23                     	;# 
  3087  0F24                     	;# 
  3088  0F25                     	;# 
  3089  0F26                     	;# 
  3090  0F27                     	;# 
  3091  0F38                     	;# 
  3092  0F39                     	;# 
  3093  0F3A                     	;# 
  3094  0F3B                     	;# 
  3095  0F3C                     	;# 
  3096  0F3D                     	;# 
  3097  0F3E                     	;# 
  3098  0F3F                     	;# 
  3099  0F40                     	;# 
  3100  0F41                     	;# 
  3101  0F43                     	;# 
  3102  0F44                     	;# 
  3103  0F45                     	;# 
  3104  0F46                     	;# 
  3105  0F47                     	;# 
  3106  0F48                     	;# 
  3107  0F49                     	;# 
  3108  0F4A                     	;# 
  3109  0F4B                     	;# 
  3110  0F4C                     	;# 
  3111  0F4E                     	;# 
  3112  0F4F                     	;# 
  3113  0F50                     	;# 
  3114  0F51                     	;# 
  3115  0F52                     	;# 
  3116  0F53                     	;# 
  3117  0F54                     	;# 
  3118  0F55                     	;# 
  3119  0F56                     	;# 
  3120  0F57                     	;# 
  3121  0F65                     	;# 
  3122  0F68                     	;# 
  3123  0F69                     	;# 
  3124  0F6A                     	;# 
  3125  0F6B                     	;# 
  3126  0FE4                     	;# 
  3127  0FE5                     	;# 
  3128  0FE6                     	;# 
  3129  0FE7                     	;# 
  3130  0FE8                     	;# 
  3131  0FE9                     	;# 
  3132  0FEA                     	;# 
  3133  0FEB                     	;# 
  3134  0FED                     	;# 
  3135  0FEE                     	;# 
  3136  0FEF                     	;# 
  3137  0000                     	;# 
  3138  0001                     	;# 
  3139  0002                     	;# 
  3140  0003                     	;# 
  3141  0004                     	;# 
  3142  0005                     	;# 
  3143  0006                     	;# 
  3144  0007                     	;# 
  3145  0008                     	;# 
  3146  0009                     	;# 
  3147  000A                     	;# 
  3148  000B                     	;# 
  3149  000C                     	;# 
  3150  000D                     	;# 
  3151  000E                     	;# 
  3152  0010                     	;# 
  3153  0011                     	;# 
  3154  0012                     	;# 
  3155  0013                     	;# 
  3156  0016                     	;# 
  3157  0017                     	;# 
  3158  0018                     	;# 
  3159  001C                     	;# 
  3160  001C                     	;# 
  3161  001D                     	;# 
  3162  001D                     	;# 
  3163  001E                     	;# 
  3164  001F                     	;# 
  3165  008C                     	;# 
  3166  008C                     	;# 
  3167  008D                     	;# 
  3168  008E                     	;# 
  3169  008E                     	;# 
  3170  008F                     	;# 
  3171  0090                     	;# 
  3172  0090                     	;# 
  3173  0091                     	;# 
  3174  0093                     	;# 
  3175  0094                     	;# 
  3176  0095                     	;# 
  3177  0096                     	;# 
  3178  0097                     	;# 
  3179  0098                     	;# 
  3180  0099                     	;# 
  3181  009A                     	;# 
  3182  009B                     	;# 
  3183  009C                     	;# 
  3184  009D                     	;# 
  3185  009E                     	;# 
  3186  010C                     	;# 
  3187  010D                     	;# 
  3188  010E                     	;# 
  3189  010E                     	;# 
  3190  010F                     	;# 
  3191  0110                     	;# 
  3192  0110                     	;# 
  3193  0111                     	;# 
  3194  0112                     	;# 
  3195  0112                     	;# 
  3196  0113                     	;# 
  3197  0114                     	;# 
  3198  0114                     	;# 
  3199  0115                     	;# 
  3200  0116                     	;# 
  3201  0116                     	;# 
  3202  0117                     	;# 
  3203  0119                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  011A                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011B                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011C                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011D                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011E                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011F                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  018C                     	;# 
  3229  018D                     	;# 
  3230  018E                     	;# 
  3231  018F                     	;# 
  3232  0190                     	;# 
  3233  0191                     	;# 
  3234  0192                     	;# 
  3235  0196                     	;# 
  3236  0197                     	;# 
  3237  0198                     	;# 
  3238  0199                     	;# 
  3239  019A                     	;# 
  3240  019B                     	;# 
  3241  019C                     	;# 
  3242  020C                     	;# 
  3243  020D                     	;# 
  3244  020E                     	;# 
  3245  020F                     	;# 
  3246  020F                     	;# 
  3247  0210                     	;# 
  3248  0210                     	;# 
  3249  0211                     	;# 
  3250  0211                     	;# 
  3251  0212                     	;# 
  3252  0213                     	;# 
  3253  0214                     	;# 
  3254  0215                     	;# 
  3255  0215                     	;# 
  3256  0216                     	;# 
  3257  0216                     	;# 
  3258  0217                     	;# 
  3259  0217                     	;# 
  3260  0218                     	;# 
  3261  0219                     	;# 
  3262  021A                     	;# 
  3263  021B                     	;# 
  3264  021B                     	;# 
  3265  021C                     	;# 
  3266  021C                     	;# 
  3267  021D                     	;# 
  3268  021D                     	;# 
  3269  021E                     	;# 
  3270  021F                     	;# 
  3271  028C                     	;# 
  3272  028C                     	;# 
  3273  028D                     	;# 
  3274  028D                     	;# 
  3275  028E                     	;# 
  3276  028F                     	;# 
  3277  0290                     	;# 
  3278  0290                     	;# 
  3279  0291                     	;# 
  3280  0292                     	;# 
  3281  0292                     	;# 
  3282  0293                     	;# 
  3283  0293                     	;# 
  3284  0294                     	;# 
  3285  0295                     	;# 
  3286  0296                     	;# 
  3287  0296                     	;# 
  3288  0297                     	;# 
  3289  0298                     	;# 
  3290  0298                     	;# 
  3291  0299                     	;# 
  3292  0299                     	;# 
  3293  029A                     	;# 
  3294  029B                     	;# 
  3295  029C                     	;# 
  3296  029C                     	;# 
  3297  029D                     	;# 
  3298  030C                     	;# 
  3299  030C                     	;# 
  3300  030D                     	;# 
  3301  030E                     	;# 
  3302  030F                     	;# 
  3303  0310                     	;# 
  3304  0310                     	;# 
  3305  0311                     	;# 
  3306  0312                     	;# 
  3307  0313                     	;# 
  3308  0314                     	;# 
  3309  0314                     	;# 
  3310  0315                     	;# 
  3311  0316                     	;# 
  3312  0317                     	;# 
  3313  0318                     	;# 
  3314  0318                     	;# 
  3315  0319                     	;# 
  3316  031A                     	;# 
  3317  031B                     	;# 
  3318  031C                     	;# 
  3319  031C                     	;# 
  3320  031D                     	;# 
  3321  031E                     	;# 
  3322  031F                     	;# 
  3323  038C                     	;# 
  3324  038D                     	;# 
  3325  038E                     	;# 
  3326  0390                     	;# 
  3327  0391                     	;# 
  3328  0392                     	;# 
  3329  040C                     	;# 
  3330  040D                     	;# 
  3331  040E                     	;# 
  3332  040F                     	;# 
  3333  0410                     	;# 
  3334  0411                     	;# 
  3335  0416                     	;# 
  3336  0416                     	;# 
  3337  0417                     	;# 
  3338  0418                     	;# 
  3339  0418                     	;# 
  3340  0419                     	;# 
  3341  041A                     	;# 
  3342  041A                     	;# 
  3343  041B                     	;# 
  3344  041C                     	;# 
  3345  041C                     	;# 
  3346  041D                     	;# 
  3347  041E                     	;# 
  3348  041F                     	;# 
  3349  048C                     	;# 
  3350  048C                     	;# 
  3351  048D                     	;# 
  3352  048E                     	;# 
  3353  048F                     	;# 
  3354  048F                     	;# 
  3355  0490                     	;# 
  3356  0491                     	;# 
  3357  0492                     	;# 
  3358  0492                     	;# 
  3359  0493                     	;# 
  3360  0494                     	;# 
  3361  0495                     	;# 
  3362  0495                     	;# 
  3363  0496                     	;# 
  3364  0497                     	;# 
  3365  0498                     	;# 
  3366  0499                     	;# 
  3367  049A                     	;# 
  3368  049B                     	;# 
  3369  049C                     	;# 
  3370  049D                     	;# 
  3371  050C                     	;# 
  3372  050C                     	;# 
  3373  050D                     	;# 
  3374  050E                     	;# 
  3375  050F                     	;# 
  3376  050F                     	;# 
  3377  0510                     	;# 
  3378  0511                     	;# 
  3379  0512                     	;# 
  3380  0512                     	;# 
  3381  0513                     	;# 
  3382  0514                     	;# 
  3383  0515                     	;# 
  3384  0515                     	;# 
  3385  0516                     	;# 
  3386  0517                     	;# 
  3387  0518                     	;# 
  3388  0519                     	;# 
  3389  051A                     	;# 
  3390  051B                     	;# 
  3391  051C                     	;# 
  3392  051D                     	;# 
  3393  058C                     	;# 
  3394  058C                     	;# 
  3395  058D                     	;# 
  3396  058E                     	;# 
  3397  058F                     	;# 
  3398  058F                     	;# 
  3399  0590                     	;# 
  3400  0591                     	;# 
  3401  0592                     	;# 
  3402  0593                     	;# 
  3403  060C                     	;# 
  3404  060D                     	;# 
  3405  060E                     	;# 
  3406  060F                     	;# 
  3407  0610                     	;# 
  3408  0611                     	;# 
  3409  0612                     	;# 
  3410  0613                     	;# 
  3411  0614                     	;# 
  3412  0616                     	;# 
  3413  0617                     	;# 
  3414  0618                     	;# 
  3415  0619                     	;# 
  3416  061A                     	;# 
  3417  061B                     	;# 
  3418  061C                     	;# 
  3419  061D                     	;# 
  3420  061E                     	;# 
  3421  068C                     	;# 
  3422  068D                     	;# 
  3423  068E                     	;# 
  3424  068F                     	;# 
  3425  0690                     	;# 
  3426  0691                     	;# 
  3427  0692                     	;# 
  3428  0693                     	;# 
  3429  0694                     	;# 
  3430  070C                     	;# 
  3431  070D                     	;# 
  3432  070E                     	;# 
  3433  070F                     	;# 
  3434  0710                     	;# 
  3435  0711                     	;# 
  3436  0712                     	;# 
  3437  0713                     	;# 
  3438  0714                     	;# 
  3439  0716                     	;# 
  3440  0717                     	;# 
  3441  0718                     	;# 
  3442  0719                     	;# 
  3443  071A                     	;# 
  3444  071B                     	;# 
  3445  071C                     	;# 
  3446  071D                     	;# 
  3447  071E                     	;# 
  3448  0796                     	;# 
  3449  0797                     	;# 
  3450  0798                     	;# 
  3451  0799                     	;# 
  3452  079A                     	;# 
  3453  079B                     	;# 
  3454  080C                     	;# 
  3455  080D                     	;# 
  3456  080E                     	;# 
  3457  080F                     	;# 
  3458  0810                     	;# 
  3459  0811                     	;# 
  3460  0812                     	;# 
  3461  0813                     	;# 
  3462  0814                     	;# 
  3463  081A                     	;# 
  3464  081B                     	;# 
  3465  081C                     	;# 
  3466  081D                     	;# 
  3467  081E                     	;# 
  3468  081F                     	;# 
  3469  088C                     	;# 
  3470  088D                     	;# 
  3471  088E                     	;# 
  3472  088F                     	;# 
  3473  0890                     	;# 
  3474  0891                     	;# 
  3475  0892                     	;# 
  3476  0893                     	;# 
  3477  0895                     	;# 
  3478  0896                     	;# 
  3479  0897                     	;# 
  3480  0898                     	;# 
  3481  0899                     	;# 
  3482  089A                     	;# 
  3483  089B                     	;# 
  3484  090C                     	;# 
  3485  090E                     	;# 
  3486  090F                     	;# 
  3487  091F                     	;# 
  3488  091F                     	;# 
  3489  098F                     	;# 
  3490  098F                     	;# 
  3491  0990                     	;# 
  3492  0991                     	;# 
  3493  0992                     	;# 
  3494  0993                     	;# 
  3495  0994                     	;# 
  3496  0995                     	;# 
  3497  0996                     	;# 
  3498  0997                     	;# 
  3499  0E0F                     	;# 
  3500  0E10                     	;# 
  3501  0E11                     	;# 
  3502  0E12                     	;# 
  3503  0E13                     	;# 
  3504  0E14                     	;# 
  3505  0E15                     	;# 
  3506  0E16                     	;# 
  3507  0E17                     	;# 
  3508  0E18                     	;# 
  3509  0E19                     	;# 
  3510  0E1A                     	;# 
  3511  0E1B                     	;# 
  3512  0E1C                     	;# 
  3513  0E1D                     	;# 
  3514  0E1E                     	;# 
  3515  0E1F                     	;# 
  3516  0E20                     	;# 
  3517  0E21                     	;# 
  3518  0E22                     	;# 
  3519  0E23                     	;# 
  3520  0E24                     	;# 
  3521  0E25                     	;# 
  3522  0E26                     	;# 
  3523  0E27                     	;# 
  3524  0E28                     	;# 
  3525  0E29                     	;# 
  3526  0E2A                     	;# 
  3527  0E2B                     	;# 
  3528  0E2C                     	;# 
  3529  0E2D                     	;# 
  3530  0E2E                     	;# 
  3531  0E2F                     	;# 
  3532  0E30                     	;# 
  3533  0E31                     	;# 
  3534  0E32                     	;# 
  3535  0E33                     	;# 
  3536  0E34                     	;# 
  3537  0E35                     	;# 
  3538  0E36                     	;# 
  3539  0E37                     	;# 
  3540  0E8F                     	;# 
  3541  0E90                     	;# 
  3542  0E91                     	;# 
  3543  0E92                     	;# 
  3544  0E93                     	;# 
  3545  0E94                     	;# 
  3546  0E95                     	;# 
  3547  0E96                     	;# 
  3548  0E97                     	;# 
  3549  0E9C                     	;# 
  3550  0E9D                     	;# 
  3551  0E9E                     	;# 
  3552  0EA1                     	;# 
  3553  0EA2                     	;# 
  3554  0EA3                     	;# 
  3555  0EA4                     	;# 
  3556  0EA5                     	;# 
  3557  0EA9                     	;# 
  3558  0EAA                     	;# 
  3559  0EAB                     	;# 
  3560  0EAC                     	;# 
  3561  0EB1                     	;# 
  3562  0EB2                     	;# 
  3563  0EB3                     	;# 
  3564  0EB8                     	;# 
  3565  0EB9                     	;# 
  3566  0EBA                     	;# 
  3567  0EBB                     	;# 
  3568  0EBC                     	;# 
  3569  0EBD                     	;# 
  3570  0EBE                     	;# 
  3571  0EC3                     	;# 
  3572  0EC5                     	;# 
  3573  0EC6                     	;# 
  3574  0EC7                     	;# 
  3575  0EC8                     	;# 
  3576  0EC9                     	;# 
  3577  0ECA                     	;# 
  3578  0ECB                     	;# 
  3579  0ECC                     	;# 
  3580  0F10                     	;# 
  3581  0F11                     	;# 
  3582  0F12                     	;# 
  3583  0F13                     	;# 
  3584  0F14                     	;# 
  3585  0F15                     	;# 
  3586  0F16                     	;# 
  3587  0F17                     	;# 
  3588  0F18                     	;# 
  3589  0F19                     	;# 
  3590  0F1A                     	;# 
  3591  0F1B                     	;# 
  3592  0F1C                     	;# 
  3593  0F1D                     	;# 
  3594  0F1E                     	;# 
  3595  0F1F                     	;# 
  3596  0F20                     	;# 
  3597  0F21                     	;# 
  3598  0F22                     	;# 
  3599  0F23                     	;# 
  3600  0F24                     	;# 
  3601  0F25                     	;# 
  3602  0F26                     	;# 
  3603  0F27                     	;# 
  3604  0F38                     	;# 
  3605  0F39                     	;# 
  3606  0F3A                     	;# 
  3607  0F3B                     	;# 
  3608  0F3C                     	;# 
  3609  0F3D                     	;# 
  3610  0F3E                     	;# 
  3611  0F3F                     	;# 
  3612  0F40                     	;# 
  3613  0F41                     	;# 
  3614  0F43                     	;# 
  3615  0F44                     	;# 
  3616  0F45                     	;# 
  3617  0F46                     	;# 
  3618  0F47                     	;# 
  3619  0F48                     	;# 
  3620  0F49                     	;# 
  3621  0F4A                     	;# 
  3622  0F4B                     	;# 
  3623  0F4C                     	;# 
  3624  0F4E                     	;# 
  3625  0F4F                     	;# 
  3626  0F50                     	;# 
  3627  0F51                     	;# 
  3628  0F52                     	;# 
  3629  0F53                     	;# 
  3630  0F54                     	;# 
  3631  0F55                     	;# 
  3632  0F56                     	;# 
  3633  0F57                     	;# 
  3634  0F65                     	;# 
  3635  0F68                     	;# 
  3636  0F69                     	;# 
  3637  0F6A                     	;# 
  3638  0F6B                     	;# 
  3639  0FE4                     	;# 
  3640  0FE5                     	;# 
  3641  0FE6                     	;# 
  3642  0FE7                     	;# 
  3643  0FE8                     	;# 
  3644  0FE9                     	;# 
  3645  0FEA                     	;# 
  3646  0FEB                     	;# 
  3647  0FED                     	;# 
  3648  0FEE                     	;# 
  3649  0FEF                     	;# 
  3650  0000                     	;# 
  3651  0001                     	;# 
  3652  0002                     	;# 
  3653  0003                     	;# 
  3654  0004                     	;# 
  3655  0005                     	;# 
  3656  0006                     	;# 
  3657  0007                     	;# 
  3658  0008                     	;# 
  3659  0009                     	;# 
  3660  000A                     	;# 
  3661  000B                     	;# 
  3662  000C                     	;# 
  3663  000D                     	;# 
  3664  000E                     	;# 
  3665  0010                     	;# 
  3666  0011                     	;# 
  3667  0012                     	;# 
  3668  0013                     	;# 
  3669  0016                     	;# 
  3670  0017                     	;# 
  3671  0018                     	;# 
  3672  001C                     	;# 
  3673  001C                     	;# 
  3674  001D                     	;# 
  3675  001D                     	;# 
  3676  001E                     	;# 
  3677  001F                     	;# 
  3678  008C                     	;# 
  3679  008C                     	;# 
  3680  008D                     	;# 
  3681  008E                     	;# 
  3682  008E                     	;# 
  3683  008F                     	;# 
  3684  0090                     	;# 
  3685  0090                     	;# 
  3686  0091                     	;# 
  3687  0093                     	;# 
  3688  0094                     	;# 
  3689  0095                     	;# 
  3690  0096                     	;# 
  3691  0097                     	;# 
  3692  0098                     	;# 
  3693  0099                     	;# 
  3694  009A                     	;# 
  3695  009B                     	;# 
  3696  009C                     	;# 
  3697  009D                     	;# 
  3698  009E                     	;# 
  3699  010C                     	;# 
  3700  010D                     	;# 
  3701  010E                     	;# 
  3702  010E                     	;# 
  3703  010F                     	;# 
  3704  0110                     	;# 
  3705  0110                     	;# 
  3706  0111                     	;# 
  3707  0112                     	;# 
  3708  0112                     	;# 
  3709  0113                     	;# 
  3710  0114                     	;# 
  3711  0114                     	;# 
  3712  0115                     	;# 
  3713  0116                     	;# 
  3714  0116                     	;# 
  3715  0117                     	;# 
  3716  0119                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  011A                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011B                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011C                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011D                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011E                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011F                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  018C                     	;# 
  3742  018D                     	;# 
  3743  018E                     	;# 
  3744  018F                     	;# 
  3745  0190                     	;# 
  3746  0191                     	;# 
  3747  0192                     	;# 
  3748  0196                     	;# 
  3749  0197                     	;# 
  3750  0198                     	;# 
  3751  0199                     	;# 
  3752  019A                     	;# 
  3753  019B                     	;# 
  3754  019C                     	;# 
  3755  020C                     	;# 
  3756  020D                     	;# 
  3757  020E                     	;# 
  3758  020F                     	;# 
  3759  020F                     	;# 
  3760  0210                     	;# 
  3761  0210                     	;# 
  3762  0211                     	;# 
  3763  0211                     	;# 
  3764  0212                     	;# 
  3765  0213                     	;# 
  3766  0214                     	;# 
  3767  0215                     	;# 
  3768  0215                     	;# 
  3769  0216                     	;# 
  3770  0216                     	;# 
  3771  0217                     	;# 
  3772  0217                     	;# 
  3773  0218                     	;# 
  3774  0219                     	;# 
  3775  021A                     	;# 
  3776  021B                     	;# 
  3777  021B                     	;# 
  3778  021C                     	;# 
  3779  021C                     	;# 
  3780  021D                     	;# 
  3781  021D                     	;# 
  3782  021E                     	;# 
  3783  021F                     	;# 
  3784  028C                     	;# 
  3785  028C                     	;# 
  3786  028D                     	;# 
  3787  028D                     	;# 
  3788  028E                     	;# 
  3789  028F                     	;# 
  3790  0290                     	;# 
  3791  0290                     	;# 
  3792  0291                     	;# 
  3793  0292                     	;# 
  3794  0292                     	;# 
  3795  0293                     	;# 
  3796  0293                     	;# 
  3797  0294                     	;# 
  3798  0295                     	;# 
  3799  0296                     	;# 
  3800  0296                     	;# 
  3801  0297                     	;# 
  3802  0298                     	;# 
  3803  0298                     	;# 
  3804  0299                     	;# 
  3805  0299                     	;# 
  3806  029A                     	;# 
  3807  029B                     	;# 
  3808  029C                     	;# 
  3809  029C                     	;# 
  3810  029D                     	;# 
  3811  030C                     	;# 
  3812  030C                     	;# 
  3813  030D                     	;# 
  3814  030E                     	;# 
  3815  030F                     	;# 
  3816  0310                     	;# 
  3817  0310                     	;# 
  3818  0311                     	;# 
  3819  0312                     	;# 
  3820  0313                     	;# 
  3821  0314                     	;# 
  3822  0314                     	;# 
  3823  0315                     	;# 
  3824  0316                     	;# 
  3825  0317                     	;# 
  3826  0318                     	;# 
  3827  0318                     	;# 
  3828  0319                     	;# 
  3829  031A                     	;# 
  3830  031B                     	;# 
  3831  031C                     	;# 
  3832  031C                     	;# 
  3833  031D                     	;# 
  3834  031E                     	;# 
  3835  031F                     	;# 
  3836  038C                     	;# 
  3837  038D                     	;# 
  3838  038E                     	;# 
  3839  0390                     	;# 
  3840  0391                     	;# 
  3841  0392                     	;# 
  3842  040C                     	;# 
  3843  040D                     	;# 
  3844  040E                     	;# 
  3845  040F                     	;# 
  3846  0410                     	;# 
  3847  0411                     	;# 
  3848  0416                     	;# 
  3849  0416                     	;# 
  3850  0417                     	;# 
  3851  0418                     	;# 
  3852  0418                     	;# 
  3853  0419                     	;# 
  3854  041A                     	;# 
  3855  041A                     	;# 
  3856  041B                     	;# 
  3857  041C                     	;# 
  3858  041C                     	;# 
  3859  041D                     	;# 
  3860  041E                     	;# 
  3861  041F                     	;# 
  3862  048C                     	;# 
  3863  048C                     	;# 
  3864  048D                     	;# 
  3865  048E                     	;# 
  3866  048F                     	;# 
  3867  048F                     	;# 
  3868  0490                     	;# 
  3869  0491                     	;# 
  3870  0492                     	;# 
  3871  0492                     	;# 
  3872  0493                     	;# 
  3873  0494                     	;# 
  3874  0495                     	;# 
  3875  0495                     	;# 
  3876  0496                     	;# 
  3877  0497                     	;# 
  3878  0498                     	;# 
  3879  0499                     	;# 
  3880  049A                     	;# 
  3881  049B                     	;# 
  3882  049C                     	;# 
  3883  049D                     	;# 
  3884  050C                     	;# 
  3885  050C                     	;# 
  3886  050D                     	;# 
  3887  050E                     	;# 
  3888  050F                     	;# 
  3889  050F                     	;# 
  3890  0510                     	;# 
  3891  0511                     	;# 
  3892  0512                     	;# 
  3893  0512                     	;# 
  3894  0513                     	;# 
  3895  0514                     	;# 
  3896  0515                     	;# 
  3897  0515                     	;# 
  3898  0516                     	;# 
  3899  0517                     	;# 
  3900  0518                     	;# 
  3901  0519                     	;# 
  3902  051A                     	;# 
  3903  051B                     	;# 
  3904  051C                     	;# 
  3905  051D                     	;# 
  3906  058C                     	;# 
  3907  058C                     	;# 
  3908  058D                     	;# 
  3909  058E                     	;# 
  3910  058F                     	;# 
  3911  058F                     	;# 
  3912  0590                     	;# 
  3913  0591                     	;# 
  3914  0592                     	;# 
  3915  0593                     	;# 
  3916  060C                     	;# 
  3917  060D                     	;# 
  3918  060E                     	;# 
  3919  060F                     	;# 
  3920  0610                     	;# 
  3921  0611                     	;# 
  3922  0612                     	;# 
  3923  0613                     	;# 
  3924  0614                     	;# 
  3925  0616                     	;# 
  3926  0617                     	;# 
  3927  0618                     	;# 
  3928  0619                     	;# 
  3929  061A                     	;# 
  3930  061B                     	;# 
  3931  061C                     	;# 
  3932  061D                     	;# 
  3933  061E                     	;# 
  3934  068C                     	;# 
  3935  068D                     	;# 
  3936  068E                     	;# 
  3937  068F                     	;# 
  3938  0690                     	;# 
  3939  0691                     	;# 
  3940  0692                     	;# 
  3941  0693                     	;# 
  3942  0694                     	;# 
  3943  070C                     	;# 
  3944  070D                     	;# 
  3945  070E                     	;# 
  3946  070F                     	;# 
  3947  0710                     	;# 
  3948  0711                     	;# 
  3949  0712                     	;# 
  3950  0713                     	;# 
  3951  0714                     	;# 
  3952  0716                     	;# 
  3953  0717                     	;# 
  3954  0718                     	;# 
  3955  0719                     	;# 
  3956  071A                     	;# 
  3957  071B                     	;# 
  3958  071C                     	;# 
  3959  071D                     	;# 
  3960  071E                     	;# 
  3961  0796                     	;# 
  3962  0797                     	;# 
  3963  0798                     	;# 
  3964  0799                     	;# 
  3965  079A                     	;# 
  3966  079B                     	;# 
  3967  080C                     	;# 
  3968  080D                     	;# 
  3969  080E                     	;# 
  3970  080F                     	;# 
  3971  0810                     	;# 
  3972  0811                     	;# 
  3973  0812                     	;# 
  3974  0813                     	;# 
  3975  0814                     	;# 
  3976  081A                     	;# 
  3977  081B                     	;# 
  3978  081C                     	;# 
  3979  081D                     	;# 
  3980  081E                     	;# 
  3981  081F                     	;# 
  3982  088C                     	;# 
  3983  088D                     	;# 
  3984  088E                     	;# 
  3985  088F                     	;# 
  3986  0890                     	;# 
  3987  0891                     	;# 
  3988  0892                     	;# 
  3989  0893                     	;# 
  3990  0895                     	;# 
  3991  0896                     	;# 
  3992  0897                     	;# 
  3993  0898                     	;# 
  3994  0899                     	;# 
  3995  089A                     	;# 
  3996  089B                     	;# 
  3997  090C                     	;# 
  3998  090E                     	;# 
  3999  090F                     	;# 
  4000  091F                     	;# 
  4001  091F                     	;# 
  4002  098F                     	;# 
  4003  098F                     	;# 
  4004  0990                     	;# 
  4005  0991                     	;# 
  4006  0992                     	;# 
  4007  0993                     	;# 
  4008  0994                     	;# 
  4009  0995                     	;# 
  4010  0996                     	;# 
  4011  0997                     	;# 
  4012  0E0F                     	;# 
  4013  0E10                     	;# 
  4014  0E11                     	;# 
  4015  0E12                     	;# 
  4016  0E13                     	;# 
  4017  0E14                     	;# 
  4018  0E15                     	;# 
  4019  0E16                     	;# 
  4020  0E17                     	;# 
  4021  0E18                     	;# 
  4022  0E19                     	;# 
  4023  0E1A                     	;# 
  4024  0E1B                     	;# 
  4025  0E1C                     	;# 
  4026  0E1D                     	;# 
  4027  0E1E                     	;# 
  4028  0E1F                     	;# 
  4029  0E20                     	;# 
  4030  0E21                     	;# 
  4031  0E22                     	;# 
  4032  0E23                     	;# 
  4033  0E24                     	;# 
  4034  0E25                     	;# 
  4035  0E26                     	;# 
  4036  0E27                     	;# 
  4037  0E28                     	;# 
  4038  0E29                     	;# 
  4039  0E2A                     	;# 
  4040  0E2B                     	;# 
  4041  0E2C                     	;# 
  4042  0E2D                     	;# 
  4043  0E2E                     	;# 
  4044  0E2F                     	;# 
  4045  0E30                     	;# 
  4046  0E31                     	;# 
  4047  0E32                     	;# 
  4048  0E33                     	;# 
  4049  0E34                     	;# 
  4050  0E35                     	;# 
  4051  0E36                     	;# 
  4052  0E37                     	;# 
  4053  0E8F                     	;# 
  4054  0E90                     	;# 
  4055  0E91                     	;# 
  4056  0E92                     	;# 
  4057  0E93                     	;# 
  4058  0E94                     	;# 
  4059  0E95                     	;# 
  4060  0E96                     	;# 
  4061  0E97                     	;# 
  4062  0E9C                     	;# 
  4063  0E9D                     	;# 
  4064  0E9E                     	;# 
  4065  0EA1                     	;# 
  4066  0EA2                     	;# 
  4067  0EA3                     	;# 
  4068  0EA4                     	;# 
  4069  0EA5                     	;# 
  4070  0EA9                     	;# 
  4071  0EAA                     	;# 
  4072  0EAB                     	;# 
  4073  0EAC                     	;# 
  4074  0EB1                     	;# 
  4075  0EB2                     	;# 
  4076  0EB3                     	;# 
  4077  0EB8                     	;# 
  4078  0EB9                     	;# 
  4079  0EBA                     	;# 
  4080  0EBB                     	;# 
  4081  0EBC                     	;# 
  4082  0EBD                     	;# 
  4083  0EBE                     	;# 
  4084  0EC3                     	;# 
  4085  0EC5                     	;# 
  4086  0EC6                     	;# 
  4087  0EC7                     	;# 
  4088  0EC8                     	;# 
  4089  0EC9                     	;# 
  4090  0ECA                     	;# 
  4091  0ECB                     	;# 
  4092  0ECC                     	;# 
  4093  0F10                     	;# 
  4094  0F11                     	;# 
  4095  0F12                     	;# 
  4096  0F13                     	;# 
  4097  0F14                     	;# 
  4098  0F15                     	;# 
  4099  0F16                     	;# 
  4100  0F17                     	;# 
  4101  0F18                     	;# 
  4102  0F19                     	;# 
  4103  0F1A                     	;# 
  4104  0F1B                     	;# 
  4105  0F1C                     	;# 
  4106  0F1D                     	;# 
  4107  0F1E                     	;# 
  4108  0F1F                     	;# 
  4109  0F20                     	;# 
  4110  0F21                     	;# 
  4111  0F22                     	;# 
  4112  0F23                     	;# 
  4113  0F24                     	;# 
  4114  0F25                     	;# 
  4115  0F26                     	;# 
  4116  0F27                     	;# 
  4117  0F38                     	;# 
  4118  0F39                     	;# 
  4119  0F3A                     	;# 
  4120  0F3B                     	;# 
  4121  0F3C                     	;# 
  4122  0F3D                     	;# 
  4123  0F3E                     	;# 
  4124  0F3F                     	;# 
  4125  0F40                     	;# 
  4126  0F41                     	;# 
  4127  0F43                     	;# 
  4128  0F44                     	;# 
  4129  0F45                     	;# 
  4130  0F46                     	;# 
  4131  0F47                     	;# 
  4132  0F48                     	;# 
  4133  0F49                     	;# 
  4134  0F4A                     	;# 
  4135  0F4B                     	;# 
  4136  0F4C                     	;# 
  4137  0F4E                     	;# 
  4138  0F4F                     	;# 
  4139  0F50                     	;# 
  4140  0F51                     	;# 
  4141  0F52                     	;# 
  4142  0F53                     	;# 
  4143  0F54                     	;# 
  4144  0F55                     	;# 
  4145  0F56                     	;# 
  4146  0F57                     	;# 
  4147  0F65                     	;# 
  4148  0F68                     	;# 
  4149  0F69                     	;# 
  4150  0F6A                     	;# 
  4151  0F6B                     	;# 
  4152  0FE4                     	;# 
  4153  0FE5                     	;# 
  4154  0FE6                     	;# 
  4155  0FE7                     	;# 
  4156  0FE8                     	;# 
  4157  0FE9                     	;# 
  4158  0FEA                     	;# 
  4159  0FEB                     	;# 
  4160  0FED                     	;# 
  4161  0FEE                     	;# 
  4162  0FEF                     	;# 
  4163  0000                     	;# 
  4164  0001                     	;# 
  4165  0002                     	;# 
  4166  0003                     	;# 
  4167  0004                     	;# 
  4168  0005                     	;# 
  4169  0006                     	;# 
  4170  0007                     	;# 
  4171  0008                     	;# 
  4172  0009                     	;# 
  4173  000A                     	;# 
  4174  000B                     	;# 
  4175  000C                     	;# 
  4176  000D                     	;# 
  4177  000E                     	;# 
  4178  0010                     	;# 
  4179  0011                     	;# 
  4180  0012                     	;# 
  4181  0013                     	;# 
  4182  0016                     	;# 
  4183  0017                     	;# 
  4184  0018                     	;# 
  4185  001C                     	;# 
  4186  001C                     	;# 
  4187  001D                     	;# 
  4188  001D                     	;# 
  4189  001E                     	;# 
  4190  001F                     	;# 
  4191  008C                     	;# 
  4192  008C                     	;# 
  4193  008D                     	;# 
  4194  008E                     	;# 
  4195  008E                     	;# 
  4196  008F                     	;# 
  4197  0090                     	;# 
  4198  0090                     	;# 
  4199  0091                     	;# 
  4200  0093                     	;# 
  4201  0094                     	;# 
  4202  0095                     	;# 
  4203  0096                     	;# 
  4204  0097                     	;# 
  4205  0098                     	;# 
  4206  0099                     	;# 
  4207  009A                     	;# 
  4208  009B                     	;# 
  4209  009C                     	;# 
  4210  009D                     	;# 
  4211  009E                     	;# 
  4212  010C                     	;# 
  4213  010D                     	;# 
  4214  010E                     	;# 
  4215  010E                     	;# 
  4216  010F                     	;# 
  4217  0110                     	;# 
  4218  0110                     	;# 
  4219  0111                     	;# 
  4220  0112                     	;# 
  4221  0112                     	;# 
  4222  0113                     	;# 
  4223  0114                     	;# 
  4224  0114                     	;# 
  4225  0115                     	;# 
  4226  0116                     	;# 
  4227  0116                     	;# 
  4228  0117                     	;# 
  4229  0119                     	;# 
  4230  0119                     	;# 
  4231  0119                     	;# 
  4232  011A                     	;# 
  4233  011A                     	;# 
  4234  011A                     	;# 
  4235  011B                     	;# 
  4236  011B                     	;# 
  4237  011B                     	;# 
  4238  011B                     	;# 
  4239  011B                     	;# 
  4240  011C                     	;# 
  4241  011C                     	;# 
  4242  011C                     	;# 
  4243  011D                     	;# 
  4244  011D                     	;# 
  4245  011D                     	;# 
  4246  011E                     	;# 
  4247  011E                     	;# 
  4248  011E                     	;# 
  4249  011F                     	;# 
  4250  011F                     	;# 
  4251  011F                     	;# 
  4252  011F                     	;# 
  4253  011F                     	;# 
  4254  018C                     	;# 
  4255  018D                     	;# 
  4256  018E                     	;# 
  4257  018F                     	;# 
  4258  0190                     	;# 
  4259  0191                     	;# 
  4260  0192                     	;# 
  4261  0196                     	;# 
  4262  0197                     	;# 
  4263  0198                     	;# 
  4264  0199                     	;# 
  4265  019A                     	;# 
  4266  019B                     	;# 
  4267  019C                     	;# 
  4268  020C                     	;# 
  4269  020D                     	;# 
  4270  020E                     	;# 
  4271  020F                     	;# 
  4272  020F                     	;# 
  4273  0210                     	;# 
  4274  0210                     	;# 
  4275  0211                     	;# 
  4276  0211                     	;# 
  4277  0212                     	;# 
  4278  0213                     	;# 
  4279  0214                     	;# 
  4280  0215                     	;# 
  4281  0215                     	;# 
  4282  0216                     	;# 
  4283  0216                     	;# 
  4284  0217                     	;# 
  4285  0217                     	;# 
  4286  0218                     	;# 
  4287  0219                     	;# 
  4288  021A                     	;# 
  4289  021B                     	;# 
  4290  021B                     	;# 
  4291  021C                     	;# 
  4292  021C                     	;# 
  4293  021D                     	;# 
  4294  021D                     	;# 
  4295  021E                     	;# 
  4296  021F                     	;# 
  4297  028C                     	;# 
  4298  028C                     	;# 
  4299  028D                     	;# 
  4300  028D                     	;# 
  4301  028E                     	;# 
  4302  028F                     	;# 
  4303  0290                     	;# 
  4304  0290                     	;# 
  4305  0291                     	;# 
  4306  0292                     	;# 
  4307  0292                     	;# 
  4308  0293                     	;# 
  4309  0293                     	;# 
  4310  0294                     	;# 
  4311  0295                     	;# 
  4312  0296                     	;# 
  4313  0296                     	;# 
  4314  0297                     	;# 
  4315  0298                     	;# 
  4316  0298                     	;# 
  4317  0299                     	;# 
  4318  0299                     	;# 
  4319  029A                     	;# 
  4320  029B                     	;# 
  4321  029C                     	;# 
  4322  029C                     	;# 
  4323  029D                     	;# 
  4324  030C                     	;# 
  4325  030C                     	;# 
  4326  030D                     	;# 
  4327  030E                     	;# 
  4328  030F                     	;# 
  4329  0310                     	;# 
  4330  0310                     	;# 
  4331  0311                     	;# 
  4332  0312                     	;# 
  4333  0313                     	;# 
  4334  0314                     	;# 
  4335  0314                     	;# 
  4336  0315                     	;# 
  4337  0316                     	;# 
  4338  0317                     	;# 
  4339  0318                     	;# 
  4340  0318                     	;# 
  4341  0319                     	;# 
  4342  031A                     	;# 
  4343  031B                     	;# 
  4344  031C                     	;# 
  4345  031C                     	;# 
  4346  031D                     	;# 
  4347  031E                     	;# 
  4348  031F                     	;# 
  4349  038C                     	;# 
  4350  038D                     	;# 
  4351  038E                     	;# 
  4352  0390                     	;# 
  4353  0391                     	;# 
  4354  0392                     	;# 
  4355  040C                     	;# 
  4356  040D                     	;# 
  4357  040E                     	;# 
  4358  040F                     	;# 
  4359  0410                     	;# 
  4360  0411                     	;# 
  4361  0416                     	;# 
  4362  0416                     	;# 
  4363  0417                     	;# 
  4364  0418                     	;# 
  4365  0418                     	;# 
  4366  0419                     	;# 
  4367  041A                     	;# 
  4368  041A                     	;# 
  4369  041B                     	;# 
  4370  041C                     	;# 
  4371  041C                     	;# 
  4372  041D                     	;# 
  4373  041E                     	;# 
  4374  041F                     	;# 
  4375  048C                     	;# 
  4376  048C                     	;# 
  4377  048D                     	;# 
  4378  048E                     	;# 
  4379  048F                     	;# 
  4380  048F                     	;# 
  4381  0490                     	;# 
  4382  0491                     	;# 
  4383  0492                     	;# 
  4384  0492                     	;# 
  4385  0493                     	;# 
  4386  0494                     	;# 
  4387  0495                     	;# 
  4388  0495                     	;# 
  4389  0496                     	;# 
  4390  0497                     	;# 
  4391  0498                     	;# 
  4392  0499                     	;# 
  4393  049A                     	;# 
  4394  049B                     	;# 
  4395  049C                     	;# 
  4396  049D                     	;# 
  4397  050C                     	;# 
  4398  050C                     	;# 
  4399  050D                     	;# 
  4400  050E                     	;# 
  4401  050F                     	;# 
  4402  050F                     	;# 
  4403  0510                     	;# 
  4404  0511                     	;# 
  4405  0512                     	;# 
  4406  0512                     	;# 
  4407  0513                     	;# 
  4408  0514                     	;# 
  4409  0515                     	;# 
  4410  0515                     	;# 
  4411  0516                     	;# 
  4412  0517                     	;# 
  4413  0518                     	;# 
  4414  0519                     	;# 
  4415  051A                     	;# 
  4416  051B                     	;# 
  4417  051C                     	;# 
  4418  051D                     	;# 
  4419  058C                     	;# 
  4420  058C                     	;# 
  4421  058D                     	;# 
  4422  058E                     	;# 
  4423  058F                     	;# 
  4424  058F                     	;# 
  4425  0590                     	;# 
  4426  0591                     	;# 
  4427  0592                     	;# 
  4428  0593                     	;# 
  4429  060C                     	;# 
  4430  060D                     	;# 
  4431  060E                     	;# 
  4432  060F                     	;# 
  4433  0610                     	;# 
  4434  0611                     	;# 
  4435  0612                     	;# 
  4436  0613                     	;# 
  4437  0614                     	;# 
  4438  0616                     	;# 
  4439  0617                     	;# 
  4440  0618                     	;# 
  4441  0619                     	;# 
  4442  061A                     	;# 
  4443  061B                     	;# 
  4444  061C                     	;# 
  4445  061D                     	;# 
  4446  061E                     	;# 
  4447  068C                     	;# 
  4448  068D                     	;# 
  4449  068E                     	;# 
  4450  068F                     	;# 
  4451  0690                     	;# 
  4452  0691                     	;# 
  4453  0692                     	;# 
  4454  0693                     	;# 
  4455  0694                     	;# 
  4456  070C                     	;# 
  4457  070D                     	;# 
  4458  070E                     	;# 
  4459  070F                     	;# 
  4460  0710                     	;# 
  4461  0711                     	;# 
  4462  0712                     	;# 
  4463  0713                     	;# 
  4464  0714                     	;# 
  4465  0716                     	;# 
  4466  0717                     	;# 
  4467  0718                     	;# 
  4468  0719                     	;# 
  4469  071A                     	;# 
  4470  071B                     	;# 
  4471  071C                     	;# 
  4472  071D                     	;# 
  4473  071E                     	;# 
  4474  0796                     	;# 
  4475  0797                     	;# 
  4476  0798                     	;# 
  4477  0799                     	;# 
  4478  079A                     	;# 
  4479  079B                     	;# 
  4480  080C                     	;# 
  4481  080D                     	;# 
  4482  080E                     	;# 
  4483  080F                     	;# 
  4484  0810                     	;# 
  4485  0811                     	;# 
  4486  0812                     	;# 
  4487  0813                     	;# 
  4488  0814                     	;# 
  4489  081A                     	;# 
  4490  081B                     	;# 
  4491  081C                     	;# 
  4492  081D                     	;# 
  4493  081E                     	;# 
  4494  081F                     	;# 
  4495  088C                     	;# 
  4496  088D                     	;# 
  4497  088E                     	;# 
  4498  088F                     	;# 
  4499  0890                     	;# 
  4500  0891                     	;# 
  4501  0892                     	;# 
  4502  0893                     	;# 
  4503  0895                     	;# 
  4504  0896                     	;# 
  4505  0897                     	;# 
  4506  0898                     	;# 
  4507  0899                     	;# 
  4508  089A                     	;# 
  4509  089B                     	;# 
  4510  090C                     	;# 
  4511  090E                     	;# 
  4512  090F                     	;# 
  4513  091F                     	;# 
  4514  091F                     	;# 
  4515  098F                     	;# 
  4516  098F                     	;# 
  4517  0990                     	;# 
  4518  0991                     	;# 
  4519  0992                     	;# 
  4520  0993                     	;# 
  4521  0994                     	;# 
  4522  0995                     	;# 
  4523  0996                     	;# 
  4524  0997                     	;# 
  4525  0E0F                     	;# 
  4526  0E10                     	;# 
  4527  0E11                     	;# 
  4528  0E12                     	;# 
  4529  0E13                     	;# 
  4530  0E14                     	;# 
  4531  0E15                     	;# 
  4532  0E16                     	;# 
  4533  0E17                     	;# 
  4534  0E18                     	;# 
  4535  0E19                     	;# 
  4536  0E1A                     	;# 
  4537  0E1B                     	;# 
  4538  0E1C                     	;# 
  4539  0E1D                     	;# 
  4540  0E1E                     	;# 
  4541  0E1F                     	;# 
  4542  0E20                     	;# 
  4543  0E21                     	;# 
  4544  0E22                     	;# 
  4545  0E23                     	;# 
  4546  0E24                     	;# 
  4547  0E25                     	;# 
  4548  0E26                     	;# 
  4549  0E27                     	;# 
  4550  0E28                     	;# 
  4551  0E29                     	;# 
  4552  0E2A                     	;# 
  4553  0E2B                     	;# 
  4554  0E2C                     	;# 
  4555  0E2D                     	;# 
  4556  0E2E                     	;# 
  4557  0E2F                     	;# 
  4558  0E30                     	;# 
  4559  0E31                     	;# 
  4560  0E32                     	;# 
  4561  0E33                     	;# 
  4562  0E34                     	;# 
  4563  0E35                     	;# 
  4564  0E36                     	;# 
  4565  0E37                     	;# 
  4566  0E8F                     	;# 
  4567  0E90                     	;# 
  4568  0E91                     	;# 
  4569  0E92                     	;# 
  4570  0E93                     	;# 
  4571  0E94                     	;# 
  4572  0E95                     	;# 
  4573  0E96                     	;# 
  4574  0E97                     	;# 
  4575  0E9C                     	;# 
  4576  0E9D                     	;# 
  4577  0E9E                     	;# 
  4578  0EA1                     	;# 
  4579  0EA2                     	;# 
  4580  0EA3                     	;# 
  4581  0EA4                     	;# 
  4582  0EA5                     	;# 
  4583  0EA9                     	;# 
  4584  0EAA                     	;# 
  4585  0EAB                     	;# 
  4586  0EAC                     	;# 
  4587  0EB1                     	;# 
  4588  0EB2                     	;# 
  4589  0EB3                     	;# 
  4590  0EB8                     	;# 
  4591  0EB9                     	;# 
  4592  0EBA                     	;# 
  4593  0EBB                     	;# 
  4594  0EBC                     	;# 
  4595  0EBD                     	;# 
  4596  0EBE                     	;# 
  4597  0EC3                     	;# 
  4598  0EC5                     	;# 
  4599  0EC6                     	;# 
  4600  0EC7                     	;# 
  4601  0EC8                     	;# 
  4602  0EC9                     	;# 
  4603  0ECA                     	;# 
  4604  0ECB                     	;# 
  4605  0ECC                     	;# 
  4606  0F10                     	;# 
  4607  0F11                     	;# 
  4608  0F12                     	;# 
  4609  0F13                     	;# 
  4610  0F14                     	;# 
  4611  0F15                     	;# 
  4612  0F16                     	;# 
  4613  0F17                     	;# 
  4614  0F18                     	;# 
  4615  0F19                     	;# 
  4616  0F1A                     	;# 
  4617  0F1B                     	;# 
  4618  0F1C                     	;# 
  4619  0F1D                     	;# 
  4620  0F1E                     	;# 
  4621  0F1F                     	;# 
  4622  0F20                     	;# 
  4623  0F21                     	;# 
  4624  0F22                     	;# 
  4625  0F23                     	;# 
  4626  0F24                     	;# 
  4627  0F25                     	;# 
  4628  0F26                     	;# 
  4629  0F27                     	;# 
  4630  0F38                     	;# 
  4631  0F39                     	;# 
  4632  0F3A                     	;# 
  4633  0F3B                     	;# 
  4634  0F3C                     	;# 
  4635  0F3D                     	;# 
  4636  0F3E                     	;# 
  4637  0F3F                     	;# 
  4638  0F40                     	;# 
  4639  0F41                     	;# 
  4640  0F43                     	;# 
  4641  0F44                     	;# 
  4642  0F45                     	;# 
  4643  0F46                     	;# 
  4644  0F47                     	;# 
  4645  0F48                     	;# 
  4646  0F49                     	;# 
  4647  0F4A                     	;# 
  4648  0F4B                     	;# 
  4649  0F4C                     	;# 
  4650  0F4E                     	;# 
  4651  0F4F                     	;# 
  4652  0F50                     	;# 
  4653  0F51                     	;# 
  4654  0F52                     	;# 
  4655  0F53                     	;# 
  4656  0F54                     	;# 
  4657  0F55                     	;# 
  4658  0F56                     	;# 
  4659  0F57                     	;# 
  4660  0F65                     	;# 
  4661  0F68                     	;# 
  4662  0F69                     	;# 
  4663  0F6A                     	;# 
  4664  0F6B                     	;# 
  4665  0FE4                     	;# 
  4666  0FE5                     	;# 
  4667  0FE6                     	;# 
  4668  0FE7                     	;# 
  4669  0FE8                     	;# 
  4670  0FE9                     	;# 
  4671  0FEA                     	;# 
  4672  0FEB                     	;# 
  4673  0FED                     	;# 
  4674  0FEE                     	;# 
  4675  0FEF                     	;# 
  4676  0000                     	;# 
  4677  0001                     	;# 
  4678  0002                     	;# 
  4679  0003                     	;# 
  4680  0004                     	;# 
  4681  0005                     	;# 
  4682  0006                     	;# 
  4683  0007                     	;# 
  4684  0008                     	;# 
  4685  0009                     	;# 
  4686  000A                     	;# 
  4687  000B                     	;# 
  4688  000C                     	;# 
  4689  000D                     	;# 
  4690  000E                     	;# 
  4691  0010                     	;# 
  4692  0011                     	;# 
  4693  0012                     	;# 
  4694  0013                     	;# 
  4695  0016                     	;# 
  4696  0017                     	;# 
  4697  0018                     	;# 
  4698  001C                     	;# 
  4699  001C                     	;# 
  4700  001D                     	;# 
  4701  001D                     	;# 
  4702  001E                     	;# 
  4703  001F                     	;# 
  4704  008C                     	;# 
  4705  008C                     	;# 
  4706  008D                     	;# 
  4707  008E                     	;# 
  4708  008E                     	;# 
  4709  008F                     	;# 
  4710  0090                     	;# 
  4711  0090                     	;# 
  4712  0091                     	;# 
  4713  0093                     	;# 
  4714  0094                     	;# 
  4715  0095                     	;# 
  4716  0096                     	;# 
  4717  0097                     	;# 
  4718  0098                     	;# 
  4719  0099                     	;# 
  4720  009A                     	;# 
  4721  009B                     	;# 
  4722  009C                     	;# 
  4723  009D                     	;# 
  4724  009E                     	;# 
  4725  010C                     	;# 
  4726  010D                     	;# 
  4727  010E                     	;# 
  4728  010E                     	;# 
  4729  010F                     	;# 
  4730  0110                     	;# 
  4731  0110                     	;# 
  4732  0111                     	;# 
  4733  0112                     	;# 
  4734  0112                     	;# 
  4735  0113                     	;# 
  4736  0114                     	;# 
  4737  0114                     	;# 
  4738  0115                     	;# 
  4739  0116                     	;# 
  4740  0116                     	;# 
  4741  0117                     	;# 
  4742  0119                     	;# 
  4743  0119                     	;# 
  4744  0119                     	;# 
  4745  011A                     	;# 
  4746  011A                     	;# 
  4747  011A                     	;# 
  4748  011B                     	;# 
  4749  011B                     	;# 
  4750  011B                     	;# 
  4751  011B                     	;# 
  4752  011B                     	;# 
  4753  011C                     	;# 
  4754  011C                     	;# 
  4755  011C                     	;# 
  4756  011D                     	;# 
  4757  011D                     	;# 
  4758  011D                     	;# 
  4759  011E                     	;# 
  4760  011E                     	;# 
  4761  011E                     	;# 
  4762  011F                     	;# 
  4763  011F                     	;# 
  4764  011F                     	;# 
  4765  011F                     	;# 
  4766  011F                     	;# 
  4767  018C                     	;# 
  4768  018D                     	;# 
  4769  018E                     	;# 
  4770  018F                     	;# 
  4771  0190                     	;# 
  4772  0191                     	;# 
  4773  0192                     	;# 
  4774  0196                     	;# 
  4775  0197                     	;# 
  4776  0198                     	;# 
  4777  0199                     	;# 
  4778  019A                     	;# 
  4779  019B                     	;# 
  4780  019C                     	;# 
  4781  020C                     	;# 
  4782  020D                     	;# 
  4783  020E                     	;# 
  4784  020F                     	;# 
  4785  020F                     	;# 
  4786  0210                     	;# 
  4787  0210                     	;# 
  4788  0211                     	;# 
  4789  0211                     	;# 
  4790  0212                     	;# 
  4791  0213                     	;# 
  4792  0214                     	;# 
  4793  0215                     	;# 
  4794  0215                     	;# 
  4795  0216                     	;# 
  4796  0216                     	;# 
  4797  0217                     	;# 
  4798  0217                     	;# 
  4799  0218                     	;# 
  4800  0219                     	;# 
  4801  021A                     	;# 
  4802  021B                     	;# 
  4803  021B                     	;# 
  4804  021C                     	;# 
  4805  021C                     	;# 
  4806  021D                     	;# 
  4807  021D                     	;# 
  4808  021E                     	;# 
  4809  021F                     	;# 
  4810  028C                     	;# 
  4811  028C                     	;# 
  4812  028D                     	;# 
  4813  028D                     	;# 
  4814  028E                     	;# 
  4815  028F                     	;# 
  4816  0290                     	;# 
  4817  0290                     	;# 
  4818  0291                     	;# 
  4819  0292                     	;# 
  4820  0292                     	;# 
  4821  0293                     	;# 
  4822  0293                     	;# 
  4823  0294                     	;# 
  4824  0295                     	;# 
  4825  0296                     	;# 
  4826  0296                     	;# 
  4827  0297                     	;# 
  4828  0298                     	;# 
  4829  0298                     	;# 
  4830  0299                     	;# 
  4831  0299                     	;# 
  4832  029A                     	;# 
  4833  029B                     	;# 
  4834  029C                     	;# 
  4835  029C                     	;# 
  4836  029D                     	;# 
  4837  030C                     	;# 
  4838  030C                     	;# 
  4839  030D                     	;# 
  4840  030E                     	;# 
  4841  030F                     	;# 
  4842  0310                     	;# 
  4843  0310                     	;# 
  4844  0311                     	;# 
  4845  0312                     	;# 
  4846  0313                     	;# 
  4847  0314                     	;# 
  4848  0314                     	;# 
  4849  0315                     	;# 
  4850  0316                     	;# 
  4851  0317                     	;# 
  4852  0318                     	;# 
  4853  0318                     	;# 
  4854  0319                     	;# 
  4855  031A                     	;# 
  4856  031B                     	;# 
  4857  031C                     	;# 
  4858  031C                     	;# 
  4859  031D                     	;# 
  4860  031E                     	;# 
  4861  031F                     	;# 
  4862  038C                     	;# 
  4863  038D                     	;# 
  4864  038E                     	;# 
  4865  0390                     	;# 
  4866  0391                     	;# 
  4867  0392                     	;# 
  4868  040C                     	;# 
  4869  040D                     	;# 
  4870  040E                     	;# 
  4871  040F                     	;# 
  4872  0410                     	;# 
  4873  0411                     	;# 
  4874  0416                     	;# 
  4875  0416                     	;# 
  4876  0417                     	;# 
  4877  0418                     	;# 
  4878  0418                     	;# 
  4879  0419                     	;# 
  4880  041A                     	;# 
  4881  041A                     	;# 
  4882  041B                     	;# 
  4883  041C                     	;# 
  4884  041C                     	;# 
  4885  041D                     	;# 
  4886  041E                     	;# 
  4887  041F                     	;# 
  4888  048C                     	;# 
  4889  048C                     	;# 
  4890  048D                     	;# 
  4891  048E                     	;# 
  4892  048F                     	;# 
  4893  048F                     	;# 
  4894  0490                     	;# 
  4895  0491                     	;# 
  4896  0492                     	;# 
  4897  0492                     	;# 
  4898  0493                     	;# 
  4899  0494                     	;# 
  4900  0495                     	;# 
  4901  0495                     	;# 
  4902  0496                     	;# 
  4903  0497                     	;# 
  4904  0498                     	;# 
  4905  0499                     	;# 
  4906  049A                     	;# 
  4907  049B                     	;# 
  4908  049C                     	;# 
  4909  049D                     	;# 
  4910  050C                     	;# 
  4911  050C                     	;# 
  4912  050D                     	;# 
  4913  050E                     	;# 
  4914  050F                     	;# 
  4915  050F                     	;# 
  4916  0510                     	;# 
  4917  0511                     	;# 
  4918  0512                     	;# 
  4919  0512                     	;# 
  4920  0513                     	;# 
  4921  0514                     	;# 
  4922  0515                     	;# 
  4923  0515                     	;# 
  4924  0516                     	;# 
  4925  0517                     	;# 
  4926  0518                     	;# 
  4927  0519                     	;# 
  4928  051A                     	;# 
  4929  051B                     	;# 
  4930  051C                     	;# 
  4931  051D                     	;# 
  4932  058C                     	;# 
  4933  058C                     	;# 
  4934  058D                     	;# 
  4935  058E                     	;# 
  4936  058F                     	;# 
  4937  058F                     	;# 
  4938  0590                     	;# 
  4939  0591                     	;# 
  4940  0592                     	;# 
  4941  0593                     	;# 
  4942  060C                     	;# 
  4943  060D                     	;# 
  4944  060E                     	;# 
  4945  060F                     	;# 
  4946  0610                     	;# 
  4947  0611                     	;# 
  4948  0612                     	;# 
  4949  0613                     	;# 
  4950  0614                     	;# 
  4951  0616                     	;# 
  4952  0617                     	;# 
  4953  0618                     	;# 
  4954  0619                     	;# 
  4955  061A                     	;# 
  4956  061B                     	;# 
  4957  061C                     	;# 
  4958  061D                     	;# 
  4959  061E                     	;# 
  4960  068C                     	;# 
  4961  068D                     	;# 
  4962  068E                     	;# 
  4963  068F                     	;# 
  4964  0690                     	;# 
  4965  0691                     	;# 
  4966  0692                     	;# 
  4967  0693                     	;# 
  4968  0694                     	;# 
  4969  070C                     	;# 
  4970  070D                     	;# 
  4971  070E                     	;# 
  4972  070F                     	;# 
  4973  0710                     	;# 
  4974  0711                     	;# 
  4975  0712                     	;# 
  4976  0713                     	;# 
  4977  0714                     	;# 
  4978  0716                     	;# 
  4979  0717                     	;# 
  4980  0718                     	;# 
  4981  0719                     	;# 
  4982  071A                     	;# 
  4983  071B                     	;# 
  4984  071C                     	;# 
  4985  071D                     	;# 
  4986  071E                     	;# 
  4987  0796                     	;# 
  4988  0797                     	;# 
  4989  0798                     	;# 
  4990  0799                     	;# 
  4991  079A                     	;# 
  4992  079B                     	;# 
  4993  080C                     	;# 
  4994  080D                     	;# 
  4995  080E                     	;# 
  4996  080F                     	;# 
  4997  0810                     	;# 
  4998  0811                     	;# 
  4999  0812                     	;# 
  5000  0813                     	;# 
  5001  0814                     	;# 
  5002  081A                     	;# 
  5003  081B                     	;# 
  5004  081C                     	;# 
  5005  081D                     	;# 
  5006  081E                     	;# 
  5007  081F                     	;# 
  5008  088C                     	;# 
  5009  088D                     	;# 
  5010  088E                     	;# 
  5011  088F                     	;# 
  5012  0890                     	;# 
  5013  0891                     	;# 
  5014  0892                     	;# 
  5015  0893                     	;# 
  5016  0895                     	;# 
  5017  0896                     	;# 
  5018  0897                     	;# 
  5019  0898                     	;# 
  5020  0899                     	;# 
  5021  089A                     	;# 
  5022  089B                     	;# 
  5023  090C                     	;# 
  5024  090E                     	;# 
  5025  090F                     	;# 
  5026  091F                     	;# 
  5027  091F                     	;# 
  5028  098F                     	;# 
  5029  098F                     	;# 
  5030  0990                     	;# 
  5031  0991                     	;# 
  5032  0992                     	;# 
  5033  0993                     	;# 
  5034  0994                     	;# 
  5035  0995                     	;# 
  5036  0996                     	;# 
  5037  0997                     	;# 
  5038  0E0F                     	;# 
  5039  0E10                     	;# 
  5040  0E11                     	;# 
  5041  0E12                     	;# 
  5042  0E13                     	;# 
  5043  0E14                     	;# 
  5044  0E15                     	;# 
  5045  0E16                     	;# 
  5046  0E17                     	;# 
  5047  0E18                     	;# 
  5048  0E19                     	;# 
  5049  0E1A                     	;# 
  5050  0E1B                     	;# 
  5051  0E1C                     	;# 
  5052  0E1D                     	;# 
  5053  0E1E                     	;# 
  5054  0E1F                     	;# 
  5055  0E20                     	;# 
  5056  0E21                     	;# 
  5057  0E22                     	;# 
  5058  0E23                     	;# 
  5059  0E24                     	;# 
  5060  0E25                     	;# 
  5061  0E26                     	;# 
  5062  0E27                     	;# 
  5063  0E28                     	;# 
  5064  0E29                     	;# 
  5065  0E2A                     	;# 
  5066  0E2B                     	;# 
  5067  0E2C                     	;# 
  5068  0E2D                     	;# 
  5069  0E2E                     	;# 
  5070  0E2F                     	;# 
  5071  0E30                     	;# 
  5072  0E31                     	;# 
  5073  0E32                     	;# 
  5074  0E33                     	;# 
  5075  0E34                     	;# 
  5076  0E35                     	;# 
  5077  0E36                     	;# 
  5078  0E37                     	;# 
  5079  0E8F                     	;# 
  5080  0E90                     	;# 
  5081  0E91                     	;# 
  5082  0E92                     	;# 
  5083  0E93                     	;# 
  5084  0E94                     	;# 
  5085  0E95                     	;# 
  5086  0E96                     	;# 
  5087  0E97                     	;# 
  5088  0E9C                     	;# 
  5089  0E9D                     	;# 
  5090  0E9E                     	;# 
  5091  0EA1                     	;# 
  5092  0EA2                     	;# 
  5093  0EA3                     	;# 
  5094  0EA4                     	;# 
  5095  0EA5                     	;# 
  5096  0EA9                     	;# 
  5097  0EAA                     	;# 
  5098  0EAB                     	;# 
  5099  0EAC                     	;# 
  5100  0EB1                     	;# 
  5101  0EB2                     	;# 
  5102  0EB3                     	;# 
  5103  0EB8                     	;# 
  5104  0EB9                     	;# 
  5105  0EBA                     	;# 
  5106  0EBB                     	;# 
  5107  0EBC                     	;# 
  5108  0EBD                     	;# 
  5109  0EBE                     	;# 
  5110  0EC3                     	;# 
  5111  0EC5                     	;# 
  5112  0EC6                     	;# 
  5113  0EC7                     	;# 
  5114  0EC8                     	;# 
  5115  0EC9                     	;# 
  5116  0ECA                     	;# 
  5117  0ECB                     	;# 
  5118  0ECC                     	;# 
  5119  0F10                     	;# 
  5120  0F11                     	;# 
  5121  0F12                     	;# 
  5122  0F13                     	;# 
  5123  0F14                     	;# 
  5124  0F15                     	;# 
  5125  0F16                     	;# 
  5126  0F17                     	;# 
  5127  0F18                     	;# 
  5128  0F19                     	;# 
  5129  0F1A                     	;# 
  5130  0F1B                     	;# 
  5131  0F1C                     	;# 
  5132  0F1D                     	;# 
  5133  0F1E                     	;# 
  5134  0F1F                     	;# 
  5135  0F20                     	;# 
  5136  0F21                     	;# 
  5137  0F22                     	;# 
  5138  0F23                     	;# 
  5139  0F24                     	;# 
  5140  0F25                     	;# 
  5141  0F26                     	;# 
  5142  0F27                     	;# 
  5143  0F38                     	;# 
  5144  0F39                     	;# 
  5145  0F3A                     	;# 
  5146  0F3B                     	;# 
  5147  0F3C                     	;# 
  5148  0F3D                     	;# 
  5149  0F3E                     	;# 
  5150  0F3F                     	;# 
  5151  0F40                     	;# 
  5152  0F41                     	;# 
  5153  0F43                     	;# 
  5154  0F44                     	;# 
  5155  0F45                     	;# 
  5156  0F46                     	;# 
  5157  0F47                     	;# 
  5158  0F48                     	;# 
  5159  0F49                     	;# 
  5160  0F4A                     	;# 
  5161  0F4B                     	;# 
  5162  0F4C                     	;# 
  5163  0F4E                     	;# 
  5164  0F4F                     	;# 
  5165  0F50                     	;# 
  5166  0F51                     	;# 
  5167  0F52                     	;# 
  5168  0F53                     	;# 
  5169  0F54                     	;# 
  5170  0F55                     	;# 
  5171  0F56                     	;# 
  5172  0F57                     	;# 
  5173  0F65                     	;# 
  5174  0F68                     	;# 
  5175  0F69                     	;# 
  5176  0F6A                     	;# 
  5177  0F6B                     	;# 
  5178  0FE4                     	;# 
  5179  0FE5                     	;# 
  5180  0FE6                     	;# 
  5181  0FE7                     	;# 
  5182  0FE8                     	;# 
  5183  0FE9                     	;# 
  5184  0FEA                     	;# 
  5185  0FEB                     	;# 
  5186  0FED                     	;# 
  5187  0FEE                     	;# 
  5188  0FEF                     	;# 
  5189                           
  5190                           	psect	idataBANK1
  5191  15E1                     __pidataBANK1:	
  5192                           
  5193                           ;initializer for _setpoint
  5194  15E1  3466               	retlw	102
  5195  15E2  3408               	retlw	8
  5196  15E3  340B               	retlw	11
  5197  15E4  3402               	retlw	2
  5198                           
  5199                           ;initializer for _Ki
  5200  15E5  3401               	retlw	1
  5201  15E6  3400               	retlw	0
  5202                           
  5203                           ;initializer for _pidMaxOutput
  5204  15E7  34FF               	retlw	255
  5205  15E8  3407               	retlw	7
  5206                           
  5207                           ;initializer for _loop
  5208  15E9  3440               	retlw	64
  5209                           
  5210                           	psect	idataBANK2
  5211  16E3                     __pidataBANK2:	
  5212                           
  5213                           ;initializer for ___cgram
  5214  16E3  340C               	retlw	12
  5215  16E4  3412               	retlw	18
  5216  16E5  3412               	retlw	18
  5217  16E6  340C               	retlw	12
  5218  16E7  3400               	retlw	0
  5219  16E8  3400               	retlw	0
  5220  16E9  3400               	retlw	0
  5221  16EA  3400               	retlw	0
  5222  16EB  3408               	retlw	8
  5223  16EC  3404               	retlw	4
  5224  16ED  3402               	retlw	2
  5225  16EE  341F               	retlw	31
  5226  16EF  3402               	retlw	2
  5227  16F0  3404               	retlw	4
  5228  16F1  3408               	retlw	8
  5229  16F2  3400               	retlw	0
  5230                           
  5231                           ;initializer for _channels
  5232  16F3  3401               	retlw	1
  5233  16F4  3400               	retlw	0
  5234  16F5  3403               	retlw	3
  5235  16F6  3400               	retlw	0
  5236                           
  5237                           ;initializer for _desc
  5238  16F7  3470               	retlw	low (STR_1| (0+32768))
  5239  16F8  3490               	retlw	high (STR_1| (0+32768))
  5240  16F9  347B               	retlw	low (STR_2| (0+32768))
  5241  16FA  3490               	retlw	high (STR_2| (0+32768))
  5242                           
  5243                           ;initializer for _highRangeSet
  5244  16FB  34BE               	retlw	190
  5245  16FC  340A               	retlw	10
  5246  16FD  34FF               	retlw	255
  5247  16FE  3403               	retlw	3
  5248                           
  5249                           ;initializer for _lowRangeSet
  5250  16FF  34EE               	retlw	238
  5251  1700  3402               	retlw	2
  5252  1701  3400               	retlw	0
  5253  1702  3400               	retlw	0
  5254                           
  5255                           ;initializer for _Kd
  5256  1703  3402               	retlw	2
  5257  1704  3400               	retlw	0
  5258                           
  5259                           ;initializer for _Kp
  5260  1705  340A               	retlw	10
  5261  1706  3400               	retlw	0
  5262                           
  5263                           	psect	stringtext
  5264  1000                     __pstringtext:	
  5265  1000                     log@coeff:	
  5266  1000  3400               	retlw	0
  5267  1001  3400               	retlw	0
  5268  1002  3400               	retlw	0
  5269  1003  3400               	retlw	0
  5270  1004  3480               	retlw	128
  5271  1005  343F               	retlw	63
  5272  1006  34F0               	retlw	240
  5273  1007  34FF               	retlw	255
  5274  1008  34BE               	retlw	190
  5275  1009  34E2               	retlw	226
  5276  100A  34A9               	retlw	169
  5277  100B  343E               	retlw	62
  5278  100C  3483               	retlw	131
  5279  100D  3476               	retlw	118
  5280  100E  34BE               	retlw	190
  5281  100F  34AE               	retlw	174
  5282  1010  342B               	retlw	43
  5283  1011  343E               	retlw	62
  5284  1012  343C               	retlw	60
  5285  1013  34C3               	retlw	195
  5286  1014  34BD               	retlw	189
  5287  1015  34D2               	retlw	210
  5288  1016  3413               	retlw	19
  5289  1017  343D               	retlw	61
  5290  1018  3478               	retlw	120
  5291  1019  34D3               	retlw	211
  5292  101A  34BB               	retlw	187
  5293  101B                     __end_oflog@coeff:	
  5294  0016                     _LATA	set	22
  5295  0017                     _LATB	set	23
  5296  0018                     _LATC	set	24
  5297  0011                     _TRISA	set	17
  5298  0012                     _TRISB	set	18
  5299  0013                     _TRISC	set	19
  5300  005F                     _GIE	set	95
  5301  00C2                     _LATC2	set	194
  5302  0060                     _RA0	set	96
  5303  0062                     _RA2	set	98
  5304  0066                     _RA6	set	102
  5305  0067                     _RA7	set	103
  5306  0068                     _RB0	set	104
  5307  0069                     _RB1	set	105
  5308  006A                     _RB2	set	106
  5309  0070                     _RC0	set	112
  5310  0071                     _RC1	set	113
  5311  009A                     _TRISC2	set	154
  5312  009D                     _ADACQ	set	157
  5313  0099                     _ADACT	set	153
  5314  009B                     _ADCAP	set	155
  5315  0098                     _ADCLK	set	152
  5316  0093                     _ADCON0	set	147
  5317  0093                     _ADCON0bits	set	147
  5318  0094                     _ADCON1	set	148
  5319  0095                     _ADCON2	set	149
  5320  0096                     _ADCON3	set	150
  5321  009E                     _ADPCH	set	158
  5322  009C                     _ADPRE	set	156
  5323  009A                     _ADREF	set	154
  5324  008D                     _ADRESH	set	141
  5325  008C                     _ADRESL	set	140
  5326  0097                     _ADSTAT	set	151
  5327  010F                     _ADLTHH	set	271
  5328  010E                     _ADLTHL	set	270
  5329  010D                     _ADRPT	set	269
  5330  0113                     _ADSTPTH	set	275
  5331  0112                     _ADSTPTL	set	274
  5332  0111                     _ADUTHH	set	273
  5333  0110                     _ADUTHL	set	272
  5334  021F                     _CCPTMRS1bits	set	543
  5335  0290                     _T2CLKCON	set	656
  5336  028E                     _T2CON	set	654
  5337  028E                     _T2CONbits	set	654
  5338  028F                     _T2HLT	set	655
  5339  028D                     _T2PR	set	653
  5340  0291                     _T2RST	set	657
  5341  028C                     _T2TMR	set	652
  5342  0392                     _PWM7CON	set	914
  5343  0391                     _PWM7DCH	set	913
  5344  0390                     _PWM7DCL	set	912
  5345  0716                     _PIE0bits	set	1814
  5346  0710                     _PIR4bits	set	1808
  5347  088D                     _OSCCON1	set	2189
  5348  088F                     _OSCCON3	set	2191
  5349  0891                     _OSCEN	set	2193
  5350  0893                     _OSCFRQ	set	2195
  5351  0892                     _OSCTUNE	set	2194
  5352  090C                     _FVRCON	set	2316
  5353  0E8F                     _PPSLOCK	set	3727
  5354  0E8F                     _PPSLOCKbits	set	3727
  5355  0F38                     _ANSELA	set	3896
  5356  0F43                     _ANSELB	set	3907
  5357  0F4E                     _ANSELC	set	3918
  5358  0F23                     _RC3PPS	set	3875
  5359  0F39                     _WPUA	set	3897
  5360  0F44                     _WPUB	set	3908
  5361  0F4F                     _WPUC	set	3919
  5362  0F65                     _WPUE	set	3941
  5363  101B                     STR_6:	
  5364  101B  3441               	retlw	65	;'A'
  5365  101C  346C               	retlw	108	;'l'
  5366  101D  3474               	retlw	116	;'t'
  5367  101E  3465               	retlw	101	;'e'
  5368  101F  3472               	retlw	114	;'r'
  5369  1020  3420               	retlw	32	;' '
  5370  1021  3477               	retlw	119	;'w'
  5371  1022  3469               	retlw	105	;'i'
  5372  1023  3474               	retlw	116	;'t'
  5373  1024  3468               	retlw	104	;'h'
  5374  1025  3420               	retlw	32	;' '
  5375  1026  3455               	retlw	85	;'U'
  5376  1027  3470               	retlw	112	;'p'
  5377  1028  342F               	retlw	47	;'/'
  5378  1029  3444               	retlw	68	;'D'
  5379  102A  346E               	retlw	110	;'n'
  5380  102B  3400               	retlw	0
  5381  102C                     STR_7:	
  5382  102C  3445               	retlw	69	;'E'
  5383  102D  346E               	retlw	110	;'n'
  5384  102E  3474               	retlw	116	;'t'
  5385  102F  3465               	retlw	101	;'e'
  5386  1030  3472               	retlw	114	;'r'
  5387  1031  3420               	retlw	32	;' '
  5388  1032  344B               	retlw	75	;'K'
  5389  1033  3465               	retlw	101	;'e'
  5390  1034  3479               	retlw	121	;'y'
  5391  1035  3420               	retlw	32	;' '
  5392  1036  3474               	retlw	116	;'t'
  5393  1037  346F               	retlw	111	;'o'
  5394  1038  3420               	retlw	32	;' '
  5395  1039  3453               	retlw	83	;'S'
  5396  103A  3465               	retlw	101	;'e'
  5397  103B  3474               	retlw	116	;'t'
  5398  103C  3400               	retlw	0
  5399  103D                     STR_5:	
  5400  103D  3420               	retlw	32	;' '
  5401  103E  3420               	retlw	32	;' '
  5402  103F  3420               	retlw	32	;' '
  5403  1040  3447               	retlw	71	;'G'
  5404  1041  346F               	retlw	111	;'o'
  5405  1042  346F               	retlw	111	;'o'
  5406  1043  3464               	retlw	100	;'d'
  5407  1044  342D               	retlw	45	;'-'
  5408  1045  3442               	retlw	66	;'B'
  5409  1046  3479               	retlw	121	;'y'
  5410  1047  3465               	retlw	101	;'e'
  5411  1048  3421               	retlw	33	;'!'
  5412  1049  3421               	retlw	33	;'!'
  5413  104A  3420               	retlw	32	;' '
  5414  104B  3420               	retlw	32	;' '
  5415  104C  3420               	retlw	32	;' '
  5416  104D  3400               	retlw	0
  5417  104E                     STR_4:	
  5418  104E  3445               	retlw	69	;'E'
  5419  104F  346E               	retlw	110	;'n'
  5420  1050  3474               	retlw	116	;'t'
  5421  1051  3465               	retlw	101	;'e'
  5422  1052  3472               	retlw	114	;'r'
  5423  1053  3420               	retlw	32	;' '
  5424  1054  3474               	retlw	116	;'t'
  5425  1055  346F               	retlw	111	;'o'
  5426  1056  3420               	retlw	32	;' '
  5427  1057  3453               	retlw	83	;'S'
  5428  1058  3465               	retlw	101	;'e'
  5429  1059  346C               	retlw	108	;'l'
  5430  105A  3465               	retlw	101	;'e'
  5431  105B  3463               	retlw	99	;'c'
  5432  105C  3474               	retlw	116	;'t'
  5433  105D  3420               	retlw	32	;' '
  5434  105E  3400               	retlw	0
  5435  105F                     STR_3:	
  5436  105F  3455               	retlw	85	;'U'
  5437  1060  3470               	retlw	112	;'p'
  5438  1061  342F               	retlw	47	;'/'
  5439  1062  3444               	retlw	68	;'D'
  5440  1063  346F               	retlw	111	;'o'
  5441  1064  3477               	retlw	119	;'w'
  5442  1065  346E               	retlw	110	;'n'
  5443  1066  3420               	retlw	32	;' '
  5444  1067  3474               	retlw	116	;'t'
  5445  1068  346F               	retlw	111	;'o'
  5446  1069  3420               	retlw	32	;' '
  5447  106A  3441               	retlw	65	;'A'
  5448  106B  346C               	retlw	108	;'l'
  5449  106C  3474               	retlw	116	;'t'
  5450  106D  3465               	retlw	101	;'e'
  5451  106E  3472               	retlw	114	;'r'
  5452  106F  3400               	retlw	0
  5453  1070                     STR_1:	
  5454  1070  3420               	retlw	32	;' '
  5455  1071  3450               	retlw	80	;'P'
  5456  1072  3469               	retlw	105	;'i'
  5457  1073  3474               	retlw	116	;'t'
  5458  1074  3420               	retlw	32	;' '
  5459  1075  3454               	retlw	84	;'T'
  5460  1076  3465               	retlw	101	;'e'
  5461  1077  346D               	retlw	109	;'m'
  5462  1078  3470               	retlw	112	;'p'
  5463  1079  343A               	retlw	58	;':'
  5464  107A  3400               	retlw	0
  5465  107B                     STR_2:	
  5466  107B  3442               	retlw	66	;'B'
  5467  107C  3461               	retlw	97	;'a'
  5468  107D  3463               	retlw	99	;'c'
  5469  107E  346B               	retlw	107	;'k'
  5470  107F  344C               	retlw	76	;'L'
  5471  1080  3469               	retlw	105	;'i'
  5472  1081  3467               	retlw	103	;'g'
  5473  1082  3468               	retlw	104	;'h'
  5474  1083  3474               	retlw	116	;'t'
  5475  1084  343A               	retlw	58	;':'
  5476  1085  3400               	retlw	0
  5477                           
  5478                           ; #config settings
  5479  0000                     
  5480                           	psect	cinit
  5481  07C6                     start_initialization:	
  5482  07C6                     __initialization:	
  5483                           
  5484                           ; Initialize objects allocated to BANK1
  5485  07C6  30E1               	movlw	low __pidataBANK1
  5486  07C7  0084               	movwf	4
  5487  07C8  3095               	movlw	(high __pidataBANK1)| (0+128)
  5488  07C9  0085               	movwf	5
  5489  07CA  30E6               	movlw	low __pdataBANK1
  5490  07CB  0086               	movwf	6
  5491  07CC  3000               	movlw	high __pdataBANK1
  5492  07CD  0087               	movwf	7
  5493  07CE  3009               	movlw	9
  5494  07CF  3195  25CA  3187   	fcall	init_ram
  5495                           
  5496                           ; Initialize objects allocated to BANK2
  5497  07D2  30E3               	movlw	low __pidataBANK2
  5498  07D3  0084               	movwf	4
  5499  07D4  3096               	movlw	(high __pidataBANK2)| (0+128)
  5500  07D5  0085               	movwf	5
  5501  07D6  304B               	movlw	low __pdataBANK2
  5502  07D7  0086               	movwf	6
  5503  07D8  3001               	movlw	high __pdataBANK2
  5504  07D9  0087               	movwf	7
  5505  07DA  3024               	movlw	36
  5506  07DB  3195  25CA  3187   	fcall	init_ram
  5507                           
  5508                           ; Clear objects allocated to BANK0
  5509  07DE  3068               	movlw	low __pbssBANK0
  5510  07DF  0084               	movwf	4
  5511  07E0  3000               	movlw	high __pbssBANK0
  5512  07E1  0085               	movwf	5
  5513  07E2  3008               	movlw	8
  5514  07E3  3195  25C4  3187   	fcall	clear_ram0
  5515                           
  5516                           ; Clear objects allocated to BANK1
  5517  07E6  30D5               	movlw	low __pbssBANK1
  5518  07E7  0084               	movwf	4
  5519  07E8  3000               	movlw	high __pbssBANK1
  5520  07E9  0085               	movwf	5
  5521  07EA  3011               	movlw	17
  5522  07EB  3195  25C4  3187   	fcall	clear_ram0
  5523                           
  5524                           ; Clear objects allocated to BANK2
  5525  07EE  3020               	movlw	low __pbssBANK2
  5526  07EF  0084               	movwf	4
  5527  07F0  3001               	movlw	high __pbssBANK2
  5528  07F1  0085               	movwf	5
  5529  07F2  302B               	movlw	43
  5530  07F3  3195  25C4  3187   	fcall	clear_ram0
  5531                           
  5532                           ; Clear objects allocated to BANK3
  5533  07F6  30A0               	movlw	low __pbssBANK3
  5534  07F7  0084               	movwf	4
  5535  07F8  3001               	movlw	high __pbssBANK3
  5536  07F9  0085               	movwf	5
  5537  07FA  3050               	movlw	80
  5538  07FB  3195  25C4         	fcall	clear_ram0
  5539  07FD                     end_of_initialization:	
  5540                           ;End of C runtime variable initialization code
  5541                           
  5542  07FD                     __end_of__initialization:	
  5543  07FD  0020               	movlb	0
  5544  07FE  3185  2D25         	ljmp	_main	;jump to C main() function
  5545                           
  5546                           	psect	bssBANK0
  5547  0068                     __pbssBANK0:	
  5548  0068                     _error:	
  5549  0068                     	ds	2
  5550  006A                     _pidIntegrated:	
  5551  006A                     	ds	2
  5552  006C                     _choice:	
  5553  006C                     	ds	1
  5554  006D                     _delayCount:	
  5555  006D                     	ds	1
  5556  006E                     _key:	
  5557  006E                     	ds	1
  5558  006F                     _timer2:	
  5559  006F                     	ds	1
  5560                           
  5561                           	psect	bssBANK1
  5562  00D5                     __pbssBANK1:	
  5563  00D5                     _Result:	
  5564  00D5                     	ds	2
  5565  00D7                     _derivativeValue:	
  5566  00D7                     	ds	2
  5567  00D9                     _errorValue:	
  5568  00D9                     	ds	2
  5569  00DB                     _integralValue:	
  5570  00DB                     	ds	2
  5571  00DD                     _lastError:	
  5572  00DD                     	ds	2
  5573  00DF                     _pidMinOutput:	
  5574  00DF                     	ds	2
  5575  00E1                     _sampleIndex:	
  5576  00E1                     	ds	2
  5577  00E3                     _timer:	
  5578  00E3                     	ds	2
  5579  00E5                     _testKey:	
  5580  00E5                     	ds	1
  5581                           
  5582                           	psect	dataBANK1
  5583  00E6                     __pdataBANK1:	
  5584  00E6                     _setpoint:	
  5585  00E6                     	ds	4
  5586  00EA                     _Ki:	
  5587  00EA                     	ds	2
  5588  00EC                     _pidMaxOutput:	
  5589  00EC                     	ds	2
  5590  00EE                     _loop:	
  5591  00EE                     	ds	1
  5592                           
  5593                           	psect	bssBANK2
  5594  0120                     __pbssBANK2:	
  5595  0120                     main@F13670:	
  5596  0120                     	ds	20
  5597  0134                     _totals:	
  5598  0134                     	ds	8
  5599  013C                     LCD_Write_Int@F13694:	
  5600  013C                     	ds	5
  5601  0141                     main@F13664:	
  5602  0141                     	ds	4
  5603  0145                     _D_PrevError:	
  5604  0145                     	ds	2
  5605  0147                     _errno:	
  5606  0147                     	ds	2
  5607  0149                     _menuDelay:	
  5608  0149                     	ds	2
  5609                           
  5610                           	psect	dataBANK2
  5611  014B                     __pdataBANK2:	
  5612  014B                     ___cgram:	
  5613  014B                     	ds	16
  5614  015B                     _channels:	
  5615  015B                     	ds	4
  5616  015F                     _desc:	
  5617  015F                     	ds	4
  5618  0163                     _highRangeSet:	
  5619  0163                     	ds	4
  5620  0167                     _lowRangeSet:	
  5621  0167                     	ds	4
  5622  016B                     _Kd:	
  5623  016B                     	ds	2
  5624  016D                     _Kp:	
  5625  016D                     	ds	2
  5626                           
  5627                           	psect	bssBANK3
  5628  01A0                     __pbssBANK3:	
  5629  01A0                     _samples:	
  5630  01A0                     	ds	80
  5631                           
  5632                           	psect	inittext
  5633  15CA                     init_ram:	
  5634  15CA  00FE               	movwf	126
  5635  15CB                     initloop:	
  5636  15CB  0012               	moviw fsr0++
  5637  15CC  001E               	movwi fsr1++
  5638  15CD  0BFE               	decfsz	126,f
  5639  15CE  2DCB               	goto	initloop
  5640  15CF  3400               	retlw	0
  5641                           
  5642                           	psect	clrtext
  5643  15C4                     clear_ram0:	
  5644                           ;	Called with FSR0 containing the base address, and
  5645                           ;	WREG with the size to clear
  5646                           
  5647  15C4  0064               	clrwdt	;clear the watchdog before getting into this loop
  5648  15C5                     clrloop0:	
  5649  15C5  0180               	clrf	0	;clear RAM location pointed to by FSR
  5650  15C6  3101               	addfsr 0,1
  5651  15C7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5652  15C8  2DC5               	goto	clrloop0	;have we reached the end yet?
  5653  15C9  3400               	retlw	0	;all done for this memory range, return
  5654                           
  5655                           	psect	cstackBANK1
  5656  00A0                     __pcstackBANK1:	
  5657  00A0                     ??_main:	
  5658                           
  5659                           ; 1 bytes @ 0x0
  5660  00A0                     	ds	10
  5661  00AA                     main@outputSamples:	
  5662                           
  5663                           ; 20 bytes @ 0xA
  5664  00AA                     	ds	20
  5665  00BE                     main@x:	
  5666                           
  5667                           ; 1 bytes @ 0x1E
  5668  00BE                     	ds	1
  5669  00BF                     main@output:	
  5670                           
  5671                           ; 2 bytes @ 0x1F
  5672  00BF                     	ds	2
  5673  00C1                     main@holdOutput:	
  5674                           
  5675                           ; 1 bytes @ 0x21
  5676  00C1                     	ds	1
  5677  00C2                     main@lidOpenCount:	
  5678                           
  5679                           ; 1 bytes @ 0x22
  5680  00C2                     	ds	1
  5681  00C3                     main@lastTemperature:	
  5682                           
  5683                           ; 2 bytes @ 0x23
  5684  00C3                     	ds	2
  5685  00C5                     main@pidPeriodCounter:	
  5686                           
  5687                           ; 2 bytes @ 0x25
  5688  00C5                     	ds	2
  5689  00C7                     main@currentTemperature:	
  5690                           
  5691                           ; 2 bytes @ 0x27
  5692  00C7                     	ds	2
  5693  00C9                     main@outputTotal:	
  5694                           
  5695                           ; 4 bytes @ 0x29
  5696  00C9                     	ds	4
  5697  00CD                     main@dutyCycle6:	
  5698                           
  5699                           ; 2 bytes @ 0x2D
  5700  00CD                     	ds	2
  5701  00CF                     main@analogs:	
  5702                           
  5703                           ; 4 bytes @ 0x2F
  5704  00CF                     	ds	4
  5705  00D3                     main@outputIndex:	
  5706                           
  5707                           ; 1 bytes @ 0x33
  5708  00D3                     	ds	1
  5709  00D4                     main@j:	
  5710                           
  5711                           ; 1 bytes @ 0x34
  5712  00D4                     	ds	1
  5713                           
  5714                           	psect	cstackCOMMON
  5715  0070                     __pcstackCOMMON:	
  5716  0070                     ?___ftge:	
  5717  0070                     ?_LCD_Cmd:	
  5718                           ; 1 bit 
  5719                           
  5720  0070                     ?_LCD_Write_Char:	
  5721                           ; 1 bytes @ 0x0
  5722                           
  5723  0070                     ?_OSCILLATOR_Initialize:	
  5724                           ; 1 bytes @ 0x0
  5725                           
  5726  0070                     ??_OSCILLATOR_Initialize:	
  5727                           ; 1 bytes @ 0x0
  5728                           
  5729  0070                     ?_TMR2_Initialize:	
  5730                           ; 1 bytes @ 0x0
  5731                           
  5732  0070                     ??_TMR2_Initialize:	
  5733                           ; 1 bytes @ 0x0
  5734                           
  5735  0070                     ?_ADCC_Initialize:	
  5736                           ; 1 bytes @ 0x0
  5737                           
  5738  0070                     ??_ADCC_Initialize:	
  5739                           ; 1 bytes @ 0x0
  5740                           
  5741  0070                     ?_InitCustomChars:	
  5742                           ; 1 bytes @ 0x0
  5743                           
  5744  0070                     ?_LCD_Port:	
  5745                           ; 1 bytes @ 0x0
  5746                           
  5747  0070                     ??_LCD_Port:	
  5748                           ; 1 bytes @ 0x0
  5749                           
  5750  0070                     ?_LCD_Clear:	
  5751                           ; 1 bytes @ 0x0
  5752                           
  5753  0070                     ?_LCD_Init:	
  5754                           ; 1 bytes @ 0x0
  5755                           
  5756  0070                     ?_PIN_MANAGER_Initialize:	
  5757                           ; 1 bytes @ 0x0
  5758                           
  5759  0070                     ??_PIN_MANAGER_Initialize:	
  5760                           ; 1 bytes @ 0x0
  5761                           
  5762  0070                     ?_PWM_Initialize:	
  5763                           ; 1 bytes @ 0x0
  5764                           
  5765  0070                     ??_PWM_Initialize:	
  5766                           ; 1 bytes @ 0x0
  5767                           
  5768  0070                     ?_PWM7_LoadDutyValue:	
  5769                           ; 1 bytes @ 0x0
  5770                           
  5771  0070                     ?_SYSTEM_Initialize:	
  5772                           ; 1 bytes @ 0x0
  5773                           
  5774  0070                     ?_readKey:	
  5775                           ; 1 bytes @ 0x0
  5776                           
  5777  0070                     ??_readKey:	
  5778                           ; 1 bytes @ 0x0
  5779                           
  5780  0070                     ?_menuChoice:	
  5781                           ; 1 bytes @ 0x0
  5782                           
  5783  0070                     ?_main:	
  5784                           ; 1 bytes @ 0x0
  5785                           
  5786  0070                     ?___bmul:	
  5787                           ; 1 bytes @ 0x0
  5788                           
  5789  0070                     ?_ADCRead:	
  5790                           ; 1 bytes @ 0x0
  5791                           
  5792  0070                     ?___wmul:	
  5793                           ; 2 bytes @ 0x0
  5794                           
  5795  0070                     ?___awmod:	
  5796                           ; 2 bytes @ 0x0
  5797                           
  5798  0070                     ?___ftpack:	
  5799                           ; 2 bytes @ 0x0
  5800                           
  5801  0070                     ?_frexp:	
  5802                           ; 3 bytes @ 0x0
  5803                           
  5804  0070                     ?___aldiv:	
  5805                           ; 3 bytes @ 0x0
  5806                           
  5807  0070                     ?___fttol:	
  5808                           ; 4 bytes @ 0x0
  5809                           
  5810  0070                     LCD_Port@a:	
  5811                           ; 4 bytes @ 0x0
  5812                           
  5813  0070                     PIN_MANAGER_Initialize@state:	
  5814                           ; 1 bytes @ 0x0
  5815                           
  5816  0070                     ___bmul@multiplicand:	
  5817                           ; 1 bytes @ 0x0
  5818                           
  5819  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5820                           ; 1 bytes @ 0x0
  5821                           
  5822  0070                     ___wmul@multiplier:	
  5823                           ; 2 bytes @ 0x0
  5824                           
  5825  0070                     ___awmod@divisor:	
  5826                           ; 2 bytes @ 0x0
  5827                           
  5828  0070                     ___ftpack@arg:	
  5829                           ; 2 bytes @ 0x0
  5830                           
  5831  0070                     ___ftge@ff1:	
  5832                           ; 3 bytes @ 0x0
  5833                           
  5834  0070                     ___fttol@f1:	
  5835                           ; 3 bytes @ 0x0
  5836                           
  5837  0070                     frexp@value:	
  5838                           ; 3 bytes @ 0x0
  5839                           
  5840  0070                     ___aldiv@divisor:	
  5841                           ; 3 bytes @ 0x0
  5842                           
  5843                           
  5844                           ; 4 bytes @ 0x0
  5845  0070                     	ds	1
  5846  0071                     ??_LCD_Cmd:	
  5847  0071                     ??_LCD_Write_Char:	
  5848                           ; 1 bytes @ 0x1
  5849                           
  5850  0071                     ??___bmul:	
  5851                           ; 1 bytes @ 0x1
  5852                           
  5853                           
  5854                           ; 1 bytes @ 0x1
  5855  0071                     	ds	1
  5856  0072                     ??_PWM7_LoadDutyValue:	
  5857  0072                     LCD_Write_Char@temp:	
  5858                           ; 1 bytes @ 0x2
  5859                           
  5860  0072                     ___bmul@product:	
  5861                           ; 1 bytes @ 0x2
  5862                           
  5863  0072                     ___wmul@multiplicand:	
  5864                           ; 1 bytes @ 0x2
  5865                           
  5866  0072                     ___awmod@dividend:	
  5867                           ; 2 bytes @ 0x2
  5868                           
  5869                           
  5870                           ; 2 bytes @ 0x2
  5871  0072                     	ds	1
  5872  0073                     ??_ADCRead:	
  5873  0073                     ADCRead@channel:	
  5874                           ; 1 bytes @ 0x3
  5875                           
  5876  0073                     LCD_Cmd@a:	
  5877                           ; 1 bytes @ 0x3
  5878                           
  5879  0073                     LCD_Write_Char@y:	
  5880                           ; 1 bytes @ 0x3
  5881                           
  5882  0073                     ___bmul@multiplier:	
  5883                           ; 1 bytes @ 0x3
  5884                           
  5885  0073                     ___ftpack@exp:	
  5886                           ; 1 bytes @ 0x3
  5887                           
  5888  0073                     frexp@eptr:	
  5889                           ; 1 bytes @ 0x3
  5890                           
  5891  0073                     ___ftge@ff2:	
  5892                           ; 1 bytes @ 0x3
  5893                           
  5894                           
  5895                           ; 3 bytes @ 0x3
  5896  0073                     	ds	1
  5897  0074                     ??_frexp:	
  5898  0074                     ??_LCD_Clear:	
  5899                           ; 1 bytes @ 0x4
  5900                           
  5901  0074                     ?_LCD_Set_Cursor:	
  5902                           ; 1 bytes @ 0x4
  5903                           
  5904  0074                     ??_LCD_Init:	
  5905                           ; 1 bytes @ 0x4
  5906                           
  5907  0074                     ??___wmul:	
  5908                           ; 1 bytes @ 0x4
  5909                           
  5910  0074                     ??___awmod:	
  5911                           ; 1 bytes @ 0x4
  5912                           
  5913  0074                     ??___fttol:	
  5914                           ; 1 bytes @ 0x4
  5915                           
  5916  0074                     LCD_Set_Cursor@y:	
  5917                           ; 1 bytes @ 0x4
  5918                           
  5919  0074                     LCD_Write_Char@a:	
  5920                           ; 1 bytes @ 0x4
  5921                           
  5922  0074                     ___ftpack@sign:	
  5923                           ; 1 bytes @ 0x4
  5924                           
  5925  0074                     ___wmul@product:	
  5926                           ; 1 bytes @ 0x4
  5927                           
  5928  0074                     ___aldiv@dividend:	
  5929                           ; 2 bytes @ 0x4
  5930                           
  5931                           
  5932                           ; 4 bytes @ 0x4
  5933  0074                     	ds	1
  5934  0075                     ??___ftpack:	
  5935  0075                     ??_InitCustomChars:	
  5936                           ; 1 bytes @ 0x5
  5937                           
  5938  0075                     ??_LCD_Set_Cursor:	
  5939                           ; 1 bytes @ 0x5
  5940                           
  5941  0075                     ?_LCD_Write_String:	
  5942                           ; 1 bytes @ 0x5
  5943                           
  5944  0075                     ___awmod@counter:	
  5945                           ; 1 bytes @ 0x5
  5946                           
  5947  0075                     LCD_Write_String@a:	
  5948                           ; 1 bytes @ 0x5
  5949                           
  5950                           
  5951                           ; 2 bytes @ 0x5
  5952  0075                     	ds	1
  5953  0076                     ??___ftge:	
  5954  0076                     ?___awdiv:	
  5955                           ; 1 bytes @ 0x6
  5956                           
  5957  0076                     InitCustomChars@i:	
  5958                           ; 2 bytes @ 0x6
  5959                           
  5960  0076                     ___awmod@sign:	
  5961                           ; 1 bytes @ 0x6
  5962                           
  5963  0076                     ___awdiv@divisor:	
  5964                           ; 1 bytes @ 0x6
  5965                           
  5966                           
  5967                           ; 2 bytes @ 0x6
  5968  0076                     	ds	1
  5969  0077                     ??_LCD_Write_String:	
  5970  0077                     LCD_Set_Cursor@x:	
  5971                           ; 1 bytes @ 0x7
  5972                           
  5973  0077                     LCD_Init@style:	
  5974                           ; 1 bytes @ 0x7
  5975                           
  5976                           
  5977                           ; 1 bytes @ 0x7
  5978  0077                     	ds	1
  5979  0078                     ??_SYSTEM_Initialize:	
  5980  0078                     ??___aldiv:	
  5981                           ; 1 bytes @ 0x8
  5982                           
  5983  0078                     ?___awtoft:	
  5984                           ; 1 bytes @ 0x8
  5985                           
  5986  0078                     LCD_Set_Cursor@z:	
  5987                           ; 3 bytes @ 0x8
  5988                           
  5989  0078                     ___fttol@sign1:	
  5990                           ; 1 bytes @ 0x8
  5991                           
  5992  0078                     LCD_Write_String@i:	
  5993                           ; 1 bytes @ 0x8
  5994                           
  5995  0078                     ___awdiv@dividend:	
  5996                           ; 2 bytes @ 0x8
  5997                           
  5998  0078                     ___awtoft@c:	
  5999                           ; 2 bytes @ 0x8
  6000                           
  6001                           
  6002                           ; 2 bytes @ 0x8
  6003  0078                     	ds	1
  6004  0079                     LCD_Set_Cursor@w:	
  6005  0079                     readAnalog@analog_channel:	
  6006                           ; 1 bytes @ 0x9
  6007                           
  6008  0079                     ___fttol@lval:	
  6009                           ; 2 bytes @ 0x9
  6010                           
  6011                           
  6012                           ; 4 bytes @ 0x9
  6013  0079                     	ds	1
  6014  007A                     ??___awdiv:	
  6015  007A                     LCD_Set_Cursor@temp:	
  6016                           ; 1 bytes @ 0xA
  6017                           
  6018                           
  6019                           ; 1 bytes @ 0xA
  6020  007A                     	ds	1
  6021  007B                     ??_PID_Calculate:	
  6022  007B                     ??___awtoft:	
  6023                           ; 1 bytes @ 0xB
  6024                           
  6025  007B                     readAnalog@value:	
  6026                           ; 1 bytes @ 0xB
  6027                           
  6028                           
  6029                           ; 2 bytes @ 0xB
  6030  007B                     	ds	2
  6031  007D                     ___awtoft@sign:	
  6032  007D                     ___fttol@exp1:	
  6033                           ; 1 bytes @ 0xD
  6034                           
  6035                           
  6036                           ; 1 bytes @ 0xD
  6037  007D                     	ds	1
  6038  007E                     ??_eval_poly:	
  6039  007E                     ??_tempCalc:	
  6040                           ; 1 bytes @ 0xE
  6041                           
  6042  007E                     ??___ftsub:	
  6043                           ; 1 bytes @ 0xE
  6044                           
  6045                           
  6046                           	psect	cstackBANK0
  6047  0020                     __pcstackBANK0:	
  6048                           ; 1 bytes @ 0xE
  6049                           
  6050  0020                     ?___ftmul:	
  6051  0020                     ___aldiv@counter:	
  6052                           ; 3 bytes @ 0x0
  6053                           
  6054  0020                     ___awdiv@counter:	
  6055                           ; 1 bytes @ 0x0
  6056                           
  6057  0020                     ___ftmul@f1:	
  6058                           ; 1 bytes @ 0x0
  6059                           
  6060                           
  6061                           ; 3 bytes @ 0x0
  6062  0020                     	ds	1
  6063  0021                     ___aldiv@sign:	
  6064  0021                     ___awdiv@sign:	
  6065                           ; 1 bytes @ 0x1
  6066                           
  6067                           
  6068                           ; 1 bytes @ 0x1
  6069  0021                     	ds	1
  6070  0022                     ___awdiv@quotient:	
  6071  0022                     ___aldiv@quotient:	
  6072                           ; 2 bytes @ 0x2
  6073                           
  6074                           
  6075                           ; 4 bytes @ 0x2
  6076  0022                     	ds	1
  6077  0023                     ___ftmul@f2:	
  6078                           
  6079                           ; 3 bytes @ 0x3
  6080  0023                     	ds	1
  6081  0024                     ?_LCD_Write_Int:	
  6082  0024                     ?_PID_Calculate:	
  6083                           ; 1 bytes @ 0x4
  6084                           
  6085  0024                     LCD_Write_Int@value:	
  6086                           ; 2 bytes @ 0x4
  6087                           
  6088  0024                     PID_Calculate@setpoint:	
  6089                           ; 2 bytes @ 0x4
  6090                           
  6091                           
  6092                           ; 2 bytes @ 0x4
  6093  0024                     	ds	2
  6094  0026                     ??___ftmul:	
  6095  0026                     ?_readAnalog:	
  6096                           ; 1 bytes @ 0x6
  6097                           
  6098  0026                     LCD_Write_Int@fieldLength:	
  6099                           ; 2 bytes @ 0x6
  6100                           
  6101  0026                     readAnalog@channel:	
  6102                           ; 1 bytes @ 0x6
  6103                           
  6104  0026                     PID_Calculate@temp:	
  6105                           ; 2 bytes @ 0x6
  6106                           
  6107                           
  6108                           ; 2 bytes @ 0x6
  6109  0026                     	ds	1
  6110  0027                     LCD_Write_Int@numPlaces:	
  6111                           
  6112                           ; 1 bytes @ 0x7
  6113  0027                     	ds	1
  6114  0028                     ??_readAnalog:	
  6115  0028                     LCD_Write_Int@sign:	
  6116                           ; 1 bytes @ 0x8
  6117                           
  6118                           
  6119                           ; 1 bytes @ 0x8
  6120  0028                     	ds	1
  6121  0029                     ??_LCD_Write_Int:	
  6122                           
  6123                           ; 1 bytes @ 0x9
  6124  0029                     	ds	1
  6125  002A                     ___ftmul@exp:	
  6126                           
  6127                           ; 1 bytes @ 0xA
  6128  002A                     	ds	1
  6129  002B                     ___ftmul@f3_as_product:	
  6130                           
  6131                           ; 3 bytes @ 0xB
  6132  002B                     	ds	3
  6133  002E                     ___ftmul@cntr:	
  6134  002E                     LCD_Write_Int@str:	
  6135                           ; 1 bytes @ 0xE
  6136                           
  6137                           
  6138                           ; 5 bytes @ 0xE
  6139  002E                     	ds	1
  6140  002F                     ___ftmul@sign:	
  6141                           
  6142                           ; 1 bytes @ 0xF
  6143  002F                     	ds	1
  6144  0030                     ?___ftdiv:	
  6145  0030                     ___ftdiv@f2:	
  6146                           ; 3 bytes @ 0x10
  6147                           
  6148                           
  6149                           ; 3 bytes @ 0x10
  6150  0030                     	ds	3
  6151  0033                     LCD_Write_Int@j:	
  6152  0033                     ___ftdiv@f1:	
  6153                           ; 2 bytes @ 0x13
  6154                           
  6155                           
  6156                           ; 3 bytes @ 0x13
  6157  0033                     	ds	2
  6158  0035                     LCD_Write_Int@i:	
  6159                           
  6160                           ; 2 bytes @ 0x15
  6161  0035                     	ds	1
  6162  0036                     ??___ftdiv:	
  6163                           
  6164                           ; 1 bytes @ 0x16
  6165  0036                     	ds	1
  6166  0037                     ??_menuChoice:	
  6167                           
  6168                           ; 1 bytes @ 0x17
  6169  0037                     	ds	3
  6170  003A                     ___ftdiv@cntr:	
  6171                           
  6172                           ; 1 bytes @ 0x1A
  6173  003A                     	ds	1
  6174  003B                     ___ftdiv@f3:	
  6175                           
  6176                           ; 3 bytes @ 0x1B
  6177  003B                     	ds	3
  6178  003E                     ___ftdiv@exp:	
  6179                           
  6180                           ; 1 bytes @ 0x1E
  6181  003E                     	ds	1
  6182  003F                     ___ftdiv@sign:	
  6183                           
  6184                           ; 1 bytes @ 0x1F
  6185  003F                     	ds	1
  6186  0040                     ?___ftadd:	
  6187  0040                     ___ftadd@f1:	
  6188                           ; 3 bytes @ 0x20
  6189                           
  6190                           
  6191                           ; 3 bytes @ 0x20
  6192  0040                     	ds	3
  6193  0043                     ___ftadd@f2:	
  6194                           
  6195                           ; 3 bytes @ 0x23
  6196  0043                     	ds	3
  6197  0046                     ??___ftadd:	
  6198                           
  6199                           ; 1 bytes @ 0x26
  6200  0046                     	ds	4
  6201  004A                     ___ftadd@sign:	
  6202                           
  6203                           ; 1 bytes @ 0x2A
  6204  004A                     	ds	1
  6205  004B                     ___ftadd@exp2:	
  6206                           
  6207                           ; 1 bytes @ 0x2B
  6208  004B                     	ds	1
  6209  004C                     ___ftadd@exp1:	
  6210                           
  6211                           ; 1 bytes @ 0x2C
  6212  004C                     	ds	1
  6213  004D                     ?_eval_poly:	
  6214  004D                     ?___ftsub:	
  6215                           ; 3 bytes @ 0x2D
  6216                           
  6217  004D                     ___ftsub@f2:	
  6218                           ; 3 bytes @ 0x2D
  6219                           
  6220  004D                     eval_poly@x:	
  6221                           ; 3 bytes @ 0x2D
  6222                           
  6223                           
  6224                           ; 3 bytes @ 0x2D
  6225  004D                     	ds	3
  6226  0050                     eval_poly@d:	
  6227  0050                     ___ftsub@f1:	
  6228                           ; 2 bytes @ 0x30
  6229                           
  6230                           
  6231                           ; 3 bytes @ 0x30
  6232  0050                     	ds	2
  6233  0052                     eval_poly@n:	
  6234                           
  6235                           ; 2 bytes @ 0x32
  6236  0052                     	ds	2
  6237  0054                     eval_poly@res:	
  6238                           
  6239                           ; 3 bytes @ 0x34
  6240  0054                     	ds	3
  6241  0057                     ?_log:	
  6242  0057                     log@x:	
  6243                           ; 3 bytes @ 0x37
  6244                           
  6245                           
  6246                           ; 3 bytes @ 0x37
  6247  0057                     	ds	3
  6248  005A                     ??_log:	
  6249                           
  6250                           ; 1 bytes @ 0x3A
  6251  005A                     	ds	1
  6252  005B                     log@exponent:	
  6253                           
  6254                           ; 2 bytes @ 0x3B
  6255  005B                     	ds	2
  6256  005D                     ?_tempCalc:	
  6257  005D                     tempCalc@analogValue:	
  6258                           ; 2 bytes @ 0x3D
  6259                           
  6260                           
  6261                           ; 2 bytes @ 0x3D
  6262  005D                     	ds	2
  6263  005F                     tempCalc@R:	
  6264                           
  6265                           ; 3 bytes @ 0x3F
  6266  005F                     	ds	3
  6267  0062                     _tempCalc$1015:	
  6268                           
  6269                           ; 3 bytes @ 0x42
  6270  0062                     	ds	3
  6271  0065                     tempCalc@steinhart:	
  6272                           
  6273                           ; 3 bytes @ 0x45
  6274  0065                     	ds	3
  6275                           
  6276                           	psect	maintext
  6277  0525                     __pmaintext:	
  6278 ;;
  6279 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6280 ;;
  6281 ;; *************** function _main *****************
  6282 ;; Defined at:
  6283 ;;		line 29 in file "main.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;  outputSample   20   10[BANK1 ] int [10]
  6288 ;;  analogs         4   47[BANK1 ] unsigned int [2]
  6289 ;;  outputTotal     4   41[BANK1 ] long 
  6290 ;;  dutyCycle6      2   45[BANK1 ] unsigned int 
  6291 ;;  currentTempe    2   39[BANK1 ] int 
  6292 ;;  pidPeriodCou    2   37[BANK1 ] int 
  6293 ;;  lastTemperat    2   35[BANK1 ] int 
  6294 ;;  output          2   31[BANK1 ] int 
  6295 ;;  j               1   52[BANK1 ] unsigned char 
  6296 ;;  outputIndex     1   51[BANK1 ] unsigned char 
  6297 ;;  lidOpenCount    1   34[BANK1 ] unsigned char 
  6298 ;;  holdOutput      1   33[BANK1 ] unsigned char 
  6299 ;;  x               1   30[BANK1 ] unsigned char 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : B1F/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Totals:         0       0      53       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;Total ram usage:       53 bytes
  6314 ;; Hardware stack levels required when called:    5
  6315 ;; This function calls:
  6316 ;;		_LCD_Clear
  6317 ;;		_LCD_Set_Cursor
  6318 ;;		_LCD_Write_Char
  6319 ;;		_LCD_Write_Int
  6320 ;;		_LCD_Write_String
  6321 ;;		_PID_Calculate
  6322 ;;		_PWM7_LoadDutyValue
  6323 ;;		_SYSTEM_Initialize
  6324 ;;		___aldiv
  6325 ;;		_menuChoice
  6326 ;;		_readAnalog
  6327 ;;		_tempCalc
  6328 ;; This function is called by:
  6329 ;;		Startup code after reset
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           
  6334                           ;psect for function _main
  6335  0525                     _main:	
  6336                           
  6337                           ;main.c: 31: SYSTEM_Initialize();
  6338                           
  6339                           ;incstack = 0
  6340                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6341  0525  3188  204D  3185   	fcall	_SYSTEM_Initialize
  6342                           
  6343                           ;main.c: 33: uint16_t analogs[2] = {0};
  6344  0528  0022               	movlb	2	; select bank2
  6345  0529  0844               	movf	(main@F13664+3)^(0+256),w
  6346  052A  0021               	movlb	1	; select bank1
  6347  052B  00D2               	movwf	(main@analogs+3)^(0+128)
  6348  052C  0022               	movlb	2	; select bank2
  6349  052D  0843               	movf	(main@F13664+2)^(0+256),w
  6350  052E  0021               	movlb	1	; select bank1
  6351  052F  00D1               	movwf	(main@analogs+2)^(0+128)
  6352  0530  0022               	movlb	2	; select bank2
  6353  0531  0842               	movf	(main@F13664+1)^(0+256),w
  6354  0532  0021               	movlb	1	; select bank1
  6355  0533  00D0               	movwf	(main@analogs+1)^(0+128)
  6356  0534  0022               	movlb	2	; select bank2
  6357  0535  0841               	movf	main@F13664^(0+256),w
  6358  0536  0021               	movlb	1	; select bank1
  6359  0537  00CF               	movwf	main@analogs^(0+128)
  6360                           
  6361                           ;main.c: 35: extern int16_t setpoint[2];
  6362                           ;main.c: 43: int output = 0;
  6363  0538  01BF               	clrf	main@output^(0+128)
  6364  0539  01C0               	clrf	(main@output+1)^(0+128)
  6365                           
  6366                           ;main.c: 45: int32_t outputTotal = 0;
  6367  053A  3000               	movlw	0
  6368  053B  00CC               	movwf	(main@outputTotal+3)^(0+128)
  6369  053C  3000               	movlw	0
  6370  053D  00CB               	movwf	(main@outputTotal+2)^(0+128)
  6371  053E  3000               	movlw	0
  6372  053F  00CA               	movwf	(main@outputTotal+1)^(0+128)
  6373  0540  3000               	movlw	0
  6374  0541  00C9               	movwf	main@outputTotal^(0+128)
  6375                           
  6376                           ;main.c: 47: char outputIndex = 0;
  6377  0542  01D3               	clrf	main@outputIndex^(0+128)
  6378                           
  6379                           ;main.c: 49: int16_t outputSamples[10]= {0};
  6380  0543  3020               	movlw	low main@F13670
  6381  0544  0086               	movwf	6
  6382  0545  3001               	movlw	high main@F13670
  6383  0546  0087               	movwf	7
  6384  0547  30AA               	movlw	low main@outputSamples
  6385  0548  0084               	movwf	4
  6386  0549  3000               	movlw	high main@outputSamples
  6387  054A  0085               	movwf	5
  6388  054B  3014               	movlw	20
  6389  054C  00A0               	movwf	??_main^(0+128)
  6390  054D                     u3740:	
  6391  054D  0016               	moviw fsr1++
  6392  054E  001A               	movwi fsr0++
  6393  054F  0BA0               	decfsz	??_main^(0+128),f
  6394  0550  2D4D               	goto	u3740
  6395                           
  6396                           ;main.c: 51: char holdOutput = 0;
  6397  0551  01C1               	clrf	main@holdOutput^(0+128)
  6398                           
  6399                           ;main.c: 53: int currentTemperature = 750;
  6400  0552  30EE               	movlw	238
  6401  0553  00C7               	movwf	main@currentTemperature^(0+128)
  6402  0554  3002               	movlw	2
  6403  0555  00C8               	movwf	(main@currentTemperature^(0+128)+1)
  6404                           
  6405                           ;main.c: 55: int lastTemperature = 750;
  6406  0556  30EE               	movlw	238
  6407  0557  00C3               	movwf	main@lastTemperature^(0+128)
  6408  0558  3002               	movlw	2
  6409  0559  00C4               	movwf	(main@lastTemperature^(0+128)+1)
  6410                           
  6411                           ;main.c: 57: char lidOpenCount = 0;
  6412  055A  01C2               	clrf	main@lidOpenCount^(0+128)
  6413                           
  6414                           ;main.c: 61: char j = 0;
  6415  055B  01D4               	clrf	main@j^(0+128)
  6416                           
  6417                           ;main.c: 63: char x = 0;
  6418  055C  01BE               	clrf	main@x^(0+128)
  6419                           
  6420                           ;main.c: 65: int pidPeriodCounter = 0;
  6421  055D  01C5               	clrf	main@pidPeriodCounter^(0+128)
  6422  055E  01C6               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6423                           
  6424                           ;main.c: 67: extern int pidMaxOutput;
  6425                           ;main.c: 69: extern unsigned char loop;
  6426                           ;main.c: 84: uint16_t dutyCycle6 = 0;
  6427  055F  01CD               	clrf	main@dutyCycle6^(0+128)
  6428  0560  01CE               	clrf	(main@dutyCycle6+1)^(0+128)
  6429                           
  6430                           ;main.c: 90: PWM7_LoadDutyValue(setpoint[1]);
  6431  0561  0869               	movf	((_setpoint+1)^(0+128)+2),w
  6432  0562  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6433  0563  0868               	movf	(_setpoint^(0+128)+2),w
  6434  0564  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6435  0565  3196  2628  3185   	fcall	_PWM7_LoadDutyValue
  6436                           
  6437                           ;main.c: 92: _delay((unsigned long)((300)*(32000000/4000.0)));
  6438  0568  300D               	movlw	13
  6439  0569  0021               	movlb	1	; select bank1
  6440  056A  00A2               	movwf	(??_main^(0+128)+2)
  6441  056B  302D               	movlw	45
  6442  056C  00A1               	movwf	(??_main^(0+128)+1)
  6443  056D  30E2               	movlw	226
  6444  056E  00A0               	movwf	??_main^(0+128)
  6445  056F                     u3877:	
  6446  056F  0BA0               	decfsz	??_main^(0+128),f
  6447  0570  2D6F               	goto	u3877
  6448  0571  0BA1               	decfsz	(??_main^(0+128)+1),f
  6449  0572  2D6F               	goto	u3877
  6450  0573  0BA2               	decfsz	(??_main^(0+128)+2),f
  6451  0574  2D6F               	goto	u3877
  6452  0575  3200               	nop2
  6453                           
  6454                           ;main.c: 94: LCD_Clear();
  6455  0576  3195  25D0  3185   	fcall	_LCD_Clear
  6456  0579                     l3194:	
  6457                           ;main.c: 107: while (1)
  6458                           
  6459                           
  6460                           ;main.c: 108: {
  6461                           ;main.c: 109: extern int16_t errorValue;
  6462                           ;main.c: 110: extern int16_t integralValue;
  6463                           ;main.c: 111: extern int16_t derivativeValue;
  6464                           ;main.c: 113: if(loop>253)
  6465  0579  30FE               	movlw	254
  6466  057A  0021               	movlb	1	; select bank1
  6467  057B  026E               	subwf	_loop^(0+128),w
  6468  057C  1C03               	skipc
  6469  057D  2F13               	goto	l3262
  6470                           
  6471                           ;main.c: 114: {
  6472                           ;main.c: 115: PWM7_LoadDutyValue(setpoint[1]);
  6473  057E  0869               	movf	((_setpoint+1)^(0+128)+2),w
  6474  057F  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6475  0580  0868               	movf	(_setpoint^(0+128)+2),w
  6476  0581  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6477  0582  3196  2628  3185   	fcall	_PWM7_LoadDutyValue
  6478                           
  6479                           ;main.c: 117: { LCD_Set_Cursor(0,0); LCD_Write_Int(errorValue,5, 0, 0);};
  6480  0585  01F4               	clrf	LCD_Set_Cursor@y
  6481  0586  3000               	movlw	0
  6482  0587  3188  200E  3185   	fcall	_LCD_Set_Cursor
  6483  058A  0021               	movlb	1	; select bank1
  6484  058B  085A               	movf	(_errorValue+1)^(0+128),w
  6485  058C  0020               	movlb	0	; select bank0
  6486  058D  00A5               	movwf	LCD_Write_Int@value+1
  6487  058E  0021               	movlb	1	; select bank1
  6488  058F  0859               	movf	_errorValue^(0+128),w
  6489  0590  0020               	movlb	0	; select bank0
  6490  0591  00A4               	movwf	LCD_Write_Int@value
  6491  0592  3005               	movlw	5
  6492  0593  0021               	movlb	1	; select bank1
  6493  0594  00A0               	movwf	??_main^(0+128)
  6494  0595  0820               	movf	??_main^(0+128),w
  6495  0596  0020               	movlb	0	; select bank0
  6496  0597  00A6               	movwf	LCD_Write_Int@fieldLength
  6497  0598  01A7               	clrf	LCD_Write_Int@numPlaces
  6498  0599  01A8               	clrf	LCD_Write_Int@sign
  6499  059A  318D  2522  3185   	fcall	_LCD_Write_Int
  6500                           
  6501                           ;main.c: 118: LCD_Write_Char(' ');
  6502  059D  3020               	movlw	32
  6503  059E  3197  272D  3185   	fcall	_LCD_Write_Char
  6504                           
  6505                           ;main.c: 119: LCD_Write_Char(' ');
  6506  05A1  3020               	movlw	32
  6507  05A2  3197  272D  3185   	fcall	_LCD_Write_Char
  6508                           
  6509                           ;main.c: 120: { LCD_Set_Cursor(8,0); LCD_Write_Int(integralValue,5, 0, 0);};
  6510  05A5  01F4               	clrf	LCD_Set_Cursor@y
  6511  05A6  3008               	movlw	8
  6512  05A7  3188  200E  3185   	fcall	_LCD_Set_Cursor
  6513  05AA  0021               	movlb	1	; select bank1
  6514  05AB  085C               	movf	(_integralValue+1)^(0+128),w
  6515  05AC  0020               	movlb	0	; select bank0
  6516  05AD  00A5               	movwf	LCD_Write_Int@value+1
  6517  05AE  0021               	movlb	1	; select bank1
  6518  05AF  085B               	movf	_integralValue^(0+128),w
  6519  05B0  0020               	movlb	0	; select bank0
  6520  05B1  00A4               	movwf	LCD_Write_Int@value
  6521  05B2  3005               	movlw	5
  6522  05B3  0021               	movlb	1	; select bank1
  6523  05B4  00A0               	movwf	??_main^(0+128)
  6524  05B5  0820               	movf	??_main^(0+128),w
  6525  05B6  0020               	movlb	0	; select bank0
  6526  05B7  00A6               	movwf	LCD_Write_Int@fieldLength
  6527  05B8  01A7               	clrf	LCD_Write_Int@numPlaces
  6528  05B9  01A8               	clrf	LCD_Write_Int@sign
  6529  05BA  318D  2522  3185   	fcall	_LCD_Write_Int
  6530                           
  6531                           ;main.c: 121: LCD_Write_Char(' ');
  6532  05BD  3020               	movlw	32
  6533  05BE  3197  272D  3185   	fcall	_LCD_Write_Char
  6534                           
  6535                           ;main.c: 122: LCD_Write_Char(' ');
  6536  05C1  3020               	movlw	32
  6537  05C2  3197  272D  3185   	fcall	_LCD_Write_Char
  6538                           
  6539                           ;main.c: 124: { LCD_Set_Cursor(0,1); LCD_Write_Int(derivativeValue,5, 0, 0);};
  6540  05C5  01F4               	clrf	LCD_Set_Cursor@y
  6541  05C6  0AF4               	incf	LCD_Set_Cursor@y,f
  6542  05C7  3000               	movlw	0
  6543  05C8  3188  200E  3185   	fcall	_LCD_Set_Cursor
  6544  05CB  0021               	movlb	1	; select bank1
  6545  05CC  0858               	movf	(_derivativeValue+1)^(0+128),w
  6546  05CD  0020               	movlb	0	; select bank0
  6547  05CE  00A5               	movwf	LCD_Write_Int@value+1
  6548  05CF  0021               	movlb	1	; select bank1
  6549  05D0  0857               	movf	_derivativeValue^(0+128),w
  6550  05D1  0020               	movlb	0	; select bank0
  6551  05D2  00A4               	movwf	LCD_Write_Int@value
  6552  05D3  3005               	movlw	5
  6553  05D4  0021               	movlb	1	; select bank1
  6554  05D5  00A0               	movwf	??_main^(0+128)
  6555  05D6  0820               	movf	??_main^(0+128),w
  6556  05D7  0020               	movlb	0	; select bank0
  6557  05D8  00A6               	movwf	LCD_Write_Int@fieldLength
  6558  05D9  01A7               	clrf	LCD_Write_Int@numPlaces
  6559  05DA  01A8               	clrf	LCD_Write_Int@sign
  6560  05DB  318D  2522  3185   	fcall	_LCD_Write_Int
  6561                           
  6562                           ;main.c: 125: LCD_Write_Char(' ');
  6563  05DE  3020               	movlw	32
  6564  05DF  3197  272D  3185   	fcall	_LCD_Write_Char
  6565                           
  6566                           ;main.c: 126: { LCD_Set_Cursor(6,1); LCD_Write_Int(analogs[1],4, 1, 0);};
  6567  05E2  01F4               	clrf	LCD_Set_Cursor@y
  6568  05E3  0AF4               	incf	LCD_Set_Cursor@y,f
  6569  05E4  3006               	movlw	6
  6570  05E5  3188  200E  3185   	fcall	_LCD_Set_Cursor
  6571  05E8  0021               	movlb	1	; select bank1
  6572  05E9  0852               	movf	((main@analogs+1)^(0+128)+2),w
  6573  05EA  0020               	movlb	0	; select bank0
  6574  05EB  00A5               	movwf	LCD_Write_Int@value+1
  6575  05EC  0021               	movlb	1	; select bank1
  6576  05ED  0851               	movf	(main@analogs^(0+128)+2),w
  6577  05EE  0020               	movlb	0	; select bank0
  6578  05EF  00A4               	movwf	LCD_Write_Int@value
  6579  05F0  3004               	movlw	4
  6580  05F1  0021               	movlb	1	; select bank1
  6581  05F2  00A0               	movwf	??_main^(0+128)
  6582  05F3  0820               	movf	??_main^(0+128),w
  6583  05F4  0020               	movlb	0	; select bank0
  6584  05F5  00A6               	movwf	LCD_Write_Int@fieldLength
  6585  05F6  01A7               	clrf	LCD_Write_Int@numPlaces
  6586  05F7  0AA7               	incf	LCD_Write_Int@numPlaces,f
  6587  05F8  01A8               	clrf	LCD_Write_Int@sign
  6588  05F9  318D  2522  3185   	fcall	_LCD_Write_Int
  6589                           
  6590                           ;main.c: 127: { LCD_Set_Cursor(12,1); LCD_Write_Int(dutyCycle6,4, 0, 0);};
  6591  05FC  01F4               	clrf	LCD_Set_Cursor@y
  6592  05FD  0AF4               	incf	LCD_Set_Cursor@y,f
  6593  05FE  300C               	movlw	12
  6594  05FF  3188  200E  3185   	fcall	_LCD_Set_Cursor
  6595  0602  0021               	movlb	1	; select bank1
  6596  0603  084E               	movf	(main@dutyCycle6+1)^(0+128),w
  6597  0604  0020               	movlb	0	; select bank0
  6598  0605  00A5               	movwf	LCD_Write_Int@value+1
  6599  0606  0021               	movlb	1	; select bank1
  6600  0607  084D               	movf	main@dutyCycle6^(0+128),w
  6601  0608  0020               	movlb	0	; select bank0
  6602  0609  00A4               	movwf	LCD_Write_Int@value
  6603  060A  3004               	movlw	4
  6604  060B  0021               	movlb	1	; select bank1
  6605  060C  00A0               	movwf	??_main^(0+128)
  6606  060D  0820               	movf	??_main^(0+128),w
  6607  060E  0020               	movlb	0	; select bank0
  6608  060F  00A6               	movwf	LCD_Write_Int@fieldLength
  6609  0610  01A7               	clrf	LCD_Write_Int@numPlaces
  6610  0611  01A8               	clrf	LCD_Write_Int@sign
  6611  0612  318D  2522  3185   	fcall	_LCD_Write_Int
  6612                           
  6613                           ;main.c: 143: if(holdOutput==0)
  6614  0615  0021               	movlb	1	; select bank1
  6615  0616  0841               	movf	main@holdOutput^(0+128),w
  6616  0617  1D03               	btfss	3,2
  6617  0618  2EBA               	goto	l3236
  6618                           
  6619                           ;main.c: 144: {
  6620                           ;main.c: 145: output = PID_Calculate(setpoint[0],analogs[1]);
  6621  0619  0867               	movf	(_setpoint+1)^(0+128),w
  6622  061A  0020               	movlb	0	; select bank0
  6623  061B  00A5               	movwf	PID_Calculate@setpoint+1
  6624  061C  0021               	movlb	1	; select bank1
  6625  061D  0866               	movf	_setpoint^(0+128),w
  6626  061E  0020               	movlb	0	; select bank0
  6627  061F  00A4               	movwf	PID_Calculate@setpoint
  6628  0620  0021               	movlb	1	; select bank1
  6629  0621  0852               	movf	((main@analogs+1)^(0+128)+2),w
  6630  0622  0020               	movlb	0	; select bank0
  6631  0623  00A7               	movwf	PID_Calculate@temp+1
  6632  0624  0021               	movlb	1	; select bank1
  6633  0625  0851               	movf	(main@analogs^(0+128)+2),w
  6634  0626  0020               	movlb	0	; select bank0
  6635  0627  00A6               	movwf	PID_Calculate@temp
  6636  0628  3181  219B  3185   	fcall	_PID_Calculate
  6637  062B  0020               	movlb	0	; select bank0
  6638  062C  0825               	movf	?_PID_Calculate+1,w
  6639  062D  0021               	movlb	1	; select bank1
  6640  062E  00C0               	movwf	(main@output+1)^(0+128)
  6641  062F  0020               	movlb	0	; select bank0
  6642  0630  0824               	movf	?_PID_Calculate,w
  6643  0631  0021               	movlb	1	; select bank1
  6644  0632  00BF               	movwf	main@output^(0+128)
  6645                           
  6646                           ;main.c: 146: outputTotal = outputTotal - outputSamples[outputIndex];
  6647  0633  0849               	movf	main@outputTotal^(0+128),w
  6648  0634  00A0               	movwf	??_main^(0+128)
  6649  0635  084A               	movf	(main@outputTotal+1)^(0+128),w
  6650  0636  00A1               	movwf	(??_main^(0+128)+1)
  6651  0637  084B               	movf	(main@outputTotal+2)^(0+128),w
  6652  0638  00A2               	movwf	(??_main^(0+128)+2)
  6653  0639  084C               	movf	(main@outputTotal+3)^(0+128),w
  6654  063A  00A3               	movwf	(??_main^(0+128)+3)
  6655  063B  3553               	lslf	main@outputIndex^(0+128),w
  6656  063C  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6657  063D  0086               	movwf	6
  6658  063E  0187               	clrf	7
  6659  063F  3F40               	moviw [0]fsr1
  6660  0640  00A4               	movwf	(??_main+4)^(0+128)
  6661  0641  3F41               	moviw [1]fsr1
  6662  0642  00A5               	movwf	((??_main+4)^(0+128)+1)
  6663  0643  0824               	movf	(??_main+4)^(0+128),w
  6664  0644  00A6               	movwf	(??_main+6)^(0+128)
  6665  0645  0825               	movf	(??_main+5)^(0+128),w
  6666  0646  00A7               	movwf	((??_main+6)^(0+128)+1)
  6667  0647  3000               	movlw	0
  6668  0648  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6669  0649  30FF               	movlw	255
  6670  064A  00A8               	movwf	((??_main+6)^(0+128)+2)
  6671  064B  00A9               	movwf	((??_main+6)^(0+128)+3)
  6672  064C  09A6               	comf	(??_main+6)^(0+128),f
  6673  064D  09A7               	comf	((??_main+6)^(0+128)+1),f
  6674  064E  09A8               	comf	((??_main+6)^(0+128)+2),f
  6675  064F  09A9               	comf	((??_main+6)^(0+128)+3),f
  6676  0650  0AA6               	incf	(??_main+6)^(0+128),f
  6677  0651  1903               	skipnz
  6678  0652  0AA7               	incf	((??_main+6)^(0+128)+1),f
  6679  0653  1903               	skipnz
  6680  0654  0AA8               	incf	((??_main+6)^(0+128)+2),f
  6681  0655  1903               	skipnz
  6682  0656  0AA9               	incf	((??_main+6)^(0+128)+3),f
  6683  0657  0826               	movf	(??_main+6)^(0+128),w
  6684  0658  07A0               	addwf	??_main^(0+128),f
  6685  0659  0827               	movf	(??_main+7)^(0+128),w
  6686  065A  3DA1               	addwfc	(??_main^(0+128)+1),f
  6687  065B  0828               	movf	(??_main+8)^(0+128),w
  6688  065C  3DA2               	addwfc	(??_main^(0+128)+2),f
  6689  065D  0829               	movf	(??_main+9)^(0+128),w
  6690  065E  3DA3               	addwfc	(??_main^(0+128)+3),f
  6691  065F  0823               	movf	(??_main+3)^(0+128),w
  6692  0660  00CC               	movwf	(main@outputTotal+3)^(0+128)
  6693  0661  0822               	movf	(??_main+2)^(0+128),w
  6694  0662  00CB               	movwf	(main@outputTotal+2)^(0+128)
  6695  0663  0821               	movf	(??_main+1)^(0+128),w
  6696  0664  00CA               	movwf	(main@outputTotal+1)^(0+128)
  6697  0665  0820               	movf	??_main^(0+128),w
  6698  0666  00C9               	movwf	main@outputTotal^(0+128)
  6699                           
  6700                           ;main.c: 147: outputSamples[outputIndex] = output;
  6701  0667  3553               	lslf	main@outputIndex^(0+128),w
  6702  0668  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6703  0669  0086               	movwf	6
  6704  066A  0187               	clrf	7
  6705  066B  083F               	movf	main@output^(0+128),w
  6706  066C  3FC0               	movwi [0]fsr1
  6707  066D  0840               	movf	(main@output+1)^(0+128),w
  6708  066E  3FC1               	movwi [1]fsr1
  6709                           
  6710                           ;main.c: 148: outputTotal = outputTotal + outputSamples[outputIndex];
  6711  066F  0849               	movf	main@outputTotal^(0+128),w
  6712  0670  00A0               	movwf	??_main^(0+128)
  6713  0671  084A               	movf	(main@outputTotal+1)^(0+128),w
  6714  0672  00A1               	movwf	(??_main^(0+128)+1)
  6715  0673  084B               	movf	(main@outputTotal+2)^(0+128),w
  6716  0674  00A2               	movwf	(??_main^(0+128)+2)
  6717  0675  084C               	movf	(main@outputTotal+3)^(0+128),w
  6718  0676  00A3               	movwf	(??_main^(0+128)+3)
  6719  0677  3553               	lslf	main@outputIndex^(0+128),w
  6720  0678  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6721  0679  0086               	movwf	6
  6722  067A  0187               	clrf	7
  6723  067B  3F40               	moviw [0]fsr1
  6724  067C  00A4               	movwf	(??_main+4)^(0+128)
  6725  067D  3F41               	moviw [1]fsr1
  6726  067E  00A5               	movwf	((??_main+4)^(0+128)+1)
  6727  067F  0824               	movf	(??_main+4)^(0+128),w
  6728  0680  00A6               	movwf	(??_main+6)^(0+128)
  6729  0681  0825               	movf	(??_main+5)^(0+128),w
  6730  0682  00A7               	movwf	((??_main+6)^(0+128)+1)
  6731  0683  3000               	movlw	0
  6732  0684  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6733  0685  30FF               	movlw	255
  6734  0686  00A8               	movwf	((??_main+6)^(0+128)+2)
  6735  0687  00A9               	movwf	((??_main+6)^(0+128)+3)
  6736  0688  0826               	movf	(??_main+6)^(0+128),w
  6737  0689  07A0               	addwf	??_main^(0+128),f
  6738  068A  0827               	movf	(??_main+7)^(0+128),w
  6739  068B  3DA1               	addwfc	(??_main^(0+128)+1),f
  6740  068C  0828               	movf	(??_main+8)^(0+128),w
  6741  068D  3DA2               	addwfc	(??_main^(0+128)+2),f
  6742  068E  0829               	movf	(??_main+9)^(0+128),w
  6743  068F  3DA3               	addwfc	(??_main^(0+128)+3),f
  6744  0690  0823               	movf	(??_main+3)^(0+128),w
  6745  0691  00CC               	movwf	(main@outputTotal+3)^(0+128)
  6746  0692  0822               	movf	(??_main+2)^(0+128),w
  6747  0693  00CB               	movwf	(main@outputTotal+2)^(0+128)
  6748  0694  0821               	movf	(??_main+1)^(0+128),w
  6749  0695  00CA               	movwf	(main@outputTotal+1)^(0+128)
  6750  0696  0820               	movf	??_main^(0+128),w
  6751  0697  00C9               	movwf	main@outputTotal^(0+128)
  6752                           
  6753                           ;main.c: 149: dutyCycle6 = outputTotal/10;
  6754  0698  3000               	movlw	0
  6755  0699  00F3               	movwf	___aldiv@divisor+3
  6756  069A  3000               	movlw	0
  6757  069B  00F2               	movwf	___aldiv@divisor+2
  6758  069C  3000               	movlw	0
  6759  069D  00F1               	movwf	___aldiv@divisor+1
  6760  069E  300A               	movlw	10
  6761  069F  00F0               	movwf	___aldiv@divisor
  6762  06A0  084C               	movf	(main@outputTotal+3)^(0+128),w
  6763  06A1  00F7               	movwf	___aldiv@dividend+3
  6764  06A2  084B               	movf	(main@outputTotal+2)^(0+128),w
  6765  06A3  00F6               	movwf	___aldiv@dividend+2
  6766  06A4  084A               	movf	(main@outputTotal+1)^(0+128),w
  6767  06A5  00F5               	movwf	___aldiv@dividend+1
  6768  06A6  0849               	movf	main@outputTotal^(0+128),w
  6769  06A7  00F4               	movwf	___aldiv@dividend
  6770  06A8  3189  2186  3185   	fcall	___aldiv
  6771  06AB  0871               	movf	?___aldiv+1,w
  6772  06AC  0021               	movlb	1	; select bank1
  6773  06AD  00CE               	movwf	(main@dutyCycle6+1)^(0+128)
  6774  06AE  0870               	movf	?___aldiv,w
  6775  06AF  00CD               	movwf	main@dutyCycle6^(0+128)
  6776                           
  6777                           ;main.c: 151: outputIndex+=1;
  6778  06B0  3001               	movlw	1
  6779  06B1  00A0               	movwf	??_main^(0+128)
  6780  06B2  0820               	movf	??_main^(0+128),w
  6781  06B3  07D3               	addwf	main@outputIndex^(0+128),f
  6782                           
  6783                           ;main.c: 152: if(outputIndex >= 10)outputIndex = 0;
  6784  06B4  300A               	movlw	10
  6785  06B5  0253               	subwf	main@outputIndex^(0+128),w
  6786  06B6  1C03               	skipc
  6787  06B7  2EBE               	goto	l3240
  6788  06B8  01D3               	clrf	main@outputIndex^(0+128)
  6789                           
  6790                           ;main.c: 153: }
  6791  06B9  2EBE               	goto	l3240
  6792  06BA                     l3236:	
  6793                           
  6794                           ;main.c: 154: else
  6795                           ;main.c: 155: {
  6796                           ;main.c: 156: dutyCycle6=0;
  6797  06BA  01CD               	clrf	main@dutyCycle6^(0+128)
  6798  06BB  01CE               	clrf	(main@dutyCycle6+1)^(0+128)
  6799                           
  6800                           ;main.c: 157: holdOutput-=1;
  6801  06BC  3001               	movlw	1
  6802  06BD  02C1               	subwf	main@holdOutput^(0+128),f
  6803  06BE                     l3240:	
  6804                           
  6805                           ;main.c: 158: }
  6806                           ;main.c: 160: currentTemperature=analogs[1];
  6807  06BE  0852               	movf	((main@analogs+1)^(0+128)+2),w
  6808  06BF  00C8               	movwf	(main@currentTemperature+1)^(0+128)
  6809  06C0  0851               	movf	(main@analogs^(0+128)+2),w
  6810  06C1  00C7               	movwf	main@currentTemperature^(0+128)
  6811                           
  6812                           ;main.c: 162: if(lidOpenCount<10)
  6813  06C2  300A               	movlw	10
  6814  06C3  0242               	subwf	main@lidOpenCount^(0+128),w
  6815  06C4  1803               	skipnc
  6816  06C5  2ECB               	goto	l3246
  6817                           
  6818                           ;main.c: 163: {
  6819                           ;main.c: 164: lidOpenCount+=1;
  6820  06C6  3001               	movlw	1
  6821  06C7  00A0               	movwf	??_main^(0+128)
  6822  06C8  0820               	movf	??_main^(0+128),w
  6823  06C9  07C2               	addwf	main@lidOpenCount^(0+128),f
  6824                           
  6825                           ;main.c: 165: }
  6826  06CA  2ED0               	goto	l3250
  6827  06CB                     l3246:	
  6828                           
  6829                           ;main.c: 166: else
  6830                           ;main.c: 167: {
  6831                           ;main.c: 168: lastTemperature=currentTemperature;
  6832  06CB  0848               	movf	(main@currentTemperature+1)^(0+128),w
  6833  06CC  00C4               	movwf	(main@lastTemperature+1)^(0+128)
  6834  06CD  0847               	movf	main@currentTemperature^(0+128),w
  6835  06CE  00C3               	movwf	main@lastTemperature^(0+128)
  6836                           
  6837                           ;main.c: 169: lidOpenCount=0;
  6838  06CF  01C2               	clrf	main@lidOpenCount^(0+128)
  6839  06D0                     l3250:	
  6840                           
  6841                           ;main.c: 170: }
  6842                           ;main.c: 172: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6843  06D0  0947               	comf	main@currentTemperature^(0+128),w
  6844  06D1  00A0               	movwf	??_main^(0+128)
  6845  06D2  0948               	comf	(main@currentTemperature+1)^(0+128),w
  6846  06D3  00A1               	movwf	(??_main^(0+128)+1)
  6847  06D4  0AA0               	incf	??_main^(0+128),f
  6848  06D5  1903               	skipnz
  6849  06D6  0AA1               	incf	(??_main^(0+128)+1),f
  6850  06D7  0843               	movf	main@lastTemperature^(0+128),w
  6851  06D8  0720               	addwf	??_main^(0+128),w
  6852  06D9  00A2               	movwf	(??_main+2)^(0+128)
  6853  06DA  0844               	movf	(main@lastTemperature+1)^(0+128),w
  6854  06DB  3D21               	addwfc	(??_main+1)^(0+128),w
  6855  06DC  00A3               	movwf	(??_main+3)^(0+128)
  6856  06DD  0823               	movf	(??_main+3)^(0+128),w
  6857  06DE  3A80               	xorlw	128
  6858  06DF  00A4               	movwf	(??_main+4)^(0+128)
  6859  06E0  3080               	movlw	128
  6860  06E1  0224               	subwf	(??_main+4)^(0+128),w
  6861  06E2  1D03               	skipz
  6862  06E3  2EE6               	goto	u3795
  6863  06E4  3065               	movlw	101
  6864  06E5  0222               	subwf	(??_main+2)^(0+128),w
  6865  06E6                     u3795:	
  6866  06E6  1803               	skipnc
  6867  06E7  2F01               	goto	l3254
  6868  06E8  0021               	movlb	1	; select bank1
  6869  06E9  0947               	comf	main@currentTemperature^(0+128),w
  6870  06EA  00A0               	movwf	??_main^(0+128)
  6871  06EB  0948               	comf	(main@currentTemperature+1)^(0+128),w
  6872  06EC  00A1               	movwf	(??_main^(0+128)+1)
  6873  06ED  0AA0               	incf	??_main^(0+128),f
  6874  06EE  1903               	skipnz
  6875  06EF  0AA1               	incf	(??_main^(0+128)+1),f
  6876  06F0  0843               	movf	main@lastTemperature^(0+128),w
  6877  06F1  0720               	addwf	??_main^(0+128),w
  6878  06F2  00A2               	movwf	(??_main+2)^(0+128)
  6879  06F3  0844               	movf	(main@lastTemperature+1)^(0+128),w
  6880  06F4  3D21               	addwfc	(??_main+1)^(0+128),w
  6881  06F5  00A3               	movwf	(??_main+3)^(0+128)
  6882  06F6  0823               	movf	(??_main+3)^(0+128),w
  6883  06F7  3A80               	xorlw	128
  6884  06F8  00A4               	movwf	(??_main+4)^(0+128)
  6885  06F9  307F               	movlw	127
  6886  06FA  0224               	subwf	(??_main+4)^(0+128),w
  6887  06FB  1D03               	skipz
  6888  06FC  2EFF               	goto	u3805
  6889  06FD  309C               	movlw	156
  6890  06FE  0222               	subwf	(??_main+2)^(0+128),w
  6891  06FF                     u3805:	
  6892  06FF  1803               	skipnc
  6893  0700  2F08               	goto	l3258
  6894  0701                     l3254:	
  6895                           
  6896                           ;main.c: 173: {
  6897                           ;main.c: 174: dutyCycle6=0;
  6898  0701  0021               	movlb	1	; select bank1
  6899  0702  01CD               	clrf	main@dutyCycle6^(0+128)
  6900  0703  01CE               	clrf	(main@dutyCycle6+1)^(0+128)
  6901                           
  6902                           ;main.c: 175: holdOutput=5;
  6903  0704  3005               	movlw	5
  6904  0705  00A0               	movwf	??_main^(0+128)
  6905  0706  0820               	movf	??_main^(0+128),w
  6906  0707  00C1               	movwf	main@holdOutput^(0+128)
  6907  0708                     l3258:	
  6908                           
  6909                           ;main.c: 176: }
  6910                           ;main.c: 178: if(dutyCycle6<50)dutyCycle6=0;
  6911  0708  3000               	movlw	0
  6912  0709  0021               	movlb	1	; select bank1
  6913  070A  024E               	subwf	(main@dutyCycle6+1)^(0+128),w
  6914  070B  3032               	movlw	50
  6915  070C  1903               	skipnz
  6916  070D  024D               	subwf	main@dutyCycle6^(0+128),w
  6917  070E  1803               	skipnc
  6918  070F  2F12               	goto	l447
  6919  0710  01CD               	clrf	main@dutyCycle6^(0+128)
  6920  0711  01CE               	clrf	(main@dutyCycle6+1)^(0+128)
  6921  0712                     l447:	
  6922                           
  6923                           ;main.c: 180: loop=0;
  6924  0712  01EE               	clrf	_loop^(0+128)
  6925  0713                     l3262:	
  6926                           
  6927                           ;main.c: 181: }
  6928                           ;main.c: 183: pidPeriodCounter+=1;
  6929  0713  3001               	movlw	1
  6930  0714  07C5               	addwf	main@pidPeriodCounter^(0+128),f
  6931  0715  3000               	movlw	0
  6932  0716  3DC6               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  6933                           
  6934                           ;main.c: 185: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6935  0717  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  6936  0718  3A80               	xorlw	128
  6937  0719  00A0               	movwf	??_main^(0+128)
  6938  071A  0846               	movf	(main@pidPeriodCounter+1)^(0+128),w
  6939  071B  3A80               	xorlw	128
  6940  071C  0220               	subwf	??_main^(0+128),w
  6941  071D  1D03               	skipz
  6942  071E  2F21               	goto	u3825
  6943  071F  0845               	movf	main@pidPeriodCounter^(0+128),w
  6944  0720  026C               	subwf	_pidMaxOutput^(0+128),w
  6945  0721                     u3825:	
  6946  0721  1803               	skipnc
  6947  0722  2F26               	goto	l3268
  6948  0723  0021               	movlb	1	; select bank1
  6949  0724  01C5               	clrf	main@pidPeriodCounter^(0+128)
  6950  0725  01C6               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6951  0726                     l3268:	
  6952                           
  6953                           ;main.c: 187: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  6954  0726  0021               	movlb	1	; select bank1
  6955  0727  084E               	movf	(main@dutyCycle6+1)^(0+128),w
  6956  0728  0246               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  6957  0729  1D03               	skipz
  6958  072A  2F2D               	goto	u3835
  6959  072B  084D               	movf	main@dutyCycle6^(0+128),w
  6960  072C  0245               	subwf	main@pidPeriodCounter^(0+128),w
  6961  072D                     u3835:	
  6962  072D  1803               	skipnc
  6963  072E  2F32               	goto	l449
  6964  072F  0020               	movlb	0	; select bank0
  6965  0730  1518               	bsf	24,2	;volatile
  6966  0731  2F34               	goto	l3272
  6967  0732                     l449:	
  6968                           
  6969                           ;main.c: 188: else LATC2=0;
  6970  0732  0020               	movlb	0	; select bank0
  6971  0733  1118               	bcf	24,2	;volatile
  6972  0734                     l3272:	
  6973                           
  6974                           ;main.c: 190: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  6975  0734  0021               	movlb	1	; select bank1
  6976  0735  01D4               	clrf	main@j^(0+128)
  6977  0736  3002               	movlw	2
  6978  0737  0254               	subwf	main@j^(0+128),w
  6979  0738  1803               	btfsc	3,0
  6980  0739  2F5A               	goto	l3284
  6981  073A                     l3278:	
  6982  073A  0854               	movf	main@j^(0+128),w
  6983  073B  00A0               	movwf	??_main^(0+128)
  6984  073C  01A1               	clrf	(??_main^(0+128)+1)
  6985  073D  0820               	movf	??_main^(0+128),w
  6986  073E  0020               	movlb	0	; select bank0
  6987  073F  00A6               	movwf	readAnalog@channel
  6988  0740  0021               	movlb	1	; select bank1
  6989  0741  0821               	movf	(??_main+1)^(0+128),w
  6990  0742  0020               	movlb	0	; select bank0
  6991  0743  00A7               	movwf	readAnalog@channel+1
  6992  0744  3180  207B  3185   	fcall	_readAnalog
  6993  0747  0021               	movlb	1	; select bank1
  6994  0748  3554               	lslf	main@j^(0+128),w
  6995  0749  3ECF               	addlw	(low (main@analogs| 0))& (0+255)
  6996  074A  0086               	movwf	6
  6997  074B  0187               	clrf	7
  6998  074C  0020               	movlb	0	; select bank0
  6999  074D  0826               	movf	?_readAnalog,w
  7000  074E  3FC0               	movwi [0]fsr1
  7001  074F  0827               	movf	?_readAnalog+1,w
  7002  0750  3FC1               	movwi [1]fsr1
  7003  0751  3001               	movlw	1
  7004  0752  0021               	movlb	1	; select bank1
  7005  0753  00A0               	movwf	??_main^(0+128)
  7006  0754  0820               	movf	??_main^(0+128),w
  7007  0755  07D4               	addwf	main@j^(0+128),f
  7008  0756  3002               	movlw	2
  7009  0757  0254               	subwf	main@j^(0+128),w
  7010  0758  1C03               	skipc
  7011  0759  2F3A               	goto	l3278
  7012  075A                     l3284:	
  7013                           
  7014                           ;main.c: 192: analogs[0]=tempCalc(analogs[0]);
  7015  075A  0850               	movf	(main@analogs+1)^(0+128),w
  7016  075B  0020               	movlb	0	; select bank0
  7017  075C  00DE               	movwf	tempCalc@analogValue+1
  7018  075D  0021               	movlb	1	; select bank1
  7019  075E  084F               	movf	main@analogs^(0+128),w
  7020  075F  0020               	movlb	0	; select bank0
  7021  0760  00DD               	movwf	tempCalc@analogValue
  7022  0761  318E  26E3  3185   	fcall	_tempCalc
  7023  0764  0020               	movlb	0	; select bank0
  7024  0765  085E               	movf	?_tempCalc+1,w
  7025  0766  0021               	movlb	1	; select bank1
  7026  0767  00D0               	movwf	(main@analogs+1)^(0+128)
  7027  0768  0020               	movlb	0	; select bank0
  7028  0769  085D               	movf	?_tempCalc,w
  7029  076A  0021               	movlb	1	; select bank1
  7030  076B  00CF               	movwf	main@analogs^(0+128)
  7031                           
  7032                           ;main.c: 194: analogs[1]=tempCalc(analogs[1]);
  7033  076C  0852               	movf	((main@analogs+1)^(0+128)+2),w
  7034  076D  0020               	movlb	0	; select bank0
  7035  076E  00DE               	movwf	tempCalc@analogValue+1
  7036  076F  0021               	movlb	1	; select bank1
  7037  0770  0851               	movf	(main@analogs^(0+128)+2),w
  7038  0771  0020               	movlb	0	; select bank0
  7039  0772  00DD               	movwf	tempCalc@analogValue
  7040  0773  318E  26E3  3185   	fcall	_tempCalc
  7041  0776  0020               	movlb	0	; select bank0
  7042  0777  085E               	movf	?_tempCalc+1,w
  7043  0778  0021               	movlb	1	; select bank1
  7044  0779  00D2               	movwf	((main@analogs+1)^(0+128)+2)
  7045  077A  0020               	movlb	0	; select bank0
  7046  077B  085D               	movf	?_tempCalc,w
  7047  077C  0021               	movlb	1	; select bank1
  7048  077D  00D1               	movwf	(main@analogs^(0+128)+2)
  7049                           
  7050                           ;main.c: 197: if(RB2==1)
  7051  077E  0020               	movlb	0	; select bank0
  7052  077F  1D0D               	btfss	13,2	;volatile
  7053  0780  2FC0               	goto	l3304
  7054                           
  7055                           ;main.c: 198: {
  7056                           ;main.c: 199: TRISC2 = 1;
  7057  0781  1513               	bsf	19,2	;volatile
  7058                           
  7059                           ;main.c: 200: LCD_Clear();
  7060  0782  3195  25D0  3185   	fcall	_LCD_Clear
  7061                           
  7062                           ;main.c: 201: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7063  0785  01F4               	clrf	LCD_Set_Cursor@y
  7064  0786  3000               	movlw	0
  7065  0787  3188  200E  3185   	fcall	_LCD_Set_Cursor
  7066  078A  301B               	movlw	low (STR_6| (0+32768))
  7067  078B  00F5               	movwf	LCD_Write_String@a
  7068  078C  3090               	movlw	high (STR_6| (0+32768))
  7069  078D  00F6               	movwf	LCD_Write_String@a+1
  7070  078E  3196  2670  3185   	fcall	_LCD_Write_String
  7071                           
  7072                           ;main.c: 202: { LCD_Set_Cursor(0,1); LCD_Write_String("Enter Key to Set");};
  7073  0791  01F4               	clrf	LCD_Set_Cursor@y
  7074  0792  0AF4               	incf	LCD_Set_Cursor@y,f
  7075  0793  3000               	movlw	0
  7076  0794  3188  200E  3185   	fcall	_LCD_Set_Cursor
  7077  0797  302C               	movlw	low (STR_7| (0+32768))
  7078  0798  00F5               	movwf	LCD_Write_String@a
  7079  0799  3090               	movlw	high (STR_7| (0+32768))
  7080  079A  00F6               	movwf	LCD_Write_String@a+1
  7081  079B  3196  2670  3185   	fcall	_LCD_Write_String
  7082                           
  7083                           ;main.c: 203: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7084  079E  303D               	movlw	61
  7085  079F  0021               	movlb	1	; select bank1
  7086  07A0  00A2               	movwf	(??_main^(0+128)+2)
  7087  07A1  30E1               	movlw	225
  7088  07A2  00A1               	movwf	(??_main^(0+128)+1)
  7089  07A3  307A               	movlw	122
  7090  07A4  00A0               	movwf	??_main^(0+128)
  7091  07A5                     u3887:	
  7092  07A5  0BA0               	decfsz	??_main^(0+128),f
  7093  07A6  2FA5               	goto	u3887
  7094  07A7  0BA1               	decfsz	(??_main^(0+128)+1),f
  7095  07A8  2FA5               	goto	u3887
  7096  07A9  0BA2               	decfsz	(??_main^(0+128)+2),f
  7097  07AA  2FA5               	goto	u3887
  7098  07AB  3200               	nop2
  7099                           
  7100                           ;main.c: 204: LCD_Clear();
  7101  07AC  3195  25D0  3185   	fcall	_LCD_Clear
  7102                           
  7103                           ;main.c: 205: menuChoice();
  7104  07AF  3182  22EE  3185   	fcall	_menuChoice
  7105                           
  7106                           ;main.c: 206: _delay((unsigned long)((500)*(32000000/4000.0)));
  7107  07B2  3015               	movlw	21
  7108  07B3  0021               	movlb	1	; select bank1
  7109  07B4  00A2               	movwf	(??_main^(0+128)+2)
  7110  07B5  304B               	movlw	75
  7111  07B6  00A1               	movwf	(??_main^(0+128)+1)
  7112  07B7  30D1               	movlw	209
  7113  07B8  00A0               	movwf	??_main^(0+128)
  7114  07B9                     u3897:	
  7115  07B9  0BA0               	decfsz	??_main^(0+128),f
  7116  07BA  2FB9               	goto	u3897
  7117  07BB  0BA1               	decfsz	(??_main^(0+128)+1),f
  7118  07BC  2FB9               	goto	u3897
  7119  07BD  0BA2               	decfsz	(??_main^(0+128)+2),f
  7120  07BE  2FB9               	goto	u3897
  7121  07BF  0000               	nop
  7122  07C0                     l3304:	
  7123                           
  7124                           ;main.c: 207: }
  7125                           ;main.c: 443: loop+=1;
  7126  07C0  3001               	movlw	1
  7127  07C1  0021               	movlb	1	; select bank1
  7128  07C2  00A0               	movwf	??_main^(0+128)
  7129  07C3  0820               	movf	??_main^(0+128),w
  7130  07C4  07EE               	addwf	_loop^(0+128),f
  7131  07C5  2D79               	goto	l3194
  7132  07C6                     __end_of_main:	
  7133                           
  7134                           	psect	text1
  7135  0EE3                     __ptext1:	
  7136 ;; *************** function _tempCalc *****************
  7137 ;; Defined at:
  7138 ;;		line 4 in file "tempCalc.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  analogValue     2   61[BANK0 ] int 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;  steinhart       3   69[BANK0 ] float 
  7143 ;;  R               3   63[BANK0 ] float 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  2   61[BANK0 ] int 
  7146 ;; Registers used:
  7147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;Total ram usage:       11 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:    4
  7160 ;; This function calls:
  7161 ;;		___awtoft
  7162 ;;		___ftadd
  7163 ;;		___ftdiv
  7164 ;;		___ftmul
  7165 ;;		___ftsub
  7166 ;;		___fttol
  7167 ;;		_log
  7168 ;; This function is called by:
  7169 ;;		_main
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           
  7174                           ;psect for function _tempCalc
  7175  0EE3                     _tempCalc:	
  7176                           
  7177                           ;tempCalc.c: 6: float R, steinhart;
  7178                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7179                           
  7180                           ;incstack = 0
  7181                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7182  0EE3  3000               	movlw	0
  7183  0EE4  0020               	movlb	0	; select bank0
  7184  0EE5  00C0               	movwf	___ftadd@f1
  7185  0EE6  3080               	movlw	128
  7186  0EE7  00C1               	movwf	___ftadd@f1+1
  7187  0EE8  30BF               	movlw	191
  7188  0EE9  00C2               	movwf	___ftadd@f1+2
  7189  0EEA  085E               	movf	tempCalc@analogValue+1,w
  7190  0EEB  00F9               	movwf	___awtoft@c+1
  7191  0EEC  085D               	movf	tempCalc@analogValue,w
  7192  0EED  00F8               	movwf	___awtoft@c
  7193  0EEE  3196  26C3  318E   	fcall	___awtoft
  7194  0EF1  0878               	movf	?___awtoft,w
  7195  0EF2  0020               	movlb	0	; select bank0
  7196  0EF3  00B0               	movwf	___ftdiv@f2
  7197  0EF4  0879               	movf	?___awtoft+1,w
  7198  0EF5  00B1               	movwf	___ftdiv@f2+1
  7199  0EF6  087A               	movf	?___awtoft+2,w
  7200  0EF7  00B2               	movwf	___ftdiv@f2+2
  7201  0EF8  30C0               	movlw	192
  7202  0EF9  00B3               	movwf	___ftdiv@f1
  7203  0EFA  307F               	movlw	127
  7204  0EFB  00B4               	movwf	___ftdiv@f1+1
  7205  0EFC  3044               	movlw	68
  7206  0EFD  00B5               	movwf	___ftdiv@f1+2
  7207  0EFE  318B  2315  318E   	fcall	___ftdiv
  7208  0F01  0020               	movlb	0	; select bank0
  7209  0F02  0830               	movf	?___ftdiv,w
  7210  0F03  00C3               	movwf	___ftadd@f2
  7211  0F04  0831               	movf	?___ftdiv+1,w
  7212  0F05  00C4               	movwf	___ftadd@f2+1
  7213  0F06  0832               	movf	?___ftdiv+2,w
  7214  0F07  00C5               	movwf	___ftadd@f2+2
  7215  0F08  318D  25ED  318E   	fcall	___ftadd
  7216  0F0B  0020               	movlb	0	; select bank0
  7217  0F0C  0840               	movf	?___ftadd,w
  7218  0F0D  00E2               	movwf	_tempCalc$1015
  7219  0F0E  0841               	movf	?___ftadd+1,w
  7220  0F0F  00E3               	movwf	_tempCalc$1015+1
  7221  0F10  0842               	movf	?___ftadd+2,w
  7222  0F11  00E4               	movwf	_tempCalc$1015+2
  7223                           
  7224                           ;tempCalc.c: 6: float R, steinhart;
  7225                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7226  0F12  0862               	movf	_tempCalc$1015,w
  7227  0F13  00B0               	movwf	___ftdiv@f2
  7228  0F14  0863               	movf	_tempCalc$1015+1,w
  7229  0F15  00B1               	movwf	___ftdiv@f2+1
  7230  0F16  0864               	movf	_tempCalc$1015+2,w
  7231  0F17  00B2               	movwf	___ftdiv@f2+2
  7232  0F18  3088               	movlw	136
  7233  0F19  00B3               	movwf	___ftdiv@f1
  7234  0F1A  301A               	movlw	26
  7235  0F1B  00B4               	movwf	___ftdiv@f1+1
  7236  0F1C  3046               	movlw	70
  7237  0F1D  00B5               	movwf	___ftdiv@f1+2
  7238  0F1E  318B  2315  318E   	fcall	___ftdiv
  7239  0F21  0020               	movlb	0	; select bank0
  7240  0F22  0830               	movf	?___ftdiv,w
  7241  0F23  00DF               	movwf	tempCalc@R
  7242  0F24  0831               	movf	?___ftdiv+1,w
  7243  0F25  00E0               	movwf	tempCalc@R+1
  7244  0F26  0832               	movf	?___ftdiv+2,w
  7245  0F27  00E1               	movwf	tempCalc@R+2
  7246                           
  7247                           ;tempCalc.c: 10: steinhart = R /9990;
  7248  0F28  3018               	movlw	24
  7249  0F29  00B0               	movwf	___ftdiv@f2
  7250  0F2A  301C               	movlw	28
  7251  0F2B  00B1               	movwf	___ftdiv@f2+1
  7252  0F2C  3046               	movlw	70
  7253  0F2D  00B2               	movwf	___ftdiv@f2+2
  7254  0F2E  085F               	movf	tempCalc@R,w
  7255  0F2F  00B3               	movwf	___ftdiv@f1
  7256  0F30  0860               	movf	tempCalc@R+1,w
  7257  0F31  00B4               	movwf	___ftdiv@f1+1
  7258  0F32  0861               	movf	tempCalc@R+2,w
  7259  0F33  00B5               	movwf	___ftdiv@f1+2
  7260  0F34  318B  2315  318E   	fcall	___ftdiv
  7261  0F37  0020               	movlb	0	; select bank0
  7262  0F38  0830               	movf	?___ftdiv,w
  7263  0F39  00E5               	movwf	tempCalc@steinhart
  7264  0F3A  0831               	movf	?___ftdiv+1,w
  7265  0F3B  00E6               	movwf	tempCalc@steinhart+1
  7266  0F3C  0832               	movf	?___ftdiv+2,w
  7267  0F3D  00E7               	movwf	tempCalc@steinhart+2
  7268                           
  7269                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7270  0F3E  0865               	movf	tempCalc@steinhart,w
  7271  0F3F  00D7               	movwf	log@x
  7272  0F40  0866               	movf	tempCalc@steinhart+1,w
  7273  0F41  00D8               	movwf	log@x+1
  7274  0F42  0867               	movf	tempCalc@steinhart+2,w
  7275  0F43  00D9               	movwf	log@x+2
  7276  0F44  318B  23BE  318E   	fcall	_log
  7277  0F47  0020               	movlb	0	; select bank0
  7278  0F48  0857               	movf	?_log,w
  7279  0F49  00E5               	movwf	tempCalc@steinhart
  7280  0F4A  0858               	movf	?_log+1,w
  7281  0F4B  00E6               	movwf	tempCalc@steinhart+1
  7282  0F4C  0859               	movf	?_log+2,w
  7283  0F4D  00E7               	movwf	tempCalc@steinhart+2
  7284                           
  7285                           ;tempCalc.c: 12: steinhart /= 4030;
  7286  0F4E  30E0               	movlw	224
  7287  0F4F  00B0               	movwf	___ftdiv@f2
  7288  0F50  307B               	movlw	123
  7289  0F51  00B1               	movwf	___ftdiv@f2+1
  7290  0F52  3045               	movlw	69
  7291  0F53  00B2               	movwf	___ftdiv@f2+2
  7292  0F54  0865               	movf	tempCalc@steinhart,w
  7293  0F55  00B3               	movwf	___ftdiv@f1
  7294  0F56  0866               	movf	tempCalc@steinhart+1,w
  7295  0F57  00B4               	movwf	___ftdiv@f1+1
  7296  0F58  0867               	movf	tempCalc@steinhart+2,w
  7297  0F59  00B5               	movwf	___ftdiv@f1+2
  7298  0F5A  318B  2315  318E   	fcall	___ftdiv
  7299  0F5D  0020               	movlb	0	; select bank0
  7300  0F5E  0830               	movf	?___ftdiv,w
  7301  0F5F  00E5               	movwf	tempCalc@steinhart
  7302  0F60  0831               	movf	?___ftdiv+1,w
  7303  0F61  00E6               	movwf	tempCalc@steinhart+1
  7304  0F62  0832               	movf	?___ftdiv+2,w
  7305  0F63  00E7               	movwf	tempCalc@steinhart+2
  7306                           
  7307                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  7308  0F64  30CF               	movlw	207
  7309  0F65  00C0               	movwf	___ftadd@f1
  7310  0F66  305B               	movlw	91
  7311  0F67  00C1               	movwf	___ftadd@f1+1
  7312  0F68  303B               	movlw	59
  7313  0F69  00C2               	movwf	___ftadd@f1+2
  7314  0F6A  0865               	movf	tempCalc@steinhart,w
  7315  0F6B  00C3               	movwf	___ftadd@f2
  7316  0F6C  0866               	movf	tempCalc@steinhart+1,w
  7317  0F6D  00C4               	movwf	___ftadd@f2+1
  7318  0F6E  0867               	movf	tempCalc@steinhart+2,w
  7319  0F6F  00C5               	movwf	___ftadd@f2+2
  7320  0F70  318D  25ED  318E   	fcall	___ftadd
  7321  0F73  0020               	movlb	0	; select bank0
  7322  0F74  0840               	movf	?___ftadd,w
  7323  0F75  00E5               	movwf	tempCalc@steinhart
  7324  0F76  0841               	movf	?___ftadd+1,w
  7325  0F77  00E6               	movwf	tempCalc@steinhart+1
  7326  0F78  0842               	movf	?___ftadd+2,w
  7327  0F79  00E7               	movwf	tempCalc@steinhart+2
  7328                           
  7329                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  7330  0F7A  0865               	movf	tempCalc@steinhart,w
  7331  0F7B  00B0               	movwf	___ftdiv@f2
  7332  0F7C  0866               	movf	tempCalc@steinhart+1,w
  7333  0F7D  00B1               	movwf	___ftdiv@f2+1
  7334  0F7E  0867               	movf	tempCalc@steinhart+2,w
  7335  0F7F  00B2               	movwf	___ftdiv@f2+2
  7336  0F80  3000               	movlw	0
  7337  0F81  00B3               	movwf	___ftdiv@f1
  7338  0F82  3080               	movlw	128
  7339  0F83  00B4               	movwf	___ftdiv@f1+1
  7340  0F84  303F               	movlw	63
  7341  0F85  00B5               	movwf	___ftdiv@f1+2
  7342  0F86  318B  2315  318E   	fcall	___ftdiv
  7343  0F89  0020               	movlb	0	; select bank0
  7344  0F8A  0830               	movf	?___ftdiv,w
  7345  0F8B  00E5               	movwf	tempCalc@steinhart
  7346  0F8C  0831               	movf	?___ftdiv+1,w
  7347  0F8D  00E6               	movwf	tempCalc@steinhart+1
  7348  0F8E  0832               	movf	?___ftdiv+2,w
  7349  0F8F  00E7               	movwf	tempCalc@steinhart+2
  7350                           
  7351                           ;tempCalc.c: 17: steinhart -= 273.15;
  7352  0F90  3093               	movlw	147
  7353  0F91  00CD               	movwf	___ftsub@f2
  7354  0F92  3088               	movlw	136
  7355  0F93  00CE               	movwf	___ftsub@f2+1
  7356  0F94  3043               	movlw	67
  7357  0F95  00CF               	movwf	___ftsub@f2+2
  7358  0F96  0865               	movf	tempCalc@steinhart,w
  7359  0F97  00D0               	movwf	___ftsub@f1
  7360  0F98  0866               	movf	tempCalc@steinhart+1,w
  7361  0F99  00D1               	movwf	___ftsub@f1+1
  7362  0F9A  0867               	movf	tempCalc@steinhart+2,w
  7363  0F9B  00D2               	movwf	___ftsub@f1+2
  7364  0F9C  3196  26A5  318E   	fcall	___ftsub
  7365  0F9F  0020               	movlb	0	; select bank0
  7366  0FA0  084D               	movf	?___ftsub,w
  7367  0FA1  00E5               	movwf	tempCalc@steinhart
  7368  0FA2  084E               	movf	?___ftsub+1,w
  7369  0FA3  00E6               	movwf	tempCalc@steinhart+1
  7370  0FA4  084F               	movf	?___ftsub+2,w
  7371  0FA5  00E7               	movwf	tempCalc@steinhart+2
  7372                           
  7373                           ;tempCalc.c: 19: steinhart*=10;
  7374  0FA6  3000               	movlw	0
  7375  0FA7  00A0               	movwf	___ftmul@f1
  7376  0FA8  3020               	movlw	32
  7377  0FA9  00A1               	movwf	___ftmul@f1+1
  7378  0FAA  3041               	movlw	65
  7379  0FAB  00A2               	movwf	___ftmul@f1+2
  7380  0FAC  0865               	movf	tempCalc@steinhart,w
  7381  0FAD  00A3               	movwf	___ftmul@f2
  7382  0FAE  0866               	movf	tempCalc@steinhart+1,w
  7383  0FAF  00A4               	movwf	___ftmul@f2+1
  7384  0FB0  0867               	movf	tempCalc@steinhart+2,w
  7385  0FB1  00A5               	movwf	___ftmul@f2+2
  7386  0FB2  318C  246E  318E   	fcall	___ftmul
  7387  0FB5  0020               	movlb	0	; select bank0
  7388  0FB6  0820               	movf	?___ftmul,w
  7389  0FB7  00E5               	movwf	tempCalc@steinhart
  7390  0FB8  0821               	movf	?___ftmul+1,w
  7391  0FB9  00E6               	movwf	tempCalc@steinhart+1
  7392  0FBA  0822               	movf	?___ftmul+2,w
  7393  0FBB  00E7               	movwf	tempCalc@steinhart+2
  7394                           
  7395                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  7396  0FBC  3000               	movlw	0
  7397  0FBD  00C0               	movwf	___ftadd@f1
  7398  0FBE  30A0               	movlw	160
  7399  0FBF  00C1               	movwf	___ftadd@f1+1
  7400  0FC0  3043               	movlw	67
  7401  0FC1  00C2               	movwf	___ftadd@f1+2
  7402  0FC2  3000               	movlw	0
  7403  0FC3  00B0               	movwf	___ftdiv@f2
  7404  0FC4  30A0               	movlw	160
  7405  0FC5  00B1               	movwf	___ftdiv@f2+1
  7406  0FC6  3040               	movlw	64
  7407  0FC7  00B2               	movwf	___ftdiv@f2+2
  7408  0FC8  3000               	movlw	0
  7409  0FC9  00A0               	movwf	___ftmul@f1
  7410  0FCA  3010               	movlw	16
  7411  0FCB  00A1               	movwf	___ftmul@f1+1
  7412  0FCC  3041               	movlw	65
  7413  0FCD  00A2               	movwf	___ftmul@f1+2
  7414  0FCE  0865               	movf	tempCalc@steinhart,w
  7415  0FCF  00A3               	movwf	___ftmul@f2
  7416  0FD0  0866               	movf	tempCalc@steinhart+1,w
  7417  0FD1  00A4               	movwf	___ftmul@f2+1
  7418  0FD2  0867               	movf	tempCalc@steinhart+2,w
  7419  0FD3  00A5               	movwf	___ftmul@f2+2
  7420  0FD4  318C  246E  318E   	fcall	___ftmul
  7421  0FD7  0020               	movlb	0	; select bank0
  7422  0FD8  0820               	movf	?___ftmul,w
  7423  0FD9  00B3               	movwf	___ftdiv@f1
  7424  0FDA  0821               	movf	?___ftmul+1,w
  7425  0FDB  00B4               	movwf	___ftdiv@f1+1
  7426  0FDC  0822               	movf	?___ftmul+2,w
  7427  0FDD  00B5               	movwf	___ftdiv@f1+2
  7428  0FDE  318B  2315  318E   	fcall	___ftdiv
  7429  0FE1  0020               	movlb	0	; select bank0
  7430  0FE2  0830               	movf	?___ftdiv,w
  7431  0FE3  00C3               	movwf	___ftadd@f2
  7432  0FE4  0831               	movf	?___ftdiv+1,w
  7433  0FE5  00C4               	movwf	___ftadd@f2+1
  7434  0FE6  0832               	movf	?___ftdiv+2,w
  7435  0FE7  00C5               	movwf	___ftadd@f2+2
  7436  0FE8  318D  25ED  318E   	fcall	___ftadd
  7437  0FEB  0020               	movlb	0	; select bank0
  7438  0FEC  0840               	movf	?___ftadd,w
  7439  0FED  00E5               	movwf	tempCalc@steinhart
  7440  0FEE  0841               	movf	?___ftadd+1,w
  7441  0FEF  00E6               	movwf	tempCalc@steinhart+1
  7442  0FF0  0842               	movf	?___ftadd+2,w
  7443  0FF1  00E7               	movwf	tempCalc@steinhart+2
  7444                           
  7445                           ;tempCalc.c: 23: return (int)steinhart;
  7446  0FF2  0865               	movf	tempCalc@steinhart,w
  7447  0FF3  00F0               	movwf	___fttol@f1
  7448  0FF4  0866               	movf	tempCalc@steinhart+1,w
  7449  0FF5  00F1               	movwf	___fttol@f1+1
  7450  0FF6  0867               	movf	tempCalc@steinhart+2,w
  7451  0FF7  00F2               	movwf	___fttol@f1+2
  7452  0FF8  318A  2208         	fcall	___fttol
  7453  0FFA  0871               	movf	?___fttol+1,w
  7454  0FFB  0020               	movlb	0	; select bank0
  7455  0FFC  00DE               	movwf	?_tempCalc+1
  7456  0FFD  0870               	movf	?___fttol,w
  7457  0FFE  00DD               	movwf	?_tempCalc
  7458  0FFF  0008               	return
  7459  1000                     __end_of_tempCalc:	
  7460                           
  7461                           	psect	text2
  7462  0BBE                     __ptext2:	
  7463 ;; *************** function _log *****************
  7464 ;; Defined at:
  7465 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  x               3   55[BANK0 ] int 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;  exponent        2   59[BANK0 ] int 
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  3   55[BANK0 ] int 
  7472 ;; Registers used:
  7473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7479 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;Total ram usage:        6 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    3
  7486 ;; This function calls:
  7487 ;;		___awtoft
  7488 ;;		___ftadd
  7489 ;;		___ftge
  7490 ;;		___ftmul
  7491 ;;		_eval_poly
  7492 ;;		_frexp
  7493 ;; This function is called by:
  7494 ;;		_tempCalc
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           
  7499                           ;psect for function _log
  7500  0BBE                     _log:	
  7501                           
  7502                           ;incstack = 0
  7503                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7504  0BBE  0020               	movlb	0	; select bank0
  7505  0BBF  0857               	movf	log@x,w
  7506  0BC0  00F0               	movwf	___ftge@ff1
  7507  0BC1  0858               	movf	log@x+1,w
  7508  0BC2  00F1               	movwf	___ftge@ff1+1
  7509  0BC3  0859               	movf	log@x+2,w
  7510  0BC4  00F2               	movwf	___ftge@ff1+2
  7511  0BC5  3000               	movlw	0
  7512  0BC6  00F3               	movwf	___ftge@ff2
  7513  0BC7  3000               	movlw	0
  7514  0BC8  00F4               	movwf	___ftge@ff2+1
  7515  0BC9  3000               	movlw	0
  7516  0BCA  00F5               	movwf	___ftge@ff2+2
  7517  0BCB  3197  278A  318B   	fcall	___ftge
  7518  0BCE  1803               	btfsc	3,0
  7519  0BCF  2BDD               	goto	l2726
  7520  0BD0  3021               	movlw	33
  7521  0BD1  0022               	movlb	2	; select bank2
  7522  0BD2  00C7               	movwf	_errno^(0+256)
  7523  0BD3  3000               	movlw	0
  7524  0BD4  00C8               	movwf	(_errno^(0+256)+1)
  7525  0BD5  3000               	movlw	0
  7526  0BD6  0020               	movlb	0	; select bank0
  7527  0BD7  00D7               	movwf	?_log
  7528  0BD8  3000               	movlw	0
  7529  0BD9  00D8               	movwf	?_log+1
  7530  0BDA  3000               	movlw	0
  7531  0BDB  00D9               	movwf	?_log+2
  7532  0BDC  0008               	return
  7533  0BDD                     l2726:	
  7534  0BDD  0020               	movlb	0	; select bank0
  7535  0BDE  0859               	movf	log@x+2,w
  7536  0BDF  0458               	iorwf	log@x+1,w
  7537  0BE0  0457               	iorwf	log@x,w
  7538  0BE1  1D03               	skipz
  7539  0BE2  2BF0               	goto	l2732
  7540  0BE3  3022               	movlw	34
  7541  0BE4  0022               	movlb	2	; select bank2
  7542  0BE5  00C7               	movwf	_errno^(0+256)
  7543  0BE6  3000               	movlw	0
  7544  0BE7  00C8               	movwf	(_errno^(0+256)+1)
  7545  0BE8  3000               	movlw	0
  7546  0BE9  0020               	movlb	0	; select bank0
  7547  0BEA  00D7               	movwf	?_log
  7548  0BEB  3000               	movlw	0
  7549  0BEC  00D8               	movwf	?_log+1
  7550  0BED  3000               	movlw	0
  7551  0BEE  00D9               	movwf	?_log+2
  7552  0BEF  0008               	return
  7553  0BF0                     l2732:	
  7554  0BF0  3000               	movlw	0
  7555  0BF1  00C0               	movwf	___ftadd@f1
  7556  0BF2  3080               	movlw	128
  7557  0BF3  00C1               	movwf	___ftadd@f1+1
  7558  0BF4  30BF               	movlw	191
  7559  0BF5  00C2               	movwf	___ftadd@f1+2
  7560  0BF6  3000               	movlw	0
  7561  0BF7  00A0               	movwf	___ftmul@f1
  7562  0BF8  3000               	movlw	0
  7563  0BF9  00A1               	movwf	___ftmul@f1+1
  7564  0BFA  3040               	movlw	64
  7565  0BFB  00A2               	movwf	___ftmul@f1+2
  7566  0BFC  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7567  0BFD  00DA               	movwf	??_log
  7568  0BFE  085A               	movf	??_log,w
  7569  0BFF  00F3               	movwf	frexp@eptr
  7570  0C00  0857               	movf	log@x,w
  7571  0C01  00F0               	movwf	frexp@value
  7572  0C02  0858               	movf	log@x+1,w
  7573  0C03  00F1               	movwf	frexp@value+1
  7574  0C04  0859               	movf	log@x+2,w
  7575  0C05  00F2               	movwf	frexp@value+2
  7576  0C06  3197  27C5  318B   	fcall	_frexp
  7577  0C09  0870               	movf	?_frexp,w
  7578  0C0A  0020               	movlb	0	; select bank0
  7579  0C0B  00A3               	movwf	___ftmul@f2
  7580  0C0C  0871               	movf	?_frexp+1,w
  7581  0C0D  00A4               	movwf	___ftmul@f2+1
  7582  0C0E  0872               	movf	?_frexp+2,w
  7583  0C0F  00A5               	movwf	___ftmul@f2+2
  7584  0C10  318C  246E  318B   	fcall	___ftmul
  7585  0C13  0020               	movlb	0	; select bank0
  7586  0C14  0820               	movf	?___ftmul,w
  7587  0C15  00C3               	movwf	___ftadd@f2
  7588  0C16  0821               	movf	?___ftmul+1,w
  7589  0C17  00C4               	movwf	___ftadd@f2+1
  7590  0C18  0822               	movf	?___ftmul+2,w
  7591  0C19  00C5               	movwf	___ftadd@f2+2
  7592  0C1A  318D  25ED  318B   	fcall	___ftadd
  7593  0C1D  0020               	movlb	0	; select bank0
  7594  0C1E  0840               	movf	?___ftadd,w
  7595  0C1F  00D7               	movwf	log@x
  7596  0C20  0841               	movf	?___ftadd+1,w
  7597  0C21  00D8               	movwf	log@x+1
  7598  0C22  0842               	movf	?___ftadd+2,w
  7599  0C23  00D9               	movwf	log@x+2
  7600  0C24  30FF               	movlw	255
  7601  0C25  07DB               	addwf	log@exponent,f
  7602  0C26  30FF               	movlw	255
  7603  0C27  3DDC               	addwfc	log@exponent+1,f
  7604  0C28  0857               	movf	log@x,w
  7605  0C29  00CD               	movwf	eval_poly@x
  7606  0C2A  0858               	movf	log@x+1,w
  7607  0C2B  00CE               	movwf	eval_poly@x+1
  7608  0C2C  0859               	movf	log@x+2,w
  7609  0C2D  00CF               	movwf	eval_poly@x+2
  7610  0C2E  3000               	movlw	low (log@coeff| (0+32768))
  7611  0C2F  00D0               	movwf	eval_poly@d
  7612  0C30  3090               	movlw	high (log@coeff| (0+32768))
  7613  0C31  00D1               	movwf	eval_poly@d+1
  7614  0C32  3008               	movlw	8
  7615  0C33  00D2               	movwf	eval_poly@n
  7616  0C34  3000               	movlw	0
  7617  0C35  00D3               	movwf	eval_poly@n+1
  7618  0C36  3189  2126  318B   	fcall	_eval_poly
  7619  0C39  0020               	movlb	0	; select bank0
  7620  0C3A  084D               	movf	?_eval_poly,w
  7621  0C3B  00D7               	movwf	log@x
  7622  0C3C  084E               	movf	?_eval_poly+1,w
  7623  0C3D  00D8               	movwf	log@x+1
  7624  0C3E  084F               	movf	?_eval_poly+2,w
  7625  0C3F  00D9               	movwf	log@x+2
  7626  0C40  0857               	movf	log@x,w
  7627  0C41  00C0               	movwf	___ftadd@f1
  7628  0C42  0858               	movf	log@x+1,w
  7629  0C43  00C1               	movwf	___ftadd@f1+1
  7630  0C44  0859               	movf	log@x+2,w
  7631  0C45  00C2               	movwf	___ftadd@f1+2
  7632  0C46  3072               	movlw	114
  7633  0C47  00A0               	movwf	___ftmul@f1
  7634  0C48  3031               	movlw	49
  7635  0C49  00A1               	movwf	___ftmul@f1+1
  7636  0C4A  303F               	movlw	63
  7637  0C4B  00A2               	movwf	___ftmul@f1+2
  7638  0C4C  085C               	movf	log@exponent+1,w
  7639  0C4D  00F9               	movwf	___awtoft@c+1
  7640  0C4E  085B               	movf	log@exponent,w
  7641  0C4F  00F8               	movwf	___awtoft@c
  7642  0C50  3196  26C3  318B   	fcall	___awtoft
  7643  0C53  0878               	movf	?___awtoft,w
  7644  0C54  0020               	movlb	0	; select bank0
  7645  0C55  00A3               	movwf	___ftmul@f2
  7646  0C56  0879               	movf	?___awtoft+1,w
  7647  0C57  00A4               	movwf	___ftmul@f2+1
  7648  0C58  087A               	movf	?___awtoft+2,w
  7649  0C59  00A5               	movwf	___ftmul@f2+2
  7650  0C5A  318C  246E  318B   	fcall	___ftmul
  7651  0C5D  0020               	movlb	0	; select bank0
  7652  0C5E  0820               	movf	?___ftmul,w
  7653  0C5F  00C3               	movwf	___ftadd@f2
  7654  0C60  0821               	movf	?___ftmul+1,w
  7655  0C61  00C4               	movwf	___ftadd@f2+1
  7656  0C62  0822               	movf	?___ftmul+2,w
  7657  0C63  00C5               	movwf	___ftadd@f2+2
  7658  0C64  318D  25ED         	fcall	___ftadd
  7659  0C66  0020               	movlb	0	; select bank0
  7660  0C67  0840               	movf	?___ftadd,w
  7661  0C68  00D7               	movwf	?_log
  7662  0C69  0841               	movf	?___ftadd+1,w
  7663  0C6A  00D8               	movwf	?_log+1
  7664  0C6B  0842               	movf	?___ftadd+2,w
  7665  0C6C  00D9               	movwf	?_log+2
  7666  0C6D  0008               	return
  7667  0C6E                     __end_of_log:	
  7668                           
  7669                           	psect	text3
  7670  17C5                     __ptext3:	
  7671 ;; *************** function _frexp *****************
  7672 ;; Defined at:
  7673 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  value           3    0[COMMON] int 
  7676 ;;  eptr            1    3[COMMON] PTR int 
  7677 ;;		 -> log@exponent(2), 
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  3    0[COMMON] PTR int 
  7682 ;; Registers used:
  7683 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7692 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7693 ;;Total ram usage:        6 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_log
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           
  7703                           ;psect for function _frexp
  7704  17C5                     _frexp:	
  7705                           
  7706                           ;incstack = 0
  7707                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7708  17C5  0872               	movf	frexp@value+2,w
  7709  17C6  0471               	iorwf	frexp@value+1,w
  7710  17C7  0470               	iorwf	frexp@value,w
  7711  17C8  1D03               	skipz
  7712  17C9  2FD7               	goto	l2476
  7713  17CA  0873               	movf	frexp@eptr,w
  7714  17CB  0086               	movwf	6
  7715  17CC  0187               	clrf	7
  7716  17CD  3000               	movlw	0
  7717  17CE  3FC0               	movwi [0]fsr1
  7718  17CF  3FC1               	movwi [1]fsr1
  7719  17D0  3000               	movlw	0
  7720  17D1  00F0               	movwf	?_frexp
  7721  17D2  3000               	movlw	0
  7722  17D3  00F1               	movwf	?_frexp+1
  7723  17D4  3000               	movlw	0
  7724  17D5  00F2               	movwf	?_frexp+2
  7725  17D6  0008               	return
  7726  17D7                     l2476:	
  7727  17D7  0872               	movf	frexp@value+2,w
  7728  17D8  397F               	andlw	127
  7729  17D9  00F4               	movwf	??_frexp
  7730  17DA  01F5               	clrf	??_frexp+1
  7731  17DB  35F4               	lslf	??_frexp,f
  7732  17DC  0DF5               	rlf	??_frexp+1,f
  7733  17DD  0873               	movf	frexp@eptr,w
  7734  17DE  0086               	movwf	6
  7735  17DF  0187               	clrf	7
  7736  17E0  0874               	movf	??_frexp,w
  7737  17E1  3FC0               	movwi [0]fsr1
  7738  17E2  0875               	movf	??_frexp+1,w
  7739  17E3  3FC1               	movwi [1]fsr1
  7740  17E4  0D71               	rlf	frexp@value+1,w
  7741  17E5  0D71               	rlf	frexp@value+1,w
  7742  17E6  3901               	andlw	1
  7743  17E7  00F4               	movwf	??_frexp
  7744  17E8  01F5               	clrf	??_frexp+1
  7745  17E9  0873               	movf	frexp@eptr,w
  7746  17EA  0086               	movwf	6
  7747  17EB  0187               	clrf	7
  7748  17EC  0874               	movf	??_frexp,w
  7749  17ED  0481               	iorwf	1,f
  7750  17EE  3141               	addfsr 1,1
  7751  17EF  0875               	movf	??_frexp+1,w
  7752  17F0  0481               	iorwf	1,f
  7753  17F1  0873               	movf	frexp@eptr,w
  7754  17F2  0086               	movwf	6
  7755  17F3  0187               	clrf	7
  7756  17F4  3082               	movlw	130
  7757  17F5  0781               	addwf	1,f
  7758  17F6  3141               	addfsr 1,1
  7759  17F7  30FF               	movlw	255
  7760  17F8  3D81               	addwfc	1,f
  7761  17F9  317F               	addfsr 1,-1
  7762  17FA  0872               	movf	frexp@value+2,w
  7763  17FB  3980               	andlw	-128
  7764  17FC  383F               	iorlw	63
  7765  17FD  00F2               	movwf	frexp@value+2
  7766  17FE  13F1               	bcf	frexp@value+1,7
  7767  17FF  0008               	return
  7768  1800                     __end_of_frexp:	
  7769                           
  7770                           	psect	text4
  7771  0926                     __ptext4:	
  7772 ;; *************** function _eval_poly *****************
  7773 ;; Defined at:
  7774 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  x               3   45[BANK0 ] PTR int 
  7777 ;;  d               2   48[BANK0 ] PTR const 
  7778 ;;		 -> log@coeff(27), 
  7779 ;;  n               2   50[BANK0 ] int 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;  res             3   52[BANK0 ] int 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  3   45[BANK0 ] int 
  7784 ;; Registers used:
  7785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7791 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7794 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7795 ;;Total ram usage:       10 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:    2
  7798 ;; This function calls:
  7799 ;;		___ftadd
  7800 ;;		___ftmul
  7801 ;;		___wmul
  7802 ;; This function is called by:
  7803 ;;		_log
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           
  7808                           ;psect for function _eval_poly
  7809  0926                     _eval_poly:	
  7810                           
  7811                           ;incstack = 0
  7812                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7813  0926  0020               	movlb	0	; select bank0
  7814  0927  0853               	movf	eval_poly@n+1,w
  7815  0928  00F1               	movwf	___wmul@multiplier+1
  7816  0929  0852               	movf	eval_poly@n,w
  7817  092A  00F0               	movwf	___wmul@multiplier
  7818  092B  3003               	movlw	3
  7819  092C  00F2               	movwf	___wmul@multiplicand
  7820  092D  3000               	movlw	0
  7821  092E  00F3               	movwf	___wmul@multiplicand+1
  7822  092F  3196  268A  3189   	fcall	___wmul
  7823  0932  0020               	movlb	0	; select bank0
  7824  0933  0850               	movf	eval_poly@d,w
  7825  0934  0770               	addwf	?___wmul,w
  7826  0935  0084               	movwf	4
  7827  0936  0851               	movf	eval_poly@d+1,w
  7828  0937  3D71               	addwfc	?___wmul+1,w
  7829  0938  0085               	movwf	5
  7830  0939  3F00               	moviw [0]fsr0
  7831  093A  00D4               	movwf	eval_poly@res
  7832  093B  3F01               	moviw [1]fsr0
  7833  093C  00D5               	movwf	eval_poly@res+1
  7834  093D  3F02               	moviw [2]fsr0
  7835  093E                     L1:	
  7836  093E  00D6               	movwf	eval_poly@res+2
  7837  093F  0852               	movf	eval_poly@n,w
  7838  0940  0453               	iorwf	eval_poly@n+1,w
  7839  0941  1903               	btfsc	3,2
  7840  0942  297F               	goto	l2494
  7841  0943  30FF               	movlw	255
  7842  0944  07D2               	addwf	eval_poly@n,f
  7843  0945  30FF               	movlw	255
  7844  0946  3DD3               	addwfc	eval_poly@n+1,f
  7845  0947  0853               	movf	eval_poly@n+1,w
  7846  0948  00F1               	movwf	___wmul@multiplier+1
  7847  0949  0852               	movf	eval_poly@n,w
  7848  094A  00F0               	movwf	___wmul@multiplier
  7849  094B  3003               	movlw	3
  7850  094C  00F2               	movwf	___wmul@multiplicand
  7851  094D  3000               	movlw	0
  7852  094E  00F3               	movwf	___wmul@multiplicand+1
  7853  094F  3196  268A  3189   	fcall	___wmul
  7854  0952  0020               	movlb	0	; select bank0
  7855  0953  0850               	movf	eval_poly@d,w
  7856  0954  0770               	addwf	?___wmul,w
  7857  0955  0084               	movwf	4
  7858  0956  0851               	movf	eval_poly@d+1,w
  7859  0957  3D71               	addwfc	?___wmul+1,w
  7860  0958  0085               	movwf	5
  7861  0959  3F00               	moviw [0]fsr0
  7862  095A  00C0               	movwf	___ftadd@f1
  7863  095B  3F01               	moviw [1]fsr0
  7864  095C  00C1               	movwf	___ftadd@f1+1
  7865  095D  3F02               	moviw [2]fsr0
  7866  095E  00C2               	movwf	___ftadd@f1+2
  7867  095F  0854               	movf	eval_poly@res,w
  7868  0960  00A0               	movwf	___ftmul@f1
  7869  0961  0855               	movf	eval_poly@res+1,w
  7870  0962  00A1               	movwf	___ftmul@f1+1
  7871  0963  0856               	movf	eval_poly@res+2,w
  7872  0964  00A2               	movwf	___ftmul@f1+2
  7873  0965  084D               	movf	eval_poly@x,w
  7874  0966  00A3               	movwf	___ftmul@f2
  7875  0967  084E               	movf	eval_poly@x+1,w
  7876  0968  00A4               	movwf	___ftmul@f2+1
  7877  0969  084F               	movf	eval_poly@x+2,w
  7878  096A  00A5               	movwf	___ftmul@f2+2
  7879  096B  318C  246E  3189   	fcall	___ftmul
  7880  096E  0020               	movlb	0	; select bank0
  7881  096F  0820               	movf	?___ftmul,w
  7882  0970  00C3               	movwf	___ftadd@f2
  7883  0971  0821               	movf	?___ftmul+1,w
  7884  0972  00C4               	movwf	___ftadd@f2+1
  7885  0973  0822               	movf	?___ftmul+2,w
  7886  0974  00C5               	movwf	___ftadd@f2+2
  7887  0975  318D  25ED  3189   	fcall	___ftadd
  7888  0978  0020               	movlb	0	; select bank0
  7889  0979  0840               	movf	?___ftadd,w
  7890  097A  00D4               	movwf	eval_poly@res
  7891  097B  0841               	movf	?___ftadd+1,w
  7892  097C  00D5               	movwf	eval_poly@res+1
  7893  097D  0842               	movf	?___ftadd+2,w
  7894  097E  293E               	goto	L1
  7895  097F                     l2494:	
  7896  097F  0854               	movf	eval_poly@res,w
  7897  0980  00CD               	movwf	?_eval_poly
  7898  0981  0855               	movf	eval_poly@res+1,w
  7899  0982  00CE               	movwf	?_eval_poly+1
  7900  0983  0856               	movf	eval_poly@res+2,w
  7901  0984  00CF               	movwf	?_eval_poly+2
  7902  0985  0008               	return
  7903  0986                     __end_of_eval_poly:	
  7904                           
  7905                           	psect	text5
  7906  0C6E                     __ptext5:	
  7907 ;; *************** function ___ftmul *****************
  7908 ;; Defined at:
  7909 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;  f1              3    0[BANK0 ] float 
  7912 ;;  f2              3    3[BANK0 ] float 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7915 ;;  sign            1   15[BANK0 ] unsigned char 
  7916 ;;  cntr            1   14[BANK0 ] unsigned char 
  7917 ;;  exp             1   10[BANK0 ] unsigned char 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  3    0[BANK0 ] float 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2, status,0, pclath, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;Total ram usage:       16 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    1
  7934 ;; This function calls:
  7935 ;;		___ftpack
  7936 ;; This function is called by:
  7937 ;;		_tempCalc
  7938 ;;		_log
  7939 ;;		_eval_poly
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function ___ftmul
  7945  0C6E                     ___ftmul:	
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7949  0C6E  0020               	movlb	0	; select bank0
  7950  0C6F  0820               	movf	___ftmul@f1,w
  7951  0C70  00A6               	movwf	??___ftmul
  7952  0C71  0821               	movf	___ftmul@f1+1,w
  7953  0C72  00A7               	movwf	??___ftmul+1
  7954  0C73  0822               	movf	___ftmul@f1+2,w
  7955  0C74  00A8               	movwf	??___ftmul+2
  7956  0C75  1003               	clrc
  7957  0C76  0D27               	rlf	??___ftmul+1,w
  7958  0C77  0D28               	rlf	??___ftmul+2,w
  7959  0C78  00A9               	movwf	??___ftmul+3
  7960  0C79  0829               	movf	??___ftmul+3,w
  7961  0C7A  00AA               	movwf	___ftmul@exp
  7962  0C7B  082A               	movf	___ftmul@exp,w
  7963  0C7C  1D03               	btfss	3,2
  7964  0C7D  2C85               	goto	l2280
  7965  0C7E  3000               	movlw	0
  7966  0C7F  00A0               	movwf	?___ftmul
  7967  0C80  3000               	movlw	0
  7968  0C81  00A1               	movwf	?___ftmul+1
  7969  0C82  3000               	movlw	0
  7970  0C83  00A2               	movwf	?___ftmul+2
  7971  0C84  0008               	return
  7972  0C85                     l2280:	
  7973  0C85  0823               	movf	___ftmul@f2,w
  7974  0C86  00A6               	movwf	??___ftmul
  7975  0C87  0824               	movf	___ftmul@f2+1,w
  7976  0C88  00A7               	movwf	??___ftmul+1
  7977  0C89  0825               	movf	___ftmul@f2+2,w
  7978  0C8A  00A8               	movwf	??___ftmul+2
  7979  0C8B  1003               	clrc
  7980  0C8C  0D27               	rlf	??___ftmul+1,w
  7981  0C8D  0D28               	rlf	??___ftmul+2,w
  7982  0C8E  00A9               	movwf	??___ftmul+3
  7983  0C8F  0829               	movf	??___ftmul+3,w
  7984  0C90  00AF               	movwf	___ftmul@sign
  7985  0C91  082F               	movf	___ftmul@sign,w
  7986  0C92  1D03               	btfss	3,2
  7987  0C93  2C9B               	goto	l2286
  7988  0C94  3000               	movlw	0
  7989  0C95  00A0               	movwf	?___ftmul
  7990  0C96  3000               	movlw	0
  7991  0C97  00A1               	movwf	?___ftmul+1
  7992  0C98  3000               	movlw	0
  7993  0C99  00A2               	movwf	?___ftmul+2
  7994  0C9A  0008               	return
  7995  0C9B                     l2286:	
  7996  0C9B  082F               	movf	___ftmul@sign,w
  7997  0C9C  3E7B               	addlw	123
  7998  0C9D  00A6               	movwf	??___ftmul
  7999  0C9E  0826               	movf	??___ftmul,w
  8000  0C9F  07AA               	addwf	___ftmul@exp,f
  8001  0CA0  0820               	movf	___ftmul@f1,w
  8002  0CA1  00A6               	movwf	??___ftmul
  8003  0CA2  0821               	movf	___ftmul@f1+1,w
  8004  0CA3  00A7               	movwf	??___ftmul+1
  8005  0CA4  0822               	movf	___ftmul@f1+2,w
  8006  0CA5  00A8               	movwf	??___ftmul+2
  8007  0CA6  3010               	movlw	16
  8008  0CA7                     u2395:	
  8009  0CA7  36A8               	lsrf	??___ftmul+2,f
  8010  0CA8  0CA7               	rrf	??___ftmul+1,f
  8011  0CA9  0CA6               	rrf	??___ftmul,f
  8012  0CAA  0B89               	decfsz	9,f
  8013  0CAB  2CA7               	goto	u2395
  8014  0CAC  0826               	movf	??___ftmul,w
  8015  0CAD  00A9               	movwf	??___ftmul+3
  8016  0CAE  0829               	movf	??___ftmul+3,w
  8017  0CAF  00AF               	movwf	___ftmul@sign
  8018  0CB0  0823               	movf	___ftmul@f2,w
  8019  0CB1  00A6               	movwf	??___ftmul
  8020  0CB2  0824               	movf	___ftmul@f2+1,w
  8021  0CB3  00A7               	movwf	??___ftmul+1
  8022  0CB4  0825               	movf	___ftmul@f2+2,w
  8023  0CB5  00A8               	movwf	??___ftmul+2
  8024  0CB6  3010               	movlw	16
  8025  0CB7                     u2405:	
  8026  0CB7  36A8               	lsrf	??___ftmul+2,f
  8027  0CB8  0CA7               	rrf	??___ftmul+1,f
  8028  0CB9  0CA6               	rrf	??___ftmul,f
  8029  0CBA  0B89               	decfsz	9,f
  8030  0CBB  2CB7               	goto	u2405
  8031  0CBC  0826               	movf	??___ftmul,w
  8032  0CBD  00A9               	movwf	??___ftmul+3
  8033  0CBE  0829               	movf	??___ftmul+3,w
  8034  0CBF  06AF               	xorwf	___ftmul@sign,f
  8035  0CC0  3080               	movlw	128
  8036  0CC1  00A6               	movwf	??___ftmul
  8037  0CC2  0826               	movf	??___ftmul,w
  8038  0CC3  05AF               	andwf	___ftmul@sign,f
  8039  0CC4  17A1               	bsf	___ftmul@f1+1,7
  8040  0CC5  17A4               	bsf	___ftmul@f2+1,7
  8041  0CC6  30FF               	movlw	255
  8042  0CC7  05A3               	andwf	___ftmul@f2,f
  8043  0CC8  30FF               	movlw	255
  8044  0CC9  05A4               	andwf	___ftmul@f2+1,f
  8045  0CCA  3000               	movlw	0
  8046  0CCB  05A5               	andwf	___ftmul@f2+2,f
  8047  0CCC  3000               	movlw	0
  8048  0CCD  00AB               	movwf	___ftmul@f3_as_product
  8049  0CCE  3000               	movlw	0
  8050  0CCF  00AC               	movwf	___ftmul@f3_as_product+1
  8051  0CD0  3000               	movlw	0
  8052  0CD1  00AD               	movwf	___ftmul@f3_as_product+2
  8053  0CD2  3007               	movlw	7
  8054  0CD3  00A6               	movwf	??___ftmul
  8055  0CD4  0826               	movf	??___ftmul,w
  8056  0CD5  00AE               	movwf	___ftmul@cntr
  8057  0CD6                     l2298:	
  8058  0CD6  1C20               	btfss	___ftmul@f1,0
  8059  0CD7  2CDE               	goto	l2302
  8060  0CD8  0823               	movf	___ftmul@f2,w
  8061  0CD9  07AB               	addwf	___ftmul@f3_as_product,f
  8062  0CDA  0824               	movf	___ftmul@f2+1,w
  8063  0CDB  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8064  0CDC  0825               	movf	___ftmul@f2+2,w
  8065  0CDD  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8066  0CDE                     l2302:	
  8067  0CDE  3001               	movlw	1
  8068  0CDF                     u2425:	
  8069  0CDF  36A2               	lsrf	___ftmul@f1+2,f
  8070  0CE0  0CA1               	rrf	___ftmul@f1+1,f
  8071  0CE1  0CA0               	rrf	___ftmul@f1,f
  8072  0CE2  0B89               	decfsz	9,f
  8073  0CE3  2CDF               	goto	u2425
  8074  0CE4  3001               	movlw	1
  8075  0CE5                     u2435:	
  8076  0CE5  35A3               	lslf	___ftmul@f2,f
  8077  0CE6  0DA4               	rlf	___ftmul@f2+1,f
  8078  0CE7  0DA5               	rlf	___ftmul@f2+2,f
  8079  0CE8  0B89               	decfsz	9,f
  8080  0CE9  2CE5               	goto	u2435
  8081  0CEA  3001               	movlw	1
  8082  0CEB  02AE               	subwf	___ftmul@cntr,f
  8083  0CEC  1D03               	btfss	3,2
  8084  0CED  2CD6               	goto	l2298
  8085  0CEE  3009               	movlw	9
  8086  0CEF  00A6               	movwf	??___ftmul
  8087  0CF0  0826               	movf	??___ftmul,w
  8088  0CF1  00AE               	movwf	___ftmul@cntr
  8089  0CF2                     l2310:	
  8090  0CF2  1C20               	btfss	___ftmul@f1,0
  8091  0CF3  2CFA               	goto	l2314
  8092  0CF4  0823               	movf	___ftmul@f2,w
  8093  0CF5  07AB               	addwf	___ftmul@f3_as_product,f
  8094  0CF6  0824               	movf	___ftmul@f2+1,w
  8095  0CF7  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8096  0CF8  0825               	movf	___ftmul@f2+2,w
  8097  0CF9  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8098  0CFA                     l2314:	
  8099  0CFA  3001               	movlw	1
  8100  0CFB                     u2465:	
  8101  0CFB  36A2               	lsrf	___ftmul@f1+2,f
  8102  0CFC  0CA1               	rrf	___ftmul@f1+1,f
  8103  0CFD  0CA0               	rrf	___ftmul@f1,f
  8104  0CFE  0B89               	decfsz	9,f
  8105  0CFF  2CFB               	goto	u2465
  8106  0D00  3001               	movlw	1
  8107  0D01                     u2475:	
  8108  0D01  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8109  0D02  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8110  0D03  0CAB               	rrf	___ftmul@f3_as_product,f
  8111  0D04  0B89               	decfsz	9,f
  8112  0D05  2D01               	goto	u2475
  8113  0D06  3001               	movlw	1
  8114  0D07  02AE               	subwf	___ftmul@cntr,f
  8115  0D08  1D03               	btfss	3,2
  8116  0D09  2CF2               	goto	l2310
  8117  0D0A  082B               	movf	___ftmul@f3_as_product,w
  8118  0D0B  00F0               	movwf	___ftpack@arg
  8119  0D0C  082C               	movf	___ftmul@f3_as_product+1,w
  8120  0D0D  00F1               	movwf	___ftpack@arg+1
  8121  0D0E  082D               	movf	___ftmul@f3_as_product+2,w
  8122  0D0F  00F2               	movwf	___ftpack@arg+2
  8123  0D10  082A               	movf	___ftmul@exp,w
  8124  0D11  00A6               	movwf	??___ftmul
  8125  0D12  0826               	movf	??___ftmul,w
  8126  0D13  00F3               	movwf	___ftpack@exp
  8127  0D14  082F               	movf	___ftmul@sign,w
  8128  0D15  00A7               	movwf	??___ftmul+1
  8129  0D16  0827               	movf	??___ftmul+1,w
  8130  0D17  00F4               	movwf	___ftpack@sign
  8131  0D18  3180  2017         	fcall	___ftpack
  8132  0D1A  0870               	movf	?___ftpack,w
  8133  0D1B  0020               	movlb	0	; select bank0
  8134  0D1C  00A0               	movwf	?___ftmul
  8135  0D1D  0871               	movf	?___ftpack+1,w
  8136  0D1E  00A1               	movwf	?___ftmul+1
  8137  0D1F  0872               	movf	?___ftpack+2,w
  8138  0D20  00A2               	movwf	?___ftmul+2
  8139  0D21  0008               	return
  8140  0D22                     __end_of___ftmul:	
  8141                           
  8142                           	psect	text6
  8143  178A                     __ptext6:	
  8144 ;; *************** function ___ftge *****************
  8145 ;; Defined at:
  8146 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;  ff1             3    0[COMMON] float 
  8149 ;;  ff2             3    3[COMMON] float 
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;		None
  8152 ;; Return value:  Size  Location     Type
  8153 ;;		None               void
  8154 ;; Registers used:
  8155 ;;		wreg, status,2, status,0
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8161 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;Total ram usage:        9 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; This function calls:
  8168 ;;		Nothing
  8169 ;; This function is called by:
  8170 ;;		_log
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           
  8175                           ;psect for function ___ftge
  8176  178A                     ___ftge:	
  8177                           
  8178                           ;incstack = 0
  8179                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8180  178A  1FF2               	btfss	___ftge@ff1+2,7
  8181  178B  2FA0               	goto	l2452
  8182  178C  0970               	comf	___ftge@ff1,w
  8183  178D  00F6               	movwf	??___ftge
  8184  178E  0971               	comf	___ftge@ff1+1,w
  8185  178F  00F7               	movwf	??___ftge+1
  8186  1790  0972               	comf	___ftge@ff1+2,w
  8187  1791  00F8               	movwf	??___ftge+2
  8188  1792  0AF6               	incf	??___ftge,f
  8189  1793  1903               	skipnz
  8190  1794  0AF7               	incf	??___ftge+1,f
  8191  1795  1903               	skipnz
  8192  1796  0AF8               	incf	??___ftge+2,f
  8193  1797  3000               	movlw	0
  8194  1798  0776               	addwf	??___ftge,w
  8195  1799  00F0               	movwf	___ftge@ff1
  8196  179A  3000               	movlw	0
  8197  179B  3D77               	addwfc	??___ftge+1,w
  8198  179C  00F1               	movwf	___ftge@ff1+1
  8199  179D  3080               	movlw	128
  8200  179E  3D78               	addwfc	??___ftge+2,w
  8201  179F  00F2               	movwf	___ftge@ff1+2
  8202  17A0                     l2452:	
  8203  17A0  1FF5               	btfss	___ftge@ff2+2,7
  8204  17A1  2FB6               	goto	l2456
  8205  17A2  0973               	comf	___ftge@ff2,w
  8206  17A3  00F6               	movwf	??___ftge
  8207  17A4  0974               	comf	___ftge@ff2+1,w
  8208  17A5  00F7               	movwf	??___ftge+1
  8209  17A6  0975               	comf	___ftge@ff2+2,w
  8210  17A7  00F8               	movwf	??___ftge+2
  8211  17A8  0AF6               	incf	??___ftge,f
  8212  17A9  1903               	skipnz
  8213  17AA  0AF7               	incf	??___ftge+1,f
  8214  17AB  1903               	skipnz
  8215  17AC  0AF8               	incf	??___ftge+2,f
  8216  17AD  3000               	movlw	0
  8217  17AE  0776               	addwf	??___ftge,w
  8218  17AF  00F3               	movwf	___ftge@ff2
  8219  17B0  3000               	movlw	0
  8220  17B1  3D77               	addwfc	??___ftge+1,w
  8221  17B2  00F4               	movwf	___ftge@ff2+1
  8222  17B3  3080               	movlw	128
  8223  17B4  3D78               	addwfc	??___ftge+2,w
  8224  17B5  00F5               	movwf	___ftge@ff2+2
  8225  17B6                     l2456:	
  8226  17B6  3080               	movlw	128
  8227  17B7  06F2               	xorwf	___ftge@ff1+2,f
  8228  17B8  3080               	movlw	128
  8229  17B9  06F5               	xorwf	___ftge@ff2+2,f
  8230  17BA  0875               	movf	___ftge@ff2+2,w
  8231  17BB  0272               	subwf	___ftge@ff1+2,w
  8232  17BC  1D03               	skipz
  8233  17BD  0008               	return
  8234  17BE  0874               	movf	___ftge@ff2+1,w
  8235  17BF  0271               	subwf	___ftge@ff1+1,w
  8236  17C0  1D03               	skipz
  8237  17C1  0008               	return
  8238  17C2  0873               	movf	___ftge@ff2,w
  8239  17C3  0270               	subwf	___ftge@ff1,w
  8240  17C4  0008               	return
  8241  17C5                     __end_of___ftge:	
  8242                           
  8243                           	psect	text7
  8244  16C3                     __ptext7:	
  8245 ;; *************** function ___awtoft *****************
  8246 ;; Defined at:
  8247 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  c               2    8[COMMON] int 
  8250 ;; Auto vars:     Size  Location     Type
  8251 ;;  sign            1   13[COMMON] unsigned char 
  8252 ;; Return value:  Size  Location     Type
  8253 ;;                  3    8[COMMON] float 
  8254 ;; Registers used:
  8255 ;;		wreg, status,2, status,0, pclath, cstack
  8256 ;; Tracked objects:
  8257 ;;		On entry : 0/0
  8258 ;;		On exit  : 0/0
  8259 ;;		Unchanged: 0/0
  8260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8261 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;Total ram usage:        6 bytes
  8266 ;; Hardware stack levels used:    1
  8267 ;; Hardware stack levels required when called:    1
  8268 ;; This function calls:
  8269 ;;		___ftpack
  8270 ;; This function is called by:
  8271 ;;		_tempCalc
  8272 ;;		_log
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           
  8277                           ;psect for function ___awtoft
  8278  16C3                     ___awtoft:	
  8279                           
  8280                           ;incstack = 0
  8281                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8282  16C3  01FD               	clrf	___awtoft@sign
  8283  16C4  1FF9               	btfss	___awtoft@c+1,7
  8284  16C5  2ECD               	goto	l2444
  8285  16C6  09F8               	comf	___awtoft@c,f
  8286  16C7  09F9               	comf	___awtoft@c+1,f
  8287  16C8  0AF8               	incf	___awtoft@c,f
  8288  16C9  1903               	skipnz
  8289  16CA  0AF9               	incf	___awtoft@c+1,f
  8290  16CB  01FD               	clrf	___awtoft@sign
  8291  16CC  0AFD               	incf	___awtoft@sign,f
  8292  16CD                     l2444:	
  8293  16CD  0878               	movf	___awtoft@c,w
  8294  16CE  00F0               	movwf	___ftpack@arg
  8295  16CF  0879               	movf	___awtoft@c+1,w
  8296  16D0  00F1               	movwf	___ftpack@arg+1
  8297  16D1  01F2               	clrf	___ftpack@arg+2
  8298  16D2  308E               	movlw	142
  8299  16D3  00FB               	movwf	??___awtoft
  8300  16D4  087B               	movf	??___awtoft,w
  8301  16D5  00F3               	movwf	___ftpack@exp
  8302  16D6  087D               	movf	___awtoft@sign,w
  8303  16D7  00FC               	movwf	??___awtoft+1
  8304  16D8  087C               	movf	??___awtoft+1,w
  8305  16D9  00F4               	movwf	___ftpack@sign
  8306  16DA  3180  2017         	fcall	___ftpack
  8307  16DC  0870               	movf	?___ftpack,w
  8308  16DD  00F8               	movwf	?___awtoft
  8309  16DE  0871               	movf	?___ftpack+1,w
  8310  16DF  00F9               	movwf	?___awtoft+1
  8311  16E0  0872               	movf	?___ftpack+2,w
  8312  16E1  00FA               	movwf	?___awtoft+2
  8313  16E2  0008               	return
  8314  16E3                     __end_of___awtoft:	
  8315                           
  8316                           	psect	text8
  8317  0A08                     __ptext8:	
  8318 ;; *************** function ___fttol *****************
  8319 ;; Defined at:
  8320 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  f1              3    0[COMMON] float 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  lval            4    9[COMMON] unsigned long 
  8325 ;;  exp1            1   13[COMMON] unsigned char 
  8326 ;;  sign1           1    8[COMMON] unsigned char 
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  4    0[COMMON] long 
  8329 ;; Registers used:
  8330 ;;		wreg, status,2, status,0
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8336 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8338 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8339 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;Total ram usage:       14 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_tempCalc
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           
  8350                           ;psect for function ___fttol
  8351  0A08                     ___fttol:	
  8352                           
  8353                           ;incstack = 0
  8354                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8355  0A08  0870               	movf	___fttol@f1,w
  8356  0A09  00F4               	movwf	??___fttol
  8357  0A0A  0871               	movf	___fttol@f1+1,w
  8358  0A0B  00F5               	movwf	??___fttol+1
  8359  0A0C  0872               	movf	___fttol@f1+2,w
  8360  0A0D  00F6               	movwf	??___fttol+2
  8361  0A0E  1003               	clrc
  8362  0A0F  0D75               	rlf	??___fttol+1,w
  8363  0A10  0D76               	rlf	??___fttol+2,w
  8364  0A11  00F7               	movwf	??___fttol+3
  8365  0A12  0877               	movf	??___fttol+3,w
  8366  0A13  00FD               	movwf	___fttol@exp1
  8367  0A14  087D               	movf	___fttol@exp1,w
  8368  0A15  1D03               	btfss	3,2
  8369  0A16  2A20               	goto	l2868
  8370  0A17  3000               	movlw	0
  8371  0A18  00F3               	movwf	?___fttol+3
  8372  0A19  3000               	movlw	0
  8373  0A1A  00F2               	movwf	?___fttol+2
  8374  0A1B  3000               	movlw	0
  8375  0A1C  00F1               	movwf	?___fttol+1
  8376  0A1D  3000               	movlw	0
  8377  0A1E  00F0               	movwf	?___fttol
  8378  0A1F  0008               	return
  8379  0A20                     l2868:	
  8380  0A20  0870               	movf	___fttol@f1,w
  8381  0A21  00F4               	movwf	??___fttol
  8382  0A22  0871               	movf	___fttol@f1+1,w
  8383  0A23  00F5               	movwf	??___fttol+1
  8384  0A24  0872               	movf	___fttol@f1+2,w
  8385  0A25  00F6               	movwf	??___fttol+2
  8386  0A26  3017               	movlw	23
  8387  0A27                     u3235:	
  8388  0A27  36F6               	lsrf	??___fttol+2,f
  8389  0A28  0CF5               	rrf	??___fttol+1,f
  8390  0A29  0CF4               	rrf	??___fttol,f
  8391  0A2A  0B89               	decfsz	9,f
  8392  0A2B  2A27               	goto	u3235
  8393  0A2C  0874               	movf	??___fttol,w
  8394  0A2D  00F7               	movwf	??___fttol+3
  8395  0A2E  0877               	movf	??___fttol+3,w
  8396  0A2F  00F8               	movwf	___fttol@sign1
  8397  0A30  17F1               	bsf	___fttol@f1+1,7
  8398  0A31  30FF               	movlw	255
  8399  0A32  05F0               	andwf	___fttol@f1,f
  8400  0A33  30FF               	movlw	255
  8401  0A34  05F1               	andwf	___fttol@f1+1,f
  8402  0A35  3000               	movlw	0
  8403  0A36  05F2               	andwf	___fttol@f1+2,f
  8404  0A37  0870               	movf	___fttol@f1,w
  8405  0A38  00F9               	movwf	___fttol@lval
  8406  0A39  0871               	movf	___fttol@f1+1,w
  8407  0A3A  00FA               	movwf	___fttol@lval+1
  8408  0A3B  0872               	movf	___fttol@f1+2,w
  8409  0A3C  00FB               	movwf	___fttol@lval+2
  8410  0A3D  01FC               	clrf	___fttol@lval+3
  8411  0A3E  308E               	movlw	142
  8412  0A3F  02FD               	subwf	___fttol@exp1,f
  8413  0A40  1FFD               	btfss	___fttol@exp1,7
  8414  0A41  2A5E               	goto	l2888
  8415  0A42  087D               	movf	___fttol@exp1,w
  8416  0A43  3A80               	xorlw	128
  8417  0A44  3E8F               	addlw	143
  8418  0A45  1803               	skipnc
  8419  0A46  2A50               	goto	l2886
  8420  0A47  3000               	movlw	0
  8421  0A48  00F3               	movwf	?___fttol+3
  8422  0A49  3000               	movlw	0
  8423  0A4A  00F2               	movwf	?___fttol+2
  8424  0A4B  3000               	movlw	0
  8425  0A4C  00F1               	movwf	?___fttol+1
  8426  0A4D  3000               	movlw	0
  8427  0A4E  00F0               	movwf	?___fttol
  8428  0A4F  0008               	return
  8429  0A50                     l2886:	
  8430  0A50  3001               	movlw	1
  8431  0A51                     u3265:	
  8432  0A51  36FC               	lsrf	___fttol@lval+3,f
  8433  0A52  0CFB               	rrf	___fttol@lval+2,f
  8434  0A53  0CFA               	rrf	___fttol@lval+1,f
  8435  0A54  0CF9               	rrf	___fttol@lval,f
  8436  0A55  0B89               	decfsz	9,f
  8437  0A56  2A51               	goto	u3265
  8438  0A57  3001               	movlw	1
  8439  0A58  00F4               	movwf	??___fttol
  8440  0A59  0874               	movf	??___fttol,w
  8441  0A5A  07FD               	addwf	___fttol@exp1,f
  8442  0A5B  1903               	btfsc	3,2
  8443  0A5C  2A77               	goto	l2896
  8444  0A5D  2A50               	goto	l2886
  8445  0A5E                     l2888:	
  8446  0A5E  3018               	movlw	24
  8447  0A5F  027D               	subwf	___fttol@exp1,w
  8448  0A60  1C03               	skipc
  8449  0A61  2A74               	goto	l790
  8450  0A62  3000               	movlw	0
  8451  0A63  00F3               	movwf	?___fttol+3
  8452  0A64  3000               	movlw	0
  8453  0A65  00F2               	movwf	?___fttol+2
  8454  0A66  3000               	movlw	0
  8455  0A67  00F1               	movwf	?___fttol+1
  8456  0A68  3000               	movlw	0
  8457  0A69  00F0               	movwf	?___fttol
  8458  0A6A  0008               	return
  8459  0A6B                     l2894:	
  8460  0A6B  3001               	movlw	1
  8461  0A6C                     u3295:	
  8462  0A6C  35F9               	lslf	___fttol@lval,f
  8463  0A6D  0DFA               	rlf	___fttol@lval+1,f
  8464  0A6E  0DFB               	rlf	___fttol@lval+2,f
  8465  0A6F  0DFC               	rlf	___fttol@lval+3,f
  8466  0A70  0B89               	decfsz	9,f
  8467  0A71  2A6C               	goto	u3295
  8468  0A72  3001               	movlw	1
  8469  0A73  02FD               	subwf	___fttol@exp1,f
  8470  0A74                     l790:	
  8471  0A74  087D               	movf	___fttol@exp1,w
  8472  0A75  1D03               	btfss	3,2
  8473  0A76  2A6B               	goto	l2894
  8474  0A77                     l2896:	
  8475  0A77  0878               	movf	___fttol@sign1,w
  8476  0A78  1903               	btfsc	3,2
  8477  0A79  2A85               	goto	l2900
  8478  0A7A  09F9               	comf	___fttol@lval,f
  8479  0A7B  09FA               	comf	___fttol@lval+1,f
  8480  0A7C  09FB               	comf	___fttol@lval+2,f
  8481  0A7D  09FC               	comf	___fttol@lval+3,f
  8482  0A7E  0AF9               	incf	___fttol@lval,f
  8483  0A7F  1903               	skipnz
  8484  0A80  0AFA               	incf	___fttol@lval+1,f
  8485  0A81  1903               	skipnz
  8486  0A82  0AFB               	incf	___fttol@lval+2,f
  8487  0A83  1903               	skipnz
  8488  0A84  0AFC               	incf	___fttol@lval+3,f
  8489  0A85                     l2900:	
  8490  0A85  087C               	movf	___fttol@lval+3,w
  8491  0A86  00F3               	movwf	?___fttol+3
  8492  0A87  087B               	movf	___fttol@lval+2,w
  8493  0A88  00F2               	movwf	?___fttol+2
  8494  0A89  087A               	movf	___fttol@lval+1,w
  8495  0A8A  00F1               	movwf	?___fttol+1
  8496  0A8B  0879               	movf	___fttol@lval,w
  8497  0A8C  00F0               	movwf	?___fttol
  8498  0A8D  0008               	return
  8499  0A8E                     __end_of___fttol:	
  8500                           
  8501                           	psect	text9
  8502  16A5                     __ptext9:	
  8503 ;; *************** function ___ftsub *****************
  8504 ;; Defined at:
  8505 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  f2              3   45[BANK0 ] float 
  8508 ;;  f1              3   48[BANK0 ] float 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;		None
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  3   45[BANK0 ] float 
  8513 ;; Registers used:
  8514 ;;		wreg, status,2, status,0, pclath, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8520 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8524 ;;Total ram usage:        6 bytes
  8525 ;; Hardware stack levels used:    1
  8526 ;; Hardware stack levels required when called:    2
  8527 ;; This function calls:
  8528 ;;		___ftadd
  8529 ;; This function is called by:
  8530 ;;		_tempCalc
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           
  8535                           ;psect for function ___ftsub
  8536  16A5                     ___ftsub:	
  8537                           
  8538                           ;incstack = 0
  8539                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8540  16A5  0020               	movlb	0	; select bank0
  8541  16A6  084F               	movf	___ftsub@f2+2,w
  8542  16A7  044E               	iorwf	___ftsub@f2+1,w
  8543  16A8  044D               	iorwf	___ftsub@f2,w
  8544  16A9  1903               	skipnz
  8545  16AA  2EAD               	goto	l2858
  8546  16AB  3080               	movlw	128
  8547  16AC  06CF               	xorwf	___ftsub@f2+2,f
  8548  16AD                     l2858:	
  8549  16AD  0850               	movf	___ftsub@f1,w
  8550  16AE  00C0               	movwf	___ftadd@f1
  8551  16AF  0851               	movf	___ftsub@f1+1,w
  8552  16B0  00C1               	movwf	___ftadd@f1+1
  8553  16B1  0852               	movf	___ftsub@f1+2,w
  8554  16B2  00C2               	movwf	___ftadd@f1+2
  8555  16B3  084D               	movf	___ftsub@f2,w
  8556  16B4  00C3               	movwf	___ftadd@f2
  8557  16B5  084E               	movf	___ftsub@f2+1,w
  8558  16B6  00C4               	movwf	___ftadd@f2+1
  8559  16B7  084F               	movf	___ftsub@f2+2,w
  8560  16B8  00C5               	movwf	___ftadd@f2+2
  8561  16B9  318D  25ED         	fcall	___ftadd
  8562  16BB  0020               	movlb	0	; select bank0
  8563  16BC  0840               	movf	?___ftadd,w
  8564  16BD  00CD               	movwf	?___ftsub
  8565  16BE  0841               	movf	?___ftadd+1,w
  8566  16BF  00CE               	movwf	?___ftsub+1
  8567  16C0  0842               	movf	?___ftadd+2,w
  8568  16C1  00CF               	movwf	?___ftsub+2
  8569  16C2  0008               	return
  8570  16C3                     __end_of___ftsub:	
  8571                           
  8572                           	psect	text10
  8573  0DED                     __ptext10:	
  8574 ;; *************** function ___ftadd *****************
  8575 ;; Defined at:
  8576 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  f1              3   32[BANK0 ] float 
  8579 ;;  f2              3   35[BANK0 ] float 
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  exp1            1   44[BANK0 ] unsigned char 
  8582 ;;  exp2            1   43[BANK0 ] unsigned char 
  8583 ;;  sign            1   42[BANK0 ] unsigned char 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  3   32[BANK0 ] float 
  8586 ;; Registers used:
  8587 ;;		wreg, status,2, status,0, pclath, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8593 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;Total ram usage:       13 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    1
  8600 ;; This function calls:
  8601 ;;		___ftpack
  8602 ;; This function is called by:
  8603 ;;		_tempCalc
  8604 ;;		___ftsub
  8605 ;;		_log
  8606 ;;		_eval_poly
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           
  8611                           ;psect for function ___ftadd
  8612  0DED                     ___ftadd:	
  8613                           
  8614                           ;incstack = 0
  8615                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8616  0DED  0020               	movlb	0	; select bank0
  8617  0DEE  0840               	movf	___ftadd@f1,w
  8618  0DEF  00C6               	movwf	??___ftadd
  8619  0DF0  0841               	movf	___ftadd@f1+1,w
  8620  0DF1  00C7               	movwf	??___ftadd+1
  8621  0DF2  0842               	movf	___ftadd@f1+2,w
  8622  0DF3  00C8               	movwf	??___ftadd+2
  8623  0DF4  1003               	clrc
  8624  0DF5  0D47               	rlf	??___ftadd+1,w
  8625  0DF6  0D48               	rlf	??___ftadd+2,w
  8626  0DF7  00C9               	movwf	??___ftadd+3
  8627  0DF8  0849               	movf	??___ftadd+3,w
  8628  0DF9  00CC               	movwf	___ftadd@exp1
  8629  0DFA  0843               	movf	___ftadd@f2,w
  8630  0DFB  00C6               	movwf	??___ftadd
  8631  0DFC  0844               	movf	___ftadd@f2+1,w
  8632  0DFD  00C7               	movwf	??___ftadd+1
  8633  0DFE  0845               	movf	___ftadd@f2+2,w
  8634  0DFF  00C8               	movwf	??___ftadd+2
  8635  0E00  1003               	clrc
  8636  0E01  0D47               	rlf	??___ftadd+1,w
  8637  0E02  0D48               	rlf	??___ftadd+2,w
  8638  0E03  00C9               	movwf	??___ftadd+3
  8639  0E04  0849               	movf	??___ftadd+3,w
  8640  0E05  00CB               	movwf	___ftadd@exp2
  8641  0E06  084C               	movf	___ftadd@exp1,w
  8642  0E07  1903               	btfsc	3,2
  8643  0E08  2E15               	goto	l2210
  8644  0E09  084B               	movf	___ftadd@exp2,w
  8645  0E0A  024C               	subwf	___ftadd@exp1,w
  8646  0E0B  1803               	skipnc
  8647  0E0C  2E1C               	goto	l2214
  8648  0E0D  034C               	decf	___ftadd@exp1,w
  8649  0E0E  3AFF               	xorlw	255
  8650  0E0F  074B               	addwf	___ftadd@exp2,w
  8651  0E10  00C6               	movwf	??___ftadd
  8652  0E11  3019               	movlw	25
  8653  0E12  0246               	subwf	??___ftadd,w
  8654  0E13  1C03               	skipc
  8655  0E14  2E1C               	goto	l2214
  8656  0E15                     l2210:	
  8657  0E15  0843               	movf	___ftadd@f2,w
  8658  0E16  00C0               	movwf	?___ftadd
  8659  0E17  0844               	movf	___ftadd@f2+1,w
  8660  0E18  00C1               	movwf	?___ftadd+1
  8661  0E19  0845               	movf	___ftadd@f2+2,w
  8662  0E1A  00C2               	movwf	?___ftadd+2
  8663  0E1B  0008               	return
  8664  0E1C                     l2214:	
  8665  0E1C  084B               	movf	___ftadd@exp2,w
  8666  0E1D  1903               	btfsc	3,2
  8667  0E1E  0008               	return
  8668  0E1F  084C               	movf	___ftadd@exp1,w
  8669  0E20  024B               	subwf	___ftadd@exp2,w
  8670  0E21  1803               	skipnc
  8671  0E22  2E2B               	goto	l2220
  8672  0E23  034B               	decf	___ftadd@exp2,w
  8673  0E24  3AFF               	xorlw	255
  8674  0E25  074C               	addwf	___ftadd@exp1,w
  8675  0E26  00C6               	movwf	??___ftadd
  8676  0E27  3019               	movlw	25
  8677  0E28  0246               	subwf	??___ftadd,w
  8678  0E29  1803               	btfsc	3,0
  8679  0E2A  0008               	return
  8680  0E2B                     l2220:	
  8681  0E2B  3006               	movlw	6
  8682  0E2C  00C6               	movwf	??___ftadd
  8683  0E2D  0846               	movf	??___ftadd,w
  8684  0E2E  00CA               	movwf	___ftadd@sign
  8685  0E2F  1BC2               	btfsc	___ftadd@f1+2,7
  8686  0E30  17CA               	bsf	___ftadd@sign,7
  8687  0E31  1BC5               	btfsc	___ftadd@f2+2,7
  8688  0E32  174A               	bsf	___ftadd@sign,6
  8689  0E33  17C1               	bsf	___ftadd@f1+1,7
  8690  0E34  30FF               	movlw	255
  8691  0E35  05C0               	andwf	___ftadd@f1,f
  8692  0E36  30FF               	movlw	255
  8693  0E37  05C1               	andwf	___ftadd@f1+1,f
  8694  0E38  3000               	movlw	0
  8695  0E39  05C2               	andwf	___ftadd@f1+2,f
  8696  0E3A  17C4               	bsf	___ftadd@f2+1,7
  8697  0E3B  30FF               	movlw	255
  8698  0E3C  05C3               	andwf	___ftadd@f2,f
  8699  0E3D  30FF               	movlw	255
  8700  0E3E  05C4               	andwf	___ftadd@f2+1,f
  8701  0E3F  3000               	movlw	0
  8702  0E40  05C5               	andwf	___ftadd@f2+2,f
  8703  0E41  084B               	movf	___ftadd@exp2,w
  8704  0E42  024C               	subwf	___ftadd@exp1,w
  8705  0E43  1803               	skipnc
  8706  0E44  2E67               	goto	l2242
  8707  0E45                     l2232:	
  8708  0E45  3001               	movlw	1
  8709  0E46                     u2235:	
  8710  0E46  35C3               	lslf	___ftadd@f2,f
  8711  0E47  0DC4               	rlf	___ftadd@f2+1,f
  8712  0E48  0DC5               	rlf	___ftadd@f2+2,f
  8713  0E49  0B89               	decfsz	9,f
  8714  0E4A  2E46               	goto	u2235
  8715  0E4B  3001               	movlw	1
  8716  0E4C  02CB               	subwf	___ftadd@exp2,f
  8717  0E4D  084B               	movf	___ftadd@exp2,w
  8718  0E4E  064C               	xorwf	___ftadd@exp1,w
  8719  0E4F  1903               	skipnz
  8720  0E50  2E62               	goto	l2240
  8721  0E51  3001               	movlw	1
  8722  0E52  02CA               	subwf	___ftadd@sign,f
  8723  0E53  084A               	movf	___ftadd@sign,w
  8724  0E54  3907               	andlw	7
  8725  0E55  1903               	btfsc	3,2
  8726  0E56  2E62               	goto	l2240
  8727  0E57  2E45               	goto	l2232
  8728  0E58                     l2238:	
  8729  0E58  3001               	movlw	1
  8730  0E59                     u2265:	
  8731  0E59  36C2               	lsrf	___ftadd@f1+2,f
  8732  0E5A  0CC1               	rrf	___ftadd@f1+1,f
  8733  0E5B  0CC0               	rrf	___ftadd@f1,f
  8734  0E5C  0B89               	decfsz	9,f
  8735  0E5D  2E59               	goto	u2265
  8736  0E5E  3001               	movlw	1
  8737  0E5F  00C6               	movwf	??___ftadd
  8738  0E60  0846               	movf	??___ftadd,w
  8739  0E61  07CC               	addwf	___ftadd@exp1,f
  8740  0E62                     l2240:	
  8741  0E62  084C               	movf	___ftadd@exp1,w
  8742  0E63  064B               	xorwf	___ftadd@exp2,w
  8743  0E64  1903               	btfsc	3,2
  8744  0E65  2E8C               	goto	l730
  8745  0E66  2E58               	goto	l2238
  8746  0E67                     l2242:	
  8747  0E67  084C               	movf	___ftadd@exp1,w
  8748  0E68  024B               	subwf	___ftadd@exp2,w
  8749  0E69  1803               	skipnc
  8750  0E6A  2E8C               	goto	l730
  8751  0E6B                     l2244:	
  8752  0E6B  3001               	movlw	1
  8753  0E6C                     u2295:	
  8754  0E6C  35C0               	lslf	___ftadd@f1,f
  8755  0E6D  0DC1               	rlf	___ftadd@f1+1,f
  8756  0E6E  0DC2               	rlf	___ftadd@f1+2,f
  8757  0E6F  0B89               	decfsz	9,f
  8758  0E70  2E6C               	goto	u2295
  8759  0E71  3001               	movlw	1
  8760  0E72  02CC               	subwf	___ftadd@exp1,f
  8761  0E73  084B               	movf	___ftadd@exp2,w
  8762  0E74  064C               	xorwf	___ftadd@exp1,w
  8763  0E75  1903               	skipnz
  8764  0E76  2E88               	goto	l2252
  8765  0E77  3001               	movlw	1
  8766  0E78  02CA               	subwf	___ftadd@sign,f
  8767  0E79  084A               	movf	___ftadd@sign,w
  8768  0E7A  3907               	andlw	7
  8769  0E7B  1903               	btfsc	3,2
  8770  0E7C  2E88               	goto	l2252
  8771  0E7D  2E6B               	goto	l2244
  8772  0E7E                     l2250:	
  8773  0E7E  3001               	movlw	1
  8774  0E7F                     u2325:	
  8775  0E7F  36C5               	lsrf	___ftadd@f2+2,f
  8776  0E80  0CC4               	rrf	___ftadd@f2+1,f
  8777  0E81  0CC3               	rrf	___ftadd@f2,f
  8778  0E82  0B89               	decfsz	9,f
  8779  0E83  2E7F               	goto	u2325
  8780  0E84  3001               	movlw	1
  8781  0E85  00C6               	movwf	??___ftadd
  8782  0E86  0846               	movf	??___ftadd,w
  8783  0E87  07CB               	addwf	___ftadd@exp2,f
  8784  0E88                     l2252:	
  8785  0E88  084C               	movf	___ftadd@exp1,w
  8786  0E89  064B               	xorwf	___ftadd@exp2,w
  8787  0E8A  1D03               	skipz
  8788  0E8B  2E7E               	goto	l2250
  8789  0E8C                     l730:	
  8790  0E8C  1FCA               	btfss	___ftadd@sign,7
  8791  0E8D  2E9E               	goto	l2256
  8792  0E8E  30FF               	movlw	255
  8793  0E8F  06C0               	xorwf	___ftadd@f1,f
  8794  0E90  30FF               	movlw	255
  8795  0E91  06C1               	xorwf	___ftadd@f1+1,f
  8796  0E92  30FF               	movlw	255
  8797  0E93  06C2               	xorwf	___ftadd@f1+2,f
  8798  0E94  3001               	movlw	1
  8799  0E95  07C0               	addwf	___ftadd@f1,f
  8800  0E96  3000               	movlw	0
  8801  0E97  1803               	skipnc
  8802  0E98  3001               	movlw	1
  8803  0E99  07C1               	addwf	___ftadd@f1+1,f
  8804  0E9A  3000               	movlw	0
  8805  0E9B  1803               	skipnc
  8806  0E9C  3001               	movlw	1
  8807  0E9D  07C2               	addwf	___ftadd@f1+2,f
  8808  0E9E                     l2256:	
  8809  0E9E  1F4A               	btfss	___ftadd@sign,6
  8810  0E9F  2EB0               	goto	l2260
  8811  0EA0  30FF               	movlw	255
  8812  0EA1  06C3               	xorwf	___ftadd@f2,f
  8813  0EA2  30FF               	movlw	255
  8814  0EA3  06C4               	xorwf	___ftadd@f2+1,f
  8815  0EA4  30FF               	movlw	255
  8816  0EA5  06C5               	xorwf	___ftadd@f2+2,f
  8817  0EA6  3001               	movlw	1
  8818  0EA7  07C3               	addwf	___ftadd@f2,f
  8819  0EA8  3000               	movlw	0
  8820  0EA9  1803               	skipnc
  8821  0EAA  3001               	movlw	1
  8822  0EAB  07C4               	addwf	___ftadd@f2+1,f
  8823  0EAC  3000               	movlw	0
  8824  0EAD  1803               	skipnc
  8825  0EAE  3001               	movlw	1
  8826  0EAF  07C5               	addwf	___ftadd@f2+2,f
  8827  0EB0                     l2260:	
  8828  0EB0  01CA               	clrf	___ftadd@sign
  8829  0EB1  0840               	movf	___ftadd@f1,w
  8830  0EB2  07C3               	addwf	___ftadd@f2,f
  8831  0EB3  0841               	movf	___ftadd@f1+1,w
  8832  0EB4  3DC4               	addwfc	___ftadd@f2+1,f
  8833  0EB5  0842               	movf	___ftadd@f1+2,w
  8834  0EB6  3DC5               	addwfc	___ftadd@f2+2,f
  8835  0EB7  1FC5               	btfss	___ftadd@f2+2,7
  8836  0EB8  2ECB               	goto	l2270
  8837  0EB9  30FF               	movlw	255
  8838  0EBA  06C3               	xorwf	___ftadd@f2,f
  8839  0EBB  30FF               	movlw	255
  8840  0EBC  06C4               	xorwf	___ftadd@f2+1,f
  8841  0EBD  30FF               	movlw	255
  8842  0EBE  06C5               	xorwf	___ftadd@f2+2,f
  8843  0EBF  3001               	movlw	1
  8844  0EC0  07C3               	addwf	___ftadd@f2,f
  8845  0EC1  3000               	movlw	0
  8846  0EC2  1803               	skipnc
  8847  0EC3  3001               	movlw	1
  8848  0EC4  07C4               	addwf	___ftadd@f2+1,f
  8849  0EC5  3000               	movlw	0
  8850  0EC6  1803               	skipnc
  8851  0EC7  3001               	movlw	1
  8852  0EC8  07C5               	addwf	___ftadd@f2+2,f
  8853  0EC9  01CA               	clrf	___ftadd@sign
  8854  0ECA  0ACA               	incf	___ftadd@sign,f
  8855  0ECB                     l2270:	
  8856  0ECB  0843               	movf	___ftadd@f2,w
  8857  0ECC  00F0               	movwf	___ftpack@arg
  8858  0ECD  0844               	movf	___ftadd@f2+1,w
  8859  0ECE  00F1               	movwf	___ftpack@arg+1
  8860  0ECF  0845               	movf	___ftadd@f2+2,w
  8861  0ED0  00F2               	movwf	___ftpack@arg+2
  8862  0ED1  084C               	movf	___ftadd@exp1,w
  8863  0ED2  00C6               	movwf	??___ftadd
  8864  0ED3  0846               	movf	??___ftadd,w
  8865  0ED4  00F3               	movwf	___ftpack@exp
  8866  0ED5  084A               	movf	___ftadd@sign,w
  8867  0ED6  00C7               	movwf	??___ftadd+1
  8868  0ED7  0847               	movf	??___ftadd+1,w
  8869  0ED8  00F4               	movwf	___ftpack@sign
  8870  0ED9  3180  2017         	fcall	___ftpack
  8871  0EDB  0870               	movf	?___ftpack,w
  8872  0EDC  0020               	movlb	0	; select bank0
  8873  0EDD  00C0               	movwf	?___ftadd
  8874  0EDE  0871               	movf	?___ftpack+1,w
  8875  0EDF  00C1               	movwf	?___ftadd+1
  8876  0EE0  0872               	movf	?___ftpack+2,w
  8877  0EE1  00C2               	movwf	?___ftadd+2
  8878  0EE2  0008               	return
  8879  0EE3                     __end_of___ftadd:	
  8880                           
  8881                           	psect	text11
  8882  0B15                     __ptext11:	
  8883 ;; *************** function ___ftdiv *****************
  8884 ;; Defined at:
  8885 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  f2              3   16[BANK0 ] float 
  8888 ;;  f1              3   19[BANK0 ] float 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  f3              3   27[BANK0 ] float 
  8891 ;;  sign            1   31[BANK0 ] unsigned char 
  8892 ;;  exp             1   30[BANK0 ] unsigned char 
  8893 ;;  cntr            1   26[BANK0 ] unsigned char 
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  3   16[BANK0 ] float 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2, status,0, pclath, cstack
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8903 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;Total ram usage:       16 bytes
  8908 ;; Hardware stack levels used:    1
  8909 ;; Hardware stack levels required when called:    1
  8910 ;; This function calls:
  8911 ;;		___ftpack
  8912 ;; This function is called by:
  8913 ;;		_tempCalc
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           
  8918                           ;psect for function ___ftdiv
  8919  0B15                     ___ftdiv:	
  8920                           
  8921                           ;incstack = 0
  8922                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8923  0B15  0020               	movlb	0	; select bank0
  8924  0B16  0833               	movf	___ftdiv@f1,w
  8925  0B17  00B6               	movwf	??___ftdiv
  8926  0B18  0834               	movf	___ftdiv@f1+1,w
  8927  0B19  00B7               	movwf	??___ftdiv+1
  8928  0B1A  0835               	movf	___ftdiv@f1+2,w
  8929  0B1B  00B8               	movwf	??___ftdiv+2
  8930  0B1C  1003               	clrc
  8931  0B1D  0D37               	rlf	??___ftdiv+1,w
  8932  0B1E  0D38               	rlf	??___ftdiv+2,w
  8933  0B1F  00B9               	movwf	??___ftdiv+3
  8934  0B20  0839               	movf	??___ftdiv+3,w
  8935  0B21  00BE               	movwf	___ftdiv@exp
  8936  0B22  083E               	movf	___ftdiv@exp,w
  8937  0B23  1D03               	btfss	3,2
  8938  0B24  2B2C               	goto	l2818
  8939  0B25  3000               	movlw	0
  8940  0B26  00B0               	movwf	?___ftdiv
  8941  0B27  3000               	movlw	0
  8942  0B28  00B1               	movwf	?___ftdiv+1
  8943  0B29  3000               	movlw	0
  8944  0B2A  00B2               	movwf	?___ftdiv+2
  8945  0B2B  0008               	return
  8946  0B2C                     l2818:	
  8947  0B2C  0830               	movf	___ftdiv@f2,w
  8948  0B2D  00B6               	movwf	??___ftdiv
  8949  0B2E  0831               	movf	___ftdiv@f2+1,w
  8950  0B2F  00B7               	movwf	??___ftdiv+1
  8951  0B30  0832               	movf	___ftdiv@f2+2,w
  8952  0B31  00B8               	movwf	??___ftdiv+2
  8953  0B32  1003               	clrc
  8954  0B33  0D37               	rlf	??___ftdiv+1,w
  8955  0B34  0D38               	rlf	??___ftdiv+2,w
  8956  0B35  00B9               	movwf	??___ftdiv+3
  8957  0B36  0839               	movf	??___ftdiv+3,w
  8958  0B37  00BF               	movwf	___ftdiv@sign
  8959  0B38  083F               	movf	___ftdiv@sign,w
  8960  0B39  1D03               	btfss	3,2
  8961  0B3A  2B42               	goto	l2824
  8962  0B3B  3000               	movlw	0
  8963  0B3C  00B0               	movwf	?___ftdiv
  8964  0B3D  3000               	movlw	0
  8965  0B3E  00B1               	movwf	?___ftdiv+1
  8966  0B3F  3000               	movlw	0
  8967  0B40  00B2               	movwf	?___ftdiv+2
  8968  0B41  0008               	return
  8969  0B42                     l2824:	
  8970  0B42  3000               	movlw	0
  8971  0B43  00BB               	movwf	___ftdiv@f3
  8972  0B44  3000               	movlw	0
  8973  0B45  00BC               	movwf	___ftdiv@f3+1
  8974  0B46  3000               	movlw	0
  8975  0B47  00BD               	movwf	___ftdiv@f3+2
  8976  0B48  3089               	movlw	137
  8977  0B49  073F               	addwf	___ftdiv@sign,w
  8978  0B4A  00B6               	movwf	??___ftdiv
  8979  0B4B  0836               	movf	??___ftdiv,w
  8980  0B4C  02BE               	subwf	___ftdiv@exp,f
  8981  0B4D  0833               	movf	___ftdiv@f1,w
  8982  0B4E  00B6               	movwf	??___ftdiv
  8983  0B4F  0834               	movf	___ftdiv@f1+1,w
  8984  0B50  00B7               	movwf	??___ftdiv+1
  8985  0B51  0835               	movf	___ftdiv@f1+2,w
  8986  0B52  00B8               	movwf	??___ftdiv+2
  8987  0B53  3010               	movlw	16
  8988  0B54                     u3155:	
  8989  0B54  36B8               	lsrf	??___ftdiv+2,f
  8990  0B55  0CB7               	rrf	??___ftdiv+1,f
  8991  0B56  0CB6               	rrf	??___ftdiv,f
  8992  0B57  0B89               	decfsz	9,f
  8993  0B58  2B54               	goto	u3155
  8994  0B59  0836               	movf	??___ftdiv,w
  8995  0B5A  00B9               	movwf	??___ftdiv+3
  8996  0B5B  0839               	movf	??___ftdiv+3,w
  8997  0B5C  00BF               	movwf	___ftdiv@sign
  8998  0B5D  0830               	movf	___ftdiv@f2,w
  8999  0B5E  00B6               	movwf	??___ftdiv
  9000  0B5F  0831               	movf	___ftdiv@f2+1,w
  9001  0B60  00B7               	movwf	??___ftdiv+1
  9002  0B61  0832               	movf	___ftdiv@f2+2,w
  9003  0B62  00B8               	movwf	??___ftdiv+2
  9004  0B63  3010               	movlw	16
  9005  0B64                     u3165:	
  9006  0B64  36B8               	lsrf	??___ftdiv+2,f
  9007  0B65  0CB7               	rrf	??___ftdiv+1,f
  9008  0B66  0CB6               	rrf	??___ftdiv,f
  9009  0B67  0B89               	decfsz	9,f
  9010  0B68  2B64               	goto	u3165
  9011  0B69  0836               	movf	??___ftdiv,w
  9012  0B6A  00B9               	movwf	??___ftdiv+3
  9013  0B6B  0839               	movf	??___ftdiv+3,w
  9014  0B6C  06BF               	xorwf	___ftdiv@sign,f
  9015  0B6D  3080               	movlw	128
  9016  0B6E  00B6               	movwf	??___ftdiv
  9017  0B6F  0836               	movf	??___ftdiv,w
  9018  0B70  05BF               	andwf	___ftdiv@sign,f
  9019  0B71  17B4               	bsf	___ftdiv@f1+1,7
  9020  0B72  30FF               	movlw	255
  9021  0B73  05B3               	andwf	___ftdiv@f1,f
  9022  0B74  30FF               	movlw	255
  9023  0B75  05B4               	andwf	___ftdiv@f1+1,f
  9024  0B76  3000               	movlw	0
  9025  0B77  05B5               	andwf	___ftdiv@f1+2,f
  9026  0B78  17B1               	bsf	___ftdiv@f2+1,7
  9027  0B79  30FF               	movlw	255
  9028  0B7A  05B0               	andwf	___ftdiv@f2,f
  9029  0B7B  30FF               	movlw	255
  9030  0B7C  05B1               	andwf	___ftdiv@f2+1,f
  9031  0B7D  3000               	movlw	0
  9032  0B7E  05B2               	andwf	___ftdiv@f2+2,f
  9033  0B7F  3018               	movlw	24
  9034  0B80  00B6               	movwf	??___ftdiv
  9035  0B81  0836               	movf	??___ftdiv,w
  9036  0B82  00BA               	movwf	___ftdiv@cntr
  9037  0B83                     l2838:	
  9038  0B83  3001               	movlw	1
  9039  0B84                     u3175:	
  9040  0B84  35BB               	lslf	___ftdiv@f3,f
  9041  0B85  0DBC               	rlf	___ftdiv@f3+1,f
  9042  0B86  0DBD               	rlf	___ftdiv@f3+2,f
  9043  0B87  0B89               	decfsz	9,f
  9044  0B88  2B84               	goto	u3175
  9045  0B89  0832               	movf	___ftdiv@f2+2,w
  9046  0B8A  0235               	subwf	___ftdiv@f1+2,w
  9047  0B8B  1D03               	skipz
  9048  0B8C  2B93               	goto	u3185
  9049  0B8D  0831               	movf	___ftdiv@f2+1,w
  9050  0B8E  0234               	subwf	___ftdiv@f1+1,w
  9051  0B8F  1D03               	skipz
  9052  0B90  2B93               	goto	u3185
  9053  0B91  0830               	movf	___ftdiv@f2,w
  9054  0B92  0233               	subwf	___ftdiv@f1,w
  9055  0B93                     u3185:	
  9056  0B93  1C03               	skipc
  9057  0B94  2B9C               	goto	l2846
  9058  0B95  0830               	movf	___ftdiv@f2,w
  9059  0B96  02B3               	subwf	___ftdiv@f1,f
  9060  0B97  0831               	movf	___ftdiv@f2+1,w
  9061  0B98  3BB4               	subwfb	___ftdiv@f1+1,f
  9062  0B99  0832               	movf	___ftdiv@f2+2,w
  9063  0B9A  3BB5               	subwfb	___ftdiv@f1+2,f
  9064  0B9B  143B               	bsf	___ftdiv@f3,0
  9065  0B9C                     l2846:	
  9066  0B9C  3001               	movlw	1
  9067  0B9D                     u3195:	
  9068  0B9D  35B3               	lslf	___ftdiv@f1,f
  9069  0B9E  0DB4               	rlf	___ftdiv@f1+1,f
  9070  0B9F  0DB5               	rlf	___ftdiv@f1+2,f
  9071  0BA0  0B89               	decfsz	9,f
  9072  0BA1  2B9D               	goto	u3195
  9073  0BA2  3001               	movlw	1
  9074  0BA3  02BA               	subwf	___ftdiv@cntr,f
  9075  0BA4  1D03               	btfss	3,2
  9076  0BA5  2B83               	goto	l2838
  9077  0BA6  083B               	movf	___ftdiv@f3,w
  9078  0BA7  00F0               	movwf	___ftpack@arg
  9079  0BA8  083C               	movf	___ftdiv@f3+1,w
  9080  0BA9  00F1               	movwf	___ftpack@arg+1
  9081  0BAA  083D               	movf	___ftdiv@f3+2,w
  9082  0BAB  00F2               	movwf	___ftpack@arg+2
  9083  0BAC  083E               	movf	___ftdiv@exp,w
  9084  0BAD  00B6               	movwf	??___ftdiv
  9085  0BAE  0836               	movf	??___ftdiv,w
  9086  0BAF  00F3               	movwf	___ftpack@exp
  9087  0BB0  083F               	movf	___ftdiv@sign,w
  9088  0BB1  00B7               	movwf	??___ftdiv+1
  9089  0BB2  0837               	movf	??___ftdiv+1,w
  9090  0BB3  00F4               	movwf	___ftpack@sign
  9091  0BB4  3180  2017         	fcall	___ftpack
  9092  0BB6  0870               	movf	?___ftpack,w
  9093  0BB7  0020               	movlb	0	; select bank0
  9094  0BB8  00B0               	movwf	?___ftdiv
  9095  0BB9  0871               	movf	?___ftpack+1,w
  9096  0BBA  00B1               	movwf	?___ftdiv+1
  9097  0BBB  0872               	movf	?___ftpack+2,w
  9098  0BBC  00B2               	movwf	?___ftdiv+2
  9099  0BBD  0008               	return
  9100  0BBE                     __end_of___ftdiv:	
  9101                           
  9102                           	psect	text12
  9103  0017                     __ptext12:	
  9104 ;; *************** function ___ftpack *****************
  9105 ;; Defined at:
  9106 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  arg             3    0[COMMON] unsigned um
  9109 ;;  exp             1    3[COMMON] unsigned char 
  9110 ;;  sign            1    4[COMMON] unsigned char 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  3    0[COMMON] float 
  9115 ;; Registers used:
  9116 ;;		wreg, status,2, status,0
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9122 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;Total ram usage:        8 bytes
  9127 ;; Hardware stack levels used:    1
  9128 ;; This function calls:
  9129 ;;		Nothing
  9130 ;; This function is called by:
  9131 ;;		___awtoft
  9132 ;;		___ftadd
  9133 ;;		___ftdiv
  9134 ;;		___ftmul
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           
  9139                           ;psect for function ___ftpack
  9140  0017                     ___ftpack:	
  9141                           
  9142                           ;incstack = 0
  9143                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9144  0017  0873               	movf	___ftpack@exp,w
  9145  0018  1903               	btfsc	3,2
  9146  0019  281F               	goto	l2146
  9147  001A  0872               	movf	___ftpack@arg+2,w
  9148  001B  0471               	iorwf	___ftpack@arg+1,w
  9149  001C  0470               	iorwf	___ftpack@arg,w
  9150  001D  1D03               	skipz
  9151  001E  2830               	goto	l2152
  9152  001F                     l2146:	
  9153  001F  3000               	movlw	0
  9154  0020  00F0               	movwf	?___ftpack
  9155  0021  3000               	movlw	0
  9156  0022  00F1               	movwf	?___ftpack+1
  9157  0023  3000               	movlw	0
  9158  0024  00F2               	movwf	?___ftpack+2
  9159  0025  0008               	return
  9160  0026                     l2150:	
  9161  0026  3001               	movlw	1
  9162  0027  00F5               	movwf	??___ftpack
  9163  0028  0875               	movf	??___ftpack,w
  9164  0029  07F3               	addwf	___ftpack@exp,f
  9165  002A  3001               	movlw	1
  9166  002B                     u1965:	
  9167  002B  36F2               	lsrf	___ftpack@arg+2,f
  9168  002C  0CF1               	rrf	___ftpack@arg+1,f
  9169  002D  0CF0               	rrf	___ftpack@arg,f
  9170  002E  0B89               	decfsz	9,f
  9171  002F  282B               	goto	u1965
  9172  0030                     l2152:	
  9173  0030  30FE               	movlw	254
  9174  0031  0572               	andwf	___ftpack@arg+2,w
  9175  0032  1903               	btfsc	3,2
  9176  0033  2849               	goto	l699
  9177  0034  2826               	goto	l2150
  9178  0035                     l2154:	
  9179  0035  3001               	movlw	1
  9180  0036  00F5               	movwf	??___ftpack
  9181  0037  0875               	movf	??___ftpack,w
  9182  0038  07F3               	addwf	___ftpack@exp,f
  9183  0039  3001               	movlw	1
  9184  003A  07F0               	addwf	___ftpack@arg,f
  9185  003B  3000               	movlw	0
  9186  003C  1803               	skipnc
  9187  003D  3001               	movlw	1
  9188  003E  07F1               	addwf	___ftpack@arg+1,f
  9189  003F  3000               	movlw	0
  9190  0040  1803               	skipnc
  9191  0041  3001               	movlw	1
  9192  0042  07F2               	addwf	___ftpack@arg+2,f
  9193  0043  3001               	movlw	1
  9194  0044                     u1985:	
  9195  0044  36F2               	lsrf	___ftpack@arg+2,f
  9196  0045  0CF1               	rrf	___ftpack@arg+1,f
  9197  0046  0CF0               	rrf	___ftpack@arg,f
  9198  0047  0B89               	decfsz	9,f
  9199  0048  2844               	goto	u1985
  9200  0049                     l699:	
  9201  0049  30FF               	movlw	255
  9202  004A  0572               	andwf	___ftpack@arg+2,w
  9203  004B  1903               	btfsc	3,2
  9204  004C  2856               	goto	l2162
  9205  004D  2835               	goto	l2154
  9206  004E                     l2160:	
  9207  004E  3001               	movlw	1
  9208  004F  02F3               	subwf	___ftpack@exp,f
  9209  0050  3001               	movlw	1
  9210  0051                     u2005:	
  9211  0051  35F0               	lslf	___ftpack@arg,f
  9212  0052  0DF1               	rlf	___ftpack@arg+1,f
  9213  0053  0DF2               	rlf	___ftpack@arg+2,f
  9214  0054  0B89               	decfsz	9,f
  9215  0055  2851               	goto	u2005
  9216  0056                     l2162:	
  9217  0056  1BF1               	btfsc	___ftpack@arg+1,7
  9218  0057  285C               	goto	l706
  9219  0058  3002               	movlw	2
  9220  0059  0273               	subwf	___ftpack@exp,w
  9221  005A  1803               	skipnc
  9222  005B  284E               	goto	l2160
  9223  005C                     l706:	
  9224  005C  1873               	btfsc	___ftpack@exp,0
  9225  005D  2864               	goto	l707
  9226  005E  30FF               	movlw	255
  9227  005F  05F0               	andwf	___ftpack@arg,f
  9228  0060  307F               	movlw	127
  9229  0061  05F1               	andwf	___ftpack@arg+1,f
  9230  0062  30FF               	movlw	255
  9231  0063  05F2               	andwf	___ftpack@arg+2,f
  9232  0064                     l707:	
  9233  0064  1003               	clrc
  9234  0065  0CF3               	rrf	___ftpack@exp,f
  9235  0066  0873               	movf	___ftpack@exp,w
  9236  0067  00F5               	movwf	??___ftpack
  9237  0068  01F6               	clrf	??___ftpack+1
  9238  0069  01F7               	clrf	??___ftpack+2
  9239  006A  3010               	movlw	16
  9240  006B                     u2045:	
  9241  006B  35F5               	lslf	??___ftpack,f
  9242  006C  0DF6               	rlf	??___ftpack+1,f
  9243  006D  0DF7               	rlf	??___ftpack+2,f
  9244  006E  0B89               	decfsz	9,f
  9245  006F  286B               	goto	u2045
  9246  0070  0875               	movf	??___ftpack,w
  9247  0071  04F0               	iorwf	___ftpack@arg,f
  9248  0072  0876               	movf	??___ftpack+1,w
  9249  0073  04F1               	iorwf	___ftpack@arg+1,f
  9250  0074  0877               	movf	??___ftpack+2,w
  9251  0075  04F2               	iorwf	___ftpack@arg+2,f
  9252  0076  0874               	movf	___ftpack@sign,w
  9253  0077  1903               	btfsc	3,2
  9254  0078  0008               	return
  9255  0079  17F2               	bsf	___ftpack@arg+2,7
  9256  007A  0008               	return
  9257  007B                     __end_of___ftpack:	
  9258                           
  9259                           	psect	text13
  9260  007B                     __ptext13:	
  9261 ;; *************** function _readAnalog *****************
  9262 ;; Defined at:
  9263 ;;		line 34 in file "adc.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  channel         2    6[BANK0 ] int 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  value           2   11[COMMON] int 
  9268 ;;  analog_chann    2    9[COMMON] int 
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  2    6[BANK0 ] int 
  9271 ;; Registers used:
  9272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9278 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9279 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9280 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;Total ram usage:       21 bytes
  9283 ;; Hardware stack levels used:    1
  9284 ;; Hardware stack levels required when called:    1
  9285 ;; This function calls:
  9286 ;;		_ADCRead
  9287 ;;		___aldiv
  9288 ;;		___bmul
  9289 ;; This function is called by:
  9290 ;;		_main
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           
  9295                           ;psect for function _readAnalog
  9296  007B                     _readAnalog:	
  9297                           
  9298                           ;adc.c: 36: int value;
  9299                           ;adc.c: 38: int analog_channel = channels[channel];
  9300                           
  9301                           ;incstack = 0
  9302                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9303  007B  0020               	movlb	0	; select bank0
  9304  007C  3526               	lslf	readAnalog@channel,w
  9305  007D  3E5B               	addlw	(low (_channels| (0+256)))& (0+255)
  9306  007E  0086               	movwf	6
  9307  007F  3001               	movlw	1	; select bank2/3
  9308  0080  0087               	movwf	7
  9309  0081  3F40               	moviw [0]fsr1
  9310  0082  00F9               	movwf	readAnalog@analog_channel
  9311  0083  3F41               	moviw [1]fsr1
  9312  0084  00FA               	movwf	readAnalog@analog_channel+1
  9313                           
  9314                           ;adc.c: 40: value = ADCRead(analog_channel);
  9315  0085  0879               	movf	readAnalog@analog_channel,w
  9316  0086  3188  2000  3180   	fcall	_ADCRead
  9317  0089  0871               	movf	?_ADCRead+1,w
  9318  008A  00FC               	movwf	readAnalog@value+1
  9319  008B  0870               	movf	?_ADCRead,w
  9320  008C  00FB               	movwf	readAnalog@value
  9321                           
  9322                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9323  008D  0020               	movlb	0	; select bank0
  9324  008E  0826               	movf	readAnalog@channel,w
  9325  008F  00A8               	movwf	??_readAnalog
  9326  0090  3001               	movlw	1
  9327  0091                     u3325:	
  9328  0091  35A8               	lslf	??_readAnalog,f
  9329  0092  3EFF               	addlw	-1
  9330  0093  1D03               	skipz
  9331  0094  2891               	goto	u3325
  9332  0095  3528               	lslf	??_readAnalog,w
  9333  0096  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9334  0097  0086               	movwf	6
  9335  0098  3001               	movlw	1	; select bank2/3
  9336  0099  0087               	movwf	7
  9337  009A  3F40               	moviw [0]fsr1
  9338  009B  00A9               	movwf	??_readAnalog+1
  9339  009C  3F41               	moviw [1]fsr1
  9340  009D  00AA               	movwf	??_readAnalog+2
  9341  009E  3F42               	moviw [2]fsr1
  9342  009F  00AB               	movwf	??_readAnalog+3
  9343  00A0  3F43               	moviw [3]fsr1
  9344  00A1  00AC               	movwf	??_readAnalog+4
  9345  00A2  0021               	movlb	1	; select bank1
  9346  00A3  0861               	movf	_sampleIndex^(0+128),w
  9347  00A4  0020               	movlb	0	; select bank0
  9348  00A5  00AD               	movwf	??_readAnalog+5
  9349  00A6  3001               	movlw	1
  9350  00A7                     u3335:	
  9351  00A7  35AD               	lslf	??_readAnalog+5,f
  9352  00A8  0B89               	decfsz	9,f
  9353  00A9  28A7               	goto	u3335
  9354  00AA  3028               	movlw	40
  9355  00AB  00AE               	movwf	??_readAnalog+6
  9356  00AC  082E               	movf	??_readAnalog+6,w
  9357  00AD  00F0               	movwf	___bmul@multiplicand
  9358  00AE  0826               	movf	readAnalog@channel,w
  9359  00AF  3196  2603  3180   	fcall	___bmul
  9360  00B2  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9361  00B3  0020               	movlb	0	; select bank0
  9362  00B4  072D               	addwf	??_readAnalog+5,w
  9363  00B5  00AF               	movwf	??_readAnalog+7
  9364  00B6  082F               	movf	??_readAnalog+7,w
  9365  00B7  0086               	movwf	6
  9366  00B8  3001               	movlw	1	; select bank3/4
  9367  00B9  0087               	movwf	7
  9368  00BA  3F40               	moviw [0]fsr1
  9369  00BB  00B0               	movwf	??_readAnalog+8
  9370  00BC  3F41               	moviw [1]fsr1
  9371  00BD  00B1               	movwf	??_readAnalog+9
  9372  00BE  0830               	movf	??_readAnalog+8,w
  9373  00BF  00B2               	movwf	??_readAnalog+10
  9374  00C0  0831               	movf	??_readAnalog+9,w
  9375  00C1  00B3               	movwf	??_readAnalog+11
  9376  00C2  01B4               	clrf	??_readAnalog+12
  9377  00C3  01B5               	clrf	??_readAnalog+13
  9378  00C4  09B2               	comf	??_readAnalog+10,f
  9379  00C5  09B3               	comf	??_readAnalog+11,f
  9380  00C6  09B4               	comf	??_readAnalog+12,f
  9381  00C7  09B5               	comf	??_readAnalog+13,f
  9382  00C8  0AB2               	incf	??_readAnalog+10,f
  9383  00C9  1903               	skipnz
  9384  00CA  0AB3               	incf	??_readAnalog+11,f
  9385  00CB  1903               	skipnz
  9386  00CC  0AB4               	incf	??_readAnalog+12,f
  9387  00CD  1903               	skipnz
  9388  00CE  0AB5               	incf	??_readAnalog+13,f
  9389  00CF  0832               	movf	??_readAnalog+10,w
  9390  00D0  07A9               	addwf	??_readAnalog+1,f
  9391  00D1  0833               	movf	??_readAnalog+11,w
  9392  00D2  3DAA               	addwfc	??_readAnalog+2,f
  9393  00D3  0834               	movf	??_readAnalog+12,w
  9394  00D4  3DAB               	addwfc	??_readAnalog+3,f
  9395  00D5  0835               	movf	??_readAnalog+13,w
  9396  00D6  3DAC               	addwfc	??_readAnalog+4,f
  9397  00D7  0826               	movf	readAnalog@channel,w
  9398  00D8  00B6               	movwf	??_readAnalog+14
  9399  00D9  3001               	movlw	1
  9400  00DA                     u3345:	
  9401  00DA  35B6               	lslf	??_readAnalog+14,f
  9402  00DB  3EFF               	addlw	-1
  9403  00DC  1D03               	skipz
  9404  00DD  28DA               	goto	u3345
  9405  00DE  3536               	lslf	??_readAnalog+14,w
  9406  00DF  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9407  00E0  0086               	movwf	6
  9408  00E1  3001               	movlw	1	; select bank2/3
  9409  00E2  0087               	movwf	7
  9410  00E3  0829               	movf	??_readAnalog+1,w
  9411  00E4  3FC0               	movwi [0]fsr1
  9412  00E5  082A               	movf	??_readAnalog+2,w
  9413  00E6  3FC1               	movwi [1]fsr1
  9414  00E7  082B               	movf	??_readAnalog+3,w
  9415  00E8  3FC2               	movwi [2]fsr1
  9416  00E9  082C               	movf	??_readAnalog+4,w
  9417  00EA  3FC3               	movwi [3]fsr1
  9418                           
  9419                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  9420  00EB  0021               	movlb	1	; select bank1
  9421  00EC  0861               	movf	_sampleIndex^(0+128),w
  9422  00ED  0020               	movlb	0	; select bank0
  9423  00EE  00A8               	movwf	??_readAnalog
  9424  00EF  3001               	movlw	1
  9425  00F0                     u3355:	
  9426  00F0  35A8               	lslf	??_readAnalog,f
  9427  00F1  0B89               	decfsz	9,f
  9428  00F2  28F0               	goto	u3355
  9429  00F3  3028               	movlw	40
  9430  00F4  00A9               	movwf	??_readAnalog+1
  9431  00F5  0829               	movf	??_readAnalog+1,w
  9432  00F6  00F0               	movwf	___bmul@multiplicand
  9433  00F7  0826               	movf	readAnalog@channel,w
  9434  00F8  3196  2603  3180   	fcall	___bmul
  9435  00FB  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9436  00FC  0020               	movlb	0	; select bank0
  9437  00FD  0728               	addwf	??_readAnalog,w
  9438  00FE  00AA               	movwf	??_readAnalog+2
  9439  00FF  082A               	movf	??_readAnalog+2,w
  9440  0100  0086               	movwf	6
  9441  0101  3001               	movlw	1	; select bank3/4
  9442  0102  0087               	movwf	7
  9443  0103  087B               	movf	readAnalog@value,w
  9444  0104  3FC0               	movwi [0]fsr1
  9445  0105  087C               	movf	readAnalog@value+1,w
  9446  0106  3FC1               	movwi [1]fsr1
  9447                           
  9448                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9449  0107  0826               	movf	readAnalog@channel,w
  9450  0108  00A8               	movwf	??_readAnalog
  9451  0109  3001               	movlw	1
  9452  010A                     u3365:	
  9453  010A  35A8               	lslf	??_readAnalog,f
  9454  010B  3EFF               	addlw	-1
  9455  010C  1D03               	skipz
  9456  010D  290A               	goto	u3365
  9457  010E  3528               	lslf	??_readAnalog,w
  9458  010F  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9459  0110  0086               	movwf	6
  9460  0111  3001               	movlw	1	; select bank2/3
  9461  0112  0087               	movwf	7
  9462  0113  3F40               	moviw [0]fsr1
  9463  0114  00A9               	movwf	??_readAnalog+1
  9464  0115  3F41               	moviw [1]fsr1
  9465  0116  00AA               	movwf	??_readAnalog+2
  9466  0117  3F42               	moviw [2]fsr1
  9467  0118  00AB               	movwf	??_readAnalog+3
  9468  0119  3F43               	moviw [3]fsr1
  9469  011A  00AC               	movwf	??_readAnalog+4
  9470  011B  0021               	movlb	1	; select bank1
  9471  011C  0861               	movf	_sampleIndex^(0+128),w
  9472  011D  0020               	movlb	0	; select bank0
  9473  011E  00AD               	movwf	??_readAnalog+5
  9474  011F  3001               	movlw	1
  9475  0120                     u3375:	
  9476  0120  35AD               	lslf	??_readAnalog+5,f
  9477  0121  0B89               	decfsz	9,f
  9478  0122  2920               	goto	u3375
  9479  0123  3028               	movlw	40
  9480  0124  00AE               	movwf	??_readAnalog+6
  9481  0125  082E               	movf	??_readAnalog+6,w
  9482  0126  00F0               	movwf	___bmul@multiplicand
  9483  0127  0826               	movf	readAnalog@channel,w
  9484  0128  3196  2603  3180   	fcall	___bmul
  9485  012B  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9486  012C  0020               	movlb	0	; select bank0
  9487  012D  072D               	addwf	??_readAnalog+5,w
  9488  012E  00AF               	movwf	??_readAnalog+7
  9489  012F  082F               	movf	??_readAnalog+7,w
  9490  0130  0086               	movwf	6
  9491  0131  3001               	movlw	1	; select bank3/4
  9492  0132  0087               	movwf	7
  9493  0133  3F40               	moviw [0]fsr1
  9494  0134  00B0               	movwf	??_readAnalog+8
  9495  0135  3F41               	moviw [1]fsr1
  9496  0136  00B1               	movwf	??_readAnalog+9
  9497  0137  0830               	movf	??_readAnalog+8,w
  9498  0138  00B2               	movwf	??_readAnalog+10
  9499  0139  0831               	movf	??_readAnalog+9,w
  9500  013A  00B3               	movwf	??_readAnalog+11
  9501  013B  01B4               	clrf	??_readAnalog+12
  9502  013C  01B5               	clrf	??_readAnalog+13
  9503  013D  0832               	movf	??_readAnalog+10,w
  9504  013E  07A9               	addwf	??_readAnalog+1,f
  9505  013F  0833               	movf	??_readAnalog+11,w
  9506  0140  3DAA               	addwfc	??_readAnalog+2,f
  9507  0141  0834               	movf	??_readAnalog+12,w
  9508  0142  3DAB               	addwfc	??_readAnalog+3,f
  9509  0143  0835               	movf	??_readAnalog+13,w
  9510  0144  3DAC               	addwfc	??_readAnalog+4,f
  9511  0145  0826               	movf	readAnalog@channel,w
  9512  0146  00B6               	movwf	??_readAnalog+14
  9513  0147  3001               	movlw	1
  9514  0148                     u3385:	
  9515  0148  35B6               	lslf	??_readAnalog+14,f
  9516  0149  3EFF               	addlw	-1
  9517  014A  1D03               	skipz
  9518  014B  2948               	goto	u3385
  9519  014C  3536               	lslf	??_readAnalog+14,w
  9520  014D  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9521  014E  0086               	movwf	6
  9522  014F  3001               	movlw	1	; select bank2/3
  9523  0150  0087               	movwf	7
  9524  0151  0829               	movf	??_readAnalog+1,w
  9525  0152  3FC0               	movwi [0]fsr1
  9526  0153  082A               	movf	??_readAnalog+2,w
  9527  0154  3FC1               	movwi [1]fsr1
  9528  0155  082B               	movf	??_readAnalog+3,w
  9529  0156  3FC2               	movwi [2]fsr1
  9530  0157  082C               	movf	??_readAnalog+4,w
  9531  0158  3FC3               	movwi [3]fsr1
  9532                           
  9533                           ;adc.c: 48: if(channel>=(2-1))
  9534  0159  0827               	movf	readAnalog@channel+1,w
  9535  015A  3A80               	xorlw	128
  9536  015B  00A8               	movwf	??_readAnalog
  9537  015C  3080               	movlw	128
  9538  015D  0228               	subwf	??_readAnalog,w
  9539  015E  1D03               	skipz
  9540  015F  2962               	goto	u3395
  9541  0160  3001               	movlw	1
  9542  0161  0226               	subwf	readAnalog@channel,w
  9543  0162                     u3395:	
  9544  0162  1C03               	skipc
  9545  0163  2972               	goto	l2918
  9546                           
  9547                           ;adc.c: 49: {
  9548                           ;adc.c: 50: sampleIndex+=1;
  9549  0164  3001               	movlw	1
  9550  0165  0021               	movlb	1	; select bank1
  9551  0166  07E1               	addwf	_sampleIndex^(0+128),f
  9552  0167  3000               	movlw	0
  9553  0168  3DE2               	addwfc	(_sampleIndex+1)^(0+128),f
  9554                           
  9555                           ;adc.c: 51: if(sampleIndex >= 20)sampleIndex = 0;
  9556  0169  3000               	movlw	0
  9557  016A  0262               	subwf	(_sampleIndex+1)^(0+128),w
  9558  016B  3014               	movlw	20
  9559  016C  1903               	skipnz
  9560  016D  0261               	subwf	_sampleIndex^(0+128),w
  9561  016E  1C03               	skipc
  9562  016F  2972               	goto	l2918
  9563  0170  01E1               	clrf	_sampleIndex^(0+128)
  9564  0171  01E2               	clrf	(_sampleIndex+1)^(0+128)
  9565  0172                     l2918:	
  9566                           
  9567                           ;adc.c: 52: }
  9568                           ;adc.c: 54: value = totals[channel]/20;
  9569  0172  3000               	movlw	0
  9570  0173  00F3               	movwf	___aldiv@divisor+3
  9571  0174  3000               	movlw	0
  9572  0175  00F2               	movwf	___aldiv@divisor+2
  9573  0176  3000               	movlw	0
  9574  0177  00F1               	movwf	___aldiv@divisor+1
  9575  0178  3014               	movlw	20
  9576  0179  00F0               	movwf	___aldiv@divisor
  9577  017A  0020               	movlb	0	; select bank0
  9578  017B  0826               	movf	readAnalog@channel,w
  9579  017C  00A8               	movwf	??_readAnalog
  9580  017D  3001               	movlw	1
  9581  017E                     u3415:	
  9582  017E  35A8               	lslf	??_readAnalog,f
  9583  017F  3EFF               	addlw	-1
  9584  0180  1D03               	skipz
  9585  0181  297E               	goto	u3415
  9586  0182  3528               	lslf	??_readAnalog,w
  9587  0183  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9588  0184  0086               	movwf	6
  9589  0185  3001               	movlw	1	; select bank2/3
  9590  0186  0087               	movwf	7
  9591  0187  3F40               	moviw [0]fsr1
  9592  0188  00F4               	movwf	___aldiv@dividend
  9593  0189  3F41               	moviw [1]fsr1
  9594  018A  00F5               	movwf	___aldiv@dividend+1
  9595  018B  3F42               	moviw [2]fsr1
  9596  018C  00F6               	movwf	___aldiv@dividend+2
  9597  018D  3F43               	moviw [3]fsr1
  9598  018E  00F7               	movwf	___aldiv@dividend+3
  9599  018F  3189  2186         	fcall	___aldiv
  9600  0191  0871               	movf	?___aldiv+1,w
  9601  0192  00FC               	movwf	readAnalog@value+1
  9602  0193  0870               	movf	?___aldiv,w
  9603  0194  00FB               	movwf	readAnalog@value
  9604                           
  9605                           ;adc.c: 56: return value;
  9606  0195  087C               	movf	readAnalog@value+1,w
  9607  0196  0020               	movlb	0	; select bank0
  9608  0197  00A7               	movwf	?_readAnalog+1
  9609  0198  087B               	movf	readAnalog@value,w
  9610  0199  00A6               	movwf	?_readAnalog
  9611  019A  0008               	return
  9612  019B                     __end_of_readAnalog:	
  9613                           
  9614                           	psect	text14
  9615  1603                     __ptext14:	
  9616 ;; *************** function ___bmul *****************
  9617 ;; Defined at:
  9618 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  multiplier      1    wreg     unsigned char 
  9621 ;;  multiplicand    1    0[COMMON] unsigned char 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  multiplier      1    3[COMMON] unsigned char 
  9624 ;;  product         1    2[COMMON] unsigned char 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      unsigned char 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9634 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9638 ;;Total ram usage:        4 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_readAnalog
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           
  9648                           ;psect for function ___bmul
  9649  1603                     ___bmul:	
  9650                           
  9651                           ;incstack = 0
  9652                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9653                           ;___bmul@multiplier stored from wreg
  9654  1603  00F3               	movwf	___bmul@multiplier
  9655  1604  01F2               	clrf	___bmul@product
  9656  1605                     l2760:	
  9657  1605  1C73               	btfss	___bmul@multiplier,0
  9658  1606  2E0B               	goto	l2764
  9659  1607  0870               	movf	___bmul@multiplicand,w
  9660  1608  00F1               	movwf	??___bmul
  9661  1609  0871               	movf	??___bmul,w
  9662  160A  07F2               	addwf	___bmul@product,f
  9663  160B                     l2764:	
  9664  160B  1003               	clrc
  9665  160C  0DF0               	rlf	___bmul@multiplicand,f
  9666  160D  1003               	clrc
  9667  160E  0CF3               	rrf	___bmul@multiplier,f
  9668  160F  0873               	movf	___bmul@multiplier,w
  9669  1610  1D03               	btfss	3,2
  9670  1611  2E05               	goto	l2760
  9671  1612  0872               	movf	___bmul@product,w
  9672  1613  0008               	return
  9673  1614                     __end_of___bmul:	
  9674                           
  9675                           	psect	text15
  9676  0986                     __ptext15:	
  9677 ;; *************** function ___aldiv *****************
  9678 ;; Defined at:
  9679 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  divisor         4    0[COMMON] long 
  9682 ;;  dividend        4    4[COMMON] long 
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;  quotient        4    2[BANK0 ] long 
  9685 ;;  sign            1    1[BANK0 ] unsigned char 
  9686 ;;  counter         1    0[BANK0 ] unsigned char 
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  4    0[COMMON] long 
  9689 ;; Registers used:
  9690 ;;		wreg, status,2, status,0
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9696 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9700 ;;Total ram usage:       15 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; This function calls:
  9703 ;;		Nothing
  9704 ;; This function is called by:
  9705 ;;		_readAnalog
  9706 ;;		_main
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           
  9711                           ;psect for function ___aldiv
  9712  0986                     ___aldiv:	
  9713                           
  9714                           ;incstack = 0
  9715                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9716  0986  0020               	movlb	0	; select bank0
  9717  0987  01A1               	clrf	___aldiv@sign
  9718  0988  1FF3               	btfss	___aldiv@divisor+3,7
  9719  0989  2997               	goto	l593
  9720  098A  09F0               	comf	___aldiv@divisor,f
  9721  098B  09F1               	comf	___aldiv@divisor+1,f
  9722  098C  09F2               	comf	___aldiv@divisor+2,f
  9723  098D  09F3               	comf	___aldiv@divisor+3,f
  9724  098E  0AF0               	incf	___aldiv@divisor,f
  9725  098F  1903               	skipnz
  9726  0990  0AF1               	incf	___aldiv@divisor+1,f
  9727  0991  1903               	skipnz
  9728  0992  0AF2               	incf	___aldiv@divisor+2,f
  9729  0993  1903               	skipnz
  9730  0994  0AF3               	incf	___aldiv@divisor+3,f
  9731  0995  01A1               	clrf	___aldiv@sign
  9732  0996  0AA1               	incf	___aldiv@sign,f
  9733  0997                     l593:	
  9734  0997  1FF7               	btfss	___aldiv@dividend+3,7
  9735  0998  29A8               	goto	l2782
  9736  0999  09F4               	comf	___aldiv@dividend,f
  9737  099A  09F5               	comf	___aldiv@dividend+1,f
  9738  099B  09F6               	comf	___aldiv@dividend+2,f
  9739  099C  09F7               	comf	___aldiv@dividend+3,f
  9740  099D  0AF4               	incf	___aldiv@dividend,f
  9741  099E  1903               	skipnz
  9742  099F  0AF5               	incf	___aldiv@dividend+1,f
  9743  09A0  1903               	skipnz
  9744  09A1  0AF6               	incf	___aldiv@dividend+2,f
  9745  09A2  1903               	skipnz
  9746  09A3  0AF7               	incf	___aldiv@dividend+3,f
  9747  09A4  3001               	movlw	1
  9748  09A5  00F8               	movwf	??___aldiv
  9749  09A6  0878               	movf	??___aldiv,w
  9750  09A7  06A1               	xorwf	___aldiv@sign,f
  9751  09A8                     l2782:	
  9752  09A8  3000               	movlw	0
  9753  09A9  00A5               	movwf	___aldiv@quotient+3
  9754  09AA  3000               	movlw	0
  9755  09AB  00A4               	movwf	___aldiv@quotient+2
  9756  09AC  3000               	movlw	0
  9757  09AD  00A3               	movwf	___aldiv@quotient+1
  9758  09AE  3000               	movlw	0
  9759  09AF  00A2               	movwf	___aldiv@quotient
  9760  09B0  0873               	movf	___aldiv@divisor+3,w
  9761  09B1  0472               	iorwf	___aldiv@divisor+2,w
  9762  09B2  0471               	iorwf	___aldiv@divisor+1,w
  9763  09B3  0470               	iorwf	___aldiv@divisor,w
  9764  09B4  1903               	skipnz
  9765  09B5  29F1               	goto	l2804
  9766  09B6  01A0               	clrf	___aldiv@counter
  9767  09B7  0AA0               	incf	___aldiv@counter,f
  9768  09B8                     l2790:	
  9769  09B8  1BF3               	btfsc	___aldiv@divisor+3,7
  9770  09B9  29C6               	goto	l2792
  9771  09BA  3001               	movlw	1
  9772  09BB                     u3065:	
  9773  09BB  35F0               	lslf	___aldiv@divisor,f
  9774  09BC  0DF1               	rlf	___aldiv@divisor+1,f
  9775  09BD  0DF2               	rlf	___aldiv@divisor+2,f
  9776  09BE  0DF3               	rlf	___aldiv@divisor+3,f
  9777  09BF  0B89               	decfsz	9,f
  9778  09C0  29BB               	goto	u3065
  9779  09C1  3001               	movlw	1
  9780  09C2  00F8               	movwf	??___aldiv
  9781  09C3  0878               	movf	??___aldiv,w
  9782  09C4  07A0               	addwf	___aldiv@counter,f
  9783  09C5  29B8               	goto	l2790
  9784  09C6                     l2792:	
  9785  09C6  3001               	movlw	1
  9786  09C7                     u3085:	
  9787  09C7  35A2               	lslf	___aldiv@quotient,f
  9788  09C8  0DA3               	rlf	___aldiv@quotient+1,f
  9789  09C9  0DA4               	rlf	___aldiv@quotient+2,f
  9790  09CA  0DA5               	rlf	___aldiv@quotient+3,f
  9791  09CB  0B89               	decfsz	9,f
  9792  09CC  29C7               	goto	u3085
  9793  09CD  0873               	movf	___aldiv@divisor+3,w
  9794  09CE  0277               	subwf	___aldiv@dividend+3,w
  9795  09CF  1D03               	skipz
  9796  09D0  29DB               	goto	u3095
  9797  09D1  0872               	movf	___aldiv@divisor+2,w
  9798  09D2  0276               	subwf	___aldiv@dividend+2,w
  9799  09D3  1D03               	skipz
  9800  09D4  29DB               	goto	u3095
  9801  09D5  0871               	movf	___aldiv@divisor+1,w
  9802  09D6  0275               	subwf	___aldiv@dividend+1,w
  9803  09D7  1D03               	skipz
  9804  09D8  29DB               	goto	u3095
  9805  09D9  0870               	movf	___aldiv@divisor,w
  9806  09DA  0274               	subwf	___aldiv@dividend,w
  9807  09DB                     u3095:	
  9808  09DB  1C03               	skipc
  9809  09DC  29E6               	goto	l2800
  9810  09DD  0870               	movf	___aldiv@divisor,w
  9811  09DE  02F4               	subwf	___aldiv@dividend,f
  9812  09DF  0871               	movf	___aldiv@divisor+1,w
  9813  09E0  3BF5               	subwfb	___aldiv@dividend+1,f
  9814  09E1  0872               	movf	___aldiv@divisor+2,w
  9815  09E2  3BF6               	subwfb	___aldiv@dividend+2,f
  9816  09E3  0873               	movf	___aldiv@divisor+3,w
  9817  09E4  3BF7               	subwfb	___aldiv@dividend+3,f
  9818  09E5  1422               	bsf	___aldiv@quotient,0
  9819  09E6                     l2800:	
  9820  09E6  3001               	movlw	1
  9821  09E7                     u3105:	
  9822  09E7  36F3               	lsrf	___aldiv@divisor+3,f
  9823  09E8  0CF2               	rrf	___aldiv@divisor+2,f
  9824  09E9  0CF1               	rrf	___aldiv@divisor+1,f
  9825  09EA  0CF0               	rrf	___aldiv@divisor,f
  9826  09EB  0B89               	decfsz	9,f
  9827  09EC  29E7               	goto	u3105
  9828  09ED  3001               	movlw	1
  9829  09EE  02A0               	subwf	___aldiv@counter,f
  9830  09EF  1D03               	btfss	3,2
  9831  09F0  29C6               	goto	l2792
  9832  09F1                     l2804:	
  9833  09F1  0821               	movf	___aldiv@sign,w
  9834  09F2  1903               	btfsc	3,2
  9835  09F3  29FF               	goto	l2808
  9836  09F4  09A2               	comf	___aldiv@quotient,f
  9837  09F5  09A3               	comf	___aldiv@quotient+1,f
  9838  09F6  09A4               	comf	___aldiv@quotient+2,f
  9839  09F7  09A5               	comf	___aldiv@quotient+3,f
  9840  09F8  0AA2               	incf	___aldiv@quotient,f
  9841  09F9  1903               	skipnz
  9842  09FA  0AA3               	incf	___aldiv@quotient+1,f
  9843  09FB  1903               	skipnz
  9844  09FC  0AA4               	incf	___aldiv@quotient+2,f
  9845  09FD  1903               	skipnz
  9846  09FE  0AA5               	incf	___aldiv@quotient+3,f
  9847  09FF                     l2808:	
  9848  09FF  0825               	movf	___aldiv@quotient+3,w
  9849  0A00  00F3               	movwf	?___aldiv+3
  9850  0A01  0824               	movf	___aldiv@quotient+2,w
  9851  0A02  00F2               	movwf	?___aldiv+2
  9852  0A03  0823               	movf	___aldiv@quotient+1,w
  9853  0A04  00F1               	movwf	?___aldiv+1
  9854  0A05  0822               	movf	___aldiv@quotient,w
  9855  0A06  00F0               	movwf	?___aldiv
  9856  0A07  0008               	return
  9857  0A08                     __end_of___aldiv:	
  9858                           
  9859                           	psect	text16
  9860  0800                     __ptext16:	
  9861 ;; *************** function _ADCRead *****************
  9862 ;; Defined at:
  9863 ;;		line 16 in file "adc.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  channel         1    wreg     enum E13559
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  channel         1    3[COMMON] enum E13559
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  2    0[COMMON] unsigned int 
  9870 ;; Registers used:
  9871 ;;		wreg
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9877 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;Total ram usage:        4 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_readAnalog
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           
  9891                           ;psect for function _ADCRead
  9892  0800                     _ADCRead:	
  9893                           
  9894                           ;incstack = 0
  9895                           ; Regs used in _ADCRead: [wreg]
  9896                           ;ADCRead@channel stored from wreg
  9897  0800  00F3               	movwf	ADCRead@channel
  9898                           
  9899                           ;adc.c: 18: ADPCH = channel;
  9900  0801  0873               	movf	ADCRead@channel,w
  9901  0802  0021               	movlb	1	; select bank1
  9902  0803  009E               	movwf	30	;volatile
  9903                           
  9904                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9905  0804  1793               	bsf	19,7	;volatile
  9906                           
  9907                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9908  0805  1313               	bcf	19,6	;volatile
  9909                           
  9910                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9911  0806  1413               	bsf	19,0	;volatile
  9912  0807                     l55:	
  9913                           ;adc.c: 27: {
  9914                           
  9915                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9916                           
  9917  0807  1813               	btfsc	19,0	;volatile
  9918  0808  2807               	goto	l55
  9919                           
  9920                           ;adc.c: 28: }
  9921                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  9922  0809  080D               	movf	13,w	;volatile
  9923  080A  00F1               	movwf	?_ADCRead+1
  9924  080B  080C               	movf	12,w	;volatile
  9925  080C  00F0               	movwf	?_ADCRead
  9926  080D  0008               	return
  9927  080E                     __end_of_ADCRead:	
  9928                           
  9929                           	psect	text17
  9930  02EE                     __ptext17:	
  9931 ;; *************** function _menuChoice *****************
  9932 ;; Defined at:
  9933 ;;		line 56 in file "menu.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;		None
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;		None
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      void 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;Total ram usage:        5 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:    3
  9954 ;; This function calls:
  9955 ;;		_LCD_Clear
  9956 ;;		_LCD_Set_Cursor
  9957 ;;		_LCD_Write_Char
  9958 ;;		_LCD_Write_Int
  9959 ;;		_LCD_Write_String
  9960 ;;		_PWM7_LoadDutyValue
  9961 ;;		_readKey
  9962 ;; This function is called by:
  9963 ;;		_main
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           
  9968                           ;psect for function _menuChoice
  9969  02EE                     _menuChoice:	
  9970  02EE                     l3042:	
  9971                           ;menu.c: 58: while(RB2 != 1)
  9972                           
  9973                           ;incstack = 0
  9974                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9975                           
  9976  02EE  0020               	movlb	0	; select bank0
  9977  02EF  190D               	btfsc	13,2	;volatile
  9978  02F0  2B47               	goto	l3044
  9979                           
  9980                           ;menu.c: 59: {
  9981                           ;menu.c: 60: choice = readKey();
  9982  02F1  3180  2004  3182   	fcall	_readKey
  9983  02F4  0020               	movlb	0	; select bank0
  9984  02F5  00B7               	movwf	??_menuChoice
  9985  02F6  0837               	movf	??_menuChoice,w
  9986  02F7  00EC               	movwf	_choice
  9987                           
  9988                           ;menu.c: 62: if(timer > 4000)
  9989  02F8  0021               	movlb	1	; select bank1
  9990  02F9  0864               	movf	(_timer+1)^(0+128),w
  9991  02FA  3A80               	xorlw	128
  9992  02FB  0020               	movlb	0	; select bank0
  9993  02FC  00B7               	movwf	??_menuChoice
  9994  02FD  308F               	movlw	143
  9995  02FE  0237               	subwf	??_menuChoice,w
  9996  02FF  1D03               	skipz
  9997  0300  2B04               	goto	u3535
  9998  0301  30A1               	movlw	161
  9999  0302  0021               	movlb	1	; select bank1
 10000  0303  0263               	subwf	_timer^(0+128),w
 10001  0304                     u3535:	
 10002  0304  1C03               	skipc
 10003  0305  2B0A               	goto	l3020
 10004                           
 10005                           ;menu.c: 63: {
 10006                           ;menu.c: 64: timer = 0;
 10007  0306  0021               	movlb	1	; select bank1
 10008  0307  01E3               	clrf	_timer^(0+128)
 10009  0308  01E4               	clrf	(_timer+1)^(0+128)
 10010                           
 10011                           ;menu.c: 65: goto Exit;
 10012  0309  2D17               	goto	l3152
 10013  030A                     l3020:	
 10014                           
 10015                           ;menu.c: 66: }
 10016                           ;menu.c: 68: if(timer2>125){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}
      +                          else { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
 10017  030A  307E               	movlw	126
 10018  030B  0020               	movlb	0	; select bank0
 10019  030C  026F               	subwf	_timer2,w
 10020  030D  1C03               	skipc
 10021  030E  2B18               	goto	l3026
 10022  030F  01F4               	clrf	LCD_Set_Cursor@y
 10023  0310  3000               	movlw	0
 10024  0311  3188  200E  3182   	fcall	_LCD_Set_Cursor
 10025  0314  305F               	movlw	low (STR_3| (0+32768))
 10026  0315  00F5               	movwf	LCD_Write_String@a
 10027  0316  3090               	movlw	high (STR_3| (0+32768))
 10028  0317  2B20               	goto	L3
 10029  0318                     l3026:	
 10030  0318  01F4               	clrf	LCD_Set_Cursor@y
 10031  0319  3000               	movlw	0
 10032  031A  3188  200E  3182   	fcall	_LCD_Set_Cursor
 10033  031D  304E               	movlw	low (STR_4| (0+32768))
 10034  031E  00F5               	movwf	LCD_Write_String@a
 10035  031F  3090               	movlw	high (STR_4| (0+32768))
 10036  0320                     L3:	
 10037  0320  00F6               	movwf	LCD_Write_String@a+1
 10038  0321  3196  2670  3182   	fcall	_LCD_Write_String
 10039                           
 10040                           ;menu.c: 70: { LCD_Set_Cursor(0,1); LCD_Write_String(desc[choice]);};
 10041  0324  01F4               	clrf	LCD_Set_Cursor@y
 10042  0325  0AF4               	incf	LCD_Set_Cursor@y,f
 10043  0326  3000               	movlw	0
 10044  0327  3188  200E  3182   	fcall	_LCD_Set_Cursor
 10045  032A  0020               	movlb	0	; select bank0
 10046  032B  356C               	lslf	_choice,w
 10047  032C  3E5F               	addlw	(low (_desc| (0+256)))& (0+255)
 10048  032D  0086               	movwf	6
 10049  032E  3001               	movlw	1	; select bank2/3
 10050  032F  0087               	movwf	7
 10051  0330  3F40               	moviw [0]fsr1
 10052  0331  00F5               	movwf	LCD_Write_String@a
 10053  0332  3F41               	moviw [1]fsr1
 10054  0333  00F6               	movwf	LCD_Write_String@a+1
 10055  0334  3196  2670  3182   	fcall	_LCD_Write_String
 10056                           
 10057                           ;menu.c: 72: if(timer2>249)timer2=0;
 10058  0337  30FA               	movlw	250
 10059  0338  0020               	movlb	0	; select bank0
 10060  0339  026F               	subwf	_timer2,w
 10061  033A  1803               	btfsc	3,0
 10062  033B  01EF               	clrf	_timer2
 10063                           
 10064                           ;menu.c: 74: timer+=1;
 10065  033C  3001               	movlw	1
 10066  033D  0021               	movlb	1	; select bank1
 10067  033E  07E3               	addwf	_timer^(0+128),f
 10068  033F  3000               	movlw	0
 10069  0340  3DE4               	addwfc	(_timer+1)^(0+128),f
 10070                           
 10071                           ;menu.c: 75: timer2+=1;
 10072  0341  3001               	movlw	1
 10073  0342  0020               	movlb	0	; select bank0
 10074  0343  00B7               	movwf	??_menuChoice
 10075  0344  0837               	movf	??_menuChoice,w
 10076  0345  07EF               	addwf	_timer2,f
 10077  0346  2AEE               	goto	l3042
 10078  0347                     l3044:	
 10079                           
 10080                           ;menu.c: 76: }
 10081                           ;menu.c: 77: timer=0;
 10082  0347  0021               	movlb	1	; select bank1
 10083  0348  01E3               	clrf	_timer^(0+128)
 10084  0349  01E4               	clrf	(_timer+1)^(0+128)
 10085                           
 10086                           ;menu.c: 78: timer2=0;
 10087  034A  0020               	movlb	0	; select bank0
 10088  034B  01EF               	clrf	_timer2
 10089                           
 10090                           ;menu.c: 80: _delay((unsigned long)((1000)*(32000000/4000.0)));
 10091  034C  3029               	movlw	41
 10092  034D  00B9               	movwf	??_menuChoice+2
 10093  034E  3096               	movlw	150
 10094  034F  00B8               	movwf	??_menuChoice+1
 10095  0350  30A6               	movlw	166
 10096  0351  00B7               	movwf	??_menuChoice
 10097  0352                     u3907:	
 10098  0352  0BB7               	decfsz	??_menuChoice,f
 10099  0353  2B52               	goto	u3907
 10100  0354  0BB8               	decfsz	??_menuChoice+1,f
 10101  0355  2B52               	goto	u3907
 10102  0356  0BB9               	decfsz	??_menuChoice+2,f
 10103  0357  2B52               	goto	u3907
 10104                           
 10105                           ;menu.c: 82: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1, 
      +                          0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10106  0358  0020               	movlb	0	; select bank0
 10107  0359  086C               	movf	_choice,w
 10108  035A  1D03               	btfss	3,2
 10109  035B  2B70               	goto	l3054
 10110  035C  01F4               	clrf	LCD_Set_Cursor@y
 10111  035D  0AF4               	incf	LCD_Set_Cursor@y,f
 10112  035E  300A               	movlw	10
 10113  035F  3188  200E  3182   	fcall	_LCD_Set_Cursor
 10114  0362  0020               	movlb	0	; select bank0
 10115  0363  356C               	lslf	_choice,w
 10116  0364  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10117  0365  0086               	movwf	6
 10118  0366  0187               	clrf	7
 10119  0367  3F40               	moviw [0]fsr1
 10120  0368  00A4               	movwf	LCD_Write_Int@value
 10121  0369  3F41               	moviw [1]fsr1
 10122  036A  00A5               	movwf	LCD_Write_Int@value+1
 10123  036B  01A6               	clrf	LCD_Write_Int@fieldLength
 10124  036C  03A6               	decf	LCD_Write_Int@fieldLength,f
 10125  036D  01A7               	clrf	LCD_Write_Int@numPlaces
 10126  036E  0AA7               	incf	LCD_Write_Int@numPlaces,f
 10127  036F  2B82               	goto	L4
 10128  0370                     l3054:	
 10129  0370  01F4               	clrf	LCD_Set_Cursor@y
 10130  0371  0AF4               	incf	LCD_Set_Cursor@y,f
 10131  0372  300A               	movlw	10
 10132  0373  3188  200E  3182   	fcall	_LCD_Set_Cursor
 10133  0376  0020               	movlb	0	; select bank0
 10134  0377  356C               	lslf	_choice,w
 10135  0378  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10136  0379  0086               	movwf	6
 10137  037A  0187               	clrf	7
 10138  037B  3F40               	moviw [0]fsr1
 10139  037C  00A4               	movwf	LCD_Write_Int@value
 10140  037D  3F41               	moviw [1]fsr1
 10141  037E  00A5               	movwf	LCD_Write_Int@value+1
 10142  037F  01A6               	clrf	LCD_Write_Int@fieldLength
 10143  0380  03A6               	decf	LCD_Write_Int@fieldLength,f
 10144  0381  01A7               	clrf	LCD_Write_Int@numPlaces
 10145  0382                     L4:	
 10146  0382  01A8               	clrf	LCD_Write_Int@sign
 10147  0383  318D  2522  3182   	fcall	_LCD_Write_Int
 10148                           
 10149                           ;menu.c: 84: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10150  0386  3052               	movlw	82
 10151  0387  0020               	movlb	0	; select bank0
 10152  0388  00B9               	movwf	??_menuChoice+2
 10153  0389  302C               	movlw	44
 10154  038A  00B8               	movwf	??_menuChoice+1
 10155  038B  304F               	movlw	79
 10156  038C  00B7               	movwf	??_menuChoice
 10157  038D                     u3917:	
 10158  038D  0BB7               	decfsz	??_menuChoice,f
 10159  038E  2B8D               	goto	u3917
 10160  038F  0BB8               	decfsz	??_menuChoice+1,f
 10161  0390  2B8D               	goto	u3917
 10162  0391  0BB9               	decfsz	??_menuChoice+2,f
 10163  0392  2B8D               	goto	u3917
 10164  0393  3200               	nop2
 10165                           
 10166                           ;menu.c: 86: while(RB2 != 1)
 10167  0394  2CE9               	goto	l3150
 10168  0395                     l3070:	
 10169                           ;menu.c: 93: goto Exit;
 10170                           
 10171                           
 10172                           ;menu.c: 94: }
 10173                           ;menu.c: 95: _delay((unsigned long)((2)*(32000000/4000.0)));
 10174  0395  3015               	movlw	21
 10175  0396  0020               	movlb	0	; select bank0
 10176  0397  00B8               	movwf	??_menuChoice+1
 10177  0398  30C6               	movlw	198
 10178  0399  00B7               	movwf	??_menuChoice
 10179  039A                     u3937:	
 10180  039A  0BB7               	decfsz	??_menuChoice,f
 10181  039B  2B9A               	goto	u3937
 10182  039C  0BB8               	decfsz	??_menuChoice+1,f
 10183  039D  2B9A               	goto	u3937
 10184  039E  0000               	nop
 10185                           
 10186                           ;menu.c: 96: timer+=1;
 10187  039F  3001               	movlw	1
 10188  03A0  0021               	movlb	1	; select bank1
 10189  03A1  07E3               	addwf	_timer^(0+128),f
 10190  03A2  3000               	movlw	0
 10191  03A3  3DE4               	addwfc	(_timer+1)^(0+128),f
 10192                           
 10193                           ;menu.c: 98: if(RB0==1)
 10194  03A4  0020               	movlb	0	; select bank0
 10195  03A5  1C0D               	btfss	13,0	;volatile
 10196  03A6  2C34               	goto	l3104
 10197                           
 10198                           ;menu.c: 99: {
 10199                           ;menu.c: 100: delayCount+=2;
 10200  03A7  3002               	movlw	2
 10201  03A8  00B7               	movwf	??_menuChoice
 10202  03A9  0837               	movf	??_menuChoice,w
 10203  03AA  07ED               	addwf	_delayCount,f
 10204                           
 10205                           ;menu.c: 102: setpoint[choice]+=1;
 10206  03AB  356C               	lslf	_choice,w
 10207  03AC  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10208  03AD  0086               	movwf	6
 10209  03AE  0187               	clrf	7
 10210  03AF  3001               	movlw	1
 10211  03B0  0781               	addwf	1,f
 10212  03B1  3141               	addfsr 1,1
 10213  03B2  1803               	skipnc
 10214  03B3  0A81               	incf	1,f
 10215                           
 10216                           ;menu.c: 103: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[cho
      +                          ice];
 10217  03B4  356C               	lslf	_choice,w
 10218  03B5  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10219  03B6  0086               	movwf	6
 10220  03B7  0187               	clrf	7
 10221  03B8  3F40               	moviw [0]fsr1
 10222  03B9  00B7               	movwf	??_menuChoice
 10223  03BA  3F41               	moviw [1]fsr1
 10224  03BB  00B8               	movwf	??_menuChoice+1
 10225  03BC  356C               	lslf	_choice,w
 10226  03BD  3E63               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10227  03BE  0086               	movwf	6
 10228  03BF  3001               	movlw	1	; select bank2/3
 10229  03C0  0087               	movwf	7
 10230  03C1  3F40               	moviw [0]fsr1
 10231  03C2  00B9               	movwf	??_menuChoice+2
 10232  03C3  3F41               	moviw [1]fsr1
 10233  03C4  00BA               	movwf	??_menuChoice+3
 10234  03C5  083A               	movf	??_menuChoice+3,w
 10235  03C6  3A80               	xorlw	128
 10236  03C7  00BB               	movwf	??_menuChoice+4
 10237  03C8  0838               	movf	??_menuChoice+1,w
 10238  03C9  3A80               	xorlw	128
 10239  03CA  023B               	subwf	??_menuChoice+4,w
 10240  03CB  1D03               	skipz
 10241  03CC  2BCF               	goto	u3605
 10242  03CD  0837               	movf	??_menuChoice,w
 10243  03CE  0239               	subwf	??_menuChoice+2,w
 10244  03CF                     u3605:	
 10245  03CF  1803               	skipnc
 10246  03D0  2BDF               	goto	l3082
 10247  03D1  0020               	movlb	0	; select bank0
 10248  03D2  356C               	lslf	_choice,w
 10249  03D3  3E63               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10250  03D4  0086               	movwf	6
 10251  03D5  3001               	movlw	1	; select bank2/3
 10252  03D6  0087               	movwf	7
 10253  03D7  356C               	lslf	_choice,w
 10254  03D8  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10255  03D9  0084               	movwf	4
 10256  03DA  0185               	clrf	5
 10257  03DB  3F40               	moviw [0]fsr1
 10258  03DC  3F80               	movwi [0]fsr0
 10259  03DD  3F41               	moviw [1]fsr1
 10260  03DE  3F81               	movwi [1]fsr0
 10261  03DF                     l3082:	
 10262                           
 10263                           ;menu.c: 104: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10264  03DF  0020               	movlb	0	; select bank0
 10265  03E0  086C               	movf	_choice,w
 10266  03E1  1D03               	btfss	3,2
 10267  03E2  2BF7               	goto	l3088
 10268  03E3  01F4               	clrf	LCD_Set_Cursor@y
 10269  03E4  0AF4               	incf	LCD_Set_Cursor@y,f
 10270  03E5  300A               	movlw	10
 10271  03E6  3188  200E  3182   	fcall	_LCD_Set_Cursor
 10272  03E9  0020               	movlb	0	; select bank0
 10273  03EA  356C               	lslf	_choice,w
 10274  03EB  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10275  03EC  0086               	movwf	6
 10276  03ED  0187               	clrf	7
 10277  03EE  3F40               	moviw [0]fsr1
 10278  03EF  00A4               	movwf	LCD_Write_Int@value
 10279  03F0  3F41               	moviw [1]fsr1
 10280  03F1  00A5               	movwf	LCD_Write_Int@value+1
 10281  03F2  01A6               	clrf	LCD_Write_Int@fieldLength
 10282  03F3  03A6               	decf	LCD_Write_Int@fieldLength,f
 10283  03F4  01A7               	clrf	LCD_Write_Int@numPlaces
 10284  03F5  0AA7               	incf	LCD_Write_Int@numPlaces,f
 10285  03F6  2C09               	goto	L5
 10286  03F7                     l3088:	
 10287  03F7  01F4               	clrf	LCD_Set_Cursor@y
 10288  03F8  0AF4               	incf	LCD_Set_Cursor@y,f
 10289  03F9  300A               	movlw	10
 10290  03FA  3188  200E  3182   	fcall	_LCD_Set_Cursor
 10291  03FD  0020               	movlb	0	; select bank0
 10292  03FE  356C               	lslf	_choice,w
 10293  03FF  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10294  0400  0086               	movwf	6
 10295  0401  0187               	clrf	7
 10296  0402  3F40               	moviw [0]fsr1
 10297  0403  00A4               	movwf	LCD_Write_Int@value
 10298  0404  3F41               	moviw [1]fsr1
 10299  0405  00A5               	movwf	LCD_Write_Int@value+1
 10300  0406  01A6               	clrf	LCD_Write_Int@fieldLength
 10301  0407  03A6               	decf	LCD_Write_Int@fieldLength,f
 10302  0408  01A7               	clrf	LCD_Write_Int@numPlaces
 10303  0409                     L5:	
 10304  0409  01A8               	clrf	LCD_Write_Int@sign
 10305  040A  318D  2522  3182   	fcall	_LCD_Write_Int
 10306                           
 10307                           ;menu.c: 105: LCD_Write_Char(' ');
 10308  040D  3020               	movlw	32
 10309  040E  3197  272D  3182   	fcall	_LCD_Write_Char
 10310                           
 10311                           ;menu.c: 106: menuDelay=1255;
 10312  0411  30E7               	movlw	231
 10313  0412  0022               	movlb	2	; select bank2
 10314  0413  00C9               	movwf	_menuDelay^(0+256)
 10315  0414  3004               	movlw	4
 10316  0415  00CA               	movwf	(_menuDelay^(0+256)+1)
 10317                           
 10318                           ;menu.c: 107: if(delayCount<30)
 10319  0416  301E               	movlw	30
 10320  0417  0020               	movlb	0	; select bank0
 10321  0418  026D               	subwf	_delayCount,w
 10322  0419  1803               	skipnc
 10323  041A  2C28               	goto	l376
 10324                           
 10325                           ;menu.c: 108: {
 10326                           ;menu.c: 109: _delay((unsigned long)((150)*(32000000/4000.0)));
 10327  041B  3007               	movlw	7
 10328  041C  00B9               	movwf	??_menuChoice+2
 10329  041D  3017               	movlw	23
 10330  041E  00B8               	movwf	??_menuChoice+1
 10331  041F  306F               	movlw	111
 10332  0420  00B7               	movwf	??_menuChoice
 10333  0421                     u3947:	
 10334  0421  0BB7               	decfsz	??_menuChoice,f
 10335  0422  2C21               	goto	u3947
 10336  0423  0BB8               	decfsz	??_menuChoice+1,f
 10337  0424  2C21               	goto	u3947
 10338  0425  0BB9               	decfsz	??_menuChoice+2,f
 10339  0426  2C21               	goto	u3947
 10340  0427  0000               	nop
 10341  0428                     l376:	
 10342                           
 10343                           ;menu.c: 110: }
 10344                           ;menu.c: 111: if(delayCount>(30+10))delayCount=(30+10);
 10345  0428  3029               	movlw	41
 10346  0429  0020               	movlb	0	; select bank0
 10347  042A  026D               	subwf	_delayCount,w
 10348  042B  1C03               	skipc
 10349  042C  2C31               	goto	l3102
 10350  042D  3028               	movlw	40
 10351  042E  00B7               	movwf	??_menuChoice
 10352  042F  0837               	movf	??_menuChoice,w
 10353  0430  00ED               	movwf	_delayCount
 10354  0431                     l3102:	
 10355                           
 10356                           ;menu.c: 113: timer=0;
 10357  0431  0021               	movlb	1	; select bank1
 10358  0432  01E3               	clrf	_timer^(0+128)
 10359  0433  01E4               	clrf	(_timer+1)^(0+128)
 10360  0434                     l3104:	
 10361                           
 10362                           ;menu.c: 114: }
 10363                           ;menu.c: 117: if(RB1==1)
 10364  0434  0020               	movlb	0	; select bank0
 10365  0435  1C8D               	btfss	13,1	;volatile
 10366  0436  2CC5               	goto	l3136
 10367                           
 10368                           ;menu.c: 118: {
 10369                           ;menu.c: 119: delayCount+=2;
 10370  0437  3002               	movlw	2
 10371  0438  00B7               	movwf	??_menuChoice
 10372  0439  0837               	movf	??_menuChoice,w
 10373  043A  07ED               	addwf	_delayCount,f
 10374                           
 10375                           ;menu.c: 120: setpoint[choice]-=1;
 10376  043B  356C               	lslf	_choice,w
 10377  043C  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10378  043D  0086               	movwf	6
 10379  043E  0187               	clrf	7
 10380  043F  30FF               	movlw	255
 10381  0440  0781               	addwf	1,f
 10382  0441  3141               	addfsr 1,1
 10383  0442  30FF               	movlw	255
 10384  0443  3D81               	addwfc	1,f
 10385  0444  317F               	addfsr 1,-1
 10386                           
 10387                           ;menu.c: 121: if(setpoint[choice]<lowRangeSet[choice])setpoint[choice]=lowRangeSet[choic
      +                          e];
 10388  0445  356C               	lslf	_choice,w
 10389  0446  3E67               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10390  0447  0086               	movwf	6
 10391  0448  3001               	movlw	1	; select bank2/3
 10392  0449  0087               	movwf	7
 10393  044A  3F40               	moviw [0]fsr1
 10394  044B  00B7               	movwf	??_menuChoice
 10395  044C  3F41               	moviw [1]fsr1
 10396  044D  00B8               	movwf	??_menuChoice+1
 10397  044E  356C               	lslf	_choice,w
 10398  044F  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10399  0450  0086               	movwf	6
 10400  0451  0187               	clrf	7
 10401  0452  3F40               	moviw [0]fsr1
 10402  0453  00B9               	movwf	??_menuChoice+2
 10403  0454  3F41               	moviw [1]fsr1
 10404  0455  00BA               	movwf	??_menuChoice+3
 10405  0456  083A               	movf	??_menuChoice+3,w
 10406  0457  3A80               	xorlw	128
 10407  0458  00BB               	movwf	??_menuChoice+4
 10408  0459  0838               	movf	??_menuChoice+1,w
 10409  045A  3A80               	xorlw	128
 10410  045B  023B               	subwf	??_menuChoice+4,w
 10411  045C  1D03               	skipz
 10412  045D  2C60               	goto	u3655
 10413  045E  0837               	movf	??_menuChoice,w
 10414  045F  0239               	subwf	??_menuChoice+2,w
 10415  0460                     u3655:	
 10416  0460  1803               	skipnc
 10417  0461  2C70               	goto	l3114
 10418  0462  0020               	movlb	0	; select bank0
 10419  0463  356C               	lslf	_choice,w
 10420  0464  3E67               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10421  0465  0086               	movwf	6
 10422  0466  3001               	movlw	1	; select bank2/3
 10423  0467  0087               	movwf	7
 10424  0468  356C               	lslf	_choice,w
 10425  0469  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10426  046A  0084               	movwf	4
 10427  046B  0185               	clrf	5
 10428  046C  3F40               	moviw [0]fsr1
 10429  046D  3F80               	movwi [0]fsr0
 10430  046E  3F41               	moviw [1]fsr1
 10431  046F  3F81               	movwi [1]fsr0
 10432  0470                     l3114:	
 10433                           
 10434                           ;menu.c: 122: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10435  0470  0020               	movlb	0	; select bank0
 10436  0471  086C               	movf	_choice,w
 10437  0472  1D03               	btfss	3,2
 10438  0473  2C88               	goto	l3120
 10439  0474  01F4               	clrf	LCD_Set_Cursor@y
 10440  0475  0AF4               	incf	LCD_Set_Cursor@y,f
 10441  0476  300A               	movlw	10
 10442  0477  3188  200E  3182   	fcall	_LCD_Set_Cursor
 10443  047A  0020               	movlb	0	; select bank0
 10444  047B  356C               	lslf	_choice,w
 10445  047C  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10446  047D  0086               	movwf	6
 10447  047E  0187               	clrf	7
 10448  047F  3F40               	moviw [0]fsr1
 10449  0480  00A4               	movwf	LCD_Write_Int@value
 10450  0481  3F41               	moviw [1]fsr1
 10451  0482  00A5               	movwf	LCD_Write_Int@value+1
 10452  0483  01A6               	clrf	LCD_Write_Int@fieldLength
 10453  0484  03A6               	decf	LCD_Write_Int@fieldLength,f
 10454  0485  01A7               	clrf	LCD_Write_Int@numPlaces
 10455  0486  0AA7               	incf	LCD_Write_Int@numPlaces,f
 10456  0487  2C9A               	goto	L6
 10457  0488                     l3120:	
 10458  0488  01F4               	clrf	LCD_Set_Cursor@y
 10459  0489  0AF4               	incf	LCD_Set_Cursor@y,f
 10460  048A  300A               	movlw	10
 10461  048B  3188  200E  3182   	fcall	_LCD_Set_Cursor
 10462  048E  0020               	movlb	0	; select bank0
 10463  048F  356C               	lslf	_choice,w
 10464  0490  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10465  0491  0086               	movwf	6
 10466  0492  0187               	clrf	7
 10467  0493  3F40               	moviw [0]fsr1
 10468  0494  00A4               	movwf	LCD_Write_Int@value
 10469  0495  3F41               	moviw [1]fsr1
 10470  0496  00A5               	movwf	LCD_Write_Int@value+1
 10471  0497  01A6               	clrf	LCD_Write_Int@fieldLength
 10472  0498  03A6               	decf	LCD_Write_Int@fieldLength,f
 10473  0499  01A7               	clrf	LCD_Write_Int@numPlaces
 10474  049A                     L6:	
 10475  049A  01A8               	clrf	LCD_Write_Int@sign
 10476  049B  318D  2522  3182   	fcall	_LCD_Write_Int
 10477                           
 10478                           ;menu.c: 123: LCD_Write_Char(' ');
 10479  049E  3020               	movlw	32
 10480  049F  3197  272D  3182   	fcall	_LCD_Write_Char
 10481                           
 10482                           ;menu.c: 124: menuDelay=1255;
 10483  04A2  30E7               	movlw	231
 10484  04A3  0022               	movlb	2	; select bank2
 10485  04A4  00C9               	movwf	_menuDelay^(0+256)
 10486  04A5  3004               	movlw	4
 10487  04A6  00CA               	movwf	(_menuDelay^(0+256)+1)
 10488                           
 10489                           ;menu.c: 126: if(delayCount<30)
 10490  04A7  301E               	movlw	30
 10491  04A8  0020               	movlb	0	; select bank0
 10492  04A9  026D               	subwf	_delayCount,w
 10493  04AA  1803               	skipnc
 10494  04AB  2CB9               	goto	l382
 10495                           
 10496                           ;menu.c: 127: {
 10497                           ;menu.c: 128: _delay((unsigned long)((150)*(32000000/4000.0)));
 10498  04AC  3007               	movlw	7
 10499  04AD  00B9               	movwf	??_menuChoice+2
 10500  04AE  3017               	movlw	23
 10501  04AF  00B8               	movwf	??_menuChoice+1
 10502  04B0  306F               	movlw	111
 10503  04B1  00B7               	movwf	??_menuChoice
 10504  04B2                     u3957:	
 10505  04B2  0BB7               	decfsz	??_menuChoice,f
 10506  04B3  2CB2               	goto	u3957
 10507  04B4  0BB8               	decfsz	??_menuChoice+1,f
 10508  04B5  2CB2               	goto	u3957
 10509  04B6  0BB9               	decfsz	??_menuChoice+2,f
 10510  04B7  2CB2               	goto	u3957
 10511  04B8  0000               	nop
 10512  04B9                     l382:	
 10513                           
 10514                           ;menu.c: 129: }
 10515                           ;menu.c: 131: if(delayCount>(30+10))delayCount=(30+10);
 10516  04B9  3029               	movlw	41
 10517  04BA  0020               	movlb	0	; select bank0
 10518  04BB  026D               	subwf	_delayCount,w
 10519  04BC  1C03               	skipc
 10520  04BD  2CC2               	goto	l3134
 10521  04BE  3028               	movlw	40
 10522  04BF  00B7               	movwf	??_menuChoice
 10523  04C0  0837               	movf	??_menuChoice,w
 10524  04C1  00ED               	movwf	_delayCount
 10525  04C2                     l3134:	
 10526                           
 10527                           ;menu.c: 133: timer=0;
 10528  04C2  0021               	movlb	1	; select bank1
 10529  04C3  01E3               	clrf	_timer^(0+128)
 10530  04C4  01E4               	clrf	(_timer+1)^(0+128)
 10531  04C5                     l3136:	
 10532                           
 10533                           ;menu.c: 134: }
 10534                           ;menu.c: 136: PWM7_LoadDutyValue(setpoint[1]);
 10535  04C5  0021               	movlb	1	; select bank1
 10536  04C6  0869               	movf	((_setpoint+1)^(0+128)+2),w
 10537  04C7  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
 10538  04C8  0868               	movf	(_setpoint^(0+128)+2),w
 10539  04C9  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
 10540  04CA  3196  2628  3182   	fcall	_PWM7_LoadDutyValue
 10541                           
 10542                           ;menu.c: 139: if(delayCount>0)delayCount-=1;
 10543  04CD  0020               	movlb	0	; select bank0
 10544  04CE  086D               	movf	_delayCount,w
 10545  04CF  1903               	btfsc	3,2
 10546  04D0  2CD3               	goto	l3142
 10547  04D1  3001               	movlw	1
 10548  04D2  02ED               	subwf	_delayCount,f
 10549  04D3                     l3142:	
 10550                           
 10551                           ;menu.c: 141: if(!(RB1 || RB0))
 10552  04D3  1C8D               	btfss	13,1	;volatile
 10553  04D4  180D               	btfsc	13,0	;volatile
 10554  04D5  2CE9               	goto	l3150
 10555                           
 10556                           ;menu.c: 142: {
 10557                           ;menu.c: 143: if(menuDelay>0)
 10558  04D6  0022               	movlb	2	; select bank2
 10559  04D7  084A               	movf	(_menuDelay+1)^(0+256),w
 10560  04D8  3A80               	xorlw	128
 10561  04D9  0020               	movlb	0	; select bank0
 10562  04DA  00B7               	movwf	??_menuChoice
 10563  04DB  3080               	movlw	128
 10564  04DC  0237               	subwf	??_menuChoice,w
 10565  04DD  1D03               	skipz
 10566  04DE  2CE2               	goto	u3725
 10567  04DF  3001               	movlw	1
 10568  04E0  0022               	movlb	2	; select bank2
 10569  04E1  0249               	subwf	_menuDelay^(0+256),w
 10570  04E2                     u3725:	
 10571  04E2  1C03               	skipc
 10572  04E3  2CE9               	goto	l3150
 10573                           
 10574                           ;menu.c: 144: {
 10575                           ;menu.c: 145: menuDelay-=1;
 10576  04E4  30FF               	movlw	255
 10577  04E5  0022               	movlb	2	; select bank2
 10578  04E6  07C9               	addwf	_menuDelay^(0+256),f
 10579  04E7  30FF               	movlw	255
 10580  04E8  3DCA               	addwfc	(_menuDelay+1)^(0+256),f
 10581  04E9                     l3150:	
 10582  04E9  0020               	movlb	0	; select bank0
 10583  04EA  190D               	btfsc	13,2	;volatile
 10584  04EB  2D17               	goto	l3152
 10585                           
 10586                           ;menu.c: 87: {
 10587                           ;menu.c: 88: if(timer > 4000)
 10588  04EC  0021               	movlb	1	; select bank1
 10589  04ED  0864               	movf	(_timer+1)^(0+128),w
 10590  04EE  3A80               	xorlw	128
 10591  04EF  0020               	movlb	0	; select bank0
 10592  04F0  00B7               	movwf	??_menuChoice
 10593  04F1  308F               	movlw	143
 10594  04F2  0237               	subwf	??_menuChoice,w
 10595  04F3  1D03               	skipz
 10596  04F4  2CF8               	goto	u3585
 10597  04F5  30A1               	movlw	161
 10598  04F6  0021               	movlb	1	; select bank1
 10599  04F7  0263               	subwf	_timer^(0+128),w
 10600  04F8                     u3585:	
 10601  04F8  1C03               	skipc
 10602  04F9  2B95               	goto	l3070
 10603                           
 10604                           ;menu.c: 89: {
 10605                           ;menu.c: 90: timer = 0;
 10606  04FA  0021               	movlb	1	; select bank1
 10607  04FB  01E3               	clrf	_timer^(0+128)
 10608  04FC  01E4               	clrf	(_timer+1)^(0+128)
 10609                           
 10610                           ;menu.c: 91: { LCD_Set_Cursor(0,0); LCD_Write_String("   Good-Bye!!   ");};
 10611  04FD  01F4               	clrf	LCD_Set_Cursor@y
 10612  04FE  3000               	movlw	0
 10613  04FF  3188  200E  3182   	fcall	_LCD_Set_Cursor
 10614  0502  303D               	movlw	low (STR_5| (0+32768))
 10615  0503  00F5               	movwf	LCD_Write_String@a
 10616  0504  3090               	movlw	high (STR_5| (0+32768))
 10617  0505  00F6               	movwf	LCD_Write_String@a+1
 10618  0506  3196  2670  3182   	fcall	_LCD_Write_String
 10619                           
 10620                           ;menu.c: 92: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10621  0509  3052               	movlw	82
 10622  050A  0020               	movlb	0	; select bank0
 10623  050B  00B9               	movwf	??_menuChoice+2
 10624  050C  302C               	movlw	44
 10625  050D  00B8               	movwf	??_menuChoice+1
 10626  050E  304F               	movlw	79
 10627  050F  00B7               	movwf	??_menuChoice
 10628  0510                     u3927:	
 10629  0510  0BB7               	decfsz	??_menuChoice,f
 10630  0511  2D10               	goto	u3927
 10631  0512  0BB8               	decfsz	??_menuChoice+1,f
 10632  0513  2D10               	goto	u3927
 10633  0514  0BB9               	decfsz	??_menuChoice+2,f
 10634  0515  2D10               	goto	u3927
 10635  0516  3200               	nop2
 10636  0517                     l3152:	
 10637                           ;menu.c: 146: }
 10638                           ;menu.c: 147: }
 10639                           ;menu.c: 148: }
 10640                           ;menu.c: 149: Exit:
 10641                           
 10642                           
 10643                           ;menu.c: 150: timer=0;
 10644  0517  0021               	movlb	1	; select bank1
 10645  0518  01E3               	clrf	_timer^(0+128)
 10646  0519  01E4               	clrf	(_timer+1)^(0+128)
 10647                           
 10648                           ;menu.c: 151: loop=254;
 10649  051A  30FE               	movlw	254
 10650  051B  0020               	movlb	0	; select bank0
 10651  051C  00B7               	movwf	??_menuChoice
 10652  051D  0837               	movf	??_menuChoice,w
 10653  051E  0021               	movlb	1	; select bank1
 10654  051F  00EE               	movwf	_loop^(0+128)
 10655                           
 10656                           ;menu.c: 152: LCD_Clear();
 10657  0520  3195  25D0         	fcall	_LCD_Clear
 10658                           
 10659                           ;menu.c: 153: TRISC2 = 0;
 10660  0522  0020               	movlb	0	; select bank0
 10661  0523  1113               	bcf	19,2	;volatile
 10662  0524  0008               	return
 10663  0525                     __end_of_menuChoice:	
 10664                           
 10665                           	psect	text18
 10666  0004                     __ptext18:	
 10667 ;; *************** function _readKey *****************
 10668 ;; Defined at:
 10669 ;;		line 41 in file "menu.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;		None
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;		None
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  1    wreg      unsigned char 
 10676 ;; Registers used:
 10677 ;;		wreg, status,2, status,0
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10687 ;;Total ram usage:        1 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; This function calls:
 10690 ;;		Nothing
 10691 ;; This function is called by:
 10692 ;;		_menuChoice
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696                           
 10697                           ;psect for function _readKey
 10698  0004                     _readKey:	
 10699                           
 10700                           ;menu.c: 43: if(RB1==1)
 10701                           
 10702                           ;incstack = 0
 10703                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10704  0004  0020               	movlb	0	; select bank0
 10705  0005  1C8D               	btfss	13,1	;volatile
 10706  0006  280C               	goto	l2748
 10707                           
 10708                           ;menu.c: 44: {
 10709                           ;menu.c: 45: if(key>0)key-=1;
 10710  0007  086E               	movf	_key,w
 10711  0008  1903               	btfsc	3,2
 10712  0009  280C               	goto	l2748
 10713  000A  3001               	movlw	1
 10714  000B  02EE               	subwf	_key,f
 10715  000C                     l2748:	
 10716                           
 10717                           ;menu.c: 46: }
 10718                           ;menu.c: 48: if(RB0==1)
 10719  000C  1C0D               	btfss	13,0	;volatile
 10720  000D  2815               	goto	l2754
 10721                           
 10722                           ;menu.c: 49: {
 10723                           ;menu.c: 50: if(key<1)key+=1;
 10724  000E  086E               	movf	_key,w
 10725  000F  1D03               	btfss	3,2
 10726  0010  2815               	goto	l2754
 10727  0011  3001               	movlw	1
 10728  0012  00F0               	movwf	??_readKey
 10729  0013  0870               	movf	??_readKey,w
 10730  0014  07EE               	addwf	_key,f
 10731  0015                     l2754:	
 10732                           
 10733                           ;menu.c: 51: }
 10734                           ;menu.c: 53: return key;
 10735  0015  086E               	movf	_key,w
 10736  0016  0008               	return
 10737  0017                     __end_of_readKey:	
 10738                           
 10739                           	psect	text19
 10740  1628                     __ptext19:	
 10741 ;; *************** function _PWM7_LoadDutyValue *****************
 10742 ;; Defined at:
 10743 ;;		line 32 in file "pwm.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;		None
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  1    wreg      void 
 10750 ;; Registers used:
 10751 ;;		wreg, status,2, status,0
 10752 ;; Tracked objects:
 10753 ;;		On entry : 0/0
 10754 ;;		On exit  : 0/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;Total ram usage:        4 bytes
 10762 ;; Hardware stack levels used:    1
 10763 ;; This function calls:
 10764 ;;		Nothing
 10765 ;; This function is called by:
 10766 ;;		_menuChoice
 10767 ;;		_main
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           
 10772                           ;psect for function _PWM7_LoadDutyValue
 10773  1628                     _PWM7_LoadDutyValue:	
 10774                           
 10775                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10776                           
 10777                           ;incstack = 0
 10778                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10779  1628  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10780  1629  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10781  162A  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10782  162B  00F2               	movwf	??_PWM7_LoadDutyValue
 10783  162C  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10784  162D  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10785  162E  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10786  162F  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10787  1630  0872               	movf	??_PWM7_LoadDutyValue,w
 10788  1631  0027               	movlb	7	; select bank7
 10789  1632  0091               	movwf	17	;volatile
 10790                           
 10791                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10792  1633  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10793  1634  3903               	andlw	3
 10794  1635  00F2               	movwf	??_PWM7_LoadDutyValue
 10795  1636  3005               	movlw	5
 10796  1637                     u2945:	
 10797  1637  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10798  1638  3EFF               	addlw	-1
 10799  1639  1D03               	skipz
 10800  163A  2E37               	goto	u2945
 10801  163B  3572               	lslf	??_PWM7_LoadDutyValue,w
 10802  163C  0090               	movwf	16	;volatile
 10803  163D  0008               	return
 10804  163E                     __end_of_PWM7_LoadDutyValue:	
 10805                           
 10806                           	psect	text20
 10807  1670                     __ptext20:	
 10808 ;; *************** function _LCD_Write_String *****************
 10809 ;; Defined at:
 10810 ;;		line 239 in file "lcd.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;  a               2    5[COMMON] PTR const unsigned char 
 10813 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 10814 ;;		 -> STR_3(17), STR_2(11), STR_1(11), 
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;  i               2    8[COMMON] int 
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  1    wreg      void 
 10819 ;; Registers used:
 10820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10827 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;Total ram usage:        5 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; Hardware stack levels required when called:    2
 10833 ;; This function calls:
 10834 ;;		_LCD_Write_Char
 10835 ;; This function is called by:
 10836 ;;		_menuChoice
 10837 ;;		_main
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           
 10842                           ;psect for function _LCD_Write_String
 10843  1670                     _LCD_Write_String:	
 10844                           
 10845                           ;lcd.c: 241: int i;
 10846                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10847                           
 10848                           ;incstack = 0
 10849                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10850  1670  01F8               	clrf	LCD_Write_String@i
 10851  1671  01F9               	clrf	LCD_Write_String@i+1
 10852  1672                     l2600:	
 10853  1672  0875               	movf	LCD_Write_String@a,w
 10854  1673  0778               	addwf	LCD_Write_String@i,w
 10855  1674  0084               	movwf	4
 10856  1675  0876               	movf	LCD_Write_String@a+1,w
 10857  1676  3D79               	addwfc	LCD_Write_String@i+1,w
 10858  1677  0085               	movwf	5
 10859  1678  0012               	moviw fsr0++
 10860  1679  1903               	btfsc	3,2
 10861  167A  0008               	return
 10862                           
 10863                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10864  167B  0875               	movf	LCD_Write_String@a,w
 10865  167C  0778               	addwf	LCD_Write_String@i,w
 10866  167D  0084               	movwf	4
 10867  167E  0876               	movf	LCD_Write_String@a+1,w
 10868  167F  3D79               	addwfc	LCD_Write_String@i+1,w
 10869  1680  0085               	movwf	5
 10870  1681  0800               	movf	0,w	;code access
 10871  1682  3197  272D  3196   	fcall	_LCD_Write_Char
 10872  1685  3001               	movlw	1
 10873  1686  07F8               	addwf	LCD_Write_String@i,f
 10874  1687  3000               	movlw	0
 10875  1688  3DF9               	addwfc	LCD_Write_String@i+1,f
 10876  1689  2E72               	goto	l2600
 10877  168A                     __end_of_LCD_Write_String:	
 10878                           
 10879                           	psect	text21
 10880  0D22                     __ptext21:	
 10881 ;; *************** function _LCD_Write_Int *****************
 10882 ;; Defined at:
 10883 ;;		line 246 in file "lcd.c"
 10884 ;; Parameters:    Size  Location     Type
 10885 ;;  value           2    4[BANK0 ] int 
 10886 ;;  fieldLength     1    6[BANK0 ] char 
 10887 ;;  numPlaces       1    7[BANK0 ] char 
 10888 ;;  sign            1    8[BANK0 ] char 
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  str             5   14[BANK0 ] unsigned char [5]
 10891 ;;  i               2   21[BANK0 ] int 
 10892 ;;  j               2   19[BANK0 ] int 
 10893 ;; Return value:  Size  Location     Type
 10894 ;;                  1    wreg      void 
 10895 ;; Registers used:
 10896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10897 ;; Tracked objects:
 10898 ;;		On entry : 0/0
 10899 ;;		On exit  : 0/0
 10900 ;;		Unchanged: 0/0
 10901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10902 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10905 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10906 ;;Total ram usage:       19 bytes
 10907 ;; Hardware stack levels used:    1
 10908 ;; Hardware stack levels required when called:    2
 10909 ;; This function calls:
 10910 ;;		_LCD_Write_Char
 10911 ;;		___awdiv
 10912 ;;		___awmod
 10913 ;; This function is called by:
 10914 ;;		_menuChoice
 10915 ;;		_main
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           
 10920                           ;psect for function _LCD_Write_Int
 10921  0D22                     _LCD_Write_Int:	
 10922                           
 10923                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10924                           
 10925                           ;incstack = 0
 10926                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10927  0D22  303C               	movlw	low LCD_Write_Int@F13694
 10928  0D23  0086               	movwf	6
 10929  0D24  3001               	movlw	high LCD_Write_Int@F13694
 10930  0D25  0087               	movwf	7
 10931  0D26  302E               	movlw	low LCD_Write_Int@str
 10932  0D27  0084               	movwf	4
 10933  0D28  3000               	movlw	high LCD_Write_Int@str
 10934  0D29  0085               	movwf	5
 10935  0D2A  3005               	movlw	5
 10936  0D2B  0020               	movlb	0	; select bank0
 10937  0D2C  00A9               	movwf	??_LCD_Write_Int
 10938  0D2D                     u2830:	
 10939  0D2D  0016               	moviw fsr1++
 10940  0D2E  001A               	movwi fsr0++
 10941  0D2F  0BA9               	decfsz	??_LCD_Write_Int,f
 10942  0D30  2D2D               	goto	u2830
 10943                           
 10944                           ;lcd.c: 249: int i=4,j=0;
 10945  0D31  3004               	movlw	4
 10946  0D32  00B5               	movwf	LCD_Write_Int@i
 10947  0D33  3000               	movlw	0
 10948  0D34  00B6               	movwf	LCD_Write_Int@i+1
 10949  0D35  01B3               	clrf	LCD_Write_Int@j
 10950  0D36  01B4               	clrf	LCD_Write_Int@j+1
 10951                           
 10952                           ;lcd.c: 251: if(value<0)
 10953  0D37  1FA5               	btfss	LCD_Write_Int@value+1,7
 10954  0D38  2D44               	goto	l2614
 10955                           
 10956                           ;lcd.c: 252: {
 10957                           ;lcd.c: 253: LCD_Write_Char('-');
 10958  0D39  302D               	movlw	45
 10959  0D3A  3197  272D  318D   	fcall	_LCD_Write_Char
 10960                           
 10961                           ;lcd.c: 254: value=value*-1;
 10962  0D3D  0020               	movlb	0	; select bank0
 10963  0D3E  09A4               	comf	LCD_Write_Int@value,f
 10964  0D3F  09A5               	comf	LCD_Write_Int@value+1,f
 10965  0D40  0AA4               	incf	LCD_Write_Int@value,f
 10966  0D41  1903               	skipnz
 10967  0D42  0AA5               	incf	LCD_Write_Int@value+1,f
 10968                           
 10969                           ;lcd.c: 255: }
 10970  0D43  2D4B               	goto	l2624
 10971  0D44                     l2614:	
 10972                           
 10973                           ;lcd.c: 257: else
 10974                           ;lcd.c: 258: {
 10975                           ;lcd.c: 259: if(sign == 1)
 10976  0D44  0328               	decf	LCD_Write_Int@sign,w
 10977  0D45  1D03               	btfss	3,2
 10978  0D46  2D4B               	goto	l2624
 10979                           
 10980                           ;lcd.c: 260: {
 10981                           ;lcd.c: 261: LCD_Write_Char('+');
 10982  0D47  302B               	movlw	43
 10983  0D48  3197  272D  318D   	fcall	_LCD_Write_Char
 10984  0D4B                     l2624:	
 10985                           ;lcd.c: 262: }
 10986                           ;lcd.c: 263: }
 10987                           ;lcd.c: 265: while(value)
 10988                           
 10989  0D4B  0020               	movlb	0	; select bank0
 10990  0D4C  0824               	movf	LCD_Write_Int@value,w
 10991  0D4D  0425               	iorwf	LCD_Write_Int@value+1,w
 10992  0D4E  1903               	btfsc	3,2
 10993  0D4F  2D7A               	goto	l2626
 10994                           
 10995                           ;lcd.c: 266: {
 10996                           ;lcd.c: 267: str[i]=value%10;
 10997  0D50  300A               	movlw	10
 10998  0D51  00F0               	movwf	___awmod@divisor
 10999  0D52  3000               	movlw	0
 11000  0D53  00F1               	movwf	___awmod@divisor+1
 11001  0D54  0020               	movlb	0	; select bank0
 11002  0D55  0825               	movf	LCD_Write_Int@value+1,w
 11003  0D56  00F3               	movwf	___awmod@dividend+1
 11004  0D57  0824               	movf	LCD_Write_Int@value,w
 11005  0D58  00F2               	movwf	___awmod@dividend
 11006  0D59  3188  208F  318D   	fcall	___awmod
 11007  0D5C  0870               	movf	?___awmod,w
 11008  0D5D  0020               	movlb	0	; select bank0
 11009  0D5E  00A9               	movwf	??_LCD_Write_Int
 11010  0D5F  0835               	movf	LCD_Write_Int@i,w
 11011  0D60  3E2E               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11012  0D61  0086               	movwf	6
 11013  0D62  0187               	clrf	7
 11014  0D63  0829               	movf	??_LCD_Write_Int,w
 11015  0D64  0081               	movwf	1
 11016                           
 11017                           ;lcd.c: 268: value=value/10;
 11018  0D65  300A               	movlw	10
 11019  0D66  00F6               	movwf	___awdiv@divisor
 11020  0D67  3000               	movlw	0
 11021  0D68  00F7               	movwf	___awdiv@divisor+1
 11022  0D69  0825               	movf	LCD_Write_Int@value+1,w
 11023  0D6A  00F9               	movwf	___awdiv@dividend+1
 11024  0D6B  0824               	movf	LCD_Write_Int@value,w
 11025  0D6C  00F8               	movwf	___awdiv@dividend
 11026  0D6D  3188  20D4  318D   	fcall	___awdiv
 11027  0D70  0877               	movf	?___awdiv+1,w
 11028  0D71  0020               	movlb	0	; select bank0
 11029  0D72  00A5               	movwf	LCD_Write_Int@value+1
 11030  0D73  0876               	movf	?___awdiv,w
 11031  0D74  00A4               	movwf	LCD_Write_Int@value
 11032                           
 11033                           ;lcd.c: 269: i--;
 11034  0D75  30FF               	movlw	255
 11035  0D76  07B5               	addwf	LCD_Write_Int@i,f
 11036  0D77  30FF               	movlw	255
 11037  0D78  3DB6               	addwfc	LCD_Write_Int@i+1,f
 11038  0D79  2D4B               	goto	l2624
 11039  0D7A                     l2626:	
 11040                           
 11041                           ;lcd.c: 270: }
 11042                           ;lcd.c: 271: if(fieldLength==-1)
 11043  0D7A  0A26               	incf	LCD_Write_Int@fieldLength,w
 11044  0D7B  1903               	btfsc	3,2
 11045  0D7C  2D82               	goto	l2632
 11046  0D7D  2D8A               	goto	l2634
 11047  0D7E                     l2630:	
 11048                           ;lcd.c: 272: {
 11049                           ;lcd.c: 273: while(str[j]==0)
 11050                           
 11051                           
 11052                           ;lcd.c: 274: {
 11053                           ;lcd.c: 275: j++;
 11054  0D7E  3001               	movlw	1
 11055  0D7F  07B3               	addwf	LCD_Write_Int@j,f
 11056  0D80  3000               	movlw	0
 11057  0D81  3DB4               	addwfc	LCD_Write_Int@j+1,f
 11058  0D82                     l2632:	
 11059  0D82  0833               	movf	LCD_Write_Int@j,w
 11060  0D83  3E2E               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11061  0D84  0086               	movwf	6
 11062  0D85  0187               	clrf	7
 11063  0D86  0801               	movf	1,w
 11064  0D87  1D03               	btfss	3,2
 11065  0D88  2D9A               	goto	l2636
 11066  0D89  2D7E               	goto	l2630
 11067  0D8A                     l2634:	
 11068                           ;lcd.c: 276: }
 11069                           ;lcd.c: 277: }
 11070                           
 11071                           
 11072                           ;lcd.c: 278: else
 11073                           ;lcd.c: 279: {
 11074                           ;lcd.c: 280: j=5-fieldLength;
 11075  0D8A  0826               	movf	LCD_Write_Int@fieldLength,w
 11076  0D8B  00A9               	movwf	??_LCD_Write_Int
 11077  0D8C  01AA               	clrf	??_LCD_Write_Int+1
 11078  0D8D  1BA9               	btfsc	??_LCD_Write_Int,7
 11079  0D8E  03AA               	decf	??_LCD_Write_Int+1,f
 11080  0D8F  09A9               	comf	??_LCD_Write_Int,f
 11081  0D90  09AA               	comf	??_LCD_Write_Int+1,f
 11082  0D91  0AA9               	incf	??_LCD_Write_Int,f
 11083  0D92  1903               	skipnz
 11084  0D93  0AAA               	incf	??_LCD_Write_Int+1,f
 11085  0D94  0829               	movf	??_LCD_Write_Int,w
 11086  0D95  3E05               	addlw	5
 11087  0D96  00B3               	movwf	LCD_Write_Int@j
 11088  0D97  3000               	movlw	0
 11089  0D98  3D2A               	addwfc	??_LCD_Write_Int+1,w
 11090  0D99  00B4               	movwf	LCD_Write_Int@j+1
 11091  0D9A                     l2636:	
 11092                           
 11093                           ;lcd.c: 281: }
 11094                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11095  0D9A  0834               	movf	LCD_Write_Int@j+1,w
 11096  0D9B  00B6               	movwf	LCD_Write_Int@i+1
 11097  0D9C  0833               	movf	LCD_Write_Int@j,w
 11098  0D9D  00B5               	movwf	LCD_Write_Int@i
 11099  0D9E                     l2642:	
 11100  0D9E  0827               	movf	LCD_Write_Int@numPlaces,w
 11101  0D9F  00A9               	movwf	??_LCD_Write_Int
 11102  0DA0  01AA               	clrf	??_LCD_Write_Int+1
 11103  0DA1  1BA9               	btfsc	??_LCD_Write_Int,7
 11104  0DA2  03AA               	decf	??_LCD_Write_Int+1,f
 11105  0DA3  09A9               	comf	??_LCD_Write_Int,f
 11106  0DA4  09AA               	comf	??_LCD_Write_Int+1,f
 11107  0DA5  0AA9               	incf	??_LCD_Write_Int,f
 11108  0DA6  1903               	skipnz
 11109  0DA7  0AAA               	incf	??_LCD_Write_Int+1,f
 11110  0DA8  0829               	movf	??_LCD_Write_Int,w
 11111  0DA9  3E05               	addlw	5
 11112  0DAA  00AB               	movwf	??_LCD_Write_Int+2
 11113  0DAB  3000               	movlw	0
 11114  0DAC  3D2A               	addwfc	??_LCD_Write_Int+1,w
 11115  0DAD  00AC               	movwf	??_LCD_Write_Int+3
 11116  0DAE  0836               	movf	LCD_Write_Int@i+1,w
 11117  0DAF  3A80               	xorlw	128
 11118  0DB0  00AD               	movwf	??_LCD_Write_Int+4
 11119  0DB1  082C               	movf	??_LCD_Write_Int+3,w
 11120  0DB2  3A80               	xorlw	128
 11121  0DB3  022D               	subwf	??_LCD_Write_Int+4,w
 11122  0DB4  1D03               	skipz
 11123  0DB5  2DB8               	goto	u2895
 11124  0DB6  082B               	movf	??_LCD_Write_Int+2,w
 11125  0DB7  0235               	subwf	LCD_Write_Int@i,w
 11126  0DB8                     u2895:	
 11127  0DB8  1803               	btfsc	3,0
 11128  0DB9  2DCA               	goto	l2644
 11129                           
 11130                           ;lcd.c: 284: {
 11131                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11132  0DBA  0020               	movlb	0	; select bank0
 11133  0DBB  0835               	movf	LCD_Write_Int@i,w
 11134  0DBC  3E2E               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11135  0DBD  0086               	movwf	6
 11136  0DBE  0187               	clrf	7
 11137  0DBF  0801               	movf	1,w
 11138  0DC0  3E30               	addlw	48
 11139  0DC1  3197  272D  318D   	fcall	_LCD_Write_Char
 11140  0DC4  3001               	movlw	1
 11141  0DC5  0020               	movlb	0	; select bank0
 11142  0DC6  07B5               	addwf	LCD_Write_Int@i,f
 11143  0DC7  3000               	movlw	0
 11144  0DC8  3DB6               	addwfc	LCD_Write_Int@i+1,f
 11145  0DC9  2D9E               	goto	l2642
 11146  0DCA                     l2644:	
 11147                           
 11148                           ;lcd.c: 286: }
 11149                           ;lcd.c: 288: if(numPlaces == 1)
 11150  0DCA  0020               	movlb	0	; select bank0
 11151  0DCB  0327               	decf	LCD_Write_Int@numPlaces,w
 11152  0DCC  1D03               	btfss	3,2
 11153  0DCD  2DD8               	goto	l2648
 11154                           
 11155                           ;lcd.c: 289: {
 11156                           ;lcd.c: 290: LCD_Write_Char(46);
 11157  0DCE  302E               	movlw	46
 11158  0DCF  3197  272D  318D   	fcall	_LCD_Write_Char
 11159                           
 11160                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11161  0DD2  0020               	movlb	0	; select bank0
 11162  0DD3  0832               	movf	LCD_Write_Int@str+4,w
 11163  0DD4  3E30               	addlw	48
 11164  0DD5  3197  272D  318D   	fcall	_LCD_Write_Char
 11165  0DD8                     l2648:	
 11166                           
 11167                           ;lcd.c: 292: }
 11168                           ;lcd.c: 294: if(numPlaces == 2)
 11169  0DD8  3002               	movlw	2
 11170  0DD9  0020               	movlb	0	; select bank0
 11171  0DDA  0627               	xorwf	LCD_Write_Int@numPlaces,w
 11172  0DDB  1D03               	btfss	3,2
 11173  0DDC  0008               	return
 11174                           
 11175                           ;lcd.c: 295: {
 11176                           ;lcd.c: 296: LCD_Write_Char(46);
 11177  0DDD  302E               	movlw	46
 11178  0DDE  3197  272D  318D   	fcall	_LCD_Write_Char
 11179                           
 11180                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11181  0DE1  0020               	movlb	0	; select bank0
 11182  0DE2  0831               	movf	LCD_Write_Int@str+3,w
 11183  0DE3  3E30               	addlw	48
 11184  0DE4  3197  272D  318D   	fcall	_LCD_Write_Char
 11185                           
 11186                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11187  0DE7  0020               	movlb	0	; select bank0
 11188  0DE8  0832               	movf	LCD_Write_Int@str+4,w
 11189  0DE9  3E30               	addlw	48
 11190  0DEA  3197  272D         	fcall	_LCD_Write_Char
 11191  0DEC  0008               	return
 11192  0DED                     __end_of_LCD_Write_Int:	
 11193                           
 11194                           	psect	text22
 11195  088F                     __ptext22:	
 11196 ;; *************** function ___awmod *****************
 11197 ;; Defined at:
 11198 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;  divisor         2    0[COMMON] int 
 11201 ;;  dividend        2    2[COMMON] int 
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;  sign            1    6[COMMON] unsigned char 
 11204 ;;  counter         1    5[COMMON] unsigned char 
 11205 ;; Return value:  Size  Location     Type
 11206 ;;                  2    0[COMMON] int 
 11207 ;; Registers used:
 11208 ;;		wreg, status,2, status,0
 11209 ;; Tracked objects:
 11210 ;;		On entry : 0/0
 11211 ;;		On exit  : 0/0
 11212 ;;		Unchanged: 0/0
 11213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;Total ram usage:        7 bytes
 11219 ;; Hardware stack levels used:    1
 11220 ;; This function calls:
 11221 ;;		Nothing
 11222 ;; This function is called by:
 11223 ;;		_LCD_Write_Int
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           
 11227                           
 11228                           ;psect for function ___awmod
 11229  088F                     ___awmod:	
 11230                           
 11231                           ;incstack = 0
 11232                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11233  088F  01F6               	clrf	___awmod@sign
 11234  0890  1FF3               	btfss	___awmod@dividend+1,7
 11235  0891  2899               	goto	l2406
 11236  0892  09F2               	comf	___awmod@dividend,f
 11237  0893  09F3               	comf	___awmod@dividend+1,f
 11238  0894  0AF2               	incf	___awmod@dividend,f
 11239  0895  1903               	skipnz
 11240  0896  0AF3               	incf	___awmod@dividend+1,f
 11241  0897  01F6               	clrf	___awmod@sign
 11242  0898  0AF6               	incf	___awmod@sign,f
 11243  0899                     l2406:	
 11244  0899  1FF1               	btfss	___awmod@divisor+1,7
 11245  089A  28A0               	goto	l2410
 11246  089B  09F0               	comf	___awmod@divisor,f
 11247  089C  09F1               	comf	___awmod@divisor+1,f
 11248  089D  0AF0               	incf	___awmod@divisor,f
 11249  089E  1903               	skipnz
 11250  089F  0AF1               	incf	___awmod@divisor+1,f
 11251  08A0                     l2410:	
 11252  08A0  0870               	movf	___awmod@divisor,w
 11253  08A1  0471               	iorwf	___awmod@divisor+1,w
 11254  08A2  1903               	btfsc	3,2
 11255  08A3  28C7               	goto	l2428
 11256  08A4  01F5               	clrf	___awmod@counter
 11257  08A5  0AF5               	incf	___awmod@counter,f
 11258  08A6                     l2418:	
 11259  08A6  1BF1               	btfsc	___awmod@divisor+1,7
 11260  08A7  28B2               	goto	l2420
 11261  08A8  3001               	movlw	1
 11262  08A9                     u2635:	
 11263  08A9  35F0               	lslf	___awmod@divisor,f
 11264  08AA  0DF1               	rlf	___awmod@divisor+1,f
 11265  08AB  0B89               	decfsz	9,f
 11266  08AC  28A9               	goto	u2635
 11267  08AD  3001               	movlw	1
 11268  08AE  00F4               	movwf	??___awmod
 11269  08AF  0874               	movf	??___awmod,w
 11270  08B0  07F5               	addwf	___awmod@counter,f
 11271  08B1  28A6               	goto	l2418
 11272  08B2                     l2420:	
 11273  08B2  0871               	movf	___awmod@divisor+1,w
 11274  08B3  0273               	subwf	___awmod@dividend+1,w
 11275  08B4  1D03               	skipz
 11276  08B5  28B8               	goto	u2655
 11277  08B6  0870               	movf	___awmod@divisor,w
 11278  08B7  0272               	subwf	___awmod@dividend,w
 11279  08B8                     u2655:	
 11280  08B8  1C03               	skipc
 11281  08B9  28BE               	goto	l2424
 11282  08BA  0870               	movf	___awmod@divisor,w
 11283  08BB  02F2               	subwf	___awmod@dividend,f
 11284  08BC  0871               	movf	___awmod@divisor+1,w
 11285  08BD  3BF3               	subwfb	___awmod@dividend+1,f
 11286  08BE                     l2424:	
 11287  08BE  3001               	movlw	1
 11288  08BF                     u2665:	
 11289  08BF  36F1               	lsrf	___awmod@divisor+1,f
 11290  08C0  0CF0               	rrf	___awmod@divisor,f
 11291  08C1  0B89               	decfsz	9,f
 11292  08C2  28BF               	goto	u2665
 11293  08C3  3001               	movlw	1
 11294  08C4  02F5               	subwf	___awmod@counter,f
 11295  08C5  1D03               	btfss	3,2
 11296  08C6  28B2               	goto	l2420
 11297  08C7                     l2428:	
 11298  08C7  0876               	movf	___awmod@sign,w
 11299  08C8  1903               	btfsc	3,2
 11300  08C9  28CF               	goto	l2432
 11301  08CA  09F2               	comf	___awmod@dividend,f
 11302  08CB  09F3               	comf	___awmod@dividend+1,f
 11303  08CC  0AF2               	incf	___awmod@dividend,f
 11304  08CD  1903               	skipnz
 11305  08CE  0AF3               	incf	___awmod@dividend+1,f
 11306  08CF                     l2432:	
 11307  08CF  0873               	movf	___awmod@dividend+1,w
 11308  08D0  00F1               	movwf	?___awmod+1
 11309  08D1  0872               	movf	___awmod@dividend,w
 11310  08D2  00F0               	movwf	?___awmod
 11311  08D3  0008               	return
 11312  08D4                     __end_of___awmod:	
 11313                           
 11314                           	psect	text23
 11315  080E                     __ptext23:	
 11316 ;; *************** function _LCD_Set_Cursor *****************
 11317 ;; Defined at:
 11318 ;;		line 82 in file "lcd.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;  x               1    wreg     unsigned char 
 11321 ;;  y               1    4[COMMON] unsigned char 
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;  x               1    7[COMMON] unsigned char 
 11324 ;;  temp            1   10[COMMON] unsigned char 
 11325 ;;  w               1    9[COMMON] unsigned char 
 11326 ;;  z               1    8[COMMON] unsigned char 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		wreg, status,2, status,0, pclath, cstack
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11336 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;Total ram usage:        7 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:    2
 11343 ;; This function calls:
 11344 ;;		_LCD_Cmd
 11345 ;; This function is called by:
 11346 ;;		_menuChoice
 11347 ;;		_main
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           
 11352                           ;psect for function _LCD_Set_Cursor
 11353  080E                     _LCD_Set_Cursor:	
 11354                           
 11355                           ;incstack = 0
 11356                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11357                           ;LCD_Set_Cursor@x stored from wreg
 11358  080E  00F7               	movwf	LCD_Set_Cursor@x
 11359                           
 11360                           ;lcd.c: 86: char temp,z,w;
 11361                           ;lcd.c: 88: if(y == 0)
 11362  080F  0874               	movf	LCD_Set_Cursor@y,w
 11363  0810  1D03               	btfss	3,2
 11364  0811  282E               	goto	l2550
 11365                           
 11366                           ;lcd.c: 89: {
 11367                           ;lcd.c: 90: temp = 0x80 + x;
 11368  0812  0877               	movf	LCD_Set_Cursor@x,w
 11369  0813  3E80               	addlw	128
 11370  0814  00F5               	movwf	??_LCD_Set_Cursor
 11371  0815  0875               	movf	??_LCD_Set_Cursor,w
 11372  0816  00FA               	movwf	LCD_Set_Cursor@temp
 11373                           
 11374                           ;lcd.c: 91: z = temp>>4;
 11375  0817  087A               	movf	LCD_Set_Cursor@temp,w
 11376  0818  00F5               	movwf	??_LCD_Set_Cursor
 11377  0819  3004               	movlw	4
 11378  081A                     u2795:	
 11379  081A  36F5               	lsrf	??_LCD_Set_Cursor,f
 11380  081B  0B89               	decfsz	9,f
 11381  081C  281A               	goto	u2795
 11382  081D  0875               	movf	??_LCD_Set_Cursor,w
 11383  081E  00F6               	movwf	??_LCD_Set_Cursor+1
 11384  081F  0876               	movf	??_LCD_Set_Cursor+1,w
 11385  0820  00F8               	movwf	LCD_Set_Cursor@z
 11386                           
 11387                           ;lcd.c: 92: w = temp & 0x0F;
 11388  0821  087A               	movf	LCD_Set_Cursor@temp,w
 11389  0822  390F               	andlw	15
 11390  0823  00F5               	movwf	??_LCD_Set_Cursor
 11391  0824  0875               	movf	??_LCD_Set_Cursor,w
 11392  0825  00F9               	movwf	LCD_Set_Cursor@w
 11393                           
 11394                           ;lcd.c: 93: LCD_Cmd(z);
 11395  0826  0878               	movf	LCD_Set_Cursor@z,w
 11396  0827  3196  2614  3188   	fcall	_LCD_Cmd
 11397                           
 11398                           ;lcd.c: 94: LCD_Cmd(w);
 11399  082A  0879               	movf	LCD_Set_Cursor@w,w
 11400  082B  3196  2614         	fcall	_LCD_Cmd
 11401                           
 11402                           ;lcd.c: 95: }
 11403  082D  0008               	return
 11404  082E                     l2550:	
 11405                           
 11406                           ;lcd.c: 97: else if(y == 1)
 11407  082E  0374               	decf	LCD_Set_Cursor@y,w
 11408  082F  1D03               	btfss	3,2
 11409  0830  0008               	return
 11410                           
 11411                           ;lcd.c: 98: {
 11412                           ;lcd.c: 99: temp = 0xC0 + x;
 11413  0831  0877               	movf	LCD_Set_Cursor@x,w
 11414  0832  3EC0               	addlw	192
 11415  0833  00F5               	movwf	??_LCD_Set_Cursor
 11416  0834  0875               	movf	??_LCD_Set_Cursor,w
 11417  0835  00FA               	movwf	LCD_Set_Cursor@temp
 11418                           
 11419                           ;lcd.c: 100: z = temp>>4;
 11420  0836  087A               	movf	LCD_Set_Cursor@temp,w
 11421  0837  00F5               	movwf	??_LCD_Set_Cursor
 11422  0838  3004               	movlw	4
 11423  0839                     u2815:	
 11424  0839  36F5               	lsrf	??_LCD_Set_Cursor,f
 11425  083A  0B89               	decfsz	9,f
 11426  083B  2839               	goto	u2815
 11427  083C  0875               	movf	??_LCD_Set_Cursor,w
 11428  083D  00F6               	movwf	??_LCD_Set_Cursor+1
 11429  083E  0876               	movf	??_LCD_Set_Cursor+1,w
 11430  083F  00F8               	movwf	LCD_Set_Cursor@z
 11431                           
 11432                           ;lcd.c: 101: w = temp & 0x0F;
 11433  0840  087A               	movf	LCD_Set_Cursor@temp,w
 11434  0841  390F               	andlw	15
 11435  0842  00F5               	movwf	??_LCD_Set_Cursor
 11436  0843  0875               	movf	??_LCD_Set_Cursor,w
 11437  0844  00F9               	movwf	LCD_Set_Cursor@w
 11438                           
 11439                           ;lcd.c: 102: LCD_Cmd(z);
 11440  0845  0878               	movf	LCD_Set_Cursor@z,w
 11441  0846  3196  2614  3188   	fcall	_LCD_Cmd
 11442                           
 11443                           ;lcd.c: 103: LCD_Cmd(w);
 11444  0849  0879               	movf	LCD_Set_Cursor@w,w
 11445  084A  3196  2614         	fcall	_LCD_Cmd
 11446  084C  0008               	return
 11447  084D                     __end_of_LCD_Set_Cursor:	
 11448                           
 11449                           	psect	text24
 11450  084D                     __ptext24:	
 11451 ;; *************** function _SYSTEM_Initialize *****************
 11452 ;; Defined at:
 11453 ;;		line 71 in file "system.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;		None
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;		None
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      void 
 11460 ;; Registers used:
 11461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;Total ram usage:        3 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:    3
 11474 ;; This function calls:
 11475 ;;		_ADCC_Initialize
 11476 ;;		_InitCustomChars
 11477 ;;		_LCD_Clear
 11478 ;;		_LCD_Init
 11479 ;;		_OSCILLATOR_Initialize
 11480 ;;		_PIN_MANAGER_Initialize
 11481 ;;		_PWM_Initialize
 11482 ;;		_TMR2_Initialize
 11483 ;; This function is called by:
 11484 ;;		_main
 11485 ;; This function uses a non-reentrant model
 11486 ;;
 11487                           
 11488                           
 11489                           ;psect for function _SYSTEM_Initialize
 11490  084D                     _SYSTEM_Initialize:	
 11491                           
 11492                           ;system.c: 73: PIN_MANAGER_Initialize();
 11493                           
 11494                           ;incstack = 0
 11495                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11496  084D  3197  2759  3188   	fcall	_PIN_MANAGER_Initialize
 11497                           
 11498                           ;system.c: 74: OSCILLATOR_Initialize();
 11499  0850  3195  25D8  3188   	fcall	_OSCILLATOR_Initialize
 11500                           
 11501                           ;system.c: 75: FVRCON = 0x00;
 11502  0853  0032               	movlb	18	; select bank18
 11503  0854  018C               	clrf	12	;volatile
 11504                           
 11505                           ;system.c: 76: ADCC_Initialize();
 11506  0855  3196  2656  3188   	fcall	_ADCC_Initialize
 11507                           
 11508                           ;system.c: 77: PWM_Initialize();
 11509  0858  3195  25EA  3188   	fcall	_PWM_Initialize
 11510                           
 11511                           ;system.c: 79: TMR2_Initialize();
 11512  085B  3195  25F5  3188   	fcall	_TMR2_Initialize
 11513                           
 11514                           ;system.c: 80: LCD_Init(0X00);
 11515  085E  3000               	movlw	0
 11516  085F  318A  228E  3188   	fcall	_LCD_Init
 11517                           
 11518                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 11519  0862  3009               	movlw	9
 11520  0863  00FA               	movwf	??_SYSTEM_Initialize+2
 11521  0864  301E               	movlw	30
 11522  0865  00F9               	movwf	??_SYSTEM_Initialize+1
 11523  0866  30EB               	movlw	235
 11524  0867  00F8               	movwf	??_SYSTEM_Initialize
 11525  0868                     u3967:	
 11526  0868  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11527  0869  2868               	goto	u3967
 11528  086A  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11529  086B  2868               	goto	u3967
 11530  086C  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11531  086D  2868               	goto	u3967
 11532  086E  0000               	nop
 11533                           
 11534                           ;system.c: 82: LCD_Clear();
 11535  086F  3195  25D0  3188   	fcall	_LCD_Clear
 11536                           
 11537                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 11538  0872  3005               	movlw	5
 11539  0873  00FA               	movwf	??_SYSTEM_Initialize+2
 11540  0874  300F               	movlw	15
 11541  0875  00F9               	movwf	??_SYSTEM_Initialize+1
 11542  0876  30F4               	movlw	244
 11543  0877  00F8               	movwf	??_SYSTEM_Initialize
 11544  0878                     u3977:	
 11545  0878  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11546  0879  2878               	goto	u3977
 11547  087A  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11548  087B  2878               	goto	u3977
 11549  087C  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11550  087D  2878               	goto	u3977
 11551                           
 11552                           ;system.c: 84: InitCustomChars();
 11553  087E  3197  2707  3188   	fcall	_InitCustomChars
 11554                           
 11555                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11556  0881  3009               	movlw	9
 11557  0882  00FA               	movwf	??_SYSTEM_Initialize+2
 11558  0883  301E               	movlw	30
 11559  0884  00F9               	movwf	??_SYSTEM_Initialize+1
 11560  0885  30EB               	movlw	235
 11561  0886  00F8               	movwf	??_SYSTEM_Initialize
 11562  0887                     u3987:	
 11563  0887  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11564  0888  2887               	goto	u3987
 11565  0889  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11566  088A  2887               	goto	u3987
 11567  088B  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11568  088C  2887               	goto	u3987
 11569  088D  0000               	nop
 11570  088E  0008               	return
 11571  088F                     __end_of_SYSTEM_Initialize:	
 11572                           
 11573                           	psect	text25
 11574  15F5                     __ptext25:	
 11575 ;; *************** function _TMR2_Initialize *****************
 11576 ;; Defined at:
 11577 ;;		line 3 in file "tmr2.c"
 11578 ;; Parameters:    Size  Location     Type
 11579 ;;		None
 11580 ;; Auto vars:     Size  Location     Type
 11581 ;;		None
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  1    wreg      void 
 11584 ;; Registers used:
 11585 ;;		wreg, status,2
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;Total ram usage:        0 bytes
 11596 ;; Hardware stack levels used:    1
 11597 ;; This function calls:
 11598 ;;		Nothing
 11599 ;; This function is called by:
 11600 ;;		_SYSTEM_Initialize
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604                           
 11605                           ;psect for function _TMR2_Initialize
 11606  15F5                     _TMR2_Initialize:	
 11607                           
 11608                           ;tmr2.c: 5: T2CON = 0x00;
 11609                           
 11610                           ;incstack = 0
 11611                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11612  15F5  0025               	movlb	5	; select bank5
 11613  15F6  018E               	clrf	14	;volatile
 11614                           
 11615                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11616  15F7  3001               	movlw	1
 11617  15F8  0090               	movwf	16	;volatile
 11618                           
 11619                           ;tmr2.c: 9: T2HLT = 0x00;
 11620  15F9  018F               	clrf	15	;volatile
 11621                           
 11622                           ;tmr2.c: 11: T2RST = 0x00;
 11623  15FA  0191               	clrf	17	;volatile
 11624                           
 11625                           ;tmr2.c: 13: T2PR = 0xFF;
 11626  15FB  30FF               	movlw	255
 11627  15FC  008D               	movwf	13	;volatile
 11628                           
 11629                           ;tmr2.c: 15: T2TMR = 0x00;
 11630  15FD  018C               	clrf	12	;volatile
 11631                           
 11632                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11633  15FE  002E               	movlb	14	; select bank14
 11634  15FF  1090               	bcf	16,1	;volatile
 11635                           
 11636                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11637  1600  0025               	movlb	5	; select bank5
 11638  1601  178E               	bsf	14,7	;volatile
 11639  1602  0008               	return
 11640  1603                     __end_of_TMR2_Initialize:	
 11641                           
 11642                           	psect	text26
 11643  15EA                     __ptext26:	
 11644 ;; *************** function _PWM_Initialize *****************
 11645 ;; Defined at:
 11646 ;;		line 3 in file "pwm.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;		None
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;		None
 11651 ;; Return value:  Size  Location     Type
 11652 ;;                  1    wreg      void 
 11653 ;; Registers used:
 11654 ;;		wreg, status,2, status,0
 11655 ;; Tracked objects:
 11656 ;;		On entry : 0/0
 11657 ;;		On exit  : 0/0
 11658 ;;		Unchanged: 0/0
 11659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;Total ram usage:        0 bytes
 11665 ;; Hardware stack levels used:    1
 11666 ;; This function calls:
 11667 ;;		Nothing
 11668 ;; This function is called by:
 11669 ;;		_SYSTEM_Initialize
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673                           
 11674                           ;psect for function _PWM_Initialize
 11675  15EA                     _PWM_Initialize:	
 11676                           
 11677                           ;pwm.c: 14: PWM7CON = 0x80;
 11678                           
 11679                           ;incstack = 0
 11680                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11681  15EA  3080               	movlw	128
 11682  15EB  0027               	movlb	7	; select bank7
 11683  15EC  0092               	movwf	18	;volatile
 11684                           
 11685                           ;pwm.c: 16: PWM7DCH = 0x00;
 11686  15ED  0191               	clrf	17	;volatile
 11687                           
 11688                           ;pwm.c: 18: PWM7DCL = 0x00;
 11689  15EE  0190               	clrf	16	;volatile
 11690                           
 11691                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
 11692  15EF  0024               	movlb	4	; select bank4
 11693  15F0  081F               	movf	31,w	;volatile
 11694  15F1  39F3               	andlw	-13
 11695  15F2  3804               	iorlw	4
 11696  15F3  009F               	movwf	31	;volatile
 11697  15F4  0008               	return
 11698  15F5                     __end_of_PWM_Initialize:	
 11699                           
 11700                           	psect	text27
 11701  1759                     __ptext27:	
 11702 ;; *************** function _PIN_MANAGER_Initialize *****************
 11703 ;; Defined at:
 11704 ;;		line 5 in file "pin_manager.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;		None
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;  state           1    0[COMMON] unsigned char 
 11709 ;; Return value:  Size  Location     Type
 11710 ;;                  1    wreg      void 
 11711 ;; Registers used:
 11712 ;;		wreg, status,2
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11722 ;;Total ram usage:        1 bytes
 11723 ;; Hardware stack levels used:    1
 11724 ;; This function calls:
 11725 ;;		Nothing
 11726 ;; This function is called by:
 11727 ;;		_SYSTEM_Initialize
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           
 11732                           ;psect for function _PIN_MANAGER_Initialize
 11733  1759                     _PIN_MANAGER_Initialize:	
 11734                           
 11735                           ;pin_manager.c: 7: LATA = 0x00;
 11736                           
 11737                           ;incstack = 0
 11738                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11739  1759  0020               	movlb	0	; select bank0
 11740  175A  0196               	clrf	22	;volatile
 11741                           
 11742                           ;pin_manager.c: 8: LATB = 0x00;
 11743  175B  0197               	clrf	23	;volatile
 11744                           
 11745                           ;pin_manager.c: 9: LATC = 0x00;
 11746  175C  0198               	clrf	24	;volatile
 11747                           
 11748                           ;pin_manager.c: 11: WPUA = 0x00;
 11749  175D  003E               	movlb	30	; select bank30
 11750  175E  01B9               	clrf	57	;volatile
 11751                           
 11752                           ;pin_manager.c: 12: WPUB = 0x00;
 11753  175F  01C4               	clrf	68	;volatile
 11754                           
 11755                           ;pin_manager.c: 13: WPUC = 0x00;
 11756  1760  01CF               	clrf	79	;volatile
 11757                           
 11758                           ;pin_manager.c: 14: WPUE = 0x8;
 11759  1761  3008               	movlw	8
 11760  1762  00E5               	movwf	101	;volatile
 11761                           
 11762                           ;pin_manager.c: 16: TRISA = 0x0A;
 11763  1763  300A               	movlw	10
 11764  1764  0020               	movlb	0	; select bank0
 11765  1765  0091               	movwf	17	;volatile
 11766                           
 11767                           ;pin_manager.c: 17: TRISB = 0x07;
 11768  1766  3007               	movlw	7
 11769  1767  0092               	movwf	18	;volatile
 11770                           
 11771                           ;pin_manager.c: 18: TRISC = 0x00;
 11772  1768  0193               	clrf	19	;volatile
 11773                           
 11774                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11775  1769  300A               	movlw	10
 11776  176A  003E               	movlb	30	; select bank30
 11777  176B  00B8               	movwf	56	;volatile
 11778                           
 11779                           ;pin_manager.c: 21: ANSELB = 0x00;
 11780  176C  01C3               	clrf	67	;volatile
 11781                           
 11782                           ;pin_manager.c: 22: ANSELC = 0x00;
 11783  176D  01CE               	clrf	78	;volatile
 11784                           
 11785                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11786  176E  002E               	movlb	14	; select bank14
 11787  176F  1216               	bcf	22,4	;volatile
 11788                           
 11789                           ;pin_manager.c: 25: bool state = GIE;
 11790  1770  3000               	movlw	0
 11791  1771  1B8B               	btfsc	11,7	;volatile
 11792  1772  3001               	movlw	1
 11793  1773  00F0               	movwf	PIN_MANAGER_Initialize@state
 11794                           
 11795                           ;pin_manager.c: 26: GIE = 0;
 11796  1774  138B               	bcf	11,7	;volatile
 11797                           
 11798                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11799  1775  3055               	movlw	85
 11800  1776  003D               	movlb	29	; select bank29
 11801  1777  008F               	movwf	15	;volatile
 11802                           
 11803                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11804  1778  30AA               	movlw	170
 11805  1779  008F               	movwf	15	;volatile
 11806                           
 11807                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11808  177A  100F               	bcf	15,0	;volatile
 11809                           
 11810                           ;pin_manager.c: 33: RC3PPS = 0X0F;
 11811  177B  300F               	movlw	15
 11812  177C  003E               	movlb	30	; select bank30
 11813  177D  00A3               	movwf	35	;volatile
 11814                           
 11815                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 11816  177E  3055               	movlw	85
 11817  177F  003D               	movlb	29	; select bank29
 11818  1780  008F               	movwf	15	;volatile
 11819                           
 11820                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 11821  1781  30AA               	movlw	170
 11822  1782  008F               	movwf	15	;volatile
 11823                           
 11824                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 11825  1783  140F               	bsf	15,0	;volatile
 11826                           
 11827                           ;pin_manager.c: 40: GIE = state;
 11828  1784  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11829  1785  2F88               	goto	u2920
 11830  1786  178B               	bsf	11,7	;volatile
 11831  1787  0008               	return
 11832  1788                     u2920:	
 11833  1788  138B               	bcf	11,7	;volatile
 11834  1789  0008               	return
 11835  178A                     __end_of_PIN_MANAGER_Initialize:	
 11836                           
 11837                           	psect	text28
 11838  15D8                     __ptext28:	
 11839 ;; *************** function _OSCILLATOR_Initialize *****************
 11840 ;; Defined at:
 11841 ;;		line 89 in file "system.c"
 11842 ;; Parameters:    Size  Location     Type
 11843 ;;		None
 11844 ;; Auto vars:     Size  Location     Type
 11845 ;;		None
 11846 ;; Return value:  Size  Location     Type
 11847 ;;                  1    wreg      void 
 11848 ;; Registers used:
 11849 ;;		wreg, status,2
 11850 ;; Tracked objects:
 11851 ;;		On entry : 0/0
 11852 ;;		On exit  : 0/0
 11853 ;;		Unchanged: 0/0
 11854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11859 ;;Total ram usage:        0 bytes
 11860 ;; Hardware stack levels used:    1
 11861 ;; This function calls:
 11862 ;;		Nothing
 11863 ;; This function is called by:
 11864 ;;		_SYSTEM_Initialize
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           
 11868                           
 11869                           ;psect for function _OSCILLATOR_Initialize
 11870  15D8                     _OSCILLATOR_Initialize:	
 11871                           
 11872                           ;system.c: 91: OSCCON1 = 0x60;
 11873                           
 11874                           ;incstack = 0
 11875                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11876  15D8  3060               	movlw	96
 11877  15D9  0031               	movlb	17	; select bank17
 11878  15DA  008D               	movwf	13	;volatile
 11879                           
 11880                           ;system.c: 92: OSCCON3 = 0x00;
 11881  15DB  018F               	clrf	15	;volatile
 11882                           
 11883                           ;system.c: 93: OSCEN = 0x00;
 11884  15DC  0191               	clrf	17	;volatile
 11885                           
 11886                           ;system.c: 94: OSCFRQ = 0x06;
 11887  15DD  3006               	movlw	6
 11888  15DE  0093               	movwf	19	;volatile
 11889                           
 11890                           ;system.c: 95: OSCTUNE = 0x00;
 11891  15DF  0192               	clrf	18	;volatile
 11892  15E0  0008               	return
 11893  15E1                     __end_of_OSCILLATOR_Initialize:	
 11894                           
 11895                           	psect	text29
 11896  0A8E                     __ptext29:	
 11897 ;; *************** function _LCD_Init *****************
 11898 ;; Defined at:
 11899 ;;		line 154 in file "lcd.c"
 11900 ;; Parameters:    Size  Location     Type
 11901 ;;  style           1    wreg     unsigned char 
 11902 ;; Auto vars:     Size  Location     Type
 11903 ;;  style           1    7[COMMON] unsigned char 
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  1    wreg      void 
 11906 ;; Registers used:
 11907 ;;		wreg, status,2, status,0, pclath, cstack
 11908 ;; Tracked objects:
 11909 ;;		On entry : 0/0
 11910 ;;		On exit  : 0/0
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11915 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11916 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11917 ;;Total ram usage:        4 bytes
 11918 ;; Hardware stack levels used:    1
 11919 ;; Hardware stack levels required when called:    2
 11920 ;; This function calls:
 11921 ;;		_LCD_Cmd
 11922 ;;		_LCD_Port
 11923 ;; This function is called by:
 11924 ;;		_SYSTEM_Initialize
 11925 ;; This function uses a non-reentrant model
 11926 ;;
 11927                           
 11928                           
 11929                           ;psect for function _LCD_Init
 11930  0A8E                     _LCD_Init:	
 11931                           
 11932                           ;incstack = 0
 11933                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 11934                           ;LCD_Init@style stored from wreg
 11935  0A8E  00F7               	movwf	LCD_Init@style
 11936                           
 11937                           ;lcd.c: 156: LCD_Port(0x00);
 11938  0A8F  3000               	movlw	0
 11939  0A90  3196  263E  318A   	fcall	_LCD_Port
 11940                           
 11941                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 11942  0A93  3005               	movlw	5
 11943  0A94  00F6               	movwf	??_LCD_Init+2
 11944  0A95  300F               	movlw	15
 11945  0A96  00F5               	movwf	??_LCD_Init+1
 11946  0A97  30F4               	movlw	244
 11947  0A98  00F4               	movwf	??_LCD_Init
 11948  0A99                     u3997:	
 11949  0A99  0BF4               	decfsz	??_LCD_Init,f
 11950  0A9A  2A99               	goto	u3997
 11951  0A9B  0BF5               	decfsz	??_LCD_Init+1,f
 11952  0A9C  2A99               	goto	u3997
 11953  0A9D  0BF6               	decfsz	??_LCD_Init+2,f
 11954  0A9E  2A99               	goto	u3997
 11955                           
 11956                           ;lcd.c: 160: LCD_Cmd(0x03);
 11957  0A9F  3003               	movlw	3
 11958  0AA0  3196  2614  318A   	fcall	_LCD_Cmd
 11959                           
 11960                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 11961  0AA3  3068               	movlw	104
 11962  0AA4  00F5               	movwf	??_LCD_Init+1
 11963  0AA5  30E4               	movlw	228
 11964  0AA6  00F4               	movwf	??_LCD_Init
 11965  0AA7                     u4007:	
 11966  0AA7  0BF4               	decfsz	??_LCD_Init,f
 11967  0AA8  2AA7               	goto	u4007
 11968  0AA9  0BF5               	decfsz	??_LCD_Init+1,f
 11969  0AAA  2AA7               	goto	u4007
 11970  0AAB  0000               	nop
 11971                           
 11972                           ;lcd.c: 164: LCD_Cmd(0x03);
 11973  0AAC  3003               	movlw	3
 11974  0AAD  3196  2614  318A   	fcall	_LCD_Cmd
 11975                           
 11976                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11977  0AB0  3089               	movlw	137
 11978  0AB1  00F4               	movwf	??_LCD_Init
 11979  0AB2                     u4017:	
 11980  0AB2  3200               	nop2
 11981  0AB3  3200               	nop2
 11982  0AB4  0BF4               	decfsz	??_LCD_Init,f
 11983  0AB5  2AB2               	goto	u4017
 11984                           
 11985                           ;lcd.c: 168: LCD_Cmd(0x03);
 11986  0AB6  3003               	movlw	3
 11987  0AB7  3196  2614  318A   	fcall	_LCD_Cmd
 11988                           
 11989                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11990  0ABA  3089               	movlw	137
 11991  0ABB  00F4               	movwf	??_LCD_Init
 11992  0ABC                     u4027:	
 11993  0ABC  3200               	nop2
 11994  0ABD  3200               	nop2
 11995  0ABE  0BF4               	decfsz	??_LCD_Init,f
 11996  0ABF  2ABC               	goto	u4027
 11997                           
 11998                           ;lcd.c: 172: LCD_Cmd(0x02);
 11999  0AC0  3002               	movlw	2
 12000  0AC1  3196  2614  318A   	fcall	_LCD_Cmd
 12001                           
 12002                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12003  0AC4  3089               	movlw	137
 12004  0AC5  00F4               	movwf	??_LCD_Init
 12005  0AC6                     u4037:	
 12006  0AC6  3200               	nop2
 12007  0AC7  3200               	nop2
 12008  0AC8  0BF4               	decfsz	??_LCD_Init,f
 12009  0AC9  2AC6               	goto	u4037
 12010                           
 12011                           ;lcd.c: 176: LCD_Cmd(0x2);
 12012  0ACA  3002               	movlw	2
 12013  0ACB  3196  2614  318A   	fcall	_LCD_Cmd
 12014                           
 12015                           ;lcd.c: 178: LCD_Cmd(0x8);
 12016  0ACE  3008               	movlw	8
 12017  0ACF  3196  2614  318A   	fcall	_LCD_Cmd
 12018                           
 12019                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12020  0AD2  3089               	movlw	137
 12021  0AD3  00F4               	movwf	??_LCD_Init
 12022  0AD4                     u4047:	
 12023  0AD4  3200               	nop2
 12024  0AD5  3200               	nop2
 12025  0AD6  0BF4               	decfsz	??_LCD_Init,f
 12026  0AD7  2AD4               	goto	u4047
 12027                           
 12028                           ;lcd.c: 182: LCD_Cmd(0x0);
 12029  0AD8  3000               	movlw	0
 12030  0AD9  3196  2614  318A   	fcall	_LCD_Cmd
 12031                           
 12032                           ;lcd.c: 184: LCD_Cmd(0x8);
 12033  0ADC  3008               	movlw	8
 12034  0ADD  3196  2614  318A   	fcall	_LCD_Cmd
 12035                           
 12036                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12037  0AE0  3089               	movlw	137
 12038  0AE1  00F4               	movwf	??_LCD_Init
 12039  0AE2                     u4057:	
 12040  0AE2  3200               	nop2
 12041  0AE3  3200               	nop2
 12042  0AE4  0BF4               	decfsz	??_LCD_Init,f
 12043  0AE5  2AE2               	goto	u4057
 12044                           
 12045                           ;lcd.c: 188: LCD_Cmd(0x0);
 12046  0AE6  3000               	movlw	0
 12047  0AE7  3196  2614  318A   	fcall	_LCD_Cmd
 12048                           
 12049                           ;lcd.c: 190: LCD_Cmd(0x1);
 12050  0AEA  3001               	movlw	1
 12051  0AEB  3196  2614  318A   	fcall	_LCD_Cmd
 12052                           
 12053                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 12054  0AEE  3034               	movlw	52
 12055  0AEF  00F5               	movwf	??_LCD_Init+1
 12056  0AF0  30F1               	movlw	241
 12057  0AF1  00F4               	movwf	??_LCD_Init
 12058  0AF2                     u4067:	
 12059  0AF2  0BF4               	decfsz	??_LCD_Init,f
 12060  0AF3  2AF2               	goto	u4067
 12061  0AF4  0BF5               	decfsz	??_LCD_Init+1,f
 12062  0AF5  2AF2               	goto	u4067
 12063  0AF6  3200               	nop2
 12064                           
 12065                           ;lcd.c: 194: LCD_Cmd(0x0);
 12066  0AF7  3000               	movlw	0
 12067  0AF8  3196  2614  318A   	fcall	_LCD_Cmd
 12068                           
 12069                           ;lcd.c: 196: LCD_Cmd(0x6);
 12070  0AFB  3006               	movlw	6
 12071  0AFC  3196  2614  318A   	fcall	_LCD_Cmd
 12072                           
 12073                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12074  0AFF  3089               	movlw	137
 12075  0B00  00F4               	movwf	??_LCD_Init
 12076  0B01                     u4077:	
 12077  0B01  3200               	nop2
 12078  0B02  3200               	nop2
 12079  0B03  0BF4               	decfsz	??_LCD_Init,f
 12080  0B04  2B01               	goto	u4077
 12081                           
 12082                           ;lcd.c: 200: LCD_Cmd(0x0);
 12083  0B05  3000               	movlw	0
 12084  0B06  3196  2614  318A   	fcall	_LCD_Cmd
 12085                           
 12086                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 12087  0B09  0877               	movf	LCD_Init@style,w
 12088  0B0A  380C               	iorlw	12
 12089  0B0B  3196  2614  318A   	fcall	_LCD_Cmd
 12090                           
 12091                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12092  0B0E  3089               	movlw	137
 12093  0B0F  00F4               	movwf	??_LCD_Init
 12094  0B10                     u4087:	
 12095  0B10  3200               	nop2
 12096  0B11  3200               	nop2
 12097  0B12  0BF4               	decfsz	??_LCD_Init,f
 12098  0B13  2B10               	goto	u4087
 12099  0B14  0008               	return
 12100  0B15                     __end_of_LCD_Init:	
 12101                           
 12102                           	psect	text30
 12103  15D0                     __ptext30:	
 12104 ;; *************** function _LCD_Clear *****************
 12105 ;; Defined at:
 12106 ;;		line 75 in file "lcd.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;		None
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;		None
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  1    wreg      void 
 12113 ;; Registers used:
 12114 ;;		wreg, status,2, status,0, pclath, cstack
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;Total ram usage:        0 bytes
 12125 ;; Hardware stack levels used:    1
 12126 ;; Hardware stack levels required when called:    2
 12127 ;; This function calls:
 12128 ;;		_LCD_Cmd
 12129 ;; This function is called by:
 12130 ;;		_SYSTEM_Initialize
 12131 ;;		_menuChoice
 12132 ;;		_main
 12133 ;; This function uses a non-reentrant model
 12134 ;;
 12135                           
 12136                           
 12137                           ;psect for function _LCD_Clear
 12138  15D0                     _LCD_Clear:	
 12139                           
 12140                           ;lcd.c: 77: LCD_Cmd(0);
 12141                           
 12142                           ;incstack = 0
 12143                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 12144  15D0  3000               	movlw	0
 12145  15D1  3196  2614  3195   	fcall	_LCD_Cmd
 12146                           
 12147                           ;lcd.c: 78: LCD_Cmd(1);
 12148  15D4  3001               	movlw	1
 12149  15D5  3196  2614         	fcall	_LCD_Cmd
 12150  15D7  0008               	return
 12151  15D8                     __end_of_LCD_Clear:	
 12152                           
 12153                           	psect	text31
 12154  1707                     __ptext31:	
 12155 ;; *************** function _InitCustomChars *****************
 12156 ;; Defined at:
 12157 ;;		line 29 in file "lcd.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;		None
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;  i               1    6[COMMON] unsigned char 
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      void 
 12164 ;; Registers used:
 12165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12175 ;;Total ram usage:        2 bytes
 12176 ;; Hardware stack levels used:    1
 12177 ;; Hardware stack levels required when called:    2
 12178 ;; This function calls:
 12179 ;;		_LCD_Cmd
 12180 ;;		_LCD_Write_Char
 12181 ;; This function is called by:
 12182 ;;		_SYSTEM_Initialize
 12183 ;; This function uses a non-reentrant model
 12184 ;;
 12185                           
 12186                           
 12187                           ;psect for function _InitCustomChars
 12188  1707                     _InitCustomChars:	
 12189                           
 12190                           ;lcd.c: 31: uint8_t i;
 12191                           ;lcd.c: 32: LCD_Cmd(0x04);
 12192                           
 12193                           ;incstack = 0
 12194                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12195  1707  3004               	movlw	4
 12196  1708  3196  2614  3197   	fcall	_LCD_Cmd
 12197                           
 12198                           ;lcd.c: 33: LCD_Cmd(0x00);
 12199  170B  3000               	movlw	0
 12200  170C  3196  2614  3197   	fcall	_LCD_Cmd
 12201                           
 12202                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12203  170F  01F6               	clrf	InitCustomChars@i
 12204  1710  3010               	movlw	16
 12205  1711  0276               	subwf	InitCustomChars@i,w
 12206  1712  1803               	btfsc	3,0
 12207  1713  2F25               	goto	l2536
 12208  1714                     l2530:	
 12209                           
 12210                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12211  1714  0876               	movf	InitCustomChars@i,w
 12212  1715  3E4B               	addlw	(low (___cgram| (0+256)))& (0+255)
 12213  1716  0086               	movwf	6
 12214  1717  3001               	movlw	1	; select bank2/3
 12215  1718  0087               	movwf	7
 12216  1719  0801               	movf	1,w
 12217  171A  3197  272D  3197   	fcall	_LCD_Write_Char
 12218  171D  3001               	movlw	1
 12219  171E  00F5               	movwf	??_InitCustomChars
 12220  171F  0875               	movf	??_InitCustomChars,w
 12221  1720  07F6               	addwf	InitCustomChars@i,f
 12222  1721  3010               	movlw	16
 12223  1722  0276               	subwf	InitCustomChars@i,w
 12224  1723  1C03               	skipc
 12225  1724  2F14               	goto	l2530
 12226  1725                     l2536:	
 12227                           
 12228                           ;lcd.c: 36: LCD_Cmd(0);
 12229  1725  3000               	movlw	0
 12230  1726  3196  2614  3197   	fcall	_LCD_Cmd
 12231                           
 12232                           ;lcd.c: 37: LCD_Cmd(2);
 12233  1729  3002               	movlw	2
 12234  172A  3196  2614         	fcall	_LCD_Cmd
 12235  172C  0008               	return
 12236  172D                     __end_of_InitCustomChars:	
 12237                           
 12238                           	psect	text32
 12239  172D                     __ptext32:	
 12240 ;; *************** function _LCD_Write_Char *****************
 12241 ;; Defined at:
 12242 ;;		line 223 in file "lcd.c"
 12243 ;; Parameters:    Size  Location     Type
 12244 ;;  a               1    wreg     const unsigned char 
 12245 ;; Auto vars:     Size  Location     Type
 12246 ;;  a               1    4[COMMON] const unsigned char 
 12247 ;;  y               1    3[COMMON] unsigned char 
 12248 ;;  temp            1    2[COMMON] unsigned char 
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  1    wreg      void 
 12251 ;; Registers used:
 12252 ;;		wreg, status,2, status,0, pclath, cstack
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;Total ram usage:        4 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    1
 12265 ;; This function calls:
 12266 ;;		_LCD_Port
 12267 ;; This function is called by:
 12268 ;;		_InitCustomChars
 12269 ;;		_LCD_Write_String
 12270 ;;		_LCD_Write_Int
 12271 ;;		_menuChoice
 12272 ;;		_main
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           
 12277                           ;psect for function _LCD_Write_Char
 12278  172D                     _LCD_Write_Char:	
 12279                           
 12280                           ;incstack = 0
 12281                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12282                           ;LCD_Write_Char@a stored from wreg
 12283  172D  00F4               	movwf	LCD_Write_Char@a
 12284                           
 12285                           ;lcd.c: 225: char temp,y;
 12286                           ;lcd.c: 226: temp = a&0x0F;
 12287  172E  0874               	movf	LCD_Write_Char@a,w
 12288  172F  390F               	andlw	15
 12289  1730  00F1               	movwf	??_LCD_Write_Char
 12290  1731  0871               	movf	??_LCD_Write_Char,w
 12291  1732  00F2               	movwf	LCD_Write_Char@temp
 12292                           
 12293                           ;lcd.c: 227: y = a&0xF0;
 12294  1733  0874               	movf	LCD_Write_Char@a,w
 12295  1734  39F0               	andlw	240
 12296  1735  00F1               	movwf	??_LCD_Write_Char
 12297  1736  0871               	movf	??_LCD_Write_Char,w
 12298  1737  00F3               	movwf	LCD_Write_Char@y
 12299                           
 12300                           ;lcd.c: 228: RA0 = 1;
 12301  1738  0020               	movlb	0	; select bank0
 12302  1739  140C               	bsf	12,0	;volatile
 12303                           
 12304                           ;lcd.c: 229: LCD_Port(y>>4);
 12305  173A  0873               	movf	LCD_Write_Char@y,w
 12306  173B  00F1               	movwf	??_LCD_Write_Char
 12307  173C  3004               	movlw	4
 12308  173D                     u2495:	
 12309  173D  36F1               	lsrf	??_LCD_Write_Char,f
 12310  173E  0B89               	decfsz	9,f
 12311  173F  2F3D               	goto	u2495
 12312  1740  0871               	movf	??_LCD_Write_Char,w
 12313  1741  3196  263E  3197   	fcall	_LCD_Port
 12314                           
 12315                           ;lcd.c: 230: RA2 = 1;
 12316  1744  0020               	movlb	0	; select bank0
 12317  1745  150C               	bsf	12,2	;volatile
 12318                           
 12319                           ;lcd.c: 231: RA2 = 0;
 12320  1746  110C               	bcf	12,2	;volatile
 12321                           
 12322                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12323  1747  306A               	movlw	106
 12324  1748  00F1               	movwf	??_LCD_Write_Char
 12325  1749                     u4097:	
 12326  1749  0BF1               	decfsz	??_LCD_Write_Char,f
 12327  174A  2F49               	goto	u4097
 12328  174B  0000               	nop
 12329                           
 12330                           ;lcd.c: 233: LCD_Port(temp);
 12331  174C  0872               	movf	LCD_Write_Char@temp,w
 12332  174D  3196  263E  3197   	fcall	_LCD_Port
 12333                           
 12334                           ;lcd.c: 234: RA2 = 1;
 12335  1750  0020               	movlb	0	; select bank0
 12336  1751  150C               	bsf	12,2	;volatile
 12337                           
 12338                           ;lcd.c: 235: RA2 = 0;
 12339  1752  110C               	bcf	12,2	;volatile
 12340                           
 12341                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12342  1753  306A               	movlw	106
 12343  1754  00F1               	movwf	??_LCD_Write_Char
 12344  1755                     u4107:	
 12345  1755  0BF1               	decfsz	??_LCD_Write_Char,f
 12346  1756  2F55               	goto	u4107
 12347  1757  0000               	nop
 12348  1758  0008               	return
 12349  1759                     __end_of_LCD_Write_Char:	
 12350                           
 12351                           	psect	text33
 12352  1614                     __ptext33:	
 12353 ;; *************** function _LCD_Cmd *****************
 12354 ;; Defined at:
 12355 ;;		line 65 in file "lcd.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;  a               1    wreg     unsigned char 
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;  a               1    3[COMMON] unsigned char 
 12360 ;; Return value:  Size  Location     Type
 12361 ;;                  1    wreg      void 
 12362 ;; Registers used:
 12363 ;;		wreg, status,2, status,0, pclath, cstack
 12364 ;; Tracked objects:
 12365 ;;		On entry : 0/0
 12366 ;;		On exit  : 0/0
 12367 ;;		Unchanged: 0/0
 12368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12373 ;;Total ram usage:        3 bytes
 12374 ;; Hardware stack levels used:    1
 12375 ;; Hardware stack levels required when called:    1
 12376 ;; This function calls:
 12377 ;;		_LCD_Port
 12378 ;; This function is called by:
 12379 ;;		_InitCustomChars
 12380 ;;		_LCD_Clear
 12381 ;;		_LCD_Set_Cursor
 12382 ;;		_LCD_Init
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           
 12387                           ;psect for function _LCD_Cmd
 12388  1614                     _LCD_Cmd:	
 12389                           
 12390                           ;incstack = 0
 12391                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12392                           ;LCD_Cmd@a stored from wreg
 12393  1614  00F3               	movwf	LCD_Cmd@a
 12394                           
 12395                           ;lcd.c: 67: RA0 = 0;
 12396  1615  0020               	movlb	0	; select bank0
 12397  1616  100C               	bcf	12,0	;volatile
 12398                           
 12399                           ;lcd.c: 68: LCD_Port(a);
 12400  1617  0873               	movf	LCD_Cmd@a,w
 12401  1618  3196  263E  3196   	fcall	_LCD_Port
 12402                           
 12403                           ;lcd.c: 69: RA2 = 1;
 12404  161B  0020               	movlb	0	; select bank0
 12405  161C  150C               	bsf	12,2	;volatile
 12406                           
 12407                           ;lcd.c: 70: RA2 = 0;
 12408  161D  110C               	bcf	12,2	;volatile
 12409                           
 12410                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12411  161E  302A               	movlw	42
 12412  161F  00F2               	movwf	??_LCD_Cmd+1
 12413  1620  308D               	movlw	141
 12414  1621  00F1               	movwf	??_LCD_Cmd
 12415  1622                     u4117:	
 12416  1622  0BF1               	decfsz	??_LCD_Cmd,f
 12417  1623  2E22               	goto	u4117
 12418  1624  0BF2               	decfsz	??_LCD_Cmd+1,f
 12419  1625  2E22               	goto	u4117
 12420  1626  3200               	nop2
 12421  1627  0008               	return
 12422  1628                     __end_of_LCD_Cmd:	
 12423                           
 12424                           	psect	text34
 12425  163E                     __ptext34:	
 12426 ;; *************** function _LCD_Port *****************
 12427 ;; Defined at:
 12428 ;;		line 41 in file "lcd.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;  a               1    wreg     unsigned char 
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;  a               1    0[COMMON] unsigned char 
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		wreg
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12446 ;;Total ram usage:        1 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; This function calls:
 12449 ;;		Nothing
 12450 ;; This function is called by:
 12451 ;;		_LCD_Cmd
 12452 ;;		_LCD_Init
 12453 ;;		_LCD_Write_Char
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           
 12458                           ;psect for function _LCD_Port
 12459  163E                     _LCD_Port:	
 12460                           
 12461                           ;incstack = 0
 12462                           ; Regs used in _LCD_Port: [wreg]
 12463                           ;LCD_Port@a stored from wreg
 12464  163E  00F0               	movwf	LCD_Port@a
 12465                           
 12466                           ;lcd.c: 43: if(a & 1)
 12467  163F  1C70               	btfss	LCD_Port@a,0
 12468  1640  2E44               	goto	l94
 12469                           
 12470                           ;lcd.c: 44: RA7 = 1;
 12471  1641  0020               	movlb	0	; select bank0
 12472  1642  178C               	bsf	12,7	;volatile
 12473  1643  2E46               	goto	l2178
 12474  1644                     l94:	
 12475                           
 12476                           ;lcd.c: 45: else
 12477                           ;lcd.c: 46: RA7 = 0;
 12478  1644  0020               	movlb	0	; select bank0
 12479  1645  138C               	bcf	12,7	;volatile
 12480  1646                     l2178:	
 12481                           
 12482                           ;lcd.c: 48: if(a & 2)
 12483  1646  1CF0               	btfss	LCD_Port@a,1
 12484  1647  2E4A               	goto	l96
 12485                           
 12486                           ;lcd.c: 49: RA6 = 1;
 12487  1648  170C               	bsf	12,6	;volatile
 12488  1649  2E4B               	goto	l2182
 12489  164A                     l96:	
 12490                           
 12491                           ;lcd.c: 50: else
 12492                           ;lcd.c: 51: RA6 = 0;
 12493  164A  130C               	bcf	12,6	;volatile
 12494  164B                     l2182:	
 12495                           
 12496                           ;lcd.c: 53: if(a & 4)
 12497  164B  1D70               	btfss	LCD_Port@a,2
 12498  164C  2E4F               	goto	l98
 12499                           
 12500                           ;lcd.c: 54: RC0 = 1;
 12501  164D  140E               	bsf	14,0	;volatile
 12502  164E  2E50               	goto	l2186
 12503  164F                     l98:	
 12504                           
 12505                           ;lcd.c: 55: else
 12506                           ;lcd.c: 56: RC0 = 0;
 12507  164F  100E               	bcf	14,0	;volatile
 12508  1650                     l2186:	
 12509                           
 12510                           ;lcd.c: 58: if(a & 8)
 12511  1650  1DF0               	btfss	LCD_Port@a,3
 12512  1651  2E54               	goto	l100
 12513                           
 12514                           ;lcd.c: 59: RC1 = 1;
 12515  1652  148E               	bsf	14,1	;volatile
 12516  1653  0008               	return
 12517  1654                     l100:	
 12518                           
 12519                           ;lcd.c: 60: else
 12520                           ;lcd.c: 61: RC1 = 0;
 12521  1654  108E               	bcf	14,1	;volatile
 12522  1655  0008               	return
 12523  1656                     __end_of_LCD_Port:	
 12524                           
 12525                           	psect	text35
 12526  1656                     __ptext35:	
 12527 ;; *************** function _ADCC_Initialize *****************
 12528 ;; Defined at:
 12529 ;;		line 60 in file "adc.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;		None
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;		None
 12534 ;; Return value:  Size  Location     Type
 12535 ;;                  1    wreg      void 
 12536 ;; Registers used:
 12537 ;;		wreg, status,2
 12538 ;; Tracked objects:
 12539 ;;		On entry : 0/0
 12540 ;;		On exit  : 0/0
 12541 ;;		Unchanged: 0/0
 12542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12547 ;;Total ram usage:        0 bytes
 12548 ;; Hardware stack levels used:    1
 12549 ;; This function calls:
 12550 ;;		Nothing
 12551 ;; This function is called by:
 12552 ;;		_SYSTEM_Initialize
 12553 ;; This function uses a non-reentrant model
 12554 ;;
 12555                           
 12556                           
 12557                           ;psect for function _ADCC_Initialize
 12558  1656                     _ADCC_Initialize:	
 12559                           
 12560                           ;adc.c: 62: ADCON1 = 0x00;
 12561                           
 12562                           ;incstack = 0
 12563                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12564  1656  0021               	movlb	1	; select bank1
 12565  1657  0194               	clrf	20	;volatile
 12566                           
 12567                           ;adc.c: 64: ADCON2 = 0x00;
 12568  1658  0195               	clrf	21	;volatile
 12569                           
 12570                           ;adc.c: 66: ADCON3 = 0x00;
 12571  1659  0196               	clrf	22	;volatile
 12572                           
 12573                           ;adc.c: 68: ADACT = 0x00;
 12574  165A  0199               	clrf	25	;volatile
 12575                           
 12576                           ;adc.c: 70: ADSTAT = 0x00;
 12577  165B  0197               	clrf	23	;volatile
 12578                           
 12579                           ;adc.c: 73: ADCLK = 0x3F;
 12580  165C  303F               	movlw	63
 12581  165D  0098               	movwf	24	;volatile
 12582                           
 12583                           ;adc.c: 81: ADREF = 0x00;
 12584  165E  019A               	clrf	26	;volatile
 12585                           
 12586                           ;adc.c: 83: ADCAP = 0x00;
 12587  165F  019B               	clrf	27	;volatile
 12588                           
 12589                           ;adc.c: 86: ADPRE = 0x07;
 12590  1660  3007               	movlw	7
 12591  1661  009C               	movwf	28	;volatile
 12592                           
 12593                           ;adc.c: 88: ADACQ = 0x00;
 12594  1662  019D               	clrf	29	;volatile
 12595                           
 12596                           ;adc.c: 90: ADPCH = 0x00;
 12597  1663  019E               	clrf	30	;volatile
 12598                           
 12599                           ;adc.c: 92: ADRPT = 0x00;
 12600  1664  0022               	movlb	2	; select bank2
 12601  1665  018D               	clrf	13	;volatile
 12602                           
 12603                           ;adc.c: 94: ADLTHL = 0x00;
 12604  1666  018E               	clrf	14	;volatile
 12605                           
 12606                           ;adc.c: 96: ADLTHH = 0x00;
 12607  1667  018F               	clrf	15	;volatile
 12608                           
 12609                           ;adc.c: 98: ADUTHL = 0x00;
 12610  1668  0190               	clrf	16	;volatile
 12611                           
 12612                           ;adc.c: 100: ADUTHH = 0x00;
 12613  1669  0191               	clrf	17	;volatile
 12614                           
 12615                           ;adc.c: 102: ADSTPTL = 0x00;
 12616  166A  0192               	clrf	18	;volatile
 12617                           
 12618                           ;adc.c: 104: ADSTPTH = 0x00;
 12619  166B  0193               	clrf	19	;volatile
 12620                           
 12621                           ;adc.c: 106: ADCON0 = 0x84;
 12622  166C  3084               	movlw	132
 12623  166D  0021               	movlb	1	; select bank1
 12624  166E  0093               	movwf	19	;volatile
 12625  166F  0008               	return
 12626  1670                     __end_of_ADCC_Initialize:	
 12627                           
 12628                           	psect	text36
 12629  019B                     __ptext36:	
 12630 ;; *************** function _PID_Calculate *****************
 12631 ;; Defined at:
 12632 ;;		line 20 in file "pid.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;  setpoint        2    4[BANK0 ] int 
 12635 ;;  temp            2    6[BANK0 ] int 
 12636 ;; Auto vars:     Size  Location     Type
 12637 ;;		None
 12638 ;; Return value:  Size  Location     Type
 12639 ;;                  2    4[BANK0 ] int 
 12640 ;; Registers used:
 12641 ;;		wreg, status,2, status,0, pclath, cstack
 12642 ;; Tracked objects:
 12643 ;;		On entry : 0/0
 12644 ;;		On exit  : 0/0
 12645 ;;		Unchanged: 0/0
 12646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12647 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;Total ram usage:        6 bytes
 12652 ;; Hardware stack levels used:    1
 12653 ;; Hardware stack levels required when called:    1
 12654 ;; This function calls:
 12655 ;;		___awdiv
 12656 ;;		___wmul
 12657 ;; This function is called by:
 12658 ;;		_main
 12659 ;; This function uses a non-reentrant model
 12660 ;;
 12661                           
 12662                           
 12663                           ;psect for function _PID_Calculate
 12664  019B                     _PID_Calculate:	
 12665                           
 12666                           ;pid.c: 23: error = setpoint - temp;
 12667                           
 12668                           ;incstack = 0
 12669                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12670  019B  0020               	movlb	0	; select bank0
 12671  019C  0926               	comf	PID_Calculate@temp,w
 12672  019D  00FB               	movwf	??_PID_Calculate
 12673  019E  0927               	comf	PID_Calculate@temp+1,w
 12674  019F  00FC               	movwf	??_PID_Calculate+1
 12675  01A0  0AFB               	incf	??_PID_Calculate,f
 12676  01A1  1903               	skipnz
 12677  01A2  0AFC               	incf	??_PID_Calculate+1,f
 12678  01A3  0824               	movf	PID_Calculate@setpoint,w
 12679  01A4  077B               	addwf	??_PID_Calculate,w
 12680  01A5  00E8               	movwf	_error
 12681  01A6  0825               	movf	PID_Calculate@setpoint+1,w
 12682  01A7  3D7C               	addwfc	??_PID_Calculate+1,w
 12683  01A8  00E9               	movwf	_error+1
 12684                           
 12685                           ;pid.c: 25: errorValue = error * Kp;
 12686  01A9  0869               	movf	_error+1,w
 12687  01AA  00F1               	movwf	___wmul@multiplier+1
 12688  01AB  0868               	movf	_error,w
 12689  01AC  00F0               	movwf	___wmul@multiplier
 12690  01AD  0022               	movlb	2	; select bank2
 12691  01AE  086E               	movf	(_Kp+1)^(0+256),w
 12692  01AF  00F3               	movwf	___wmul@multiplicand+1
 12693  01B0  086D               	movf	_Kp^(0+256),w
 12694  01B1  00F2               	movwf	___wmul@multiplicand
 12695  01B2  3196  268A  3181   	fcall	___wmul
 12696  01B5  0871               	movf	?___wmul+1,w
 12697  01B6  0021               	movlb	1	; select bank1
 12698  01B7  00DA               	movwf	(_errorValue+1)^(0+128)
 12699  01B8  0870               	movf	?___wmul,w
 12700  01B9  00D9               	movwf	_errorValue^(0+128)
 12701                           
 12702                           ;pid.c: 28: if(error>=0)
 12703  01BA  0020               	movlb	0	; select bank0
 12704  01BB  1BE9               	btfsc	_error+1,7
 12705  01BC  29E7               	goto	l2940
 12706                           
 12707                           ;pid.c: 29: {
 12708                           ;pid.c: 30: if(error>=lastError)
 12709  01BD  0869               	movf	_error+1,w
 12710  01BE  3A80               	xorlw	128
 12711  01BF  00FB               	movwf	??_PID_Calculate
 12712  01C0  0021               	movlb	1	; select bank1
 12713  01C1  085E               	movf	(_lastError+1)^(0+128),w
 12714  01C2  3A80               	xorlw	128
 12715  01C3  027B               	subwf	??_PID_Calculate,w
 12716  01C4  1D03               	skipz
 12717  01C5  29C9               	goto	u3435
 12718  01C6  085D               	movf	_lastError^(0+128),w
 12719  01C7  0020               	movlb	0	; select bank0
 12720  01C8  0268               	subwf	_error,w
 12721  01C9                     u3435:	
 12722  01C9  1C03               	skipc
 12723  01CA  29D9               	goto	l2936
 12724                           
 12725                           ;pid.c: 31: {
 12726                           ;pid.c: 32: if(pidIntegrated<2047)pidIntegrated = pidIntegrated + (error * Ki/4);
 12727  01CB  0020               	movlb	0	; select bank0
 12728  01CC  086B               	movf	_pidIntegrated+1,w
 12729  01CD  3A80               	xorlw	128
 12730  01CE  00FB               	movwf	??_PID_Calculate
 12731  01CF  3087               	movlw	135
 12732  01D0  027B               	subwf	??_PID_Calculate,w
 12733  01D1  1D03               	skipz
 12734  01D2  29D5               	goto	u3445
 12735  01D3  30FF               	movlw	255
 12736  01D4  026A               	subwf	_pidIntegrated,w
 12737  01D5                     u3445:	
 12738  01D5  1803               	skipnc
 12739  01D6  2A53               	goto	l2950
 12740  01D7  3004               	movlw	4
 12741  01D8  2A35               	goto	L10
 12742  01D9                     l2936:	
 12743                           ;pid.c: 33: }
 12744                           
 12745                           
 12746                           ;pid.c: 34: else
 12747                           ;pid.c: 35: {
 12748                           ;pid.c: 36: if(pidIntegrated>0)pidIntegrated = pidIntegrated - (error * Ki/8);
 12749  01D9  0020               	movlb	0	; select bank0
 12750  01DA  086B               	movf	_pidIntegrated+1,w
 12751  01DB  3A80               	xorlw	128
 12752  01DC  00FB               	movwf	??_PID_Calculate
 12753  01DD  3080               	movlw	128
 12754  01DE  027B               	subwf	??_PID_Calculate,w
 12755  01DF  1D03               	skipz
 12756  01E0  29E3               	goto	u3455
 12757  01E1  3001               	movlw	1
 12758  01E2  026A               	subwf	_pidIntegrated,w
 12759  01E3                     u3455:	
 12760  01E3  1C03               	skipc
 12761  01E4  2A53               	goto	l2950
 12762  01E5  3008               	movlw	8
 12763  01E6  2A03               	goto	L12
 12764  01E7                     l2940:	
 12765                           ;pid.c: 37: }
 12766                           ;pid.c: 38: }
 12767                           
 12768                           
 12769                           ;pid.c: 39: else
 12770                           ;pid.c: 40: {
 12771                           ;pid.c: 41: if(error>lastError)
 12772  01E7  0021               	movlb	1	; select bank1
 12773  01E8  085E               	movf	(_lastError+1)^(0+128),w
 12774  01E9  3A80               	xorlw	128
 12775  01EA  00FB               	movwf	??_PID_Calculate
 12776  01EB  0020               	movlb	0	; select bank0
 12777  01EC  0869               	movf	_error+1,w
 12778  01ED  3A80               	xorlw	128
 12779  01EE  027B               	subwf	??_PID_Calculate,w
 12780  01EF  1D03               	skipz
 12781  01F0  29F4               	goto	u3465
 12782  01F1  0868               	movf	_error,w
 12783  01F2  0021               	movlb	1	; select bank1
 12784  01F3  025D               	subwf	_lastError^(0+128),w
 12785  01F4                     u3465:	
 12786  01F4  1803               	skipnc
 12787  01F5  2A28               	goto	l2946
 12788                           
 12789                           ;pid.c: 42: {
 12790                           ;pid.c: 43: if(pidIntegrated<2047)pidIntegrated = pidIntegrated - (error * Ki/16);
 12791  01F6  0020               	movlb	0	; select bank0
 12792  01F7  086B               	movf	_pidIntegrated+1,w
 12793  01F8  3A80               	xorlw	128
 12794  01F9  00FB               	movwf	??_PID_Calculate
 12795  01FA  3087               	movlw	135
 12796  01FB  027B               	subwf	??_PID_Calculate,w
 12797  01FC  1D03               	skipz
 12798  01FD  2A00               	goto	u3475
 12799  01FE  30FF               	movlw	255
 12800  01FF  026A               	subwf	_pidIntegrated,w
 12801  0200                     u3475:	
 12802  0200  1803               	skipnc
 12803  0201  2A53               	goto	l2950
 12804  0202  3010               	movlw	16
 12805  0203                     L12:	
 12806  0203  00F6               	movwf	___awdiv@divisor
 12807  0204  3000               	movlw	0
 12808  0205  00F7               	movwf	___awdiv@divisor+1
 12809  0206  0020               	movlb	0	; select bank0
 12810  0207  0869               	movf	_error+1,w
 12811  0208  00F1               	movwf	___wmul@multiplier+1
 12812  0209  0868               	movf	_error,w
 12813  020A  00F0               	movwf	___wmul@multiplier
 12814  020B  0021               	movlb	1	; select bank1
 12815  020C  086B               	movf	(_Ki+1)^(0+128),w
 12816  020D  00F3               	movwf	___wmul@multiplicand+1
 12817  020E  086A               	movf	_Ki^(0+128),w
 12818  020F  00F2               	movwf	___wmul@multiplicand
 12819  0210  3196  268A  3181   	fcall	___wmul
 12820  0213  0871               	movf	?___wmul+1,w
 12821  0214  00F9               	movwf	___awdiv@dividend+1
 12822  0215  0870               	movf	?___wmul,w
 12823  0216  00F8               	movwf	___awdiv@dividend
 12824  0217  3188  20D4  3181   	fcall	___awdiv
 12825  021A  0976               	comf	?___awdiv,w
 12826  021B  00FB               	movwf	??_PID_Calculate
 12827  021C  0977               	comf	?___awdiv+1,w
 12828  021D  00FC               	movwf	??_PID_Calculate+1
 12829  021E  0AFB               	incf	??_PID_Calculate,f
 12830  021F  1903               	skipnz
 12831  0220  0AFC               	incf	??_PID_Calculate+1,f
 12832  0221  0020               	movlb	0	; select bank0
 12833  0222  086A               	movf	_pidIntegrated,w
 12834  0223  077B               	addwf	??_PID_Calculate,w
 12835  0224  00EA               	movwf	_pidIntegrated
 12836  0225  086B               	movf	_pidIntegrated+1,w
 12837  0226  3D7C               	addwfc	??_PID_Calculate+1,w
 12838  0227  2A52               	goto	L9
 12839  0228                     l2946:	
 12840                           ;pid.c: 44: }
 12841                           
 12842                           
 12843                           ;pid.c: 45: else
 12844                           ;pid.c: 46: {
 12845                           ;pid.c: 47: if(pidIntegrated>0)pidIntegrated = pidIntegrated + (error * Ki/2);
 12846  0228  0020               	movlb	0	; select bank0
 12847  0229  086B               	movf	_pidIntegrated+1,w
 12848  022A  3A80               	xorlw	128
 12849  022B  00FB               	movwf	??_PID_Calculate
 12850  022C  3080               	movlw	128
 12851  022D  027B               	subwf	??_PID_Calculate,w
 12852  022E  1D03               	skipz
 12853  022F  2A32               	goto	u3485
 12854  0230  3001               	movlw	1
 12855  0231  026A               	subwf	_pidIntegrated,w
 12856  0232                     u3485:	
 12857  0232  1C03               	skipc
 12858  0233  2A53               	goto	l2950
 12859  0234  3002               	movlw	2
 12860  0235                     L10:	
 12861  0235  00F6               	movwf	___awdiv@divisor
 12862  0236  3000               	movlw	0
 12863  0237  00F7               	movwf	___awdiv@divisor+1
 12864  0238  0020               	movlb	0	; select bank0
 12865  0239  0869               	movf	_error+1,w
 12866  023A  00F1               	movwf	___wmul@multiplier+1
 12867  023B  0868               	movf	_error,w
 12868  023C  00F0               	movwf	___wmul@multiplier
 12869  023D  0021               	movlb	1	; select bank1
 12870  023E  086B               	movf	(_Ki+1)^(0+128),w
 12871  023F  00F3               	movwf	___wmul@multiplicand+1
 12872  0240  086A               	movf	_Ki^(0+128),w
 12873  0241  00F2               	movwf	___wmul@multiplicand
 12874  0242  3196  268A  3181   	fcall	___wmul
 12875  0245  0871               	movf	?___wmul+1,w
 12876  0246  00F9               	movwf	___awdiv@dividend+1
 12877  0247  0870               	movf	?___wmul,w
 12878  0248  00F8               	movwf	___awdiv@dividend
 12879  0249  3188  20D4  3181   	fcall	___awdiv
 12880  024C  0020               	movlb	0	; select bank0
 12881  024D  086A               	movf	_pidIntegrated,w
 12882  024E  0776               	addwf	?___awdiv,w
 12883  024F  00EA               	movwf	_pidIntegrated
 12884  0250  086B               	movf	_pidIntegrated+1,w
 12885  0251  3D77               	addwfc	?___awdiv+1,w
 12886  0252                     L9:	
 12887  0252  00EB               	movwf	_pidIntegrated+1
 12888  0253                     l2950:	
 12889                           
 12890                           ;pid.c: 48: }
 12891                           ;pid.c: 49: }
 12892                           ;pid.c: 51: if (pidIntegrated< pidMinOutput)
 12893  0253  0020               	movlb	0	; select bank0
 12894  0254  086B               	movf	_pidIntegrated+1,w
 12895  0255  3A80               	xorlw	128
 12896  0256  00FB               	movwf	??_PID_Calculate
 12897  0257  0021               	movlb	1	; select bank1
 12898  0258  0860               	movf	(_pidMinOutput+1)^(0+128),w
 12899  0259  3A80               	xorlw	128
 12900  025A  027B               	subwf	??_PID_Calculate,w
 12901  025B  1D03               	skipz
 12902  025C  2A60               	goto	u3495
 12903  025D  085F               	movf	_pidMinOutput^(0+128),w
 12904  025E  0020               	movlb	0	; select bank0
 12905  025F  026A               	subwf	_pidIntegrated,w
 12906  0260                     u3495:	
 12907  0260  1803               	skipnc
 12908  0261  2A6A               	goto	l186
 12909                           
 12910                           ;pid.c: 52: {
 12911                           ;pid.c: 53: pidIntegrated= pidMinOutput;
 12912  0262  0021               	movlb	1	; select bank1
 12913  0263  0860               	movf	(_pidMinOutput+1)^(0+128),w
 12914  0264  0020               	movlb	0	; select bank0
 12915  0265  00EB               	movwf	_pidIntegrated+1
 12916  0266  0021               	movlb	1	; select bank1
 12917  0267  085F               	movf	_pidMinOutput^(0+128),w
 12918  0268  0020               	movlb	0	; select bank0
 12919  0269  00EA               	movwf	_pidIntegrated
 12920  026A                     l186:	
 12921                           
 12922                           ;pid.c: 54: }
 12923                           ;pid.c: 56: if (pidIntegrated> pidMaxOutput)
 12924  026A  0021               	movlb	1	; select bank1
 12925  026B  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 12926  026C  3A80               	xorlw	128
 12927  026D  00FB               	movwf	??_PID_Calculate
 12928  026E  0020               	movlb	0	; select bank0
 12929  026F  086B               	movf	_pidIntegrated+1,w
 12930  0270  3A80               	xorlw	128
 12931  0271  027B               	subwf	??_PID_Calculate,w
 12932  0272  1D03               	skipz
 12933  0273  2A77               	goto	u3505
 12934  0274  086A               	movf	_pidIntegrated,w
 12935  0275  0021               	movlb	1	; select bank1
 12936  0276  026C               	subwf	_pidMaxOutput^(0+128),w
 12937  0277                     u3505:	
 12938  0277  1803               	skipnc
 12939  0278  2A81               	goto	l187
 12940                           
 12941                           ;pid.c: 57: {
 12942                           ;pid.c: 58: pidIntegrated= pidMaxOutput;
 12943  0279  0021               	movlb	1	; select bank1
 12944  027A  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 12945  027B  0020               	movlb	0	; select bank0
 12946  027C  00EB               	movwf	_pidIntegrated+1
 12947  027D  0021               	movlb	1	; select bank1
 12948  027E  086C               	movf	_pidMaxOutput^(0+128),w
 12949  027F  0020               	movlb	0	; select bank0
 12950  0280  00EA               	movwf	_pidIntegrated
 12951  0281                     l187:	
 12952                           
 12953                           ;pid.c: 59: }
 12954                           ;pid.c: 61: integralValue = pidIntegrated;
 12955  0281  0020               	movlb	0	; select bank0
 12956  0282  086B               	movf	_pidIntegrated+1,w
 12957  0283  0021               	movlb	1	; select bank1
 12958  0284  00DC               	movwf	(_integralValue+1)^(0+128)
 12959  0285  0020               	movlb	0	; select bank0
 12960  0286  086A               	movf	_pidIntegrated,w
 12961  0287  0021               	movlb	1	; select bank1
 12962  0288  00DB               	movwf	_integralValue^(0+128)
 12963                           
 12964                           ;pid.c: 63: lastError=error;
 12965  0289  0020               	movlb	0	; select bank0
 12966  028A  0869               	movf	_error+1,w
 12967  028B  0021               	movlb	1	; select bank1
 12968  028C  00DE               	movwf	(_lastError+1)^(0+128)
 12969  028D  0020               	movlb	0	; select bank0
 12970  028E  0868               	movf	_error,w
 12971  028F  0021               	movlb	1	; select bank1
 12972  0290  00DD               	movwf	_lastError^(0+128)
 12973                           
 12974                           ;pid.c: 66: derivativeValue=(error-D_PrevError)*Kd;
 12975  0291  0022               	movlb	2	; select bank2
 12976  0292  0945               	comf	_D_PrevError^(0+256),w
 12977  0293  00FB               	movwf	??_PID_Calculate
 12978  0294  0946               	comf	(_D_PrevError+1)^(0+256),w
 12979  0295  00FC               	movwf	??_PID_Calculate+1
 12980  0296  0AFB               	incf	??_PID_Calculate,f
 12981  0297  1903               	skipnz
 12982  0298  0AFC               	incf	??_PID_Calculate+1,f
 12983  0299  0020               	movlb	0	; select bank0
 12984  029A  0868               	movf	_error,w
 12985  029B  077B               	addwf	??_PID_Calculate,w
 12986  029C  00F0               	movwf	___wmul@multiplier
 12987  029D  0869               	movf	_error+1,w
 12988  029E  3D7C               	addwfc	??_PID_Calculate+1,w
 12989  029F  00F1               	movwf	___wmul@multiplier+1
 12990  02A0  0022               	movlb	2	; select bank2
 12991  02A1  086C               	movf	(_Kd+1)^(0+256),w
 12992  02A2  00F3               	movwf	___wmul@multiplicand+1
 12993  02A3  086B               	movf	_Kd^(0+256),w
 12994  02A4  00F2               	movwf	___wmul@multiplicand
 12995  02A5  3196  268A  3181   	fcall	___wmul
 12996  02A8  0871               	movf	?___wmul+1,w
 12997  02A9  0021               	movlb	1	; select bank1
 12998  02AA  00D8               	movwf	(_derivativeValue+1)^(0+128)
 12999  02AB  0870               	movf	?___wmul,w
 13000  02AC  00D7               	movwf	_derivativeValue^(0+128)
 13001                           
 13002                           ;pid.c: 67: D_PrevError = error;
 13003  02AD  0020               	movlb	0	; select bank0
 13004  02AE  0869               	movf	_error+1,w
 13005  02AF  0022               	movlb	2	; select bank2
 13006  02B0  00C6               	movwf	(_D_PrevError+1)^(0+256)
 13007  02B1  0020               	movlb	0	; select bank0
 13008  02B2  0868               	movf	_error,w
 13009  02B3  0022               	movlb	2	; select bank2
 13010  02B4  00C5               	movwf	_D_PrevError^(0+256)
 13011                           
 13012                           ;pid.c: 70: Result = errorValue+integralValue+derivativeValue;
 13013  02B5  0021               	movlb	1	; select bank1
 13014  02B6  085B               	movf	_integralValue^(0+128),w
 13015  02B7  0759               	addwf	_errorValue^(0+128),w
 13016  02B8  00FB               	movwf	??_PID_Calculate
 13017  02B9  085C               	movf	(_integralValue+1)^(0+128),w
 13018  02BA  3D5A               	addwfc	(_errorValue+1)^(0+128),w
 13019  02BB  00FC               	movwf	??_PID_Calculate+1
 13020  02BC  0857               	movf	_derivativeValue^(0+128),w
 13021  02BD  077B               	addwf	??_PID_Calculate,w
 13022  02BE  00D5               	movwf	_Result^(0+128)
 13023  02BF  0858               	movf	(_derivativeValue+1)^(0+128),w
 13024  02C0  3D7C               	addwfc	??_PID_Calculate+1,w
 13025  02C1  00D6               	movwf	(_Result+1)^(0+128)
 13026                           
 13027                           ;pid.c: 72: if (Result < pidMinOutput)
 13028  02C2  0856               	movf	(_Result+1)^(0+128),w
 13029  02C3  3A80               	xorlw	128
 13030  02C4  00FB               	movwf	??_PID_Calculate
 13031  02C5  0860               	movf	(_pidMinOutput+1)^(0+128),w
 13032  02C6  3A80               	xorlw	128
 13033  02C7  027B               	subwf	??_PID_Calculate,w
 13034  02C8  1D03               	skipz
 13035  02C9  2ACC               	goto	u3515
 13036  02CA  085F               	movf	_pidMinOutput^(0+128),w
 13037  02CB  0255               	subwf	_Result^(0+128),w
 13038  02CC                     u3515:	
 13039  02CC  1803               	skipnc
 13040  02CD  2AD3               	goto	l188
 13041                           
 13042                           ;pid.c: 73: {
 13043                           ;pid.c: 74: Result = pidMinOutput;
 13044  02CE  0021               	movlb	1	; select bank1
 13045  02CF  0860               	movf	(_pidMinOutput+1)^(0+128),w
 13046  02D0  00D6               	movwf	(_Result+1)^(0+128)
 13047  02D1  085F               	movf	_pidMinOutput^(0+128),w
 13048  02D2  00D5               	movwf	_Result^(0+128)
 13049  02D3                     l188:	
 13050                           
 13051                           ;pid.c: 75: }
 13052                           ;pid.c: 77: if (Result > pidMaxOutput)
 13053  02D3  0021               	movlb	1	; select bank1
 13054  02D4  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 13055  02D5  3A80               	xorlw	128
 13056  02D6  00FB               	movwf	??_PID_Calculate
 13057  02D7  0856               	movf	(_Result+1)^(0+128),w
 13058  02D8  3A80               	xorlw	128
 13059  02D9  027B               	subwf	??_PID_Calculate,w
 13060  02DA  1D03               	skipz
 13061  02DB  2ADE               	goto	u3525
 13062  02DC  0855               	movf	_Result^(0+128),w
 13063  02DD  026C               	subwf	_pidMaxOutput^(0+128),w
 13064  02DE                     u3525:	
 13065  02DE  1803               	skipnc
 13066  02DF  2AE5               	goto	l189
 13067                           
 13068                           ;pid.c: 78: {
 13069                           ;pid.c: 79: Result = pidMaxOutput;
 13070  02E0  0021               	movlb	1	; select bank1
 13071  02E1  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 13072  02E2  00D6               	movwf	(_Result+1)^(0+128)
 13073  02E3  086C               	movf	_pidMaxOutput^(0+128),w
 13074  02E4  00D5               	movwf	_Result^(0+128)
 13075  02E5                     l189:	
 13076                           
 13077                           ;pid.c: 80: }
 13078                           ;pid.c: 82: return (Result);
 13079  02E5  0021               	movlb	1	; select bank1
 13080  02E6  0856               	movf	(_Result+1)^(0+128),w
 13081  02E7  0020               	movlb	0	; select bank0
 13082  02E8  00A5               	movwf	?_PID_Calculate+1
 13083  02E9  0021               	movlb	1	; select bank1
 13084  02EA  0855               	movf	_Result^(0+128),w
 13085  02EB  0020               	movlb	0	; select bank0
 13086  02EC  00A4               	movwf	?_PID_Calculate
 13087  02ED  0008               	return
 13088  02EE                     __end_of_PID_Calculate:	
 13089                           
 13090                           	psect	text37
 13091  168A                     __ptext37:	
 13092 ;; *************** function ___wmul *****************
 13093 ;; Defined at:
 13094 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 13095 ;; Parameters:    Size  Location     Type
 13096 ;;  multiplier      2    0[COMMON] unsigned int 
 13097 ;;  multiplicand    2    2[COMMON] unsigned int 
 13098 ;; Auto vars:     Size  Location     Type
 13099 ;;  product         2    4[COMMON] unsigned int 
 13100 ;; Return value:  Size  Location     Type
 13101 ;;                  2    0[COMMON] unsigned int 
 13102 ;; Registers used:
 13103 ;;		wreg, status,2, status,0
 13104 ;; Tracked objects:
 13105 ;;		On entry : 0/0
 13106 ;;		On exit  : 0/0
 13107 ;;		Unchanged: 0/0
 13108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13113 ;;Total ram usage:        6 bytes
 13114 ;; Hardware stack levels used:    1
 13115 ;; This function calls:
 13116 ;;		Nothing
 13117 ;; This function is called by:
 13118 ;;		_PID_Calculate
 13119 ;;		_eval_poly
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           
 13124                           ;psect for function ___wmul
 13125  168A                     ___wmul:	
 13126                           
 13127                           ;incstack = 0
 13128                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13129  168A  01F4               	clrf	___wmul@product
 13130  168B  01F5               	clrf	___wmul@product+1
 13131  168C                     l2192:	
 13132  168C  1C70               	btfss	___wmul@multiplier,0
 13133  168D  2E92               	goto	l538
 13134  168E  0872               	movf	___wmul@multiplicand,w
 13135  168F  07F4               	addwf	___wmul@product,f
 13136  1690  0873               	movf	___wmul@multiplicand+1,w
 13137  1691  3DF5               	addwfc	___wmul@product+1,f
 13138  1692                     l538:	
 13139  1692  3001               	movlw	1
 13140  1693                     u2115:	
 13141  1693  35F2               	lslf	___wmul@multiplicand,f
 13142  1694  0DF3               	rlf	___wmul@multiplicand+1,f
 13143  1695  0B89               	decfsz	9,f
 13144  1696  2E93               	goto	u2115
 13145  1697  3001               	movlw	1
 13146  1698                     u2125:	
 13147  1698  36F1               	lsrf	___wmul@multiplier+1,f
 13148  1699  0CF0               	rrf	___wmul@multiplier,f
 13149  169A  0B89               	decfsz	9,f
 13150  169B  2E98               	goto	u2125
 13151  169C  0870               	movf	___wmul@multiplier,w
 13152  169D  0471               	iorwf	___wmul@multiplier+1,w
 13153  169E  1D03               	btfss	3,2
 13154  169F  2E8C               	goto	l2192
 13155  16A0  0875               	movf	___wmul@product+1,w
 13156  16A1  00F1               	movwf	?___wmul+1
 13157  16A2  0874               	movf	___wmul@product,w
 13158  16A3  00F0               	movwf	?___wmul
 13159  16A4  0008               	return
 13160  16A5                     __end_of___wmul:	
 13161                           
 13162                           	psect	text38
 13163  08D4                     __ptext38:	
 13164 ;; *************** function ___awdiv *****************
 13165 ;; Defined at:
 13166 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;  divisor         2    6[COMMON] int 
 13169 ;;  dividend        2    8[COMMON] int 
 13170 ;; Auto vars:     Size  Location     Type
 13171 ;;  quotient        2    2[BANK0 ] int 
 13172 ;;  sign            1    1[BANK0 ] unsigned char 
 13173 ;;  counter         1    0[BANK0 ] unsigned char 
 13174 ;; Return value:  Size  Location     Type
 13175 ;;                  2    6[COMMON] int 
 13176 ;; Registers used:
 13177 ;;		wreg, status,2, status,0
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13184 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13186 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13187 ;;Total ram usage:        9 bytes
 13188 ;; Hardware stack levels used:    1
 13189 ;; This function calls:
 13190 ;;		Nothing
 13191 ;; This function is called by:
 13192 ;;		_LCD_Write_Int
 13193 ;;		_PID_Calculate
 13194 ;; This function uses a non-reentrant model
 13195 ;;
 13196                           
 13197                           
 13198                           ;psect for function ___awdiv
 13199  08D4                     ___awdiv:	
 13200                           
 13201                           ;incstack = 0
 13202                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13203  08D4  0020               	movlb	0	; select bank0
 13204  08D5  01A1               	clrf	___awdiv@sign
 13205  08D6  1FF7               	btfss	___awdiv@divisor+1,7
 13206  08D7  28DF               	goto	l2362
 13207  08D8  09F6               	comf	___awdiv@divisor,f
 13208  08D9  09F7               	comf	___awdiv@divisor+1,f
 13209  08DA  0AF6               	incf	___awdiv@divisor,f
 13210  08DB  1903               	skipnz
 13211  08DC  0AF7               	incf	___awdiv@divisor+1,f
 13212  08DD  01A1               	clrf	___awdiv@sign
 13213  08DE  0AA1               	incf	___awdiv@sign,f
 13214  08DF                     l2362:	
 13215  08DF  1FF9               	btfss	___awdiv@dividend+1,7
 13216  08E0  28EA               	goto	l2368
 13217  08E1  09F8               	comf	___awdiv@dividend,f
 13218  08E2  09F9               	comf	___awdiv@dividend+1,f
 13219  08E3  0AF8               	incf	___awdiv@dividend,f
 13220  08E4  1903               	skipnz
 13221  08E5  0AF9               	incf	___awdiv@dividend+1,f
 13222  08E6  3001               	movlw	1
 13223  08E7  00FA               	movwf	??___awdiv
 13224  08E8  087A               	movf	??___awdiv,w
 13225  08E9  06A1               	xorwf	___awdiv@sign,f
 13226  08EA                     l2368:	
 13227  08EA  01A2               	clrf	___awdiv@quotient
 13228  08EB  01A3               	clrf	___awdiv@quotient+1
 13229  08EC  0876               	movf	___awdiv@divisor,w
 13230  08ED  0477               	iorwf	___awdiv@divisor+1,w
 13231  08EE  1903               	btfsc	3,2
 13232  08EF  2919               	goto	l2390
 13233  08F0  01A0               	clrf	___awdiv@counter
 13234  08F1  0AA0               	incf	___awdiv@counter,f
 13235  08F2                     l2378:	
 13236  08F2  1BF7               	btfsc	___awdiv@divisor+1,7
 13237  08F3  28FE               	goto	l2380
 13238  08F4  3001               	movlw	1
 13239  08F5                     u2535:	
 13240  08F5  35F6               	lslf	___awdiv@divisor,f
 13241  08F6  0DF7               	rlf	___awdiv@divisor+1,f
 13242  08F7  0B89               	decfsz	9,f
 13243  08F8  28F5               	goto	u2535
 13244  08F9  3001               	movlw	1
 13245  08FA  00FA               	movwf	??___awdiv
 13246  08FB  087A               	movf	??___awdiv,w
 13247  08FC  07A0               	addwf	___awdiv@counter,f
 13248  08FD  28F2               	goto	l2378
 13249  08FE                     l2380:	
 13250  08FE  3001               	movlw	1
 13251  08FF                     u2555:	
 13252  08FF  35A2               	lslf	___awdiv@quotient,f
 13253  0900  0DA3               	rlf	___awdiv@quotient+1,f
 13254  0901  0B89               	decfsz	9,f
 13255  0902  28FF               	goto	u2555
 13256  0903  0877               	movf	___awdiv@divisor+1,w
 13257  0904  0279               	subwf	___awdiv@dividend+1,w
 13258  0905  1D03               	skipz
 13259  0906  2909               	goto	u2565
 13260  0907  0876               	movf	___awdiv@divisor,w
 13261  0908  0278               	subwf	___awdiv@dividend,w
 13262  0909                     u2565:	
 13263  0909  1C03               	skipc
 13264  090A  2910               	goto	l2386
 13265  090B  0876               	movf	___awdiv@divisor,w
 13266  090C  02F8               	subwf	___awdiv@dividend,f
 13267  090D  0877               	movf	___awdiv@divisor+1,w
 13268  090E  3BF9               	subwfb	___awdiv@dividend+1,f
 13269  090F  1422               	bsf	___awdiv@quotient,0
 13270  0910                     l2386:	
 13271  0910  3001               	movlw	1
 13272  0911                     u2575:	
 13273  0911  36F7               	lsrf	___awdiv@divisor+1,f
 13274  0912  0CF6               	rrf	___awdiv@divisor,f
 13275  0913  0B89               	decfsz	9,f
 13276  0914  2911               	goto	u2575
 13277  0915  3001               	movlw	1
 13278  0916  02A0               	subwf	___awdiv@counter,f
 13279  0917  1D03               	btfss	3,2
 13280  0918  28FE               	goto	l2380
 13281  0919                     l2390:	
 13282  0919  0821               	movf	___awdiv@sign,w
 13283  091A  1903               	btfsc	3,2
 13284  091B  2921               	goto	l2394
 13285  091C  09A2               	comf	___awdiv@quotient,f
 13286  091D  09A3               	comf	___awdiv@quotient+1,f
 13287  091E  0AA2               	incf	___awdiv@quotient,f
 13288  091F  1903               	skipnz
 13289  0920  0AA3               	incf	___awdiv@quotient+1,f
 13290  0921                     l2394:	
 13291  0921  0823               	movf	___awdiv@quotient+1,w
 13292  0922  00F7               	movwf	?___awdiv+1
 13293  0923  0822               	movf	___awdiv@quotient,w
 13294  0924  00F6               	movwf	?___awdiv
 13295  0925  0008               	return
 13296  0926                     __end_of___awdiv:	
 13297  007E                     btemp	set	126	;btemp
 13298  007E                     wtemp	set	126
 13299  007E                     wtemp0	set	126
 13300  0080                     wtemp1	set	128
 13301  0082                     wtemp2	set	130
 13302  0084                     wtemp3	set	132
 13303  0086                     wtemp4	set	134
 13304  0088                     wtemp5	set	136
 13305  007F                     wtemp6	set	127
 13306  007E                     ttemp	set	126
 13307  007E                     ttemp0	set	126
 13308  0081                     ttemp1	set	129
 13309  0084                     ttemp2	set	132
 13310  0087                     ttemp3	set	135
 13311  007F                     ttemp4	set	127
 13312  007E                     ltemp	set	126
 13313  007E                     ltemp0	set	126
 13314  0082                     ltemp1	set	130
 13315  0086                     ltemp2	set	134
 13316  0080                     ltemp3	set	128


Data Sizes:
    Strings     107
    Constant    27
    Data        45
    BSS         148
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      80
    BANK1            80     53      79
    BANK2            80      0      79
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_Int->___awdiv
    _PID_Calculate->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   49153
                                              0 BANK1     53    53      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30755
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16171
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7425
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2    1046
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           5     5      0    6601
                                             23 BANK0      5     5      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM7_LoadDutyValue
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     586
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    4243
                                              4 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1281
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    2136
                                             11 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     830
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
       ___wmul (ARG)
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _PWM7_LoadDutyValue
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     35      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Jun 10 09:46:00 2018

                 ___bmul@product 0072          __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000  
                             l55 0807                               l94 1644                               l96 164A  
                             l98 164F                               _Kd 016B                               _Ki 00EA  
                             _Kp 016D                     ___awdiv@sign 0021              ___wmul@multiplicand 0072  
                   ___ftadd@exp1 004C                     ___ftadd@exp2 004B                      __CFG_LVP$ON 0000  
                   ___ftadd@sign 004A                              l100 1654                              l186 026A  
                            l187 0281                              l188 02D3                              l189 02E5  
                            l382 04B9                              l447 0712                              l376 0428  
                            l449 0732                              l538 1692                              l706 005C  
                            l730 0E8C                              l707 0064                              l593 0997  
                            l790 0A74                              l699 0049                              _GIE 005F  
                            _RA0 0060                              _RB0 0068                              _RA2 0062  
                            _RB1 0069                              _RC0 0070                              _RB2 006A  
                            _RC1 0071                              _RA6 0066                              _RA7 0067  
                   __CFG_CPD$OFF 0000                              _key 006E                              _log 0BBE  
                __end_of_ADCRead 080E                     ___awmod@sign 0076                  _TMR2_Initialize 15F5  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@analogs 00CF  
                __end_of_LCD_Cmd 1628                     __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A  
                 _LCD_Set_Cursor 080E                     ___ftdiv@sign 003F                             l2210 0E15  
                           l3020 030A                             l2220 0E2B                             l3102 0431  
                           l2150 0026                             l2214 0E1C                             l2310 0CF2  
                           l2302 0CDE                             l3120 0488                             l3104 0434  
                           l2160 004E                             l2152 0030                             l2240 0E62  
                           l2232 0E45                             l2410 08A0                             l3114 0470  
                           l3026 0318                             l3042 02EE                             l2162 0056  
                           l2154 0035                             l2146 001F                             l2250 0E7E  
                           l2242 0E67                             l2314 0CFA                             l2420 08B2  
                           l3044 0347                             l2260 0EB0                             l2252 0E88  
                           l2244 0E6B                             l2182 164B                             l2406 0899  
                           l3142 04D3                             l3134 04C2                             l3070 0395  
                           l3150 04E9                             l3054 0370                             l2270 0ECB  
                           l2238 0E58                             l2192 168C                             l2432 08CF  
                           l2424 08BE                             l2600 1672                             l3136 04C5  
                           l3152 0517                             l2256 0E9E                             l2280 0C85  
                           l3304 07C0                             l3240 06BE                             l2362 08DF  
                           l2186 1650                             l2178 1646                             l2530 1714  
                           l2418 08A6                             l3082 03DF                             l3250 06D0  
                           l2380 08FE                             l2428 08C7                             l2444 16CD  
                           l2452 17A0                             l3236 06BA                             l2390 0919  
                           l2550 082E                             l2630 0D7E                             l2614 0D44  
                           l2286 0C9B                             l3254 0701                             l3246 06CB  
                           l3262 0713                             l2368 08EA                             l2536 1725  
                           l2632 0D82                             l2624 0D4B                             l3088 03F7  
                           l2800 09E6                             l2456 17B6                             l3272 0734  
                           l2394 0921                             l2386 0910                             l2378 08F2  
                           l2642 0D9E                             l2634 0D8A                             l2626 0D7A  
                           l2298 0CD6                             l3258 0708                             l3194 0579  
                           l2644 0DCA                             l2636 0D9A                             l2804 09F1  
                           l2900 0A85                             l2476 17D7                             l2732 0BF0  
                           l3284 075A                             l3268 0726                             l2494 097F  
                           l2726 0BDD                             l3278 073A                             l2648 0DD8  
                           l2808 09FF                             l2760 1605                             l2824 0B42  
                           l2754 0015                             l2818 0B2C                             l2940 01E7  
                           l2748 000C                             l2764 160B                             l2950 0253  
                           l2790 09B8                             l2782 09A8                             l2918 0172  
                           l2846 0B9C                             l2838 0B83                             l2936 01D9  
                           l2792 09C6                             l2946 0228                             l2858 16AD  
                           l2868 0A20                             l2894 0A6B                             l2886 0A50  
                           l2896 0A77                             l2888 0A5E                             ?_log 0057  
                           STR_1 1070                             STR_2 107B                             STR_3 105F  
                           STR_4 104E                             STR_5 103D                             STR_6 101B  
                           STR_7 102C                             u2005 0051                             u2115 1693  
                           u2125 1698                             u2045 006B                             _LATA 0016  
                           _LATB 0017                             _LATC 0018                             u3105 09E7  
                           u2235 0E46                             u2325 0E7F                             u2405 0CB7  
                           u4007 0AA7                             u4017 0AB2                             u3065 09BB  
                           u2265 0E59                             u2425 0CDF                             _T2PR 028D  
                           u4107 1755                             u4027 0ABC                             u3155 0B54  
                           u3235 0A27                             u2435 0CE5                             u4117 1622  
                           u4037 0AC6                             u3085 09C7                             u3325 0091  
                           u3165 0B64                             u2535 08F5                             u4047 0AD4  
                           u3095 09DB                             u3415 017E                             u3335 00A7  
                           u3175 0B84                             u2295 0E6C                             u3505 0277  
                           u4057 0AE2                             u3345 00DA                             u3185 0B93  
                           u3265 0A51                             u2465 0CFB                             u2555 08FF  
                           u3515 02CC                             u3435 01C9                             u4067 0AF2  
                           u2635 08A9                             u3355 00F0                             u3195 0B9D  
                           u2475 0D01                             u2395 0CA7                             u2565 0909  
                           u3525 02DE                             u3445 01D5                             u4077 0B01  
                           u3605 03CF                             u3365 010A                             u2830 0D2D  
                           u2575 0911                             u3455 01E3                             u2495 173D  
                           u4087 0B10                             u2815 0839                             u2655 08B8  
                           u3535 0304                             u3375 0120                             u3295 0A6C  
                           u2920 1788                             u3465 01F4                             u4097 1749  
                           u2665 08BF                             u3385 0148                             u3475 0200  
                           u3395 0162                             u3740 054D                             u3485 0232  
                           u3725 04E2                             u1965 002B                             u3805 06FF  
                           u3495 0260                             u3655 0460                             u2945 1637  
                           u3585 04F8                             u1985 0044                             u3825 0721  
                           u2795 081A                             u3907 0352                             u3835 072D  
                           u3917 038D                             u2895 0DB8                             u3927 0510  
                           u3937 039A                             u3947 0421                             u3795 06E6  
                           u3957 04B2                             u3877 056F                             u3967 0868  
                           u3887 07A5                             u3977 0878                             u3897 07B9  
                           u3987 0887                             u3997 0A99              tempCalc@analogValue 005D  
                           _WPUA 0F39                             _WPUB 0F44                             _WPUC 0F4F  
                           _WPUE 0F65                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
              ?_LCD_Write_String 0075                             _desc 015F                             _main 0525  
                   ___ftpack@arg 0070               __size_of_LCD_Clear 0008                             _loop 00EE  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0002  
             ??_LCD_Write_String 0077                             ttemp 007E                             wtemp 007E  
                  __CFG_CSWEN$ON 0000                ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 002E                    _LCD_Write_Int 0D22                     ___ftmul@sign 002F  
                   ___fttol@exp1 007D                            ??_log 005A                     ___fttol@lval 0079  
               __end_of_LCD_Init 0B15                 __end_of_LCD_Port 1656   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 15E1                  __end_of___aldiv 0A08                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 0926                            _ADPRE 009C                  __end_of___ftadd 0EE3  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 08D4                            _ADRPT 010D  
                __end_of___ftdiv 0BBE                  __end_of___ftmul 0D22                  ___awdiv@divisor 0076  
                __end_of___ftsub 16C3                  __end_of___fttol 0A8E                            _T2CON 028E  
                          _LATC2 00C2                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0020                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
         __end_of_LCD_Set_Cursor 084D                    ___awtoft@sign 007D                  __end_of_readKey 0017  
                          _frexp 17C5                            _errno 0147                            _error 0068  
                  ___ftpack@sign 0074                            _timer 00E3                            main@j 00D4  
                          main@x 00BE                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0024                   _LCD_Write_Char 172D  
                __initialization 07C6                      log@exponent 005B                     __end_of_main 07C6  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 1603                        ??_ADCRead 0073  
                         ??_main 00A0                    ___fttol@sign1 0078                __end_of_LCD_Clear 15D8  
                      ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                         ?_frexp 0070                           _ADLTHH 010F                           _ADLTHL 010E  
                         _ADRESH 008D                           _ADRESL 008C                           _ADSTAT 0097  
                         _ADUTHH 0111                 ___awdiv@dividend 0078                           _ADUTHL 0110  
               __end_of___awtoft 16E3                           _ANSELA 0F38                           _ANSELB 0F43  
                         _ANSELC 0F4E                 __end_of___ftpack 007B                           _RC3PPS 0F23  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
                         _TRISC2 009A           __end_of_LCD_Write_Char 1759                   __CFG_PWRTE$OFF 0000  
                         _Result 00D5                     _CCPTMRS1bits 021F                           ___bmul 1603  
                         ___ftge 178A           LCD_Write_Int@numPlaces 0027                        ??___aldiv 0078  
                         ___wmul 168A                        ??___awdiv 007A                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                   _PWM_Initialize 15EA  
                      ??___ftdiv 0036                        ??___ftmul 0026                           _choice 006C  
                      ??___ftsub 007E                        ??___fttol 0074           main@currentTemperature 00C7  
               ___awdiv@quotient 0022                  ___awmod@divisor 0070                           _timer2 006F  
                ___awmod@counter 0075                           _totals 0134            ___ftmul@f3_as_product 002B  
               __end_of_tempCalc 1000                  _ADCC_Initialize 1656                        ??_readKey 0070  
               LCD_Write_Int@str 002E                  _InitCustomChars 1707                  LCD_Set_Cursor@w 0079  
                LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078  
                  _pidIntegrated 006A         readAnalog@analog_channel 0079                _SYSTEM_Initialize 084D  
               __end_oflog@coeff 101B          __end_of__initialization 07FD                        ?_LCD_Init 0070  
                      ?_LCD_Port 0070                       ___ftadd@f1 0040                       ___ftadd@f2 0043  
                _derivativeValue 00D7                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0029               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0077                       ___awtoft@c 0078  
            ___bmul@multiplicand 0070                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
         __end_of_PWM_Initialize 15F5                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0070                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 15E1                     __pidataBANK2 16E3              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 1800                 ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016  
                        ??_frexp 0074        __end_of_SYSTEM_Initialize 088F                       __pbssBANK0 0068  
                     __pbssBANK1 00D5                       __pbssBANK2 0120                       __pbssBANK3 01A0  
             __size_of_eval_poly 0060                       ??_LCD_Init 0074                       ??_LCD_Port 0070  
         __size_of_PID_Calculate 0153                       _delayCount 006D                  ?_PWM_Initialize 0070  
                     __pmaintext 0525                          ?___bmul 0070                          ?___ftge 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 1670  
                        _ADCRead 0800        __size_of_LCD_Write_String 001A                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 172D  
                        _LCD_Cmd 1614                   main@holdOutput 00C1                 main@lidOpenCount 00C2  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM7DCH 0391                          _PWM7DCL 0390                          _PWM7CON 0392  
                        _PPSLOCK 0E8F                   main@dutyCycle6 00CD            PID_Calculate@setpoint 0024  
                      ?_tempCalc 005D                       _readAnalog 007B                    _integralValue 00DB  
                        ___aldiv 0986                  __size_of___bmul 0011                          ___cgram 014B  
                     _menuChoice 02EE                  __size_of___ftge 003B                          ___awdiv 08D4  
                        ___ftadd 0DED                          ___awmod 088F                          ___ftdiv 0B15  
                __size_of___wmul 001B                          ___ftmul 0C6E                          ___ftsub 16A5  
                        ___fttol 0A08                       _errorValue 00D9                       ??___awtoft 007B  
                     ??___ftpack 0075                __end_of_eval_poly 0986                 ??_LCD_Set_Cursor 0075  
                        __ptext1 0EE3                          __ptext2 0BBE                          __ptext3 17C5  
                        __ptext4 0926                          __ptext5 0C6E                          __ptext6 178A  
                        __ptext7 16C3                          __ptext8 0A08                          __ptext9 16A5  
                  _PID_Calculate 019B            _OSCILLATOR_Initialize 15D8                          _readKey 0004  
                      _T2CONbits 028E                     __size_of_log 00B0                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                     _highRangeSet 0163                 ___aldiv@dividend 0074  
       ??_PIN_MANAGER_Initialize 0070                          _samples 01A0                          _testKey 00E5  
                      _LCD_Clear 15D0       __size_of_SYSTEM_Initialize 0042                          clrloop0 15C5  
           end_of_initialization 07FD                          init_ram 15CA                          initloop 15CB  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                LCD_Write_Int@sign 0028  
                     main@F13670 0120                       main@F13664 0141                     __pstringtext 1000  
               ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0024  
               ?_InitCustomChars 0070                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
              LCD_Write_String@a 0075                LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                     main@output 00BF                      ___ftmul@exp 002A                      ?_readAnalog 0026  
                    ?_menuChoice 0070                   __end_of___bmul 1614                   __end_of___ftge 17C5  
                 __end_of___wmul 16A5                 _LCD_Write_String 1670           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07C6                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0031                      __end_of_log 0C6E  
                     frexp@value 0070                 ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 0026  
          __end_of_LCD_Write_Int 0DED                 __CFG_LPBOREN$OFF 0000                         ??___bmul 0071  
                       ??___ftge 0076                tempCalc@steinhart 0065                         ??___wmul 0074  
                   _pidMaxOutput 00EC                    _tempCalc$1015 0062                      __pdataBANK1 00E6  
                    __pdataBANK2 014B                  ??_PID_Calculate 007B       __end_of_PWM7_LoadDutyValue 163E  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
   PWM7_LoadDutyValue@dutyCycle7 0070                     _pidMinOutput 00DF                         ?_LCD_Cmd 0070  
              __size_of___awtoft 0020                __size_of___ftpack 0064                         LCD_Cmd@a 0073  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074              __size_of_readAnalog 0120  
            __size_of_menuChoice 0237           _PIN_MANAGER_Initialize 1759                         ?___aldiv 0070  
              __size_of_tempCalc 011D                         ?___awdiv 0076                         ?___ftadd 0040  
                       ?___awmod 0070                         ?___ftdiv 0030                         ?___ftmul 0020  
                       ?___ftsub 004D                         ?___fttol 0070              main@lastTemperature 00C3  
                       ?_readKey 0070                        _eval_poly 0926                        _lastError 00DD  
                      _menuDelay 0149                   __size_of_frexp 003B                         _T2CLKCON 0290  
                ___aldiv@divisor 0070                  ___aldiv@counter 0020                         _LCD_Init 0A8E  
                 ___wmul@product 0074                         _LCD_Port 163E                        clear_ram0 15C4  
                       _PIE0bits 0716                         _PIR4bits 0710                 __size_of_ADCRead 000E  
                     _ADCON0bits 0093                ___wmul@multiplier 0070                       ?_eval_poly 004D  
               __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 168A                ??_TMR2_Initialize 0070  
                readAnalog@value 007B                        frexp@eptr 0073                     ??_readAnalog 0028  
                   ??_menuChoice 0037          ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0035  
                 LCD_Write_Int@j 0033                 __size_of___aldiv 0082                 __size_of___awdiv 0052  
               __size_of___ftadd 00F6                 __size_of___awmod 0045                 __size_of___ftdiv 00A9  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                 __size_of___fttol 0086  
                       ___awtoft 16C3                         ___ftpack 0017         __size_of_ADCC_Initialize 001A  
                       _channels 015B                 __size_of_readKey 0013                PID_Calculate@temp 0026  
                       __ptext10 0DED                         __ptext11 0B15                         __ptext20 1670  
                       __ptext12 0017                         __ptext21 0D22                         __ptext13 007B  
                       __ptext30 15D0                         __ptext22 088F                         __ptext14 1603  
                       __ptext31 1707                         __ptext23 080E                         __ptext15 0986  
                       __ptext32 172D                         __ptext24 084D                         __ptext16 0800  
                       __ptext33 1614                         __ptext25 15F5                         __ptext17 02EE  
                       __ptext34 163E                         __ptext26 15EA                         __ptext18 0004  
                       __ptext35 1656                         __ptext27 1759                         __ptext19 1628  
                       __ptext36 019B                         __ptext28 15D8                         __ptext37 168A  
                       __ptext29 0A8E                         __ptext38 08D4               __end_of_readAnalog 019B  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 005F         __size_of_InitCustomChars 0026  
             __end_of_menuChoice 0525              LCD_Write_Int@F13694 013C                    __size_of_main 02A1  
           __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0EE3                         _setpoint 00E6  
                    _lowRangeSet 0167      PIN_MANAGER_Initialize@state 0070                         log@coeff 1000  
                    ??_eval_poly 007E                      _sampleIndex 00E1               _PWM7_LoadDutyValue 1628  
             LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070              ?_PWM7_LoadDutyValue 0070  
              main@outputSamples 00AA                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002C             main@pidPeriodCounter 00C5               LCD_Set_Cursor@temp 007A  
             LCD_Write_Int@value 0024            __end_of_PID_Calculate 02EE             ??_PWM7_LoadDutyValue 0072  
                   ___aldiv@sign 0021                      _D_PrevError 0145           __size_of_LCD_Write_Int 00CB  
                main@outputIndex 00D3   __end_of_PIN_MANAGER_Initialize 178A                ??_ADCC_Initialize 0070  
                main@outputTotal 00C9                ??_InitCustomChars 0075  
