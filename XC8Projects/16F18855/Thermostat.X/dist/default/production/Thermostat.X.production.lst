

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Mar 29 11:35:14 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	swtext1,local,class=CONST,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  001C                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  008E                     	;# 
    88  008F                     	;# 
    89  0090                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  0110                     	;# 
   110  0110                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0119                     	;# 
   122  0119                     	;# 
   123  0119                     	;# 
   124  011A                     	;# 
   125  011A                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011B                     	;# 
   129  011B                     	;# 
   130  011B                     	;# 
   131  011B                     	;# 
   132  011C                     	;# 
   133  011C                     	;# 
   134  011C                     	;# 
   135  011D                     	;# 
   136  011D                     	;# 
   137  011D                     	;# 
   138  011E                     	;# 
   139  011E                     	;# 
   140  011E                     	;# 
   141  011F                     	;# 
   142  011F                     	;# 
   143  011F                     	;# 
   144  011F                     	;# 
   145  011F                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  018F                     	;# 
   150  0190                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0196                     	;# 
   154  0197                     	;# 
   155  0198                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  020C                     	;# 
   161  020D                     	;# 
   162  020E                     	;# 
   163  020F                     	;# 
   164  020F                     	;# 
   165  0210                     	;# 
   166  0210                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  0218                     	;# 
   179  0219                     	;# 
   180  021A                     	;# 
   181  021B                     	;# 
   182  021B                     	;# 
   183  021C                     	;# 
   184  021C                     	;# 
   185  021D                     	;# 
   186  021D                     	;# 
   187  021E                     	;# 
   188  021F                     	;# 
   189  028C                     	;# 
   190  028C                     	;# 
   191  028D                     	;# 
   192  028D                     	;# 
   193  028E                     	;# 
   194  028F                     	;# 
   195  0290                     	;# 
   196  0290                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0293                     	;# 
   202  0294                     	;# 
   203  0295                     	;# 
   204  0296                     	;# 
   205  0296                     	;# 
   206  0297                     	;# 
   207  0298                     	;# 
   208  0298                     	;# 
   209  0299                     	;# 
   210  0299                     	;# 
   211  029A                     	;# 
   212  029B                     	;# 
   213  029C                     	;# 
   214  029C                     	;# 
   215  029D                     	;# 
   216  030C                     	;# 
   217  030C                     	;# 
   218  030D                     	;# 
   219  030E                     	;# 
   220  030F                     	;# 
   221  0310                     	;# 
   222  0310                     	;# 
   223  0311                     	;# 
   224  0312                     	;# 
   225  0313                     	;# 
   226  0314                     	;# 
   227  0314                     	;# 
   228  0315                     	;# 
   229  0316                     	;# 
   230  0317                     	;# 
   231  0318                     	;# 
   232  0318                     	;# 
   233  0319                     	;# 
   234  031A                     	;# 
   235  031B                     	;# 
   236  031C                     	;# 
   237  031C                     	;# 
   238  031D                     	;# 
   239  031E                     	;# 
   240  031F                     	;# 
   241  038C                     	;# 
   242  038D                     	;# 
   243  038E                     	;# 
   244  0390                     	;# 
   245  0391                     	;# 
   246  0392                     	;# 
   247  040C                     	;# 
   248  040D                     	;# 
   249  040E                     	;# 
   250  040F                     	;# 
   251  0410                     	;# 
   252  0411                     	;# 
   253  0416                     	;# 
   254  0416                     	;# 
   255  0417                     	;# 
   256  0418                     	;# 
   257  0418                     	;# 
   258  0419                     	;# 
   259  041A                     	;# 
   260  041A                     	;# 
   261  041B                     	;# 
   262  041C                     	;# 
   263  041C                     	;# 
   264  041D                     	;# 
   265  041E                     	;# 
   266  041F                     	;# 
   267  048C                     	;# 
   268  048C                     	;# 
   269  048D                     	;# 
   270  048E                     	;# 
   271  048F                     	;# 
   272  048F                     	;# 
   273  0490                     	;# 
   274  0491                     	;# 
   275  0492                     	;# 
   276  0492                     	;# 
   277  0493                     	;# 
   278  0494                     	;# 
   279  0495                     	;# 
   280  0495                     	;# 
   281  0496                     	;# 
   282  0497                     	;# 
   283  0498                     	;# 
   284  0499                     	;# 
   285  049A                     	;# 
   286  049B                     	;# 
   287  049C                     	;# 
   288  049D                     	;# 
   289  050C                     	;# 
   290  050C                     	;# 
   291  050D                     	;# 
   292  050E                     	;# 
   293  050F                     	;# 
   294  050F                     	;# 
   295  0510                     	;# 
   296  0511                     	;# 
   297  0512                     	;# 
   298  0512                     	;# 
   299  0513                     	;# 
   300  0514                     	;# 
   301  0515                     	;# 
   302  0515                     	;# 
   303  0516                     	;# 
   304  0517                     	;# 
   305  0518                     	;# 
   306  0519                     	;# 
   307  051A                     	;# 
   308  051B                     	;# 
   309  051C                     	;# 
   310  051D                     	;# 
   311  058C                     	;# 
   312  058C                     	;# 
   313  058D                     	;# 
   314  058E                     	;# 
   315  058F                     	;# 
   316  058F                     	;# 
   317  0590                     	;# 
   318  0591                     	;# 
   319  0592                     	;# 
   320  0593                     	;# 
   321  060C                     	;# 
   322  060D                     	;# 
   323  060E                     	;# 
   324  060F                     	;# 
   325  0610                     	;# 
   326  0611                     	;# 
   327  0612                     	;# 
   328  0613                     	;# 
   329  0614                     	;# 
   330  0616                     	;# 
   331  0617                     	;# 
   332  0618                     	;# 
   333  0619                     	;# 
   334  061A                     	;# 
   335  061B                     	;# 
   336  061C                     	;# 
   337  061D                     	;# 
   338  061E                     	;# 
   339  068C                     	;# 
   340  068D                     	;# 
   341  068E                     	;# 
   342  068F                     	;# 
   343  0690                     	;# 
   344  0691                     	;# 
   345  0692                     	;# 
   346  0693                     	;# 
   347  0694                     	;# 
   348  070C                     	;# 
   349  070D                     	;# 
   350  070E                     	;# 
   351  070F                     	;# 
   352  0710                     	;# 
   353  0711                     	;# 
   354  0712                     	;# 
   355  0713                     	;# 
   356  0714                     	;# 
   357  0716                     	;# 
   358  0717                     	;# 
   359  0718                     	;# 
   360  0719                     	;# 
   361  071A                     	;# 
   362  071B                     	;# 
   363  071C                     	;# 
   364  071D                     	;# 
   365  071E                     	;# 
   366  0796                     	;# 
   367  0797                     	;# 
   368  0798                     	;# 
   369  0799                     	;# 
   370  079A                     	;# 
   371  079B                     	;# 
   372  080C                     	;# 
   373  080D                     	;# 
   374  080E                     	;# 
   375  080F                     	;# 
   376  0810                     	;# 
   377  0811                     	;# 
   378  0812                     	;# 
   379  0813                     	;# 
   380  0814                     	;# 
   381  081A                     	;# 
   382  081B                     	;# 
   383  081C                     	;# 
   384  081D                     	;# 
   385  081E                     	;# 
   386  081F                     	;# 
   387  088C                     	;# 
   388  088D                     	;# 
   389  088E                     	;# 
   390  088F                     	;# 
   391  0890                     	;# 
   392  0891                     	;# 
   393  0892                     	;# 
   394  0893                     	;# 
   395  0895                     	;# 
   396  0896                     	;# 
   397  0897                     	;# 
   398  0898                     	;# 
   399  0899                     	;# 
   400  089A                     	;# 
   401  089B                     	;# 
   402  090C                     	;# 
   403  090E                     	;# 
   404  090F                     	;# 
   405  091F                     	;# 
   406  091F                     	;# 
   407  098F                     	;# 
   408  098F                     	;# 
   409  0990                     	;# 
   410  0991                     	;# 
   411  0992                     	;# 
   412  0993                     	;# 
   413  0994                     	;# 
   414  0995                     	;# 
   415  0996                     	;# 
   416  0997                     	;# 
   417  0E0F                     	;# 
   418  0E10                     	;# 
   419  0E11                     	;# 
   420  0E12                     	;# 
   421  0E13                     	;# 
   422  0E14                     	;# 
   423  0E15                     	;# 
   424  0E16                     	;# 
   425  0E17                     	;# 
   426  0E18                     	;# 
   427  0E19                     	;# 
   428  0E1A                     	;# 
   429  0E1B                     	;# 
   430  0E1C                     	;# 
   431  0E1D                     	;# 
   432  0E1E                     	;# 
   433  0E1F                     	;# 
   434  0E20                     	;# 
   435  0E21                     	;# 
   436  0E22                     	;# 
   437  0E23                     	;# 
   438  0E24                     	;# 
   439  0E25                     	;# 
   440  0E26                     	;# 
   441  0E27                     	;# 
   442  0E28                     	;# 
   443  0E29                     	;# 
   444  0E2A                     	;# 
   445  0E2B                     	;# 
   446  0E2C                     	;# 
   447  0E2D                     	;# 
   448  0E2E                     	;# 
   449  0E2F                     	;# 
   450  0E30                     	;# 
   451  0E31                     	;# 
   452  0E32                     	;# 
   453  0E33                     	;# 
   454  0E34                     	;# 
   455  0E35                     	;# 
   456  0E36                     	;# 
   457  0E37                     	;# 
   458  0E8F                     	;# 
   459  0E90                     	;# 
   460  0E91                     	;# 
   461  0E92                     	;# 
   462  0E93                     	;# 
   463  0E94                     	;# 
   464  0E95                     	;# 
   465  0E96                     	;# 
   466  0E97                     	;# 
   467  0E9C                     	;# 
   468  0E9D                     	;# 
   469  0E9E                     	;# 
   470  0EA1                     	;# 
   471  0EA2                     	;# 
   472  0EA3                     	;# 
   473  0EA4                     	;# 
   474  0EA5                     	;# 
   475  0EA9                     	;# 
   476  0EAA                     	;# 
   477  0EAB                     	;# 
   478  0EAC                     	;# 
   479  0EB1                     	;# 
   480  0EB2                     	;# 
   481  0EB3                     	;# 
   482  0EB8                     	;# 
   483  0EB9                     	;# 
   484  0EBA                     	;# 
   485  0EBB                     	;# 
   486  0EBC                     	;# 
   487  0EBD                     	;# 
   488  0EBE                     	;# 
   489  0EC3                     	;# 
   490  0EC5                     	;# 
   491  0EC6                     	;# 
   492  0EC7                     	;# 
   493  0EC8                     	;# 
   494  0EC9                     	;# 
   495  0ECA                     	;# 
   496  0ECB                     	;# 
   497  0ECC                     	;# 
   498  0F10                     	;# 
   499  0F11                     	;# 
   500  0F12                     	;# 
   501  0F13                     	;# 
   502  0F14                     	;# 
   503  0F15                     	;# 
   504  0F16                     	;# 
   505  0F17                     	;# 
   506  0F18                     	;# 
   507  0F19                     	;# 
   508  0F1A                     	;# 
   509  0F1B                     	;# 
   510  0F1C                     	;# 
   511  0F1D                     	;# 
   512  0F1E                     	;# 
   513  0F1F                     	;# 
   514  0F20                     	;# 
   515  0F21                     	;# 
   516  0F22                     	;# 
   517  0F23                     	;# 
   518  0F24                     	;# 
   519  0F25                     	;# 
   520  0F26                     	;# 
   521  0F27                     	;# 
   522  0F38                     	;# 
   523  0F39                     	;# 
   524  0F3A                     	;# 
   525  0F3B                     	;# 
   526  0F3C                     	;# 
   527  0F3D                     	;# 
   528  0F3E                     	;# 
   529  0F3F                     	;# 
   530  0F40                     	;# 
   531  0F41                     	;# 
   532  0F43                     	;# 
   533  0F44                     	;# 
   534  0F45                     	;# 
   535  0F46                     	;# 
   536  0F47                     	;# 
   537  0F48                     	;# 
   538  0F49                     	;# 
   539  0F4A                     	;# 
   540  0F4B                     	;# 
   541  0F4C                     	;# 
   542  0F4E                     	;# 
   543  0F4F                     	;# 
   544  0F50                     	;# 
   545  0F51                     	;# 
   546  0F52                     	;# 
   547  0F53                     	;# 
   548  0F54                     	;# 
   549  0F55                     	;# 
   550  0F56                     	;# 
   551  0F57                     	;# 
   552  0F65                     	;# 
   553  0F68                     	;# 
   554  0F69                     	;# 
   555  0F6A                     	;# 
   556  0F6B                     	;# 
   557  0FE4                     	;# 
   558  0FE5                     	;# 
   559  0FE6                     	;# 
   560  0FE7                     	;# 
   561  0FE8                     	;# 
   562  0FE9                     	;# 
   563  0FEA                     	;# 
   564  0FEB                     	;# 
   565  0FED                     	;# 
   566  0FEE                     	;# 
   567  0FEF                     	;# 
   568  0000                     	;# 
   569  0001                     	;# 
   570  0002                     	;# 
   571  0003                     	;# 
   572  0004                     	;# 
   573  0005                     	;# 
   574  0006                     	;# 
   575  0007                     	;# 
   576  0008                     	;# 
   577  0009                     	;# 
   578  000A                     	;# 
   579  000B                     	;# 
   580  000C                     	;# 
   581  000D                     	;# 
   582  000E                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  001C                     	;# 
   591  001C                     	;# 
   592  001D                     	;# 
   593  001D                     	;# 
   594  001E                     	;# 
   595  001F                     	;# 
   596  008C                     	;# 
   597  008C                     	;# 
   598  008D                     	;# 
   599  008E                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0090                     	;# 
   604  0091                     	;# 
   605  0093                     	;# 
   606  0094                     	;# 
   607  0095                     	;# 
   608  0096                     	;# 
   609  0097                     	;# 
   610  0098                     	;# 
   611  0099                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009C                     	;# 
   615  009D                     	;# 
   616  009E                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010E                     	;# 
   620  010E                     	;# 
   621  010F                     	;# 
   622  0110                     	;# 
   623  0110                     	;# 
   624  0111                     	;# 
   625  0112                     	;# 
   626  0112                     	;# 
   627  0113                     	;# 
   628  0114                     	;# 
   629  0114                     	;# 
   630  0115                     	;# 
   631  0116                     	;# 
   632  0116                     	;# 
   633  0117                     	;# 
   634  0119                     	;# 
   635  0119                     	;# 
   636  0119                     	;# 
   637  011A                     	;# 
   638  011A                     	;# 
   639  011A                     	;# 
   640  011B                     	;# 
   641  011B                     	;# 
   642  011B                     	;# 
   643  011B                     	;# 
   644  011B                     	;# 
   645  011C                     	;# 
   646  011C                     	;# 
   647  011C                     	;# 
   648  011D                     	;# 
   649  011D                     	;# 
   650  011D                     	;# 
   651  011E                     	;# 
   652  011E                     	;# 
   653  011E                     	;# 
   654  011F                     	;# 
   655  011F                     	;# 
   656  011F                     	;# 
   657  011F                     	;# 
   658  011F                     	;# 
   659  018C                     	;# 
   660  018D                     	;# 
   661  018E                     	;# 
   662  018F                     	;# 
   663  0190                     	;# 
   664  0191                     	;# 
   665  0192                     	;# 
   666  0196                     	;# 
   667  0197                     	;# 
   668  0198                     	;# 
   669  0199                     	;# 
   670  019A                     	;# 
   671  019B                     	;# 
   672  019C                     	;# 
   673  020C                     	;# 
   674  020D                     	;# 
   675  020E                     	;# 
   676  020F                     	;# 
   677  020F                     	;# 
   678  0210                     	;# 
   679  0210                     	;# 
   680  0211                     	;# 
   681  0211                     	;# 
   682  0212                     	;# 
   683  0213                     	;# 
   684  0214                     	;# 
   685  0215                     	;# 
   686  0215                     	;# 
   687  0216                     	;# 
   688  0216                     	;# 
   689  0217                     	;# 
   690  0217                     	;# 
   691  0218                     	;# 
   692  0219                     	;# 
   693  021A                     	;# 
   694  021B                     	;# 
   695  021B                     	;# 
   696  021C                     	;# 
   697  021C                     	;# 
   698  021D                     	;# 
   699  021D                     	;# 
   700  021E                     	;# 
   701  021F                     	;# 
   702  028C                     	;# 
   703  028C                     	;# 
   704  028D                     	;# 
   705  028D                     	;# 
   706  028E                     	;# 
   707  028F                     	;# 
   708  0290                     	;# 
   709  0290                     	;# 
   710  0291                     	;# 
   711  0292                     	;# 
   712  0292                     	;# 
   713  0293                     	;# 
   714  0293                     	;# 
   715  0294                     	;# 
   716  0295                     	;# 
   717  0296                     	;# 
   718  0296                     	;# 
   719  0297                     	;# 
   720  0298                     	;# 
   721  0298                     	;# 
   722  0299                     	;# 
   723  0299                     	;# 
   724  029A                     	;# 
   725  029B                     	;# 
   726  029C                     	;# 
   727  029C                     	;# 
   728  029D                     	;# 
   729  030C                     	;# 
   730  030C                     	;# 
   731  030D                     	;# 
   732  030E                     	;# 
   733  030F                     	;# 
   734  0310                     	;# 
   735  0310                     	;# 
   736  0311                     	;# 
   737  0312                     	;# 
   738  0313                     	;# 
   739  0314                     	;# 
   740  0314                     	;# 
   741  0315                     	;# 
   742  0316                     	;# 
   743  0317                     	;# 
   744  0318                     	;# 
   745  0318                     	;# 
   746  0319                     	;# 
   747  031A                     	;# 
   748  031B                     	;# 
   749  031C                     	;# 
   750  031C                     	;# 
   751  031D                     	;# 
   752  031E                     	;# 
   753  031F                     	;# 
   754  038C                     	;# 
   755  038D                     	;# 
   756  038E                     	;# 
   757  0390                     	;# 
   758  0391                     	;# 
   759  0392                     	;# 
   760  040C                     	;# 
   761  040D                     	;# 
   762  040E                     	;# 
   763  040F                     	;# 
   764  0410                     	;# 
   765  0411                     	;# 
   766  0416                     	;# 
   767  0416                     	;# 
   768  0417                     	;# 
   769  0418                     	;# 
   770  0418                     	;# 
   771  0419                     	;# 
   772  041A                     	;# 
   773  041A                     	;# 
   774  041B                     	;# 
   775  041C                     	;# 
   776  041C                     	;# 
   777  041D                     	;# 
   778  041E                     	;# 
   779  041F                     	;# 
   780  048C                     	;# 
   781  048C                     	;# 
   782  048D                     	;# 
   783  048E                     	;# 
   784  048F                     	;# 
   785  048F                     	;# 
   786  0490                     	;# 
   787  0491                     	;# 
   788  0492                     	;# 
   789  0492                     	;# 
   790  0493                     	;# 
   791  0494                     	;# 
   792  0495                     	;# 
   793  0495                     	;# 
   794  0496                     	;# 
   795  0497                     	;# 
   796  0498                     	;# 
   797  0499                     	;# 
   798  049A                     	;# 
   799  049B                     	;# 
   800  049C                     	;# 
   801  049D                     	;# 
   802  050C                     	;# 
   803  050C                     	;# 
   804  050D                     	;# 
   805  050E                     	;# 
   806  050F                     	;# 
   807  050F                     	;# 
   808  0510                     	;# 
   809  0511                     	;# 
   810  0512                     	;# 
   811  0512                     	;# 
   812  0513                     	;# 
   813  0514                     	;# 
   814  0515                     	;# 
   815  0515                     	;# 
   816  0516                     	;# 
   817  0517                     	;# 
   818  0518                     	;# 
   819  0519                     	;# 
   820  051A                     	;# 
   821  051B                     	;# 
   822  051C                     	;# 
   823  051D                     	;# 
   824  058C                     	;# 
   825  058C                     	;# 
   826  058D                     	;# 
   827  058E                     	;# 
   828  058F                     	;# 
   829  058F                     	;# 
   830  0590                     	;# 
   831  0591                     	;# 
   832  0592                     	;# 
   833  0593                     	;# 
   834  060C                     	;# 
   835  060D                     	;# 
   836  060E                     	;# 
   837  060F                     	;# 
   838  0610                     	;# 
   839  0611                     	;# 
   840  0612                     	;# 
   841  0613                     	;# 
   842  0614                     	;# 
   843  0616                     	;# 
   844  0617                     	;# 
   845  0618                     	;# 
   846  0619                     	;# 
   847  061A                     	;# 
   848  061B                     	;# 
   849  061C                     	;# 
   850  061D                     	;# 
   851  061E                     	;# 
   852  068C                     	;# 
   853  068D                     	;# 
   854  068E                     	;# 
   855  068F                     	;# 
   856  0690                     	;# 
   857  0691                     	;# 
   858  0692                     	;# 
   859  0693                     	;# 
   860  0694                     	;# 
   861  070C                     	;# 
   862  070D                     	;# 
   863  070E                     	;# 
   864  070F                     	;# 
   865  0710                     	;# 
   866  0711                     	;# 
   867  0712                     	;# 
   868  0713                     	;# 
   869  0714                     	;# 
   870  0716                     	;# 
   871  0717                     	;# 
   872  0718                     	;# 
   873  0719                     	;# 
   874  071A                     	;# 
   875  071B                     	;# 
   876  071C                     	;# 
   877  071D                     	;# 
   878  071E                     	;# 
   879  0796                     	;# 
   880  0797                     	;# 
   881  0798                     	;# 
   882  0799                     	;# 
   883  079A                     	;# 
   884  079B                     	;# 
   885  080C                     	;# 
   886  080D                     	;# 
   887  080E                     	;# 
   888  080F                     	;# 
   889  0810                     	;# 
   890  0811                     	;# 
   891  0812                     	;# 
   892  0813                     	;# 
   893  0814                     	;# 
   894  081A                     	;# 
   895  081B                     	;# 
   896  081C                     	;# 
   897  081D                     	;# 
   898  081E                     	;# 
   899  081F                     	;# 
   900  088C                     	;# 
   901  088D                     	;# 
   902  088E                     	;# 
   903  088F                     	;# 
   904  0890                     	;# 
   905  0891                     	;# 
   906  0892                     	;# 
   907  0893                     	;# 
   908  0895                     	;# 
   909  0896                     	;# 
   910  0897                     	;# 
   911  0898                     	;# 
   912  0899                     	;# 
   913  089A                     	;# 
   914  089B                     	;# 
   915  090C                     	;# 
   916  090E                     	;# 
   917  090F                     	;# 
   918  091F                     	;# 
   919  091F                     	;# 
   920  098F                     	;# 
   921  098F                     	;# 
   922  0990                     	;# 
   923  0991                     	;# 
   924  0992                     	;# 
   925  0993                     	;# 
   926  0994                     	;# 
   927  0995                     	;# 
   928  0996                     	;# 
   929  0997                     	;# 
   930  0E0F                     	;# 
   931  0E10                     	;# 
   932  0E11                     	;# 
   933  0E12                     	;# 
   934  0E13                     	;# 
   935  0E14                     	;# 
   936  0E15                     	;# 
   937  0E16                     	;# 
   938  0E17                     	;# 
   939  0E18                     	;# 
   940  0E19                     	;# 
   941  0E1A                     	;# 
   942  0E1B                     	;# 
   943  0E1C                     	;# 
   944  0E1D                     	;# 
   945  0E1E                     	;# 
   946  0E1F                     	;# 
   947  0E20                     	;# 
   948  0E21                     	;# 
   949  0E22                     	;# 
   950  0E23                     	;# 
   951  0E24                     	;# 
   952  0E25                     	;# 
   953  0E26                     	;# 
   954  0E27                     	;# 
   955  0E28                     	;# 
   956  0E29                     	;# 
   957  0E2A                     	;# 
   958  0E2B                     	;# 
   959  0E2C                     	;# 
   960  0E2D                     	;# 
   961  0E2E                     	;# 
   962  0E2F                     	;# 
   963  0E30                     	;# 
   964  0E31                     	;# 
   965  0E32                     	;# 
   966  0E33                     	;# 
   967  0E34                     	;# 
   968  0E35                     	;# 
   969  0E36                     	;# 
   970  0E37                     	;# 
   971  0E8F                     	;# 
   972  0E90                     	;# 
   973  0E91                     	;# 
   974  0E92                     	;# 
   975  0E93                     	;# 
   976  0E94                     	;# 
   977  0E95                     	;# 
   978  0E96                     	;# 
   979  0E97                     	;# 
   980  0E9C                     	;# 
   981  0E9D                     	;# 
   982  0E9E                     	;# 
   983  0EA1                     	;# 
   984  0EA2                     	;# 
   985  0EA3                     	;# 
   986  0EA4                     	;# 
   987  0EA5                     	;# 
   988  0EA9                     	;# 
   989  0EAA                     	;# 
   990  0EAB                     	;# 
   991  0EAC                     	;# 
   992  0EB1                     	;# 
   993  0EB2                     	;# 
   994  0EB3                     	;# 
   995  0EB8                     	;# 
   996  0EB9                     	;# 
   997  0EBA                     	;# 
   998  0EBB                     	;# 
   999  0EBC                     	;# 
  1000  0EBD                     	;# 
  1001  0EBE                     	;# 
  1002  0EC3                     	;# 
  1003  0EC5                     	;# 
  1004  0EC6                     	;# 
  1005  0EC7                     	;# 
  1006  0EC8                     	;# 
  1007  0EC9                     	;# 
  1008  0ECA                     	;# 
  1009  0ECB                     	;# 
  1010  0ECC                     	;# 
  1011  0F10                     	;# 
  1012  0F11                     	;# 
  1013  0F12                     	;# 
  1014  0F13                     	;# 
  1015  0F14                     	;# 
  1016  0F15                     	;# 
  1017  0F16                     	;# 
  1018  0F17                     	;# 
  1019  0F18                     	;# 
  1020  0F19                     	;# 
  1021  0F1A                     	;# 
  1022  0F1B                     	;# 
  1023  0F1C                     	;# 
  1024  0F1D                     	;# 
  1025  0F1E                     	;# 
  1026  0F1F                     	;# 
  1027  0F20                     	;# 
  1028  0F21                     	;# 
  1029  0F22                     	;# 
  1030  0F23                     	;# 
  1031  0F24                     	;# 
  1032  0F25                     	;# 
  1033  0F26                     	;# 
  1034  0F27                     	;# 
  1035  0F38                     	;# 
  1036  0F39                     	;# 
  1037  0F3A                     	;# 
  1038  0F3B                     	;# 
  1039  0F3C                     	;# 
  1040  0F3D                     	;# 
  1041  0F3E                     	;# 
  1042  0F3F                     	;# 
  1043  0F40                     	;# 
  1044  0F41                     	;# 
  1045  0F43                     	;# 
  1046  0F44                     	;# 
  1047  0F45                     	;# 
  1048  0F46                     	;# 
  1049  0F47                     	;# 
  1050  0F48                     	;# 
  1051  0F49                     	;# 
  1052  0F4A                     	;# 
  1053  0F4B                     	;# 
  1054  0F4C                     	;# 
  1055  0F4E                     	;# 
  1056  0F4F                     	;# 
  1057  0F50                     	;# 
  1058  0F51                     	;# 
  1059  0F52                     	;# 
  1060  0F53                     	;# 
  1061  0F54                     	;# 
  1062  0F55                     	;# 
  1063  0F56                     	;# 
  1064  0F57                     	;# 
  1065  0F65                     	;# 
  1066  0F68                     	;# 
  1067  0F69                     	;# 
  1068  0F6A                     	;# 
  1069  0F6B                     	;# 
  1070  0FE4                     	;# 
  1071  0FE5                     	;# 
  1072  0FE6                     	;# 
  1073  0FE7                     	;# 
  1074  0FE8                     	;# 
  1075  0FE9                     	;# 
  1076  0FEA                     	;# 
  1077  0FEB                     	;# 
  1078  0FED                     	;# 
  1079  0FEE                     	;# 
  1080  0FEF                     	;# 
  1081  0000                     	;# 
  1082  0001                     	;# 
  1083  0002                     	;# 
  1084  0003                     	;# 
  1085  0004                     	;# 
  1086  0005                     	;# 
  1087  0006                     	;# 
  1088  0007                     	;# 
  1089  0008                     	;# 
  1090  0009                     	;# 
  1091  000A                     	;# 
  1092  000B                     	;# 
  1093  000C                     	;# 
  1094  000D                     	;# 
  1095  000E                     	;# 
  1096  0010                     	;# 
  1097  0011                     	;# 
  1098  0012                     	;# 
  1099  0013                     	;# 
  1100  0016                     	;# 
  1101  0017                     	;# 
  1102  0018                     	;# 
  1103  001C                     	;# 
  1104  001C                     	;# 
  1105  001D                     	;# 
  1106  001D                     	;# 
  1107  001E                     	;# 
  1108  001F                     	;# 
  1109  008C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  008E                     	;# 
  1114  008F                     	;# 
  1115  0090                     	;# 
  1116  0090                     	;# 
  1117  0091                     	;# 
  1118  0093                     	;# 
  1119  0094                     	;# 
  1120  0095                     	;# 
  1121  0096                     	;# 
  1122  0097                     	;# 
  1123  0098                     	;# 
  1124  0099                     	;# 
  1125  009A                     	;# 
  1126  009B                     	;# 
  1127  009C                     	;# 
  1128  009D                     	;# 
  1129  009E                     	;# 
  1130  010C                     	;# 
  1131  010D                     	;# 
  1132  010E                     	;# 
  1133  010E                     	;# 
  1134  010F                     	;# 
  1135  0110                     	;# 
  1136  0110                     	;# 
  1137  0111                     	;# 
  1138  0112                     	;# 
  1139  0112                     	;# 
  1140  0113                     	;# 
  1141  0114                     	;# 
  1142  0114                     	;# 
  1143  0115                     	;# 
  1144  0116                     	;# 
  1145  0116                     	;# 
  1146  0117                     	;# 
  1147  0119                     	;# 
  1148  0119                     	;# 
  1149  0119                     	;# 
  1150  011A                     	;# 
  1151  011A                     	;# 
  1152  011A                     	;# 
  1153  011B                     	;# 
  1154  011B                     	;# 
  1155  011B                     	;# 
  1156  011B                     	;# 
  1157  011B                     	;# 
  1158  011C                     	;# 
  1159  011C                     	;# 
  1160  011C                     	;# 
  1161  011D                     	;# 
  1162  011D                     	;# 
  1163  011D                     	;# 
  1164  011E                     	;# 
  1165  011E                     	;# 
  1166  011E                     	;# 
  1167  011F                     	;# 
  1168  011F                     	;# 
  1169  011F                     	;# 
  1170  011F                     	;# 
  1171  011F                     	;# 
  1172  018C                     	;# 
  1173  018D                     	;# 
  1174  018E                     	;# 
  1175  018F                     	;# 
  1176  0190                     	;# 
  1177  0191                     	;# 
  1178  0192                     	;# 
  1179  0196                     	;# 
  1180  0197                     	;# 
  1181  0198                     	;# 
  1182  0199                     	;# 
  1183  019A                     	;# 
  1184  019B                     	;# 
  1185  019C                     	;# 
  1186  020C                     	;# 
  1187  020D                     	;# 
  1188  020E                     	;# 
  1189  020F                     	;# 
  1190  020F                     	;# 
  1191  0210                     	;# 
  1192  0210                     	;# 
  1193  0211                     	;# 
  1194  0211                     	;# 
  1195  0212                     	;# 
  1196  0213                     	;# 
  1197  0214                     	;# 
  1198  0215                     	;# 
  1199  0215                     	;# 
  1200  0216                     	;# 
  1201  0216                     	;# 
  1202  0217                     	;# 
  1203  0217                     	;# 
  1204  0218                     	;# 
  1205  0219                     	;# 
  1206  021A                     	;# 
  1207  021B                     	;# 
  1208  021B                     	;# 
  1209  021C                     	;# 
  1210  021C                     	;# 
  1211  021D                     	;# 
  1212  021D                     	;# 
  1213  021E                     	;# 
  1214  021F                     	;# 
  1215  028C                     	;# 
  1216  028C                     	;# 
  1217  028D                     	;# 
  1218  028D                     	;# 
  1219  028E                     	;# 
  1220  028F                     	;# 
  1221  0290                     	;# 
  1222  0290                     	;# 
  1223  0291                     	;# 
  1224  0292                     	;# 
  1225  0292                     	;# 
  1226  0293                     	;# 
  1227  0293                     	;# 
  1228  0294                     	;# 
  1229  0295                     	;# 
  1230  0296                     	;# 
  1231  0296                     	;# 
  1232  0297                     	;# 
  1233  0298                     	;# 
  1234  0298                     	;# 
  1235  0299                     	;# 
  1236  0299                     	;# 
  1237  029A                     	;# 
  1238  029B                     	;# 
  1239  029C                     	;# 
  1240  029C                     	;# 
  1241  029D                     	;# 
  1242  030C                     	;# 
  1243  030C                     	;# 
  1244  030D                     	;# 
  1245  030E                     	;# 
  1246  030F                     	;# 
  1247  0310                     	;# 
  1248  0310                     	;# 
  1249  0311                     	;# 
  1250  0312                     	;# 
  1251  0313                     	;# 
  1252  0314                     	;# 
  1253  0314                     	;# 
  1254  0315                     	;# 
  1255  0316                     	;# 
  1256  0317                     	;# 
  1257  0318                     	;# 
  1258  0318                     	;# 
  1259  0319                     	;# 
  1260  031A                     	;# 
  1261  031B                     	;# 
  1262  031C                     	;# 
  1263  031C                     	;# 
  1264  031D                     	;# 
  1265  031E                     	;# 
  1266  031F                     	;# 
  1267  038C                     	;# 
  1268  038D                     	;# 
  1269  038E                     	;# 
  1270  0390                     	;# 
  1271  0391                     	;# 
  1272  0392                     	;# 
  1273  040C                     	;# 
  1274  040D                     	;# 
  1275  040E                     	;# 
  1276  040F                     	;# 
  1277  0410                     	;# 
  1278  0411                     	;# 
  1279  0416                     	;# 
  1280  0416                     	;# 
  1281  0417                     	;# 
  1282  0418                     	;# 
  1283  0418                     	;# 
  1284  0419                     	;# 
  1285  041A                     	;# 
  1286  041A                     	;# 
  1287  041B                     	;# 
  1288  041C                     	;# 
  1289  041C                     	;# 
  1290  041D                     	;# 
  1291  041E                     	;# 
  1292  041F                     	;# 
  1293  048C                     	;# 
  1294  048C                     	;# 
  1295  048D                     	;# 
  1296  048E                     	;# 
  1297  048F                     	;# 
  1298  048F                     	;# 
  1299  0490                     	;# 
  1300  0491                     	;# 
  1301  0492                     	;# 
  1302  0492                     	;# 
  1303  0493                     	;# 
  1304  0494                     	;# 
  1305  0495                     	;# 
  1306  0495                     	;# 
  1307  0496                     	;# 
  1308  0497                     	;# 
  1309  0498                     	;# 
  1310  0499                     	;# 
  1311  049A                     	;# 
  1312  049B                     	;# 
  1313  049C                     	;# 
  1314  049D                     	;# 
  1315  050C                     	;# 
  1316  050C                     	;# 
  1317  050D                     	;# 
  1318  050E                     	;# 
  1319  050F                     	;# 
  1320  050F                     	;# 
  1321  0510                     	;# 
  1322  0511                     	;# 
  1323  0512                     	;# 
  1324  0512                     	;# 
  1325  0513                     	;# 
  1326  0514                     	;# 
  1327  0515                     	;# 
  1328  0515                     	;# 
  1329  0516                     	;# 
  1330  0517                     	;# 
  1331  0518                     	;# 
  1332  0519                     	;# 
  1333  051A                     	;# 
  1334  051B                     	;# 
  1335  051C                     	;# 
  1336  051D                     	;# 
  1337  058C                     	;# 
  1338  058C                     	;# 
  1339  058D                     	;# 
  1340  058E                     	;# 
  1341  058F                     	;# 
  1342  058F                     	;# 
  1343  0590                     	;# 
  1344  0591                     	;# 
  1345  0592                     	;# 
  1346  0593                     	;# 
  1347  060C                     	;# 
  1348  060D                     	;# 
  1349  060E                     	;# 
  1350  060F                     	;# 
  1351  0610                     	;# 
  1352  0611                     	;# 
  1353  0612                     	;# 
  1354  0613                     	;# 
  1355  0614                     	;# 
  1356  0616                     	;# 
  1357  0617                     	;# 
  1358  0618                     	;# 
  1359  0619                     	;# 
  1360  061A                     	;# 
  1361  061B                     	;# 
  1362  061C                     	;# 
  1363  061D                     	;# 
  1364  061E                     	;# 
  1365  068C                     	;# 
  1366  068D                     	;# 
  1367  068E                     	;# 
  1368  068F                     	;# 
  1369  0690                     	;# 
  1370  0691                     	;# 
  1371  0692                     	;# 
  1372  0693                     	;# 
  1373  0694                     	;# 
  1374  070C                     	;# 
  1375  070D                     	;# 
  1376  070E                     	;# 
  1377  070F                     	;# 
  1378  0710                     	;# 
  1379  0711                     	;# 
  1380  0712                     	;# 
  1381  0713                     	;# 
  1382  0714                     	;# 
  1383  0716                     	;# 
  1384  0717                     	;# 
  1385  0718                     	;# 
  1386  0719                     	;# 
  1387  071A                     	;# 
  1388  071B                     	;# 
  1389  071C                     	;# 
  1390  071D                     	;# 
  1391  071E                     	;# 
  1392  0796                     	;# 
  1393  0797                     	;# 
  1394  0798                     	;# 
  1395  0799                     	;# 
  1396  079A                     	;# 
  1397  079B                     	;# 
  1398  080C                     	;# 
  1399  080D                     	;# 
  1400  080E                     	;# 
  1401  080F                     	;# 
  1402  0810                     	;# 
  1403  0811                     	;# 
  1404  0812                     	;# 
  1405  0813                     	;# 
  1406  0814                     	;# 
  1407  081A                     	;# 
  1408  081B                     	;# 
  1409  081C                     	;# 
  1410  081D                     	;# 
  1411  081E                     	;# 
  1412  081F                     	;# 
  1413  088C                     	;# 
  1414  088D                     	;# 
  1415  088E                     	;# 
  1416  088F                     	;# 
  1417  0890                     	;# 
  1418  0891                     	;# 
  1419  0892                     	;# 
  1420  0893                     	;# 
  1421  0895                     	;# 
  1422  0896                     	;# 
  1423  0897                     	;# 
  1424  0898                     	;# 
  1425  0899                     	;# 
  1426  089A                     	;# 
  1427  089B                     	;# 
  1428  090C                     	;# 
  1429  090E                     	;# 
  1430  090F                     	;# 
  1431  091F                     	;# 
  1432  091F                     	;# 
  1433  098F                     	;# 
  1434  098F                     	;# 
  1435  0990                     	;# 
  1436  0991                     	;# 
  1437  0992                     	;# 
  1438  0993                     	;# 
  1439  0994                     	;# 
  1440  0995                     	;# 
  1441  0996                     	;# 
  1442  0997                     	;# 
  1443  0E0F                     	;# 
  1444  0E10                     	;# 
  1445  0E11                     	;# 
  1446  0E12                     	;# 
  1447  0E13                     	;# 
  1448  0E14                     	;# 
  1449  0E15                     	;# 
  1450  0E16                     	;# 
  1451  0E17                     	;# 
  1452  0E18                     	;# 
  1453  0E19                     	;# 
  1454  0E1A                     	;# 
  1455  0E1B                     	;# 
  1456  0E1C                     	;# 
  1457  0E1D                     	;# 
  1458  0E1E                     	;# 
  1459  0E1F                     	;# 
  1460  0E20                     	;# 
  1461  0E21                     	;# 
  1462  0E22                     	;# 
  1463  0E23                     	;# 
  1464  0E24                     	;# 
  1465  0E25                     	;# 
  1466  0E26                     	;# 
  1467  0E27                     	;# 
  1468  0E28                     	;# 
  1469  0E29                     	;# 
  1470  0E2A                     	;# 
  1471  0E2B                     	;# 
  1472  0E2C                     	;# 
  1473  0E2D                     	;# 
  1474  0E2E                     	;# 
  1475  0E2F                     	;# 
  1476  0E30                     	;# 
  1477  0E31                     	;# 
  1478  0E32                     	;# 
  1479  0E33                     	;# 
  1480  0E34                     	;# 
  1481  0E35                     	;# 
  1482  0E36                     	;# 
  1483  0E37                     	;# 
  1484  0E8F                     	;# 
  1485  0E90                     	;# 
  1486  0E91                     	;# 
  1487  0E92                     	;# 
  1488  0E93                     	;# 
  1489  0E94                     	;# 
  1490  0E95                     	;# 
  1491  0E96                     	;# 
  1492  0E97                     	;# 
  1493  0E9C                     	;# 
  1494  0E9D                     	;# 
  1495  0E9E                     	;# 
  1496  0EA1                     	;# 
  1497  0EA2                     	;# 
  1498  0EA3                     	;# 
  1499  0EA4                     	;# 
  1500  0EA5                     	;# 
  1501  0EA9                     	;# 
  1502  0EAA                     	;# 
  1503  0EAB                     	;# 
  1504  0EAC                     	;# 
  1505  0EB1                     	;# 
  1506  0EB2                     	;# 
  1507  0EB3                     	;# 
  1508  0EB8                     	;# 
  1509  0EB9                     	;# 
  1510  0EBA                     	;# 
  1511  0EBB                     	;# 
  1512  0EBC                     	;# 
  1513  0EBD                     	;# 
  1514  0EBE                     	;# 
  1515  0EC3                     	;# 
  1516  0EC5                     	;# 
  1517  0EC6                     	;# 
  1518  0EC7                     	;# 
  1519  0EC8                     	;# 
  1520  0EC9                     	;# 
  1521  0ECA                     	;# 
  1522  0ECB                     	;# 
  1523  0ECC                     	;# 
  1524  0F10                     	;# 
  1525  0F11                     	;# 
  1526  0F12                     	;# 
  1527  0F13                     	;# 
  1528  0F14                     	;# 
  1529  0F15                     	;# 
  1530  0F16                     	;# 
  1531  0F17                     	;# 
  1532  0F18                     	;# 
  1533  0F19                     	;# 
  1534  0F1A                     	;# 
  1535  0F1B                     	;# 
  1536  0F1C                     	;# 
  1537  0F1D                     	;# 
  1538  0F1E                     	;# 
  1539  0F1F                     	;# 
  1540  0F20                     	;# 
  1541  0F21                     	;# 
  1542  0F22                     	;# 
  1543  0F23                     	;# 
  1544  0F24                     	;# 
  1545  0F25                     	;# 
  1546  0F26                     	;# 
  1547  0F27                     	;# 
  1548  0F38                     	;# 
  1549  0F39                     	;# 
  1550  0F3A                     	;# 
  1551  0F3B                     	;# 
  1552  0F3C                     	;# 
  1553  0F3D                     	;# 
  1554  0F3E                     	;# 
  1555  0F3F                     	;# 
  1556  0F40                     	;# 
  1557  0F41                     	;# 
  1558  0F43                     	;# 
  1559  0F44                     	;# 
  1560  0F45                     	;# 
  1561  0F46                     	;# 
  1562  0F47                     	;# 
  1563  0F48                     	;# 
  1564  0F49                     	;# 
  1565  0F4A                     	;# 
  1566  0F4B                     	;# 
  1567  0F4C                     	;# 
  1568  0F4E                     	;# 
  1569  0F4F                     	;# 
  1570  0F50                     	;# 
  1571  0F51                     	;# 
  1572  0F52                     	;# 
  1573  0F53                     	;# 
  1574  0F54                     	;# 
  1575  0F55                     	;# 
  1576  0F56                     	;# 
  1577  0F57                     	;# 
  1578  0F65                     	;# 
  1579  0F68                     	;# 
  1580  0F69                     	;# 
  1581  0F6A                     	;# 
  1582  0F6B                     	;# 
  1583  0FE4                     	;# 
  1584  0FE5                     	;# 
  1585  0FE6                     	;# 
  1586  0FE7                     	;# 
  1587  0FE8                     	;# 
  1588  0FE9                     	;# 
  1589  0FEA                     	;# 
  1590  0FEB                     	;# 
  1591  0FED                     	;# 
  1592  0FEE                     	;# 
  1593  0FEF                     	;# 
  1594  0000                     	;# 
  1595  0001                     	;# 
  1596  0002                     	;# 
  1597  0003                     	;# 
  1598  0004                     	;# 
  1599  0005                     	;# 
  1600  0006                     	;# 
  1601  0007                     	;# 
  1602  0008                     	;# 
  1603  0009                     	;# 
  1604  000A                     	;# 
  1605  000B                     	;# 
  1606  000C                     	;# 
  1607  000D                     	;# 
  1608  000E                     	;# 
  1609  0010                     	;# 
  1610  0011                     	;# 
  1611  0012                     	;# 
  1612  0013                     	;# 
  1613  0016                     	;# 
  1614  0017                     	;# 
  1615  0018                     	;# 
  1616  001C                     	;# 
  1617  001C                     	;# 
  1618  001D                     	;# 
  1619  001D                     	;# 
  1620  001E                     	;# 
  1621  001F                     	;# 
  1622  008C                     	;# 
  1623  008C                     	;# 
  1624  008D                     	;# 
  1625  008E                     	;# 
  1626  008E                     	;# 
  1627  008F                     	;# 
  1628  0090                     	;# 
  1629  0090                     	;# 
  1630  0091                     	;# 
  1631  0093                     	;# 
  1632  0094                     	;# 
  1633  0095                     	;# 
  1634  0096                     	;# 
  1635  0097                     	;# 
  1636  0098                     	;# 
  1637  0099                     	;# 
  1638  009A                     	;# 
  1639  009B                     	;# 
  1640  009C                     	;# 
  1641  009D                     	;# 
  1642  009E                     	;# 
  1643  010C                     	;# 
  1644  010D                     	;# 
  1645  010E                     	;# 
  1646  010E                     	;# 
  1647  010F                     	;# 
  1648  0110                     	;# 
  1649  0110                     	;# 
  1650  0111                     	;# 
  1651  0112                     	;# 
  1652  0112                     	;# 
  1653  0113                     	;# 
  1654  0114                     	;# 
  1655  0114                     	;# 
  1656  0115                     	;# 
  1657  0116                     	;# 
  1658  0116                     	;# 
  1659  0117                     	;# 
  1660  0119                     	;# 
  1661  0119                     	;# 
  1662  0119                     	;# 
  1663  011A                     	;# 
  1664  011A                     	;# 
  1665  011A                     	;# 
  1666  011B                     	;# 
  1667  011B                     	;# 
  1668  011B                     	;# 
  1669  011B                     	;# 
  1670  011B                     	;# 
  1671  011C                     	;# 
  1672  011C                     	;# 
  1673  011C                     	;# 
  1674  011D                     	;# 
  1675  011D                     	;# 
  1676  011D                     	;# 
  1677  011E                     	;# 
  1678  011E                     	;# 
  1679  011E                     	;# 
  1680  011F                     	;# 
  1681  011F                     	;# 
  1682  011F                     	;# 
  1683  011F                     	;# 
  1684  011F                     	;# 
  1685  018C                     	;# 
  1686  018D                     	;# 
  1687  018E                     	;# 
  1688  018F                     	;# 
  1689  0190                     	;# 
  1690  0191                     	;# 
  1691  0192                     	;# 
  1692  0196                     	;# 
  1693  0197                     	;# 
  1694  0198                     	;# 
  1695  0199                     	;# 
  1696  019A                     	;# 
  1697  019B                     	;# 
  1698  019C                     	;# 
  1699  020C                     	;# 
  1700  020D                     	;# 
  1701  020E                     	;# 
  1702  020F                     	;# 
  1703  020F                     	;# 
  1704  0210                     	;# 
  1705  0210                     	;# 
  1706  0211                     	;# 
  1707  0211                     	;# 
  1708  0212                     	;# 
  1709  0213                     	;# 
  1710  0214                     	;# 
  1711  0215                     	;# 
  1712  0215                     	;# 
  1713  0216                     	;# 
  1714  0216                     	;# 
  1715  0217                     	;# 
  1716  0217                     	;# 
  1717  0218                     	;# 
  1718  0219                     	;# 
  1719  021A                     	;# 
  1720  021B                     	;# 
  1721  021B                     	;# 
  1722  021C                     	;# 
  1723  021C                     	;# 
  1724  021D                     	;# 
  1725  021D                     	;# 
  1726  021E                     	;# 
  1727  021F                     	;# 
  1728  028C                     	;# 
  1729  028C                     	;# 
  1730  028D                     	;# 
  1731  028D                     	;# 
  1732  028E                     	;# 
  1733  028F                     	;# 
  1734  0290                     	;# 
  1735  0290                     	;# 
  1736  0291                     	;# 
  1737  0292                     	;# 
  1738  0292                     	;# 
  1739  0293                     	;# 
  1740  0293                     	;# 
  1741  0294                     	;# 
  1742  0295                     	;# 
  1743  0296                     	;# 
  1744  0296                     	;# 
  1745  0297                     	;# 
  1746  0298                     	;# 
  1747  0298                     	;# 
  1748  0299                     	;# 
  1749  0299                     	;# 
  1750  029A                     	;# 
  1751  029B                     	;# 
  1752  029C                     	;# 
  1753  029C                     	;# 
  1754  029D                     	;# 
  1755  030C                     	;# 
  1756  030C                     	;# 
  1757  030D                     	;# 
  1758  030E                     	;# 
  1759  030F                     	;# 
  1760  0310                     	;# 
  1761  0310                     	;# 
  1762  0311                     	;# 
  1763  0312                     	;# 
  1764  0313                     	;# 
  1765  0314                     	;# 
  1766  0314                     	;# 
  1767  0315                     	;# 
  1768  0316                     	;# 
  1769  0317                     	;# 
  1770  0318                     	;# 
  1771  0318                     	;# 
  1772  0319                     	;# 
  1773  031A                     	;# 
  1774  031B                     	;# 
  1775  031C                     	;# 
  1776  031C                     	;# 
  1777  031D                     	;# 
  1778  031E                     	;# 
  1779  031F                     	;# 
  1780  038C                     	;# 
  1781  038D                     	;# 
  1782  038E                     	;# 
  1783  0390                     	;# 
  1784  0391                     	;# 
  1785  0392                     	;# 
  1786  040C                     	;# 
  1787  040D                     	;# 
  1788  040E                     	;# 
  1789  040F                     	;# 
  1790  0410                     	;# 
  1791  0411                     	;# 
  1792  0416                     	;# 
  1793  0416                     	;# 
  1794  0417                     	;# 
  1795  0418                     	;# 
  1796  0418                     	;# 
  1797  0419                     	;# 
  1798  041A                     	;# 
  1799  041A                     	;# 
  1800  041B                     	;# 
  1801  041C                     	;# 
  1802  041C                     	;# 
  1803  041D                     	;# 
  1804  041E                     	;# 
  1805  041F                     	;# 
  1806  048C                     	;# 
  1807  048C                     	;# 
  1808  048D                     	;# 
  1809  048E                     	;# 
  1810  048F                     	;# 
  1811  048F                     	;# 
  1812  0490                     	;# 
  1813  0491                     	;# 
  1814  0492                     	;# 
  1815  0492                     	;# 
  1816  0493                     	;# 
  1817  0494                     	;# 
  1818  0495                     	;# 
  1819  0495                     	;# 
  1820  0496                     	;# 
  1821  0497                     	;# 
  1822  0498                     	;# 
  1823  0499                     	;# 
  1824  049A                     	;# 
  1825  049B                     	;# 
  1826  049C                     	;# 
  1827  049D                     	;# 
  1828  050C                     	;# 
  1829  050C                     	;# 
  1830  050D                     	;# 
  1831  050E                     	;# 
  1832  050F                     	;# 
  1833  050F                     	;# 
  1834  0510                     	;# 
  1835  0511                     	;# 
  1836  0512                     	;# 
  1837  0512                     	;# 
  1838  0513                     	;# 
  1839  0514                     	;# 
  1840  0515                     	;# 
  1841  0515                     	;# 
  1842  0516                     	;# 
  1843  0517                     	;# 
  1844  0518                     	;# 
  1845  0519                     	;# 
  1846  051A                     	;# 
  1847  051B                     	;# 
  1848  051C                     	;# 
  1849  051D                     	;# 
  1850  058C                     	;# 
  1851  058C                     	;# 
  1852  058D                     	;# 
  1853  058E                     	;# 
  1854  058F                     	;# 
  1855  058F                     	;# 
  1856  0590                     	;# 
  1857  0591                     	;# 
  1858  0592                     	;# 
  1859  0593                     	;# 
  1860  060C                     	;# 
  1861  060D                     	;# 
  1862  060E                     	;# 
  1863  060F                     	;# 
  1864  0610                     	;# 
  1865  0611                     	;# 
  1866  0612                     	;# 
  1867  0613                     	;# 
  1868  0614                     	;# 
  1869  0616                     	;# 
  1870  0617                     	;# 
  1871  0618                     	;# 
  1872  0619                     	;# 
  1873  061A                     	;# 
  1874  061B                     	;# 
  1875  061C                     	;# 
  1876  061D                     	;# 
  1877  061E                     	;# 
  1878  068C                     	;# 
  1879  068D                     	;# 
  1880  068E                     	;# 
  1881  068F                     	;# 
  1882  0690                     	;# 
  1883  0691                     	;# 
  1884  0692                     	;# 
  1885  0693                     	;# 
  1886  0694                     	;# 
  1887  070C                     	;# 
  1888  070D                     	;# 
  1889  070E                     	;# 
  1890  070F                     	;# 
  1891  0710                     	;# 
  1892  0711                     	;# 
  1893  0712                     	;# 
  1894  0713                     	;# 
  1895  0714                     	;# 
  1896  0716                     	;# 
  1897  0717                     	;# 
  1898  0718                     	;# 
  1899  0719                     	;# 
  1900  071A                     	;# 
  1901  071B                     	;# 
  1902  071C                     	;# 
  1903  071D                     	;# 
  1904  071E                     	;# 
  1905  0796                     	;# 
  1906  0797                     	;# 
  1907  0798                     	;# 
  1908  0799                     	;# 
  1909  079A                     	;# 
  1910  079B                     	;# 
  1911  080C                     	;# 
  1912  080D                     	;# 
  1913  080E                     	;# 
  1914  080F                     	;# 
  1915  0810                     	;# 
  1916  0811                     	;# 
  1917  0812                     	;# 
  1918  0813                     	;# 
  1919  0814                     	;# 
  1920  081A                     	;# 
  1921  081B                     	;# 
  1922  081C                     	;# 
  1923  081D                     	;# 
  1924  081E                     	;# 
  1925  081F                     	;# 
  1926  088C                     	;# 
  1927  088D                     	;# 
  1928  088E                     	;# 
  1929  088F                     	;# 
  1930  0890                     	;# 
  1931  0891                     	;# 
  1932  0892                     	;# 
  1933  0893                     	;# 
  1934  0895                     	;# 
  1935  0896                     	;# 
  1936  0897                     	;# 
  1937  0898                     	;# 
  1938  0899                     	;# 
  1939  089A                     	;# 
  1940  089B                     	;# 
  1941  090C                     	;# 
  1942  090E                     	;# 
  1943  090F                     	;# 
  1944  091F                     	;# 
  1945  091F                     	;# 
  1946  098F                     	;# 
  1947  098F                     	;# 
  1948  0990                     	;# 
  1949  0991                     	;# 
  1950  0992                     	;# 
  1951  0993                     	;# 
  1952  0994                     	;# 
  1953  0995                     	;# 
  1954  0996                     	;# 
  1955  0997                     	;# 
  1956  0E0F                     	;# 
  1957  0E10                     	;# 
  1958  0E11                     	;# 
  1959  0E12                     	;# 
  1960  0E13                     	;# 
  1961  0E14                     	;# 
  1962  0E15                     	;# 
  1963  0E16                     	;# 
  1964  0E17                     	;# 
  1965  0E18                     	;# 
  1966  0E19                     	;# 
  1967  0E1A                     	;# 
  1968  0E1B                     	;# 
  1969  0E1C                     	;# 
  1970  0E1D                     	;# 
  1971  0E1E                     	;# 
  1972  0E1F                     	;# 
  1973  0E20                     	;# 
  1974  0E21                     	;# 
  1975  0E22                     	;# 
  1976  0E23                     	;# 
  1977  0E24                     	;# 
  1978  0E25                     	;# 
  1979  0E26                     	;# 
  1980  0E27                     	;# 
  1981  0E28                     	;# 
  1982  0E29                     	;# 
  1983  0E2A                     	;# 
  1984  0E2B                     	;# 
  1985  0E2C                     	;# 
  1986  0E2D                     	;# 
  1987  0E2E                     	;# 
  1988  0E2F                     	;# 
  1989  0E30                     	;# 
  1990  0E31                     	;# 
  1991  0E32                     	;# 
  1992  0E33                     	;# 
  1993  0E34                     	;# 
  1994  0E35                     	;# 
  1995  0E36                     	;# 
  1996  0E37                     	;# 
  1997  0E8F                     	;# 
  1998  0E90                     	;# 
  1999  0E91                     	;# 
  2000  0E92                     	;# 
  2001  0E93                     	;# 
  2002  0E94                     	;# 
  2003  0E95                     	;# 
  2004  0E96                     	;# 
  2005  0E97                     	;# 
  2006  0E9C                     	;# 
  2007  0E9D                     	;# 
  2008  0E9E                     	;# 
  2009  0EA1                     	;# 
  2010  0EA2                     	;# 
  2011  0EA3                     	;# 
  2012  0EA4                     	;# 
  2013  0EA5                     	;# 
  2014  0EA9                     	;# 
  2015  0EAA                     	;# 
  2016  0EAB                     	;# 
  2017  0EAC                     	;# 
  2018  0EB1                     	;# 
  2019  0EB2                     	;# 
  2020  0EB3                     	;# 
  2021  0EB8                     	;# 
  2022  0EB9                     	;# 
  2023  0EBA                     	;# 
  2024  0EBB                     	;# 
  2025  0EBC                     	;# 
  2026  0EBD                     	;# 
  2027  0EBE                     	;# 
  2028  0EC3                     	;# 
  2029  0EC5                     	;# 
  2030  0EC6                     	;# 
  2031  0EC7                     	;# 
  2032  0EC8                     	;# 
  2033  0EC9                     	;# 
  2034  0ECA                     	;# 
  2035  0ECB                     	;# 
  2036  0ECC                     	;# 
  2037  0F10                     	;# 
  2038  0F11                     	;# 
  2039  0F12                     	;# 
  2040  0F13                     	;# 
  2041  0F14                     	;# 
  2042  0F15                     	;# 
  2043  0F16                     	;# 
  2044  0F17                     	;# 
  2045  0F18                     	;# 
  2046  0F19                     	;# 
  2047  0F1A                     	;# 
  2048  0F1B                     	;# 
  2049  0F1C                     	;# 
  2050  0F1D                     	;# 
  2051  0F1E                     	;# 
  2052  0F1F                     	;# 
  2053  0F20                     	;# 
  2054  0F21                     	;# 
  2055  0F22                     	;# 
  2056  0F23                     	;# 
  2057  0F24                     	;# 
  2058  0F25                     	;# 
  2059  0F26                     	;# 
  2060  0F27                     	;# 
  2061  0F38                     	;# 
  2062  0F39                     	;# 
  2063  0F3A                     	;# 
  2064  0F3B                     	;# 
  2065  0F3C                     	;# 
  2066  0F3D                     	;# 
  2067  0F3E                     	;# 
  2068  0F3F                     	;# 
  2069  0F40                     	;# 
  2070  0F41                     	;# 
  2071  0F43                     	;# 
  2072  0F44                     	;# 
  2073  0F45                     	;# 
  2074  0F46                     	;# 
  2075  0F47                     	;# 
  2076  0F48                     	;# 
  2077  0F49                     	;# 
  2078  0F4A                     	;# 
  2079  0F4B                     	;# 
  2080  0F4C                     	;# 
  2081  0F4E                     	;# 
  2082  0F4F                     	;# 
  2083  0F50                     	;# 
  2084  0F51                     	;# 
  2085  0F52                     	;# 
  2086  0F53                     	;# 
  2087  0F54                     	;# 
  2088  0F55                     	;# 
  2089  0F56                     	;# 
  2090  0F57                     	;# 
  2091  0F65                     	;# 
  2092  0F68                     	;# 
  2093  0F69                     	;# 
  2094  0F6A                     	;# 
  2095  0F6B                     	;# 
  2096  0FE4                     	;# 
  2097  0FE5                     	;# 
  2098  0FE6                     	;# 
  2099  0FE7                     	;# 
  2100  0FE8                     	;# 
  2101  0FE9                     	;# 
  2102  0FEA                     	;# 
  2103  0FEB                     	;# 
  2104  0FED                     	;# 
  2105  0FEE                     	;# 
  2106  0FEF                     	;# 
  2107  0000                     	;# 
  2108  0001                     	;# 
  2109  0002                     	;# 
  2110  0003                     	;# 
  2111  0004                     	;# 
  2112  0005                     	;# 
  2113  0006                     	;# 
  2114  0007                     	;# 
  2115  0008                     	;# 
  2116  0009                     	;# 
  2117  000A                     	;# 
  2118  000B                     	;# 
  2119  000C                     	;# 
  2120  000D                     	;# 
  2121  000E                     	;# 
  2122  0010                     	;# 
  2123  0011                     	;# 
  2124  0012                     	;# 
  2125  0013                     	;# 
  2126  0016                     	;# 
  2127  0017                     	;# 
  2128  0018                     	;# 
  2129  001C                     	;# 
  2130  001C                     	;# 
  2131  001D                     	;# 
  2132  001D                     	;# 
  2133  001E                     	;# 
  2134  001F                     	;# 
  2135  008C                     	;# 
  2136  008C                     	;# 
  2137  008D                     	;# 
  2138  008E                     	;# 
  2139  008E                     	;# 
  2140  008F                     	;# 
  2141  0090                     	;# 
  2142  0090                     	;# 
  2143  0091                     	;# 
  2144  0093                     	;# 
  2145  0094                     	;# 
  2146  0095                     	;# 
  2147  0096                     	;# 
  2148  0097                     	;# 
  2149  0098                     	;# 
  2150  0099                     	;# 
  2151  009A                     	;# 
  2152  009B                     	;# 
  2153  009C                     	;# 
  2154  009D                     	;# 
  2155  009E                     	;# 
  2156  010C                     	;# 
  2157  010D                     	;# 
  2158  010E                     	;# 
  2159  010E                     	;# 
  2160  010F                     	;# 
  2161  0110                     	;# 
  2162  0110                     	;# 
  2163  0111                     	;# 
  2164  0112                     	;# 
  2165  0112                     	;# 
  2166  0113                     	;# 
  2167  0114                     	;# 
  2168  0114                     	;# 
  2169  0115                     	;# 
  2170  0116                     	;# 
  2171  0116                     	;# 
  2172  0117                     	;# 
  2173  0119                     	;# 
  2174  0119                     	;# 
  2175  0119                     	;# 
  2176  011A                     	;# 
  2177  011A                     	;# 
  2178  011A                     	;# 
  2179  011B                     	;# 
  2180  011B                     	;# 
  2181  011B                     	;# 
  2182  011B                     	;# 
  2183  011B                     	;# 
  2184  011C                     	;# 
  2185  011C                     	;# 
  2186  011C                     	;# 
  2187  011D                     	;# 
  2188  011D                     	;# 
  2189  011D                     	;# 
  2190  011E                     	;# 
  2191  011E                     	;# 
  2192  011E                     	;# 
  2193  011F                     	;# 
  2194  011F                     	;# 
  2195  011F                     	;# 
  2196  011F                     	;# 
  2197  011F                     	;# 
  2198  018C                     	;# 
  2199  018D                     	;# 
  2200  018E                     	;# 
  2201  018F                     	;# 
  2202  0190                     	;# 
  2203  0191                     	;# 
  2204  0192                     	;# 
  2205  0196                     	;# 
  2206  0197                     	;# 
  2207  0198                     	;# 
  2208  0199                     	;# 
  2209  019A                     	;# 
  2210  019B                     	;# 
  2211  019C                     	;# 
  2212  020C                     	;# 
  2213  020D                     	;# 
  2214  020E                     	;# 
  2215  020F                     	;# 
  2216  020F                     	;# 
  2217  0210                     	;# 
  2218  0210                     	;# 
  2219  0211                     	;# 
  2220  0211                     	;# 
  2221  0212                     	;# 
  2222  0213                     	;# 
  2223  0214                     	;# 
  2224  0215                     	;# 
  2225  0215                     	;# 
  2226  0216                     	;# 
  2227  0216                     	;# 
  2228  0217                     	;# 
  2229  0217                     	;# 
  2230  0218                     	;# 
  2231  0219                     	;# 
  2232  021A                     	;# 
  2233  021B                     	;# 
  2234  021B                     	;# 
  2235  021C                     	;# 
  2236  021C                     	;# 
  2237  021D                     	;# 
  2238  021D                     	;# 
  2239  021E                     	;# 
  2240  021F                     	;# 
  2241  028C                     	;# 
  2242  028C                     	;# 
  2243  028D                     	;# 
  2244  028D                     	;# 
  2245  028E                     	;# 
  2246  028F                     	;# 
  2247  0290                     	;# 
  2248  0290                     	;# 
  2249  0291                     	;# 
  2250  0292                     	;# 
  2251  0292                     	;# 
  2252  0293                     	;# 
  2253  0293                     	;# 
  2254  0294                     	;# 
  2255  0295                     	;# 
  2256  0296                     	;# 
  2257  0296                     	;# 
  2258  0297                     	;# 
  2259  0298                     	;# 
  2260  0298                     	;# 
  2261  0299                     	;# 
  2262  0299                     	;# 
  2263  029A                     	;# 
  2264  029B                     	;# 
  2265  029C                     	;# 
  2266  029C                     	;# 
  2267  029D                     	;# 
  2268  030C                     	;# 
  2269  030C                     	;# 
  2270  030D                     	;# 
  2271  030E                     	;# 
  2272  030F                     	;# 
  2273  0310                     	;# 
  2274  0310                     	;# 
  2275  0311                     	;# 
  2276  0312                     	;# 
  2277  0313                     	;# 
  2278  0314                     	;# 
  2279  0314                     	;# 
  2280  0315                     	;# 
  2281  0316                     	;# 
  2282  0317                     	;# 
  2283  0318                     	;# 
  2284  0318                     	;# 
  2285  0319                     	;# 
  2286  031A                     	;# 
  2287  031B                     	;# 
  2288  031C                     	;# 
  2289  031C                     	;# 
  2290  031D                     	;# 
  2291  031E                     	;# 
  2292  031F                     	;# 
  2293  038C                     	;# 
  2294  038D                     	;# 
  2295  038E                     	;# 
  2296  0390                     	;# 
  2297  0391                     	;# 
  2298  0392                     	;# 
  2299  040C                     	;# 
  2300  040D                     	;# 
  2301  040E                     	;# 
  2302  040F                     	;# 
  2303  0410                     	;# 
  2304  0411                     	;# 
  2305  0416                     	;# 
  2306  0416                     	;# 
  2307  0417                     	;# 
  2308  0418                     	;# 
  2309  0418                     	;# 
  2310  0419                     	;# 
  2311  041A                     	;# 
  2312  041A                     	;# 
  2313  041B                     	;# 
  2314  041C                     	;# 
  2315  041C                     	;# 
  2316  041D                     	;# 
  2317  041E                     	;# 
  2318  041F                     	;# 
  2319  048C                     	;# 
  2320  048C                     	;# 
  2321  048D                     	;# 
  2322  048E                     	;# 
  2323  048F                     	;# 
  2324  048F                     	;# 
  2325  0490                     	;# 
  2326  0491                     	;# 
  2327  0492                     	;# 
  2328  0492                     	;# 
  2329  0493                     	;# 
  2330  0494                     	;# 
  2331  0495                     	;# 
  2332  0495                     	;# 
  2333  0496                     	;# 
  2334  0497                     	;# 
  2335  0498                     	;# 
  2336  0499                     	;# 
  2337  049A                     	;# 
  2338  049B                     	;# 
  2339  049C                     	;# 
  2340  049D                     	;# 
  2341  050C                     	;# 
  2342  050C                     	;# 
  2343  050D                     	;# 
  2344  050E                     	;# 
  2345  050F                     	;# 
  2346  050F                     	;# 
  2347  0510                     	;# 
  2348  0511                     	;# 
  2349  0512                     	;# 
  2350  0512                     	;# 
  2351  0513                     	;# 
  2352  0514                     	;# 
  2353  0515                     	;# 
  2354  0515                     	;# 
  2355  0516                     	;# 
  2356  0517                     	;# 
  2357  0518                     	;# 
  2358  0519                     	;# 
  2359  051A                     	;# 
  2360  051B                     	;# 
  2361  051C                     	;# 
  2362  051D                     	;# 
  2363  058C                     	;# 
  2364  058C                     	;# 
  2365  058D                     	;# 
  2366  058E                     	;# 
  2367  058F                     	;# 
  2368  058F                     	;# 
  2369  0590                     	;# 
  2370  0591                     	;# 
  2371  0592                     	;# 
  2372  0593                     	;# 
  2373  060C                     	;# 
  2374  060D                     	;# 
  2375  060E                     	;# 
  2376  060F                     	;# 
  2377  0610                     	;# 
  2378  0611                     	;# 
  2379  0612                     	;# 
  2380  0613                     	;# 
  2381  0614                     	;# 
  2382  0616                     	;# 
  2383  0617                     	;# 
  2384  0618                     	;# 
  2385  0619                     	;# 
  2386  061A                     	;# 
  2387  061B                     	;# 
  2388  061C                     	;# 
  2389  061D                     	;# 
  2390  061E                     	;# 
  2391  068C                     	;# 
  2392  068D                     	;# 
  2393  068E                     	;# 
  2394  068F                     	;# 
  2395  0690                     	;# 
  2396  0691                     	;# 
  2397  0692                     	;# 
  2398  0693                     	;# 
  2399  0694                     	;# 
  2400  070C                     	;# 
  2401  070D                     	;# 
  2402  070E                     	;# 
  2403  070F                     	;# 
  2404  0710                     	;# 
  2405  0711                     	;# 
  2406  0712                     	;# 
  2407  0713                     	;# 
  2408  0714                     	;# 
  2409  0716                     	;# 
  2410  0717                     	;# 
  2411  0718                     	;# 
  2412  0719                     	;# 
  2413  071A                     	;# 
  2414  071B                     	;# 
  2415  071C                     	;# 
  2416  071D                     	;# 
  2417  071E                     	;# 
  2418  0796                     	;# 
  2419  0797                     	;# 
  2420  0798                     	;# 
  2421  0799                     	;# 
  2422  079A                     	;# 
  2423  079B                     	;# 
  2424  080C                     	;# 
  2425  080D                     	;# 
  2426  080E                     	;# 
  2427  080F                     	;# 
  2428  0810                     	;# 
  2429  0811                     	;# 
  2430  0812                     	;# 
  2431  0813                     	;# 
  2432  0814                     	;# 
  2433  081A                     	;# 
  2434  081B                     	;# 
  2435  081C                     	;# 
  2436  081D                     	;# 
  2437  081E                     	;# 
  2438  081F                     	;# 
  2439  088C                     	;# 
  2440  088D                     	;# 
  2441  088E                     	;# 
  2442  088F                     	;# 
  2443  0890                     	;# 
  2444  0891                     	;# 
  2445  0892                     	;# 
  2446  0893                     	;# 
  2447  0895                     	;# 
  2448  0896                     	;# 
  2449  0897                     	;# 
  2450  0898                     	;# 
  2451  0899                     	;# 
  2452  089A                     	;# 
  2453  089B                     	;# 
  2454  090C                     	;# 
  2455  090E                     	;# 
  2456  090F                     	;# 
  2457  091F                     	;# 
  2458  091F                     	;# 
  2459  098F                     	;# 
  2460  098F                     	;# 
  2461  0990                     	;# 
  2462  0991                     	;# 
  2463  0992                     	;# 
  2464  0993                     	;# 
  2465  0994                     	;# 
  2466  0995                     	;# 
  2467  0996                     	;# 
  2468  0997                     	;# 
  2469  0E0F                     	;# 
  2470  0E10                     	;# 
  2471  0E11                     	;# 
  2472  0E12                     	;# 
  2473  0E13                     	;# 
  2474  0E14                     	;# 
  2475  0E15                     	;# 
  2476  0E16                     	;# 
  2477  0E17                     	;# 
  2478  0E18                     	;# 
  2479  0E19                     	;# 
  2480  0E1A                     	;# 
  2481  0E1B                     	;# 
  2482  0E1C                     	;# 
  2483  0E1D                     	;# 
  2484  0E1E                     	;# 
  2485  0E1F                     	;# 
  2486  0E20                     	;# 
  2487  0E21                     	;# 
  2488  0E22                     	;# 
  2489  0E23                     	;# 
  2490  0E24                     	;# 
  2491  0E25                     	;# 
  2492  0E26                     	;# 
  2493  0E27                     	;# 
  2494  0E28                     	;# 
  2495  0E29                     	;# 
  2496  0E2A                     	;# 
  2497  0E2B                     	;# 
  2498  0E2C                     	;# 
  2499  0E2D                     	;# 
  2500  0E2E                     	;# 
  2501  0E2F                     	;# 
  2502  0E30                     	;# 
  2503  0E31                     	;# 
  2504  0E32                     	;# 
  2505  0E33                     	;# 
  2506  0E34                     	;# 
  2507  0E35                     	;# 
  2508  0E36                     	;# 
  2509  0E37                     	;# 
  2510  0E8F                     	;# 
  2511  0E90                     	;# 
  2512  0E91                     	;# 
  2513  0E92                     	;# 
  2514  0E93                     	;# 
  2515  0E94                     	;# 
  2516  0E95                     	;# 
  2517  0E96                     	;# 
  2518  0E97                     	;# 
  2519  0E9C                     	;# 
  2520  0E9D                     	;# 
  2521  0E9E                     	;# 
  2522  0EA1                     	;# 
  2523  0EA2                     	;# 
  2524  0EA3                     	;# 
  2525  0EA4                     	;# 
  2526  0EA5                     	;# 
  2527  0EA9                     	;# 
  2528  0EAA                     	;# 
  2529  0EAB                     	;# 
  2530  0EAC                     	;# 
  2531  0EB1                     	;# 
  2532  0EB2                     	;# 
  2533  0EB3                     	;# 
  2534  0EB8                     	;# 
  2535  0EB9                     	;# 
  2536  0EBA                     	;# 
  2537  0EBB                     	;# 
  2538  0EBC                     	;# 
  2539  0EBD                     	;# 
  2540  0EBE                     	;# 
  2541  0EC3                     	;# 
  2542  0EC5                     	;# 
  2543  0EC6                     	;# 
  2544  0EC7                     	;# 
  2545  0EC8                     	;# 
  2546  0EC9                     	;# 
  2547  0ECA                     	;# 
  2548  0ECB                     	;# 
  2549  0ECC                     	;# 
  2550  0F10                     	;# 
  2551  0F11                     	;# 
  2552  0F12                     	;# 
  2553  0F13                     	;# 
  2554  0F14                     	;# 
  2555  0F15                     	;# 
  2556  0F16                     	;# 
  2557  0F17                     	;# 
  2558  0F18                     	;# 
  2559  0F19                     	;# 
  2560  0F1A                     	;# 
  2561  0F1B                     	;# 
  2562  0F1C                     	;# 
  2563  0F1D                     	;# 
  2564  0F1E                     	;# 
  2565  0F1F                     	;# 
  2566  0F20                     	;# 
  2567  0F21                     	;# 
  2568  0F22                     	;# 
  2569  0F23                     	;# 
  2570  0F24                     	;# 
  2571  0F25                     	;# 
  2572  0F26                     	;# 
  2573  0F27                     	;# 
  2574  0F38                     	;# 
  2575  0F39                     	;# 
  2576  0F3A                     	;# 
  2577  0F3B                     	;# 
  2578  0F3C                     	;# 
  2579  0F3D                     	;# 
  2580  0F3E                     	;# 
  2581  0F3F                     	;# 
  2582  0F40                     	;# 
  2583  0F41                     	;# 
  2584  0F43                     	;# 
  2585  0F44                     	;# 
  2586  0F45                     	;# 
  2587  0F46                     	;# 
  2588  0F47                     	;# 
  2589  0F48                     	;# 
  2590  0F49                     	;# 
  2591  0F4A                     	;# 
  2592  0F4B                     	;# 
  2593  0F4C                     	;# 
  2594  0F4E                     	;# 
  2595  0F4F                     	;# 
  2596  0F50                     	;# 
  2597  0F51                     	;# 
  2598  0F52                     	;# 
  2599  0F53                     	;# 
  2600  0F54                     	;# 
  2601  0F55                     	;# 
  2602  0F56                     	;# 
  2603  0F57                     	;# 
  2604  0F65                     	;# 
  2605  0F68                     	;# 
  2606  0F69                     	;# 
  2607  0F6A                     	;# 
  2608  0F6B                     	;# 
  2609  0FE4                     	;# 
  2610  0FE5                     	;# 
  2611  0FE6                     	;# 
  2612  0FE7                     	;# 
  2613  0FE8                     	;# 
  2614  0FE9                     	;# 
  2615  0FEA                     	;# 
  2616  0FEB                     	;# 
  2617  0FED                     	;# 
  2618  0FEE                     	;# 
  2619  0FEF                     	;# 
  2620  0000                     	;# 
  2621  0001                     	;# 
  2622  0002                     	;# 
  2623  0003                     	;# 
  2624  0004                     	;# 
  2625  0005                     	;# 
  2626  0006                     	;# 
  2627  0007                     	;# 
  2628  0008                     	;# 
  2629  0009                     	;# 
  2630  000A                     	;# 
  2631  000B                     	;# 
  2632  000C                     	;# 
  2633  000D                     	;# 
  2634  000E                     	;# 
  2635  0010                     	;# 
  2636  0011                     	;# 
  2637  0012                     	;# 
  2638  0013                     	;# 
  2639  0016                     	;# 
  2640  0017                     	;# 
  2641  0018                     	;# 
  2642  001C                     	;# 
  2643  001C                     	;# 
  2644  001D                     	;# 
  2645  001D                     	;# 
  2646  001E                     	;# 
  2647  001F                     	;# 
  2648  008C                     	;# 
  2649  008C                     	;# 
  2650  008D                     	;# 
  2651  008E                     	;# 
  2652  008E                     	;# 
  2653  008F                     	;# 
  2654  0090                     	;# 
  2655  0090                     	;# 
  2656  0091                     	;# 
  2657  0093                     	;# 
  2658  0094                     	;# 
  2659  0095                     	;# 
  2660  0096                     	;# 
  2661  0097                     	;# 
  2662  0098                     	;# 
  2663  0099                     	;# 
  2664  009A                     	;# 
  2665  009B                     	;# 
  2666  009C                     	;# 
  2667  009D                     	;# 
  2668  009E                     	;# 
  2669  010C                     	;# 
  2670  010D                     	;# 
  2671  010E                     	;# 
  2672  010E                     	;# 
  2673  010F                     	;# 
  2674  0110                     	;# 
  2675  0110                     	;# 
  2676  0111                     	;# 
  2677  0112                     	;# 
  2678  0112                     	;# 
  2679  0113                     	;# 
  2680  0114                     	;# 
  2681  0114                     	;# 
  2682  0115                     	;# 
  2683  0116                     	;# 
  2684  0116                     	;# 
  2685  0117                     	;# 
  2686  0119                     	;# 
  2687  0119                     	;# 
  2688  0119                     	;# 
  2689  011A                     	;# 
  2690  011A                     	;# 
  2691  011A                     	;# 
  2692  011B                     	;# 
  2693  011B                     	;# 
  2694  011B                     	;# 
  2695  011B                     	;# 
  2696  011B                     	;# 
  2697  011C                     	;# 
  2698  011C                     	;# 
  2699  011C                     	;# 
  2700  011D                     	;# 
  2701  011D                     	;# 
  2702  011D                     	;# 
  2703  011E                     	;# 
  2704  011E                     	;# 
  2705  011E                     	;# 
  2706  011F                     	;# 
  2707  011F                     	;# 
  2708  011F                     	;# 
  2709  011F                     	;# 
  2710  011F                     	;# 
  2711  018C                     	;# 
  2712  018D                     	;# 
  2713  018E                     	;# 
  2714  018F                     	;# 
  2715  0190                     	;# 
  2716  0191                     	;# 
  2717  0192                     	;# 
  2718  0196                     	;# 
  2719  0197                     	;# 
  2720  0198                     	;# 
  2721  0199                     	;# 
  2722  019A                     	;# 
  2723  019B                     	;# 
  2724  019C                     	;# 
  2725  020C                     	;# 
  2726  020D                     	;# 
  2727  020E                     	;# 
  2728  020F                     	;# 
  2729  020F                     	;# 
  2730  0210                     	;# 
  2731  0210                     	;# 
  2732  0211                     	;# 
  2733  0211                     	;# 
  2734  0212                     	;# 
  2735  0213                     	;# 
  2736  0214                     	;# 
  2737  0215                     	;# 
  2738  0215                     	;# 
  2739  0216                     	;# 
  2740  0216                     	;# 
  2741  0217                     	;# 
  2742  0217                     	;# 
  2743  0218                     	;# 
  2744  0219                     	;# 
  2745  021A                     	;# 
  2746  021B                     	;# 
  2747  021B                     	;# 
  2748  021C                     	;# 
  2749  021C                     	;# 
  2750  021D                     	;# 
  2751  021D                     	;# 
  2752  021E                     	;# 
  2753  021F                     	;# 
  2754  028C                     	;# 
  2755  028C                     	;# 
  2756  028D                     	;# 
  2757  028D                     	;# 
  2758  028E                     	;# 
  2759  028F                     	;# 
  2760  0290                     	;# 
  2761  0290                     	;# 
  2762  0291                     	;# 
  2763  0292                     	;# 
  2764  0292                     	;# 
  2765  0293                     	;# 
  2766  0293                     	;# 
  2767  0294                     	;# 
  2768  0295                     	;# 
  2769  0296                     	;# 
  2770  0296                     	;# 
  2771  0297                     	;# 
  2772  0298                     	;# 
  2773  0298                     	;# 
  2774  0299                     	;# 
  2775  0299                     	;# 
  2776  029A                     	;# 
  2777  029B                     	;# 
  2778  029C                     	;# 
  2779  029C                     	;# 
  2780  029D                     	;# 
  2781  030C                     	;# 
  2782  030C                     	;# 
  2783  030D                     	;# 
  2784  030E                     	;# 
  2785  030F                     	;# 
  2786  0310                     	;# 
  2787  0310                     	;# 
  2788  0311                     	;# 
  2789  0312                     	;# 
  2790  0313                     	;# 
  2791  0314                     	;# 
  2792  0314                     	;# 
  2793  0315                     	;# 
  2794  0316                     	;# 
  2795  0317                     	;# 
  2796  0318                     	;# 
  2797  0318                     	;# 
  2798  0319                     	;# 
  2799  031A                     	;# 
  2800  031B                     	;# 
  2801  031C                     	;# 
  2802  031C                     	;# 
  2803  031D                     	;# 
  2804  031E                     	;# 
  2805  031F                     	;# 
  2806  038C                     	;# 
  2807  038D                     	;# 
  2808  038E                     	;# 
  2809  0390                     	;# 
  2810  0391                     	;# 
  2811  0392                     	;# 
  2812  040C                     	;# 
  2813  040D                     	;# 
  2814  040E                     	;# 
  2815  040F                     	;# 
  2816  0410                     	;# 
  2817  0411                     	;# 
  2818  0416                     	;# 
  2819  0416                     	;# 
  2820  0417                     	;# 
  2821  0418                     	;# 
  2822  0418                     	;# 
  2823  0419                     	;# 
  2824  041A                     	;# 
  2825  041A                     	;# 
  2826  041B                     	;# 
  2827  041C                     	;# 
  2828  041C                     	;# 
  2829  041D                     	;# 
  2830  041E                     	;# 
  2831  041F                     	;# 
  2832  048C                     	;# 
  2833  048C                     	;# 
  2834  048D                     	;# 
  2835  048E                     	;# 
  2836  048F                     	;# 
  2837  048F                     	;# 
  2838  0490                     	;# 
  2839  0491                     	;# 
  2840  0492                     	;# 
  2841  0492                     	;# 
  2842  0493                     	;# 
  2843  0494                     	;# 
  2844  0495                     	;# 
  2845  0495                     	;# 
  2846  0496                     	;# 
  2847  0497                     	;# 
  2848  0498                     	;# 
  2849  0499                     	;# 
  2850  049A                     	;# 
  2851  049B                     	;# 
  2852  049C                     	;# 
  2853  049D                     	;# 
  2854  050C                     	;# 
  2855  050C                     	;# 
  2856  050D                     	;# 
  2857  050E                     	;# 
  2858  050F                     	;# 
  2859  050F                     	;# 
  2860  0510                     	;# 
  2861  0511                     	;# 
  2862  0512                     	;# 
  2863  0512                     	;# 
  2864  0513                     	;# 
  2865  0514                     	;# 
  2866  0515                     	;# 
  2867  0515                     	;# 
  2868  0516                     	;# 
  2869  0517                     	;# 
  2870  0518                     	;# 
  2871  0519                     	;# 
  2872  051A                     	;# 
  2873  051B                     	;# 
  2874  051C                     	;# 
  2875  051D                     	;# 
  2876  058C                     	;# 
  2877  058C                     	;# 
  2878  058D                     	;# 
  2879  058E                     	;# 
  2880  058F                     	;# 
  2881  058F                     	;# 
  2882  0590                     	;# 
  2883  0591                     	;# 
  2884  0592                     	;# 
  2885  0593                     	;# 
  2886  060C                     	;# 
  2887  060D                     	;# 
  2888  060E                     	;# 
  2889  060F                     	;# 
  2890  0610                     	;# 
  2891  0611                     	;# 
  2892  0612                     	;# 
  2893  0613                     	;# 
  2894  0614                     	;# 
  2895  0616                     	;# 
  2896  0617                     	;# 
  2897  0618                     	;# 
  2898  0619                     	;# 
  2899  061A                     	;# 
  2900  061B                     	;# 
  2901  061C                     	;# 
  2902  061D                     	;# 
  2903  061E                     	;# 
  2904  068C                     	;# 
  2905  068D                     	;# 
  2906  068E                     	;# 
  2907  068F                     	;# 
  2908  0690                     	;# 
  2909  0691                     	;# 
  2910  0692                     	;# 
  2911  0693                     	;# 
  2912  0694                     	;# 
  2913  070C                     	;# 
  2914  070D                     	;# 
  2915  070E                     	;# 
  2916  070F                     	;# 
  2917  0710                     	;# 
  2918  0711                     	;# 
  2919  0712                     	;# 
  2920  0713                     	;# 
  2921  0714                     	;# 
  2922  0716                     	;# 
  2923  0717                     	;# 
  2924  0718                     	;# 
  2925  0719                     	;# 
  2926  071A                     	;# 
  2927  071B                     	;# 
  2928  071C                     	;# 
  2929  071D                     	;# 
  2930  071E                     	;# 
  2931  0796                     	;# 
  2932  0797                     	;# 
  2933  0798                     	;# 
  2934  0799                     	;# 
  2935  079A                     	;# 
  2936  079B                     	;# 
  2937  080C                     	;# 
  2938  080D                     	;# 
  2939  080E                     	;# 
  2940  080F                     	;# 
  2941  0810                     	;# 
  2942  0811                     	;# 
  2943  0812                     	;# 
  2944  0813                     	;# 
  2945  0814                     	;# 
  2946  081A                     	;# 
  2947  081B                     	;# 
  2948  081C                     	;# 
  2949  081D                     	;# 
  2950  081E                     	;# 
  2951  081F                     	;# 
  2952  088C                     	;# 
  2953  088D                     	;# 
  2954  088E                     	;# 
  2955  088F                     	;# 
  2956  0890                     	;# 
  2957  0891                     	;# 
  2958  0892                     	;# 
  2959  0893                     	;# 
  2960  0895                     	;# 
  2961  0896                     	;# 
  2962  0897                     	;# 
  2963  0898                     	;# 
  2964  0899                     	;# 
  2965  089A                     	;# 
  2966  089B                     	;# 
  2967  090C                     	;# 
  2968  090E                     	;# 
  2969  090F                     	;# 
  2970  091F                     	;# 
  2971  091F                     	;# 
  2972  098F                     	;# 
  2973  098F                     	;# 
  2974  0990                     	;# 
  2975  0991                     	;# 
  2976  0992                     	;# 
  2977  0993                     	;# 
  2978  0994                     	;# 
  2979  0995                     	;# 
  2980  0996                     	;# 
  2981  0997                     	;# 
  2982  0E0F                     	;# 
  2983  0E10                     	;# 
  2984  0E11                     	;# 
  2985  0E12                     	;# 
  2986  0E13                     	;# 
  2987  0E14                     	;# 
  2988  0E15                     	;# 
  2989  0E16                     	;# 
  2990  0E17                     	;# 
  2991  0E18                     	;# 
  2992  0E19                     	;# 
  2993  0E1A                     	;# 
  2994  0E1B                     	;# 
  2995  0E1C                     	;# 
  2996  0E1D                     	;# 
  2997  0E1E                     	;# 
  2998  0E1F                     	;# 
  2999  0E20                     	;# 
  3000  0E21                     	;# 
  3001  0E22                     	;# 
  3002  0E23                     	;# 
  3003  0E24                     	;# 
  3004  0E25                     	;# 
  3005  0E26                     	;# 
  3006  0E27                     	;# 
  3007  0E28                     	;# 
  3008  0E29                     	;# 
  3009  0E2A                     	;# 
  3010  0E2B                     	;# 
  3011  0E2C                     	;# 
  3012  0E2D                     	;# 
  3013  0E2E                     	;# 
  3014  0E2F                     	;# 
  3015  0E30                     	;# 
  3016  0E31                     	;# 
  3017  0E32                     	;# 
  3018  0E33                     	;# 
  3019  0E34                     	;# 
  3020  0E35                     	;# 
  3021  0E36                     	;# 
  3022  0E37                     	;# 
  3023  0E8F                     	;# 
  3024  0E90                     	;# 
  3025  0E91                     	;# 
  3026  0E92                     	;# 
  3027  0E93                     	;# 
  3028  0E94                     	;# 
  3029  0E95                     	;# 
  3030  0E96                     	;# 
  3031  0E97                     	;# 
  3032  0E9C                     	;# 
  3033  0E9D                     	;# 
  3034  0E9E                     	;# 
  3035  0EA1                     	;# 
  3036  0EA2                     	;# 
  3037  0EA3                     	;# 
  3038  0EA4                     	;# 
  3039  0EA5                     	;# 
  3040  0EA9                     	;# 
  3041  0EAA                     	;# 
  3042  0EAB                     	;# 
  3043  0EAC                     	;# 
  3044  0EB1                     	;# 
  3045  0EB2                     	;# 
  3046  0EB3                     	;# 
  3047  0EB8                     	;# 
  3048  0EB9                     	;# 
  3049  0EBA                     	;# 
  3050  0EBB                     	;# 
  3051  0EBC                     	;# 
  3052  0EBD                     	;# 
  3053  0EBE                     	;# 
  3054  0EC3                     	;# 
  3055  0EC5                     	;# 
  3056  0EC6                     	;# 
  3057  0EC7                     	;# 
  3058  0EC8                     	;# 
  3059  0EC9                     	;# 
  3060  0ECA                     	;# 
  3061  0ECB                     	;# 
  3062  0ECC                     	;# 
  3063  0F10                     	;# 
  3064  0F11                     	;# 
  3065  0F12                     	;# 
  3066  0F13                     	;# 
  3067  0F14                     	;# 
  3068  0F15                     	;# 
  3069  0F16                     	;# 
  3070  0F17                     	;# 
  3071  0F18                     	;# 
  3072  0F19                     	;# 
  3073  0F1A                     	;# 
  3074  0F1B                     	;# 
  3075  0F1C                     	;# 
  3076  0F1D                     	;# 
  3077  0F1E                     	;# 
  3078  0F1F                     	;# 
  3079  0F20                     	;# 
  3080  0F21                     	;# 
  3081  0F22                     	;# 
  3082  0F23                     	;# 
  3083  0F24                     	;# 
  3084  0F25                     	;# 
  3085  0F26                     	;# 
  3086  0F27                     	;# 
  3087  0F38                     	;# 
  3088  0F39                     	;# 
  3089  0F3A                     	;# 
  3090  0F3B                     	;# 
  3091  0F3C                     	;# 
  3092  0F3D                     	;# 
  3093  0F3E                     	;# 
  3094  0F3F                     	;# 
  3095  0F40                     	;# 
  3096  0F41                     	;# 
  3097  0F43                     	;# 
  3098  0F44                     	;# 
  3099  0F45                     	;# 
  3100  0F46                     	;# 
  3101  0F47                     	;# 
  3102  0F48                     	;# 
  3103  0F49                     	;# 
  3104  0F4A                     	;# 
  3105  0F4B                     	;# 
  3106  0F4C                     	;# 
  3107  0F4E                     	;# 
  3108  0F4F                     	;# 
  3109  0F50                     	;# 
  3110  0F51                     	;# 
  3111  0F52                     	;# 
  3112  0F53                     	;# 
  3113  0F54                     	;# 
  3114  0F55                     	;# 
  3115  0F56                     	;# 
  3116  0F57                     	;# 
  3117  0F65                     	;# 
  3118  0F68                     	;# 
  3119  0F69                     	;# 
  3120  0F6A                     	;# 
  3121  0F6B                     	;# 
  3122  0FE4                     	;# 
  3123  0FE5                     	;# 
  3124  0FE6                     	;# 
  3125  0FE7                     	;# 
  3126  0FE8                     	;# 
  3127  0FE9                     	;# 
  3128  0FEA                     	;# 
  3129  0FEB                     	;# 
  3130  0FED                     	;# 
  3131  0FEE                     	;# 
  3132  0FEF                     	;# 
  3133  0000                     	;# 
  3134  0001                     	;# 
  3135  0002                     	;# 
  3136  0003                     	;# 
  3137  0004                     	;# 
  3138  0005                     	;# 
  3139  0006                     	;# 
  3140  0007                     	;# 
  3141  0008                     	;# 
  3142  0009                     	;# 
  3143  000A                     	;# 
  3144  000B                     	;# 
  3145  000C                     	;# 
  3146  000D                     	;# 
  3147  000E                     	;# 
  3148  0010                     	;# 
  3149  0011                     	;# 
  3150  0012                     	;# 
  3151  0013                     	;# 
  3152  0016                     	;# 
  3153  0017                     	;# 
  3154  0018                     	;# 
  3155  001C                     	;# 
  3156  001C                     	;# 
  3157  001D                     	;# 
  3158  001D                     	;# 
  3159  001E                     	;# 
  3160  001F                     	;# 
  3161  008C                     	;# 
  3162  008C                     	;# 
  3163  008D                     	;# 
  3164  008E                     	;# 
  3165  008E                     	;# 
  3166  008F                     	;# 
  3167  0090                     	;# 
  3168  0090                     	;# 
  3169  0091                     	;# 
  3170  0093                     	;# 
  3171  0094                     	;# 
  3172  0095                     	;# 
  3173  0096                     	;# 
  3174  0097                     	;# 
  3175  0098                     	;# 
  3176  0099                     	;# 
  3177  009A                     	;# 
  3178  009B                     	;# 
  3179  009C                     	;# 
  3180  009D                     	;# 
  3181  009E                     	;# 
  3182  010C                     	;# 
  3183  010D                     	;# 
  3184  010E                     	;# 
  3185  010E                     	;# 
  3186  010F                     	;# 
  3187  0110                     	;# 
  3188  0110                     	;# 
  3189  0111                     	;# 
  3190  0112                     	;# 
  3191  0112                     	;# 
  3192  0113                     	;# 
  3193  0114                     	;# 
  3194  0114                     	;# 
  3195  0115                     	;# 
  3196  0116                     	;# 
  3197  0116                     	;# 
  3198  0117                     	;# 
  3199  0119                     	;# 
  3200  0119                     	;# 
  3201  0119                     	;# 
  3202  011A                     	;# 
  3203  011A                     	;# 
  3204  011A                     	;# 
  3205  011B                     	;# 
  3206  011B                     	;# 
  3207  011B                     	;# 
  3208  011B                     	;# 
  3209  011B                     	;# 
  3210  011C                     	;# 
  3211  011C                     	;# 
  3212  011C                     	;# 
  3213  011D                     	;# 
  3214  011D                     	;# 
  3215  011D                     	;# 
  3216  011E                     	;# 
  3217  011E                     	;# 
  3218  011E                     	;# 
  3219  011F                     	;# 
  3220  011F                     	;# 
  3221  011F                     	;# 
  3222  011F                     	;# 
  3223  011F                     	;# 
  3224  018C                     	;# 
  3225  018D                     	;# 
  3226  018E                     	;# 
  3227  018F                     	;# 
  3228  0190                     	;# 
  3229  0191                     	;# 
  3230  0192                     	;# 
  3231  0196                     	;# 
  3232  0197                     	;# 
  3233  0198                     	;# 
  3234  0199                     	;# 
  3235  019A                     	;# 
  3236  019B                     	;# 
  3237  019C                     	;# 
  3238  020C                     	;# 
  3239  020D                     	;# 
  3240  020E                     	;# 
  3241  020F                     	;# 
  3242  020F                     	;# 
  3243  0210                     	;# 
  3244  0210                     	;# 
  3245  0211                     	;# 
  3246  0211                     	;# 
  3247  0212                     	;# 
  3248  0213                     	;# 
  3249  0214                     	;# 
  3250  0215                     	;# 
  3251  0215                     	;# 
  3252  0216                     	;# 
  3253  0216                     	;# 
  3254  0217                     	;# 
  3255  0217                     	;# 
  3256  0218                     	;# 
  3257  0219                     	;# 
  3258  021A                     	;# 
  3259  021B                     	;# 
  3260  021B                     	;# 
  3261  021C                     	;# 
  3262  021C                     	;# 
  3263  021D                     	;# 
  3264  021D                     	;# 
  3265  021E                     	;# 
  3266  021F                     	;# 
  3267  028C                     	;# 
  3268  028C                     	;# 
  3269  028D                     	;# 
  3270  028D                     	;# 
  3271  028E                     	;# 
  3272  028F                     	;# 
  3273  0290                     	;# 
  3274  0290                     	;# 
  3275  0291                     	;# 
  3276  0292                     	;# 
  3277  0292                     	;# 
  3278  0293                     	;# 
  3279  0293                     	;# 
  3280  0294                     	;# 
  3281  0295                     	;# 
  3282  0296                     	;# 
  3283  0296                     	;# 
  3284  0297                     	;# 
  3285  0298                     	;# 
  3286  0298                     	;# 
  3287  0299                     	;# 
  3288  0299                     	;# 
  3289  029A                     	;# 
  3290  029B                     	;# 
  3291  029C                     	;# 
  3292  029C                     	;# 
  3293  029D                     	;# 
  3294  030C                     	;# 
  3295  030C                     	;# 
  3296  030D                     	;# 
  3297  030E                     	;# 
  3298  030F                     	;# 
  3299  0310                     	;# 
  3300  0310                     	;# 
  3301  0311                     	;# 
  3302  0312                     	;# 
  3303  0313                     	;# 
  3304  0314                     	;# 
  3305  0314                     	;# 
  3306  0315                     	;# 
  3307  0316                     	;# 
  3308  0317                     	;# 
  3309  0318                     	;# 
  3310  0318                     	;# 
  3311  0319                     	;# 
  3312  031A                     	;# 
  3313  031B                     	;# 
  3314  031C                     	;# 
  3315  031C                     	;# 
  3316  031D                     	;# 
  3317  031E                     	;# 
  3318  031F                     	;# 
  3319  038C                     	;# 
  3320  038D                     	;# 
  3321  038E                     	;# 
  3322  0390                     	;# 
  3323  0391                     	;# 
  3324  0392                     	;# 
  3325  040C                     	;# 
  3326  040D                     	;# 
  3327  040E                     	;# 
  3328  040F                     	;# 
  3329  0410                     	;# 
  3330  0411                     	;# 
  3331  0416                     	;# 
  3332  0416                     	;# 
  3333  0417                     	;# 
  3334  0418                     	;# 
  3335  0418                     	;# 
  3336  0419                     	;# 
  3337  041A                     	;# 
  3338  041A                     	;# 
  3339  041B                     	;# 
  3340  041C                     	;# 
  3341  041C                     	;# 
  3342  041D                     	;# 
  3343  041E                     	;# 
  3344  041F                     	;# 
  3345  048C                     	;# 
  3346  048C                     	;# 
  3347  048D                     	;# 
  3348  048E                     	;# 
  3349  048F                     	;# 
  3350  048F                     	;# 
  3351  0490                     	;# 
  3352  0491                     	;# 
  3353  0492                     	;# 
  3354  0492                     	;# 
  3355  0493                     	;# 
  3356  0494                     	;# 
  3357  0495                     	;# 
  3358  0495                     	;# 
  3359  0496                     	;# 
  3360  0497                     	;# 
  3361  0498                     	;# 
  3362  0499                     	;# 
  3363  049A                     	;# 
  3364  049B                     	;# 
  3365  049C                     	;# 
  3366  049D                     	;# 
  3367  050C                     	;# 
  3368  050C                     	;# 
  3369  050D                     	;# 
  3370  050E                     	;# 
  3371  050F                     	;# 
  3372  050F                     	;# 
  3373  0510                     	;# 
  3374  0511                     	;# 
  3375  0512                     	;# 
  3376  0512                     	;# 
  3377  0513                     	;# 
  3378  0514                     	;# 
  3379  0515                     	;# 
  3380  0515                     	;# 
  3381  0516                     	;# 
  3382  0517                     	;# 
  3383  0518                     	;# 
  3384  0519                     	;# 
  3385  051A                     	;# 
  3386  051B                     	;# 
  3387  051C                     	;# 
  3388  051D                     	;# 
  3389  058C                     	;# 
  3390  058C                     	;# 
  3391  058D                     	;# 
  3392  058E                     	;# 
  3393  058F                     	;# 
  3394  058F                     	;# 
  3395  0590                     	;# 
  3396  0591                     	;# 
  3397  0592                     	;# 
  3398  0593                     	;# 
  3399  060C                     	;# 
  3400  060D                     	;# 
  3401  060E                     	;# 
  3402  060F                     	;# 
  3403  0610                     	;# 
  3404  0611                     	;# 
  3405  0612                     	;# 
  3406  0613                     	;# 
  3407  0614                     	;# 
  3408  0616                     	;# 
  3409  0617                     	;# 
  3410  0618                     	;# 
  3411  0619                     	;# 
  3412  061A                     	;# 
  3413  061B                     	;# 
  3414  061C                     	;# 
  3415  061D                     	;# 
  3416  061E                     	;# 
  3417  068C                     	;# 
  3418  068D                     	;# 
  3419  068E                     	;# 
  3420  068F                     	;# 
  3421  0690                     	;# 
  3422  0691                     	;# 
  3423  0692                     	;# 
  3424  0693                     	;# 
  3425  0694                     	;# 
  3426  070C                     	;# 
  3427  070D                     	;# 
  3428  070E                     	;# 
  3429  070F                     	;# 
  3430  0710                     	;# 
  3431  0711                     	;# 
  3432  0712                     	;# 
  3433  0713                     	;# 
  3434  0714                     	;# 
  3435  0716                     	;# 
  3436  0717                     	;# 
  3437  0718                     	;# 
  3438  0719                     	;# 
  3439  071A                     	;# 
  3440  071B                     	;# 
  3441  071C                     	;# 
  3442  071D                     	;# 
  3443  071E                     	;# 
  3444  0796                     	;# 
  3445  0797                     	;# 
  3446  0798                     	;# 
  3447  0799                     	;# 
  3448  079A                     	;# 
  3449  079B                     	;# 
  3450  080C                     	;# 
  3451  080D                     	;# 
  3452  080E                     	;# 
  3453  080F                     	;# 
  3454  0810                     	;# 
  3455  0811                     	;# 
  3456  0812                     	;# 
  3457  0813                     	;# 
  3458  0814                     	;# 
  3459  081A                     	;# 
  3460  081B                     	;# 
  3461  081C                     	;# 
  3462  081D                     	;# 
  3463  081E                     	;# 
  3464  081F                     	;# 
  3465  088C                     	;# 
  3466  088D                     	;# 
  3467  088E                     	;# 
  3468  088F                     	;# 
  3469  0890                     	;# 
  3470  0891                     	;# 
  3471  0892                     	;# 
  3472  0893                     	;# 
  3473  0895                     	;# 
  3474  0896                     	;# 
  3475  0897                     	;# 
  3476  0898                     	;# 
  3477  0899                     	;# 
  3478  089A                     	;# 
  3479  089B                     	;# 
  3480  090C                     	;# 
  3481  090E                     	;# 
  3482  090F                     	;# 
  3483  091F                     	;# 
  3484  091F                     	;# 
  3485  098F                     	;# 
  3486  098F                     	;# 
  3487  0990                     	;# 
  3488  0991                     	;# 
  3489  0992                     	;# 
  3490  0993                     	;# 
  3491  0994                     	;# 
  3492  0995                     	;# 
  3493  0996                     	;# 
  3494  0997                     	;# 
  3495  0E0F                     	;# 
  3496  0E10                     	;# 
  3497  0E11                     	;# 
  3498  0E12                     	;# 
  3499  0E13                     	;# 
  3500  0E14                     	;# 
  3501  0E15                     	;# 
  3502  0E16                     	;# 
  3503  0E17                     	;# 
  3504  0E18                     	;# 
  3505  0E19                     	;# 
  3506  0E1A                     	;# 
  3507  0E1B                     	;# 
  3508  0E1C                     	;# 
  3509  0E1D                     	;# 
  3510  0E1E                     	;# 
  3511  0E1F                     	;# 
  3512  0E20                     	;# 
  3513  0E21                     	;# 
  3514  0E22                     	;# 
  3515  0E23                     	;# 
  3516  0E24                     	;# 
  3517  0E25                     	;# 
  3518  0E26                     	;# 
  3519  0E27                     	;# 
  3520  0E28                     	;# 
  3521  0E29                     	;# 
  3522  0E2A                     	;# 
  3523  0E2B                     	;# 
  3524  0E2C                     	;# 
  3525  0E2D                     	;# 
  3526  0E2E                     	;# 
  3527  0E2F                     	;# 
  3528  0E30                     	;# 
  3529  0E31                     	;# 
  3530  0E32                     	;# 
  3531  0E33                     	;# 
  3532  0E34                     	;# 
  3533  0E35                     	;# 
  3534  0E36                     	;# 
  3535  0E37                     	;# 
  3536  0E8F                     	;# 
  3537  0E90                     	;# 
  3538  0E91                     	;# 
  3539  0E92                     	;# 
  3540  0E93                     	;# 
  3541  0E94                     	;# 
  3542  0E95                     	;# 
  3543  0E96                     	;# 
  3544  0E97                     	;# 
  3545  0E9C                     	;# 
  3546  0E9D                     	;# 
  3547  0E9E                     	;# 
  3548  0EA1                     	;# 
  3549  0EA2                     	;# 
  3550  0EA3                     	;# 
  3551  0EA4                     	;# 
  3552  0EA5                     	;# 
  3553  0EA9                     	;# 
  3554  0EAA                     	;# 
  3555  0EAB                     	;# 
  3556  0EAC                     	;# 
  3557  0EB1                     	;# 
  3558  0EB2                     	;# 
  3559  0EB3                     	;# 
  3560  0EB8                     	;# 
  3561  0EB9                     	;# 
  3562  0EBA                     	;# 
  3563  0EBB                     	;# 
  3564  0EBC                     	;# 
  3565  0EBD                     	;# 
  3566  0EBE                     	;# 
  3567  0EC3                     	;# 
  3568  0EC5                     	;# 
  3569  0EC6                     	;# 
  3570  0EC7                     	;# 
  3571  0EC8                     	;# 
  3572  0EC9                     	;# 
  3573  0ECA                     	;# 
  3574  0ECB                     	;# 
  3575  0ECC                     	;# 
  3576  0F10                     	;# 
  3577  0F11                     	;# 
  3578  0F12                     	;# 
  3579  0F13                     	;# 
  3580  0F14                     	;# 
  3581  0F15                     	;# 
  3582  0F16                     	;# 
  3583  0F17                     	;# 
  3584  0F18                     	;# 
  3585  0F19                     	;# 
  3586  0F1A                     	;# 
  3587  0F1B                     	;# 
  3588  0F1C                     	;# 
  3589  0F1D                     	;# 
  3590  0F1E                     	;# 
  3591  0F1F                     	;# 
  3592  0F20                     	;# 
  3593  0F21                     	;# 
  3594  0F22                     	;# 
  3595  0F23                     	;# 
  3596  0F24                     	;# 
  3597  0F25                     	;# 
  3598  0F26                     	;# 
  3599  0F27                     	;# 
  3600  0F38                     	;# 
  3601  0F39                     	;# 
  3602  0F3A                     	;# 
  3603  0F3B                     	;# 
  3604  0F3C                     	;# 
  3605  0F3D                     	;# 
  3606  0F3E                     	;# 
  3607  0F3F                     	;# 
  3608  0F40                     	;# 
  3609  0F41                     	;# 
  3610  0F43                     	;# 
  3611  0F44                     	;# 
  3612  0F45                     	;# 
  3613  0F46                     	;# 
  3614  0F47                     	;# 
  3615  0F48                     	;# 
  3616  0F49                     	;# 
  3617  0F4A                     	;# 
  3618  0F4B                     	;# 
  3619  0F4C                     	;# 
  3620  0F4E                     	;# 
  3621  0F4F                     	;# 
  3622  0F50                     	;# 
  3623  0F51                     	;# 
  3624  0F52                     	;# 
  3625  0F53                     	;# 
  3626  0F54                     	;# 
  3627  0F55                     	;# 
  3628  0F56                     	;# 
  3629  0F57                     	;# 
  3630  0F65                     	;# 
  3631  0F68                     	;# 
  3632  0F69                     	;# 
  3633  0F6A                     	;# 
  3634  0F6B                     	;# 
  3635  0FE4                     	;# 
  3636  0FE5                     	;# 
  3637  0FE6                     	;# 
  3638  0FE7                     	;# 
  3639  0FE8                     	;# 
  3640  0FE9                     	;# 
  3641  0FEA                     	;# 
  3642  0FEB                     	;# 
  3643  0FED                     	;# 
  3644  0FEE                     	;# 
  3645  0FEF                     	;# 
  3646                           
  3647                           	psect	nvBANK1
  3648  00B6                     __pnvBANK1:	
  3649  00B6                     _TMR0_InterruptHandler:	
  3650  00B6                     	ds	2
  3651  000B                     _INTCONbits	set	11
  3652  0016                     _LATA	set	22
  3653  0016                     _LATAbits	set	22
  3654  0017                     _LATB	set	23
  3655  0018                     _LATC	set	24
  3656  0018                     _LATCbits	set	24
  3657  000E                     _PORTCbits	set	14
  3658  0003                     _STATUSbits	set	3
  3659  001E                     _T0CON0	set	30
  3660  001E                     _T0CON0bits	set	30
  3661  001F                     _T0CON1	set	31
  3662  001D                     _TMR0H	set	29
  3663  001C                     _TMR0L	set	28
  3664  0011                     _TRISA	set	17
  3665  0012                     _TRISB	set	18
  3666  0013                     _TRISC	set	19
  3667  009D                     _ADACQ	set	157
  3668  0099                     _ADACT	set	153
  3669  009B                     _ADCAP	set	155
  3670  0098                     _ADCLK	set	152
  3671  0093                     _ADCON0	set	147
  3672  0093                     _ADCON0bits	set	147
  3673  0094                     _ADCON1	set	148
  3674  0095                     _ADCON2	set	149
  3675  0096                     _ADCON3	set	150
  3676  009E                     _ADPCH	set	158
  3677  009C                     _ADPRE	set	156
  3678  009A                     _ADREF	set	154
  3679  008D                     _ADRESH	set	141
  3680  008C                     _ADRESL	set	140
  3681  0097                     _ADSTAT	set	151
  3682  010F                     _ADLTHH	set	271
  3683  010E                     _ADLTHL	set	270
  3684  010D                     _ADRPT	set	269
  3685  0113                     _ADSTPTH	set	275
  3686  0112                     _ADSTPTL	set	274
  3687  0111                     _ADUTHH	set	273
  3688  0110                     _ADUTHL	set	272
  3689  0716                     _PIE0bits	set	1814
  3690  0717                     _PIE1bits	set	1815
  3691  070C                     _PIR0bits	set	1804
  3692  070D                     _PIR1bits	set	1805
  3693  081B                     _NVMADRH	set	2075
  3694  081A                     _NVMADRL	set	2074
  3695  081E                     _NVMCON1bits	set	2078
  3696  081F                     _NVMCON2	set	2079
  3697  081D                     _NVMDATH	set	2077
  3698  081C                     _NVMDATL	set	2076
  3699  40F1                     _WR	set	16625
  3700  088D                     _OSCCON1	set	2189
  3701  088F                     _OSCCON3	set	2191
  3702  0891                     _OSCEN	set	2193
  3703  0893                     _OSCFRQ	set	2195
  3704  0892                     _OSCTUNE	set	2194
  3705  090C                     _FVRCON	set	2316
  3706  0F38                     _ANSELA	set	3896
  3707  0F43                     _ANSELB	set	3907
  3708  0F4E                     _ANSELC	set	3918
  3709  0F3A                     _ODCONA	set	3898
  3710  0F45                     _ODCONB	set	3909
  3711  0F50                     _ODCONC	set	3920
  3712  0F39                     _WPUA	set	3897
  3713  0F44                     _WPUB	set	3908
  3714  0F4F                     _WPUC	set	3919
  3715  0F65                     _WPUE	set	3941
  3716                           
  3717                           ; #config settings
  3718  0000                     
  3719                           	psect	cinit
  3720  001F                     start_initialization:	
  3721  001F                     __initialization:	
  3722                           
  3723                           ; Clear objects allocated to COMMON
  3724  001F  01FC               	clrf	__pbssCOMMON& (0+127)
  3725                           
  3726                           ; Clear objects allocated to BANK0
  3727  0020  305E               	movlw	low __pbssBANK0
  3728  0021  0084               	movwf	4
  3729  0022  3000               	movlw	high __pbssBANK0
  3730  0023  0085               	movwf	5
  3731  0024  3010               	movlw	16
  3732  0025  318C  24C1  3180   	fcall	clear_ram0
  3733                           
  3734                           ; Clear objects allocated to BANK1
  3735  0028  30A0               	movlw	low __pbssBANK1
  3736  0029  0084               	movwf	4
  3737  002A  3000               	movlw	high __pbssBANK1
  3738  002B  0085               	movwf	5
  3739  002C  3013               	movlw	19
  3740  002D  318C  24C1         	fcall	clear_ram0
  3741  002F                     end_of_initialization:	
  3742                           ;End of C runtime variable initialization code
  3743                           
  3744  002F                     __end_of__initialization:	
  3745  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3746  0030  0020               	movlb	0
  3747  0031  3180  2833         	ljmp	_main	;jump to C main() function
  3748                           
  3749                           	psect	bssCOMMON
  3750  007C                     __pbssCOMMON:	
  3751  007C                     _n:	
  3752  007C                     	ds	1
  3753                           
  3754                           	psect	bssBANK0
  3755  005E                     __pbssBANK0:	
  3756  005E                     _avg:	
  3757  005E                     	ds	3
  3758  0061                     _spv:	
  3759  0061                     	ds	3
  3760  0064                     _bypass_flg:	
  3761  0064                     	ds	1
  3762  0065                     _dsply_sp_flg:	
  3763  0065                     	ds	1
  3764  0066                     _encoder_Pin_A_Last:	
  3765  0066                     	ds	1
  3766  0067                     _encoder_pos:	
  3767  0067                     	ds	1
  3768  0068                     _encoder_pos_old:	
  3769  0068                     	ds	1
  3770  0069                     _getting_new_sp_flg:	
  3771  0069                     	ds	1
  3772  006A                     _num:	
  3773  006A                     	ds	1
  3774  006B                     _relay_on_flg:	
  3775  006B                     	ds	1
  3776  006C                     _setpoint:	
  3777  006C                     	ds	1
  3778  006D                     _temp:	
  3779  006D                     	ds	1
  3780                           
  3781                           	psect	bssBANK1
  3782  00A0                     __pbssBANK1:	
  3783  00A0                     _ns:	
  3784  00A0                     	ds	3
  3785  00A3                     _ADCC_ADI_InterruptHandler:	
  3786  00A3                     	ds	2
  3787  00A5                     _errno:	
  3788  00A5                     	ds	2
  3789  00A7                     _millis:	
  3790  00A7                     	ds	2
  3791  00A9                     _seconds:	
  3792  00A9                     	ds	2
  3793  00AB                     _LED_blue_flg:	
  3794  00AB                     	ds	1
  3795  00AC                     _bypass_tmr:	
  3796  00AC                     	ds	1
  3797  00AD                     _done_reading_ADDC_flg:	
  3798  00AD                     	ds	1
  3799  00AE                     _dsply_sp_tmr:	
  3800  00AE                     	ds	1
  3801  00AF                     _getting_new_sp_tmr:	
  3802  00AF                     	ds	1
  3803  00B0                     _heater_max_on_tmr:	
  3804  00B0                     	ds	1
  3805  00B1                     _heater_min_on_tmr:	
  3806  00B1                     	ds	1
  3807  00B2                     _heater_rest_tmr:	
  3808  00B2                     	ds	1
  3809                           
  3810                           	psect	clrtext
  3811  0CC1                     clear_ram0:	
  3812                           ;	Called with FSR0 containing the base address, and
  3813                           ;	WREG with the size to clear
  3814                           
  3815  0CC1  0064               	clrwdt	;clear the watchdog before getting into this loop
  3816  0CC2                     clrloop0:	
  3817  0CC2  0180               	clrf	0	;clear RAM location pointed to by FSR
  3818  0CC3  3101               	addfsr 0,1
  3819  0CC4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3820  0CC5  2CC2               	goto	clrloop0	;have we reached the end yet?
  3821  0CC6  3400               	retlw	0	;all done for this memory range, return
  3822                           
  3823                           	psect	cstackBANK1
  3824  00B3                     __pcstackBANK1:	
  3825  00B3                     _main$1109:	
  3826                           
  3827                           ; 3 bytes @ 0x0
  3828  00B3                     	ds	3
  3829                           
  3830                           	psect	cstackCOMMON
  3831  0070                     __pcstackCOMMON:	
  3832  0070                     ?_SYSTEM_Initialize:	
  3833  0070                     ?_ADCC_Initialize:	
  3834                           ; 1 bytes @ 0x0
  3835                           
  3836  0070                     ?_delay_us:	
  3837                           ; 1 bytes @ 0x0
  3838                           
  3839  0070                     ?_eeprom_read:	
  3840                           ; 1 bytes @ 0x0
  3841                           
  3842  0070                     ?_read_encoder:	
  3843                           ; 1 bytes @ 0x0
  3844                           
  3845  0070                     ?_debounce_sw:	
  3846                           ; 1 bytes @ 0x0
  3847                           
  3848  0070                     ?_ADCC_StartConversion:	
  3849                           ; 1 bytes @ 0x0
  3850                           
  3851  0070                     ?_ADCC_IsConversionDone:	
  3852                           ; 1 bytes @ 0x0
  3853                           
  3854  0070                     ?_read_MCP9700A:	
  3855                           ; 1 bytes @ 0x0
  3856                           
  3857  0070                     ?_decToBcd:	
  3858                           ; 1 bytes @ 0x0
  3859                           
  3860  0070                     ?_display_digit:	
  3861                           ; 1 bytes @ 0x0
  3862                           
  3863  0070                     ?_TMR0_ISR:	
  3864                           ; 1 bytes @ 0x0
  3865                           
  3866  0070                     ??_TMR0_ISR:	
  3867                           ; 1 bytes @ 0x0
  3868                           
  3869  0070                     ?_PIN_MANAGER_Initialize:	
  3870                           ; 1 bytes @ 0x0
  3871                           
  3872  0070                     ?_OSCILLATOR_Initialize:	
  3873                           ; 1 bytes @ 0x0
  3874                           
  3875  0070                     ?_TMR0_Initialize:	
  3876                           ; 1 bytes @ 0x0
  3877                           
  3878  0070                     ?_TMR0_DefaultInterruptHandler:	
  3879                           ; 1 bytes @ 0x0
  3880                           
  3881  0070                     ??_TMR0_DefaultInterruptHandler:	
  3882                           ; 1 bytes @ 0x0
  3883                           
  3884  0070                     ?_TMR0_StartTimer:	
  3885                           ; 1 bytes @ 0x0
  3886                           
  3887  0070                     ?_main:	
  3888                           ; 1 bytes @ 0x0
  3889                           
  3890  0070                     ?_ADCC_ISR:	
  3891                           ; 1 bytes @ 0x0
  3892                           
  3893  0070                     ??_ADCC_ISR:	
  3894                           ; 1 bytes @ 0x0
  3895                           
  3896  0070                     ?_FVR_Initialize:	
  3897                           ; 1 bytes @ 0x0
  3898                           
  3899  0070                     ?_INTERRUPT_InterruptManager:	
  3900                           ; 1 bytes @ 0x0
  3901                           
  3902  0070                     ??_INTERRUPT_InterruptManager:	
  3903                           ; 1 bytes @ 0x0
  3904                           
  3905                           
  3906                           ; 1 bytes @ 0x0
  3907  0070                     	ds	1
  3908  0071                     ?___ftge:	
  3909  0071                     ??_ADCC_Initialize:	
  3910                           ; 1 bit 
  3911                           
  3912  0071                     ??_delay_us:	
  3913                           ; 1 bytes @ 0x1
  3914                           
  3915  0071                     ??_eeprom_read:	
  3916                           ; 1 bytes @ 0x1
  3917                           
  3918  0071                     ?_eeprom_write:	
  3919                           ; 1 bytes @ 0x1
  3920                           
  3921  0071                     ??_ADCC_StartConversion:	
  3922                           ; 1 bytes @ 0x1
  3923                           
  3924  0071                     ??_ADCC_IsConversionDone:	
  3925                           ; 1 bytes @ 0x1
  3926                           
  3927  0071                     ??_display_digit:	
  3928                           ; 1 bytes @ 0x1
  3929                           
  3930  0071                     ??_PIN_MANAGER_Initialize:	
  3931                           ; 1 bytes @ 0x1
  3932                           
  3933  0071                     ??_OSCILLATOR_Initialize:	
  3934                           ; 1 bytes @ 0x1
  3935                           
  3936  0071                     ?_TMR0_SetInterruptHandler:	
  3937                           ; 1 bytes @ 0x1
  3938                           
  3939  0071                     ??_TMR0_StartTimer:	
  3940                           ; 1 bytes @ 0x1
  3941                           
  3942  0071                     ??_FVR_Initialize:	
  3943                           ; 1 bytes @ 0x1
  3944                           
  3945  0071                     ?_ADCC_GetSingleConversion:	
  3946                           ; 1 bytes @ 0x1
  3947                           
  3948  0071                     ?_ADCC_GetConversionResult:	
  3949                           ; 2 bytes @ 0x1
  3950                           
  3951  0071                     ?___awdiv:	
  3952                           ; 2 bytes @ 0x1
  3953                           
  3954  0071                     ?___awmod:	
  3955                           ; 2 bytes @ 0x1
  3956                           
  3957  0071                     ?___ftpack:	
  3958                           ; 2 bytes @ 0x1
  3959                           
  3960  0071                     ?_frexp:	
  3961                           ; 3 bytes @ 0x1
  3962                           
  3963  0071                     ?___fttol:	
  3964                           ; 3 bytes @ 0x1
  3965                           
  3966  0071                     display_digit@count:	
  3967                           ; 4 bytes @ 0x1
  3968                           
  3969  0071                     ADCC_StartConversion@channel:	
  3970                           ; 1 bytes @ 0x1
  3971                           
  3972  0071                     eeprom_read@addr:	
  3973                           ; 1 bytes @ 0x1
  3974                           
  3975  0071                     eeprom_write@value:	
  3976                           ; 1 bytes @ 0x1
  3977                           
  3978  0071                     delay_us@i:	
  3979                           ; 1 bytes @ 0x1
  3980                           
  3981  0071                     TMR0_SetInterruptHandler@InterruptHandler:	
  3982                           ; 2 bytes @ 0x1
  3983                           
  3984  0071                     ___awdiv@divisor:	
  3985                           ; 2 bytes @ 0x1
  3986                           
  3987  0071                     ___awmod@divisor:	
  3988                           ; 2 bytes @ 0x1
  3989                           
  3990  0071                     ___ftpack@arg:	
  3991                           ; 2 bytes @ 0x1
  3992                           
  3993  0071                     ___ftge@ff1:	
  3994                           ; 3 bytes @ 0x1
  3995                           
  3996  0071                     ___fttol@f1:	
  3997                           ; 3 bytes @ 0x1
  3998                           
  3999  0071                     frexp@value:	
  4000                           ; 3 bytes @ 0x1
  4001                           
  4002                           
  4003                           ; 3 bytes @ 0x1
  4004  0071                     	ds	1
  4005  0072                     ??_eeprom_write:	
  4006  0072                     eeprom_write@addr:	
  4007                           ; 1 bytes @ 0x2
  4008                           
  4009                           
  4010                           ; 1 bytes @ 0x2
  4011  0072                     	ds	1
  4012  0073                     ??_SYSTEM_Initialize:	
  4013  0073                     ??_debounce_sw:	
  4014                           ; 1 bytes @ 0x3
  4015                           
  4016  0073                     ??_ADCC_GetConversionResult:	
  4017                           ; 1 bytes @ 0x3
  4018                           
  4019  0073                     ??_TMR0_Initialize:	
  4020                           ; 1 bytes @ 0x3
  4021                           
  4022  0073                     ??_TMR0_SetInterruptHandler:	
  4023                           ; 1 bytes @ 0x3
  4024                           
  4025  0073                     ___awdiv@dividend:	
  4026                           ; 1 bytes @ 0x3
  4027                           
  4028  0073                     ___awmod@dividend:	
  4029                           ; 2 bytes @ 0x3
  4030                           
  4031                           
  4032                           ; 2 bytes @ 0x3
  4033  0073                     	ds	1
  4034  0074                     ??_ADCC_GetSingleConversion:	
  4035  0074                     debounce_sw@sp2:	
  4036                           ; 1 bytes @ 0x4
  4037                           
  4038  0074                     ADCC_GetSingleConversion@channel:	
  4039                           ; 1 bytes @ 0x4
  4040                           
  4041  0074                     ___ftpack@exp:	
  4042                           ; 1 bytes @ 0x4
  4043                           
  4044  0074                     frexp@eptr:	
  4045                           ; 1 bytes @ 0x4
  4046                           
  4047  0074                     ___ftge@ff2:	
  4048                           ; 1 bytes @ 0x4
  4049                           
  4050                           
  4051                           ; 3 bytes @ 0x4
  4052  0074                     	ds	1
  4053  0075                     ??_frexp:	
  4054  0075                     ??___awdiv:	
  4055                           ; 1 bytes @ 0x5
  4056                           
  4057  0075                     ??___awmod:	
  4058                           ; 1 bytes @ 0x5
  4059                           
  4060  0075                     ??___fttol:	
  4061                           ; 1 bytes @ 0x5
  4062                           
  4063  0075                     debounce_sw@port:	
  4064                           ; 1 bytes @ 0x5
  4065                           
  4066  0075                     ___ftpack@sign:	
  4067                           ; 1 bytes @ 0x5
  4068                           
  4069                           
  4070                           ; 1 bytes @ 0x5
  4071  0075                     	ds	1
  4072  0076                     ??___ftpack:	
  4073  0076                     debounce_sw@sp1:	
  4074                           ; 1 bytes @ 0x6
  4075                           
  4076  0076                     ___awdiv@counter:	
  4077                           ; 1 bytes @ 0x6
  4078                           
  4079  0076                     ___awmod@counter:	
  4080                           ; 1 bytes @ 0x6
  4081                           
  4082                           
  4083                           ; 1 bytes @ 0x6
  4084  0076                     	ds	1
  4085  0077                     ??_read_encoder:	
  4086  0077                     ??___ftge:	
  4087                           ; 1 bytes @ 0x7
  4088                           
  4089  0077                     ___awdiv@sign:	
  4090                           ; 1 bytes @ 0x7
  4091                           
  4092  0077                     ___awmod@sign:	
  4093                           ; 1 bytes @ 0x7
  4094                           
  4095                           
  4096                           ; 1 bytes @ 0x7
  4097  0077                     	ds	1
  4098  0078                     ___awdiv@quotient:	
  4099                           
  4100                           ; 2 bytes @ 0x8
  4101  0078                     	ds	1
  4102  0079                     ??___altoft:	
  4103  0079                     ?___lwtoft:	
  4104                           ; 1 bytes @ 0x9
  4105                           
  4106  0079                     ___lwtoft@c:	
  4107                           ; 3 bytes @ 0x9
  4108                           
  4109                           
  4110                           ; 2 bytes @ 0x9
  4111  0079                     	ds	1
  4112  007A                     decToBcd@val:	
  4113                           
  4114                           ; 1 bytes @ 0xA
  4115  007A                     	ds	1
  4116  007B                     ??_trunc:	
  4117                           
  4118                           ; 1 bytes @ 0xB
  4119  007B                     	ds	1
  4120  007C                     ??_round:	
  4121  007C                     ??___ftneg:	
  4122                           ; 1 bytes @ 0xC
  4123                           
  4124  007C                     ??___ftsub:	
  4125                           ; 1 bytes @ 0xC
  4126                           
  4127                           
  4128                           	psect	cstackBANK0
  4129  0020                     __pcstackBANK0:	
  4130                           ; 1 bytes @ 0xC
  4131                           
  4132  0020                     ??_decToBcd:	
  4133  0020                     ??___lwtoft:	
  4134                           ; 1 bytes @ 0x0
  4135                           
  4136  0020                     ?___ftmul:	
  4137                           ; 1 bytes @ 0x0
  4138                           
  4139  0020                     ___fttol@sign1:	
  4140                           ; 3 bytes @ 0x0
  4141                           
  4142  0020                     ___ftmul@f1:	
  4143                           ; 1 bytes @ 0x0
  4144                           
  4145                           
  4146                           ; 3 bytes @ 0x0
  4147  0020                     	ds	1
  4148  0021                     ___fttol@lval:	
  4149                           
  4150                           ; 4 bytes @ 0x1
  4151  0021                     	ds	2
  4152  0023                     ___ftmul@f2:	
  4153                           
  4154                           ; 3 bytes @ 0x3
  4155  0023                     	ds	2
  4156  0025                     ___fttol@exp1:	
  4157                           
  4158                           ; 1 bytes @ 0x5
  4159  0025                     	ds	1
  4160  0026                     ??___ftmul:	
  4161  0026                     ?___altoft:	
  4162                           ; 1 bytes @ 0x6
  4163                           
  4164  0026                     ___altoft@c:	
  4165                           ; 3 bytes @ 0x6
  4166                           
  4167                           
  4168                           ; 4 bytes @ 0x6
  4169  0026                     	ds	4
  4170  002A                     ___altoft@exp:	
  4171  002A                     ___ftmul@exp:	
  4172                           ; 1 bytes @ 0xA
  4173                           
  4174                           
  4175                           ; 1 bytes @ 0xA
  4176  002A                     	ds	1
  4177  002B                     ___altoft@sign:	
  4178  002B                     ___ftmul@f3_as_product:	
  4179                           ; 1 bytes @ 0xB
  4180                           
  4181                           
  4182                           ; 3 bytes @ 0xB
  4183  002B                     	ds	1
  4184  002C                     ?_trunc:	
  4185  002C                     trunc@x:	
  4186                           ; 3 bytes @ 0xC
  4187                           
  4188                           
  4189                           ; 3 bytes @ 0xC
  4190  002C                     	ds	2
  4191  002E                     ___ftmul@cntr:	
  4192                           
  4193                           ; 1 bytes @ 0xE
  4194  002E                     	ds	1
  4195  002F                     ___ftmul@sign:	
  4196  002F                     trunc@i:	
  4197                           ; 1 bytes @ 0xF
  4198                           
  4199                           
  4200                           ; 3 bytes @ 0xF
  4201  002F                     	ds	3
  4202  0032                     trunc@expon:	
  4203                           
  4204                           ; 2 bytes @ 0x12
  4205  0032                     	ds	2
  4206  0034                     ?___ftneg:	
  4207  0034                     ___ftneg@f1:	
  4208                           ; 3 bytes @ 0x14
  4209                           
  4210                           
  4211                           ; 3 bytes @ 0x14
  4212  0034                     	ds	3
  4213  0037                     ?___ftadd:	
  4214  0037                     ___ftadd@f1:	
  4215                           ; 3 bytes @ 0x17
  4216                           
  4217                           
  4218                           ; 3 bytes @ 0x17
  4219  0037                     	ds	3
  4220  003A                     ___ftadd@f2:	
  4221                           
  4222                           ; 3 bytes @ 0x1A
  4223  003A                     	ds	3
  4224  003D                     ??___ftadd:	
  4225                           
  4226                           ; 1 bytes @ 0x1D
  4227  003D                     	ds	4
  4228  0041                     ___ftadd@sign:	
  4229                           
  4230                           ; 1 bytes @ 0x21
  4231  0041                     	ds	1
  4232  0042                     ___ftadd@exp2:	
  4233                           
  4234                           ; 1 bytes @ 0x22
  4235  0042                     	ds	1
  4236  0043                     ___ftadd@exp1:	
  4237                           
  4238                           ; 1 bytes @ 0x23
  4239  0043                     	ds	1
  4240  0044                     ?_round:	
  4241  0044                     ?___ftdiv:	
  4242                           ; 3 bytes @ 0x24
  4243                           
  4244  0044                     ?___ftsub:	
  4245                           ; 3 bytes @ 0x24
  4246                           
  4247  0044                     ___ftdiv@f2:	
  4248                           ; 3 bytes @ 0x24
  4249                           
  4250  0044                     ___ftsub@f2:	
  4251                           ; 3 bytes @ 0x24
  4252                           
  4253  0044                     round@x:	
  4254                           ; 3 bytes @ 0x24
  4255                           
  4256                           
  4257                           ; 3 bytes @ 0x24
  4258  0044                     	ds	3
  4259  0047                     ___ftdiv@f1:	
  4260  0047                     ___ftsub@f1:	
  4261                           ; 3 bytes @ 0x27
  4262                           
  4263  0047                     round@f:	
  4264                           ; 3 bytes @ 0x27
  4265                           
  4266                           
  4267                           ; 3 bytes @ 0x27
  4268  0047                     	ds	3
  4269  004A                     ??___ftdiv:	
  4270                           
  4271                           ; 1 bytes @ 0x2A
  4272  004A                     	ds	4
  4273  004E                     ___ftdiv@cntr:	
  4274                           
  4275                           ; 1 bytes @ 0x2E
  4276  004E                     	ds	1
  4277  004F                     ___ftdiv@f3:	
  4278                           
  4279                           ; 3 bytes @ 0x2F
  4280  004F                     	ds	3
  4281  0052                     ___ftdiv@exp:	
  4282                           
  4283                           ; 1 bytes @ 0x32
  4284  0052                     	ds	1
  4285  0053                     ___ftdiv@sign:	
  4286                           
  4287                           ; 1 bytes @ 0x33
  4288  0053                     	ds	1
  4289  0054                     ??_read_MCP9700A:	
  4290                           
  4291                           ; 1 bytes @ 0x34
  4292  0054                     	ds	1
  4293  0055                     _read_MCP9700A$1110:	
  4294                           
  4295                           ; 3 bytes @ 0x35
  4296  0055                     	ds	3
  4297  0058                     _read_MCP9700A$1111:	
  4298                           
  4299                           ; 3 bytes @ 0x38
  4300  0058                     	ds	3
  4301  005B                     ??_main:	
  4302                           
  4303                           ; 1 bytes @ 0x3B
  4304  005B                     	ds	3
  4305                           
  4306                           	psect	maintext
  4307  0033                     __pmaintext:	
  4308 ;;
  4309 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  4310 ;;
  4311 ;; *************** function _main *****************
  4312 ;; Defined at:
  4313 ;;		line 110 in file "main.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : B1F/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4328 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4329 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4330 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4331 ;;Total ram usage:        6 bytes
  4332 ;; Hardware stack levels required when called:    8
  4333 ;; This function calls:
  4334 ;;		_ADCC_GetSingleConversion
  4335 ;;		_ADCC_Initialize
  4336 ;;		_ADCC_IsConversionDone
  4337 ;;		_ADCC_StartConversion
  4338 ;;		_SYSTEM_Initialize
  4339 ;;		___ftdiv
  4340 ;;		___ftge
  4341 ;;		___ftmul
  4342 ;;		___ftsub
  4343 ;;		___fttol
  4344 ;;		___lwtoft
  4345 ;;		_debounce_sw
  4346 ;;		_decToBcd
  4347 ;;		_delay_us
  4348 ;;		_display_digit
  4349 ;;		_eeprom_read
  4350 ;;		_eeprom_write
  4351 ;;		_read_MCP9700A
  4352 ;;		_read_encoder
  4353 ;;		_round
  4354 ;; This function is called by:
  4355 ;;		Startup code after reset
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function _main
  4361  0033                     _main:	
  4362                           
  4363                           ;main.c: 113: SYSTEM_Initialize();
  4364                           
  4365                           ;incstack = 0
  4366                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4367  0033  318D  2502  3180   	fcall	_SYSTEM_Initialize
  4368                           
  4369                           ;main.c: 119: (INTCONbits.GIE = 1);
  4370  0036  178B               	bsf	11,7	;volatile
  4371                           
  4372                           ;main.c: 122: (INTCONbits.PEIE = 1);
  4373  0037  170B               	bsf	11,6	;volatile
  4374                           
  4375                           ;main.c: 130: ADCC_Initialize();
  4376  0038  318D  256E  3180   	fcall	_ADCC_Initialize
  4377                           
  4378                           ;main.c: 132: delay_us();
  4379  003B  318C  24F4  3180   	fcall	_delay_us
  4380                           
  4381                           ;main.c: 133: avg = (float) ADCC_GetSingleConversion(MCP9700A);
  4382  003E  300D               	movlw	13
  4383  003F  318D  2511  3180   	fcall	_ADCC_GetSingleConversion
  4384  0042  0872               	movf	?_ADCC_GetSingleConversion+1,w
  4385  0043  00FA               	movwf	___lwtoft@c+1
  4386  0044  0871               	movf	?_ADCC_GetSingleConversion,w
  4387  0045  00F9               	movwf	___lwtoft@c
  4388  0046  318D  2545  3180   	fcall	___lwtoft
  4389  0049  0879               	movf	?___lwtoft,w
  4390  004A  0020               	movlb	0	; select bank0
  4391  004B  00DE               	movwf	_avg
  4392  004C  087A               	movf	?___lwtoft+1,w
  4393  004D  00DF               	movwf	_avg+1
  4394  004E  087B               	movf	?___lwtoft+2,w
  4395  004F  00E0               	movwf	_avg+2
  4396                           
  4397                           ;main.c: 135: avg /= 10.0;
  4398  0050  3000               	movlw	0
  4399  0051  00C4               	movwf	___ftdiv@f2
  4400  0052  3020               	movlw	32
  4401  0053  00C5               	movwf	___ftdiv@f2+1
  4402  0054  3041               	movlw	65
  4403  0055  00C6               	movwf	___ftdiv@f2+2
  4404  0056  085E               	movf	_avg,w
  4405  0057  00C7               	movwf	___ftdiv@f1
  4406  0058  085F               	movf	_avg+1,w
  4407  0059  00C8               	movwf	___ftdiv@f1+1
  4408  005A  0860               	movf	_avg+2,w
  4409  005B  00C9               	movwf	___ftdiv@f1+2
  4410  005C  3185  25E9  3180   	fcall	___ftdiv
  4411  005F  0020               	movlb	0	; select bank0
  4412  0060  0844               	movf	?___ftdiv,w
  4413  0061  00DE               	movwf	_avg
  4414  0062  0845               	movf	?___ftdiv+1,w
  4415  0063  00DF               	movwf	_avg+1
  4416  0064  0846               	movf	?___ftdiv+2,w
  4417  0065  00E0               	movwf	_avg+2
  4418                           
  4419                           ;main.c: 136: avg *= 9.0;
  4420  0066  3000               	movlw	0
  4421  0067  00A0               	movwf	___ftmul@f1
  4422  0068  3010               	movlw	16
  4423  0069  00A1               	movwf	___ftmul@f1+1
  4424  006A  3041               	movlw	65
  4425  006B  00A2               	movwf	___ftmul@f1+2
  4426  006C  085E               	movf	_avg,w
  4427  006D  00A3               	movwf	___ftmul@f2
  4428  006E  085F               	movf	_avg+1,w
  4429  006F  00A4               	movwf	___ftmul@f2+1
  4430  0070  0860               	movf	_avg+2,w
  4431  0071  00A5               	movwf	___ftmul@f2+2
  4432  0072  3185  2535  3180   	fcall	___ftmul
  4433  0075  0020               	movlb	0	; select bank0
  4434  0076  0820               	movf	?___ftmul,w
  4435  0077  00DE               	movwf	_avg
  4436  0078  0821               	movf	?___ftmul+1,w
  4437  0079  00DF               	movwf	_avg+1
  4438  007A  0822               	movf	?___ftmul+2,w
  4439  007B  00E0               	movwf	_avg+2
  4440                           
  4441                           ;main.c: 137: avg /=5.0;
  4442  007C  3000               	movlw	0
  4443  007D  00C4               	movwf	___ftdiv@f2
  4444  007E  30A0               	movlw	160
  4445  007F  00C5               	movwf	___ftdiv@f2+1
  4446  0080  3040               	movlw	64
  4447  0081  00C6               	movwf	___ftdiv@f2+2
  4448  0082  085E               	movf	_avg,w
  4449  0083  00C7               	movwf	___ftdiv@f1
  4450  0084  085F               	movf	_avg+1,w
  4451  0085  00C8               	movwf	___ftdiv@f1+1
  4452  0086  0860               	movf	_avg+2,w
  4453  0087  00C9               	movwf	___ftdiv@f1+2
  4454  0088  3185  25E9  3180   	fcall	___ftdiv
  4455  008B  0020               	movlb	0	; select bank0
  4456  008C  0844               	movf	?___ftdiv,w
  4457  008D  00DE               	movwf	_avg
  4458  008E  0845               	movf	?___ftdiv+1,w
  4459  008F  00DF               	movwf	_avg+1
  4460  0090  0846               	movf	?___ftdiv+2,w
  4461  0091  00E0               	movwf	_avg+2
  4462                           
  4463                           ;main.c: 138: avg -= 58.0;
  4464  0092  3000               	movlw	0
  4465  0093  00C4               	movwf	___ftsub@f2
  4466  0094  3068               	movlw	104
  4467  0095  00C5               	movwf	___ftsub@f2+1
  4468  0096  3042               	movlw	66
  4469  0097  00C6               	movwf	___ftsub@f2+2
  4470  0098  085E               	movf	_avg,w
  4471  0099  00C7               	movwf	___ftsub@f1
  4472  009A  085F               	movf	_avg+1,w
  4473  009B  00C8               	movwf	___ftsub@f1+1
  4474  009C  0860               	movf	_avg+2,w
  4475  009D  00C9               	movwf	___ftsub@f1+2
  4476  009E  318D  258C  3180   	fcall	___ftsub
  4477  00A1  0020               	movlb	0	; select bank0
  4478  00A2  0844               	movf	?___ftsub,w
  4479  00A3  00DE               	movwf	_avg
  4480  00A4  0845               	movf	?___ftsub+1,w
  4481  00A5  00DF               	movwf	_avg+1
  4482  00A6  0846               	movf	?___ftsub+2,w
  4483  00A7  00E0               	movwf	_avg+2
  4484                           
  4485                           ;main.c: 141: spv = avg;
  4486  00A8  085E               	movf	_avg,w
  4487  00A9  00E1               	movwf	_spv
  4488  00AA  085F               	movf	_avg+1,w
  4489  00AB  00E2               	movwf	_spv+1
  4490  00AC  0860               	movf	_avg+2,w
  4491  00AD  00E3               	movwf	_spv+2
  4492                           
  4493                           ;main.c: 142: if(spv < 0.0)
  4494  00AE  0861               	movf	_spv,w
  4495  00AF  00F1               	movwf	___ftge@ff1
  4496  00B0  0862               	movf	_spv+1,w
  4497  00B1  00F2               	movwf	___ftge@ff1+1
  4498  00B2  0863               	movf	_spv+2,w
  4499  00B3  00F3               	movwf	___ftge@ff1+2
  4500  00B4  3000               	movlw	0
  4501  00B5  00F4               	movwf	___ftge@ff2
  4502  00B6  3000               	movlw	0
  4503  00B7  00F5               	movwf	___ftge@ff2+1
  4504  00B8  3000               	movlw	0
  4505  00B9  00F6               	movwf	___ftge@ff2+2
  4506  00BA  318E  2660  3180   	fcall	___ftge
  4507  00BD  1803               	btfsc	3,0
  4508  00BE  28C6               	goto	l3413
  4509                           
  4510                           ;main.c: 143: spv = 0.0;
  4511  00BF  3000               	movlw	0
  4512  00C0  0020               	movlb	0	; select bank0
  4513  00C1  00E1               	movwf	_spv
  4514  00C2  3000               	movlw	0
  4515  00C3  00E2               	movwf	_spv+1
  4516  00C4  3000               	movlw	0
  4517  00C5  00E3               	movwf	_spv+2
  4518  00C6                     l3413:	
  4519                           
  4520                           ;main.c: 144: if(spv > 200.0)
  4521  00C6  3000               	movlw	0
  4522  00C7  00F1               	movwf	___ftge@ff1
  4523  00C8  3048               	movlw	72
  4524  00C9  00F2               	movwf	___ftge@ff1+1
  4525  00CA  3043               	movlw	67
  4526  00CB  00F3               	movwf	___ftge@ff1+2
  4527  00CC  0020               	movlb	0	; select bank0
  4528  00CD  0861               	movf	_spv,w
  4529  00CE  00F4               	movwf	___ftge@ff2
  4530  00CF  0862               	movf	_spv+1,w
  4531  00D0  00F5               	movwf	___ftge@ff2+1
  4532  00D1  0863               	movf	_spv+2,w
  4533  00D2  00F6               	movwf	___ftge@ff2+2
  4534  00D3  318E  2660  3180   	fcall	___ftge
  4535  00D6  1803               	btfsc	3,0
  4536  00D7  28DF               	goto	l3417
  4537                           
  4538                           ;main.c: 145: spv = 200.0;
  4539  00D8  3000               	movlw	0
  4540  00D9  0020               	movlb	0	; select bank0
  4541  00DA  00E1               	movwf	_spv
  4542  00DB  3048               	movlw	72
  4543  00DC  00E2               	movwf	_spv+1
  4544  00DD  3043               	movlw	67
  4545  00DE  00E3               	movwf	_spv+2
  4546  00DF                     l3417:	
  4547                           
  4548                           ;main.c: 146: if(spv > 99.0)
  4549  00DF  3000               	movlw	0
  4550  00E0  00F1               	movwf	___ftge@ff1
  4551  00E1  30C6               	movlw	198
  4552  00E2  00F2               	movwf	___ftge@ff1+1
  4553  00E3  3042               	movlw	66
  4554  00E4  00F3               	movwf	___ftge@ff1+2
  4555  00E5  0020               	movlb	0	; select bank0
  4556  00E6  0861               	movf	_spv,w
  4557  00E7  00F4               	movwf	___ftge@ff2
  4558  00E8  0862               	movf	_spv+1,w
  4559  00E9  00F5               	movwf	___ftge@ff2+1
  4560  00EA  0863               	movf	_spv+2,w
  4561  00EB  00F6               	movwf	___ftge@ff2+2
  4562  00EC  318E  2660  3180   	fcall	___ftge
  4563  00EF  1803               	btfsc	3,0
  4564  00F0  2908               	goto	l3421
  4565                           
  4566                           ;main.c: 147: spv -= 100.0;
  4567  00F1  3000               	movlw	0
  4568  00F2  0020               	movlb	0	; select bank0
  4569  00F3  00C4               	movwf	___ftsub@f2
  4570  00F4  30C8               	movlw	200
  4571  00F5  00C5               	movwf	___ftsub@f2+1
  4572  00F6  3042               	movlw	66
  4573  00F7  00C6               	movwf	___ftsub@f2+2
  4574  00F8  0861               	movf	_spv,w
  4575  00F9  00C7               	movwf	___ftsub@f1
  4576  00FA  0862               	movf	_spv+1,w
  4577  00FB  00C8               	movwf	___ftsub@f1+1
  4578  00FC  0863               	movf	_spv+2,w
  4579  00FD  00C9               	movwf	___ftsub@f1+2
  4580  00FE  318D  258C  3180   	fcall	___ftsub
  4581  0101  0020               	movlb	0	; select bank0
  4582  0102  0844               	movf	?___ftsub,w
  4583  0103  00E1               	movwf	_spv
  4584  0104  0845               	movf	?___ftsub+1,w
  4585  0105  00E2               	movwf	_spv+1
  4586  0106  0846               	movf	?___ftsub+2,w
  4587  0107  00E3               	movwf	_spv+2
  4588  0108                     l3421:	
  4589                           
  4590                           ;main.c: 148: temp = (byte) round(spv);
  4591  0108  0020               	movlb	0	; select bank0
  4592  0109  0861               	movf	_spv,w
  4593  010A  00C4               	movwf	round@x
  4594  010B  0862               	movf	_spv+1,w
  4595  010C  00C5               	movwf	round@x+1
  4596  010D  0863               	movf	_spv+2,w
  4597  010E  00C6               	movwf	round@x+2
  4598  010F  318F  27AF  3180   	fcall	_round
  4599  0112  0020               	movlb	0	; select bank0
  4600  0113  0844               	movf	?_round,w
  4601  0114  0021               	movlb	1	; select bank1
  4602  0115  00B3               	movwf	_main$1109^(0+128)
  4603  0116  0020               	movlb	0	; select bank0
  4604  0117  0845               	movf	?_round+1,w
  4605  0118  0021               	movlb	1	; select bank1
  4606  0119  00B4               	movwf	(_main$1109+1)^(0+128)
  4607  011A  0020               	movlb	0	; select bank0
  4608  011B  0846               	movf	?_round+2,w
  4609  011C  0021               	movlb	1	; select bank1
  4610  011D  00B5               	movwf	(_main$1109+2)^(0+128)
  4611                           
  4612                           ;main.c: 148: temp = (byte) round(spv);
  4613  011E  0833               	movf	_main$1109^(0+128),w
  4614  011F  00F1               	movwf	___fttol@f1
  4615  0120  0834               	movf	(_main$1109+1)^(0+128),w
  4616  0121  00F2               	movwf	___fttol@f1+1
  4617  0122  0835               	movf	(_main$1109+2)^(0+128),w
  4618  0123  00F3               	movwf	___fttol@f1+2
  4619  0124  3186  2692  3180   	fcall	___fttol
  4620  0127  0871               	movf	?___fttol,w
  4621  0128  0020               	movlb	0	; select bank0
  4622  0129  00DB               	movwf	??_main
  4623  012A  085B               	movf	??_main,w
  4624  012B  00ED               	movwf	_temp
  4625                           
  4626                           ;main.c: 151: setpoint = eeprom_read(0x00);
  4627  012C  3000               	movlw	0
  4628  012D  318C  24E7  3180   	fcall	_eeprom_read
  4629  0130  0020               	movlb	0	; select bank0
  4630  0131  00DB               	movwf	??_main
  4631  0132  085B               	movf	??_main,w
  4632  0133  00EC               	movwf	_setpoint
  4633                           
  4634                           ;main.c: 154: encoder_Pin_A_Last = 1;
  4635  0134  01E6               	clrf	_encoder_Pin_A_Last
  4636  0135  0AE6               	incf	_encoder_Pin_A_Last,f
  4637                           
  4638                           ;main.c: 155: n = 0;
  4639  0136  01FC               	clrf	_n
  4640                           
  4641                           ;main.c: 156: encoder_pos = encoder_pos_old = 50;
  4642  0137  3032               	movlw	50
  4643  0138  00E8               	movwf	_encoder_pos_old
  4644  0139  00DB               	movwf	??_main
  4645  013A  085B               	movf	??_main,w
  4646  013B  00E7               	movwf	_encoder_pos
  4647                           
  4648                           ;main.c: 157: millis = seconds = 0;
  4649  013C  0021               	movlb	1	; select bank1
  4650  013D  01A9               	clrf	_seconds^(0+128)
  4651  013E  01AA               	clrf	(_seconds+1)^(0+128)
  4652  013F  01A7               	clrf	_millis^(0+128)
  4653  0140  01A8               	clrf	(_millis+1)^(0+128)
  4654                           
  4655                           ;main.c: 158: LED_blue_flg = bypass_flg = relay_on_flg = done_reading_ADDC_flg = 0;
  4656  0141  01AD               	clrf	_done_reading_ADDC_flg^(0+128)
  4657  0142  0020               	movlb	0	; select bank0
  4658  0143  01EB               	clrf	_relay_on_flg
  4659  0144  01E4               	clrf	_bypass_flg
  4660  0145  0021               	movlb	1	; select bank1
  4661  0146  01AB               	clrf	_LED_blue_flg^(0+128)
  4662                           
  4663                           ;main.c: 159: dsply_sp_flg = getting_new_sp_flg = getting_new_sp_tmr = 0;
  4664  0147  01AF               	clrf	_getting_new_sp_tmr^(0+128)
  4665  0148  0020               	movlb	0	; select bank0
  4666  0149  01E9               	clrf	_getting_new_sp_flg
  4667  014A  01E5               	clrf	_dsply_sp_flg
  4668                           
  4669                           ;main.c: 160: dsply_sp_tmr = bypass_tmr = 0;
  4670  014B  0021               	movlb	1	; select bank1
  4671  014C  01AC               	clrf	_bypass_tmr^(0+128)
  4672  014D  01AE               	clrf	_dsply_sp_tmr^(0+128)
  4673                           
  4674                           ;main.c: 161: heater_min_on_tmr = heater_max_on_tmr = heater_rest_tmr = 0;
  4675  014E  01B2               	clrf	_heater_rest_tmr^(0+128)
  4676  014F  01B0               	clrf	_heater_max_on_tmr^(0+128)
  4677  0150  01B1               	clrf	_heater_min_on_tmr^(0+128)
  4678  0151                     l3443:	
  4679                           ;main.c: 163: while(1){
  4680                           
  4681                           
  4682                           ;main.c: 166: read_encoder();
  4683  0151  318D  25F8  3180   	fcall	_read_encoder
  4684                           
  4685                           ;main.c: 167: if((encoder_pos != encoder_pos_old) && !dsply_sp_flg)
  4686  0154  0020               	movlb	0	; select bank0
  4687  0155  0867               	movf	_encoder_pos,w
  4688  0156  0668               	xorwf	_encoder_pos_old,w
  4689  0157  1903               	skipnz
  4690  0158  295E               	goto	l3451
  4691  0159  0865               	movf	_dsply_sp_flg,w
  4692  015A  1D03               	btfss	3,2
  4693  015B  295E               	goto	l3451
  4694                           
  4695                           ;main.c: 168: getting_new_sp_flg = 1;
  4696  015C  01E9               	clrf	_getting_new_sp_flg
  4697  015D  0AE9               	incf	_getting_new_sp_flg,f
  4698  015E                     l3451:	
  4699                           
  4700                           ;main.c: 170: if(getting_new_sp_flg && (encoder_pos != encoder_pos_old)){
  4701  015E  0869               	movf	_getting_new_sp_flg,w
  4702  015F  1903               	btfsc	3,2
  4703  0160  296C               	goto	l3459
  4704  0161  0867               	movf	_encoder_pos,w
  4705  0162  0668               	xorwf	_encoder_pos_old,w
  4706  0163  1903               	skipnz
  4707  0164  296C               	goto	l3459
  4708                           
  4709                           ;main.c: 171: getting_new_sp_tmr = 0;
  4710  0165  0021               	movlb	1	; select bank1
  4711  0166  01AF               	clrf	_getting_new_sp_tmr^(0+128)
  4712                           
  4713                           ;main.c: 172: encoder_pos_old = encoder_pos;
  4714  0167  0020               	movlb	0	; select bank0
  4715  0168  0867               	movf	_encoder_pos,w
  4716  0169  00DB               	movwf	??_main
  4717  016A  085B               	movf	??_main,w
  4718  016B  00E8               	movwf	_encoder_pos_old
  4719  016C                     l3459:	
  4720                           
  4721                           ;main.c: 173: }
  4722                           ;main.c: 176: if(getting_new_sp_flg && !debounce_sw(PORTCbits.RC3)){
  4723  016C  0869               	movf	_getting_new_sp_flg,w
  4724  016D  1903               	btfsc	3,2
  4725  016E  2992               	goto	l3477
  4726  016F  0C0E               	rrf	14,w	;volatile
  4727  0170  00DB               	movwf	??_main
  4728  0171  0CDB               	rrf	??_main,f
  4729  0172  0C5B               	rrf	??_main,w
  4730  0173  3901               	andlw	1
  4731  0174  318D  2533  3180   	fcall	_debounce_sw
  4732  0177  3A00               	xorlw	0
  4733  0178  1D03               	skipz
  4734  0179  2992               	goto	l3477
  4735                           
  4736                           ;main.c: 178: setpoint = encoder_pos;
  4737  017A  0020               	movlb	0	; select bank0
  4738  017B  0867               	movf	_encoder_pos,w
  4739  017C  00DB               	movwf	??_main
  4740  017D  085B               	movf	??_main,w
  4741  017E  00EC               	movwf	_setpoint
  4742                           
  4743                           ;main.c: 179: getting_new_sp_flg = 0;
  4744  017F  01E9               	clrf	_getting_new_sp_flg
  4745                           
  4746                           ;main.c: 180: bypass_flg = 0;
  4747  0180  01E4               	clrf	_bypass_flg
  4748                           
  4749                           ;main.c: 181: eeprom_write(0x00, setpoint);
  4750  0181  086C               	movf	_setpoint,w
  4751  0182  00DB               	movwf	??_main
  4752  0183  085B               	movf	??_main,w
  4753  0184  00F1               	movwf	eeprom_write@value
  4754  0185  3000               	movlw	0
  4755  0186  318D  25AA  3180   	fcall	_eeprom_write
  4756                           
  4757                           ;main.c: 182: encoder_pos_old = encoder_pos;
  4758  0189  0020               	movlb	0	; select bank0
  4759  018A  0867               	movf	_encoder_pos,w
  4760  018B  00DB               	movwf	??_main
  4761  018C  085B               	movf	??_main,w
  4762  018D  00E8               	movwf	_encoder_pos_old
  4763                           
  4764                           ;main.c: 183: dsply_sp_flg = 1;
  4765  018E  01E5               	clrf	_dsply_sp_flg
  4766  018F  0AE5               	incf	_dsply_sp_flg,f
  4767                           
  4768                           ;main.c: 184: dsply_sp_tmr = 0;
  4769  0190  0021               	movlb	1	; select bank1
  4770  0191  01AE               	clrf	_dsply_sp_tmr^(0+128)
  4771  0192                     l3477:	
  4772                           
  4773                           ;main.c: 185: }
  4774                           ;main.c: 188: if(!getting_new_sp_flg && !debounce_sw(PORTCbits.RC3)){
  4775  0192  0020               	movlb	0	; select bank0
  4776  0193  0869               	movf	_getting_new_sp_flg,w
  4777  0194  1D03               	btfss	3,2
  4778  0195  29AB               	goto	l3487
  4779  0196  0C0E               	rrf	14,w	;volatile
  4780  0197  00DB               	movwf	??_main
  4781  0198  0CDB               	rrf	??_main,f
  4782  0199  0C5B               	rrf	??_main,w
  4783  019A  3901               	andlw	1
  4784  019B  318D  2533  3180   	fcall	_debounce_sw
  4785  019E  3A00               	xorlw	0
  4786  019F  1D03               	skipz
  4787  01A0  29AB               	goto	l3487
  4788                           
  4789                           ;main.c: 190: dsply_sp_flg = 1;
  4790  01A1  0020               	movlb	0	; select bank0
  4791  01A2  01E5               	clrf	_dsply_sp_flg
  4792  01A3  0AE5               	incf	_dsply_sp_flg,f
  4793                           
  4794                           ;main.c: 191: dsply_sp_tmr = 0;
  4795  01A4  0021               	movlb	1	; select bank1
  4796  01A5  01AE               	clrf	_dsply_sp_tmr^(0+128)
  4797                           
  4798                           ;main.c: 192: encoder_pos = encoder_pos_old;
  4799  01A6  0020               	movlb	0	; select bank0
  4800  01A7  0868               	movf	_encoder_pos_old,w
  4801  01A8  00DB               	movwf	??_main
  4802  01A9  085B               	movf	??_main,w
  4803  01AA  00E7               	movwf	_encoder_pos
  4804  01AB                     l3487:	
  4805                           
  4806                           ;main.c: 193: }
  4807                           ;main.c: 196: if(dsply_sp_flg && dsply_sp_tmr > 3){
  4808  01AB  0020               	movlb	0	; select bank0
  4809  01AC  0865               	movf	_dsply_sp_flg,w
  4810  01AD  1903               	btfsc	3,2
  4811  01AE  29B8               	goto	l3493
  4812  01AF  3004               	movlw	4
  4813  01B0  0021               	movlb	1	; select bank1
  4814  01B1  022E               	subwf	_dsply_sp_tmr^(0+128),w
  4815  01B2  1C03               	skipc
  4816  01B3  29B8               	goto	l3493
  4817                           
  4818                           ;main.c: 197: dsply_sp_flg = 0;
  4819  01B4  0020               	movlb	0	; select bank0
  4820  01B5  01E5               	clrf	_dsply_sp_flg
  4821                           
  4822                           ;main.c: 198: dsply_sp_tmr = 0;
  4823  01B6  0021               	movlb	1	; select bank1
  4824  01B7  01AE               	clrf	_dsply_sp_tmr^(0+128)
  4825  01B8                     l3493:	
  4826                           
  4827                           ;main.c: 199: }
  4828                           ;main.c: 202: if((getting_new_sp_tmr > 5) && getting_new_sp_flg){
  4829  01B8  3006               	movlw	6
  4830  01B9  0021               	movlb	1	; select bank1
  4831  01BA  022F               	subwf	_getting_new_sp_tmr^(0+128),w
  4832  01BB  1C03               	skipc
  4833  01BC  29D5               	goto	l3509
  4834  01BD  0020               	movlb	0	; select bank0
  4835  01BE  0869               	movf	_getting_new_sp_flg,w
  4836  01BF  1903               	btfsc	3,2
  4837  01C0  29D5               	goto	l3509
  4838                           
  4839                           ;main.c: 203: if(encoder_pos != setpoint){
  4840  01C1  0867               	movf	_encoder_pos,w
  4841  01C2  066C               	xorwf	_setpoint,w
  4842  01C3  1903               	skipnz
  4843  01C4  29D1               	goto	l3505
  4844                           
  4845                           ;main.c: 204: bypass_flg = 1;
  4846  01C5  01E4               	clrf	_bypass_flg
  4847  01C6  0AE4               	incf	_bypass_flg,f
  4848                           
  4849                           ;main.c: 205: setpoint = encoder_pos;
  4850  01C7  0867               	movf	_encoder_pos,w
  4851  01C8  00DB               	movwf	??_main
  4852  01C9  085B               	movf	??_main,w
  4853  01CA  00EC               	movwf	_setpoint
  4854                           
  4855                           ;main.c: 206: encoder_pos_old = encoder_pos;
  4856  01CB  0867               	movf	_encoder_pos,w
  4857  01CC  00DB               	movwf	??_main
  4858  01CD  085B               	movf	??_main,w
  4859  01CE  00E8               	movwf	_encoder_pos_old
  4860                           
  4861                           ;main.c: 207: bypass_tmr = 0;
  4862  01CF  0021               	movlb	1	; select bank1
  4863  01D0  01AC               	clrf	_bypass_tmr^(0+128)
  4864  01D1                     l3505:	
  4865                           
  4866                           ;main.c: 208: }
  4867                           ;main.c: 209: getting_new_sp_flg = 0;
  4868  01D1  0020               	movlb	0	; select bank0
  4869  01D2  01E9               	clrf	_getting_new_sp_flg
  4870                           
  4871                           ;main.c: 210: getting_new_sp_tmr = 0;
  4872  01D3  0021               	movlb	1	; select bank1
  4873  01D4  01AF               	clrf	_getting_new_sp_tmr^(0+128)
  4874  01D5                     l3509:	
  4875                           
  4876                           ;main.c: 211: }
  4877                           ;main.c: 214: if(bypass_flg && (bypass_tmr > 5)){
  4878  01D5  0020               	movlb	0	; select bank0
  4879  01D6  0864               	movf	_bypass_flg,w
  4880  01D7  1903               	btfsc	3,2
  4881  01D8  29EF               	goto	l3521
  4882  01D9  3006               	movlw	6
  4883  01DA  0021               	movlb	1	; select bank1
  4884  01DB  022C               	subwf	_bypass_tmr^(0+128),w
  4885  01DC  1C03               	skipc
  4886  01DD  29EF               	goto	l3521
  4887                           
  4888                           ;main.c: 215: bypass_flg = 0;
  4889  01DE  0020               	movlb	0	; select bank0
  4890  01DF  01E4               	clrf	_bypass_flg
  4891                           
  4892                           ;main.c: 216: setpoint = eeprom_read(0x00);
  4893  01E0  3000               	movlw	0
  4894  01E1  318C  24E7  3180   	fcall	_eeprom_read
  4895  01E4  0020               	movlb	0	; select bank0
  4896  01E5  00DB               	movwf	??_main
  4897  01E6  085B               	movf	??_main,w
  4898  01E7  00EC               	movwf	_setpoint
  4899                           
  4900                           ;main.c: 217: encoder_pos_old = encoder_pos = setpoint;
  4901  01E8  086C               	movf	_setpoint,w
  4902  01E9  00E7               	movwf	_encoder_pos
  4903  01EA  00DB               	movwf	??_main
  4904  01EB  085B               	movf	??_main,w
  4905  01EC  00E8               	movwf	_encoder_pos_old
  4906                           
  4907                           ;main.c: 218: bypass_tmr = 0;
  4908  01ED  0021               	movlb	1	; select bank1
  4909  01EE  01AC               	clrf	_bypass_tmr^(0+128)
  4910  01EF                     l3521:	
  4911                           
  4912                           ;main.c: 219: }
  4913                           ;main.c: 222: if(millis > 999){
  4914  01EF  3003               	movlw	3
  4915  01F0  0021               	movlb	1	; select bank1
  4916  01F1  0228               	subwf	(_millis+1)^(0+128),w
  4917  01F2  30E8               	movlw	232
  4918  01F3  1903               	skipnz
  4919  01F4  0227               	subwf	_millis^(0+128),w
  4920  01F5  1C03               	skipc
  4921  01F6  2A2D               	goto	l3549
  4922                           
  4923                           ;main.c: 223: seconds++;
  4924  01F7  3001               	movlw	1
  4925  01F8  07A9               	addwf	_seconds^(0+128),f
  4926  01F9  3000               	movlw	0
  4927  01FA  3DAA               	addwfc	(_seconds+1)^(0+128),f
  4928                           
  4929                           ;main.c: 224: millis = 0;
  4930  01FB  01A7               	clrf	_millis^(0+128)
  4931  01FC  01A8               	clrf	(_millis+1)^(0+128)
  4932                           
  4933                           ;main.c: 225: do { LATCbits.LATC6 = 0; } while(0);
  4934  01FD  0020               	movlb	0	; select bank0
  4935  01FE  1318               	bcf	24,6	;volatile
  4936                           
  4937                           ;main.c: 226: LED_blue_flg = 1;
  4938  01FF  0021               	movlb	1	; select bank1
  4939  0200  01AB               	clrf	_LED_blue_flg^(0+128)
  4940  0201  0AAB               	incf	_LED_blue_flg^(0+128),f
  4941                           
  4942                           ;main.c: 228: if(getting_new_sp_flg)
  4943  0202  0020               	movlb	0	; select bank0
  4944  0203  0869               	movf	_getting_new_sp_flg,w
  4945  0204  1903               	btfsc	3,2
  4946  0205  2A0B               	goto	l104
  4947                           
  4948                           ;main.c: 229: getting_new_sp_tmr++;
  4949  0206  3001               	movlw	1
  4950  0207  00DB               	movwf	??_main
  4951  0208  085B               	movf	??_main,w
  4952  0209  0021               	movlb	1	; select bank1
  4953  020A  07AF               	addwf	_getting_new_sp_tmr^(0+128),f
  4954  020B                     l104:	
  4955                           
  4956                           ;main.c: 230: if(dsply_sp_flg)
  4957  020B  0020               	movlb	0	; select bank0
  4958  020C  0865               	movf	_dsply_sp_flg,w
  4959  020D  1903               	btfsc	3,2
  4960  020E  2A14               	goto	l3537
  4961                           
  4962                           ;main.c: 231: dsply_sp_tmr++;
  4963  020F  3001               	movlw	1
  4964  0210  00DB               	movwf	??_main
  4965  0211  085B               	movf	??_main,w
  4966  0212  0021               	movlb	1	; select bank1
  4967  0213  07AE               	addwf	_dsply_sp_tmr^(0+128),f
  4968  0214                     l3537:	
  4969                           
  4970                           ;main.c: 233: if(seconds > 59){
  4971  0214  3000               	movlw	0
  4972  0215  0021               	movlb	1	; select bank1
  4973  0216  022A               	subwf	(_seconds+1)^(0+128),w
  4974  0217  303C               	movlw	60
  4975  0218  1903               	skipnz
  4976  0219  0229               	subwf	_seconds^(0+128),w
  4977  021A  1C03               	skipc
  4978  021B  2A27               	goto	l3545
  4979                           
  4980                           ;main.c: 234: seconds = 0;
  4981  021C  01A9               	clrf	_seconds^(0+128)
  4982  021D  01AA               	clrf	(_seconds+1)^(0+128)
  4983                           
  4984                           ;main.c: 236: if(bypass_flg)
  4985  021E  0020               	movlb	0	; select bank0
  4986  021F  0864               	movf	_bypass_flg,w
  4987  0220  1903               	btfsc	3,2
  4988  0221  2A27               	goto	l3545
  4989                           
  4990                           ;main.c: 237: bypass_tmr++;
  4991  0222  3001               	movlw	1
  4992  0223  00DB               	movwf	??_main
  4993  0224  085B               	movf	??_main,w
  4994  0225  0021               	movlb	1	; select bank1
  4995  0226  07AC               	addwf	_bypass_tmr^(0+128),f
  4996  0227                     l3545:	
  4997                           
  4998                           ;main.c: 238: }
  4999                           ;main.c: 240: ADCC_StartConversion(MCP9700A);
  5000  0227  300D               	movlw	13
  5001  0228  318C  24CE  3180   	fcall	_ADCC_StartConversion
  5002                           
  5003                           ;main.c: 241: done_reading_ADDC_flg = 0;
  5004  022B  0021               	movlb	1	; select bank1
  5005  022C  01AD               	clrf	_done_reading_ADDC_flg^(0+128)
  5006  022D                     l3549:	
  5007                           
  5008                           ;main.c: 242: }
  5009                           ;main.c: 245: if(!getting_new_sp_flg && !dsply_sp_flg){
  5010  022D  0020               	movlb	0	; select bank0
  5011  022E  0869               	movf	_getting_new_sp_flg,w
  5012  022F  1D03               	btfss	3,2
  5013  0230  2A5C               	goto	l3561
  5014  0231  0865               	movf	_dsply_sp_flg,w
  5015  0232  1D03               	btfss	3,2
  5016  0233  2A5C               	goto	l3561
  5017                           
  5018                           ;main.c: 246: if(temp < (setpoint - 1))
  5019  0234  086C               	movf	_setpoint,w
  5020  0235  3EFF               	addlw	255
  5021  0236  00DB               	movwf	??_main
  5022  0237  30FF               	movlw	255
  5023  0238  1803               	skipnc
  5024  0239  3000               	movlw	0
  5025  023A  00DC               	movwf	??_main+1
  5026  023B  085C               	movf	??_main+1,w
  5027  023C  3A80               	xorlw	128
  5028  023D  3C80               	sublw	128
  5029  023E  1D03               	skipz
  5030  023F  2A42               	goto	u4555
  5031  0240  085B               	movf	??_main,w
  5032  0241  026D               	subwf	_temp,w
  5033  0242                     u4555:	
  5034  0242  1803               	skipnc
  5035  0243  2A47               	goto	l3557
  5036                           
  5037                           ;main.c: 247: relay_on_flg = 1;
  5038  0244  0020               	movlb	0	; select bank0
  5039  0245  01EB               	clrf	_relay_on_flg
  5040  0246  0AEB               	incf	_relay_on_flg,f
  5041  0247                     l3557:	
  5042                           
  5043                           ;main.c: 248: if (temp > (setpoint + 1))
  5044  0247  0020               	movlb	0	; select bank0
  5045  0248  086C               	movf	_setpoint,w
  5046  0249  3E01               	addlw	1
  5047  024A  00DB               	movwf	??_main
  5048  024B  3000               	movlw	0
  5049  024C  1803               	skipnc
  5050  024D  3001               	movlw	1
  5051  024E  00DC               	movwf	??_main+1
  5052  024F  085C               	movf	??_main+1,w
  5053  0250  3A80               	xorlw	128
  5054  0251  00DD               	movwf	??_main+2
  5055  0252  3080               	movlw	128
  5056  0253  025D               	subwf	??_main+2,w
  5057  0254  1D03               	skipz
  5058  0255  2A58               	goto	u4565
  5059  0256  086D               	movf	_temp,w
  5060  0257  025B               	subwf	??_main,w
  5061  0258                     u4565:	
  5062  0258  1803               	skipnc
  5063  0259  2A5C               	goto	l3561
  5064                           
  5065                           ;main.c: 249: relay_on_flg = 0;
  5066  025A  0020               	movlb	0	; select bank0
  5067  025B  01EB               	clrf	_relay_on_flg
  5068  025C                     l3561:	
  5069                           
  5070                           ;main.c: 250: }
  5071                           ;main.c: 253: if((millis > 50) && LED_blue_flg){
  5072  025C  3000               	movlw	0
  5073  025D  0021               	movlb	1	; select bank1
  5074  025E  0228               	subwf	(_millis+1)^(0+128),w
  5075  025F  3033               	movlw	51
  5076  0260  1903               	skipnz
  5077  0261  0227               	subwf	_millis^(0+128),w
  5078  0262  1C03               	skipc
  5079  0263  2A6B               	goto	l3567
  5080  0264  082B               	movf	_LED_blue_flg^(0+128),w
  5081  0265  1903               	btfsc	3,2
  5082  0266  2A6B               	goto	l3567
  5083                           
  5084                           ;main.c: 254: do { LATCbits.LATC6 = 1; } while(0);
  5085  0267  0020               	movlb	0	; select bank0
  5086  0268  1718               	bsf	24,6	;volatile
  5087                           
  5088                           ;main.c: 255: LED_blue_flg = 0;
  5089  0269  0021               	movlb	1	; select bank1
  5090  026A  01AB               	clrf	_LED_blue_flg^(0+128)
  5091  026B                     l3567:	
  5092                           
  5093                           ;main.c: 256: }
  5094                           ;main.c: 260: if(ADCC_IsConversionDone() && !done_reading_ADDC_flg){
  5095  026B  318C  24C7  3180   	fcall	_ADCC_IsConversionDone
  5096  026E  3A00               	xorlw	0
  5097  026F  1903               	skipnz
  5098  0270  2A7B               	goto	l3575
  5099  0271  0021               	movlb	1	; select bank1
  5100  0272  082D               	movf	_done_reading_ADDC_flg^(0+128),w
  5101  0273  1D03               	btfss	3,2
  5102  0274  2A7B               	goto	l3575
  5103                           
  5104                           ;main.c: 261: read_MCP9700A();
  5105  0275  3182  22D2  3180   	fcall	_read_MCP9700A
  5106                           
  5107                           ;main.c: 262: done_reading_ADDC_flg = 1;
  5108  0278  0021               	movlb	1	; select bank1
  5109  0279  01AD               	clrf	_done_reading_ADDC_flg^(0+128)
  5110  027A  0AAD               	incf	_done_reading_ADDC_flg^(0+128),f
  5111  027B                     l3575:	
  5112                           
  5113                           ;main.c: 263: }
  5114                           ;main.c: 266: if(relay_on_flg)
  5115  027B  0020               	movlb	0	; select bank0
  5116  027C  086B               	movf	_relay_on_flg,w
  5117  027D  1903               	btfsc	3,2
  5118  027E  2A81               	goto	l119
  5119                           
  5120                           ;main.c: 267: do { LATCbits.LATC5 = 1; } while(0);
  5121  027F  1698               	bsf	24,5	;volatile
  5122  0280  2A82               	goto	l3577
  5123  0281                     l119:	
  5124                           ;main.c: 268: else
  5125                           ;main.c: 269: do { LATCbits.LATC5 = 0; } while(0);
  5126                           
  5127  0281  1298               	bcf	24,5	;volatile
  5128  0282                     l3577:	
  5129                           
  5130                           ;main.c: 272: if(getting_new_sp_flg)
  5131  0282  0869               	movf	_getting_new_sp_flg,w
  5132  0283  1903               	btfsc	3,2
  5133  0284  2A87               	goto	l3581
  5134                           
  5135                           ;main.c: 273: num = decToBcd(encoder_pos);
  5136  0285  0867               	movf	_encoder_pos,w
  5137  0286  2A8D               	goto	L3
  5138  0287                     l3581:	
  5139                           
  5140                           ;main.c: 274: else if(dsply_sp_flg)
  5141  0287  0865               	movf	_dsply_sp_flg,w
  5142  0288  1903               	btfsc	3,2
  5143  0289  2A8C               	goto	l3585
  5144                           
  5145                           ;main.c: 275: num = decToBcd(setpoint);
  5146  028A  086C               	movf	_setpoint,w
  5147  028B  2A8D               	goto	L3
  5148  028C                     l3585:	
  5149                           
  5150                           ;main.c: 276: else
  5151                           ;main.c: 277: num = decToBcd(temp);
  5152  028C  086D               	movf	_temp,w
  5153  028D                     L3:	
  5154  028D  318D  25CA  3180   	fcall	_decToBcd
  5155  0290  0020               	movlb	0	; select bank0
  5156  0291  00DB               	movwf	??_main
  5157  0292  085B               	movf	??_main,w
  5158  0293  00EA               	movwf	_num
  5159                           
  5160                           ;main.c: 278: if((millis & 0x000f) < 8){
  5161  0294  300F               	movlw	15
  5162  0295  0021               	movlb	1	; select bank1
  5163  0296  0527               	andwf	_millis^(0+128),w
  5164  0297  0020               	movlb	0	; select bank0
  5165  0298  00DB               	movwf	??_main
  5166  0299  3000               	movlw	0
  5167  029A  0021               	movlb	1	; select bank1
  5168  029B  0528               	andwf	(_millis+1)^(0+128),w
  5169  029C  0020               	movlb	0	; select bank0
  5170  029D  00DC               	movwf	??_main+1
  5171  029E  3000               	movlw	0
  5172  029F  025C               	subwf	??_main+1,w
  5173  02A0  3008               	movlw	8
  5174  02A1  1903               	skipnz
  5175  02A2  025B               	subwf	??_main,w
  5176  02A3  1803               	skipnc
  5177  02A4  2AB4               	goto	l137
  5178                           
  5179                           ;main.c: 280: do { LATCbits.LATC1 = 0; } while(0);
  5180  02A5  1098               	bcf	24,1	;volatile
  5181                           
  5182                           ;main.c: 281: display_digit(num & 0x0f);
  5183  02A6  086A               	movf	_num,w
  5184  02A7  390F               	andlw	15
  5185  02A8  3187  2719  3180   	fcall	_display_digit
  5186                           
  5187                           ;main.c: 282: do { LATAbits.LATA0 = 1; } while(0);
  5188  02AB  0020               	movlb	0	; select bank0
  5189  02AC  1416               	bsf	22,0	;volatile
  5190                           
  5191                           ;main.c: 283: if(relay_on_flg)
  5192  02AD  086B               	movf	_relay_on_flg,w
  5193  02AE  1903               	btfsc	3,2
  5194  02AF  2AB2               	goto	l134
  5195                           
  5196                           ;main.c: 284: do { LATAbits.LATA1 = 1; } while(0);
  5197  02B0  1496               	bsf	22,1	;volatile
  5198  02B1  2951               	goto	l3443
  5199  02B2                     l134:	
  5200                           ;main.c: 285: else
  5201                           ;main.c: 286: do { LATAbits.LATA1 = 0; } while(0);
  5202                           
  5203  02B2  1096               	bcf	22,1	;volatile
  5204                           
  5205                           ;main.c: 287: }
  5206  02B3  2951               	goto	l3443
  5207  02B4                     l137:	
  5208                           ;main.c: 288: else{
  5209                           ;main.c: 290: do { LATAbits.LATA0 = 0; } while(0);
  5210                           
  5211  02B4  1016               	bcf	22,0	;volatile
  5212                           
  5213                           ;main.c: 291: if(bypass_flg && (millis < 500))
  5214  02B5  0864               	movf	_bypass_flg,w
  5215  02B6  1903               	btfsc	3,2
  5216  02B7  2AC3               	goto	l143
  5217  02B8  3001               	movlw	1
  5218  02B9  0021               	movlb	1	; select bank1
  5219  02BA  0228               	subwf	(_millis+1)^(0+128),w
  5220  02BB  30F4               	movlw	244
  5221  02BC  1903               	skipnz
  5222  02BD  0227               	subwf	_millis^(0+128),w
  5223  02BE  1803               	skipnc
  5224  02BF  2AC3               	goto	l143
  5225                           
  5226                           ;main.c: 292: do { LATAbits.LATA1 = 1; } while(0);
  5227  02C0  0020               	movlb	0	; select bank0
  5228  02C1  1496               	bsf	22,1	;volatile
  5229  02C2  2AC5               	goto	l3599
  5230  02C3                     l143:	
  5231                           ;main.c: 293: else
  5232                           ;main.c: 294: do { LATAbits.LATA1 = 0; } while(0);
  5233                           
  5234  02C3  0020               	movlb	0	; select bank0
  5235  02C4  1096               	bcf	22,1	;volatile
  5236  02C5                     l3599:	
  5237                           
  5238                           ;main.c: 295: display_digit(num >> 4);
  5239  02C5  086A               	movf	_num,w
  5240  02C6  00DB               	movwf	??_main
  5241  02C7  3004               	movlw	4
  5242  02C8                     u4685:	
  5243  02C8  36DB               	lsrf	??_main,f
  5244  02C9  0B89               	decfsz	9,f
  5245  02CA  2AC8               	goto	u4685
  5246  02CB  085B               	movf	??_main,w
  5247  02CC  3187  2719  3180   	fcall	_display_digit
  5248                           
  5249                           ;main.c: 296: do { LATCbits.LATC1 = 1; } while(0);
  5250  02CF  0020               	movlb	0	; select bank0
  5251  02D0  1498               	bsf	24,1	;volatile
  5252  02D1  2951               	goto	l3443
  5253  02D2                     __end_of_main:	
  5254                           
  5255                           	psect	text1
  5256  0DF8                     __ptext1:	
  5257 ;; *************** function _read_encoder *****************
  5258 ;; Defined at:
  5259 ;;		line 366 in file "main.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0, pclath, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;Total ram usage:        1 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    5
  5280 ;; This function calls:
  5281 ;;		_debounce_sw
  5282 ;; This function is called by:
  5283 ;;		_main
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           
  5288                           ;psect for function _read_encoder
  5289  0DF8                     _read_encoder:	
  5290                           
  5291                           ;main.c: 368: n = debounce_sw(PORTCbits.RC2);
  5292                           
  5293                           ;incstack = 0
  5294                           ; Regs used in _read_encoder: [wreg+status,2+status,0+pclath+cstack]
  5295  0DF8  0020               	movlb	0	; select bank0
  5296  0DF9  0C0E               	rrf	14,w	;volatile
  5297  0DFA  0C89               	rrf	9,f
  5298  0DFB  3901               	andlw	1
  5299  0DFC  318D  2533  318D   	fcall	_debounce_sw
  5300  0DFF  00F7               	movwf	??_read_encoder
  5301  0E00  0877               	movf	??_read_encoder,w
  5302  0E01  00FC               	movwf	_n
  5303                           
  5304                           ;main.c: 369: if((encoder_Pin_A_Last == 0) && (n == 1)){
  5305  0E02  0020               	movlb	0	; select bank0
  5306  0E03  0866               	movf	_encoder_Pin_A_Last,w
  5307  0E04  1D03               	btfss	3,2
  5308  0E05  2E1A               	goto	l3329
  5309  0E06  037C               	decf	_n,w
  5310  0E07  1D03               	btfss	3,2
  5311  0E08  2E1A               	goto	l3329
  5312                           
  5313                           ;main.c: 370: if(debounce_sw(PORTCbits.RC4) == 0)
  5314  0E09  0E0E               	swapf	14,w	;volatile
  5315  0E0A  3901               	andlw	1
  5316  0E0B  318D  2533  318D   	fcall	_debounce_sw
  5317  0E0E  3A00               	xorlw	0
  5318  0E0F  1D03               	skipz
  5319  0E10  2E17               	goto	l3327
  5320                           
  5321                           ;main.c: 371: encoder_pos++;
  5322  0E11  3001               	movlw	1
  5323  0E12  00F7               	movwf	??_read_encoder
  5324  0E13  0877               	movf	??_read_encoder,w
  5325  0E14  0020               	movlb	0	; select bank0
  5326  0E15  07E7               	addwf	_encoder_pos,f
  5327  0E16  2E1A               	goto	l3329
  5328  0E17                     l3327:	
  5329                           
  5330                           ;main.c: 372: else
  5331                           ;main.c: 373: encoder_pos--;
  5332  0E17  3001               	movlw	1
  5333  0E18  0020               	movlb	0	; select bank0
  5334  0E19  02E7               	subwf	_encoder_pos,f
  5335  0E1A                     l3329:	
  5336                           
  5337                           ;main.c: 374: }
  5338                           ;main.c: 375: encoder_Pin_A_Last = n;
  5339  0E1A  087C               	movf	_n,w
  5340  0E1B  00F7               	movwf	??_read_encoder
  5341  0E1C  0877               	movf	??_read_encoder,w
  5342  0E1D  00E6               	movwf	_encoder_Pin_A_Last
  5343                           
  5344                           ;main.c: 377: if(encoder_pos > 200)
  5345  0E1E  30C9               	movlw	201
  5346  0E1F  0267               	subwf	_encoder_pos,w
  5347  0E20  1803               	btfsc	3,0
  5348                           
  5349                           ;main.c: 378: encoder_pos = 0;
  5350  0E21  01E7               	clrf	_encoder_pos
  5351                           
  5352                           ;main.c: 379: if(encoder_pos > 99)
  5353  0E22  3064               	movlw	100
  5354  0E23  0267               	subwf	_encoder_pos,w
  5355  0E24  1C03               	skipc
  5356  0E25  0008               	return
  5357                           
  5358                           ;main.c: 380: encoder_pos = 99;
  5359  0E26  3063               	movlw	99
  5360  0E27  00F7               	movwf	??_read_encoder
  5361  0E28  0877               	movf	??_read_encoder,w
  5362  0E29  00E7               	movwf	_encoder_pos
  5363  0E2A  0008               	return
  5364  0E2B                     __end_of_read_encoder:	
  5365                           
  5366                           	psect	text2
  5367  0D33                     __ptext2:	
  5368 ;; *************** function _debounce_sw *****************
  5369 ;; Defined at:
  5370 ;;		line 398 in file "main.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;  port            1    wreg     unsigned char 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  port            1    5[COMMON] unsigned char 
  5375 ;;  sp1             1    6[COMMON] unsigned char 
  5376 ;;  sp2             1    4[COMMON] unsigned char 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      unsigned char 
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0, pclath, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5389 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5390 ;;Total ram usage:        4 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    4
  5393 ;; This function calls:
  5394 ;;		_delay_us
  5395 ;; This function is called by:
  5396 ;;		_main
  5397 ;;		_read_encoder
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           
  5402                           ;psect for function _debounce_sw
  5403  0D33                     _debounce_sw:	
  5404                           
  5405                           ;incstack = 0
  5406                           ; Regs used in _debounce_sw: [wreg+status,2+status,0+pclath+cstack]
  5407                           ;debounce_sw@port stored from wreg
  5408  0D33  00F5               	movwf	debounce_sw@port
  5409  0D34                     l166:	
  5410                           ;main.c: 400: byte sp1, sp2;
  5411                           ;main.c: 401: do{
  5412                           
  5413                           
  5414                           ;main.c: 402: sp1 = port;
  5415  0D34  0875               	movf	debounce_sw@port,w
  5416  0D35  00F3               	movwf	??_debounce_sw
  5417  0D36  0873               	movf	??_debounce_sw,w
  5418  0D37  00F6               	movwf	debounce_sw@sp1
  5419                           
  5420                           ;main.c: 403: delay_us();
  5421  0D38  318C  24F4  318D   	fcall	_delay_us
  5422                           
  5423                           ;main.c: 404: sp2 = port;
  5424  0D3B  0875               	movf	debounce_sw@port,w
  5425  0D3C  00F3               	movwf	??_debounce_sw
  5426  0D3D  0873               	movf	??_debounce_sw,w
  5427  0D3E  00F4               	movwf	debounce_sw@sp2
  5428                           
  5429                           ;main.c: 405: } while(sp1 != sp2);
  5430  0D3F  0876               	movf	debounce_sw@sp1,w
  5431  0D40  0674               	xorwf	debounce_sw@sp2,w
  5432  0D41  1D03               	skipz
  5433  0D42  2D34               	goto	l166
  5434                           
  5435                           ;main.c: 406: return(sp1);
  5436  0D43  0876               	movf	debounce_sw@sp1,w
  5437  0D44  0008               	return
  5438  0D45                     __end_of_debounce_sw:	
  5439                           
  5440                           	psect	text3
  5441  0CF4                     __ptext3:	
  5442 ;; *************** function _delay_us *****************
  5443 ;; Defined at:
  5444 ;;		line 423 in file "main.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  i               2    1[COMMON] unsigned int 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;Total ram usage:        2 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    3
  5465 ;; This function calls:
  5466 ;;		Nothing
  5467 ;; This function is called by:
  5468 ;;		_main
  5469 ;;		_debounce_sw
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           
  5474                           ;psect for function _delay_us
  5475  0CF4                     _delay_us:	
  5476                           
  5477                           ;main.c: 425: word i;
  5478                           ;main.c: 426: for(i = 0;i < 100;i++);
  5479                           
  5480                           ;incstack = 0
  5481                           ; Regs used in _delay_us: [wreg+status,2]
  5482  0CF4  01F1               	clrf	delay_us@i
  5483  0CF5  01F2               	clrf	delay_us@i+1
  5484  0CF6                     L4:	
  5485  0CF6  3000               	movlw	0
  5486  0CF7  0272               	subwf	delay_us@i+1,w
  5487  0CF8  3064               	movlw	100
  5488  0CF9  1903               	skipnz
  5489  0CFA  0271               	subwf	delay_us@i,w
  5490  0CFB  1803               	btfsc	3,0
  5491  0CFC  0008               	return
  5492  0CFD  3001               	movlw	1
  5493  0CFE  07F1               	addwf	delay_us@i,f
  5494  0CFF  3000               	movlw	0
  5495  0D00  3DF2               	addwfc	delay_us@i+1,f
  5496  0D01  2CF6               	goto	L4
  5497  0D02                     __end_of_delay_us:	
  5498                           
  5499                           	psect	text4
  5500  02D2                     __ptext4:	
  5501 ;; *************** function _read_MCP9700A *****************
  5502 ;; Defined at:
  5503 ;;		line 331 in file "main.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5518 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;Total ram usage:        7 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    7
  5524 ;; This function calls:
  5525 ;;		_ADCC_GetConversionResult
  5526 ;;		___ftadd
  5527 ;;		___ftdiv
  5528 ;;		___ftge
  5529 ;;		___ftmul
  5530 ;;		___ftneg
  5531 ;;		___ftsub
  5532 ;;		___fttol
  5533 ;;		___lwtoft
  5534 ;;		_round
  5535 ;; This function is called by:
  5536 ;;		_main
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           
  5541                           ;psect for function _read_MCP9700A
  5542  02D2                     _read_MCP9700A:	
  5543                           
  5544                           ;main.c: 333: ns = (float) ADCC_GetConversionResult();
  5545                           
  5546                           ;incstack = 0
  5547                           ; Regs used in _read_MCP9700A: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5548  02D2  318C  24BB  3182   	fcall	_ADCC_GetConversionResult
  5549  02D5  0872               	movf	?_ADCC_GetConversionResult+1,w
  5550  02D6  00FA               	movwf	___lwtoft@c+1
  5551  02D7  0871               	movf	?_ADCC_GetConversionResult,w
  5552  02D8  00F9               	movwf	___lwtoft@c
  5553  02D9  318D  2545  3182   	fcall	___lwtoft
  5554  02DC  0879               	movf	?___lwtoft,w
  5555  02DD  0021               	movlb	1	; select bank1
  5556  02DE  00A0               	movwf	_ns^(0+128)
  5557  02DF  087A               	movf	?___lwtoft+1,w
  5558  02E0  00A1               	movwf	(_ns+1)^(0+128)
  5559  02E1  087B               	movf	?___lwtoft+2,w
  5560  02E2  00A2               	movwf	(_ns+2)^(0+128)
  5561                           
  5562                           ;main.c: 335: ns /= 10.0;
  5563  02E3  3000               	movlw	0
  5564  02E4  0020               	movlb	0	; select bank0
  5565  02E5  00C4               	movwf	___ftdiv@f2
  5566  02E6  3020               	movlw	32
  5567  02E7  00C5               	movwf	___ftdiv@f2+1
  5568  02E8  3041               	movlw	65
  5569  02E9  00C6               	movwf	___ftdiv@f2+2
  5570  02EA  0021               	movlb	1	; select bank1
  5571  02EB  0820               	movf	_ns^(0+128),w
  5572  02EC  0020               	movlb	0	; select bank0
  5573  02ED  00C7               	movwf	___ftdiv@f1
  5574  02EE  0021               	movlb	1	; select bank1
  5575  02EF  0821               	movf	(_ns+1)^(0+128),w
  5576  02F0  0020               	movlb	0	; select bank0
  5577  02F1  00C8               	movwf	___ftdiv@f1+1
  5578  02F2  0021               	movlb	1	; select bank1
  5579  02F3  0822               	movf	(_ns+2)^(0+128),w
  5580  02F4  0020               	movlb	0	; select bank0
  5581  02F5  00C9               	movwf	___ftdiv@f1+2
  5582  02F6  3185  25E9  3182   	fcall	___ftdiv
  5583  02F9  0020               	movlb	0	; select bank0
  5584  02FA  0844               	movf	?___ftdiv,w
  5585  02FB  0021               	movlb	1	; select bank1
  5586  02FC  00A0               	movwf	_ns^(0+128)
  5587  02FD  0020               	movlb	0	; select bank0
  5588  02FE  0845               	movf	?___ftdiv+1,w
  5589  02FF  0021               	movlb	1	; select bank1
  5590  0300  00A1               	movwf	(_ns+1)^(0+128)
  5591  0301  0020               	movlb	0	; select bank0
  5592  0302  0846               	movf	?___ftdiv+2,w
  5593  0303  0021               	movlb	1	; select bank1
  5594  0304  00A2               	movwf	(_ns+2)^(0+128)
  5595                           
  5596                           ;main.c: 336: ns *= 9.0;
  5597  0305  3000               	movlw	0
  5598  0306  0020               	movlb	0	; select bank0
  5599  0307  00A0               	movwf	___ftmul@f1
  5600  0308  3010               	movlw	16
  5601  0309  00A1               	movwf	___ftmul@f1+1
  5602  030A  3041               	movlw	65
  5603  030B  00A2               	movwf	___ftmul@f1+2
  5604  030C  0021               	movlb	1	; select bank1
  5605  030D  0820               	movf	_ns^(0+128),w
  5606  030E  0020               	movlb	0	; select bank0
  5607  030F  00A3               	movwf	___ftmul@f2
  5608  0310  0021               	movlb	1	; select bank1
  5609  0311  0821               	movf	(_ns+1)^(0+128),w
  5610  0312  0020               	movlb	0	; select bank0
  5611  0313  00A4               	movwf	___ftmul@f2+1
  5612  0314  0021               	movlb	1	; select bank1
  5613  0315  0822               	movf	(_ns+2)^(0+128),w
  5614  0316  0020               	movlb	0	; select bank0
  5615  0317  00A5               	movwf	___ftmul@f2+2
  5616  0318  3185  2535  3182   	fcall	___ftmul
  5617  031B  0020               	movlb	0	; select bank0
  5618  031C  0820               	movf	?___ftmul,w
  5619  031D  0021               	movlb	1	; select bank1
  5620  031E  00A0               	movwf	_ns^(0+128)
  5621  031F  0020               	movlb	0	; select bank0
  5622  0320  0821               	movf	?___ftmul+1,w
  5623  0321  0021               	movlb	1	; select bank1
  5624  0322  00A1               	movwf	(_ns+1)^(0+128)
  5625  0323  0020               	movlb	0	; select bank0
  5626  0324  0822               	movf	?___ftmul+2,w
  5627  0325  0021               	movlb	1	; select bank1
  5628  0326  00A2               	movwf	(_ns+2)^(0+128)
  5629                           
  5630                           ;main.c: 337: ns /= 5.0;
  5631  0327  3000               	movlw	0
  5632  0328  0020               	movlb	0	; select bank0
  5633  0329  00C4               	movwf	___ftdiv@f2
  5634  032A  30A0               	movlw	160
  5635  032B  00C5               	movwf	___ftdiv@f2+1
  5636  032C  3040               	movlw	64
  5637  032D  00C6               	movwf	___ftdiv@f2+2
  5638  032E  0021               	movlb	1	; select bank1
  5639  032F  0820               	movf	_ns^(0+128),w
  5640  0330  0020               	movlb	0	; select bank0
  5641  0331  00C7               	movwf	___ftdiv@f1
  5642  0332  0021               	movlb	1	; select bank1
  5643  0333  0821               	movf	(_ns+1)^(0+128),w
  5644  0334  0020               	movlb	0	; select bank0
  5645  0335  00C8               	movwf	___ftdiv@f1+1
  5646  0336  0021               	movlb	1	; select bank1
  5647  0337  0822               	movf	(_ns+2)^(0+128),w
  5648  0338  0020               	movlb	0	; select bank0
  5649  0339  00C9               	movwf	___ftdiv@f1+2
  5650  033A  3185  25E9  3182   	fcall	___ftdiv
  5651  033D  0020               	movlb	0	; select bank0
  5652  033E  0844               	movf	?___ftdiv,w
  5653  033F  0021               	movlb	1	; select bank1
  5654  0340  00A0               	movwf	_ns^(0+128)
  5655  0341  0020               	movlb	0	; select bank0
  5656  0342  0845               	movf	?___ftdiv+1,w
  5657  0343  0021               	movlb	1	; select bank1
  5658  0344  00A1               	movwf	(_ns+1)^(0+128)
  5659  0345  0020               	movlb	0	; select bank0
  5660  0346  0846               	movf	?___ftdiv+2,w
  5661  0347  0021               	movlb	1	; select bank1
  5662  0348  00A2               	movwf	(_ns+2)^(0+128)
  5663                           
  5664                           ;main.c: 338: ns -= 58.0;
  5665  0349  3000               	movlw	0
  5666  034A  0020               	movlb	0	; select bank0
  5667  034B  00C4               	movwf	___ftsub@f2
  5668  034C  3068               	movlw	104
  5669  034D  00C5               	movwf	___ftsub@f2+1
  5670  034E  3042               	movlw	66
  5671  034F  00C6               	movwf	___ftsub@f2+2
  5672  0350  0021               	movlb	1	; select bank1
  5673  0351  0820               	movf	_ns^(0+128),w
  5674  0352  0020               	movlb	0	; select bank0
  5675  0353  00C7               	movwf	___ftsub@f1
  5676  0354  0021               	movlb	1	; select bank1
  5677  0355  0821               	movf	(_ns+1)^(0+128),w
  5678  0356  0020               	movlb	0	; select bank0
  5679  0357  00C8               	movwf	___ftsub@f1+1
  5680  0358  0021               	movlb	1	; select bank1
  5681  0359  0822               	movf	(_ns+2)^(0+128),w
  5682  035A  0020               	movlb	0	; select bank0
  5683  035B  00C9               	movwf	___ftsub@f1+2
  5684  035C  318D  258C  3182   	fcall	___ftsub
  5685  035F  0020               	movlb	0	; select bank0
  5686  0360  0844               	movf	?___ftsub,w
  5687  0361  0021               	movlb	1	; select bank1
  5688  0362  00A0               	movwf	_ns^(0+128)
  5689  0363  0020               	movlb	0	; select bank0
  5690  0364  0845               	movf	?___ftsub+1,w
  5691  0365  0021               	movlb	1	; select bank1
  5692  0366  00A1               	movwf	(_ns+1)^(0+128)
  5693  0367  0020               	movlb	0	; select bank0
  5694  0368  0846               	movf	?___ftsub+2,w
  5695  0369  0021               	movlb	1	; select bank1
  5696  036A  00A2               	movwf	(_ns+2)^(0+128)
  5697                           
  5698                           ;main.c: 340: avg = avg - (avg - ns)/4.0;
  5699  036B  0820               	movf	_ns^(0+128),w
  5700  036C  0020               	movlb	0	; select bank0
  5701  036D  00B4               	movwf	___ftneg@f1
  5702  036E  0021               	movlb	1	; select bank1
  5703  036F  0821               	movf	(_ns+1)^(0+128),w
  5704  0370  0020               	movlb	0	; select bank0
  5705  0371  00B5               	movwf	___ftneg@f1+1
  5706  0372  0021               	movlb	1	; select bank1
  5707  0373  0822               	movf	(_ns+2)^(0+128),w
  5708  0374  0020               	movlb	0	; select bank0
  5709  0375  00B6               	movwf	___ftneg@f1+2
  5710  0376  318C  24DE  3182   	fcall	___ftneg
  5711  0379  0020               	movlb	0	; select bank0
  5712  037A  0834               	movf	?___ftneg,w
  5713  037B  00BA               	movwf	___ftadd@f2
  5714  037C  0835               	movf	?___ftneg+1,w
  5715  037D  00BB               	movwf	___ftadd@f2+1
  5716  037E  0836               	movf	?___ftneg+2,w
  5717  037F  00BC               	movwf	___ftadd@f2+2
  5718  0380  085E               	movf	_avg,w
  5719  0381  00B7               	movwf	___ftadd@f1
  5720  0382  085F               	movf	_avg+1,w
  5721  0383  00B8               	movwf	___ftadd@f1+1
  5722  0384  0860               	movf	_avg+2,w
  5723  0385  00B9               	movwf	___ftadd@f1+2
  5724  0386  3184  243F  3182   	fcall	___ftadd
  5725  0389  0020               	movlb	0	; select bank0
  5726  038A  0837               	movf	?___ftadd,w
  5727  038B  00C7               	movwf	___ftdiv@f1
  5728  038C  0838               	movf	?___ftadd+1,w
  5729  038D  00C8               	movwf	___ftdiv@f1+1
  5730  038E  0839               	movf	?___ftadd+2,w
  5731  038F  00C9               	movwf	___ftdiv@f1+2
  5732  0390  3000               	movlw	0
  5733  0391  00C4               	movwf	___ftdiv@f2
  5734  0392  3080               	movlw	128
  5735  0393  00C5               	movwf	___ftdiv@f2+1
  5736  0394  3040               	movlw	64
  5737  0395  00C6               	movwf	___ftdiv@f2+2
  5738  0396  3185  25E9  3182   	fcall	___ftdiv
  5739  0399  0020               	movlb	0	; select bank0
  5740  039A  0844               	movf	?___ftdiv,w
  5741  039B  00D5               	movwf	_read_MCP9700A$1110
  5742  039C  0845               	movf	?___ftdiv+1,w
  5743  039D  00D6               	movwf	_read_MCP9700A$1110+1
  5744  039E  0846               	movf	?___ftdiv+2,w
  5745  039F  00D7               	movwf	_read_MCP9700A$1110+2
  5746                           
  5747                           ;main.c: 340: avg = avg - (avg - ns)/4.0;
  5748  03A0  085E               	movf	_avg,w
  5749  03A1  00B7               	movwf	___ftadd@f1
  5750  03A2  085F               	movf	_avg+1,w
  5751  03A3  00B8               	movwf	___ftadd@f1+1
  5752  03A4  0860               	movf	_avg+2,w
  5753  03A5  00B9               	movwf	___ftadd@f1+2
  5754  03A6  0855               	movf	_read_MCP9700A$1110,w
  5755  03A7  00B4               	movwf	___ftneg@f1
  5756  03A8  0856               	movf	_read_MCP9700A$1110+1,w
  5757  03A9  00B5               	movwf	___ftneg@f1+1
  5758  03AA  0857               	movf	_read_MCP9700A$1110+2,w
  5759  03AB  00B6               	movwf	___ftneg@f1+2
  5760  03AC  318C  24DE  3182   	fcall	___ftneg
  5761  03AF  0020               	movlb	0	; select bank0
  5762  03B0  0834               	movf	?___ftneg,w
  5763  03B1  00BA               	movwf	___ftadd@f2
  5764  03B2  0835               	movf	?___ftneg+1,w
  5765  03B3  00BB               	movwf	___ftadd@f2+1
  5766  03B4  0836               	movf	?___ftneg+2,w
  5767  03B5  00BC               	movwf	___ftadd@f2+2
  5768  03B6  3184  243F  3182   	fcall	___ftadd
  5769  03B9  0020               	movlb	0	; select bank0
  5770  03BA  0837               	movf	?___ftadd,w
  5771  03BB  00DE               	movwf	_avg
  5772  03BC  0838               	movf	?___ftadd+1,w
  5773  03BD  00DF               	movwf	_avg+1
  5774  03BE  0839               	movf	?___ftadd+2,w
  5775  03BF  00E0               	movwf	_avg+2
  5776                           
  5777                           ;main.c: 343: spv = avg;
  5778  03C0  085E               	movf	_avg,w
  5779  03C1  00E1               	movwf	_spv
  5780  03C2  085F               	movf	_avg+1,w
  5781  03C3  00E2               	movwf	_spv+1
  5782  03C4  0860               	movf	_avg+2,w
  5783  03C5  00E3               	movwf	_spv+2
  5784                           
  5785                           ;main.c: 344: if(spv < 0.0)
  5786  03C6  0861               	movf	_spv,w
  5787  03C7  00F1               	movwf	___ftge@ff1
  5788  03C8  0862               	movf	_spv+1,w
  5789  03C9  00F2               	movwf	___ftge@ff1+1
  5790  03CA  0863               	movf	_spv+2,w
  5791  03CB  00F3               	movwf	___ftge@ff1+2
  5792  03CC  3000               	movlw	0
  5793  03CD  00F4               	movwf	___ftge@ff2
  5794  03CE  3000               	movlw	0
  5795  03CF  00F5               	movwf	___ftge@ff2+1
  5796  03D0  3000               	movlw	0
  5797  03D1  00F6               	movwf	___ftge@ff2+2
  5798  03D2  318E  2660  3182   	fcall	___ftge
  5799  03D5  1803               	btfsc	3,0
  5800  03D6  2BDE               	goto	l3375
  5801                           
  5802                           ;main.c: 345: spv = 0.0;
  5803  03D7  3000               	movlw	0
  5804  03D8  0020               	movlb	0	; select bank0
  5805  03D9  00E1               	movwf	_spv
  5806  03DA  3000               	movlw	0
  5807  03DB  00E2               	movwf	_spv+1
  5808  03DC  3000               	movlw	0
  5809  03DD  00E3               	movwf	_spv+2
  5810  03DE                     l3375:	
  5811                           
  5812                           ;main.c: 346: if(spv > 200.0)
  5813  03DE  3000               	movlw	0
  5814  03DF  00F1               	movwf	___ftge@ff1
  5815  03E0  3048               	movlw	72
  5816  03E1  00F2               	movwf	___ftge@ff1+1
  5817  03E2  3043               	movlw	67
  5818  03E3  00F3               	movwf	___ftge@ff1+2
  5819  03E4  0020               	movlb	0	; select bank0
  5820  03E5  0861               	movf	_spv,w
  5821  03E6  00F4               	movwf	___ftge@ff2
  5822  03E7  0862               	movf	_spv+1,w
  5823  03E8  00F5               	movwf	___ftge@ff2+1
  5824  03E9  0863               	movf	_spv+2,w
  5825  03EA  00F6               	movwf	___ftge@ff2+2
  5826  03EB  318E  2660  3182   	fcall	___ftge
  5827  03EE  1803               	btfsc	3,0
  5828  03EF  2BF7               	goto	l3379
  5829                           
  5830                           ;main.c: 347: spv = 200.0;
  5831  03F0  3000               	movlw	0
  5832  03F1  0020               	movlb	0	; select bank0
  5833  03F2  00E1               	movwf	_spv
  5834  03F3  3048               	movlw	72
  5835  03F4  00E2               	movwf	_spv+1
  5836  03F5  3043               	movlw	67
  5837  03F6  00E3               	movwf	_spv+2
  5838  03F7                     l3379:	
  5839                           
  5840                           ;main.c: 348: if(spv > 99.0)
  5841  03F7  3000               	movlw	0
  5842  03F8  00F1               	movwf	___ftge@ff1
  5843  03F9  30C6               	movlw	198
  5844  03FA  00F2               	movwf	___ftge@ff1+1
  5845  03FB  3042               	movlw	66
  5846  03FC  00F3               	movwf	___ftge@ff1+2
  5847  03FD  0020               	movlb	0	; select bank0
  5848  03FE  0861               	movf	_spv,w
  5849  03FF  00F4               	movwf	___ftge@ff2
  5850  0400  0862               	movf	_spv+1,w
  5851  0401  00F5               	movwf	___ftge@ff2+1
  5852  0402  0863               	movf	_spv+2,w
  5853  0403  00F6               	movwf	___ftge@ff2+2
  5854  0404  318E  2660  3182   	fcall	___ftge
  5855  0407  1803               	btfsc	3,0
  5856  0408  2C20               	goto	l3383
  5857                           
  5858                           ;main.c: 349: spv -= 100.0;
  5859  0409  3000               	movlw	0
  5860  040A  0020               	movlb	0	; select bank0
  5861  040B  00C4               	movwf	___ftsub@f2
  5862  040C  30C8               	movlw	200
  5863  040D  00C5               	movwf	___ftsub@f2+1
  5864  040E  3042               	movlw	66
  5865  040F  00C6               	movwf	___ftsub@f2+2
  5866  0410  0861               	movf	_spv,w
  5867  0411  00C7               	movwf	___ftsub@f1
  5868  0412  0862               	movf	_spv+1,w
  5869  0413  00C8               	movwf	___ftsub@f1+1
  5870  0414  0863               	movf	_spv+2,w
  5871  0415  00C9               	movwf	___ftsub@f1+2
  5872  0416  318D  258C  3182   	fcall	___ftsub
  5873  0419  0020               	movlb	0	; select bank0
  5874  041A  0844               	movf	?___ftsub,w
  5875  041B  00E1               	movwf	_spv
  5876  041C  0845               	movf	?___ftsub+1,w
  5877  041D  00E2               	movwf	_spv+1
  5878  041E  0846               	movf	?___ftsub+2,w
  5879  041F  00E3               	movwf	_spv+2
  5880  0420                     l3383:	
  5881                           
  5882                           ;main.c: 351: temp = (byte) round(spv);
  5883  0420  0020               	movlb	0	; select bank0
  5884  0421  0861               	movf	_spv,w
  5885  0422  00C4               	movwf	round@x
  5886  0423  0862               	movf	_spv+1,w
  5887  0424  00C5               	movwf	round@x+1
  5888  0425  0863               	movf	_spv+2,w
  5889  0426  00C6               	movwf	round@x+2
  5890  0427  318F  27AF  3182   	fcall	_round
  5891  042A  0020               	movlb	0	; select bank0
  5892  042B  0844               	movf	?_round,w
  5893  042C  00D8               	movwf	_read_MCP9700A$1111
  5894  042D  0845               	movf	?_round+1,w
  5895  042E  00D9               	movwf	_read_MCP9700A$1111+1
  5896  042F  0846               	movf	?_round+2,w
  5897  0430  00DA               	movwf	_read_MCP9700A$1111+2
  5898                           
  5899                           ;main.c: 351: temp = (byte) round(spv);
  5900  0431  0858               	movf	_read_MCP9700A$1111,w
  5901  0432  00F1               	movwf	___fttol@f1
  5902  0433  0859               	movf	_read_MCP9700A$1111+1,w
  5903  0434  00F2               	movwf	___fttol@f1+1
  5904  0435  085A               	movf	_read_MCP9700A$1111+2,w
  5905  0436  00F3               	movwf	___fttol@f1+2
  5906  0437  3186  2692         	fcall	___fttol
  5907  0439  0871               	movf	?___fttol,w
  5908  043A  0020               	movlb	0	; select bank0
  5909  043B  00D4               	movwf	??_read_MCP9700A
  5910  043C  0854               	movf	??_read_MCP9700A,w
  5911  043D  00ED               	movwf	_temp
  5912  043E  0008               	return
  5913  043F                     __end_of_read_MCP9700A:	
  5914                           
  5915                           	psect	text5
  5916  0FAF                     __ptext5:	
  5917 ;; *************** function _round *****************
  5918 ;; Defined at:
  5919 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\round.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  x               3   36[BANK0 ] void 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  f               3   39[BANK0 ] void 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  3   36[BANK0 ] void 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5933 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;Total ram usage:        6 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    6
  5940 ;; This function calls:
  5941 ;;		___ftadd
  5942 ;;		___ftneg
  5943 ;;		_trunc
  5944 ;; This function is called by:
  5945 ;;		_main
  5946 ;;		_read_MCP9700A
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           
  5951                           ;psect for function _round
  5952  0FAF                     _round:	
  5953                           
  5954                           ;incstack = 0
  5955                           ; Regs used in _round: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5956  0FAF  0020               	movlb	0	; select bank0
  5957  0FB0  0844               	movf	round@x,w
  5958  0FB1  00B7               	movwf	___ftadd@f1
  5959  0FB2  0845               	movf	round@x+1,w
  5960  0FB3  00B8               	movwf	___ftadd@f1+1
  5961  0FB4  0846               	movf	round@x+2,w
  5962  0FB5  00B9               	movwf	___ftadd@f1+2
  5963  0FB6  0844               	movf	round@x,w
  5964  0FB7  00AC               	movwf	trunc@x
  5965  0FB8  0845               	movf	round@x+1,w
  5966  0FB9  00AD               	movwf	trunc@x+1
  5967  0FBA  0846               	movf	round@x+2,w
  5968  0FBB  00AE               	movwf	trunc@x+2
  5969  0FBC  318E  26D8  318F   	fcall	_trunc
  5970  0FBF  0020               	movlb	0	; select bank0
  5971  0FC0  082C               	movf	?_trunc,w
  5972  0FC1  00B4               	movwf	___ftneg@f1
  5973  0FC2  082D               	movf	?_trunc+1,w
  5974  0FC3  00B5               	movwf	___ftneg@f1+1
  5975  0FC4  082E               	movf	?_trunc+2,w
  5976  0FC5  00B6               	movwf	___ftneg@f1+2
  5977  0FC6  318C  24DE  318F   	fcall	___ftneg
  5978  0FC9  0020               	movlb	0	; select bank0
  5979  0FCA  0834               	movf	?___ftneg,w
  5980  0FCB  00BA               	movwf	___ftadd@f2
  5981  0FCC  0835               	movf	?___ftneg+1,w
  5982  0FCD  00BB               	movwf	___ftadd@f2+1
  5983  0FCE  0836               	movf	?___ftneg+2,w
  5984  0FCF  00BC               	movwf	___ftadd@f2+2
  5985  0FD0  3184  243F  318F   	fcall	___ftadd
  5986  0FD3  0020               	movlb	0	; select bank0
  5987  0FD4  0837               	movf	?___ftadd,w
  5988  0FD5  00C7               	movwf	round@f
  5989  0FD6  0838               	movf	?___ftadd+1,w
  5990  0FD7  00C8               	movwf	round@f+1
  5991  0FD8  0839               	movf	?___ftadd+2,w
  5992  0FD9  00C9               	movwf	round@f+2
  5993  0FDA  0847               	movf	round@f,w
  5994  0FDB  00B7               	movwf	___ftadd@f1
  5995  0FDC  0848               	movf	round@f+1,w
  5996  0FDD  00B8               	movwf	___ftadd@f1+1
  5997  0FDE  0849               	movf	round@f+2,w
  5998  0FDF  00B9               	movwf	___ftadd@f1+2
  5999  0FE0  0844               	movf	round@x,w
  6000  0FE1  00BA               	movwf	___ftadd@f2
  6001  0FE2  0845               	movf	round@x+1,w
  6002  0FE3  00BB               	movwf	___ftadd@f2+1
  6003  0FE4  0846               	movf	round@x+2,w
  6004  0FE5  00BC               	movwf	___ftadd@f2+2
  6005  0FE6  3184  243F  318F   	fcall	___ftadd
  6006  0FE9  0020               	movlb	0	; select bank0
  6007  0FEA  0837               	movf	?___ftadd,w
  6008  0FEB  00C4               	movwf	round@x
  6009  0FEC  0838               	movf	?___ftadd+1,w
  6010  0FED  00C5               	movwf	round@x+1
  6011  0FEE  0839               	movf	?___ftadd+2,w
  6012  0FEF  00C6               	movwf	round@x+2
  6013  0FF0  0844               	movf	round@x,w
  6014  0FF1  00AC               	movwf	trunc@x
  6015  0FF2  0845               	movf	round@x+1,w
  6016  0FF3  00AD               	movwf	trunc@x+1
  6017  0FF4  0846               	movf	round@x+2,w
  6018  0FF5  00AE               	movwf	trunc@x+2
  6019  0FF6  318E  26D8         	fcall	_trunc
  6020  0FF8  0020               	movlb	0	; select bank0
  6021  0FF9  082C               	movf	?_trunc,w
  6022  0FFA  00C4               	movwf	?_round
  6023  0FFB  082D               	movf	?_trunc+1,w
  6024  0FFC  00C5               	movwf	?_round+1
  6025  0FFD  082E               	movf	?_trunc+2,w
  6026  0FFE  00C6               	movwf	?_round+2
  6027  0FFF  0008               	return
  6028  1000                     __end_of_round:	
  6029                           
  6030                           	psect	text6
  6031  0ED8                     __ptext6:	
  6032 ;; *************** function _trunc *****************
  6033 ;; Defined at:
  6034 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\trunc.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  x               3   12[BANK0 ] void 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  i               3   15[BANK0 ] void 
  6039 ;;  expon           2   18[BANK0 ] int 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  3   12[BANK0 ] int 
  6042 ;; Registers used:
  6043 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6049 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6052 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;Total ram usage:        9 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    5
  6056 ;; This function calls:
  6057 ;;		___altoft
  6058 ;;		___fttol
  6059 ;;		_frexp
  6060 ;; This function is called by:
  6061 ;;		_round
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           
  6066                           ;psect for function _trunc
  6067  0ED8                     _trunc:	
  6068                           
  6069                           ;incstack = 0
  6070                           ; Regs used in _trunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6071  0ED8  0020               	movlb	0	; select bank0
  6072  0ED9  082C               	movf	trunc@x,w
  6073  0EDA  00F1               	movwf	frexp@value
  6074  0EDB  082D               	movf	trunc@x+1,w
  6075  0EDC  00F2               	movwf	frexp@value+1
  6076  0EDD  082E               	movf	trunc@x+2,w
  6077  0EDE  00F3               	movwf	frexp@value+2
  6078  0EDF  3032               	movlw	(low (trunc@expon| 0))& (0+255)
  6079  0EE0  00FB               	movwf	??_trunc
  6080  0EE1  087B               	movf	??_trunc,w
  6081  0EE2  00F4               	movwf	frexp@eptr
  6082  0EE3  318E  262B  318E   	fcall	_frexp
  6083  0EE6  0020               	movlb	0	; select bank0
  6084  0EE7  1FB3               	btfss	trunc@expon+1,7
  6085  0EE8  2EF0               	goto	l2997
  6086  0EE9  3000               	movlw	0
  6087  0EEA  00AC               	movwf	?_trunc
  6088  0EEB  3000               	movlw	0
  6089  0EEC  00AD               	movwf	?_trunc+1
  6090  0EED  3000               	movlw	0
  6091  0EEE  00AE               	movwf	?_trunc+2
  6092  0EEF  0008               	return
  6093  0EF0                     l2997:	
  6094  0EF0  3000               	movlw	0
  6095  0EF1  0233               	subwf	trunc@expon+1,w
  6096  0EF2  3015               	movlw	21
  6097  0EF3  1903               	skipnz
  6098  0EF4  0232               	subwf	trunc@expon,w
  6099  0EF5  1803               	btfsc	3,0
  6100  0EF6  0008               	return
  6101  0EF7  082C               	movf	trunc@x,w
  6102  0EF8  00F1               	movwf	___fttol@f1
  6103  0EF9  082D               	movf	trunc@x+1,w
  6104  0EFA  00F2               	movwf	___fttol@f1+1
  6105  0EFB  082E               	movf	trunc@x+2,w
  6106  0EFC  00F3               	movwf	___fttol@f1+2
  6107  0EFD  3186  2692  318E   	fcall	___fttol
  6108  0F00  0874               	movf	?___fttol+3,w
  6109  0F01  0020               	movlb	0	; select bank0
  6110  0F02  00A9               	movwf	___altoft@c+3
  6111  0F03  0873               	movf	?___fttol+2,w
  6112  0F04  00A8               	movwf	___altoft@c+2
  6113  0F05  0872               	movf	?___fttol+1,w
  6114  0F06  00A7               	movwf	___altoft@c+1
  6115  0F07  0871               	movf	?___fttol,w
  6116  0F08  00A6               	movwf	___altoft@c
  6117  0F09  318E  269B         	fcall	___altoft
  6118  0F0B  0020               	movlb	0	; select bank0
  6119  0F0C  0826               	movf	?___altoft,w
  6120  0F0D  00AF               	movwf	trunc@i
  6121  0F0E  0827               	movf	?___altoft+1,w
  6122  0F0F  00B0               	movwf	trunc@i+1
  6123  0F10  0828               	movf	?___altoft+2,w
  6124  0F11  00B1               	movwf	trunc@i+2
  6125  0F12  082F               	movf	trunc@i,w
  6126  0F13  00AC               	movwf	?_trunc
  6127  0F14  0830               	movf	trunc@i+1,w
  6128  0F15  00AD               	movwf	?_trunc+1
  6129  0F16  0831               	movf	trunc@i+2,w
  6130  0F17  00AE               	movwf	?_trunc+2
  6131  0F18  0008               	return
  6132  0F19                     __end_of_trunc:	
  6133                           
  6134                           	psect	text7
  6135  0E2B                     __ptext7:	
  6136 ;; *************** function _frexp *****************
  6137 ;; Defined at:
  6138 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  value           3    1[COMMON] int 
  6141 ;;  eptr            1    4[COMMON] PTR int 
  6142 ;;		 -> trunc@expon(2), 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  3    1[COMMON] PTR int 
  6147 ;; Registers used:
  6148 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;Total ram usage:        6 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:    3
  6161 ;; This function calls:
  6162 ;;		Nothing
  6163 ;; This function is called by:
  6164 ;;		_trunc
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           
  6169                           ;psect for function _frexp
  6170  0E2B                     _frexp:	
  6171                           
  6172                           ;incstack = 0
  6173                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  6174  0E2B  0873               	movf	frexp@value+2,w
  6175  0E2C  0472               	iorwf	frexp@value+1,w
  6176  0E2D  0471               	iorwf	frexp@value,w
  6177  0E2E  1D03               	skipz
  6178  0E2F  2E37               	goto	l2889
  6179  0E30  0874               	movf	frexp@eptr,w
  6180  0E31  0086               	movwf	6
  6181  0E32  0187               	clrf	7
  6182  0E33  3000               	movlw	0
  6183  0E34  3FC0               	movwi [0]fsr1
  6184  0E35  3FC1               	movwi [1]fsr1
  6185                           
  6186                           ;	Return value of _frexp is never used
  6187  0E36  0008               	return
  6188  0E37                     l2889:	
  6189  0E37  0873               	movf	frexp@value+2,w
  6190  0E38  397F               	andlw	127
  6191  0E39  00F5               	movwf	??_frexp
  6192  0E3A  01F6               	clrf	??_frexp+1
  6193  0E3B  35F5               	lslf	??_frexp,f
  6194  0E3C  0DF6               	rlf	??_frexp+1,f
  6195  0E3D  0874               	movf	frexp@eptr,w
  6196  0E3E  0086               	movwf	6
  6197  0E3F  0187               	clrf	7
  6198  0E40  0875               	movf	??_frexp,w
  6199  0E41  3FC0               	movwi [0]fsr1
  6200  0E42  0876               	movf	??_frexp+1,w
  6201  0E43  3FC1               	movwi [1]fsr1
  6202  0E44  0D72               	rlf	frexp@value+1,w
  6203  0E45  0D72               	rlf	frexp@value+1,w
  6204  0E46  3901               	andlw	1
  6205  0E47  00F5               	movwf	??_frexp
  6206  0E48  01F6               	clrf	??_frexp+1
  6207  0E49  0874               	movf	frexp@eptr,w
  6208  0E4A  0086               	movwf	6
  6209  0E4B  0187               	clrf	7
  6210  0E4C  0875               	movf	??_frexp,w
  6211  0E4D  0481               	iorwf	1,f
  6212  0E4E  3141               	addfsr 1,1
  6213  0E4F  0876               	movf	??_frexp+1,w
  6214  0E50  0481               	iorwf	1,f
  6215  0E51  0874               	movf	frexp@eptr,w
  6216  0E52  0086               	movwf	6
  6217  0E53  0187               	clrf	7
  6218  0E54  3082               	movlw	130
  6219  0E55  0781               	addwf	1,f
  6220  0E56  3141               	addfsr 1,1
  6221  0E57  30FF               	movlw	255
  6222  0E58  3D81               	addwfc	1,f
  6223  0E59  317F               	addfsr 1,-1
  6224  0E5A  0873               	movf	frexp@value+2,w
  6225  0E5B  3980               	andlw	-128
  6226  0E5C  383F               	iorlw	63
  6227  0E5D  00F3               	movwf	frexp@value+2
  6228  0E5E  13F2               	bcf	frexp@value+1,7
  6229  0E5F  0008               	return
  6230  0E60                     __end_of_frexp:	
  6231                           ;	Return value of _frexp is never used
  6232                           
  6233                           
  6234                           	psect	text8
  6235  0692                     __ptext8:	
  6236 ;; *************** function ___fttol *****************
  6237 ;; Defined at:
  6238 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  f1              3    1[COMMON] float 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  lval            4    1[BANK0 ] unsigned long 
  6243 ;;  exp1            1    5[BANK0 ] unsigned char 
  6244 ;;  sign1           1    0[BANK0 ] unsigned char 
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  4    1[COMMON] long 
  6247 ;; Registers used:
  6248 ;;		wreg, status,2, status,0
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6255 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6256 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6257 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;Total ram usage:       14 bytes
  6259 ;; Hardware stack levels used:    1
  6260 ;; Hardware stack levels required when called:    3
  6261 ;; This function calls:
  6262 ;;		Nothing
  6263 ;; This function is called by:
  6264 ;;		_main
  6265 ;;		_read_MCP9700A
  6266 ;;		_trunc
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function ___fttol
  6272  0692                     ___fttol:	
  6273                           
  6274                           ;incstack = 0
  6275                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6276  0692  0871               	movf	___fttol@f1,w
  6277  0693  00F5               	movwf	??___fttol
  6278  0694  0872               	movf	___fttol@f1+1,w
  6279  0695  00F6               	movwf	??___fttol+1
  6280  0696  0873               	movf	___fttol@f1+2,w
  6281  0697  00F7               	movwf	??___fttol+2
  6282  0698  1003               	clrc
  6283  0699  0D76               	rlf	??___fttol+1,w
  6284  069A  0D77               	rlf	??___fttol+2,w
  6285  069B  00F8               	movwf	??___fttol+3
  6286  069C  0878               	movf	??___fttol+3,w
  6287  069D  0020               	movlb	0	; select bank0
  6288  069E  00A5               	movwf	___fttol@exp1
  6289  069F  0825               	movf	___fttol@exp1,w
  6290  06A0  1D03               	btfss	3,2
  6291  06A1  2EAB               	goto	l2847
  6292  06A2  3000               	movlw	0
  6293  06A3  00F4               	movwf	?___fttol+3
  6294  06A4  3000               	movlw	0
  6295  06A5  00F3               	movwf	?___fttol+2
  6296  06A6  3000               	movlw	0
  6297  06A7  00F2               	movwf	?___fttol+1
  6298  06A8  3000               	movlw	0
  6299  06A9  00F1               	movwf	?___fttol
  6300  06AA  0008               	return
  6301  06AB                     l2847:	
  6302  06AB  0871               	movf	___fttol@f1,w
  6303  06AC  00F5               	movwf	??___fttol
  6304  06AD  0872               	movf	___fttol@f1+1,w
  6305  06AE  00F6               	movwf	??___fttol+1
  6306  06AF  0873               	movf	___fttol@f1+2,w
  6307  06B0  00F7               	movwf	??___fttol+2
  6308  06B1  3017               	movlw	23
  6309  06B2                     u3335:	
  6310  06B2  36F7               	lsrf	??___fttol+2,f
  6311  06B3  0CF6               	rrf	??___fttol+1,f
  6312  06B4  0CF5               	rrf	??___fttol,f
  6313  06B5  0B89               	decfsz	9,f
  6314  06B6  2EB2               	goto	u3335
  6315  06B7  0875               	movf	??___fttol,w
  6316  06B8  00F8               	movwf	??___fttol+3
  6317  06B9  0878               	movf	??___fttol+3,w
  6318  06BA  00A0               	movwf	___fttol@sign1
  6319  06BB  17F2               	bsf	___fttol@f1+1,7
  6320  06BC  30FF               	movlw	255
  6321  06BD  05F1               	andwf	___fttol@f1,f
  6322  06BE  30FF               	movlw	255
  6323  06BF  05F2               	andwf	___fttol@f1+1,f
  6324  06C0  3000               	movlw	0
  6325  06C1  05F3               	andwf	___fttol@f1+2,f
  6326  06C2  0871               	movf	___fttol@f1,w
  6327  06C3  00A1               	movwf	___fttol@lval
  6328  06C4  0872               	movf	___fttol@f1+1,w
  6329  06C5  00A2               	movwf	___fttol@lval+1
  6330  06C6  0873               	movf	___fttol@f1+2,w
  6331  06C7  00A3               	movwf	___fttol@lval+2
  6332  06C8  01A4               	clrf	___fttol@lval+3
  6333  06C9  308E               	movlw	142
  6334  06CA  02A5               	subwf	___fttol@exp1,f
  6335  06CB  1FA5               	btfss	___fttol@exp1,7
  6336  06CC  2EE9               	goto	l2867
  6337  06CD  0825               	movf	___fttol@exp1,w
  6338  06CE  3A80               	xorlw	128
  6339  06CF  3E8F               	addlw	143
  6340  06D0  1803               	skipnc
  6341  06D1  2EDB               	goto	l2865
  6342  06D2  3000               	movlw	0
  6343  06D3  00F4               	movwf	?___fttol+3
  6344  06D4  3000               	movlw	0
  6345  06D5  00F3               	movwf	?___fttol+2
  6346  06D6  3000               	movlw	0
  6347  06D7  00F2               	movwf	?___fttol+1
  6348  06D8  3000               	movlw	0
  6349  06D9  00F1               	movwf	?___fttol
  6350  06DA  0008               	return
  6351  06DB                     l2865:	
  6352  06DB  3001               	movlw	1
  6353  06DC                     u3365:	
  6354  06DC  36A4               	lsrf	___fttol@lval+3,f
  6355  06DD  0CA3               	rrf	___fttol@lval+2,f
  6356  06DE  0CA2               	rrf	___fttol@lval+1,f
  6357  06DF  0CA1               	rrf	___fttol@lval,f
  6358  06E0  0B89               	decfsz	9,f
  6359  06E1  2EDC               	goto	u3365
  6360  06E2  3001               	movlw	1
  6361  06E3  00F5               	movwf	??___fttol
  6362  06E4  0875               	movf	??___fttol,w
  6363  06E5  07A5               	addwf	___fttol@exp1,f
  6364  06E6  1903               	btfsc	3,2
  6365  06E7  2F02               	goto	l2875
  6366  06E8  2EDB               	goto	l2865
  6367  06E9                     l2867:	
  6368  06E9  3018               	movlw	24
  6369  06EA  0225               	subwf	___fttol@exp1,w
  6370  06EB  1C03               	skipc
  6371  06EC  2EFF               	goto	l909
  6372  06ED  3000               	movlw	0
  6373  06EE  00F4               	movwf	?___fttol+3
  6374  06EF  3000               	movlw	0
  6375  06F0  00F3               	movwf	?___fttol+2
  6376  06F1  3000               	movlw	0
  6377  06F2  00F2               	movwf	?___fttol+1
  6378  06F3  3000               	movlw	0
  6379  06F4  00F1               	movwf	?___fttol
  6380  06F5  0008               	return
  6381  06F6                     l2873:	
  6382  06F6  3001               	movlw	1
  6383  06F7                     u3395:	
  6384  06F7  35A1               	lslf	___fttol@lval,f
  6385  06F8  0DA2               	rlf	___fttol@lval+1,f
  6386  06F9  0DA3               	rlf	___fttol@lval+2,f
  6387  06FA  0DA4               	rlf	___fttol@lval+3,f
  6388  06FB  0B89               	decfsz	9,f
  6389  06FC  2EF7               	goto	u3395
  6390  06FD  3001               	movlw	1
  6391  06FE  02A5               	subwf	___fttol@exp1,f
  6392  06FF                     l909:	
  6393  06FF  0825               	movf	___fttol@exp1,w
  6394  0700  1D03               	btfss	3,2
  6395  0701  2EF6               	goto	l2873
  6396  0702                     l2875:	
  6397  0702  0820               	movf	___fttol@sign1,w
  6398  0703  1903               	btfsc	3,2
  6399  0704  2F10               	goto	l2879
  6400  0705  09A1               	comf	___fttol@lval,f
  6401  0706  09A2               	comf	___fttol@lval+1,f
  6402  0707  09A3               	comf	___fttol@lval+2,f
  6403  0708  09A4               	comf	___fttol@lval+3,f
  6404  0709  0AA1               	incf	___fttol@lval,f
  6405  070A  1903               	skipnz
  6406  070B  0AA2               	incf	___fttol@lval+1,f
  6407  070C  1903               	skipnz
  6408  070D  0AA3               	incf	___fttol@lval+2,f
  6409  070E  1903               	skipnz
  6410  070F  0AA4               	incf	___fttol@lval+3,f
  6411  0710                     l2879:	
  6412  0710  0824               	movf	___fttol@lval+3,w
  6413  0711  00F4               	movwf	?___fttol+3
  6414  0712  0823               	movf	___fttol@lval+2,w
  6415  0713  00F3               	movwf	?___fttol+2
  6416  0714  0822               	movf	___fttol@lval+1,w
  6417  0715  00F2               	movwf	?___fttol+1
  6418  0716  0821               	movf	___fttol@lval,w
  6419  0717  00F1               	movwf	?___fttol
  6420  0718  0008               	return
  6421  0719                     __end_of___fttol:	
  6422                           
  6423                           	psect	text9
  6424  0E9B                     __ptext9:	
  6425 ;; *************** function ___altoft *****************
  6426 ;; Defined at:
  6427 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  c               4    6[BANK0 ] long 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  sign            1   11[BANK0 ] unsigned char 
  6432 ;;  exp             1   10[BANK0 ] unsigned char 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  3    6[BANK0 ] float 
  6435 ;; Registers used:
  6436 ;;		wreg, status,2, status,0, pclath, cstack
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6442 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6445 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6446 ;;Total ram usage:        8 bytes
  6447 ;; Hardware stack levels used:    1
  6448 ;; Hardware stack levels required when called:    4
  6449 ;; This function calls:
  6450 ;;		___ftpack
  6451 ;; This function is called by:
  6452 ;;		_trunc
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           
  6457                           ;psect for function ___altoft
  6458  0E9B                     ___altoft:	
  6459                           
  6460                           ;incstack = 0
  6461                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  6462  0E9B  0020               	movlb	0	; select bank0
  6463  0E9C  01AB               	clrf	___altoft@sign
  6464  0E9D  308E               	movlw	142
  6465  0E9E  00F9               	movwf	??___altoft
  6466  0E9F  0879               	movf	??___altoft,w
  6467  0EA0  00AA               	movwf	___altoft@exp
  6468  0EA1  1FA9               	btfss	___altoft@c+3,7
  6469  0EA2  2EB0               	goto	l2835
  6470  0EA3  09A6               	comf	___altoft@c,f
  6471  0EA4  09A7               	comf	___altoft@c+1,f
  6472  0EA5  09A8               	comf	___altoft@c+2,f
  6473  0EA6  09A9               	comf	___altoft@c+3,f
  6474  0EA7  0AA6               	incf	___altoft@c,f
  6475  0EA8  1903               	skipnz
  6476  0EA9  0AA7               	incf	___altoft@c+1,f
  6477  0EAA  1903               	skipnz
  6478  0EAB  0AA8               	incf	___altoft@c+2,f
  6479  0EAC  1903               	skipnz
  6480  0EAD  0AA9               	incf	___altoft@c+3,f
  6481  0EAE  01AB               	clrf	___altoft@sign
  6482  0EAF  0AAB               	incf	___altoft@sign,f
  6483  0EB0                     l2835:	
  6484  0EB0  30FF               	movlw	255
  6485  0EB1  0529               	andwf	___altoft@c+3,w
  6486  0EB2  1903               	btfsc	3,2
  6487  0EB3  2EC0               	goto	l2837
  6488  0EB4  3001               	movlw	1
  6489  0EB5                     u3305:	
  6490  0EB5  36A9               	lsrf	___altoft@c+3,f
  6491  0EB6  0CA8               	rrf	___altoft@c+2,f
  6492  0EB7  0CA7               	rrf	___altoft@c+1,f
  6493  0EB8  0CA6               	rrf	___altoft@c,f
  6494  0EB9  0B89               	decfsz	9,f
  6495  0EBA  2EB5               	goto	u3305
  6496  0EBB  3001               	movlw	1
  6497  0EBC  00F9               	movwf	??___altoft
  6498  0EBD  0879               	movf	??___altoft,w
  6499  0EBE  07AA               	addwf	___altoft@exp,f
  6500  0EBF  2EB0               	goto	l2835
  6501  0EC0                     l2837:	
  6502  0EC0  0826               	movf	___altoft@c,w
  6503  0EC1  00F1               	movwf	___ftpack@arg
  6504  0EC2  0827               	movf	___altoft@c+1,w
  6505  0EC3  00F2               	movwf	___ftpack@arg+1
  6506  0EC4  0828               	movf	___altoft@c+2,w
  6507  0EC5  00F3               	movwf	___ftpack@arg+2
  6508  0EC6  082A               	movf	___altoft@exp,w
  6509  0EC7  00F9               	movwf	??___altoft
  6510  0EC8  0879               	movf	??___altoft,w
  6511  0EC9  00F4               	movwf	___ftpack@exp
  6512  0ECA  082B               	movf	___altoft@sign,w
  6513  0ECB  00FA               	movwf	??___altoft+1
  6514  0ECC  087A               	movf	??___altoft+1,w
  6515  0ECD  00F5               	movwf	___ftpack@sign
  6516  0ECE  3187  2780         	fcall	___ftpack
  6517  0ED0  0871               	movf	?___ftpack,w
  6518  0ED1  0020               	movlb	0	; select bank0
  6519  0ED2  00A6               	movwf	?___altoft
  6520  0ED3  0872               	movf	?___ftpack+1,w
  6521  0ED4  00A7               	movwf	?___altoft+1
  6522  0ED5  0873               	movf	?___ftpack+2,w
  6523  0ED6  00A8               	movwf	?___altoft+2
  6524  0ED7  0008               	return
  6525  0ED8                     __end_of___altoft:	
  6526                           
  6527                           	psect	text10
  6528  0CDE                     __ptext10:	
  6529 ;; *************** function ___ftneg *****************
  6530 ;; Defined at:
  6531 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  f1              3   20[BANK0 ] float 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;		None
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  3   20[BANK0 ] float 
  6538 ;; Registers used:
  6539 ;;		wreg
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6545 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6548 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6549 ;;Total ram usage:        3 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; Hardware stack levels required when called:    3
  6552 ;; This function calls:
  6553 ;;		Nothing
  6554 ;; This function is called by:
  6555 ;;		_read_MCP9700A
  6556 ;;		_round
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           
  6561                           ;psect for function ___ftneg
  6562  0CDE                     ___ftneg:	
  6563                           
  6564                           ;incstack = 0
  6565                           ; Regs used in ___ftneg: [wreg]
  6566  0CDE  0020               	movlb	0	; select bank0
  6567  0CDF  0836               	movf	___ftneg@f1+2,w
  6568  0CE0  0435               	iorwf	___ftneg@f1+1,w
  6569  0CE1  0434               	iorwf	___ftneg@f1,w
  6570  0CE2  1903               	skipnz
  6571  0CE3  0008               	return
  6572  0CE4  3080               	movlw	128
  6573  0CE5  06B6               	xorwf	___ftneg@f1+2,f
  6574  0CE6  0008               	return
  6575  0CE7                     __end_of___ftneg:	
  6576                           
  6577                           	psect	text11
  6578  0D45                     __ptext11:	
  6579 ;; *************** function ___lwtoft *****************
  6580 ;; Defined at:
  6581 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  c               2    9[COMMON] unsigned int 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;		None
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  3    9[COMMON] float 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0, pclath, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6595 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;Total ram usage:        4 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    4
  6602 ;; This function calls:
  6603 ;;		___ftpack
  6604 ;; This function is called by:
  6605 ;;		_main
  6606 ;;		_read_MCP9700A
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           
  6611                           ;psect for function ___lwtoft
  6612  0D45                     ___lwtoft:	
  6613                           
  6614                           ;incstack = 0
  6615                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6616  0D45  0879               	movf	___lwtoft@c,w
  6617  0D46  00F1               	movwf	___ftpack@arg
  6618  0D47  087A               	movf	___lwtoft@c+1,w
  6619  0D48  00F2               	movwf	___ftpack@arg+1
  6620  0D49  01F3               	clrf	___ftpack@arg+2
  6621  0D4A  308E               	movlw	142
  6622  0D4B  0020               	movlb	0	; select bank0
  6623  0D4C  00A0               	movwf	??___lwtoft
  6624  0D4D  0820               	movf	??___lwtoft,w
  6625  0D4E  00F4               	movwf	___ftpack@exp
  6626  0D4F  01F5               	clrf	___ftpack@sign
  6627  0D50  3187  2780         	fcall	___ftpack
  6628  0D52  0871               	movf	?___ftpack,w
  6629  0D53  00F9               	movwf	?___lwtoft
  6630  0D54  0872               	movf	?___ftpack+1,w
  6631  0D55  00FA               	movwf	?___lwtoft+1
  6632  0D56  0873               	movf	?___ftpack+2,w
  6633  0D57  00FB               	movwf	?___lwtoft+2
  6634  0D58  0008               	return
  6635  0D59                     __end_of___lwtoft:	
  6636                           
  6637                           	psect	text12
  6638  0D8C                     __ptext12:	
  6639 ;; *************** function ___ftsub *****************
  6640 ;; Defined at:
  6641 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  f2              3   36[BANK0 ] float 
  6644 ;;  f1              3   39[BANK0 ] float 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;		None
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  3   36[BANK0 ] float 
  6649 ;; Registers used:
  6650 ;;		wreg, status,2, status,0, pclath, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6656 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;Total ram usage:        6 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    5
  6663 ;; This function calls:
  6664 ;;		___ftadd
  6665 ;; This function is called by:
  6666 ;;		_main
  6667 ;;		_read_MCP9700A
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           
  6672                           ;psect for function ___ftsub
  6673  0D8C                     ___ftsub:	
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6677  0D8C  0020               	movlb	0	; select bank0
  6678  0D8D  0846               	movf	___ftsub@f2+2,w
  6679  0D8E  0445               	iorwf	___ftsub@f2+1,w
  6680  0D8F  0444               	iorwf	___ftsub@f2,w
  6681  0D90  1903               	skipnz
  6682  0D91  2D94               	goto	l3291
  6683  0D92  3080               	movlw	128
  6684  0D93  06C6               	xorwf	___ftsub@f2+2,f
  6685  0D94                     l3291:	
  6686  0D94  0847               	movf	___ftsub@f1,w
  6687  0D95  00B7               	movwf	___ftadd@f1
  6688  0D96  0848               	movf	___ftsub@f1+1,w
  6689  0D97  00B8               	movwf	___ftadd@f1+1
  6690  0D98  0849               	movf	___ftsub@f1+2,w
  6691  0D99  00B9               	movwf	___ftadd@f1+2
  6692  0D9A  0844               	movf	___ftsub@f2,w
  6693  0D9B  00BA               	movwf	___ftadd@f2
  6694  0D9C  0845               	movf	___ftsub@f2+1,w
  6695  0D9D  00BB               	movwf	___ftadd@f2+1
  6696  0D9E  0846               	movf	___ftsub@f2+2,w
  6697  0D9F  00BC               	movwf	___ftadd@f2+2
  6698  0DA0  3184  243F         	fcall	___ftadd
  6699  0DA2  0020               	movlb	0	; select bank0
  6700  0DA3  0837               	movf	?___ftadd,w
  6701  0DA4  00C4               	movwf	?___ftsub
  6702  0DA5  0838               	movf	?___ftadd+1,w
  6703  0DA6  00C5               	movwf	?___ftsub+1
  6704  0DA7  0839               	movf	?___ftadd+2,w
  6705  0DA8  00C6               	movwf	?___ftsub+2
  6706  0DA9  0008               	return
  6707  0DAA                     __end_of___ftsub:	
  6708                           
  6709                           	psect	text13
  6710  043F                     __ptext13:	
  6711 ;; *************** function ___ftadd *****************
  6712 ;; Defined at:
  6713 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  f1              3   23[BANK0 ] float 
  6716 ;;  f2              3   26[BANK0 ] float 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  exp1            1   35[BANK0 ] unsigned char 
  6719 ;;  exp2            1   34[BANK0 ] unsigned char 
  6720 ;;  sign            1   33[BANK0 ] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  3   23[BANK0 ] float 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0, pclath, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6730 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6731 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;Total ram usage:       13 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    4
  6737 ;; This function calls:
  6738 ;;		___ftpack
  6739 ;; This function is called by:
  6740 ;;		_read_MCP9700A
  6741 ;;		___ftsub
  6742 ;;		_round
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function ___ftadd
  6748  043F                     ___ftadd:	
  6749                           
  6750                           ;incstack = 0
  6751                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6752  043F  0020               	movlb	0	; select bank0
  6753  0440  0837               	movf	___ftadd@f1,w
  6754  0441  00BD               	movwf	??___ftadd
  6755  0442  0838               	movf	___ftadd@f1+1,w
  6756  0443  00BE               	movwf	??___ftadd+1
  6757  0444  0839               	movf	___ftadd@f1+2,w
  6758  0445  00BF               	movwf	??___ftadd+2
  6759  0446  1003               	clrc
  6760  0447  0D3E               	rlf	??___ftadd+1,w
  6761  0448  0D3F               	rlf	??___ftadd+2,w
  6762  0449  00C0               	movwf	??___ftadd+3
  6763  044A  0840               	movf	??___ftadd+3,w
  6764  044B  00C3               	movwf	___ftadd@exp1
  6765  044C  083A               	movf	___ftadd@f2,w
  6766  044D  00BD               	movwf	??___ftadd
  6767  044E  083B               	movf	___ftadd@f2+1,w
  6768  044F  00BE               	movwf	??___ftadd+1
  6769  0450  083C               	movf	___ftadd@f2+2,w
  6770  0451  00BF               	movwf	??___ftadd+2
  6771  0452  1003               	clrc
  6772  0453  0D3E               	rlf	??___ftadd+1,w
  6773  0454  0D3F               	rlf	??___ftadd+2,w
  6774  0455  00C0               	movwf	??___ftadd+3
  6775  0456  0840               	movf	??___ftadd+3,w
  6776  0457  00C2               	movwf	___ftadd@exp2
  6777  0458  0843               	movf	___ftadd@exp1,w
  6778  0459  1903               	btfsc	3,2
  6779  045A  2C67               	goto	l2917
  6780  045B  0842               	movf	___ftadd@exp2,w
  6781  045C  0243               	subwf	___ftadd@exp1,w
  6782  045D  1803               	skipnc
  6783  045E  2C6E               	goto	l2921
  6784  045F  0343               	decf	___ftadd@exp1,w
  6785  0460  3AFF               	xorlw	255
  6786  0461  0742               	addwf	___ftadd@exp2,w
  6787  0462  00BD               	movwf	??___ftadd
  6788  0463  3019               	movlw	25
  6789  0464  023D               	subwf	??___ftadd,w
  6790  0465  1C03               	skipc
  6791  0466  2C6E               	goto	l2921
  6792  0467                     l2917:	
  6793  0467  083A               	movf	___ftadd@f2,w
  6794  0468  00B7               	movwf	?___ftadd
  6795  0469  083B               	movf	___ftadd@f2+1,w
  6796  046A  00B8               	movwf	?___ftadd+1
  6797  046B  083C               	movf	___ftadd@f2+2,w
  6798  046C  00B9               	movwf	?___ftadd+2
  6799  046D  0008               	return
  6800  046E                     l2921:	
  6801  046E  0842               	movf	___ftadd@exp2,w
  6802  046F  1903               	btfsc	3,2
  6803  0470  0008               	return
  6804  0471  0843               	movf	___ftadd@exp1,w
  6805  0472  0242               	subwf	___ftadd@exp2,w
  6806  0473  1803               	skipnc
  6807  0474  2C7D               	goto	l2927
  6808  0475  0342               	decf	___ftadd@exp2,w
  6809  0476  3AFF               	xorlw	255
  6810  0477  0743               	addwf	___ftadd@exp1,w
  6811  0478  00BD               	movwf	??___ftadd
  6812  0479  3019               	movlw	25
  6813  047A  023D               	subwf	??___ftadd,w
  6814  047B  1803               	btfsc	3,0
  6815  047C  0008               	return
  6816  047D                     l2927:	
  6817  047D  3006               	movlw	6
  6818  047E  00BD               	movwf	??___ftadd
  6819  047F  083D               	movf	??___ftadd,w
  6820  0480  00C1               	movwf	___ftadd@sign
  6821  0481  1BB9               	btfsc	___ftadd@f1+2,7
  6822  0482  17C1               	bsf	___ftadd@sign,7
  6823  0483  1BBC               	btfsc	___ftadd@f2+2,7
  6824  0484  1741               	bsf	___ftadd@sign,6
  6825  0485  17B8               	bsf	___ftadd@f1+1,7
  6826  0486  30FF               	movlw	255
  6827  0487  05B7               	andwf	___ftadd@f1,f
  6828  0488  30FF               	movlw	255
  6829  0489  05B8               	andwf	___ftadd@f1+1,f
  6830  048A  3000               	movlw	0
  6831  048B  05B9               	andwf	___ftadd@f1+2,f
  6832  048C  17BB               	bsf	___ftadd@f2+1,7
  6833  048D  30FF               	movlw	255
  6834  048E  05BA               	andwf	___ftadd@f2,f
  6835  048F  30FF               	movlw	255
  6836  0490  05BB               	andwf	___ftadd@f2+1,f
  6837  0491  3000               	movlw	0
  6838  0492  05BC               	andwf	___ftadd@f2+2,f
  6839  0493  0842               	movf	___ftadd@exp2,w
  6840  0494  0243               	subwf	___ftadd@exp1,w
  6841  0495  1803               	skipnc
  6842  0496  2CB9               	goto	l2949
  6843  0497                     l2939:	
  6844  0497  3001               	movlw	1
  6845  0498                     u3545:	
  6846  0498  35BA               	lslf	___ftadd@f2,f
  6847  0499  0DBB               	rlf	___ftadd@f2+1,f
  6848  049A  0DBC               	rlf	___ftadd@f2+2,f
  6849  049B  0B89               	decfsz	9,f
  6850  049C  2C98               	goto	u3545
  6851  049D  3001               	movlw	1
  6852  049E  02C2               	subwf	___ftadd@exp2,f
  6853  049F  0842               	movf	___ftadd@exp2,w
  6854  04A0  0643               	xorwf	___ftadd@exp1,w
  6855  04A1  1903               	skipnz
  6856  04A2  2CB4               	goto	l2947
  6857  04A3  3001               	movlw	1
  6858  04A4  02C1               	subwf	___ftadd@sign,f
  6859  04A5  0841               	movf	___ftadd@sign,w
  6860  04A6  3907               	andlw	7
  6861  04A7  1903               	btfsc	3,2
  6862  04A8  2CB4               	goto	l2947
  6863  04A9  2C97               	goto	l2939
  6864  04AA                     l2945:	
  6865  04AA  3001               	movlw	1
  6866  04AB                     u3575:	
  6867  04AB  36B9               	lsrf	___ftadd@f1+2,f
  6868  04AC  0CB8               	rrf	___ftadd@f1+1,f
  6869  04AD  0CB7               	rrf	___ftadd@f1,f
  6870  04AE  0B89               	decfsz	9,f
  6871  04AF  2CAB               	goto	u3575
  6872  04B0  3001               	movlw	1
  6873  04B1  00BD               	movwf	??___ftadd
  6874  04B2  083D               	movf	??___ftadd,w
  6875  04B3  07C3               	addwf	___ftadd@exp1,f
  6876  04B4                     l2947:	
  6877  04B4  0843               	movf	___ftadd@exp1,w
  6878  04B5  0642               	xorwf	___ftadd@exp2,w
  6879  04B6  1903               	btfsc	3,2
  6880  04B7  2CDE               	goto	l849
  6881  04B8  2CAA               	goto	l2945
  6882  04B9                     l2949:	
  6883  04B9  0843               	movf	___ftadd@exp1,w
  6884  04BA  0242               	subwf	___ftadd@exp2,w
  6885  04BB  1803               	skipnc
  6886  04BC  2CDE               	goto	l849
  6887  04BD                     l2951:	
  6888  04BD  3001               	movlw	1
  6889  04BE                     u3605:	
  6890  04BE  35B7               	lslf	___ftadd@f1,f
  6891  04BF  0DB8               	rlf	___ftadd@f1+1,f
  6892  04C0  0DB9               	rlf	___ftadd@f1+2,f
  6893  04C1  0B89               	decfsz	9,f
  6894  04C2  2CBE               	goto	u3605
  6895  04C3  3001               	movlw	1
  6896  04C4  02C3               	subwf	___ftadd@exp1,f
  6897  04C5  0842               	movf	___ftadd@exp2,w
  6898  04C6  0643               	xorwf	___ftadd@exp1,w
  6899  04C7  1903               	skipnz
  6900  04C8  2CDA               	goto	l2959
  6901  04C9  3001               	movlw	1
  6902  04CA  02C1               	subwf	___ftadd@sign,f
  6903  04CB  0841               	movf	___ftadd@sign,w
  6904  04CC  3907               	andlw	7
  6905  04CD  1903               	btfsc	3,2
  6906  04CE  2CDA               	goto	l2959
  6907  04CF  2CBD               	goto	l2951
  6908  04D0                     l2957:	
  6909  04D0  3001               	movlw	1
  6910  04D1                     u3635:	
  6911  04D1  36BC               	lsrf	___ftadd@f2+2,f
  6912  04D2  0CBB               	rrf	___ftadd@f2+1,f
  6913  04D3  0CBA               	rrf	___ftadd@f2,f
  6914  04D4  0B89               	decfsz	9,f
  6915  04D5  2CD1               	goto	u3635
  6916  04D6  3001               	movlw	1
  6917  04D7  00BD               	movwf	??___ftadd
  6918  04D8  083D               	movf	??___ftadd,w
  6919  04D9  07C2               	addwf	___ftadd@exp2,f
  6920  04DA                     l2959:	
  6921  04DA  0843               	movf	___ftadd@exp1,w
  6922  04DB  0642               	xorwf	___ftadd@exp2,w
  6923  04DC  1D03               	skipz
  6924  04DD  2CD0               	goto	l2957
  6925  04DE                     l849:	
  6926  04DE  1FC1               	btfss	___ftadd@sign,7
  6927  04DF  2CF0               	goto	l2963
  6928  04E0  30FF               	movlw	255
  6929  04E1  06B7               	xorwf	___ftadd@f1,f
  6930  04E2  30FF               	movlw	255
  6931  04E3  06B8               	xorwf	___ftadd@f1+1,f
  6932  04E4  30FF               	movlw	255
  6933  04E5  06B9               	xorwf	___ftadd@f1+2,f
  6934  04E6  3001               	movlw	1
  6935  04E7  07B7               	addwf	___ftadd@f1,f
  6936  04E8  3000               	movlw	0
  6937  04E9  1803               	skipnc
  6938  04EA  3001               	movlw	1
  6939  04EB  07B8               	addwf	___ftadd@f1+1,f
  6940  04EC  3000               	movlw	0
  6941  04ED  1803               	skipnc
  6942  04EE  3001               	movlw	1
  6943  04EF  07B9               	addwf	___ftadd@f1+2,f
  6944  04F0                     l2963:	
  6945  04F0  1F41               	btfss	___ftadd@sign,6
  6946  04F1  2D02               	goto	l2967
  6947  04F2  30FF               	movlw	255
  6948  04F3  06BA               	xorwf	___ftadd@f2,f
  6949  04F4  30FF               	movlw	255
  6950  04F5  06BB               	xorwf	___ftadd@f2+1,f
  6951  04F6  30FF               	movlw	255
  6952  04F7  06BC               	xorwf	___ftadd@f2+2,f
  6953  04F8  3001               	movlw	1
  6954  04F9  07BA               	addwf	___ftadd@f2,f
  6955  04FA  3000               	movlw	0
  6956  04FB  1803               	skipnc
  6957  04FC  3001               	movlw	1
  6958  04FD  07BB               	addwf	___ftadd@f2+1,f
  6959  04FE  3000               	movlw	0
  6960  04FF  1803               	skipnc
  6961  0500  3001               	movlw	1
  6962  0501  07BC               	addwf	___ftadd@f2+2,f
  6963  0502                     l2967:	
  6964  0502  01C1               	clrf	___ftadd@sign
  6965  0503  0837               	movf	___ftadd@f1,w
  6966  0504  07BA               	addwf	___ftadd@f2,f
  6967  0505  0838               	movf	___ftadd@f1+1,w
  6968  0506  3DBB               	addwfc	___ftadd@f2+1,f
  6969  0507  0839               	movf	___ftadd@f1+2,w
  6970  0508  3DBC               	addwfc	___ftadd@f2+2,f
  6971  0509  1FBC               	btfss	___ftadd@f2+2,7
  6972  050A  2D1D               	goto	l2977
  6973  050B  30FF               	movlw	255
  6974  050C  06BA               	xorwf	___ftadd@f2,f
  6975  050D  30FF               	movlw	255
  6976  050E  06BB               	xorwf	___ftadd@f2+1,f
  6977  050F  30FF               	movlw	255
  6978  0510  06BC               	xorwf	___ftadd@f2+2,f
  6979  0511  3001               	movlw	1
  6980  0512  07BA               	addwf	___ftadd@f2,f
  6981  0513  3000               	movlw	0
  6982  0514  1803               	skipnc
  6983  0515  3001               	movlw	1
  6984  0516  07BB               	addwf	___ftadd@f2+1,f
  6985  0517  3000               	movlw	0
  6986  0518  1803               	skipnc
  6987  0519  3001               	movlw	1
  6988  051A  07BC               	addwf	___ftadd@f2+2,f
  6989  051B  01C1               	clrf	___ftadd@sign
  6990  051C  0AC1               	incf	___ftadd@sign,f
  6991  051D                     l2977:	
  6992  051D  083A               	movf	___ftadd@f2,w
  6993  051E  00F1               	movwf	___ftpack@arg
  6994  051F  083B               	movf	___ftadd@f2+1,w
  6995  0520  00F2               	movwf	___ftpack@arg+1
  6996  0521  083C               	movf	___ftadd@f2+2,w
  6997  0522  00F3               	movwf	___ftpack@arg+2
  6998  0523  0843               	movf	___ftadd@exp1,w
  6999  0524  00BD               	movwf	??___ftadd
  7000  0525  083D               	movf	??___ftadd,w
  7001  0526  00F4               	movwf	___ftpack@exp
  7002  0527  0841               	movf	___ftadd@sign,w
  7003  0528  00BE               	movwf	??___ftadd+1
  7004  0529  083E               	movf	??___ftadd+1,w
  7005  052A  00F5               	movwf	___ftpack@sign
  7006  052B  3187  2780         	fcall	___ftpack
  7007  052D  0871               	movf	?___ftpack,w
  7008  052E  0020               	movlb	0	; select bank0
  7009  052F  00B7               	movwf	?___ftadd
  7010  0530  0872               	movf	?___ftpack+1,w
  7011  0531  00B8               	movwf	?___ftadd+1
  7012  0532  0873               	movf	?___ftpack+2,w
  7013  0533  00B9               	movwf	?___ftadd+2
  7014  0534  0008               	return
  7015  0535                     __end_of___ftadd:	
  7016                           
  7017                           	psect	text14
  7018  0535                     __ptext14:	
  7019 ;; *************** function ___ftmul *****************
  7020 ;; Defined at:
  7021 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  f1              3    0[BANK0 ] float 
  7024 ;;  f2              3    3[BANK0 ] float 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7027 ;;  sign            1   15[BANK0 ] unsigned char 
  7028 ;;  cntr            1   14[BANK0 ] unsigned char 
  7029 ;;  exp             1   10[BANK0 ] unsigned char 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  3    0[BANK0 ] float 
  7032 ;; Registers used:
  7033 ;;		wreg, status,2, status,0, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7039 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;Total ram usage:       16 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    4
  7046 ;; This function calls:
  7047 ;;		___ftpack
  7048 ;; This function is called by:
  7049 ;;		_main
  7050 ;;		_read_MCP9700A
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           
  7055                           ;psect for function ___ftmul
  7056  0535                     ___ftmul:	
  7057                           
  7058                           ;incstack = 0
  7059                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7060  0535  0020               	movlb	0	; select bank0
  7061  0536  0820               	movf	___ftmul@f1,w
  7062  0537  00A6               	movwf	??___ftmul
  7063  0538  0821               	movf	___ftmul@f1+1,w
  7064  0539  00A7               	movwf	??___ftmul+1
  7065  053A  0822               	movf	___ftmul@f1+2,w
  7066  053B  00A8               	movwf	??___ftmul+2
  7067  053C  1003               	clrc
  7068  053D  0D27               	rlf	??___ftmul+1,w
  7069  053E  0D28               	rlf	??___ftmul+2,w
  7070  053F  00A9               	movwf	??___ftmul+3
  7071  0540  0829               	movf	??___ftmul+3,w
  7072  0541  00AA               	movwf	___ftmul@exp
  7073  0542  082A               	movf	___ftmul@exp,w
  7074  0543  1D03               	btfss	3,2
  7075  0544  2D4C               	goto	l3243
  7076  0545  3000               	movlw	0
  7077  0546  00A0               	movwf	?___ftmul
  7078  0547  3000               	movlw	0
  7079  0548  00A1               	movwf	?___ftmul+1
  7080  0549  3000               	movlw	0
  7081  054A  00A2               	movwf	?___ftmul+2
  7082  054B  0008               	return
  7083  054C                     l3243:	
  7084  054C  0823               	movf	___ftmul@f2,w
  7085  054D  00A6               	movwf	??___ftmul
  7086  054E  0824               	movf	___ftmul@f2+1,w
  7087  054F  00A7               	movwf	??___ftmul+1
  7088  0550  0825               	movf	___ftmul@f2+2,w
  7089  0551  00A8               	movwf	??___ftmul+2
  7090  0552  1003               	clrc
  7091  0553  0D27               	rlf	??___ftmul+1,w
  7092  0554  0D28               	rlf	??___ftmul+2,w
  7093  0555  00A9               	movwf	??___ftmul+3
  7094  0556  0829               	movf	??___ftmul+3,w
  7095  0557  00AF               	movwf	___ftmul@sign
  7096  0558  082F               	movf	___ftmul@sign,w
  7097  0559  1D03               	btfss	3,2
  7098  055A  2D62               	goto	l3249
  7099  055B  3000               	movlw	0
  7100  055C  00A0               	movwf	?___ftmul
  7101  055D  3000               	movlw	0
  7102  055E  00A1               	movwf	?___ftmul+1
  7103  055F  3000               	movlw	0
  7104  0560  00A2               	movwf	?___ftmul+2
  7105  0561  0008               	return
  7106  0562                     l3249:	
  7107  0562  082F               	movf	___ftmul@sign,w
  7108  0563  3E7B               	addlw	123
  7109  0564  00A6               	movwf	??___ftmul
  7110  0565  0826               	movf	??___ftmul,w
  7111  0566  07AA               	addwf	___ftmul@exp,f
  7112  0567  0820               	movf	___ftmul@f1,w
  7113  0568  00A6               	movwf	??___ftmul
  7114  0569  0821               	movf	___ftmul@f1+1,w
  7115  056A  00A7               	movwf	??___ftmul+1
  7116  056B  0822               	movf	___ftmul@f1+2,w
  7117  056C  00A8               	movwf	??___ftmul+2
  7118  056D  3010               	movlw	16
  7119  056E                     u4045:	
  7120  056E  36A8               	lsrf	??___ftmul+2,f
  7121  056F  0CA7               	rrf	??___ftmul+1,f
  7122  0570  0CA6               	rrf	??___ftmul,f
  7123  0571  0B89               	decfsz	9,f
  7124  0572  2D6E               	goto	u4045
  7125  0573  0826               	movf	??___ftmul,w
  7126  0574  00A9               	movwf	??___ftmul+3
  7127  0575  0829               	movf	??___ftmul+3,w
  7128  0576  00AF               	movwf	___ftmul@sign
  7129  0577  0823               	movf	___ftmul@f2,w
  7130  0578  00A6               	movwf	??___ftmul
  7131  0579  0824               	movf	___ftmul@f2+1,w
  7132  057A  00A7               	movwf	??___ftmul+1
  7133  057B  0825               	movf	___ftmul@f2+2,w
  7134  057C  00A8               	movwf	??___ftmul+2
  7135  057D  3010               	movlw	16
  7136  057E                     u4055:	
  7137  057E  36A8               	lsrf	??___ftmul+2,f
  7138  057F  0CA7               	rrf	??___ftmul+1,f
  7139  0580  0CA6               	rrf	??___ftmul,f
  7140  0581  0B89               	decfsz	9,f
  7141  0582  2D7E               	goto	u4055
  7142  0583  0826               	movf	??___ftmul,w
  7143  0584  00A9               	movwf	??___ftmul+3
  7144  0585  0829               	movf	??___ftmul+3,w
  7145  0586  06AF               	xorwf	___ftmul@sign,f
  7146  0587  3080               	movlw	128
  7147  0588  00A6               	movwf	??___ftmul
  7148  0589  0826               	movf	??___ftmul,w
  7149  058A  05AF               	andwf	___ftmul@sign,f
  7150  058B  17A1               	bsf	___ftmul@f1+1,7
  7151  058C  17A4               	bsf	___ftmul@f2+1,7
  7152  058D  30FF               	movlw	255
  7153  058E  05A3               	andwf	___ftmul@f2,f
  7154  058F  30FF               	movlw	255
  7155  0590  05A4               	andwf	___ftmul@f2+1,f
  7156  0591  3000               	movlw	0
  7157  0592  05A5               	andwf	___ftmul@f2+2,f
  7158  0593  3000               	movlw	0
  7159  0594  00AB               	movwf	___ftmul@f3_as_product
  7160  0595  3000               	movlw	0
  7161  0596  00AC               	movwf	___ftmul@f3_as_product+1
  7162  0597  3000               	movlw	0
  7163  0598  00AD               	movwf	___ftmul@f3_as_product+2
  7164  0599  3007               	movlw	7
  7165  059A  00A6               	movwf	??___ftmul
  7166  059B  0826               	movf	??___ftmul,w
  7167  059C  00AE               	movwf	___ftmul@cntr
  7168  059D                     l3261:	
  7169  059D  1C20               	btfss	___ftmul@f1,0
  7170  059E  2DA5               	goto	l3265
  7171  059F  0823               	movf	___ftmul@f2,w
  7172  05A0  07AB               	addwf	___ftmul@f3_as_product,f
  7173  05A1  0824               	movf	___ftmul@f2+1,w
  7174  05A2  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7175  05A3  0825               	movf	___ftmul@f2+2,w
  7176  05A4  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7177  05A5                     l3265:	
  7178  05A5  3001               	movlw	1
  7179  05A6                     u4075:	
  7180  05A6  36A2               	lsrf	___ftmul@f1+2,f
  7181  05A7  0CA1               	rrf	___ftmul@f1+1,f
  7182  05A8  0CA0               	rrf	___ftmul@f1,f
  7183  05A9  0B89               	decfsz	9,f
  7184  05AA  2DA6               	goto	u4075
  7185  05AB  3001               	movlw	1
  7186  05AC                     u4085:	
  7187  05AC  35A3               	lslf	___ftmul@f2,f
  7188  05AD  0DA4               	rlf	___ftmul@f2+1,f
  7189  05AE  0DA5               	rlf	___ftmul@f2+2,f
  7190  05AF  0B89               	decfsz	9,f
  7191  05B0  2DAC               	goto	u4085
  7192  05B1  3001               	movlw	1
  7193  05B2  02AE               	subwf	___ftmul@cntr,f
  7194  05B3  1D03               	btfss	3,2
  7195  05B4  2D9D               	goto	l3261
  7196  05B5  3009               	movlw	9
  7197  05B6  00A6               	movwf	??___ftmul
  7198  05B7  0826               	movf	??___ftmul,w
  7199  05B8  00AE               	movwf	___ftmul@cntr
  7200  05B9                     l3273:	
  7201  05B9  1C20               	btfss	___ftmul@f1,0
  7202  05BA  2DC1               	goto	l3277
  7203  05BB  0823               	movf	___ftmul@f2,w
  7204  05BC  07AB               	addwf	___ftmul@f3_as_product,f
  7205  05BD  0824               	movf	___ftmul@f2+1,w
  7206  05BE  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7207  05BF  0825               	movf	___ftmul@f2+2,w
  7208  05C0  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7209  05C1                     l3277:	
  7210  05C1  3001               	movlw	1
  7211  05C2                     u4115:	
  7212  05C2  36A2               	lsrf	___ftmul@f1+2,f
  7213  05C3  0CA1               	rrf	___ftmul@f1+1,f
  7214  05C4  0CA0               	rrf	___ftmul@f1,f
  7215  05C5  0B89               	decfsz	9,f
  7216  05C6  2DC2               	goto	u4115
  7217  05C7  3001               	movlw	1
  7218  05C8                     u4125:	
  7219  05C8  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7220  05C9  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7221  05CA  0CAB               	rrf	___ftmul@f3_as_product,f
  7222  05CB  0B89               	decfsz	9,f
  7223  05CC  2DC8               	goto	u4125
  7224  05CD  3001               	movlw	1
  7225  05CE  02AE               	subwf	___ftmul@cntr,f
  7226  05CF  1D03               	btfss	3,2
  7227  05D0  2DB9               	goto	l3273
  7228  05D1  082B               	movf	___ftmul@f3_as_product,w
  7229  05D2  00F1               	movwf	___ftpack@arg
  7230  05D3  082C               	movf	___ftmul@f3_as_product+1,w
  7231  05D4  00F2               	movwf	___ftpack@arg+1
  7232  05D5  082D               	movf	___ftmul@f3_as_product+2,w
  7233  05D6  00F3               	movwf	___ftpack@arg+2
  7234  05D7  082A               	movf	___ftmul@exp,w
  7235  05D8  00A6               	movwf	??___ftmul
  7236  05D9  0826               	movf	??___ftmul,w
  7237  05DA  00F4               	movwf	___ftpack@exp
  7238  05DB  082F               	movf	___ftmul@sign,w
  7239  05DC  00A7               	movwf	??___ftmul+1
  7240  05DD  0827               	movf	??___ftmul+1,w
  7241  05DE  00F5               	movwf	___ftpack@sign
  7242  05DF  3187  2780         	fcall	___ftpack
  7243  05E1  0871               	movf	?___ftpack,w
  7244  05E2  0020               	movlb	0	; select bank0
  7245  05E3  00A0               	movwf	?___ftmul
  7246  05E4  0872               	movf	?___ftpack+1,w
  7247  05E5  00A1               	movwf	?___ftmul+1
  7248  05E6  0873               	movf	?___ftpack+2,w
  7249  05E7  00A2               	movwf	?___ftmul+2
  7250  05E8  0008               	return
  7251  05E9                     __end_of___ftmul:	
  7252                           
  7253                           	psect	text15
  7254  0E60                     __ptext15:	
  7255 ;; *************** function ___ftge *****************
  7256 ;; Defined at:
  7257 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  ff1             3    1[COMMON] float 
  7260 ;;  ff2             3    4[COMMON] float 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;		None
  7263 ;; Return value:  Size  Location     Type
  7264 ;;		None               void
  7265 ;; Registers used:
  7266 ;;		wreg, status,2, status,0
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7272 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7276 ;;Total ram usage:        9 bytes
  7277 ;; Hardware stack levels used:    1
  7278 ;; Hardware stack levels required when called:    3
  7279 ;; This function calls:
  7280 ;;		Nothing
  7281 ;; This function is called by:
  7282 ;;		_main
  7283 ;;		_read_MCP9700A
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function ___ftge
  7289  0E60                     ___ftge:	
  7290                           
  7291                           ;incstack = 0
  7292                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7293  0E60  1FF3               	btfss	___ftge@ff1+2,7
  7294  0E61  2E76               	goto	l3221
  7295  0E62  0971               	comf	___ftge@ff1,w
  7296  0E63  00F7               	movwf	??___ftge
  7297  0E64  0972               	comf	___ftge@ff1+1,w
  7298  0E65  00F8               	movwf	??___ftge+1
  7299  0E66  0973               	comf	___ftge@ff1+2,w
  7300  0E67  00F9               	movwf	??___ftge+2
  7301  0E68  0AF7               	incf	??___ftge,f
  7302  0E69  1903               	skipnz
  7303  0E6A  0AF8               	incf	??___ftge+1,f
  7304  0E6B  1903               	skipnz
  7305  0E6C  0AF9               	incf	??___ftge+2,f
  7306  0E6D  3000               	movlw	0
  7307  0E6E  0777               	addwf	??___ftge,w
  7308  0E6F  00F1               	movwf	___ftge@ff1
  7309  0E70  3000               	movlw	0
  7310  0E71  3D78               	addwfc	??___ftge+1,w
  7311  0E72  00F2               	movwf	___ftge@ff1+1
  7312  0E73  3080               	movlw	128
  7313  0E74  3D79               	addwfc	??___ftge+2,w
  7314  0E75  00F3               	movwf	___ftge@ff1+2
  7315  0E76                     l3221:	
  7316  0E76  1FF6               	btfss	___ftge@ff2+2,7
  7317  0E77  2E8C               	goto	l3225
  7318  0E78  0974               	comf	___ftge@ff2,w
  7319  0E79  00F7               	movwf	??___ftge
  7320  0E7A  0975               	comf	___ftge@ff2+1,w
  7321  0E7B  00F8               	movwf	??___ftge+1
  7322  0E7C  0976               	comf	___ftge@ff2+2,w
  7323  0E7D  00F9               	movwf	??___ftge+2
  7324  0E7E  0AF7               	incf	??___ftge,f
  7325  0E7F  1903               	skipnz
  7326  0E80  0AF8               	incf	??___ftge+1,f
  7327  0E81  1903               	skipnz
  7328  0E82  0AF9               	incf	??___ftge+2,f
  7329  0E83  3000               	movlw	0
  7330  0E84  0777               	addwf	??___ftge,w
  7331  0E85  00F4               	movwf	___ftge@ff2
  7332  0E86  3000               	movlw	0
  7333  0E87  3D78               	addwfc	??___ftge+1,w
  7334  0E88  00F5               	movwf	___ftge@ff2+1
  7335  0E89  3080               	movlw	128
  7336  0E8A  3D79               	addwfc	??___ftge+2,w
  7337  0E8B  00F6               	movwf	___ftge@ff2+2
  7338  0E8C                     l3225:	
  7339  0E8C  3080               	movlw	128
  7340  0E8D  06F3               	xorwf	___ftge@ff1+2,f
  7341  0E8E  3080               	movlw	128
  7342  0E8F  06F6               	xorwf	___ftge@ff2+2,f
  7343  0E90  0876               	movf	___ftge@ff2+2,w
  7344  0E91  0273               	subwf	___ftge@ff1+2,w
  7345  0E92  1D03               	skipz
  7346  0E93  0008               	return
  7347  0E94  0875               	movf	___ftge@ff2+1,w
  7348  0E95  0272               	subwf	___ftge@ff1+1,w
  7349  0E96  1D03               	skipz
  7350  0E97  0008               	return
  7351  0E98  0874               	movf	___ftge@ff2,w
  7352  0E99  0271               	subwf	___ftge@ff1,w
  7353  0E9A  0008               	return
  7354  0E9B                     __end_of___ftge:	
  7355                           
  7356                           	psect	text16
  7357  05E9                     __ptext16:	
  7358 ;; *************** function ___ftdiv *****************
  7359 ;; Defined at:
  7360 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  f2              3   36[BANK0 ] float 
  7363 ;;  f1              3   39[BANK0 ] float 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  f3              3   47[BANK0 ] float 
  7366 ;;  sign            1   51[BANK0 ] unsigned char 
  7367 ;;  exp             1   50[BANK0 ] unsigned char 
  7368 ;;  cntr            1   46[BANK0 ] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  3   36[BANK0 ] float 
  7371 ;; Registers used:
  7372 ;;		wreg, status,2, status,0, pclath, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7378 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7379 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7380 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7381 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7382 ;;Total ram usage:       16 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    4
  7385 ;; This function calls:
  7386 ;;		___ftpack
  7387 ;; This function is called by:
  7388 ;;		_main
  7389 ;;		_read_MCP9700A
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           
  7394                           ;psect for function ___ftdiv
  7395  05E9                     ___ftdiv:	
  7396                           
  7397                           ;incstack = 0
  7398                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7399  05E9  0020               	movlb	0	; select bank0
  7400  05EA  0847               	movf	___ftdiv@f1,w
  7401  05EB  00CA               	movwf	??___ftdiv
  7402  05EC  0848               	movf	___ftdiv@f1+1,w
  7403  05ED  00CB               	movwf	??___ftdiv+1
  7404  05EE  0849               	movf	___ftdiv@f1+2,w
  7405  05EF  00CC               	movwf	??___ftdiv+2
  7406  05F0  1003               	clrc
  7407  05F1  0D4B               	rlf	??___ftdiv+1,w
  7408  05F2  0D4C               	rlf	??___ftdiv+2,w
  7409  05F3  00CD               	movwf	??___ftdiv+3
  7410  05F4  084D               	movf	??___ftdiv+3,w
  7411  05F5  00D2               	movwf	___ftdiv@exp
  7412  05F6  0852               	movf	___ftdiv@exp,w
  7413  05F7  1D03               	btfss	3,2
  7414  05F8  2E00               	goto	l3181
  7415  05F9  3000               	movlw	0
  7416  05FA  00C4               	movwf	?___ftdiv
  7417  05FB  3000               	movlw	0
  7418  05FC  00C5               	movwf	?___ftdiv+1
  7419  05FD  3000               	movlw	0
  7420  05FE  00C6               	movwf	?___ftdiv+2
  7421  05FF  0008               	return
  7422  0600                     l3181:	
  7423  0600  0844               	movf	___ftdiv@f2,w
  7424  0601  00CA               	movwf	??___ftdiv
  7425  0602  0845               	movf	___ftdiv@f2+1,w
  7426  0603  00CB               	movwf	??___ftdiv+1
  7427  0604  0846               	movf	___ftdiv@f2+2,w
  7428  0605  00CC               	movwf	??___ftdiv+2
  7429  0606  1003               	clrc
  7430  0607  0D4B               	rlf	??___ftdiv+1,w
  7431  0608  0D4C               	rlf	??___ftdiv+2,w
  7432  0609  00CD               	movwf	??___ftdiv+3
  7433  060A  084D               	movf	??___ftdiv+3,w
  7434  060B  00D3               	movwf	___ftdiv@sign
  7435  060C  0853               	movf	___ftdiv@sign,w
  7436  060D  1D03               	btfss	3,2
  7437  060E  2E16               	goto	l3187
  7438  060F  3000               	movlw	0
  7439  0610  00C4               	movwf	?___ftdiv
  7440  0611  3000               	movlw	0
  7441  0612  00C5               	movwf	?___ftdiv+1
  7442  0613  3000               	movlw	0
  7443  0614  00C6               	movwf	?___ftdiv+2
  7444  0615  0008               	return
  7445  0616                     l3187:	
  7446  0616  3000               	movlw	0
  7447  0617  00CF               	movwf	___ftdiv@f3
  7448  0618  3000               	movlw	0
  7449  0619  00D0               	movwf	___ftdiv@f3+1
  7450  061A  3000               	movlw	0
  7451  061B  00D1               	movwf	___ftdiv@f3+2
  7452  061C  3089               	movlw	137
  7453  061D  0753               	addwf	___ftdiv@sign,w
  7454  061E  00CA               	movwf	??___ftdiv
  7455  061F  084A               	movf	??___ftdiv,w
  7456  0620  02D2               	subwf	___ftdiv@exp,f
  7457  0621  0847               	movf	___ftdiv@f1,w
  7458  0622  00CA               	movwf	??___ftdiv
  7459  0623  0848               	movf	___ftdiv@f1+1,w
  7460  0624  00CB               	movwf	??___ftdiv+1
  7461  0625  0849               	movf	___ftdiv@f1+2,w
  7462  0626  00CC               	movwf	??___ftdiv+2
  7463  0627  3010               	movlw	16
  7464  0628                     u3935:	
  7465  0628  36CC               	lsrf	??___ftdiv+2,f
  7466  0629  0CCB               	rrf	??___ftdiv+1,f
  7467  062A  0CCA               	rrf	??___ftdiv,f
  7468  062B  0B89               	decfsz	9,f
  7469  062C  2E28               	goto	u3935
  7470  062D  084A               	movf	??___ftdiv,w
  7471  062E  00CD               	movwf	??___ftdiv+3
  7472  062F  084D               	movf	??___ftdiv+3,w
  7473  0630  00D3               	movwf	___ftdiv@sign
  7474  0631  0844               	movf	___ftdiv@f2,w
  7475  0632  00CA               	movwf	??___ftdiv
  7476  0633  0845               	movf	___ftdiv@f2+1,w
  7477  0634  00CB               	movwf	??___ftdiv+1
  7478  0635  0846               	movf	___ftdiv@f2+2,w
  7479  0636  00CC               	movwf	??___ftdiv+2
  7480  0637  3010               	movlw	16
  7481  0638                     u3945:	
  7482  0638  36CC               	lsrf	??___ftdiv+2,f
  7483  0639  0CCB               	rrf	??___ftdiv+1,f
  7484  063A  0CCA               	rrf	??___ftdiv,f
  7485  063B  0B89               	decfsz	9,f
  7486  063C  2E38               	goto	u3945
  7487  063D  084A               	movf	??___ftdiv,w
  7488  063E  00CD               	movwf	??___ftdiv+3
  7489  063F  084D               	movf	??___ftdiv+3,w
  7490  0640  06D3               	xorwf	___ftdiv@sign,f
  7491  0641  3080               	movlw	128
  7492  0642  00CA               	movwf	??___ftdiv
  7493  0643  084A               	movf	??___ftdiv,w
  7494  0644  05D3               	andwf	___ftdiv@sign,f
  7495  0645  17C8               	bsf	___ftdiv@f1+1,7
  7496  0646  30FF               	movlw	255
  7497  0647  05C7               	andwf	___ftdiv@f1,f
  7498  0648  30FF               	movlw	255
  7499  0649  05C8               	andwf	___ftdiv@f1+1,f
  7500  064A  3000               	movlw	0
  7501  064B  05C9               	andwf	___ftdiv@f1+2,f
  7502  064C  17C5               	bsf	___ftdiv@f2+1,7
  7503  064D  30FF               	movlw	255
  7504  064E  05C4               	andwf	___ftdiv@f2,f
  7505  064F  30FF               	movlw	255
  7506  0650  05C5               	andwf	___ftdiv@f2+1,f
  7507  0651  3000               	movlw	0
  7508  0652  05C6               	andwf	___ftdiv@f2+2,f
  7509  0653  3018               	movlw	24
  7510  0654  00CA               	movwf	??___ftdiv
  7511  0655  084A               	movf	??___ftdiv,w
  7512  0656  00CE               	movwf	___ftdiv@cntr
  7513  0657                     l3201:	
  7514  0657  3001               	movlw	1
  7515  0658                     u3955:	
  7516  0658  35CF               	lslf	___ftdiv@f3,f
  7517  0659  0DD0               	rlf	___ftdiv@f3+1,f
  7518  065A  0DD1               	rlf	___ftdiv@f3+2,f
  7519  065B  0B89               	decfsz	9,f
  7520  065C  2E58               	goto	u3955
  7521  065D  0846               	movf	___ftdiv@f2+2,w
  7522  065E  0249               	subwf	___ftdiv@f1+2,w
  7523  065F  1D03               	skipz
  7524  0660  2E67               	goto	u3965
  7525  0661  0845               	movf	___ftdiv@f2+1,w
  7526  0662  0248               	subwf	___ftdiv@f1+1,w
  7527  0663  1D03               	skipz
  7528  0664  2E67               	goto	u3965
  7529  0665  0844               	movf	___ftdiv@f2,w
  7530  0666  0247               	subwf	___ftdiv@f1,w
  7531  0667                     u3965:	
  7532  0667  1C03               	skipc
  7533  0668  2E70               	goto	l3209
  7534  0669  0844               	movf	___ftdiv@f2,w
  7535  066A  02C7               	subwf	___ftdiv@f1,f
  7536  066B  0845               	movf	___ftdiv@f2+1,w
  7537  066C  3BC8               	subwfb	___ftdiv@f1+1,f
  7538  066D  0846               	movf	___ftdiv@f2+2,w
  7539  066E  3BC9               	subwfb	___ftdiv@f1+2,f
  7540  066F  144F               	bsf	___ftdiv@f3,0
  7541  0670                     l3209:	
  7542  0670  3001               	movlw	1
  7543  0671                     u3975:	
  7544  0671  35C7               	lslf	___ftdiv@f1,f
  7545  0672  0DC8               	rlf	___ftdiv@f1+1,f
  7546  0673  0DC9               	rlf	___ftdiv@f1+2,f
  7547  0674  0B89               	decfsz	9,f
  7548  0675  2E71               	goto	u3975
  7549  0676  3001               	movlw	1
  7550  0677  02CE               	subwf	___ftdiv@cntr,f
  7551  0678  1D03               	btfss	3,2
  7552  0679  2E57               	goto	l3201
  7553  067A  084F               	movf	___ftdiv@f3,w
  7554  067B  00F1               	movwf	___ftpack@arg
  7555  067C  0850               	movf	___ftdiv@f3+1,w
  7556  067D  00F2               	movwf	___ftpack@arg+1
  7557  067E  0851               	movf	___ftdiv@f3+2,w
  7558  067F  00F3               	movwf	___ftpack@arg+2
  7559  0680  0852               	movf	___ftdiv@exp,w
  7560  0681  00CA               	movwf	??___ftdiv
  7561  0682  084A               	movf	??___ftdiv,w
  7562  0683  00F4               	movwf	___ftpack@exp
  7563  0684  0853               	movf	___ftdiv@sign,w
  7564  0685  00CB               	movwf	??___ftdiv+1
  7565  0686  084B               	movf	??___ftdiv+1,w
  7566  0687  00F5               	movwf	___ftpack@sign
  7567  0688  3187  2780         	fcall	___ftpack
  7568  068A  0871               	movf	?___ftpack,w
  7569  068B  0020               	movlb	0	; select bank0
  7570  068C  00C4               	movwf	?___ftdiv
  7571  068D  0872               	movf	?___ftpack+1,w
  7572  068E  00C5               	movwf	?___ftdiv+1
  7573  068F  0873               	movf	?___ftpack+2,w
  7574  0690  00C6               	movwf	?___ftdiv+2
  7575  0691  0008               	return
  7576  0692                     __end_of___ftdiv:	
  7577                           
  7578                           	psect	text17
  7579  0780                     __ptext17:	
  7580 ;; *************** function ___ftpack *****************
  7581 ;; Defined at:
  7582 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  arg             3    1[COMMON] unsigned um
  7585 ;;  exp             1    4[COMMON] unsigned char 
  7586 ;;  sign            1    5[COMMON] unsigned char 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;		None
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  3    1[COMMON] float 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7598 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7602 ;;Total ram usage:        8 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    3
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		___altoft
  7609 ;;		___ftadd
  7610 ;;		___ftdiv
  7611 ;;		___ftmul
  7612 ;;		___lwtoft
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           
  7617                           ;psect for function ___ftpack
  7618  0780                     ___ftpack:	
  7619                           
  7620                           ;incstack = 0
  7621                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7622  0780  0874               	movf	___ftpack@exp,w
  7623  0781  1903               	btfsc	3,2
  7624  0782  2F88               	goto	l2797
  7625  0783  0873               	movf	___ftpack@arg+2,w
  7626  0784  0472               	iorwf	___ftpack@arg+1,w
  7627  0785  0471               	iorwf	___ftpack@arg,w
  7628  0786  1D03               	skipz
  7629  0787  2F99               	goto	l2803
  7630  0788                     l2797:	
  7631  0788  3000               	movlw	0
  7632  0789  00F1               	movwf	?___ftpack
  7633  078A  3000               	movlw	0
  7634  078B  00F2               	movwf	?___ftpack+1
  7635  078C  3000               	movlw	0
  7636  078D  00F3               	movwf	?___ftpack+2
  7637  078E  0008               	return
  7638  078F                     l2801:	
  7639  078F  3001               	movlw	1
  7640  0790  00F6               	movwf	??___ftpack
  7641  0791  0876               	movf	??___ftpack,w
  7642  0792  07F4               	addwf	___ftpack@exp,f
  7643  0793  3001               	movlw	1
  7644  0794                     u3195:	
  7645  0794  36F3               	lsrf	___ftpack@arg+2,f
  7646  0795  0CF2               	rrf	___ftpack@arg+1,f
  7647  0796  0CF1               	rrf	___ftpack@arg,f
  7648  0797  0B89               	decfsz	9,f
  7649  0798  2F94               	goto	u3195
  7650  0799                     l2803:	
  7651  0799  30FE               	movlw	254
  7652  079A  0573               	andwf	___ftpack@arg+2,w
  7653  079B  1903               	btfsc	3,2
  7654  079C  2FB2               	goto	l818
  7655  079D  2F8F               	goto	l2801
  7656  079E                     l2805:	
  7657  079E  3001               	movlw	1
  7658  079F  00F6               	movwf	??___ftpack
  7659  07A0  0876               	movf	??___ftpack,w
  7660  07A1  07F4               	addwf	___ftpack@exp,f
  7661  07A2  3001               	movlw	1
  7662  07A3  07F1               	addwf	___ftpack@arg,f
  7663  07A4  3000               	movlw	0
  7664  07A5  1803               	skipnc
  7665  07A6  3001               	movlw	1
  7666  07A7  07F2               	addwf	___ftpack@arg+1,f
  7667  07A8  3000               	movlw	0
  7668  07A9  1803               	skipnc
  7669  07AA  3001               	movlw	1
  7670  07AB  07F3               	addwf	___ftpack@arg+2,f
  7671  07AC  3001               	movlw	1
  7672  07AD                     u3215:	
  7673  07AD  36F3               	lsrf	___ftpack@arg+2,f
  7674  07AE  0CF2               	rrf	___ftpack@arg+1,f
  7675  07AF  0CF1               	rrf	___ftpack@arg,f
  7676  07B0  0B89               	decfsz	9,f
  7677  07B1  2FAD               	goto	u3215
  7678  07B2                     l818:	
  7679  07B2  30FF               	movlw	255
  7680  07B3  0573               	andwf	___ftpack@arg+2,w
  7681  07B4  1903               	btfsc	3,2
  7682  07B5  2FBF               	goto	l2813
  7683  07B6  2F9E               	goto	l2805
  7684  07B7                     l2811:	
  7685  07B7  3001               	movlw	1
  7686  07B8  02F4               	subwf	___ftpack@exp,f
  7687  07B9  3001               	movlw	1
  7688  07BA                     u3235:	
  7689  07BA  35F1               	lslf	___ftpack@arg,f
  7690  07BB  0DF2               	rlf	___ftpack@arg+1,f
  7691  07BC  0DF3               	rlf	___ftpack@arg+2,f
  7692  07BD  0B89               	decfsz	9,f
  7693  07BE  2FBA               	goto	u3235
  7694  07BF                     l2813:	
  7695  07BF  1BF2               	btfsc	___ftpack@arg+1,7
  7696  07C0  2FC5               	goto	l825
  7697  07C1  3002               	movlw	2
  7698  07C2  0274               	subwf	___ftpack@exp,w
  7699  07C3  1803               	skipnc
  7700  07C4  2FB7               	goto	l2811
  7701  07C5                     l825:	
  7702  07C5  1874               	btfsc	___ftpack@exp,0
  7703  07C6  2FCD               	goto	l826
  7704  07C7  30FF               	movlw	255
  7705  07C8  05F1               	andwf	___ftpack@arg,f
  7706  07C9  307F               	movlw	127
  7707  07CA  05F2               	andwf	___ftpack@arg+1,f
  7708  07CB  30FF               	movlw	255
  7709  07CC  05F3               	andwf	___ftpack@arg+2,f
  7710  07CD                     l826:	
  7711  07CD  1003               	clrc
  7712  07CE  0CF4               	rrf	___ftpack@exp,f
  7713  07CF  0874               	movf	___ftpack@exp,w
  7714  07D0  00F6               	movwf	??___ftpack
  7715  07D1  01F7               	clrf	??___ftpack+1
  7716  07D2  01F8               	clrf	??___ftpack+2
  7717  07D3  3010               	movlw	16
  7718  07D4                     u3275:	
  7719  07D4  35F6               	lslf	??___ftpack,f
  7720  07D5  0DF7               	rlf	??___ftpack+1,f
  7721  07D6  0DF8               	rlf	??___ftpack+2,f
  7722  07D7  0B89               	decfsz	9,f
  7723  07D8  2FD4               	goto	u3275
  7724  07D9  0876               	movf	??___ftpack,w
  7725  07DA  04F1               	iorwf	___ftpack@arg,f
  7726  07DB  0877               	movf	??___ftpack+1,w
  7727  07DC  04F2               	iorwf	___ftpack@arg+1,f
  7728  07DD  0878               	movf	??___ftpack+2,w
  7729  07DE  04F3               	iorwf	___ftpack@arg+2,f
  7730  07DF  0875               	movf	___ftpack@sign,w
  7731  07E0  1903               	btfsc	3,2
  7732  07E1  0008               	return
  7733  07E2  17F3               	bsf	___ftpack@arg+2,7
  7734  07E3  0008               	return
  7735  07E4                     __end_of___ftpack:	
  7736                           
  7737                           	psect	text18
  7738  0CBB                     __ptext18:	
  7739 ;; *************** function _ADCC_GetConversionResult *****************
  7740 ;; Defined at:
  7741 ;;		line 131 in file "adcc.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  2    1[COMMON] unsigned int 
  7748 ;; Registers used:
  7749 ;;		wreg
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;Total ram usage:        2 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    3
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		_read_MCP9700A
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           
  7770                           ;psect for function _ADCC_GetConversionResult
  7771  0CBB                     _ADCC_GetConversionResult:	
  7772                           
  7773                           ;adcc.c: 134: return ((ADRESH << 8) + ADRESL);
  7774                           
  7775                           ;incstack = 0
  7776                           ; Regs used in _ADCC_GetConversionResult: [wreg]
  7777  0CBB  0021               	movlb	1	; select bank1
  7778  0CBC  080D               	movf	13,w	;volatile
  7779  0CBD  00F2               	movwf	?_ADCC_GetConversionResult+1
  7780  0CBE  080C               	movf	12,w	;volatile
  7781  0CBF  00F1               	movwf	?_ADCC_GetConversionResult
  7782  0CC0  0008               	return
  7783  0CC1                     __end_of_ADCC_GetConversionResult:	
  7784                           
  7785                           	psect	text19
  7786  0DAA                     __ptext19:	
  7787 ;; *************** function _eeprom_write *****************
  7788 ;; Defined at:
  7789 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eewrite.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  addr            1    wreg     unsigned char 
  7792 ;;  value           1    1[COMMON] unsigned char 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  addr            1    2[COMMON] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7804 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;Total ram usage:        2 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    3
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_main
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           
  7819                           ;psect for function _eeprom_write
  7820  0DAA                     _eeprom_write:	
  7821                           
  7822                           ;incstack = 0
  7823                           ; Regs used in _eeprom_write: [wreg+status,2]
  7824                           ;eeprom_write@addr stored from wreg
  7825  0DAA  00F2               	movwf	eeprom_write@addr
  7826  0DAB                     l566:	
  7827  0DAB  0030               	movlb	16	; select bank16
  7828  0DAC  189E               	btfsc	30,1	;volsfr
  7829  0DAD  2DAB               	goto	l566
  7830  0DAE  171E               	bsf	30,6	;volsfr
  7831  0DAF  0872               	movf	eeprom_write@addr,w
  7832  0DB0  009A               	movwf	26	;volatile
  7833  0DB1  3070               	movlw	112
  7834  0DB2  009B               	movwf	27	;volatile
  7835  0DB3  019D               	clrf	29	;volatile
  7836  0DB4  0871               	movf	eeprom_write@value,w
  7837  0DB5  009C               	movwf	28	;volatile
  7838  0DB6  0020               	movlb	0	; select bank0
  7839  0DB7  1003               	bcf	3,0	;volatile
  7840  0DB8  1B8B               	btfsc	11,7	;volatile
  7841  0DB9  1403               	bsf	3,0	;volatile
  7842  0DBA  138B               	bcf	11,7	;volatile
  7843  0DBB  0030               	movlb	16	; select bank16
  7844  0DBC  151E               	bsf	30,2	;volsfr
  7845  0DBD  3055               	movlw	85
  7846  0DBE  009F               	movwf	31	;volsfr
  7847  0DBF  30AA               	movlw	170
  7848  0DC0  009F               	movwf	31	;volsfr
  7849  0DC1  149E               	bsf	30,1	;volsfr
  7850  0DC2                     l570:	
  7851  0DC2  189E               	btfsc	30,1	;volsfr
  7852  0DC3  2DC2               	goto	l570
  7853  0DC4  111E               	bcf	30,2	;volsfr
  7854  0DC5  0020               	movlb	0	; select bank0
  7855  0DC6  1C03               	btfss	3,0	;volatile
  7856  0DC7  0008               	return
  7857  0DC8  178B               	bsf	11,7	;volatile
  7858  0DC9  0008               	return
  7859  0DCA                     __end_of_eeprom_write:	
  7860                           
  7861                           	psect	text20
  7862  0CE7                     __ptext20:	
  7863 ;; *************** function _eeprom_read *****************
  7864 ;; Defined at:
  7865 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eeread.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;  addr            1    wreg     unsigned char 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  addr            1    1[COMMON] unsigned char 
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  1    wreg      unsigned char 
  7872 ;; Registers used:
  7873 ;;		wreg
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;Total ram usage:        1 bytes
  7884 ;; Hardware stack levels used:    1
  7885 ;; Hardware stack levels required when called:    3
  7886 ;; This function calls:
  7887 ;;		Nothing
  7888 ;; This function is called by:
  7889 ;;		_main
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           
  7894                           ;psect for function _eeprom_read
  7895  0CE7                     _eeprom_read:	
  7896                           
  7897                           ;incstack = 0
  7898                           ; Regs used in _eeprom_read: [wreg]
  7899                           ;eeprom_read@addr stored from wreg
  7900  0CE7  00F1               	movwf	eeprom_read@addr
  7901  0CE8                     l544:	
  7902  0CE8  0064               	clrwdt	;# 
  7903  0CE9  0030               	movlb	16	; select bank16
  7904  0CEA  189E               	btfsc	30,1	;volsfr
  7905  0CEB  2CE8               	goto	l544
  7906  0CEC  171E               	bsf	30,6	;volsfr
  7907  0CED  0871               	movf	eeprom_read@addr,w
  7908  0CEE  009A               	movwf	26	;volatile
  7909  0CEF  3070               	movlw	112
  7910  0CF0  009B               	movwf	27	;volatile
  7911  0CF1  141E               	bsf	30,0	;volsfr
  7912  0CF2  081C               	movf	28,w	;volatile
  7913  0CF3  0008               	return
  7914  0CF4                     __end_of_eeprom_read:	
  7915                           
  7916                           	psect	text21
  7917  0719                     __ptext21:	
  7918 ;; *************** function _display_digit *****************
  7919 ;; Defined at:
  7920 ;;		line 465 in file "main.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  count           1    wreg     unsigned char 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  count           1    1[COMMON] unsigned char 
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      void 
  7927 ;; Registers used:
  7928 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;Total ram usage:        1 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; Hardware stack levels required when called:    3
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_main
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           
  7949                           ;psect for function _display_digit
  7950  0719                     _display_digit:	
  7951                           
  7952                           ;incstack = 0
  7953                           ; Regs used in _display_digit: [wreg-fsr0h+status,2+status,0]
  7954                           ;display_digit@count stored from wreg
  7955  0719  00F1               	movwf	display_digit@count
  7956                           
  7957                           ;main.c: 467: switch(count){
  7958  071A  2F75               	goto	l3395
  7959  071B                     l181:	
  7960                           ;main.c: 469: do { LATCbits.LATC0 = 1; } while(0);
  7961                           
  7962                           ;main.c: 468: case 0:
  7963                           
  7964  071B  0020               	movlb	0	; select bank0
  7965  071C  1418               	bsf	24,0	;volatile
  7966                           
  7967                           ;main.c: 470: do { LATAbits.LATA6 = 1; } while(0);
  7968  071D  1716               	bsf	22,6	;volatile
  7969                           
  7970                           ;main.c: 471: do { LATAbits.LATA7 = 1; } while(0);
  7971  071E  1796               	bsf	22,7	;volatile
  7972                           
  7973                           ;main.c: 472: do { LATAbits.LATA5 = 1; } while(0);
  7974  071F  1696               	bsf	22,5	;volatile
  7975                           
  7976                           ;main.c: 473: do { LATAbits.LATA4 = 1; } while(0);
  7977  0720  1616               	bsf	22,4	;volatile
  7978                           
  7979                           ;main.c: 474: do { LATAbits.LATA3 = 1; } while(0);
  7980  0721  1596               	bsf	22,3	;volatile
  7981                           
  7982                           ;main.c: 475: do { LATAbits.LATA2 = 0; } while(0);
  7983  0722  1116               	bcf	22,2	;volatile
  7984                           
  7985                           ;main.c: 476: break;
  7986  0723  0008               	return
  7987  0724                     l197:	
  7988                           ;main.c: 478: do { LATCbits.LATC0 = 0; } while(0);
  7989                           
  7990                           ;main.c: 477: case 1:
  7991                           
  7992  0724  0020               	movlb	0	; select bank0
  7993  0725  1018               	bcf	24,0	;volatile
  7994                           
  7995                           ;main.c: 479: do { LATAbits.LATA6 = 1; } while(0);
  7996  0726  1716               	bsf	22,6	;volatile
  7997                           
  7998                           ;main.c: 480: do { LATAbits.LATA7 = 1; } while(0);
  7999  0727  1796               	bsf	22,7	;volatile
  8000                           
  8001                           ;main.c: 481: do { LATAbits.LATA5 = 0; } while(0);
  8002  0728  1296               	bcf	22,5	;volatile
  8003                           
  8004                           ;main.c: 482: do { LATAbits.LATA4 = 0; } while(0);
  8005  0729  1216               	bcf	22,4	;volatile
  8006                           
  8007                           ;main.c: 483: do { LATAbits.LATA3 = 0; } while(0);
  8008  072A  1196               	bcf	22,3	;volatile
  8009                           
  8010                           ;main.c: 484: do { LATAbits.LATA2 = 0; } while(0);
  8011  072B  1116               	bcf	22,2	;volatile
  8012                           
  8013                           ;main.c: 485: break;
  8014  072C  0008               	return
  8015  072D                     l212:	
  8016                           ;main.c: 487: do { LATCbits.LATC0 = 1; } while(0);
  8017                           
  8018                           ;main.c: 486: case 2:
  8019                           
  8020  072D  0020               	movlb	0	; select bank0
  8021  072E  1418               	bsf	24,0	;volatile
  8022                           
  8023                           ;main.c: 488: do { LATAbits.LATA6 = 1; } while(0);
  8024  072F  1716               	bsf	22,6	;volatile
  8025                           
  8026                           ;main.c: 489: do { LATAbits.LATA7 = 0; } while(0);
  8027  0730  1396               	bcf	22,7	;volatile
  8028                           
  8029                           ;main.c: 490: do { LATAbits.LATA5 = 1; } while(0);
  8030  0731  1696               	bsf	22,5	;volatile
  8031                           
  8032                           ;main.c: 491: do { LATAbits.LATA4 = 1; } while(0);
  8033  0732  1616               	bsf	22,4	;volatile
  8034                           
  8035                           ;main.c: 492: do { LATAbits.LATA3 = 0; } while(0);
  8036  0733  1196               	bcf	22,3	;volatile
  8037                           
  8038                           ;main.c: 493: do { LATAbits.LATA2 = 1; } while(0);
  8039  0734  1516               	bsf	22,2	;volatile
  8040                           
  8041                           ;main.c: 494: break;
  8042  0735  0008               	return
  8043  0736                     l227:	
  8044                           ;main.c: 496: do { LATCbits.LATC0 = 1; } while(0);
  8045                           
  8046                           ;main.c: 495: case 3:
  8047                           
  8048  0736  0020               	movlb	0	; select bank0
  8049  0737  1418               	bsf	24,0	;volatile
  8050                           
  8051                           ;main.c: 497: do { LATAbits.LATA6 = 1; } while(0);
  8052  0738  1716               	bsf	22,6	;volatile
  8053                           
  8054                           ;main.c: 498: do { LATAbits.LATA7 = 1; } while(0);
  8055  0739  1796               	bsf	22,7	;volatile
  8056                           
  8057                           ;main.c: 499: do { LATAbits.LATA5 = 1; } while(0);
  8058  073A  1696               	bsf	22,5	;volatile
  8059                           
  8060                           ;main.c: 500: do { LATAbits.LATA4 = 0; } while(0);
  8061  073B  1216               	bcf	22,4	;volatile
  8062                           
  8063                           ;main.c: 501: do { LATAbits.LATA3 = 0; } while(0);
  8064  073C  1196               	bcf	22,3	;volatile
  8065                           
  8066                           ;main.c: 502: do { LATAbits.LATA2 = 1; } while(0);
  8067  073D  1516               	bsf	22,2	;volatile
  8068                           
  8069                           ;main.c: 503: break;
  8070  073E  0008               	return
  8071  073F                     l242:	
  8072                           ;main.c: 505: do { LATCbits.LATC0 = 0; } while(0);
  8073                           
  8074                           ;main.c: 504: case 4:
  8075                           
  8076  073F  0020               	movlb	0	; select bank0
  8077  0740  1018               	bcf	24,0	;volatile
  8078                           
  8079                           ;main.c: 506: do { LATAbits.LATA6 = 1; } while(0);
  8080  0741  1716               	bsf	22,6	;volatile
  8081                           
  8082                           ;main.c: 507: do { LATAbits.LATA7 = 1; } while(0);
  8083  0742  1796               	bsf	22,7	;volatile
  8084                           
  8085                           ;main.c: 508: do { LATAbits.LATA5 = 0; } while(0);
  8086  0743  1296               	bcf	22,5	;volatile
  8087                           
  8088                           ;main.c: 509: do { LATAbits.LATA4 = 0; } while(0);
  8089  0744  1216               	bcf	22,4	;volatile
  8090                           
  8091                           ;main.c: 510: do { LATAbits.LATA3 = 1; } while(0);
  8092  0745  1596               	bsf	22,3	;volatile
  8093                           
  8094                           ;main.c: 511: do { LATAbits.LATA2 = 1; } while(0);
  8095  0746  1516               	bsf	22,2	;volatile
  8096                           
  8097                           ;main.c: 512: break;
  8098  0747  0008               	return
  8099  0748                     l257:	
  8100                           ;main.c: 514: do { LATCbits.LATC0 = 1; } while(0);
  8101                           
  8102                           ;main.c: 513: case 5:
  8103                           
  8104  0748  0020               	movlb	0	; select bank0
  8105  0749  1418               	bsf	24,0	;volatile
  8106                           
  8107                           ;main.c: 515: do { LATAbits.LATA6 = 0; } while(0);
  8108  074A  1316               	bcf	22,6	;volatile
  8109                           
  8110                           ;main.c: 516: do { LATAbits.LATA7 = 1; } while(0);
  8111  074B  1796               	bsf	22,7	;volatile
  8112                           
  8113                           ;main.c: 517: do { LATAbits.LATA5 = 1; } while(0);
  8114  074C  1696               	bsf	22,5	;volatile
  8115                           
  8116                           ;main.c: 518: do { LATAbits.LATA4 = 0; } while(0);
  8117  074D  1216               	bcf	22,4	;volatile
  8118                           
  8119                           ;main.c: 519: do { LATAbits.LATA3 = 1; } while(0);
  8120  074E  1596               	bsf	22,3	;volatile
  8121                           
  8122                           ;main.c: 520: do { LATAbits.LATA2 = 1; } while(0);
  8123  074F  1516               	bsf	22,2	;volatile
  8124                           
  8125                           ;main.c: 521: break;
  8126  0750  0008               	return
  8127  0751                     l272:	
  8128                           ;main.c: 523: do { LATCbits.LATC0 = 1; } while(0);
  8129                           
  8130                           ;main.c: 522: case 6:
  8131                           
  8132  0751  0020               	movlb	0	; select bank0
  8133  0752  1418               	bsf	24,0	;volatile
  8134                           
  8135                           ;main.c: 524: do { LATAbits.LATA6 = 0; } while(0);
  8136  0753  1316               	bcf	22,6	;volatile
  8137                           
  8138                           ;main.c: 525: do { LATAbits.LATA7 = 1; } while(0);
  8139  0754  1796               	bsf	22,7	;volatile
  8140                           
  8141                           ;main.c: 526: do { LATAbits.LATA5 = 1; } while(0);
  8142  0755  1696               	bsf	22,5	;volatile
  8143                           
  8144                           ;main.c: 527: do { LATAbits.LATA4 = 1; } while(0);
  8145  0756  1616               	bsf	22,4	;volatile
  8146                           
  8147                           ;main.c: 528: do { LATAbits.LATA3 = 1; } while(0);
  8148  0757  1596               	bsf	22,3	;volatile
  8149                           
  8150                           ;main.c: 529: do { LATAbits.LATA2 = 1; } while(0);
  8151  0758  1516               	bsf	22,2	;volatile
  8152                           
  8153                           ;main.c: 530: break;
  8154  0759  0008               	return
  8155  075A                     l287:	
  8156                           ;main.c: 532: do { LATCbits.LATC0 = 1; } while(0);
  8157                           
  8158                           ;main.c: 531: case 7:
  8159                           
  8160  075A  0020               	movlb	0	; select bank0
  8161  075B  1418               	bsf	24,0	;volatile
  8162                           
  8163                           ;main.c: 533: do { LATAbits.LATA6 = 1; } while(0);
  8164  075C  1716               	bsf	22,6	;volatile
  8165                           
  8166                           ;main.c: 534: do { LATAbits.LATA7 = 1; } while(0);
  8167  075D  1796               	bsf	22,7	;volatile
  8168                           
  8169                           ;main.c: 535: do { LATAbits.LATA5 = 0; } while(0);
  8170  075E  1296               	bcf	22,5	;volatile
  8171                           
  8172                           ;main.c: 536: do { LATAbits.LATA4 = 0; } while(0);
  8173  075F  1216               	bcf	22,4	;volatile
  8174                           
  8175                           ;main.c: 537: do { LATAbits.LATA3 = 0; } while(0);
  8176  0760  1196               	bcf	22,3	;volatile
  8177                           
  8178                           ;main.c: 538: do { LATAbits.LATA2 = 0; } while(0);
  8179  0761  1116               	bcf	22,2	;volatile
  8180                           
  8181                           ;main.c: 539: break;
  8182  0762  0008               	return
  8183  0763                     l302:	
  8184                           ;main.c: 541: do { LATCbits.LATC0 = 1; } while(0);
  8185                           
  8186                           ;main.c: 540: case 8:
  8187                           
  8188  0763  0020               	movlb	0	; select bank0
  8189  0764  1418               	bsf	24,0	;volatile
  8190                           
  8191                           ;main.c: 542: do { LATAbits.LATA6 = 1; } while(0);
  8192  0765  1716               	bsf	22,6	;volatile
  8193                           
  8194                           ;main.c: 543: do { LATAbits.LATA7 = 1; } while(0);
  8195  0766  1796               	bsf	22,7	;volatile
  8196                           
  8197                           ;main.c: 544: do { LATAbits.LATA5 = 1; } while(0);
  8198  0767  1696               	bsf	22,5	;volatile
  8199                           
  8200                           ;main.c: 545: do { LATAbits.LATA4 = 1; } while(0);
  8201  0768  1616               	bsf	22,4	;volatile
  8202                           
  8203                           ;main.c: 546: do { LATAbits.LATA3 = 1; } while(0);
  8204  0769  1596               	bsf	22,3	;volatile
  8205                           
  8206                           ;main.c: 547: do { LATAbits.LATA2 = 1; } while(0);
  8207  076A  1516               	bsf	22,2	;volatile
  8208                           
  8209                           ;main.c: 548: break;
  8210  076B  0008               	return
  8211  076C                     l317:	
  8212                           ;main.c: 550: do { LATCbits.LATC0 = 1; } while(0);
  8213                           
  8214                           ;main.c: 549: case 9:
  8215                           
  8216  076C  0020               	movlb	0	; select bank0
  8217  076D  1418               	bsf	24,0	;volatile
  8218                           
  8219                           ;main.c: 551: do { LATAbits.LATA6 = 1; } while(0);
  8220  076E  1716               	bsf	22,6	;volatile
  8221                           
  8222                           ;main.c: 552: do { LATAbits.LATA7 = 1; } while(0);
  8223  076F  1796               	bsf	22,7	;volatile
  8224                           
  8225                           ;main.c: 553: do { LATAbits.LATA5 = 1; } while(0);
  8226  0770  1696               	bsf	22,5	;volatile
  8227                           
  8228                           ;main.c: 554: do { LATAbits.LATA4 = 0; } while(0);
  8229  0771  1216               	bcf	22,4	;volatile
  8230                           
  8231                           ;main.c: 555: do { LATAbits.LATA3 = 1; } while(0);
  8232  0772  1596               	bsf	22,3	;volatile
  8233                           
  8234                           ;main.c: 556: do { LATAbits.LATA2 = 1; } while(0);
  8235  0773  1516               	bsf	22,2	;volatile
  8236                           
  8237                           ;main.c: 558: }
  8238                           
  8239                           ;main.c: 557: break;
  8240  0774  0008               	return
  8241  0775                     l3395:	
  8242  0775  0871               	movf	display_digit@count,w
  8243                           
  8244                           ; Switch size 1, requested type "space"
  8245                           ; Number of cases is 10, Range of values is 0 to 9
  8246                           ; switch strategies available:
  8247                           ; Name         Instructions Cycles
  8248                           ; direct_byte           26     6 (fixed)
  8249                           ; simple_byte           31    16 (average)
  8250                           ; jumptable            260     6 (fixed)
  8251                           ;	Chosen strategy is direct_byte
  8252  0776  0084               	movwf	4
  8253  0777  300A               	movlw	10
  8254  0778  0204               	subwf	4,w
  8255  0779  1803               	skipnc
  8256  077A  0008               	return
  8257  077B  3188               	movlp	high S3623
  8258  077C  3504               	lslf	4,w
  8259  077D  3E00               	addlw	low S3623
  8260  077E  0082               	movwf	2
  8261  077F  0008               	return
  8262  0780                     __end_of_display_digit:	
  8263                           
  8264                           	psect	swtext1
  8265  0800                     __pswtext1:	
  8266  0800                     S3623:	
  8267  0800  3187  2F1B         	ljmp	l181
  8268  0802  3187  2F24         	ljmp	l197
  8269  0804  3187  2F2D         	ljmp	l212
  8270  0806  3187  2F36         	ljmp	l227
  8271  0808  3187  2F3F         	ljmp	l242
  8272  080A  3187  2F48         	ljmp	l257
  8273  080C  3187  2F51         	ljmp	l272
  8274  080E  3187  2F5A         	ljmp	l287
  8275  0810  3187  2F63         	ljmp	l302
  8276  0812  3187  2F6C         	ljmp	l317
  8277                           
  8278                           	psect	text22
  8279  0DCA                     __ptext22:	
  8280 ;; *************** function _decToBcd *****************
  8281 ;; Defined at:
  8282 ;;		line 441 in file "main.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  val             1    wreg     unsigned char 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  val             1   10[COMMON] unsigned char 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  1    wreg      unsigned char 
  8289 ;; Registers used:
  8290 ;;		wreg, status,2, status,0, pclath, cstack
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;Total ram usage:        8 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    4
  8303 ;; This function calls:
  8304 ;;		___awdiv
  8305 ;;		___awmod
  8306 ;; This function is called by:
  8307 ;;		_main
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           
  8312                           ;psect for function _decToBcd
  8313  0DCA                     _decToBcd:	
  8314                           
  8315                           ;incstack = 0
  8316                           ; Regs used in _decToBcd: [wreg+status,2+status,0+pclath+cstack]
  8317                           ;decToBcd@val stored from wreg
  8318  0DCA  00FA               	movwf	decToBcd@val
  8319                           
  8320                           ;main.c: 443: return ( (val/10*16) + (val%10) );
  8321  0DCB  300A               	movlw	10
  8322  0DCC  00F1               	movwf	___awmod@divisor
  8323  0DCD  3000               	movlw	0
  8324  0DCE  00F2               	movwf	___awmod@divisor+1
  8325  0DCF  087A               	movf	decToBcd@val,w
  8326  0DD0  0020               	movlb	0	; select bank0
  8327  0DD1  00A0               	movwf	??_decToBcd
  8328  0DD2  01A1               	clrf	??_decToBcd+1
  8329  0DD3  0820               	movf	??_decToBcd,w
  8330  0DD4  00F3               	movwf	___awmod@dividend
  8331  0DD5  0821               	movf	??_decToBcd+1,w
  8332  0DD6  00F4               	movwf	___awmod@dividend+1
  8333  0DD7  318F  2719  318D   	fcall	___awmod
  8334  0DDA  0871               	movf	?___awmod,w
  8335  0DDB  0020               	movlb	0	; select bank0
  8336  0DDC  00A2               	movwf	??_decToBcd+2
  8337  0DDD  0872               	movf	?___awmod+1,w
  8338  0DDE  00A3               	movwf	??_decToBcd+3
  8339  0DDF  300A               	movlw	10
  8340  0DE0  00F1               	movwf	___awdiv@divisor
  8341  0DE1  3000               	movlw	0
  8342  0DE2  00F2               	movwf	___awdiv@divisor+1
  8343  0DE3  087A               	movf	decToBcd@val,w
  8344  0DE4  00A4               	movwf	??_decToBcd+4
  8345  0DE5  01A5               	clrf	??_decToBcd+5
  8346  0DE6  0824               	movf	??_decToBcd+4,w
  8347  0DE7  00F3               	movwf	___awdiv@dividend
  8348  0DE8  0825               	movf	??_decToBcd+5,w
  8349  0DE9  00F4               	movwf	___awdiv@dividend+1
  8350  0DEA  318F  275E  318D   	fcall	___awdiv
  8351  0DED  0871               	movf	?___awdiv,w
  8352  0DEE  0020               	movlb	0	; select bank0
  8353  0DEF  00A6               	movwf	??_decToBcd+6
  8354  0DF0  3003               	movlw	3
  8355  0DF1                     u4295:	
  8356  0DF1  35A6               	lslf	??_decToBcd+6,f
  8357  0DF2  3EFF               	addlw	-1
  8358  0DF3  1D03               	skipz
  8359  0DF4  2DF1               	goto	u4295
  8360  0DF5  3526               	lslf	??_decToBcd+6,w
  8361  0DF6  0722               	addwf	??_decToBcd+2,w
  8362  0DF7  0008               	return
  8363  0DF8                     __end_of_decToBcd:	
  8364                           
  8365                           	psect	text23
  8366  0F19                     __ptext23:	
  8367 ;; *************** function ___awmod *****************
  8368 ;; Defined at:
  8369 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  divisor         2    1[COMMON] int 
  8372 ;;  dividend        2    3[COMMON] int 
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;  sign            1    7[COMMON] unsigned char 
  8375 ;;  counter         1    6[COMMON] unsigned char 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  2    1[COMMON] int 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8388 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8389 ;;Total ram usage:        7 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:    3
  8392 ;; This function calls:
  8393 ;;		Nothing
  8394 ;; This function is called by:
  8395 ;;		_decToBcd
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           
  8400                           ;psect for function ___awmod
  8401  0F19                     ___awmod:	
  8402                           
  8403                           ;incstack = 0
  8404                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8405  0F19  01F7               	clrf	___awmod@sign
  8406  0F1A  1FF4               	btfss	___awmod@dividend+1,7
  8407  0F1B  2F23               	goto	l3145
  8408  0F1C  09F3               	comf	___awmod@dividend,f
  8409  0F1D  09F4               	comf	___awmod@dividend+1,f
  8410  0F1E  0AF3               	incf	___awmod@dividend,f
  8411  0F1F  1903               	skipnz
  8412  0F20  0AF4               	incf	___awmod@dividend+1,f
  8413  0F21  01F7               	clrf	___awmod@sign
  8414  0F22  0AF7               	incf	___awmod@sign,f
  8415  0F23                     l3145:	
  8416  0F23  1FF2               	btfss	___awmod@divisor+1,7
  8417  0F24  2F2A               	goto	l3149
  8418  0F25  09F1               	comf	___awmod@divisor,f
  8419  0F26  09F2               	comf	___awmod@divisor+1,f
  8420  0F27  0AF1               	incf	___awmod@divisor,f
  8421  0F28  1903               	skipnz
  8422  0F29  0AF2               	incf	___awmod@divisor+1,f
  8423  0F2A                     l3149:	
  8424  0F2A  0871               	movf	___awmod@divisor,w
  8425  0F2B  0472               	iorwf	___awmod@divisor+1,w
  8426  0F2C  1903               	btfsc	3,2
  8427  0F2D  2F51               	goto	l3167
  8428  0F2E  01F6               	clrf	___awmod@counter
  8429  0F2F  0AF6               	incf	___awmod@counter,f
  8430  0F30                     l3157:	
  8431  0F30  1BF2               	btfsc	___awmod@divisor+1,7
  8432  0F31  2F3C               	goto	l3159
  8433  0F32  3001               	movlw	1
  8434  0F33                     u3855:	
  8435  0F33  35F1               	lslf	___awmod@divisor,f
  8436  0F34  0DF2               	rlf	___awmod@divisor+1,f
  8437  0F35  0B89               	decfsz	9,f
  8438  0F36  2F33               	goto	u3855
  8439  0F37  3001               	movlw	1
  8440  0F38  00F5               	movwf	??___awmod
  8441  0F39  0875               	movf	??___awmod,w
  8442  0F3A  07F6               	addwf	___awmod@counter,f
  8443  0F3B  2F30               	goto	l3157
  8444  0F3C                     l3159:	
  8445  0F3C  0872               	movf	___awmod@divisor+1,w
  8446  0F3D  0274               	subwf	___awmod@dividend+1,w
  8447  0F3E  1D03               	skipz
  8448  0F3F  2F42               	goto	u3875
  8449  0F40  0871               	movf	___awmod@divisor,w
  8450  0F41  0273               	subwf	___awmod@dividend,w
  8451  0F42                     u3875:	
  8452  0F42  1C03               	skipc
  8453  0F43  2F48               	goto	l3163
  8454  0F44  0871               	movf	___awmod@divisor,w
  8455  0F45  02F3               	subwf	___awmod@dividend,f
  8456  0F46  0872               	movf	___awmod@divisor+1,w
  8457  0F47  3BF4               	subwfb	___awmod@dividend+1,f
  8458  0F48                     l3163:	
  8459  0F48  3001               	movlw	1
  8460  0F49                     u3885:	
  8461  0F49  36F2               	lsrf	___awmod@divisor+1,f
  8462  0F4A  0CF1               	rrf	___awmod@divisor,f
  8463  0F4B  0B89               	decfsz	9,f
  8464  0F4C  2F49               	goto	u3885
  8465  0F4D  3001               	movlw	1
  8466  0F4E  02F6               	subwf	___awmod@counter,f
  8467  0F4F  1D03               	btfss	3,2
  8468  0F50  2F3C               	goto	l3159
  8469  0F51                     l3167:	
  8470  0F51  0877               	movf	___awmod@sign,w
  8471  0F52  1903               	btfsc	3,2
  8472  0F53  2F59               	goto	l3171
  8473  0F54  09F3               	comf	___awmod@dividend,f
  8474  0F55  09F4               	comf	___awmod@dividend+1,f
  8475  0F56  0AF3               	incf	___awmod@dividend,f
  8476  0F57  1903               	skipnz
  8477  0F58  0AF4               	incf	___awmod@dividend+1,f
  8478  0F59                     l3171:	
  8479  0F59  0874               	movf	___awmod@dividend+1,w
  8480  0F5A  00F2               	movwf	?___awmod+1
  8481  0F5B  0873               	movf	___awmod@dividend,w
  8482  0F5C  00F1               	movwf	?___awmod
  8483  0F5D  0008               	return
  8484  0F5E                     __end_of___awmod:	
  8485                           
  8486                           	psect	text24
  8487  0F5E                     __ptext24:	
  8488 ;; *************** function ___awdiv *****************
  8489 ;; Defined at:
  8490 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  divisor         2    1[COMMON] int 
  8493 ;;  dividend        2    3[COMMON] int 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  quotient        2    8[COMMON] int 
  8496 ;;  sign            1    7[COMMON] unsigned char 
  8497 ;;  counter         1    6[COMMON] unsigned char 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  2    1[COMMON] int 
  8500 ;; Registers used:
  8501 ;;		wreg, status,2, status,0
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8508 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;Total ram usage:        9 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:    3
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_decToBcd
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           
  8522                           ;psect for function ___awdiv
  8523  0F5E                     ___awdiv:	
  8524                           
  8525                           ;incstack = 0
  8526                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8527  0F5E  01F7               	clrf	___awdiv@sign
  8528  0F5F  1FF2               	btfss	___awdiv@divisor+1,7
  8529  0F60  2F68               	goto	l3101
  8530  0F61  09F1               	comf	___awdiv@divisor,f
  8531  0F62  09F2               	comf	___awdiv@divisor+1,f
  8532  0F63  0AF1               	incf	___awdiv@divisor,f
  8533  0F64  1903               	skipnz
  8534  0F65  0AF2               	incf	___awdiv@divisor+1,f
  8535  0F66  01F7               	clrf	___awdiv@sign
  8536  0F67  0AF7               	incf	___awdiv@sign,f
  8537  0F68                     l3101:	
  8538  0F68  1FF4               	btfss	___awdiv@dividend+1,7
  8539  0F69  2F73               	goto	l3107
  8540  0F6A  09F3               	comf	___awdiv@dividend,f
  8541  0F6B  09F4               	comf	___awdiv@dividend+1,f
  8542  0F6C  0AF3               	incf	___awdiv@dividend,f
  8543  0F6D  1903               	skipnz
  8544  0F6E  0AF4               	incf	___awdiv@dividend+1,f
  8545  0F6F  3001               	movlw	1
  8546  0F70  00F5               	movwf	??___awdiv
  8547  0F71  0875               	movf	??___awdiv,w
  8548  0F72  06F7               	xorwf	___awdiv@sign,f
  8549  0F73                     l3107:	
  8550  0F73  01F8               	clrf	___awdiv@quotient
  8551  0F74  01F9               	clrf	___awdiv@quotient+1
  8552  0F75  0871               	movf	___awdiv@divisor,w
  8553  0F76  0472               	iorwf	___awdiv@divisor+1,w
  8554  0F77  1903               	btfsc	3,2
  8555  0F78  2FA2               	goto	l3129
  8556  0F79  01F6               	clrf	___awdiv@counter
  8557  0F7A  0AF6               	incf	___awdiv@counter,f
  8558  0F7B                     l3117:	
  8559  0F7B  1BF2               	btfsc	___awdiv@divisor+1,7
  8560  0F7C  2F87               	goto	l3119
  8561  0F7D  3001               	movlw	1
  8562  0F7E                     u3755:	
  8563  0F7E  35F1               	lslf	___awdiv@divisor,f
  8564  0F7F  0DF2               	rlf	___awdiv@divisor+1,f
  8565  0F80  0B89               	decfsz	9,f
  8566  0F81  2F7E               	goto	u3755
  8567  0F82  3001               	movlw	1
  8568  0F83  00F5               	movwf	??___awdiv
  8569  0F84  0875               	movf	??___awdiv,w
  8570  0F85  07F6               	addwf	___awdiv@counter,f
  8571  0F86  2F7B               	goto	l3117
  8572  0F87                     l3119:	
  8573  0F87  3001               	movlw	1
  8574  0F88                     u3775:	
  8575  0F88  35F8               	lslf	___awdiv@quotient,f
  8576  0F89  0DF9               	rlf	___awdiv@quotient+1,f
  8577  0F8A  0B89               	decfsz	9,f
  8578  0F8B  2F88               	goto	u3775
  8579  0F8C  0872               	movf	___awdiv@divisor+1,w
  8580  0F8D  0274               	subwf	___awdiv@dividend+1,w
  8581  0F8E  1D03               	skipz
  8582  0F8F  2F92               	goto	u3785
  8583  0F90  0871               	movf	___awdiv@divisor,w
  8584  0F91  0273               	subwf	___awdiv@dividend,w
  8585  0F92                     u3785:	
  8586  0F92  1C03               	skipc
  8587  0F93  2F99               	goto	l3125
  8588  0F94  0871               	movf	___awdiv@divisor,w
  8589  0F95  02F3               	subwf	___awdiv@dividend,f
  8590  0F96  0872               	movf	___awdiv@divisor+1,w
  8591  0F97  3BF4               	subwfb	___awdiv@dividend+1,f
  8592  0F98  1478               	bsf	___awdiv@quotient,0
  8593  0F99                     l3125:	
  8594  0F99  3001               	movlw	1
  8595  0F9A                     u3795:	
  8596  0F9A  36F2               	lsrf	___awdiv@divisor+1,f
  8597  0F9B  0CF1               	rrf	___awdiv@divisor,f
  8598  0F9C  0B89               	decfsz	9,f
  8599  0F9D  2F9A               	goto	u3795
  8600  0F9E  3001               	movlw	1
  8601  0F9F  02F6               	subwf	___awdiv@counter,f
  8602  0FA0  1D03               	btfss	3,2
  8603  0FA1  2F87               	goto	l3119
  8604  0FA2                     l3129:	
  8605  0FA2  0877               	movf	___awdiv@sign,w
  8606  0FA3  1903               	btfsc	3,2
  8607  0FA4  2FAA               	goto	l3133
  8608  0FA5  09F8               	comf	___awdiv@quotient,f
  8609  0FA6  09F9               	comf	___awdiv@quotient+1,f
  8610  0FA7  0AF8               	incf	___awdiv@quotient,f
  8611  0FA8  1903               	skipnz
  8612  0FA9  0AF9               	incf	___awdiv@quotient+1,f
  8613  0FAA                     l3133:	
  8614  0FAA  0879               	movf	___awdiv@quotient+1,w
  8615  0FAB  00F2               	movwf	?___awdiv+1
  8616  0FAC  0878               	movf	___awdiv@quotient,w
  8617  0FAD  00F1               	movwf	?___awdiv
  8618  0FAE  0008               	return
  8619  0FAF                     __end_of___awdiv:	
  8620                           
  8621                           	psect	text25
  8622  0D02                     __ptext25:	
  8623 ;; *************** function _SYSTEM_Initialize *****************
  8624 ;; Defined at:
  8625 ;;		line 83 in file "mcc.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;		None
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;		None
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      void 
  8632 ;; Registers used:
  8633 ;;		wreg, status,2, status,0, pclath, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8643 ;;Total ram usage:        0 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    5
  8646 ;; This function calls:
  8647 ;;		_ADCC_Initialize
  8648 ;;		_FVR_Initialize
  8649 ;;		_OSCILLATOR_Initialize
  8650 ;;		_PIN_MANAGER_Initialize
  8651 ;;		_TMR0_Initialize
  8652 ;; This function is called by:
  8653 ;;		_main
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           
  8658                           ;psect for function _SYSTEM_Initialize
  8659  0D02                     _SYSTEM_Initialize:	
  8660                           
  8661                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  8662                           
  8663                           ;incstack = 0
  8664                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8665  0D02  3187  27E4  318D   	fcall	_PIN_MANAGER_Initialize
  8666                           
  8667                           ;mcc.c: 87: OSCILLATOR_Initialize();
  8668  0D05  318C  24D5  318D   	fcall	_OSCILLATOR_Initialize
  8669                           
  8670                           ;mcc.c: 88: ADCC_Initialize();
  8671  0D08  318D  256E  318D   	fcall	_ADCC_Initialize
  8672                           
  8673                           ;mcc.c: 89: FVR_Initialize();
  8674  0D0B  3187  27FB  318D   	fcall	_FVR_Initialize
  8675                           
  8676                           ;mcc.c: 90: TMR0_Initialize();
  8677  0D0E  318D  2559         	fcall	_TMR0_Initialize
  8678  0D10  0008               	return
  8679  0D11                     __end_of_SYSTEM_Initialize:	
  8680                           
  8681                           	psect	text26
  8682  0D59                     __ptext26:	
  8683 ;; *************** function _TMR0_Initialize *****************
  8684 ;; Defined at:
  8685 ;;		line 61 in file "tmr0.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, status,2, status,0, pclath, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:    4
  8706 ;; This function calls:
  8707 ;;		_TMR0_SetInterruptHandler
  8708 ;;		_TMR0_StartTimer
  8709 ;; This function is called by:
  8710 ;;		_SYSTEM_Initialize
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           
  8715                           ;psect for function _TMR0_Initialize
  8716  0D59                     _TMR0_Initialize:	
  8717                           
  8718                           ;tmr0.c: 66: T0CON0 = 0x09;
  8719                           
  8720                           ;incstack = 0
  8721                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8722  0D59  3009               	movlw	9
  8723  0D5A  0020               	movlb	0	; select bank0
  8724  0D5B  009E               	movwf	30	;volatile
  8725                           
  8726                           ;tmr0.c: 69: T0CON1 = 0x73;
  8727  0D5C  3073               	movlw	115
  8728  0D5D  009F               	movwf	31	;volatile
  8729                           
  8730                           ;tmr0.c: 72: TMR0H = 0x63;
  8731  0D5E  3063               	movlw	99
  8732  0D5F  009D               	movwf	29	;volatile
  8733                           
  8734                           ;tmr0.c: 75: TMR0L = 0x00;
  8735  0D60  019C               	clrf	28	;volatile
  8736                           
  8737                           ;tmr0.c: 78: PIR0bits.TMR0IF = 0;
  8738  0D61  002E               	movlb	14	; select bank14
  8739  0D62  128C               	bcf	12,5	;volatile
  8740                           
  8741                           ;tmr0.c: 81: PIE0bits.TMR0IE = 1;
  8742  0D63  1696               	bsf	22,5	;volatile
  8743                           
  8744                           ;tmr0.c: 84: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  8745  0D64  30FF               	movlw	low _TMR0_DefaultInterruptHandler
  8746  0D65  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8747  0D66  3007               	movlw	high _TMR0_DefaultInterruptHandler
  8748  0D67  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8749  0D68  318C  24B5  318D   	fcall	_TMR0_SetInterruptHandler
  8750                           
  8751                           ;tmr0.c: 87: TMR0_StartTimer();
  8752  0D6B  318C  24B2         	fcall	_TMR0_StartTimer
  8753  0D6D  0008               	return
  8754  0D6E                     __end_of_TMR0_Initialize:	
  8755                           
  8756                           	psect	text27
  8757  0CB2                     __ptext27:	
  8758 ;; *************** function _TMR0_StartTimer *****************
  8759 ;; Defined at:
  8760 ;;		line 90 in file "tmr0.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;		None
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;		None
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		None
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8778 ;;Total ram usage:        0 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; Hardware stack levels required when called:    3
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_TMR0_Initialize
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           
  8789                           ;psect for function _TMR0_StartTimer
  8790  0CB2                     _TMR0_StartTimer:	
  8791                           
  8792                           ;tmr0.c: 93: T0CON0bits.T0EN = 1;
  8793                           
  8794                           ;incstack = 0
  8795                           ; Regs used in _TMR0_StartTimer: []
  8796  0CB2  0020               	movlb	0	; select bank0
  8797  0CB3  179E               	bsf	30,7	;volatile
  8798  0CB4  0008               	return
  8799  0CB5                     __end_of_TMR0_StartTimer:	
  8800                           
  8801                           	psect	text28
  8802  0CB5                     __ptext28:	
  8803 ;; *************** function _TMR0_SetInterruptHandler *****************
  8804 ;; Defined at:
  8805 ;;		line 140 in file "tmr0.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;  InterruptHan    2    1[COMMON] PTR void 
  8808 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;		None
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      void 
  8813 ;; Registers used:
  8814 ;;		wreg
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8824 ;;Total ram usage:        2 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; Hardware stack levels required when called:    3
  8827 ;; This function calls:
  8828 ;;		Nothing
  8829 ;; This function is called by:
  8830 ;;		_TMR0_Initialize
  8831 ;; This function uses a non-reentrant model
  8832 ;;
  8833                           
  8834                           
  8835                           ;psect for function _TMR0_SetInterruptHandler
  8836  0CB5                     _TMR0_SetInterruptHandler:	
  8837                           
  8838                           ;tmr0.c: 141: TMR0_InterruptHandler = InterruptHandler;
  8839                           
  8840                           ;incstack = 0
  8841                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8842  0CB5  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  8843  0CB6  0021               	movlb	1	; select bank1
  8844  0CB7  00B7               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  8845  0CB8  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  8846  0CB9  00B6               	movwf	_TMR0_InterruptHandler^(0+128)
  8847  0CBA  0008               	return
  8848  0CBB                     __end_of_TMR0_SetInterruptHandler:	
  8849                           
  8850                           	psect	text29
  8851  07E4                     __ptext29:	
  8852 ;; *************** function _PIN_MANAGER_Initialize *****************
  8853 ;; Defined at:
  8854 ;;		line 51 in file "pin_manager.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;		None
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  1    wreg      void 
  8861 ;; Registers used:
  8862 ;;		wreg, status,2
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8872 ;;Total ram usage:        0 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; Hardware stack levels required when called:    3
  8875 ;; This function calls:
  8876 ;;		Nothing
  8877 ;; This function is called by:
  8878 ;;		_SYSTEM_Initialize
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           
  8883                           ;psect for function _PIN_MANAGER_Initialize
  8884  07E4                     _PIN_MANAGER_Initialize:	
  8885                           
  8886                           ;pin_manager.c: 56: LATA = 0x00;
  8887                           
  8888                           ;incstack = 0
  8889                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8890  07E4  0020               	movlb	0	; select bank0
  8891  07E5  0196               	clrf	22	;volatile
  8892                           
  8893                           ;pin_manager.c: 57: LATB = 0x00;
  8894  07E6  0197               	clrf	23	;volatile
  8895                           
  8896                           ;pin_manager.c: 58: LATC = 0x00;
  8897  07E7  0198               	clrf	24	;volatile
  8898                           
  8899                           ;pin_manager.c: 63: TRISA = 0x00;
  8900  07E8  0191               	clrf	17	;volatile
  8901                           
  8902                           ;pin_manager.c: 64: TRISB = 0xFF;
  8903  07E9  30FF               	movlw	255
  8904  07EA  0092               	movwf	18	;volatile
  8905                           
  8906                           ;pin_manager.c: 65: TRISC = 0x9C;
  8907  07EB  309C               	movlw	156
  8908  07EC  0093               	movwf	19	;volatile
  8909                           
  8910                           ;pin_manager.c: 70: ANSELC = 0x80;
  8911  07ED  3080               	movlw	128
  8912  07EE  003E               	movlb	30	; select bank30
  8913  07EF  00CE               	movwf	78	;volatile
  8914                           
  8915                           ;pin_manager.c: 71: ANSELB = 0xFF;
  8916  07F0  30FF               	movlw	255
  8917  07F1  00C3               	movwf	67	;volatile
  8918                           
  8919                           ;pin_manager.c: 72: ANSELA = 0x00;
  8920  07F2  01B8               	clrf	56	;volatile
  8921                           
  8922                           ;pin_manager.c: 77: WPUE = 0x00;
  8923  07F3  01E5               	clrf	101	;volatile
  8924                           
  8925                           ;pin_manager.c: 78: WPUB = 0x00;
  8926  07F4  01C4               	clrf	68	;volatile
  8927                           
  8928                           ;pin_manager.c: 79: WPUA = 0x00;
  8929  07F5  01B9               	clrf	57	;volatile
  8930                           
  8931                           ;pin_manager.c: 80: WPUC = 0x00;
  8932  07F6  01CF               	clrf	79	;volatile
  8933                           
  8934                           ;pin_manager.c: 85: ODCONA = 0x00;
  8935  07F7  01BA               	clrf	58	;volatile
  8936                           
  8937                           ;pin_manager.c: 86: ODCONB = 0x00;
  8938  07F8  01C5               	clrf	69	;volatile
  8939                           
  8940                           ;pin_manager.c: 87: ODCONC = 0x00;
  8941  07F9  01D0               	clrf	80	;volatile
  8942  07FA  0008               	return
  8943  07FB                     __end_of_PIN_MANAGER_Initialize:	
  8944                           
  8945                           	psect	text30
  8946  0CD5                     __ptext30:	
  8947 ;; *************** function _OSCILLATOR_Initialize *****************
  8948 ;; Defined at:
  8949 ;;		line 93 in file "mcc.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;		None
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;		None
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  1    wreg      void 
  8956 ;; Registers used:
  8957 ;;		wreg, status,2
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;Total ram usage:        0 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    3
  8970 ;; This function calls:
  8971 ;;		Nothing
  8972 ;; This function is called by:
  8973 ;;		_SYSTEM_Initialize
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           
  8978                           ;psect for function _OSCILLATOR_Initialize
  8979  0CD5                     _OSCILLATOR_Initialize:	
  8980                           
  8981                           ;mcc.c: 96: OSCCON1 = 0x60;
  8982                           
  8983                           ;incstack = 0
  8984                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8985  0CD5  3060               	movlw	96
  8986  0CD6  0031               	movlb	17	; select bank17
  8987  0CD7  008D               	movwf	13	;volatile
  8988                           
  8989                           ;mcc.c: 98: OSCCON3 = 0x00;
  8990  0CD8  018F               	clrf	15	;volatile
  8991                           
  8992                           ;mcc.c: 100: OSCEN = 0x00;
  8993  0CD9  0191               	clrf	17	;volatile
  8994                           
  8995                           ;mcc.c: 102: OSCFRQ = 0x03;
  8996  0CDA  3003               	movlw	3
  8997  0CDB  0093               	movwf	19	;volatile
  8998                           
  8999                           ;mcc.c: 104: OSCTUNE = 0x00;
  9000  0CDC  0192               	clrf	18	;volatile
  9001  0CDD  0008               	return
  9002  0CDE                     __end_of_OSCILLATOR_Initialize:	
  9003                           
  9004                           	psect	text31
  9005  07FB                     __ptext31:	
  9006 ;; *************** function _FVR_Initialize *****************
  9007 ;; Defined at:
  9008 ;;		line 57 in file "fvr.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;		None
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;		None
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  1    wreg      void 
  9015 ;; Registers used:
  9016 ;;		wreg
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;Total ram usage:        0 bytes
  9027 ;; Hardware stack levels used:    1
  9028 ;; Hardware stack levels required when called:    3
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_SYSTEM_Initialize
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           
  9037                           ;psect for function _FVR_Initialize
  9038  07FB                     _FVR_Initialize:	
  9039                           
  9040                           ;fvr.c: 60: FVRCON = 0x81;
  9041                           
  9042                           ;incstack = 0
  9043                           ; Regs used in _FVR_Initialize: [wreg]
  9044  07FB  3081               	movlw	129
  9045  07FC  0032               	movlb	18	; select bank18
  9046  07FD  008C               	movwf	12	;volatile
  9047  07FE  0008               	return
  9048  07FF                     __end_of_FVR_Initialize:	
  9049                           
  9050                           	psect	text32
  9051  0D6E                     __ptext32:	
  9052 ;; *************** function _ADCC_Initialize *****************
  9053 ;; Defined at:
  9054 ;;		line 63 in file "adcc.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;		None
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;		None
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      void 
  9061 ;; Registers used:
  9062 ;;		wreg, status,2
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;Total ram usage:        0 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    3
  9075 ;; This function calls:
  9076 ;;		Nothing
  9077 ;; This function is called by:
  9078 ;;		_main
  9079 ;;		_SYSTEM_Initialize
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           
  9084                           ;psect for function _ADCC_Initialize
  9085  0D6E                     _ADCC_Initialize:	
  9086                           
  9087                           ;adcc.c: 67: ADCON1 = 0x00;
  9088                           
  9089                           ;incstack = 0
  9090                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9091  0D6E  0021               	movlb	1	; select bank1
  9092  0D6F  0194               	clrf	20	;volatile
  9093                           
  9094                           ;adcc.c: 69: ADCON2 = 0x00;
  9095  0D70  0195               	clrf	21	;volatile
  9096                           
  9097                           ;adcc.c: 71: ADCON3 = 0x00;
  9098  0D71  0196               	clrf	22	;volatile
  9099                           
  9100                           ;adcc.c: 73: ADACT = 0x00;
  9101  0D72  0199               	clrf	25	;volatile
  9102                           
  9103                           ;adcc.c: 75: ADSTAT = 0x00;
  9104  0D73  0197               	clrf	23	;volatile
  9105                           
  9106                           ;adcc.c: 77: ADCLK = 0x04;
  9107  0D74  3004               	movlw	4
  9108  0D75  0098               	movwf	24	;volatile
  9109                           
  9110                           ;adcc.c: 79: ADREF = 0x03;
  9111  0D76  3003               	movlw	3
  9112  0D77  009A               	movwf	26	;volatile
  9113                           
  9114                           ;adcc.c: 81: ADCAP = 0x00;
  9115  0D78  019B               	clrf	27	;volatile
  9116                           
  9117                           ;adcc.c: 83: ADPRE = 0x00;
  9118  0D79  019C               	clrf	28	;volatile
  9119                           
  9120                           ;adcc.c: 85: ADACQ = 0x64;
  9121  0D7A  3064               	movlw	100
  9122  0D7B  009D               	movwf	29	;volatile
  9123                           
  9124                           ;adcc.c: 87: ADPCH = 0x00;
  9125  0D7C  019E               	clrf	30	;volatile
  9126                           
  9127                           ;adcc.c: 89: ADRPT = 0x00;
  9128  0D7D  0022               	movlb	2	; select bank2
  9129  0D7E  018D               	clrf	13	;volatile
  9130                           
  9131                           ;adcc.c: 91: ADLTHL = 0x00;
  9132  0D7F  018E               	clrf	14	;volatile
  9133                           
  9134                           ;adcc.c: 93: ADLTHH = 0x00;
  9135  0D80  018F               	clrf	15	;volatile
  9136                           
  9137                           ;adcc.c: 95: ADUTHL = 0x00;
  9138  0D81  0190               	clrf	16	;volatile
  9139                           
  9140                           ;adcc.c: 97: ADUTHH = 0x00;
  9141  0D82  0191               	clrf	17	;volatile
  9142                           
  9143                           ;adcc.c: 99: ADSTPTL = 0x00;
  9144  0D83  0192               	clrf	18	;volatile
  9145                           
  9146                           ;adcc.c: 101: ADSTPTH = 0x00;
  9147  0D84  0193               	clrf	19	;volatile
  9148                           
  9149                           ;adcc.c: 104: ADCON0 = 0x84;
  9150  0D85  3084               	movlw	132
  9151  0D86  0021               	movlb	1	; select bank1
  9152  0D87  0093               	movwf	19	;volatile
  9153                           
  9154                           ;adcc.c: 107: PIR1bits.ADIF = 0;
  9155  0D88  002E               	movlb	14	; select bank14
  9156  0D89  100D               	bcf	13,0	;volatile
  9157                           
  9158                           ;adcc.c: 109: PIE1bits.ADIE = 1;
  9159  0D8A  1417               	bsf	23,0	;volatile
  9160  0D8B  0008               	return
  9161  0D8C                     __end_of_ADCC_Initialize:	
  9162                           
  9163                           	psect	text33
  9164  0CCE                     __ptext33:	
  9165 ;; *************** function _ADCC_StartConversion *****************
  9166 ;; Defined at:
  9167 ;;		line 113 in file "adcc.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  channel         1    wreg     enum E13559
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  channel         1    1[COMMON] enum E13559
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      void 
  9174 ;; Registers used:
  9175 ;;		wreg
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;Total ram usage:        1 bytes
  9186 ;; Hardware stack levels used:    1
  9187 ;; Hardware stack levels required when called:    3
  9188 ;; This function calls:
  9189 ;;		Nothing
  9190 ;; This function is called by:
  9191 ;;		_main
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           
  9196                           ;psect for function _ADCC_StartConversion
  9197  0CCE                     _ADCC_StartConversion:	
  9198                           
  9199                           ;incstack = 0
  9200                           ; Regs used in _ADCC_StartConversion: [wreg]
  9201                           ;ADCC_StartConversion@channel stored from wreg
  9202  0CCE  00F1               	movwf	ADCC_StartConversion@channel
  9203                           
  9204                           ;adcc.c: 116: ADPCH = channel;
  9205  0CCF  0871               	movf	ADCC_StartConversion@channel,w
  9206  0CD0  0021               	movlb	1	; select bank1
  9207  0CD1  009E               	movwf	30	;volatile
  9208                           
  9209                           ;adcc.c: 119: ADCON0bits.ADON = 1;
  9210  0CD2  1793               	bsf	19,7	;volatile
  9211                           
  9212                           ;adcc.c: 122: ADCON0bits.ADGO = 1;
  9213  0CD3  1413               	bsf	19,0	;volatile
  9214  0CD4  0008               	return
  9215  0CD5                     __end_of_ADCC_StartConversion:	
  9216                           
  9217                           	psect	text34
  9218  0CC7                     __ptext34:	
  9219 ;; *************** function _ADCC_IsConversionDone *****************
  9220 ;; Defined at:
  9221 ;;		line 125 in file "adcc.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;		None
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;		None
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  1    wreg      unsigned char 
  9228 ;; Registers used:
  9229 ;;		wreg, status,0
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/0
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;Total ram usage:        0 bytes
  9240 ;; Hardware stack levels used:    1
  9241 ;; Hardware stack levels required when called:    3
  9242 ;; This function calls:
  9243 ;;		Nothing
  9244 ;; This function is called by:
  9245 ;;		_main
  9246 ;; This function uses a non-reentrant model
  9247 ;;
  9248                           
  9249                           
  9250                           ;psect for function _ADCC_IsConversionDone
  9251  0CC7                     _ADCC_IsConversionDone:	
  9252                           
  9253                           ;adcc.c: 128: return (!ADCON0bits.ADGO);
  9254                           
  9255                           ;incstack = 0
  9256                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
  9257  0CC7  1003               	clrc
  9258  0CC8  0021               	movlb	1	; select bank1
  9259  0CC9  1C13               	btfss	19,0	;volatile
  9260  0CCA  1403               	setc
  9261  0CCB  3000               	movlw	0
  9262  0CCC  3D09               	addwfc	9,w
  9263  0CCD  0008               	return
  9264  0CCE                     __end_of_ADCC_IsConversionDone:	
  9265                           
  9266                           	psect	text35
  9267  0D11                     __ptext35:	
  9268 ;; *************** function _ADCC_GetSingleConversion *****************
  9269 ;; Defined at:
  9270 ;;		line 137 in file "adcc.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  channel         1    wreg     enum E13559
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  channel         1    4[COMMON] enum E13559
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  2    1[COMMON] unsigned int 
  9277 ;; Registers used:
  9278 ;;		wreg
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9284 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;Total ram usage:        4 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; Hardware stack levels required when called:    3
  9291 ;; This function calls:
  9292 ;;		Nothing
  9293 ;; This function is called by:
  9294 ;;		_main
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           
  9299                           ;psect for function _ADCC_GetSingleConversion
  9300  0D11                     _ADCC_GetSingleConversion:	
  9301                           
  9302                           ;incstack = 0
  9303                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  9304                           ;ADCC_GetSingleConversion@channel stored from wreg
  9305  0D11  00F4               	movwf	ADCC_GetSingleConversion@channel
  9306                           
  9307                           ;adcc.c: 140: ADPCH = channel;
  9308  0D12  0874               	movf	ADCC_GetSingleConversion@channel,w
  9309  0D13  0021               	movlb	1	; select bank1
  9310  0D14  009E               	movwf	30	;volatile
  9311                           
  9312                           ;adcc.c: 143: ADCON0bits.ADON = 1;
  9313  0D15  1793               	bsf	19,7	;volatile
  9314                           
  9315                           ;adcc.c: 146: ADCON0bits.ADCONT = 0;
  9316  0D16  1313               	bcf	19,6	;volatile
  9317                           
  9318                           ;adcc.c: 149: ADCON0bits.ADGO = 1;
  9319  0D17  1413               	bsf	19,0	;volatile
  9320  0D18                     l398:	
  9321                           ;adcc.c: 153: {
  9322                           
  9323                           ;adcc.c: 152: while (ADCON0bits.ADGO)
  9324                           
  9325  0D18  1813               	btfsc	19,0	;volatile
  9326  0D19  2D18               	goto	l398
  9327                           
  9328                           ;adcc.c: 154: }
  9329                           ;adcc.c: 157: __nop();
  9330  0D1A  0000               	nop
  9331                           
  9332                           ;adcc.c: 160: return ((ADRESH << 8) + ADRESL);
  9333  0D1B  0021               	movlb	1	; select bank1
  9334  0D1C  080D               	movf	13,w	;volatile
  9335  0D1D  00F2               	movwf	?_ADCC_GetSingleConversion+1
  9336  0D1E  080C               	movf	12,w	;volatile
  9337  0D1F  00F1               	movwf	?_ADCC_GetSingleConversion
  9338  0D20  0008               	return
  9339  0D21                     __end_of_ADCC_GetSingleConversion:	
  9340                           
  9341                           	psect	intentry
  9342  0004                     __pintentry:	
  9343 ;; *************** function _INTERRUPT_InterruptManager *****************
  9344 ;; Defined at:
  9345 ;;		line 51 in file "interrupt_manager.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;		None
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;		None
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      void 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2, status,0, pclath, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9363 ;;Total ram usage:        1 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:    2
  9366 ;; This function calls:
  9367 ;;		_ADCC_ISR
  9368 ;;		_TMR0_ISR
  9369 ;; This function is called by:
  9370 ;;		Interrupt level 1
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374  0004                     _INTERRUPT_InterruptManager:	
  9375                           
  9376                           ;incstack = 0
  9377  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9378                           
  9379                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  9380  0005  3180               	pagesel	$
  9381  0006  0020               	movlb	0	; select bank0
  9382  0007  087F               	movf	127,w
  9383  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  9384                           
  9385                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  9386  0009  002E               	movlb	14	; select bank14
  9387  000A  1A96               	btfsc	22,5	;volatile
  9388  000B  1E8C               	btfss	12,5	;volatile
  9389  000C  2811               	goto	i1l426
  9390                           
  9391                           ;interrupt_manager.c: 55: {
  9392                           ;interrupt_manager.c: 56: TMR0_ISR();
  9393  000D  318D  2521  3180   	fcall	_TMR0_ISR
  9394                           
  9395                           ;interrupt_manager.c: 57: }
  9396  0010  2818               	goto	i1l430
  9397  0011                     i1l426:	
  9398                           
  9399                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits
      +                          .ADIF == 1)
  9400  0011  1B0B               	btfsc	11,6	;volatile
  9401  0012  1C17               	btfss	23,0	;volatile
  9402  0013  2818               	goto	i1l430
  9403  0014  1C0D               	btfss	13,0	;volatile
  9404  0015  2818               	goto	i1l430
  9405                           
  9406                           ;interrupt_manager.c: 59: {
  9407                           ;interrupt_manager.c: 60: ADCC_ISR();
  9408  0016  318C  24AF         	fcall	_ADCC_ISR
  9409  0018                     i1l430:	
  9410                           ;interrupt_manager.c: 62: else
  9411                           ;interrupt_manager.c: 63: {
  9412                           
  9413                           ;interrupt_manager.c: 61: }
  9414                           
  9415  0018  0870               	movf	??_INTERRUPT_InterruptManager,w
  9416  0019  0020               	movlb	0	; select bank0
  9417  001A  00FF               	movwf	127
  9418  001B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9419  001C  0009               	retfie
  9420  001D                     __end_of_INTERRUPT_InterruptManager:	
  9421                           
  9422                           	psect	text37
  9423  0D21                     __ptext37:	
  9424 ;; *************** function _TMR0_ISR *****************
  9425 ;; Defined at:
  9426 ;;		line 126 in file "tmr0.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;		None
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;		None
  9431 ;; Return value:  Size  Location     Type
  9432 ;;                  1    wreg      void 
  9433 ;; Registers used:
  9434 ;;		wreg, status,2, status,0, pclath, cstack
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/0
  9437 ;;		On exit  : 0/0
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;Total ram usage:        0 bytes
  9445 ;; Hardware stack levels used:    1
  9446 ;; Hardware stack levels required when called:    1
  9447 ;; This function calls:
  9448 ;;		Absolute function
  9449 ;;		_TMR0_DefaultInterruptHandler
  9450 ;; This function is called by:
  9451 ;;		_INTERRUPT_InterruptManager
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           
  9456                           ;psect for function _TMR0_ISR
  9457  0D21                     _TMR0_ISR:	
  9458                           
  9459                           ;tmr0.c: 129: PIR0bits.TMR0IF = 0;
  9460                           
  9461                           ;incstack = 0
  9462                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9463  0D21  002E               	movlb	14	; select bank14
  9464  0D22  128C               	bcf	12,5	;volatile
  9465                           
  9466                           ;tmr0.c: 130: if(TMR0_InterruptHandler)
  9467  0D23  0021               	movlb	1	; select bank1
  9468  0D24  0836               	movf	_TMR0_InterruptHandler^(0+128),w
  9469  0D25  0437               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  9470  0D26  1903               	btfsc	3,2
  9471  0D27  2D2D               	goto	i1l2553
  9472                           
  9473                           ;tmr0.c: 131: {
  9474                           ;tmr0.c: 132: TMR0_InterruptHandler();
  9475  0D28  0837               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  9476  0D29  008A               	movwf	10
  9477  0D2A  0836               	movf	_TMR0_InterruptHandler^(0+128),w
  9478  0D2B  000A               	callw
  9479  0D2C  318D               	pagesel	$
  9480  0D2D                     i1l2553:	
  9481                           
  9482                           ;tmr0.c: 133: }
  9483                           ;tmr0.c: 136: millis++;
  9484  0D2D  3001               	movlw	1
  9485  0D2E  0021               	movlb	1	; select bank1
  9486  0D2F  07A7               	addwf	_millis^(0+128),f
  9487  0D30  3000               	movlw	0
  9488  0D31  3DA8               	addwfc	(_millis+1)^(0+128),f
  9489  0D32  0008               	return
  9490  0D33                     __end_of_TMR0_ISR:	
  9491                           
  9492                           	psect	text38
  9493  07FF                     __ptext38:	
  9494 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9495 ;; Defined at:
  9496 ;;		line 144 in file "tmr0.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;		None
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      void 
  9503 ;; Registers used:
  9504 ;;		None
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;Total ram usage:        0 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		_TMR0_Initialize
  9520 ;;		_TMR0_ISR
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           
  9525                           ;psect for function _TMR0_DefaultInterruptHandler
  9526  07FF                     _TMR0_DefaultInterruptHandler:	
  9527                           
  9528                           ;incstack = 0
  9529                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9530  07FF  0008               	return
  9531  0800                     __end_of_TMR0_DefaultInterruptHandler:	
  9532                           
  9533                           	psect	text39
  9534  0CAF                     __ptext39:	
  9535 ;; *************** function _ADCC_ISR *****************
  9536 ;; Defined at:
  9537 ;;		line 303 in file "adcc.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;		None
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;		None
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      void 
  9544 ;; Registers used:
  9545 ;;		None
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;Total ram usage:        0 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; This function calls:
  9558 ;;		Nothing
  9559 ;; This function is called by:
  9560 ;;		_INTERRUPT_InterruptManager
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           
  9565                           ;psect for function _ADCC_ISR
  9566  0CAF                     _ADCC_ISR:	
  9567                           
  9568                           ;adcc.c: 306: PIR1bits.ADIF = 0;
  9569                           
  9570                           ;incstack = 0
  9571                           ; Regs used in _ADCC_ISR: []
  9572  0CAF  002E               	movlb	14	; select bank14
  9573  0CB0  100D               	bcf	13,0	;volatile
  9574  0CB1  0008               	return
  9575  0CB2                     __end_of_ADCC_ISR:	
  9576  007E                     btemp	set	126	;btemp
  9577  007E                     int$flags	set	126
  9578  007E                     wtemp	set	126
  9579  007E                     wtemp0	set	126
  9580  0080                     wtemp1	set	128
  9581  0082                     wtemp2	set	130
  9582  0084                     wtemp3	set	132
  9583  0086                     wtemp4	set	134
  9584  0088                     wtemp5	set	136
  9585  007F                     wtemp6	set	127
  9586  007E                     ttemp	set	126
  9587  007E                     ttemp0	set	126
  9588  0081                     ttemp1	set	129
  9589  0084                     ttemp2	set	132
  9590  0087                     ttemp3	set	135
  9591  007F                     ttemp4	set	127
  9592  007E                     ltemp	set	126
  9593  007E                     ltemp0	set	126
  9594  0082                     ltemp1	set	130
  9595  0086                     ltemp2	set	134
  9596  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         36
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     62      78
    BANK1            80      3      24
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->___lwtoft
    _read_encoder->_debounce_sw
    _debounce_sw->_delay_us
    _read_MCP9700A->___lwtoft
    _round->_trunc
    _trunc->___altoft
    ___altoft->___ftpack
    ___altoft->___fttol
    ___ftneg->_trunc
    ___lwtoft->___ftpack
    ___ftadd->_trunc
    ___ftmul->___ftpack
    _decToBcd->___awdiv
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_MCP9700A
    _read_MCP9700A->___ftdiv
    _round->___ftadd
    _trunc->___altoft
    ___altoft->___fttol
    ___ftneg->_trunc
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftdiv->___ftadd

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   52443
                                             59 BANK0      3     3      0
                                              0 BANK1      3     3      0
           _ADCC_GetSingleConversion
                    _ADCC_Initialize
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                  _SYSTEM_Initialize
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lwtoft
                        _debounce_sw
                           _decToBcd
                           _delay_us
                      _display_digit
                        _eeprom_read
                       _eeprom_write
                      _read_MCP9700A
                       _read_encoder
                              _round
 ---------------------------------------------------------------------------------
 (1) _read_encoder                                         1     1      0     229
                                              7 COMMON     1     1      0
                        _debounce_sw
 ---------------------------------------------------------------------------------
 (2) _debounce_sw                                          4     4      0     229
                                              3 COMMON     4     4      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_us                                             2     2      0      68
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _read_MCP9700A                                        7     7      0   27356
                                             52 BANK0      7     7      0
           _ADCC_GetConversionResult
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lwtoft
                              _round
 ---------------------------------------------------------------------------------
 (1) _round                                                6     3      3    8364
                                             36 BANK0      6     3      3
                            ___ftadd
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (2) _trunc                                                9     6      3    3765
                                             11 COMMON     1     1      0
                                             12 BANK0      8     5      3
                           ___altoft
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     428
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     566
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___altoft                                             8     4      4    2397
                                              9 COMMON     2     2      0
                                              6 BANK0      6     2      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     305
                                             20 BANK0      3     0      3
                           ___ftpack (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2289
                                              9 COMMON     3     0      3
                                              0 BANK0      1     1      0
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetSingleConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4619
                                             36 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4003
                                             23 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2876
                                              0 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1068
                                              1 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3198
                                             36 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2128
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         2     1      1     127
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_digit                                        1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _decToBcd                                             8     8      0    1200
                                             10 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     563
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     575
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      96
                    _ADCC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      96
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      96
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_StartConversion                                 1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                           _ADCC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADCC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _ADCC_Initialize
   _ADCC_IsConversionDone
   _ADCC_StartConversion
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   ___ftdiv
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___fttol
           _frexp
       ___ftpack (ARG)
       ___ftpack (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___fttol
         _frexp
     ___ftneg (ARG)
       ___ftpack (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___fttol
         _frexp
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___ftpack
   ___ftsub
     ___ftadd
       ___ftneg (ARG)
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___fttol
           _frexp
       ___ftpack (ARG)
       ___ftpack (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___fttol
         _frexp
   ___fttol
   ___lwtoft
     _ADCC_GetConversionResult (ARG)
     _ADCC_GetSingleConversion (ARG)
     ___ftpack (ARG)
   _debounce_sw
     _delay_us
   _decToBcd
     ___awdiv
     ___awmod
   _delay_us
   _display_digit
   _eeprom_read
   _eeprom_write
   _read_MCP9700A
     _ADCC_GetConversionResult
     ___ftadd
       ___ftneg (ARG)
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___fttol
           _frexp
       ___ftpack (ARG)
       ___ftpack (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___fttol
         _frexp
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           _trunc (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___fttol
             _frexp
         ___ftpack (ARG)
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___fttol
           _frexp
       ___ftneg (ARG)
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___fttol
           _frexp
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftpack (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___fttol
         _frexp
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
           ___ftpack (ARG)
           _trunc (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___fttol
             _frexp
         ___ftpack (ARG)
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___fttol
           _frexp
     ___fttol
     ___lwtoft
       _ADCC_GetConversionResult (ARG)
       _ADCC_GetSingleConversion (ARG)
       ___ftpack (ARG)
     _round
       ___ftadd
         ___ftneg (ARG)
           ___ftpack (ARG)
           _trunc (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___fttol
             _frexp
         ___ftpack (ARG)
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___fttol
           _frexp
       ___ftneg
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___fttol
           _frexp
       _trunc
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___fttol
         _frexp
   _read_encoder
     _debounce_sw
       _delay_us
   _round
     ___ftadd
       ___ftneg (ARG)
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___fttol
           _frexp
       ___ftpack (ARG)
       ___ftpack (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___fttol
         _frexp
     ___ftneg
       ___ftpack (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___fttol
         _frexp
     _trunc
       ___altoft
         ___ftpack
         ___fttol (ARG)
       ___fttol
       _frexp

 _INTERRUPT_InterruptManager (ROOT)
   _ADCC_ISR
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      18       7       30.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      73      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      73      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Mar 29 11:35:14 2018

                            ___altoft@exp 002A                                         _n 007C  
                                       pc 0002                               __CFG_CP$OFF 0000  
                           ___altoft@sign 002B                                        _WR 40F1  
                            ___awdiv@sign 0077                    __end_of_FVR_Initialize 07FF  
                                      _ns 00A0                              ___ftadd@exp1 0043  
                            ___ftadd@exp2 0042                               __CFG_ZCD$ON 0000  
                            ___ftadd@sign 0041                                       l104 020B  
                                     l212 072D                                       l302 0763  
                                     l134 02B2                                       l143 02C3  
                                     l119 0281                                       l137 02B4  
                                     l242 073F                                       l227 0736  
                                     l317 076C                                       l181 071B  
                                     l166 0D34                                       l272 0751  
                                     l257 0748                                       l197 0724  
                                     l287 075A                                       l544 0CE8  
                                     l570 0DC2                                       l398 0D18  
                                     l566 0DAB                                       l825 07C5  
                                     l826 07CD                                       l818 07B2  
                                     l909 06FF                                       l849 04DE  
                            __CFG_CPD$OFF 0000                                       _avg 005E  
                                     _num 006A                                       _spv 0061  
                            ___awmod@sign 0077                              __CFG_BORV$LO 0000  
                                     wreg 0009                                      S3623 0800  
                            __CFG_LVP$OFF 0000                              ___ftdiv@cntr 004E  
                            ___ftdiv@sign 0053                                      l3101 0F68  
                                    l3201 0657                                      l3107 0F73  
                                    l3133 0FAA                                      l3125 0F99  
                                    l3117 0F7B                                      l3221 0E76  
                                    l3119 0F87                                      l3129 0FA2  
                                    l3145 0F23                                      l3209 0670  
                                    l3225 0E8C                                      l3171 0F59  
                                    l3163 0F48                                      l3243 054C  
                                    l3157 0F30                                      l3149 0F2A  
                                    l3181 0600                                      l3261 059D  
                                    l3421 0108                                      l3413 00C6  
                                    l3159 0F3C                                      l3167 0F51  
                                    l3327 0E17                                      l2801 078F  
                                    l3273 05B9                                      l3265 05A5  
                                    l3249 0562                                      l3329 0E1A  
                                    l3521 01EF                                      l3505 01D1  
                                    l3417 00DF                                      l2811 07B7  
                                    l2803 0799                                      l3187 0616  
                                    l3291 0D94                                      l3451 015E  
                                    l3443 0151                                      l2813 07BF  
                                    l2805 079E                                      l3277 05C1  
                                    l3509 01D5                      _ADCC_StartConversion 0CCE  
                                    l3383 0420                                      l3375 03DE  
                                    l2921 046E                                      l3561 025C  
                                    l3545 0227                                      l3537 0214  
                                    l3395 0775                                      l2835 0EB0  
                                    l3379 03F7                                      l3459 016C  
                                    l2917 0467                                      l2837 0EC0  
                                    l3581 0287                                      l3557 0247  
                                    l3549 022D                                      l3493 01B8  
                                    l3477 0192                            ?_display_digit 0070  
                                    l2951 04BD                                      l2927 047D  
                                    l2847 06AB                                      l3575 027B  
                                    l3567 026B                                      l3487 01AB  
                                    l2945 04AA                                      l2873 06F6  
                                    l2865 06DB                                      l3585 028C  
                                    l3577 0282                                      l2963 04F0  
                                    l2947 04B4                                      l2939 0497  
                                    l2875 0702                                      l2867 06E9  
                                    l2797 0788                                      l2957 04D0  
                                    l2949 04B9                                      l2967 0502  
                                    l2959 04DA                                      l2879 0710  
                                    l3599 02C5                                      l2977 051D  
                                    l2889 0E37                                      l2997 0EF0  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      u3215 07AD  
                                    u3305 0EB5                                      u3235 07BA  
                                    u4115 05C2                                      u4125 05C8  
                                    u4045 056E                                      u4055 057E  
                                    u3335 06B2                                      u3275 07D4  
                                    u3195 0794                                      u4075 05A6  
                                    u4085 05AC                                      u3605 04BE  
                                    u3365 06DC                                      u3545 0498  
                                    u3635 04D1                                      u3395 06F7  
                                    u4295 0DF1                                      u3575 04AB  
                                    u3755 0F7E                                      u4555 0242  
                                    u4565 0258                                      u3775 0F88  
                                    u3855 0F33                                      u3935 0628  
                                    u3785 0F92                                      u3945 0638  
                                    u3795 0F9A                                      u3875 0F42  
                                    u3955 0658                                      u3885 0F49  
                                    u3965 0667                                      u4685 02C8  
                                    u3975 0671                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                          ??_eeprom_write 0072                                      _WPUE 0F65  
                        __end_of_ADCC_ISR 0CB2                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _main 0033  
                            ___ftpack@arg 0071                              ___ftpack@exp 0074  
                         _TMR0_StartTimer 0CB2                                      _temp 006D  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    ltemp 007E                                      start 001D  
                                    ttemp 007E                                      wtemp 007E  
                           __CFG_CSWEN$ON 0000                             __CFG_MCLRE$ON 0000  
                            ___ftmul@cntr 002E                              ___ftmul@sign 002F  
                            ___fttol@exp1 0025                              ___fttol@lval 0021  
                 __end_of_TMR0_Initialize 0D6E            ??_TMR0_DefaultInterruptHandler 0070  
                         ?_FVR_Initialize 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0CDE                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADPCH 009E                                     _ADREF 009A  
                         __end_of___awdiv 0FAF                                     _ADPRE 009C  
                         __end_of___ftadd 0535                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 0F5E                                     _ADRPT 010D  
                         __end_of___ftdiv 0692                           __end_of___ftneg 0CE7  
                         __end_of___ftmul 05E9                           ___awdiv@divisor 0071  
                         __end_of___ftsub 0DAA                           __end_of___fttol 0719  
                                   i1l430 0018                                     i1l426 0011  
                         ___awdiv@counter 0076                                     _OSCEN 0891  
                                   _TMR0H 001D                                     _TMR0L 001C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 0071                   ??_ADCC_IsConversionDone 0071  
                        __end_of_TMR0_ISR 0D33                    __size_of_read_MCP9700A 016D  
                                   _frexp 0E2B                                     _errno 00A5  
                   ?_ADCC_StartConversion 0070                             ___ftpack@sign 0075  
                                   _round 0FAF                                     _trunc 0ED8  
                                   pclath 000A                        _getting_new_sp_flg 0069  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
                      _getting_new_sp_tmr 00AF                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                    __size_of_debounce_sw 0012                           __initialization 001F  
                            __end_of_main 02D2               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 005B                             ___fttol@sign1 0020  
                         ??_display_digit 0071                   __end_of_TMR0_StartTimer 0CB5  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_frexp 0071                          __end_of___altoft 0ED8  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                        ___awdiv@dividend 0073                                    _ADUTHL 0110  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                          __end_of___ftpack 07E4  
                                  ?_round 0044                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  ?_trunc 002C                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  i1l2553 0D2D                            __CFG_WDTCCS$SC 0000  
                        __end_of_decToBcd 0DF8                                    _FVRCON 090C  
                        __end_of___lwtoft 0D59                                    _OSCFRQ 0893  
              ??_ADCC_GetConversionResult 0073                          __end_of_delay_us 0D02  
                          __CFG_PWRTE$OFF 0000                             ?_read_encoder 0070  
                           _read_MCP9700A 02D2                      __size_of_eeprom_read 000D  
                                  ___ftge 0E60                                 ??___awdiv 0075  
                               ??___ftadd 003D                            __CFG_STVREN$ON 0000  
                               ??___awmod 0075                                 ??___ftdiv 004A  
                               ??___ftneg 007C                                 ??___ftmul 0026  
                               ??___ftsub 007C                                 ??___fttol 0075  
                        ?_TMR0_Initialize 0070                                    _millis 00A7  
                        ___awdiv@quotient 0078                           ___awmod@divisor 0071  
                    __end_of_eeprom_write 0DCA                           ___awmod@counter 0076  
                               ?_ADCC_ISR 0070                     ___ftmul@f3_as_product 002B  
                         _ADCC_Initialize 0D6E                    ??_ADCC_StartConversion 0071  
       __size_of_ADCC_GetSingleConversion 0010                                    round@f 0047  
                                  round@x 0044                 ?_ADCC_GetSingleConversion 0071  
TMR0_SetInterruptHandler@InterruptHandler 0071                                    trunc@i 002F  
                                  trunc@x 002C                         _SYSTEM_Initialize 0D02  
                 __end_of__initialization 002F                                ___altoft@c 0026  
                         eeprom_read@addr 0071                                ___ftadd@f1 0037  
                              ___ftadd@f2 003A                                ___ftge@ff1 0071  
                              ___ftge@ff2 0074                        ?_SYSTEM_Initialize 0070  
                              ___ftdiv@f1 0047                                ___ftdiv@f2 0044  
                              ___ftdiv@f3 004F                            ??_read_encoder 0077  
                              ___ftneg@f1 0034                            ?_read_MCP9700A 0070  
                              ___ftmul@f1 0020                                ___ftmul@f2 0023  
                              ___ftsub@f1 0047                                ___ftsub@f2 0044  
                              ___fttol@f1 0071                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0073                                 ?_TMR0_ISR 0070  
                   _done_reading_ADDC_flg 00AD                             __end_of_frexp 0E60  
                           __end_of_round 1000                             __end_of_trunc 0F19  
                              ___lwtoft@c 0079                                ??_ADCC_ISR 0070  
                       eeprom_write@value 0071               ADCC_StartConversion@channel 0071  
                        ?_TMR0_StartTimer 0070                                   ??_frexp 0075  
               __end_of_SYSTEM_Initialize 0D11                         _heater_max_on_tmr 00B0  
                                 ??_round 007C                                   ??_trunc 007B  
                              __pbssBANK0 005E                                __pbssBANK1 00A0  
                       _heater_min_on_tmr 00B1                          ??_FVR_Initialize 0071  
                              __pmaintext 0033                                   ?___ftge 0071  
        __end_of_TMR0_SetInterruptHandler 0CBB                                ??_TMR0_ISR 0070  
                         __CFG_PPS1WAY$ON 0000                   __end_of_ADCC_Initialize 0D8C  
                              __pintentry 0004                           _heater_rest_tmr 00B2  
                               ?___altoft 0026                                 ?___ftpack 0071  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                               ?_decToBcd 0070                                 ?___lwtoft 0079  
                      display_digit@count 0071                        _read_MCP9700A$1110 0055  
                      _read_MCP9700A$1111 0058                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                 ?_delay_us 0070  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
          __size_of_ADCC_IsConversionDone 0007             __end_of_ADCC_IsConversionDone 0CCE  
                         ??_read_MCP9700A 0054                     __size_of_eeprom_write 0020  
                    __CFG_SCANE$available 0000                           __size_of___ftge 003B  
                              _bypass_flg 0064                                   ___awdiv 0F5E  
                                 ___ftadd 043F                                   ___awmod 0F19  
                                 ___ftdiv 05E9                                _bypass_tmr 00AC  
                                 ___ftneg 0CDE                                   ___ftmul 0535  
                                 ___ftsub 0D8C                                   ___fttol 0692  
                              ??___altoft 0079                                ??___ftpack 0076  
                                 __ptext1 0DF8                                   __ptext2 0D33  
                                 __ptext3 0CF4                                   __ptext4 02D2  
                                 __ptext5 0FAF                                   __ptext6 0ED8  
                                 __ptext7 0E2B                                   __ptext8 0692  
                                 __ptext9 0E9B                                ??_decToBcd 0020  
                              ??___lwtoft 0020                     _OSCILLATOR_Initialize 0CD5  
                        ___awmod@dividend 0073                      __end_of_read_encoder 0E2B  
                ??_PIN_MANAGER_Initialize 0071                                   _seconds 00A9  
                              ??_delay_us 0071                __size_of_SYSTEM_Initialize 000F  
                                 clrloop0 0CC2                      end_of_initialization 002F  
                           ??_debounce_sw 0073                              _eeprom_write 0DAA  
                        ?_ADCC_Initialize 0070          __end_of_ADCC_GetSingleConversion 0D21  
                   __CFG_WDTCPS$WDTCPS_31 0000                  _TMR0_SetInterruptHandler 0CB5  
                               _PORTCbits 000E                         __size_of_ADCC_ISR 0003  
                        __CFG_FEXTOSC$OFF 0000                     __end_of_display_digit 0780  
                             ___ftdiv@exp 0052                             ??_eeprom_read 0071  
                     __end_of_debounce_sw 0D45                               ___ftmul@exp 002A  
                          __end_of___ftge 0E9B                         __size_of_TMR0_ISR 0012  
                  ?_OSCILLATOR_Initialize 0070         __size_of_ADCC_GetConversionResult 0006  
               ?_ADCC_GetConversionResult 0071                       start_initialization 001F  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0017  
           __size_of_ADCC_StartConversion 0007                                frexp@value 0071  
                            _LED_blue_flg 00AB                          __CFG_LPBOREN$OFF 0000  
                                ??___ftge 0077                       __end_of_eeprom_read 0CF4  
                   __size_of_read_encoder 0033                         __size_of___altoft 003D  
                _ADCC_GetSingleConversion 0D11                         __size_of___ftpack 0064  
                             __pbssCOMMON 007C                         __size_of_decToBcd 002E  
                               ___latbits 0002                         __size_of___lwtoft 0014  
                           __pcstackBANK0 0020                             __pcstackBANK1 00B3  
                         _encoder_pos_old 0068                         __size_of_delay_us 000E  
                            _dsply_sp_flg 0065                              _dsply_sp_tmr 00AE  
                        eeprom_write@addr 0072                               _debounce_sw 0D33  
                   _TMR0_InterruptHandler 00B6                                 __pnvBANK1 00B6  
                __size_of_TMR0_StartTimer 0003                                 _main$1109 00B3  
                  _PIN_MANAGER_Initialize 07E4                              _read_encoder 0DF8  
         ADCC_GetSingleConversion@channel 0074                                  ?___awdiv 0071  
                                ?___ftadd 0037                                  ?___awmod 0071  
                                ?___ftdiv 0044                                  ?___ftneg 0034  
                                ?___ftmul 0020                                  ?___ftsub 0044  
                                ?___fttol 0071              ??_INTERRUPT_InterruptManager 0070  
                               __pswtext1 0800                                  _ADCC_ISR 0CAF  
                             decToBcd@val 007A                            __size_of_frexp 0035  
                          __size_of_round 0051                            __size_of_trunc 0041  
                   _ADCC_IsConversionDone 0CC7                         ??_TMR0_Initialize 0073  
                                _LATAbits 0016                                  _LATCbits 0018  
                               delay_us@i 0071                                 clear_ram0 0CC1  
                             _eeprom_read 0CE7                                  _PIE0bits 0716  
                                _PIE1bits 0717                               _encoder_pos 0067  
                   __end_of_read_MCP9700A 043F       __size_of_INTERRUPT_InterruptManager 0019  
              ??_TMR0_SetInterruptHandler 0073                                  _PIR0bits 070C  
                                _PIR1bits 070D                                  _TMR0_ISR 0D21  
                              _ADCON0bits 0093                   __size_of_FVR_Initialize 0004  
                      _encoder_Pin_A_Last 0066                                 frexp@eptr 0074  
        __end_of_ADCC_GetConversionResult 0CC1                              _relay_on_flg 006B  
                 ??_OSCILLATOR_Initialize 0071                         ??_TMR0_StartTimer 0071  
                        __size_of___awdiv 0051                          __size_of___ftadd 00F6  
                        __size_of___awmod 0045                          __size_of___ftdiv 00A9  
                        __size_of___ftneg 0009                                  ___altoft 0E9B  
                        __size_of___ftmul 00B4                          __size_of___ftsub 001E  
                        __size_of___fttol 0087                                  ___ftpack 0780  
                                _decToBcd 0DCA                                  ___lwtoft 0D45  
                              _T0CON0bits 001E                  __size_of_ADCC_Initialize 001E  
                         debounce_sw@port 0075                                  _delay_us 0CF4  
                                __ptext10 0CDE                                  __ptext11 0D45  
                                __ptext20 0CE7                                  __ptext12 0D8C  
                                __ptext21 0719                                  __ptext13 043F  
                                __ptext30 0CD5                                  __ptext22 0DCA  
                                __ptext14 0535                                  __ptext31 07FB  
                                __ptext23 0F19                                  __ptext15 0E60  
                                __ptext32 0D6E                                  __ptext24 0F5E  
                                __ptext16 05E9                                  __ptext33 0CCE  
                                __ptext25 0D02                                  __ptext17 0780  
                                __ptext34 0CC7                                  __ptext26 0D59  
                                __ptext18 0CBB                                  __ptext35 0D11  
                                __ptext27 0CB2                                  __ptext19 0DAA  
                                __ptext28 0CB5                                  __ptext37 0D21  
                                __ptext29 07E4                                  __ptext38 07FF  
                                __ptext39 0CAF                    ?_ADCC_IsConversionDone 0070  
                              trunc@expon 0032                             __size_of_main 029F  
    __end_of_TMR0_DefaultInterruptHandler 0800     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 07FF                      __CFG_WDTCWS$WDTCWS_7 0000  
               _ADCC_ADI_InterruptHandler 00A3              __end_of_ADCC_StartConversion 0CD5  
              ??_ADCC_GetSingleConversion 0074                                  _setpoint 006C  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 001D  
              _INTERRUPT_InterruptManager 0004                    __size_of_display_digit 0067  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                                intlevel1 0000                            debounce_sw@sp1 0076  
                            ?_debounce_sw 0070                            debounce_sw@sp2 0074  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
           ?_TMR0_DefaultInterruptHandler 0070                  _ADCC_GetConversionResult 0CBB  
                          _FVR_Initialize 07FB                           _TMR0_Initialize 0D59  
          __end_of_PIN_MANAGER_Initialize 07FB                             _display_digit 0719  
                       ??_ADCC_Initialize 0071                             ?_eeprom_write 0071  
                              _STATUSbits 0003                              ?_eeprom_read 0070  
