

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jun 29 18:42:04 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 1.45
    70                           ; Generated 16/11/2017 GMT
    71                           ; 
    72                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F18855 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  001C                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001D                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  008C                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0110                     	;# 
   158  0110                     	;# 
   159  0111                     	;# 
   160  0112                     	;# 
   161  0112                     	;# 
   162  0113                     	;# 
   163  0114                     	;# 
   164  0114                     	;# 
   165  0115                     	;# 
   166  0116                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0119                     	;# 
   170  0119                     	;# 
   171  0119                     	;# 
   172  011A                     	;# 
   173  011A                     	;# 
   174  011A                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011C                     	;# 
   181  011C                     	;# 
   182  011C                     	;# 
   183  011D                     	;# 
   184  011D                     	;# 
   185  011D                     	;# 
   186  011E                     	;# 
   187  011E                     	;# 
   188  011E                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196  018E                     	;# 
   197  018F                     	;# 
   198  0190                     	;# 
   199  0191                     	;# 
   200  0192                     	;# 
   201  0196                     	;# 
   202  0197                     	;# 
   203  0198                     	;# 
   204  0199                     	;# 
   205  019A                     	;# 
   206  019B                     	;# 
   207  019C                     	;# 
   208  020C                     	;# 
   209  020C                     	;# 
   210  020D                     	;# 
   211  020E                     	;# 
   212  020F                     	;# 
   213  020F                     	;# 
   214  0210                     	;# 
   215  0210                     	;# 
   216  0211                     	;# 
   217  0211                     	;# 
   218  0212                     	;# 
   219  0212                     	;# 
   220  0213                     	;# 
   221  0214                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0216                     	;# 
   225  0216                     	;# 
   226  0217                     	;# 
   227  0217                     	;# 
   228  0218                     	;# 
   229  0218                     	;# 
   230  0219                     	;# 
   231  021A                     	;# 
   232  021B                     	;# 
   233  021B                     	;# 
   234  021C                     	;# 
   235  021C                     	;# 
   236  021D                     	;# 
   237  021D                     	;# 
   238  021E                     	;# 
   239  021F                     	;# 
   240  028C                     	;# 
   241  028C                     	;# 
   242  028D                     	;# 
   243  028D                     	;# 
   244  028E                     	;# 
   245  028F                     	;# 
   246  0290                     	;# 
   247  0290                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0292                     	;# 
   251  0293                     	;# 
   252  0293                     	;# 
   253  0294                     	;# 
   254  0295                     	;# 
   255  0296                     	;# 
   256  0296                     	;# 
   257  0297                     	;# 
   258  0298                     	;# 
   259  0298                     	;# 
   260  0299                     	;# 
   261  0299                     	;# 
   262  029A                     	;# 
   263  029B                     	;# 
   264  029C                     	;# 
   265  029C                     	;# 
   266  029D                     	;# 
   267  030C                     	;# 
   268  030C                     	;# 
   269  030D                     	;# 
   270  030E                     	;# 
   271  030F                     	;# 
   272  0310                     	;# 
   273  0310                     	;# 
   274  0311                     	;# 
   275  0312                     	;# 
   276  0313                     	;# 
   277  0314                     	;# 
   278  0314                     	;# 
   279  0315                     	;# 
   280  0316                     	;# 
   281  0317                     	;# 
   282  0318                     	;# 
   283  0318                     	;# 
   284  0319                     	;# 
   285  031A                     	;# 
   286  031B                     	;# 
   287  031C                     	;# 
   288  031C                     	;# 
   289  031D                     	;# 
   290  031E                     	;# 
   291  031F                     	;# 
   292  038C                     	;# 
   293  038D                     	;# 
   294  038E                     	;# 
   295  0390                     	;# 
   296  0391                     	;# 
   297  0392                     	;# 
   298  040C                     	;# 
   299  040D                     	;# 
   300  040E                     	;# 
   301  040F                     	;# 
   302  0410                     	;# 
   303  0411                     	;# 
   304  0416                     	;# 
   305  0416                     	;# 
   306  0417                     	;# 
   307  0418                     	;# 
   308  0418                     	;# 
   309  0419                     	;# 
   310  041A                     	;# 
   311  041A                     	;# 
   312  041B                     	;# 
   313  041C                     	;# 
   314  041C                     	;# 
   315  041D                     	;# 
   316  041E                     	;# 
   317  041F                     	;# 
   318  048C                     	;# 
   319  048C                     	;# 
   320  048D                     	;# 
   321  048E                     	;# 
   322  048F                     	;# 
   323  048F                     	;# 
   324  0490                     	;# 
   325  0491                     	;# 
   326  0492                     	;# 
   327  0492                     	;# 
   328  0493                     	;# 
   329  0494                     	;# 
   330  0495                     	;# 
   331  0495                     	;# 
   332  0496                     	;# 
   333  0497                     	;# 
   334  0498                     	;# 
   335  0499                     	;# 
   336  049A                     	;# 
   337  049B                     	;# 
   338  049C                     	;# 
   339  049D                     	;# 
   340  050C                     	;# 
   341  050C                     	;# 
   342  050D                     	;# 
   343  050E                     	;# 
   344  050F                     	;# 
   345  050F                     	;# 
   346  0510                     	;# 
   347  0511                     	;# 
   348  0512                     	;# 
   349  0512                     	;# 
   350  0513                     	;# 
   351  0514                     	;# 
   352  0515                     	;# 
   353  0515                     	;# 
   354  0516                     	;# 
   355  0517                     	;# 
   356  0518                     	;# 
   357  0519                     	;# 
   358  051A                     	;# 
   359  051B                     	;# 
   360  051C                     	;# 
   361  051D                     	;# 
   362  058C                     	;# 
   363  058C                     	;# 
   364  058D                     	;# 
   365  058E                     	;# 
   366  058F                     	;# 
   367  058F                     	;# 
   368  0590                     	;# 
   369  0591                     	;# 
   370  0592                     	;# 
   371  0593                     	;# 
   372  060C                     	;# 
   373  060D                     	;# 
   374  060E                     	;# 
   375  060F                     	;# 
   376  0610                     	;# 
   377  0611                     	;# 
   378  0612                     	;# 
   379  0613                     	;# 
   380  0614                     	;# 
   381  0616                     	;# 
   382  0617                     	;# 
   383  0618                     	;# 
   384  0619                     	;# 
   385  061A                     	;# 
   386  061B                     	;# 
   387  061C                     	;# 
   388  061D                     	;# 
   389  061E                     	;# 
   390  068C                     	;# 
   391  068D                     	;# 
   392  068E                     	;# 
   393  068F                     	;# 
   394  0690                     	;# 
   395  0691                     	;# 
   396  0692                     	;# 
   397  0693                     	;# 
   398  0694                     	;# 
   399  070C                     	;# 
   400  070D                     	;# 
   401  070E                     	;# 
   402  070F                     	;# 
   403  0710                     	;# 
   404  0711                     	;# 
   405  0712                     	;# 
   406  0713                     	;# 
   407  0714                     	;# 
   408  0716                     	;# 
   409  0717                     	;# 
   410  0718                     	;# 
   411  0719                     	;# 
   412  071A                     	;# 
   413  071B                     	;# 
   414  071C                     	;# 
   415  071D                     	;# 
   416  071E                     	;# 
   417  0796                     	;# 
   418  0797                     	;# 
   419  0798                     	;# 
   420  0799                     	;# 
   421  079A                     	;# 
   422  079B                     	;# 
   423  080C                     	;# 
   424  080D                     	;# 
   425  080E                     	;# 
   426  080F                     	;# 
   427  0810                     	;# 
   428  0811                     	;# 
   429  0812                     	;# 
   430  0813                     	;# 
   431  0814                     	;# 
   432  081A                     	;# 
   433  081B                     	;# 
   434  081C                     	;# 
   435  081D                     	;# 
   436  081E                     	;# 
   437  081F                     	;# 
   438  088C                     	;# 
   439  088D                     	;# 
   440  088E                     	;# 
   441  088F                     	;# 
   442  0890                     	;# 
   443  0891                     	;# 
   444  0892                     	;# 
   445  0893                     	;# 
   446  0895                     	;# 
   447  0896                     	;# 
   448  0897                     	;# 
   449  0898                     	;# 
   450  0899                     	;# 
   451  089A                     	;# 
   452  089B                     	;# 
   453  090C                     	;# 
   454  090E                     	;# 
   455  090F                     	;# 
   456  091F                     	;# 
   457  091F                     	;# 
   458  098F                     	;# 
   459  098F                     	;# 
   460  0990                     	;# 
   461  0991                     	;# 
   462  0992                     	;# 
   463  0993                     	;# 
   464  0994                     	;# 
   465  0995                     	;# 
   466  0996                     	;# 
   467  0997                     	;# 
   468  0E0F                     	;# 
   469  0E10                     	;# 
   470  0E11                     	;# 
   471  0E12                     	;# 
   472  0E13                     	;# 
   473  0E14                     	;# 
   474  0E15                     	;# 
   475  0E16                     	;# 
   476  0E17                     	;# 
   477  0E18                     	;# 
   478  0E19                     	;# 
   479  0E1A                     	;# 
   480  0E1B                     	;# 
   481  0E1C                     	;# 
   482  0E1D                     	;# 
   483  0E1E                     	;# 
   484  0E1F                     	;# 
   485  0E20                     	;# 
   486  0E21                     	;# 
   487  0E22                     	;# 
   488  0E23                     	;# 
   489  0E24                     	;# 
   490  0E25                     	;# 
   491  0E26                     	;# 
   492  0E27                     	;# 
   493  0E28                     	;# 
   494  0E29                     	;# 
   495  0E2A                     	;# 
   496  0E2B                     	;# 
   497  0E2C                     	;# 
   498  0E2D                     	;# 
   499  0E2E                     	;# 
   500  0E2F                     	;# 
   501  0E30                     	;# 
   502  0E31                     	;# 
   503  0E32                     	;# 
   504  0E33                     	;# 
   505  0E34                     	;# 
   506  0E35                     	;# 
   507  0E36                     	;# 
   508  0E37                     	;# 
   509  0E8F                     	;# 
   510  0E90                     	;# 
   511  0E91                     	;# 
   512  0E92                     	;# 
   513  0E93                     	;# 
   514  0E94                     	;# 
   515  0E95                     	;# 
   516  0E96                     	;# 
   517  0E97                     	;# 
   518  0E9C                     	;# 
   519  0E9D                     	;# 
   520  0E9E                     	;# 
   521  0EA1                     	;# 
   522  0EA2                     	;# 
   523  0EA3                     	;# 
   524  0EA4                     	;# 
   525  0EA5                     	;# 
   526  0EA9                     	;# 
   527  0EAA                     	;# 
   528  0EAB                     	;# 
   529  0EAC                     	;# 
   530  0EB1                     	;# 
   531  0EB2                     	;# 
   532  0EB3                     	;# 
   533  0EB8                     	;# 
   534  0EB9                     	;# 
   535  0EBA                     	;# 
   536  0EBB                     	;# 
   537  0EBC                     	;# 
   538  0EBD                     	;# 
   539  0EBE                     	;# 
   540  0EC3                     	;# 
   541  0EC5                     	;# 
   542  0EC6                     	;# 
   543  0EC7                     	;# 
   544  0EC8                     	;# 
   545  0EC9                     	;# 
   546  0ECA                     	;# 
   547  0ECB                     	;# 
   548  0ECC                     	;# 
   549  0F10                     	;# 
   550  0F11                     	;# 
   551  0F12                     	;# 
   552  0F13                     	;# 
   553  0F14                     	;# 
   554  0F15                     	;# 
   555  0F16                     	;# 
   556  0F17                     	;# 
   557  0F18                     	;# 
   558  0F19                     	;# 
   559  0F1A                     	;# 
   560  0F1B                     	;# 
   561  0F1C                     	;# 
   562  0F1D                     	;# 
   563  0F1E                     	;# 
   564  0F1F                     	;# 
   565  0F20                     	;# 
   566  0F21                     	;# 
   567  0F22                     	;# 
   568  0F23                     	;# 
   569  0F24                     	;# 
   570  0F25                     	;# 
   571  0F26                     	;# 
   572  0F27                     	;# 
   573  0F38                     	;# 
   574  0F39                     	;# 
   575  0F3A                     	;# 
   576  0F3B                     	;# 
   577  0F3C                     	;# 
   578  0F3D                     	;# 
   579  0F3E                     	;# 
   580  0F3F                     	;# 
   581  0F40                     	;# 
   582  0F41                     	;# 
   583  0F43                     	;# 
   584  0F44                     	;# 
   585  0F45                     	;# 
   586  0F46                     	;# 
   587  0F47                     	;# 
   588  0F48                     	;# 
   589  0F49                     	;# 
   590  0F4A                     	;# 
   591  0F4B                     	;# 
   592  0F4C                     	;# 
   593  0F4E                     	;# 
   594  0F4F                     	;# 
   595  0F50                     	;# 
   596  0F51                     	;# 
   597  0F52                     	;# 
   598  0F53                     	;# 
   599  0F54                     	;# 
   600  0F55                     	;# 
   601  0F56                     	;# 
   602  0F57                     	;# 
   603  0F65                     	;# 
   604  0F68                     	;# 
   605  0F69                     	;# 
   606  0F6A                     	;# 
   607  0F6B                     	;# 
   608  0FE4                     	;# 
   609  0FE5                     	;# 
   610  0FE6                     	;# 
   611  0FE7                     	;# 
   612  0FE8                     	;# 
   613  0FE9                     	;# 
   614  0FEA                     	;# 
   615  0FEB                     	;# 
   616  0FED                     	;# 
   617  0FEE                     	;# 
   618  0FEF                     	;# 
   619  0000                     	;# 
   620  0001                     	;# 
   621  0002                     	;# 
   622  0003                     	;# 
   623  0004                     	;# 
   624  0005                     	;# 
   625  0006                     	;# 
   626  0007                     	;# 
   627  0008                     	;# 
   628  0009                     	;# 
   629  000A                     	;# 
   630  000B                     	;# 
   631  000C                     	;# 
   632  000D                     	;# 
   633  000E                     	;# 
   634  0010                     	;# 
   635  0011                     	;# 
   636  0012                     	;# 
   637  0013                     	;# 
   638  0016                     	;# 
   639  0017                     	;# 
   640  0018                     	;# 
   641  001C                     	;# 
   642  001C                     	;# 
   643  001D                     	;# 
   644  001D                     	;# 
   645  001E                     	;# 
   646  001F                     	;# 
   647  008C                     	;# 
   648  008C                     	;# 
   649  008D                     	;# 
   650  008E                     	;# 
   651  008E                     	;# 
   652  008F                     	;# 
   653  0090                     	;# 
   654  0090                     	;# 
   655  0091                     	;# 
   656  0093                     	;# 
   657  0094                     	;# 
   658  0095                     	;# 
   659  0096                     	;# 
   660  0097                     	;# 
   661  0098                     	;# 
   662  0099                     	;# 
   663  009A                     	;# 
   664  009B                     	;# 
   665  009C                     	;# 
   666  009D                     	;# 
   667  009E                     	;# 
   668  010C                     	;# 
   669  010D                     	;# 
   670  010E                     	;# 
   671  010E                     	;# 
   672  010F                     	;# 
   673  0110                     	;# 
   674  0110                     	;# 
   675  0111                     	;# 
   676  0112                     	;# 
   677  0112                     	;# 
   678  0113                     	;# 
   679  0114                     	;# 
   680  0114                     	;# 
   681  0115                     	;# 
   682  0116                     	;# 
   683  0116                     	;# 
   684  0117                     	;# 
   685  0119                     	;# 
   686  0119                     	;# 
   687  0119                     	;# 
   688  011A                     	;# 
   689  011A                     	;# 
   690  011A                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011B                     	;# 
   696  011C                     	;# 
   697  011C                     	;# 
   698  011C                     	;# 
   699  011D                     	;# 
   700  011D                     	;# 
   701  011D                     	;# 
   702  011E                     	;# 
   703  011E                     	;# 
   704  011E                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  011F                     	;# 
   710  018C                     	;# 
   711  018D                     	;# 
   712  018E                     	;# 
   713  018F                     	;# 
   714  0190                     	;# 
   715  0191                     	;# 
   716  0192                     	;# 
   717  0196                     	;# 
   718  0197                     	;# 
   719  0198                     	;# 
   720  0199                     	;# 
   721  019A                     	;# 
   722  019B                     	;# 
   723  019C                     	;# 
   724  020C                     	;# 
   725  020C                     	;# 
   726  020D                     	;# 
   727  020E                     	;# 
   728  020F                     	;# 
   729  020F                     	;# 
   730  0210                     	;# 
   731  0210                     	;# 
   732  0211                     	;# 
   733  0211                     	;# 
   734  0212                     	;# 
   735  0212                     	;# 
   736  0213                     	;# 
   737  0214                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0216                     	;# 
   741  0216                     	;# 
   742  0217                     	;# 
   743  0217                     	;# 
   744  0218                     	;# 
   745  0218                     	;# 
   746  0219                     	;# 
   747  021A                     	;# 
   748  021B                     	;# 
   749  021B                     	;# 
   750  021C                     	;# 
   751  021C                     	;# 
   752  021D                     	;# 
   753  021D                     	;# 
   754  021E                     	;# 
   755  021F                     	;# 
   756  028C                     	;# 
   757  028C                     	;# 
   758  028D                     	;# 
   759  028D                     	;# 
   760  028E                     	;# 
   761  028F                     	;# 
   762  0290                     	;# 
   763  0290                     	;# 
   764  0291                     	;# 
   765  0292                     	;# 
   766  0292                     	;# 
   767  0293                     	;# 
   768  0293                     	;# 
   769  0294                     	;# 
   770  0295                     	;# 
   771  0296                     	;# 
   772  0296                     	;# 
   773  0297                     	;# 
   774  0298                     	;# 
   775  0298                     	;# 
   776  0299                     	;# 
   777  0299                     	;# 
   778  029A                     	;# 
   779  029B                     	;# 
   780  029C                     	;# 
   781  029C                     	;# 
   782  029D                     	;# 
   783  030C                     	;# 
   784  030C                     	;# 
   785  030D                     	;# 
   786  030E                     	;# 
   787  030F                     	;# 
   788  0310                     	;# 
   789  0310                     	;# 
   790  0311                     	;# 
   791  0312                     	;# 
   792  0313                     	;# 
   793  0314                     	;# 
   794  0314                     	;# 
   795  0315                     	;# 
   796  0316                     	;# 
   797  0317                     	;# 
   798  0318                     	;# 
   799  0318                     	;# 
   800  0319                     	;# 
   801  031A                     	;# 
   802  031B                     	;# 
   803  031C                     	;# 
   804  031C                     	;# 
   805  031D                     	;# 
   806  031E                     	;# 
   807  031F                     	;# 
   808  038C                     	;# 
   809  038D                     	;# 
   810  038E                     	;# 
   811  0390                     	;# 
   812  0391                     	;# 
   813  0392                     	;# 
   814  040C                     	;# 
   815  040D                     	;# 
   816  040E                     	;# 
   817  040F                     	;# 
   818  0410                     	;# 
   819  0411                     	;# 
   820  0416                     	;# 
   821  0416                     	;# 
   822  0417                     	;# 
   823  0418                     	;# 
   824  0418                     	;# 
   825  0419                     	;# 
   826  041A                     	;# 
   827  041A                     	;# 
   828  041B                     	;# 
   829  041C                     	;# 
   830  041C                     	;# 
   831  041D                     	;# 
   832  041E                     	;# 
   833  041F                     	;# 
   834  048C                     	;# 
   835  048C                     	;# 
   836  048D                     	;# 
   837  048E                     	;# 
   838  048F                     	;# 
   839  048F                     	;# 
   840  0490                     	;# 
   841  0491                     	;# 
   842  0492                     	;# 
   843  0492                     	;# 
   844  0493                     	;# 
   845  0494                     	;# 
   846  0495                     	;# 
   847  0495                     	;# 
   848  0496                     	;# 
   849  0497                     	;# 
   850  0498                     	;# 
   851  0499                     	;# 
   852  049A                     	;# 
   853  049B                     	;# 
   854  049C                     	;# 
   855  049D                     	;# 
   856  050C                     	;# 
   857  050C                     	;# 
   858  050D                     	;# 
   859  050E                     	;# 
   860  050F                     	;# 
   861  050F                     	;# 
   862  0510                     	;# 
   863  0511                     	;# 
   864  0512                     	;# 
   865  0512                     	;# 
   866  0513                     	;# 
   867  0514                     	;# 
   868  0515                     	;# 
   869  0515                     	;# 
   870  0516                     	;# 
   871  0517                     	;# 
   872  0518                     	;# 
   873  0519                     	;# 
   874  051A                     	;# 
   875  051B                     	;# 
   876  051C                     	;# 
   877  051D                     	;# 
   878  058C                     	;# 
   879  058C                     	;# 
   880  058D                     	;# 
   881  058E                     	;# 
   882  058F                     	;# 
   883  058F                     	;# 
   884  0590                     	;# 
   885  0591                     	;# 
   886  0592                     	;# 
   887  0593                     	;# 
   888  060C                     	;# 
   889  060D                     	;# 
   890  060E                     	;# 
   891  060F                     	;# 
   892  0610                     	;# 
   893  0611                     	;# 
   894  0612                     	;# 
   895  0613                     	;# 
   896  0614                     	;# 
   897  0616                     	;# 
   898  0617                     	;# 
   899  0618                     	;# 
   900  0619                     	;# 
   901  061A                     	;# 
   902  061B                     	;# 
   903  061C                     	;# 
   904  061D                     	;# 
   905  061E                     	;# 
   906  068C                     	;# 
   907  068D                     	;# 
   908  068E                     	;# 
   909  068F                     	;# 
   910  0690                     	;# 
   911  0691                     	;# 
   912  0692                     	;# 
   913  0693                     	;# 
   914  0694                     	;# 
   915  070C                     	;# 
   916  070D                     	;# 
   917  070E                     	;# 
   918  070F                     	;# 
   919  0710                     	;# 
   920  0711                     	;# 
   921  0712                     	;# 
   922  0713                     	;# 
   923  0714                     	;# 
   924  0716                     	;# 
   925  0717                     	;# 
   926  0718                     	;# 
   927  0719                     	;# 
   928  071A                     	;# 
   929  071B                     	;# 
   930  071C                     	;# 
   931  071D                     	;# 
   932  071E                     	;# 
   933  0796                     	;# 
   934  0797                     	;# 
   935  0798                     	;# 
   936  0799                     	;# 
   937  079A                     	;# 
   938  079B                     	;# 
   939  080C                     	;# 
   940  080D                     	;# 
   941  080E                     	;# 
   942  080F                     	;# 
   943  0810                     	;# 
   944  0811                     	;# 
   945  0812                     	;# 
   946  0813                     	;# 
   947  0814                     	;# 
   948  081A                     	;# 
   949  081B                     	;# 
   950  081C                     	;# 
   951  081D                     	;# 
   952  081E                     	;# 
   953  081F                     	;# 
   954  088C                     	;# 
   955  088D                     	;# 
   956  088E                     	;# 
   957  088F                     	;# 
   958  0890                     	;# 
   959  0891                     	;# 
   960  0892                     	;# 
   961  0893                     	;# 
   962  0895                     	;# 
   963  0896                     	;# 
   964  0897                     	;# 
   965  0898                     	;# 
   966  0899                     	;# 
   967  089A                     	;# 
   968  089B                     	;# 
   969  090C                     	;# 
   970  090E                     	;# 
   971  090F                     	;# 
   972  091F                     	;# 
   973  091F                     	;# 
   974  098F                     	;# 
   975  098F                     	;# 
   976  0990                     	;# 
   977  0991                     	;# 
   978  0992                     	;# 
   979  0993                     	;# 
   980  0994                     	;# 
   981  0995                     	;# 
   982  0996                     	;# 
   983  0997                     	;# 
   984  0E0F                     	;# 
   985  0E10                     	;# 
   986  0E11                     	;# 
   987  0E12                     	;# 
   988  0E13                     	;# 
   989  0E14                     	;# 
   990  0E15                     	;# 
   991  0E16                     	;# 
   992  0E17                     	;# 
   993  0E18                     	;# 
   994  0E19                     	;# 
   995  0E1A                     	;# 
   996  0E1B                     	;# 
   997  0E1C                     	;# 
   998  0E1D                     	;# 
   999  0E1E                     	;# 
  1000  0E1F                     	;# 
  1001  0E20                     	;# 
  1002  0E21                     	;# 
  1003  0E22                     	;# 
  1004  0E23                     	;# 
  1005  0E24                     	;# 
  1006  0E25                     	;# 
  1007  0E26                     	;# 
  1008  0E27                     	;# 
  1009  0E28                     	;# 
  1010  0E29                     	;# 
  1011  0E2A                     	;# 
  1012  0E2B                     	;# 
  1013  0E2C                     	;# 
  1014  0E2D                     	;# 
  1015  0E2E                     	;# 
  1016  0E2F                     	;# 
  1017  0E30                     	;# 
  1018  0E31                     	;# 
  1019  0E32                     	;# 
  1020  0E33                     	;# 
  1021  0E34                     	;# 
  1022  0E35                     	;# 
  1023  0E36                     	;# 
  1024  0E37                     	;# 
  1025  0E8F                     	;# 
  1026  0E90                     	;# 
  1027  0E91                     	;# 
  1028  0E92                     	;# 
  1029  0E93                     	;# 
  1030  0E94                     	;# 
  1031  0E95                     	;# 
  1032  0E96                     	;# 
  1033  0E97                     	;# 
  1034  0E9C                     	;# 
  1035  0E9D                     	;# 
  1036  0E9E                     	;# 
  1037  0EA1                     	;# 
  1038  0EA2                     	;# 
  1039  0EA3                     	;# 
  1040  0EA4                     	;# 
  1041  0EA5                     	;# 
  1042  0EA9                     	;# 
  1043  0EAA                     	;# 
  1044  0EAB                     	;# 
  1045  0EAC                     	;# 
  1046  0EB1                     	;# 
  1047  0EB2                     	;# 
  1048  0EB3                     	;# 
  1049  0EB8                     	;# 
  1050  0EB9                     	;# 
  1051  0EBA                     	;# 
  1052  0EBB                     	;# 
  1053  0EBC                     	;# 
  1054  0EBD                     	;# 
  1055  0EBE                     	;# 
  1056  0EC3                     	;# 
  1057  0EC5                     	;# 
  1058  0EC6                     	;# 
  1059  0EC7                     	;# 
  1060  0EC8                     	;# 
  1061  0EC9                     	;# 
  1062  0ECA                     	;# 
  1063  0ECB                     	;# 
  1064  0ECC                     	;# 
  1065  0F10                     	;# 
  1066  0F11                     	;# 
  1067  0F12                     	;# 
  1068  0F13                     	;# 
  1069  0F14                     	;# 
  1070  0F15                     	;# 
  1071  0F16                     	;# 
  1072  0F17                     	;# 
  1073  0F18                     	;# 
  1074  0F19                     	;# 
  1075  0F1A                     	;# 
  1076  0F1B                     	;# 
  1077  0F1C                     	;# 
  1078  0F1D                     	;# 
  1079  0F1E                     	;# 
  1080  0F1F                     	;# 
  1081  0F20                     	;# 
  1082  0F21                     	;# 
  1083  0F22                     	;# 
  1084  0F23                     	;# 
  1085  0F24                     	;# 
  1086  0F25                     	;# 
  1087  0F26                     	;# 
  1088  0F27                     	;# 
  1089  0F38                     	;# 
  1090  0F39                     	;# 
  1091  0F3A                     	;# 
  1092  0F3B                     	;# 
  1093  0F3C                     	;# 
  1094  0F3D                     	;# 
  1095  0F3E                     	;# 
  1096  0F3F                     	;# 
  1097  0F40                     	;# 
  1098  0F41                     	;# 
  1099  0F43                     	;# 
  1100  0F44                     	;# 
  1101  0F45                     	;# 
  1102  0F46                     	;# 
  1103  0F47                     	;# 
  1104  0F48                     	;# 
  1105  0F49                     	;# 
  1106  0F4A                     	;# 
  1107  0F4B                     	;# 
  1108  0F4C                     	;# 
  1109  0F4E                     	;# 
  1110  0F4F                     	;# 
  1111  0F50                     	;# 
  1112  0F51                     	;# 
  1113  0F52                     	;# 
  1114  0F53                     	;# 
  1115  0F54                     	;# 
  1116  0F55                     	;# 
  1117  0F56                     	;# 
  1118  0F57                     	;# 
  1119  0F65                     	;# 
  1120  0F68                     	;# 
  1121  0F69                     	;# 
  1122  0F6A                     	;# 
  1123  0F6B                     	;# 
  1124  0FE4                     	;# 
  1125  0FE5                     	;# 
  1126  0FE6                     	;# 
  1127  0FE7                     	;# 
  1128  0FE8                     	;# 
  1129  0FE9                     	;# 
  1130  0FEA                     	;# 
  1131  0FEB                     	;# 
  1132  0FED                     	;# 
  1133  0FEE                     	;# 
  1134  0FEF                     	;# 
  1135  0000                     	;# 
  1136  0001                     	;# 
  1137  0002                     	;# 
  1138  0003                     	;# 
  1139  0004                     	;# 
  1140  0005                     	;# 
  1141  0006                     	;# 
  1142  0007                     	;# 
  1143  0008                     	;# 
  1144  0009                     	;# 
  1145  000A                     	;# 
  1146  000B                     	;# 
  1147  000C                     	;# 
  1148  000D                     	;# 
  1149  000E                     	;# 
  1150  0010                     	;# 
  1151  0011                     	;# 
  1152  0012                     	;# 
  1153  0013                     	;# 
  1154  0016                     	;# 
  1155  0017                     	;# 
  1156  0018                     	;# 
  1157  001C                     	;# 
  1158  001C                     	;# 
  1159  001D                     	;# 
  1160  001D                     	;# 
  1161  001E                     	;# 
  1162  001F                     	;# 
  1163  008C                     	;# 
  1164  008C                     	;# 
  1165  008D                     	;# 
  1166  008E                     	;# 
  1167  008E                     	;# 
  1168  008F                     	;# 
  1169  0090                     	;# 
  1170  0090                     	;# 
  1171  0091                     	;# 
  1172  0093                     	;# 
  1173  0094                     	;# 
  1174  0095                     	;# 
  1175  0096                     	;# 
  1176  0097                     	;# 
  1177  0098                     	;# 
  1178  0099                     	;# 
  1179  009A                     	;# 
  1180  009B                     	;# 
  1181  009C                     	;# 
  1182  009D                     	;# 
  1183  009E                     	;# 
  1184  010C                     	;# 
  1185  010D                     	;# 
  1186  010E                     	;# 
  1187  010E                     	;# 
  1188  010F                     	;# 
  1189  0110                     	;# 
  1190  0110                     	;# 
  1191  0111                     	;# 
  1192  0112                     	;# 
  1193  0112                     	;# 
  1194  0113                     	;# 
  1195  0114                     	;# 
  1196  0114                     	;# 
  1197  0115                     	;# 
  1198  0116                     	;# 
  1199  0116                     	;# 
  1200  0117                     	;# 
  1201  0119                     	;# 
  1202  0119                     	;# 
  1203  0119                     	;# 
  1204  011A                     	;# 
  1205  011A                     	;# 
  1206  011A                     	;# 
  1207  011B                     	;# 
  1208  011B                     	;# 
  1209  011B                     	;# 
  1210  011B                     	;# 
  1211  011B                     	;# 
  1212  011C                     	;# 
  1213  011C                     	;# 
  1214  011C                     	;# 
  1215  011D                     	;# 
  1216  011D                     	;# 
  1217  011D                     	;# 
  1218  011E                     	;# 
  1219  011E                     	;# 
  1220  011E                     	;# 
  1221  011F                     	;# 
  1222  011F                     	;# 
  1223  011F                     	;# 
  1224  011F                     	;# 
  1225  011F                     	;# 
  1226  018C                     	;# 
  1227  018D                     	;# 
  1228  018E                     	;# 
  1229  018F                     	;# 
  1230  0190                     	;# 
  1231  0191                     	;# 
  1232  0192                     	;# 
  1233  0196                     	;# 
  1234  0197                     	;# 
  1235  0198                     	;# 
  1236  0199                     	;# 
  1237  019A                     	;# 
  1238  019B                     	;# 
  1239  019C                     	;# 
  1240  020C                     	;# 
  1241  020C                     	;# 
  1242  020D                     	;# 
  1243  020E                     	;# 
  1244  020F                     	;# 
  1245  020F                     	;# 
  1246  0210                     	;# 
  1247  0210                     	;# 
  1248  0211                     	;# 
  1249  0211                     	;# 
  1250  0212                     	;# 
  1251  0212                     	;# 
  1252  0213                     	;# 
  1253  0214                     	;# 
  1254  0215                     	;# 
  1255  0215                     	;# 
  1256  0216                     	;# 
  1257  0216                     	;# 
  1258  0217                     	;# 
  1259  0217                     	;# 
  1260  0218                     	;# 
  1261  0218                     	;# 
  1262  0219                     	;# 
  1263  021A                     	;# 
  1264  021B                     	;# 
  1265  021B                     	;# 
  1266  021C                     	;# 
  1267  021C                     	;# 
  1268  021D                     	;# 
  1269  021D                     	;# 
  1270  021E                     	;# 
  1271  021F                     	;# 
  1272  028C                     	;# 
  1273  028C                     	;# 
  1274  028D                     	;# 
  1275  028D                     	;# 
  1276  028E                     	;# 
  1277  028F                     	;# 
  1278  0290                     	;# 
  1279  0290                     	;# 
  1280  0291                     	;# 
  1281  0292                     	;# 
  1282  0292                     	;# 
  1283  0293                     	;# 
  1284  0293                     	;# 
  1285  0294                     	;# 
  1286  0295                     	;# 
  1287  0296                     	;# 
  1288  0296                     	;# 
  1289  0297                     	;# 
  1290  0298                     	;# 
  1291  0298                     	;# 
  1292  0299                     	;# 
  1293  0299                     	;# 
  1294  029A                     	;# 
  1295  029B                     	;# 
  1296  029C                     	;# 
  1297  029C                     	;# 
  1298  029D                     	;# 
  1299  030C                     	;# 
  1300  030C                     	;# 
  1301  030D                     	;# 
  1302  030E                     	;# 
  1303  030F                     	;# 
  1304  0310                     	;# 
  1305  0310                     	;# 
  1306  0311                     	;# 
  1307  0312                     	;# 
  1308  0313                     	;# 
  1309  0314                     	;# 
  1310  0314                     	;# 
  1311  0315                     	;# 
  1312  0316                     	;# 
  1313  0317                     	;# 
  1314  0318                     	;# 
  1315  0318                     	;# 
  1316  0319                     	;# 
  1317  031A                     	;# 
  1318  031B                     	;# 
  1319  031C                     	;# 
  1320  031C                     	;# 
  1321  031D                     	;# 
  1322  031E                     	;# 
  1323  031F                     	;# 
  1324  038C                     	;# 
  1325  038D                     	;# 
  1326  038E                     	;# 
  1327  0390                     	;# 
  1328  0391                     	;# 
  1329  0392                     	;# 
  1330  040C                     	;# 
  1331  040D                     	;# 
  1332  040E                     	;# 
  1333  040F                     	;# 
  1334  0410                     	;# 
  1335  0411                     	;# 
  1336  0416                     	;# 
  1337  0416                     	;# 
  1338  0417                     	;# 
  1339  0418                     	;# 
  1340  0418                     	;# 
  1341  0419                     	;# 
  1342  041A                     	;# 
  1343  041A                     	;# 
  1344  041B                     	;# 
  1345  041C                     	;# 
  1346  041C                     	;# 
  1347  041D                     	;# 
  1348  041E                     	;# 
  1349  041F                     	;# 
  1350  048C                     	;# 
  1351  048C                     	;# 
  1352  048D                     	;# 
  1353  048E                     	;# 
  1354  048F                     	;# 
  1355  048F                     	;# 
  1356  0490                     	;# 
  1357  0491                     	;# 
  1358  0492                     	;# 
  1359  0492                     	;# 
  1360  0493                     	;# 
  1361  0494                     	;# 
  1362  0495                     	;# 
  1363  0495                     	;# 
  1364  0496                     	;# 
  1365  0497                     	;# 
  1366  0498                     	;# 
  1367  0499                     	;# 
  1368  049A                     	;# 
  1369  049B                     	;# 
  1370  049C                     	;# 
  1371  049D                     	;# 
  1372  050C                     	;# 
  1373  050C                     	;# 
  1374  050D                     	;# 
  1375  050E                     	;# 
  1376  050F                     	;# 
  1377  050F                     	;# 
  1378  0510                     	;# 
  1379  0511                     	;# 
  1380  0512                     	;# 
  1381  0512                     	;# 
  1382  0513                     	;# 
  1383  0514                     	;# 
  1384  0515                     	;# 
  1385  0515                     	;# 
  1386  0516                     	;# 
  1387  0517                     	;# 
  1388  0518                     	;# 
  1389  0519                     	;# 
  1390  051A                     	;# 
  1391  051B                     	;# 
  1392  051C                     	;# 
  1393  051D                     	;# 
  1394  058C                     	;# 
  1395  058C                     	;# 
  1396  058D                     	;# 
  1397  058E                     	;# 
  1398  058F                     	;# 
  1399  058F                     	;# 
  1400  0590                     	;# 
  1401  0591                     	;# 
  1402  0592                     	;# 
  1403  0593                     	;# 
  1404  060C                     	;# 
  1405  060D                     	;# 
  1406  060E                     	;# 
  1407  060F                     	;# 
  1408  0610                     	;# 
  1409  0611                     	;# 
  1410  0612                     	;# 
  1411  0613                     	;# 
  1412  0614                     	;# 
  1413  0616                     	;# 
  1414  0617                     	;# 
  1415  0618                     	;# 
  1416  0619                     	;# 
  1417  061A                     	;# 
  1418  061B                     	;# 
  1419  061C                     	;# 
  1420  061D                     	;# 
  1421  061E                     	;# 
  1422  068C                     	;# 
  1423  068D                     	;# 
  1424  068E                     	;# 
  1425  068F                     	;# 
  1426  0690                     	;# 
  1427  0691                     	;# 
  1428  0692                     	;# 
  1429  0693                     	;# 
  1430  0694                     	;# 
  1431  070C                     	;# 
  1432  070D                     	;# 
  1433  070E                     	;# 
  1434  070F                     	;# 
  1435  0710                     	;# 
  1436  0711                     	;# 
  1437  0712                     	;# 
  1438  0713                     	;# 
  1439  0714                     	;# 
  1440  0716                     	;# 
  1441  0717                     	;# 
  1442  0718                     	;# 
  1443  0719                     	;# 
  1444  071A                     	;# 
  1445  071B                     	;# 
  1446  071C                     	;# 
  1447  071D                     	;# 
  1448  071E                     	;# 
  1449  0796                     	;# 
  1450  0797                     	;# 
  1451  0798                     	;# 
  1452  0799                     	;# 
  1453  079A                     	;# 
  1454  079B                     	;# 
  1455  080C                     	;# 
  1456  080D                     	;# 
  1457  080E                     	;# 
  1458  080F                     	;# 
  1459  0810                     	;# 
  1460  0811                     	;# 
  1461  0812                     	;# 
  1462  0813                     	;# 
  1463  0814                     	;# 
  1464  081A                     	;# 
  1465  081B                     	;# 
  1466  081C                     	;# 
  1467  081D                     	;# 
  1468  081E                     	;# 
  1469  081F                     	;# 
  1470  088C                     	;# 
  1471  088D                     	;# 
  1472  088E                     	;# 
  1473  088F                     	;# 
  1474  0890                     	;# 
  1475  0891                     	;# 
  1476  0892                     	;# 
  1477  0893                     	;# 
  1478  0895                     	;# 
  1479  0896                     	;# 
  1480  0897                     	;# 
  1481  0898                     	;# 
  1482  0899                     	;# 
  1483  089A                     	;# 
  1484  089B                     	;# 
  1485  090C                     	;# 
  1486  090E                     	;# 
  1487  090F                     	;# 
  1488  091F                     	;# 
  1489  091F                     	;# 
  1490  098F                     	;# 
  1491  098F                     	;# 
  1492  0990                     	;# 
  1493  0991                     	;# 
  1494  0992                     	;# 
  1495  0993                     	;# 
  1496  0994                     	;# 
  1497  0995                     	;# 
  1498  0996                     	;# 
  1499  0997                     	;# 
  1500  0E0F                     	;# 
  1501  0E10                     	;# 
  1502  0E11                     	;# 
  1503  0E12                     	;# 
  1504  0E13                     	;# 
  1505  0E14                     	;# 
  1506  0E15                     	;# 
  1507  0E16                     	;# 
  1508  0E17                     	;# 
  1509  0E18                     	;# 
  1510  0E19                     	;# 
  1511  0E1A                     	;# 
  1512  0E1B                     	;# 
  1513  0E1C                     	;# 
  1514  0E1D                     	;# 
  1515  0E1E                     	;# 
  1516  0E1F                     	;# 
  1517  0E20                     	;# 
  1518  0E21                     	;# 
  1519  0E22                     	;# 
  1520  0E23                     	;# 
  1521  0E24                     	;# 
  1522  0E25                     	;# 
  1523  0E26                     	;# 
  1524  0E27                     	;# 
  1525  0E28                     	;# 
  1526  0E29                     	;# 
  1527  0E2A                     	;# 
  1528  0E2B                     	;# 
  1529  0E2C                     	;# 
  1530  0E2D                     	;# 
  1531  0E2E                     	;# 
  1532  0E2F                     	;# 
  1533  0E30                     	;# 
  1534  0E31                     	;# 
  1535  0E32                     	;# 
  1536  0E33                     	;# 
  1537  0E34                     	;# 
  1538  0E35                     	;# 
  1539  0E36                     	;# 
  1540  0E37                     	;# 
  1541  0E8F                     	;# 
  1542  0E90                     	;# 
  1543  0E91                     	;# 
  1544  0E92                     	;# 
  1545  0E93                     	;# 
  1546  0E94                     	;# 
  1547  0E95                     	;# 
  1548  0E96                     	;# 
  1549  0E97                     	;# 
  1550  0E9C                     	;# 
  1551  0E9D                     	;# 
  1552  0E9E                     	;# 
  1553  0EA1                     	;# 
  1554  0EA2                     	;# 
  1555  0EA3                     	;# 
  1556  0EA4                     	;# 
  1557  0EA5                     	;# 
  1558  0EA9                     	;# 
  1559  0EAA                     	;# 
  1560  0EAB                     	;# 
  1561  0EAC                     	;# 
  1562  0EB1                     	;# 
  1563  0EB2                     	;# 
  1564  0EB3                     	;# 
  1565  0EB8                     	;# 
  1566  0EB9                     	;# 
  1567  0EBA                     	;# 
  1568  0EBB                     	;# 
  1569  0EBC                     	;# 
  1570  0EBD                     	;# 
  1571  0EBE                     	;# 
  1572  0EC3                     	;# 
  1573  0EC5                     	;# 
  1574  0EC6                     	;# 
  1575  0EC7                     	;# 
  1576  0EC8                     	;# 
  1577  0EC9                     	;# 
  1578  0ECA                     	;# 
  1579  0ECB                     	;# 
  1580  0ECC                     	;# 
  1581  0F10                     	;# 
  1582  0F11                     	;# 
  1583  0F12                     	;# 
  1584  0F13                     	;# 
  1585  0F14                     	;# 
  1586  0F15                     	;# 
  1587  0F16                     	;# 
  1588  0F17                     	;# 
  1589  0F18                     	;# 
  1590  0F19                     	;# 
  1591  0F1A                     	;# 
  1592  0F1B                     	;# 
  1593  0F1C                     	;# 
  1594  0F1D                     	;# 
  1595  0F1E                     	;# 
  1596  0F1F                     	;# 
  1597  0F20                     	;# 
  1598  0F21                     	;# 
  1599  0F22                     	;# 
  1600  0F23                     	;# 
  1601  0F24                     	;# 
  1602  0F25                     	;# 
  1603  0F26                     	;# 
  1604  0F27                     	;# 
  1605  0F38                     	;# 
  1606  0F39                     	;# 
  1607  0F3A                     	;# 
  1608  0F3B                     	;# 
  1609  0F3C                     	;# 
  1610  0F3D                     	;# 
  1611  0F3E                     	;# 
  1612  0F3F                     	;# 
  1613  0F40                     	;# 
  1614  0F41                     	;# 
  1615  0F43                     	;# 
  1616  0F44                     	;# 
  1617  0F45                     	;# 
  1618  0F46                     	;# 
  1619  0F47                     	;# 
  1620  0F48                     	;# 
  1621  0F49                     	;# 
  1622  0F4A                     	;# 
  1623  0F4B                     	;# 
  1624  0F4C                     	;# 
  1625  0F4E                     	;# 
  1626  0F4F                     	;# 
  1627  0F50                     	;# 
  1628  0F51                     	;# 
  1629  0F52                     	;# 
  1630  0F53                     	;# 
  1631  0F54                     	;# 
  1632  0F55                     	;# 
  1633  0F56                     	;# 
  1634  0F57                     	;# 
  1635  0F65                     	;# 
  1636  0F68                     	;# 
  1637  0F69                     	;# 
  1638  0F6A                     	;# 
  1639  0F6B                     	;# 
  1640  0FE4                     	;# 
  1641  0FE5                     	;# 
  1642  0FE6                     	;# 
  1643  0FE7                     	;# 
  1644  0FE8                     	;# 
  1645  0FE9                     	;# 
  1646  0FEA                     	;# 
  1647  0FEB                     	;# 
  1648  0FED                     	;# 
  1649  0FEE                     	;# 
  1650  0FEF                     	;# 
  1651  0000                     	;# 
  1652  0001                     	;# 
  1653  0002                     	;# 
  1654  0003                     	;# 
  1655  0004                     	;# 
  1656  0005                     	;# 
  1657  0006                     	;# 
  1658  0007                     	;# 
  1659  0008                     	;# 
  1660  0009                     	;# 
  1661  000A                     	;# 
  1662  000B                     	;# 
  1663  000C                     	;# 
  1664  000D                     	;# 
  1665  000E                     	;# 
  1666  0010                     	;# 
  1667  0011                     	;# 
  1668  0012                     	;# 
  1669  0013                     	;# 
  1670  0016                     	;# 
  1671  0017                     	;# 
  1672  0018                     	;# 
  1673  001C                     	;# 
  1674  001C                     	;# 
  1675  001D                     	;# 
  1676  001D                     	;# 
  1677  001E                     	;# 
  1678  001F                     	;# 
  1679  008C                     	;# 
  1680  008C                     	;# 
  1681  008D                     	;# 
  1682  008E                     	;# 
  1683  008E                     	;# 
  1684  008F                     	;# 
  1685  0090                     	;# 
  1686  0090                     	;# 
  1687  0091                     	;# 
  1688  0093                     	;# 
  1689  0094                     	;# 
  1690  0095                     	;# 
  1691  0096                     	;# 
  1692  0097                     	;# 
  1693  0098                     	;# 
  1694  0099                     	;# 
  1695  009A                     	;# 
  1696  009B                     	;# 
  1697  009C                     	;# 
  1698  009D                     	;# 
  1699  009E                     	;# 
  1700  010C                     	;# 
  1701  010D                     	;# 
  1702  010E                     	;# 
  1703  010E                     	;# 
  1704  010F                     	;# 
  1705  0110                     	;# 
  1706  0110                     	;# 
  1707  0111                     	;# 
  1708  0112                     	;# 
  1709  0112                     	;# 
  1710  0113                     	;# 
  1711  0114                     	;# 
  1712  0114                     	;# 
  1713  0115                     	;# 
  1714  0116                     	;# 
  1715  0116                     	;# 
  1716  0117                     	;# 
  1717  0119                     	;# 
  1718  0119                     	;# 
  1719  0119                     	;# 
  1720  011A                     	;# 
  1721  011A                     	;# 
  1722  011A                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011B                     	;# 
  1726  011B                     	;# 
  1727  011B                     	;# 
  1728  011C                     	;# 
  1729  011C                     	;# 
  1730  011C                     	;# 
  1731  011D                     	;# 
  1732  011D                     	;# 
  1733  011D                     	;# 
  1734  011E                     	;# 
  1735  011E                     	;# 
  1736  011E                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  011F                     	;# 
  1740  011F                     	;# 
  1741  011F                     	;# 
  1742  018C                     	;# 
  1743  018D                     	;# 
  1744  018E                     	;# 
  1745  018F                     	;# 
  1746  0190                     	;# 
  1747  0191                     	;# 
  1748  0192                     	;# 
  1749  0196                     	;# 
  1750  0197                     	;# 
  1751  0198                     	;# 
  1752  0199                     	;# 
  1753  019A                     	;# 
  1754  019B                     	;# 
  1755  019C                     	;# 
  1756  020C                     	;# 
  1757  020C                     	;# 
  1758  020D                     	;# 
  1759  020E                     	;# 
  1760  020F                     	;# 
  1761  020F                     	;# 
  1762  0210                     	;# 
  1763  0210                     	;# 
  1764  0211                     	;# 
  1765  0211                     	;# 
  1766  0212                     	;# 
  1767  0212                     	;# 
  1768  0213                     	;# 
  1769  0214                     	;# 
  1770  0215                     	;# 
  1771  0215                     	;# 
  1772  0216                     	;# 
  1773  0216                     	;# 
  1774  0217                     	;# 
  1775  0217                     	;# 
  1776  0218                     	;# 
  1777  0218                     	;# 
  1778  0219                     	;# 
  1779  021A                     	;# 
  1780  021B                     	;# 
  1781  021B                     	;# 
  1782  021C                     	;# 
  1783  021C                     	;# 
  1784  021D                     	;# 
  1785  021D                     	;# 
  1786  021E                     	;# 
  1787  021F                     	;# 
  1788  028C                     	;# 
  1789  028C                     	;# 
  1790  028D                     	;# 
  1791  028D                     	;# 
  1792  028E                     	;# 
  1793  028F                     	;# 
  1794  0290                     	;# 
  1795  0290                     	;# 
  1796  0291                     	;# 
  1797  0292                     	;# 
  1798  0292                     	;# 
  1799  0293                     	;# 
  1800  0293                     	;# 
  1801  0294                     	;# 
  1802  0295                     	;# 
  1803  0296                     	;# 
  1804  0296                     	;# 
  1805  0297                     	;# 
  1806  0298                     	;# 
  1807  0298                     	;# 
  1808  0299                     	;# 
  1809  0299                     	;# 
  1810  029A                     	;# 
  1811  029B                     	;# 
  1812  029C                     	;# 
  1813  029C                     	;# 
  1814  029D                     	;# 
  1815  030C                     	;# 
  1816  030C                     	;# 
  1817  030D                     	;# 
  1818  030E                     	;# 
  1819  030F                     	;# 
  1820  0310                     	;# 
  1821  0310                     	;# 
  1822  0311                     	;# 
  1823  0312                     	;# 
  1824  0313                     	;# 
  1825  0314                     	;# 
  1826  0314                     	;# 
  1827  0315                     	;# 
  1828  0316                     	;# 
  1829  0317                     	;# 
  1830  0318                     	;# 
  1831  0318                     	;# 
  1832  0319                     	;# 
  1833  031A                     	;# 
  1834  031B                     	;# 
  1835  031C                     	;# 
  1836  031C                     	;# 
  1837  031D                     	;# 
  1838  031E                     	;# 
  1839  031F                     	;# 
  1840  038C                     	;# 
  1841  038D                     	;# 
  1842  038E                     	;# 
  1843  0390                     	;# 
  1844  0391                     	;# 
  1845  0392                     	;# 
  1846  040C                     	;# 
  1847  040D                     	;# 
  1848  040E                     	;# 
  1849  040F                     	;# 
  1850  0410                     	;# 
  1851  0411                     	;# 
  1852  0416                     	;# 
  1853  0416                     	;# 
  1854  0417                     	;# 
  1855  0418                     	;# 
  1856  0418                     	;# 
  1857  0419                     	;# 
  1858  041A                     	;# 
  1859  041A                     	;# 
  1860  041B                     	;# 
  1861  041C                     	;# 
  1862  041C                     	;# 
  1863  041D                     	;# 
  1864  041E                     	;# 
  1865  041F                     	;# 
  1866  048C                     	;# 
  1867  048C                     	;# 
  1868  048D                     	;# 
  1869  048E                     	;# 
  1870  048F                     	;# 
  1871  048F                     	;# 
  1872  0490                     	;# 
  1873  0491                     	;# 
  1874  0492                     	;# 
  1875  0492                     	;# 
  1876  0493                     	;# 
  1877  0494                     	;# 
  1878  0495                     	;# 
  1879  0495                     	;# 
  1880  0496                     	;# 
  1881  0497                     	;# 
  1882  0498                     	;# 
  1883  0499                     	;# 
  1884  049A                     	;# 
  1885  049B                     	;# 
  1886  049C                     	;# 
  1887  049D                     	;# 
  1888  050C                     	;# 
  1889  050C                     	;# 
  1890  050D                     	;# 
  1891  050E                     	;# 
  1892  050F                     	;# 
  1893  050F                     	;# 
  1894  0510                     	;# 
  1895  0511                     	;# 
  1896  0512                     	;# 
  1897  0512                     	;# 
  1898  0513                     	;# 
  1899  0514                     	;# 
  1900  0515                     	;# 
  1901  0515                     	;# 
  1902  0516                     	;# 
  1903  0517                     	;# 
  1904  0518                     	;# 
  1905  0519                     	;# 
  1906  051A                     	;# 
  1907  051B                     	;# 
  1908  051C                     	;# 
  1909  051D                     	;# 
  1910  058C                     	;# 
  1911  058C                     	;# 
  1912  058D                     	;# 
  1913  058E                     	;# 
  1914  058F                     	;# 
  1915  058F                     	;# 
  1916  0590                     	;# 
  1917  0591                     	;# 
  1918  0592                     	;# 
  1919  0593                     	;# 
  1920  060C                     	;# 
  1921  060D                     	;# 
  1922  060E                     	;# 
  1923  060F                     	;# 
  1924  0610                     	;# 
  1925  0611                     	;# 
  1926  0612                     	;# 
  1927  0613                     	;# 
  1928  0614                     	;# 
  1929  0616                     	;# 
  1930  0617                     	;# 
  1931  0618                     	;# 
  1932  0619                     	;# 
  1933  061A                     	;# 
  1934  061B                     	;# 
  1935  061C                     	;# 
  1936  061D                     	;# 
  1937  061E                     	;# 
  1938  068C                     	;# 
  1939  068D                     	;# 
  1940  068E                     	;# 
  1941  068F                     	;# 
  1942  0690                     	;# 
  1943  0691                     	;# 
  1944  0692                     	;# 
  1945  0693                     	;# 
  1946  0694                     	;# 
  1947  070C                     	;# 
  1948  070D                     	;# 
  1949  070E                     	;# 
  1950  070F                     	;# 
  1951  0710                     	;# 
  1952  0711                     	;# 
  1953  0712                     	;# 
  1954  0713                     	;# 
  1955  0714                     	;# 
  1956  0716                     	;# 
  1957  0717                     	;# 
  1958  0718                     	;# 
  1959  0719                     	;# 
  1960  071A                     	;# 
  1961  071B                     	;# 
  1962  071C                     	;# 
  1963  071D                     	;# 
  1964  071E                     	;# 
  1965  0796                     	;# 
  1966  0797                     	;# 
  1967  0798                     	;# 
  1968  0799                     	;# 
  1969  079A                     	;# 
  1970  079B                     	;# 
  1971  080C                     	;# 
  1972  080D                     	;# 
  1973  080E                     	;# 
  1974  080F                     	;# 
  1975  0810                     	;# 
  1976  0811                     	;# 
  1977  0812                     	;# 
  1978  0813                     	;# 
  1979  0814                     	;# 
  1980  081A                     	;# 
  1981  081B                     	;# 
  1982  081C                     	;# 
  1983  081D                     	;# 
  1984  081E                     	;# 
  1985  081F                     	;# 
  1986  088C                     	;# 
  1987  088D                     	;# 
  1988  088E                     	;# 
  1989  088F                     	;# 
  1990  0890                     	;# 
  1991  0891                     	;# 
  1992  0892                     	;# 
  1993  0893                     	;# 
  1994  0895                     	;# 
  1995  0896                     	;# 
  1996  0897                     	;# 
  1997  0898                     	;# 
  1998  0899                     	;# 
  1999  089A                     	;# 
  2000  089B                     	;# 
  2001  090C                     	;# 
  2002  090E                     	;# 
  2003  090F                     	;# 
  2004  091F                     	;# 
  2005  091F                     	;# 
  2006  098F                     	;# 
  2007  098F                     	;# 
  2008  0990                     	;# 
  2009  0991                     	;# 
  2010  0992                     	;# 
  2011  0993                     	;# 
  2012  0994                     	;# 
  2013  0995                     	;# 
  2014  0996                     	;# 
  2015  0997                     	;# 
  2016  0E0F                     	;# 
  2017  0E10                     	;# 
  2018  0E11                     	;# 
  2019  0E12                     	;# 
  2020  0E13                     	;# 
  2021  0E14                     	;# 
  2022  0E15                     	;# 
  2023  0E16                     	;# 
  2024  0E17                     	;# 
  2025  0E18                     	;# 
  2026  0E19                     	;# 
  2027  0E1A                     	;# 
  2028  0E1B                     	;# 
  2029  0E1C                     	;# 
  2030  0E1D                     	;# 
  2031  0E1E                     	;# 
  2032  0E1F                     	;# 
  2033  0E20                     	;# 
  2034  0E21                     	;# 
  2035  0E22                     	;# 
  2036  0E23                     	;# 
  2037  0E24                     	;# 
  2038  0E25                     	;# 
  2039  0E26                     	;# 
  2040  0E27                     	;# 
  2041  0E28                     	;# 
  2042  0E29                     	;# 
  2043  0E2A                     	;# 
  2044  0E2B                     	;# 
  2045  0E2C                     	;# 
  2046  0E2D                     	;# 
  2047  0E2E                     	;# 
  2048  0E2F                     	;# 
  2049  0E30                     	;# 
  2050  0E31                     	;# 
  2051  0E32                     	;# 
  2052  0E33                     	;# 
  2053  0E34                     	;# 
  2054  0E35                     	;# 
  2055  0E36                     	;# 
  2056  0E37                     	;# 
  2057  0E8F                     	;# 
  2058  0E90                     	;# 
  2059  0E91                     	;# 
  2060  0E92                     	;# 
  2061  0E93                     	;# 
  2062  0E94                     	;# 
  2063  0E95                     	;# 
  2064  0E96                     	;# 
  2065  0E97                     	;# 
  2066  0E9C                     	;# 
  2067  0E9D                     	;# 
  2068  0E9E                     	;# 
  2069  0EA1                     	;# 
  2070  0EA2                     	;# 
  2071  0EA3                     	;# 
  2072  0EA4                     	;# 
  2073  0EA5                     	;# 
  2074  0EA9                     	;# 
  2075  0EAA                     	;# 
  2076  0EAB                     	;# 
  2077  0EAC                     	;# 
  2078  0EB1                     	;# 
  2079  0EB2                     	;# 
  2080  0EB3                     	;# 
  2081  0EB8                     	;# 
  2082  0EB9                     	;# 
  2083  0EBA                     	;# 
  2084  0EBB                     	;# 
  2085  0EBC                     	;# 
  2086  0EBD                     	;# 
  2087  0EBE                     	;# 
  2088  0EC3                     	;# 
  2089  0EC5                     	;# 
  2090  0EC6                     	;# 
  2091  0EC7                     	;# 
  2092  0EC8                     	;# 
  2093  0EC9                     	;# 
  2094  0ECA                     	;# 
  2095  0ECB                     	;# 
  2096  0ECC                     	;# 
  2097  0F10                     	;# 
  2098  0F11                     	;# 
  2099  0F12                     	;# 
  2100  0F13                     	;# 
  2101  0F14                     	;# 
  2102  0F15                     	;# 
  2103  0F16                     	;# 
  2104  0F17                     	;# 
  2105  0F18                     	;# 
  2106  0F19                     	;# 
  2107  0F1A                     	;# 
  2108  0F1B                     	;# 
  2109  0F1C                     	;# 
  2110  0F1D                     	;# 
  2111  0F1E                     	;# 
  2112  0F1F                     	;# 
  2113  0F20                     	;# 
  2114  0F21                     	;# 
  2115  0F22                     	;# 
  2116  0F23                     	;# 
  2117  0F24                     	;# 
  2118  0F25                     	;# 
  2119  0F26                     	;# 
  2120  0F27                     	;# 
  2121  0F38                     	;# 
  2122  0F39                     	;# 
  2123  0F3A                     	;# 
  2124  0F3B                     	;# 
  2125  0F3C                     	;# 
  2126  0F3D                     	;# 
  2127  0F3E                     	;# 
  2128  0F3F                     	;# 
  2129  0F40                     	;# 
  2130  0F41                     	;# 
  2131  0F43                     	;# 
  2132  0F44                     	;# 
  2133  0F45                     	;# 
  2134  0F46                     	;# 
  2135  0F47                     	;# 
  2136  0F48                     	;# 
  2137  0F49                     	;# 
  2138  0F4A                     	;# 
  2139  0F4B                     	;# 
  2140  0F4C                     	;# 
  2141  0F4E                     	;# 
  2142  0F4F                     	;# 
  2143  0F50                     	;# 
  2144  0F51                     	;# 
  2145  0F52                     	;# 
  2146  0F53                     	;# 
  2147  0F54                     	;# 
  2148  0F55                     	;# 
  2149  0F56                     	;# 
  2150  0F57                     	;# 
  2151  0F65                     	;# 
  2152  0F68                     	;# 
  2153  0F69                     	;# 
  2154  0F6A                     	;# 
  2155  0F6B                     	;# 
  2156  0FE4                     	;# 
  2157  0FE5                     	;# 
  2158  0FE6                     	;# 
  2159  0FE7                     	;# 
  2160  0FE8                     	;# 
  2161  0FE9                     	;# 
  2162  0FEA                     	;# 
  2163  0FEB                     	;# 
  2164  0FED                     	;# 
  2165  0FEE                     	;# 
  2166  0FEF                     	;# 
  2167  0000                     	;# 
  2168  0001                     	;# 
  2169  0002                     	;# 
  2170  0003                     	;# 
  2171  0004                     	;# 
  2172  0005                     	;# 
  2173  0006                     	;# 
  2174  0007                     	;# 
  2175  0008                     	;# 
  2176  0009                     	;# 
  2177  000A                     	;# 
  2178  000B                     	;# 
  2179  000C                     	;# 
  2180  000D                     	;# 
  2181  000E                     	;# 
  2182  0010                     	;# 
  2183  0011                     	;# 
  2184  0012                     	;# 
  2185  0013                     	;# 
  2186  0016                     	;# 
  2187  0017                     	;# 
  2188  0018                     	;# 
  2189  001C                     	;# 
  2190  001C                     	;# 
  2191  001D                     	;# 
  2192  001D                     	;# 
  2193  001E                     	;# 
  2194  001F                     	;# 
  2195  008C                     	;# 
  2196  008C                     	;# 
  2197  008D                     	;# 
  2198  008E                     	;# 
  2199  008E                     	;# 
  2200  008F                     	;# 
  2201  0090                     	;# 
  2202  0090                     	;# 
  2203  0091                     	;# 
  2204  0093                     	;# 
  2205  0094                     	;# 
  2206  0095                     	;# 
  2207  0096                     	;# 
  2208  0097                     	;# 
  2209  0098                     	;# 
  2210  0099                     	;# 
  2211  009A                     	;# 
  2212  009B                     	;# 
  2213  009C                     	;# 
  2214  009D                     	;# 
  2215  009E                     	;# 
  2216  010C                     	;# 
  2217  010D                     	;# 
  2218  010E                     	;# 
  2219  010E                     	;# 
  2220  010F                     	;# 
  2221  0110                     	;# 
  2222  0110                     	;# 
  2223  0111                     	;# 
  2224  0112                     	;# 
  2225  0112                     	;# 
  2226  0113                     	;# 
  2227  0114                     	;# 
  2228  0114                     	;# 
  2229  0115                     	;# 
  2230  0116                     	;# 
  2231  0116                     	;# 
  2232  0117                     	;# 
  2233  0119                     	;# 
  2234  0119                     	;# 
  2235  0119                     	;# 
  2236  011A                     	;# 
  2237  011A                     	;# 
  2238  011A                     	;# 
  2239  011B                     	;# 
  2240  011B                     	;# 
  2241  011B                     	;# 
  2242  011B                     	;# 
  2243  011B                     	;# 
  2244  011C                     	;# 
  2245  011C                     	;# 
  2246  011C                     	;# 
  2247  011D                     	;# 
  2248  011D                     	;# 
  2249  011D                     	;# 
  2250  011E                     	;# 
  2251  011E                     	;# 
  2252  011E                     	;# 
  2253  011F                     	;# 
  2254  011F                     	;# 
  2255  011F                     	;# 
  2256  011F                     	;# 
  2257  011F                     	;# 
  2258  018C                     	;# 
  2259  018D                     	;# 
  2260  018E                     	;# 
  2261  018F                     	;# 
  2262  0190                     	;# 
  2263  0191                     	;# 
  2264  0192                     	;# 
  2265  0196                     	;# 
  2266  0197                     	;# 
  2267  0198                     	;# 
  2268  0199                     	;# 
  2269  019A                     	;# 
  2270  019B                     	;# 
  2271  019C                     	;# 
  2272  020C                     	;# 
  2273  020C                     	;# 
  2274  020D                     	;# 
  2275  020E                     	;# 
  2276  020F                     	;# 
  2277  020F                     	;# 
  2278  0210                     	;# 
  2279  0210                     	;# 
  2280  0211                     	;# 
  2281  0211                     	;# 
  2282  0212                     	;# 
  2283  0212                     	;# 
  2284  0213                     	;# 
  2285  0214                     	;# 
  2286  0215                     	;# 
  2287  0215                     	;# 
  2288  0216                     	;# 
  2289  0216                     	;# 
  2290  0217                     	;# 
  2291  0217                     	;# 
  2292  0218                     	;# 
  2293  0218                     	;# 
  2294  0219                     	;# 
  2295  021A                     	;# 
  2296  021B                     	;# 
  2297  021B                     	;# 
  2298  021C                     	;# 
  2299  021C                     	;# 
  2300  021D                     	;# 
  2301  021D                     	;# 
  2302  021E                     	;# 
  2303  021F                     	;# 
  2304  028C                     	;# 
  2305  028C                     	;# 
  2306  028D                     	;# 
  2307  028D                     	;# 
  2308  028E                     	;# 
  2309  028F                     	;# 
  2310  0290                     	;# 
  2311  0290                     	;# 
  2312  0291                     	;# 
  2313  0292                     	;# 
  2314  0292                     	;# 
  2315  0293                     	;# 
  2316  0293                     	;# 
  2317  0294                     	;# 
  2318  0295                     	;# 
  2319  0296                     	;# 
  2320  0296                     	;# 
  2321  0297                     	;# 
  2322  0298                     	;# 
  2323  0298                     	;# 
  2324  0299                     	;# 
  2325  0299                     	;# 
  2326  029A                     	;# 
  2327  029B                     	;# 
  2328  029C                     	;# 
  2329  029C                     	;# 
  2330  029D                     	;# 
  2331  030C                     	;# 
  2332  030C                     	;# 
  2333  030D                     	;# 
  2334  030E                     	;# 
  2335  030F                     	;# 
  2336  0310                     	;# 
  2337  0310                     	;# 
  2338  0311                     	;# 
  2339  0312                     	;# 
  2340  0313                     	;# 
  2341  0314                     	;# 
  2342  0314                     	;# 
  2343  0315                     	;# 
  2344  0316                     	;# 
  2345  0317                     	;# 
  2346  0318                     	;# 
  2347  0318                     	;# 
  2348  0319                     	;# 
  2349  031A                     	;# 
  2350  031B                     	;# 
  2351  031C                     	;# 
  2352  031C                     	;# 
  2353  031D                     	;# 
  2354  031E                     	;# 
  2355  031F                     	;# 
  2356  038C                     	;# 
  2357  038D                     	;# 
  2358  038E                     	;# 
  2359  0390                     	;# 
  2360  0391                     	;# 
  2361  0392                     	;# 
  2362  040C                     	;# 
  2363  040D                     	;# 
  2364  040E                     	;# 
  2365  040F                     	;# 
  2366  0410                     	;# 
  2367  0411                     	;# 
  2368  0416                     	;# 
  2369  0416                     	;# 
  2370  0417                     	;# 
  2371  0418                     	;# 
  2372  0418                     	;# 
  2373  0419                     	;# 
  2374  041A                     	;# 
  2375  041A                     	;# 
  2376  041B                     	;# 
  2377  041C                     	;# 
  2378  041C                     	;# 
  2379  041D                     	;# 
  2380  041E                     	;# 
  2381  041F                     	;# 
  2382  048C                     	;# 
  2383  048C                     	;# 
  2384  048D                     	;# 
  2385  048E                     	;# 
  2386  048F                     	;# 
  2387  048F                     	;# 
  2388  0490                     	;# 
  2389  0491                     	;# 
  2390  0492                     	;# 
  2391  0492                     	;# 
  2392  0493                     	;# 
  2393  0494                     	;# 
  2394  0495                     	;# 
  2395  0495                     	;# 
  2396  0496                     	;# 
  2397  0497                     	;# 
  2398  0498                     	;# 
  2399  0499                     	;# 
  2400  049A                     	;# 
  2401  049B                     	;# 
  2402  049C                     	;# 
  2403  049D                     	;# 
  2404  050C                     	;# 
  2405  050C                     	;# 
  2406  050D                     	;# 
  2407  050E                     	;# 
  2408  050F                     	;# 
  2409  050F                     	;# 
  2410  0510                     	;# 
  2411  0511                     	;# 
  2412  0512                     	;# 
  2413  0512                     	;# 
  2414  0513                     	;# 
  2415  0514                     	;# 
  2416  0515                     	;# 
  2417  0515                     	;# 
  2418  0516                     	;# 
  2419  0517                     	;# 
  2420  0518                     	;# 
  2421  0519                     	;# 
  2422  051A                     	;# 
  2423  051B                     	;# 
  2424  051C                     	;# 
  2425  051D                     	;# 
  2426  058C                     	;# 
  2427  058C                     	;# 
  2428  058D                     	;# 
  2429  058E                     	;# 
  2430  058F                     	;# 
  2431  058F                     	;# 
  2432  0590                     	;# 
  2433  0591                     	;# 
  2434  0592                     	;# 
  2435  0593                     	;# 
  2436  060C                     	;# 
  2437  060D                     	;# 
  2438  060E                     	;# 
  2439  060F                     	;# 
  2440  0610                     	;# 
  2441  0611                     	;# 
  2442  0612                     	;# 
  2443  0613                     	;# 
  2444  0614                     	;# 
  2445  0616                     	;# 
  2446  0617                     	;# 
  2447  0618                     	;# 
  2448  0619                     	;# 
  2449  061A                     	;# 
  2450  061B                     	;# 
  2451  061C                     	;# 
  2452  061D                     	;# 
  2453  061E                     	;# 
  2454  068C                     	;# 
  2455  068D                     	;# 
  2456  068E                     	;# 
  2457  068F                     	;# 
  2458  0690                     	;# 
  2459  0691                     	;# 
  2460  0692                     	;# 
  2461  0693                     	;# 
  2462  0694                     	;# 
  2463  070C                     	;# 
  2464  070D                     	;# 
  2465  070E                     	;# 
  2466  070F                     	;# 
  2467  0710                     	;# 
  2468  0711                     	;# 
  2469  0712                     	;# 
  2470  0713                     	;# 
  2471  0714                     	;# 
  2472  0716                     	;# 
  2473  0717                     	;# 
  2474  0718                     	;# 
  2475  0719                     	;# 
  2476  071A                     	;# 
  2477  071B                     	;# 
  2478  071C                     	;# 
  2479  071D                     	;# 
  2480  071E                     	;# 
  2481  0796                     	;# 
  2482  0797                     	;# 
  2483  0798                     	;# 
  2484  0799                     	;# 
  2485  079A                     	;# 
  2486  079B                     	;# 
  2487  080C                     	;# 
  2488  080D                     	;# 
  2489  080E                     	;# 
  2490  080F                     	;# 
  2491  0810                     	;# 
  2492  0811                     	;# 
  2493  0812                     	;# 
  2494  0813                     	;# 
  2495  0814                     	;# 
  2496  081A                     	;# 
  2497  081B                     	;# 
  2498  081C                     	;# 
  2499  081D                     	;# 
  2500  081E                     	;# 
  2501  081F                     	;# 
  2502  088C                     	;# 
  2503  088D                     	;# 
  2504  088E                     	;# 
  2505  088F                     	;# 
  2506  0890                     	;# 
  2507  0891                     	;# 
  2508  0892                     	;# 
  2509  0893                     	;# 
  2510  0895                     	;# 
  2511  0896                     	;# 
  2512  0897                     	;# 
  2513  0898                     	;# 
  2514  0899                     	;# 
  2515  089A                     	;# 
  2516  089B                     	;# 
  2517  090C                     	;# 
  2518  090E                     	;# 
  2519  090F                     	;# 
  2520  091F                     	;# 
  2521  091F                     	;# 
  2522  098F                     	;# 
  2523  098F                     	;# 
  2524  0990                     	;# 
  2525  0991                     	;# 
  2526  0992                     	;# 
  2527  0993                     	;# 
  2528  0994                     	;# 
  2529  0995                     	;# 
  2530  0996                     	;# 
  2531  0997                     	;# 
  2532  0E0F                     	;# 
  2533  0E10                     	;# 
  2534  0E11                     	;# 
  2535  0E12                     	;# 
  2536  0E13                     	;# 
  2537  0E14                     	;# 
  2538  0E15                     	;# 
  2539  0E16                     	;# 
  2540  0E17                     	;# 
  2541  0E18                     	;# 
  2542  0E19                     	;# 
  2543  0E1A                     	;# 
  2544  0E1B                     	;# 
  2545  0E1C                     	;# 
  2546  0E1D                     	;# 
  2547  0E1E                     	;# 
  2548  0E1F                     	;# 
  2549  0E20                     	;# 
  2550  0E21                     	;# 
  2551  0E22                     	;# 
  2552  0E23                     	;# 
  2553  0E24                     	;# 
  2554  0E25                     	;# 
  2555  0E26                     	;# 
  2556  0E27                     	;# 
  2557  0E28                     	;# 
  2558  0E29                     	;# 
  2559  0E2A                     	;# 
  2560  0E2B                     	;# 
  2561  0E2C                     	;# 
  2562  0E2D                     	;# 
  2563  0E2E                     	;# 
  2564  0E2F                     	;# 
  2565  0E30                     	;# 
  2566  0E31                     	;# 
  2567  0E32                     	;# 
  2568  0E33                     	;# 
  2569  0E34                     	;# 
  2570  0E35                     	;# 
  2571  0E36                     	;# 
  2572  0E37                     	;# 
  2573  0E8F                     	;# 
  2574  0E90                     	;# 
  2575  0E91                     	;# 
  2576  0E92                     	;# 
  2577  0E93                     	;# 
  2578  0E94                     	;# 
  2579  0E95                     	;# 
  2580  0E96                     	;# 
  2581  0E97                     	;# 
  2582  0E9C                     	;# 
  2583  0E9D                     	;# 
  2584  0E9E                     	;# 
  2585  0EA1                     	;# 
  2586  0EA2                     	;# 
  2587  0EA3                     	;# 
  2588  0EA4                     	;# 
  2589  0EA5                     	;# 
  2590  0EA9                     	;# 
  2591  0EAA                     	;# 
  2592  0EAB                     	;# 
  2593  0EAC                     	;# 
  2594  0EB1                     	;# 
  2595  0EB2                     	;# 
  2596  0EB3                     	;# 
  2597  0EB8                     	;# 
  2598  0EB9                     	;# 
  2599  0EBA                     	;# 
  2600  0EBB                     	;# 
  2601  0EBC                     	;# 
  2602  0EBD                     	;# 
  2603  0EBE                     	;# 
  2604  0EC3                     	;# 
  2605  0EC5                     	;# 
  2606  0EC6                     	;# 
  2607  0EC7                     	;# 
  2608  0EC8                     	;# 
  2609  0EC9                     	;# 
  2610  0ECA                     	;# 
  2611  0ECB                     	;# 
  2612  0ECC                     	;# 
  2613  0F10                     	;# 
  2614  0F11                     	;# 
  2615  0F12                     	;# 
  2616  0F13                     	;# 
  2617  0F14                     	;# 
  2618  0F15                     	;# 
  2619  0F16                     	;# 
  2620  0F17                     	;# 
  2621  0F18                     	;# 
  2622  0F19                     	;# 
  2623  0F1A                     	;# 
  2624  0F1B                     	;# 
  2625  0F1C                     	;# 
  2626  0F1D                     	;# 
  2627  0F1E                     	;# 
  2628  0F1F                     	;# 
  2629  0F20                     	;# 
  2630  0F21                     	;# 
  2631  0F22                     	;# 
  2632  0F23                     	;# 
  2633  0F24                     	;# 
  2634  0F25                     	;# 
  2635  0F26                     	;# 
  2636  0F27                     	;# 
  2637  0F38                     	;# 
  2638  0F39                     	;# 
  2639  0F3A                     	;# 
  2640  0F3B                     	;# 
  2641  0F3C                     	;# 
  2642  0F3D                     	;# 
  2643  0F3E                     	;# 
  2644  0F3F                     	;# 
  2645  0F40                     	;# 
  2646  0F41                     	;# 
  2647  0F43                     	;# 
  2648  0F44                     	;# 
  2649  0F45                     	;# 
  2650  0F46                     	;# 
  2651  0F47                     	;# 
  2652  0F48                     	;# 
  2653  0F49                     	;# 
  2654  0F4A                     	;# 
  2655  0F4B                     	;# 
  2656  0F4C                     	;# 
  2657  0F4E                     	;# 
  2658  0F4F                     	;# 
  2659  0F50                     	;# 
  2660  0F51                     	;# 
  2661  0F52                     	;# 
  2662  0F53                     	;# 
  2663  0F54                     	;# 
  2664  0F55                     	;# 
  2665  0F56                     	;# 
  2666  0F57                     	;# 
  2667  0F65                     	;# 
  2668  0F68                     	;# 
  2669  0F69                     	;# 
  2670  0F6A                     	;# 
  2671  0F6B                     	;# 
  2672  0FE4                     	;# 
  2673  0FE5                     	;# 
  2674  0FE6                     	;# 
  2675  0FE7                     	;# 
  2676  0FE8                     	;# 
  2677  0FE9                     	;# 
  2678  0FEA                     	;# 
  2679  0FEB                     	;# 
  2680  0FED                     	;# 
  2681  0FEE                     	;# 
  2682  0FEF                     	;# 
  2683  0000                     	;# 
  2684  0001                     	;# 
  2685  0002                     	;# 
  2686  0003                     	;# 
  2687  0004                     	;# 
  2688  0005                     	;# 
  2689  0006                     	;# 
  2690  0007                     	;# 
  2691  0008                     	;# 
  2692  0009                     	;# 
  2693  000A                     	;# 
  2694  000B                     	;# 
  2695  000C                     	;# 
  2696  000D                     	;# 
  2697  000E                     	;# 
  2698  0010                     	;# 
  2699  0011                     	;# 
  2700  0012                     	;# 
  2701  0013                     	;# 
  2702  0016                     	;# 
  2703  0017                     	;# 
  2704  0018                     	;# 
  2705  001C                     	;# 
  2706  001C                     	;# 
  2707  001D                     	;# 
  2708  001D                     	;# 
  2709  001E                     	;# 
  2710  001F                     	;# 
  2711  008C                     	;# 
  2712  008C                     	;# 
  2713  008D                     	;# 
  2714  008E                     	;# 
  2715  008E                     	;# 
  2716  008F                     	;# 
  2717  0090                     	;# 
  2718  0090                     	;# 
  2719  0091                     	;# 
  2720  0093                     	;# 
  2721  0094                     	;# 
  2722  0095                     	;# 
  2723  0096                     	;# 
  2724  0097                     	;# 
  2725  0098                     	;# 
  2726  0099                     	;# 
  2727  009A                     	;# 
  2728  009B                     	;# 
  2729  009C                     	;# 
  2730  009D                     	;# 
  2731  009E                     	;# 
  2732  010C                     	;# 
  2733  010D                     	;# 
  2734  010E                     	;# 
  2735  010E                     	;# 
  2736  010F                     	;# 
  2737  0110                     	;# 
  2738  0110                     	;# 
  2739  0111                     	;# 
  2740  0112                     	;# 
  2741  0112                     	;# 
  2742  0113                     	;# 
  2743  0114                     	;# 
  2744  0114                     	;# 
  2745  0115                     	;# 
  2746  0116                     	;# 
  2747  0116                     	;# 
  2748  0117                     	;# 
  2749  0119                     	;# 
  2750  0119                     	;# 
  2751  0119                     	;# 
  2752  011A                     	;# 
  2753  011A                     	;# 
  2754  011A                     	;# 
  2755  011B                     	;# 
  2756  011B                     	;# 
  2757  011B                     	;# 
  2758  011B                     	;# 
  2759  011B                     	;# 
  2760  011C                     	;# 
  2761  011C                     	;# 
  2762  011C                     	;# 
  2763  011D                     	;# 
  2764  011D                     	;# 
  2765  011D                     	;# 
  2766  011E                     	;# 
  2767  011E                     	;# 
  2768  011E                     	;# 
  2769  011F                     	;# 
  2770  011F                     	;# 
  2771  011F                     	;# 
  2772  011F                     	;# 
  2773  011F                     	;# 
  2774  018C                     	;# 
  2775  018D                     	;# 
  2776  018E                     	;# 
  2777  018F                     	;# 
  2778  0190                     	;# 
  2779  0191                     	;# 
  2780  0192                     	;# 
  2781  0196                     	;# 
  2782  0197                     	;# 
  2783  0198                     	;# 
  2784  0199                     	;# 
  2785  019A                     	;# 
  2786  019B                     	;# 
  2787  019C                     	;# 
  2788  020C                     	;# 
  2789  020C                     	;# 
  2790  020D                     	;# 
  2791  020E                     	;# 
  2792  020F                     	;# 
  2793  020F                     	;# 
  2794  0210                     	;# 
  2795  0210                     	;# 
  2796  0211                     	;# 
  2797  0211                     	;# 
  2798  0212                     	;# 
  2799  0212                     	;# 
  2800  0213                     	;# 
  2801  0214                     	;# 
  2802  0215                     	;# 
  2803  0215                     	;# 
  2804  0216                     	;# 
  2805  0216                     	;# 
  2806  0217                     	;# 
  2807  0217                     	;# 
  2808  0218                     	;# 
  2809  0218                     	;# 
  2810  0219                     	;# 
  2811  021A                     	;# 
  2812  021B                     	;# 
  2813  021B                     	;# 
  2814  021C                     	;# 
  2815  021C                     	;# 
  2816  021D                     	;# 
  2817  021D                     	;# 
  2818  021E                     	;# 
  2819  021F                     	;# 
  2820  028C                     	;# 
  2821  028C                     	;# 
  2822  028D                     	;# 
  2823  028D                     	;# 
  2824  028E                     	;# 
  2825  028F                     	;# 
  2826  0290                     	;# 
  2827  0290                     	;# 
  2828  0291                     	;# 
  2829  0292                     	;# 
  2830  0292                     	;# 
  2831  0293                     	;# 
  2832  0293                     	;# 
  2833  0294                     	;# 
  2834  0295                     	;# 
  2835  0296                     	;# 
  2836  0296                     	;# 
  2837  0297                     	;# 
  2838  0298                     	;# 
  2839  0298                     	;# 
  2840  0299                     	;# 
  2841  0299                     	;# 
  2842  029A                     	;# 
  2843  029B                     	;# 
  2844  029C                     	;# 
  2845  029C                     	;# 
  2846  029D                     	;# 
  2847  030C                     	;# 
  2848  030C                     	;# 
  2849  030D                     	;# 
  2850  030E                     	;# 
  2851  030F                     	;# 
  2852  0310                     	;# 
  2853  0310                     	;# 
  2854  0311                     	;# 
  2855  0312                     	;# 
  2856  0313                     	;# 
  2857  0314                     	;# 
  2858  0314                     	;# 
  2859  0315                     	;# 
  2860  0316                     	;# 
  2861  0317                     	;# 
  2862  0318                     	;# 
  2863  0318                     	;# 
  2864  0319                     	;# 
  2865  031A                     	;# 
  2866  031B                     	;# 
  2867  031C                     	;# 
  2868  031C                     	;# 
  2869  031D                     	;# 
  2870  031E                     	;# 
  2871  031F                     	;# 
  2872  038C                     	;# 
  2873  038D                     	;# 
  2874  038E                     	;# 
  2875  0390                     	;# 
  2876  0391                     	;# 
  2877  0392                     	;# 
  2878  040C                     	;# 
  2879  040D                     	;# 
  2880  040E                     	;# 
  2881  040F                     	;# 
  2882  0410                     	;# 
  2883  0411                     	;# 
  2884  0416                     	;# 
  2885  0416                     	;# 
  2886  0417                     	;# 
  2887  0418                     	;# 
  2888  0418                     	;# 
  2889  0419                     	;# 
  2890  041A                     	;# 
  2891  041A                     	;# 
  2892  041B                     	;# 
  2893  041C                     	;# 
  2894  041C                     	;# 
  2895  041D                     	;# 
  2896  041E                     	;# 
  2897  041F                     	;# 
  2898  048C                     	;# 
  2899  048C                     	;# 
  2900  048D                     	;# 
  2901  048E                     	;# 
  2902  048F                     	;# 
  2903  048F                     	;# 
  2904  0490                     	;# 
  2905  0491                     	;# 
  2906  0492                     	;# 
  2907  0492                     	;# 
  2908  0493                     	;# 
  2909  0494                     	;# 
  2910  0495                     	;# 
  2911  0495                     	;# 
  2912  0496                     	;# 
  2913  0497                     	;# 
  2914  0498                     	;# 
  2915  0499                     	;# 
  2916  049A                     	;# 
  2917  049B                     	;# 
  2918  049C                     	;# 
  2919  049D                     	;# 
  2920  050C                     	;# 
  2921  050C                     	;# 
  2922  050D                     	;# 
  2923  050E                     	;# 
  2924  050F                     	;# 
  2925  050F                     	;# 
  2926  0510                     	;# 
  2927  0511                     	;# 
  2928  0512                     	;# 
  2929  0512                     	;# 
  2930  0513                     	;# 
  2931  0514                     	;# 
  2932  0515                     	;# 
  2933  0515                     	;# 
  2934  0516                     	;# 
  2935  0517                     	;# 
  2936  0518                     	;# 
  2937  0519                     	;# 
  2938  051A                     	;# 
  2939  051B                     	;# 
  2940  051C                     	;# 
  2941  051D                     	;# 
  2942  058C                     	;# 
  2943  058C                     	;# 
  2944  058D                     	;# 
  2945  058E                     	;# 
  2946  058F                     	;# 
  2947  058F                     	;# 
  2948  0590                     	;# 
  2949  0591                     	;# 
  2950  0592                     	;# 
  2951  0593                     	;# 
  2952  060C                     	;# 
  2953  060D                     	;# 
  2954  060E                     	;# 
  2955  060F                     	;# 
  2956  0610                     	;# 
  2957  0611                     	;# 
  2958  0612                     	;# 
  2959  0613                     	;# 
  2960  0614                     	;# 
  2961  0616                     	;# 
  2962  0617                     	;# 
  2963  0618                     	;# 
  2964  0619                     	;# 
  2965  061A                     	;# 
  2966  061B                     	;# 
  2967  061C                     	;# 
  2968  061D                     	;# 
  2969  061E                     	;# 
  2970  068C                     	;# 
  2971  068D                     	;# 
  2972  068E                     	;# 
  2973  068F                     	;# 
  2974  0690                     	;# 
  2975  0691                     	;# 
  2976  0692                     	;# 
  2977  0693                     	;# 
  2978  0694                     	;# 
  2979  070C                     	;# 
  2980  070D                     	;# 
  2981  070E                     	;# 
  2982  070F                     	;# 
  2983  0710                     	;# 
  2984  0711                     	;# 
  2985  0712                     	;# 
  2986  0713                     	;# 
  2987  0714                     	;# 
  2988  0716                     	;# 
  2989  0717                     	;# 
  2990  0718                     	;# 
  2991  0719                     	;# 
  2992  071A                     	;# 
  2993  071B                     	;# 
  2994  071C                     	;# 
  2995  071D                     	;# 
  2996  071E                     	;# 
  2997  0796                     	;# 
  2998  0797                     	;# 
  2999  0798                     	;# 
  3000  0799                     	;# 
  3001  079A                     	;# 
  3002  079B                     	;# 
  3003  080C                     	;# 
  3004  080D                     	;# 
  3005  080E                     	;# 
  3006  080F                     	;# 
  3007  0810                     	;# 
  3008  0811                     	;# 
  3009  0812                     	;# 
  3010  0813                     	;# 
  3011  0814                     	;# 
  3012  081A                     	;# 
  3013  081B                     	;# 
  3014  081C                     	;# 
  3015  081D                     	;# 
  3016  081E                     	;# 
  3017  081F                     	;# 
  3018  088C                     	;# 
  3019  088D                     	;# 
  3020  088E                     	;# 
  3021  088F                     	;# 
  3022  0890                     	;# 
  3023  0891                     	;# 
  3024  0892                     	;# 
  3025  0893                     	;# 
  3026  0895                     	;# 
  3027  0896                     	;# 
  3028  0897                     	;# 
  3029  0898                     	;# 
  3030  0899                     	;# 
  3031  089A                     	;# 
  3032  089B                     	;# 
  3033  090C                     	;# 
  3034  090E                     	;# 
  3035  090F                     	;# 
  3036  091F                     	;# 
  3037  091F                     	;# 
  3038  098F                     	;# 
  3039  098F                     	;# 
  3040  0990                     	;# 
  3041  0991                     	;# 
  3042  0992                     	;# 
  3043  0993                     	;# 
  3044  0994                     	;# 
  3045  0995                     	;# 
  3046  0996                     	;# 
  3047  0997                     	;# 
  3048  0E0F                     	;# 
  3049  0E10                     	;# 
  3050  0E11                     	;# 
  3051  0E12                     	;# 
  3052  0E13                     	;# 
  3053  0E14                     	;# 
  3054  0E15                     	;# 
  3055  0E16                     	;# 
  3056  0E17                     	;# 
  3057  0E18                     	;# 
  3058  0E19                     	;# 
  3059  0E1A                     	;# 
  3060  0E1B                     	;# 
  3061  0E1C                     	;# 
  3062  0E1D                     	;# 
  3063  0E1E                     	;# 
  3064  0E1F                     	;# 
  3065  0E20                     	;# 
  3066  0E21                     	;# 
  3067  0E22                     	;# 
  3068  0E23                     	;# 
  3069  0E24                     	;# 
  3070  0E25                     	;# 
  3071  0E26                     	;# 
  3072  0E27                     	;# 
  3073  0E28                     	;# 
  3074  0E29                     	;# 
  3075  0E2A                     	;# 
  3076  0E2B                     	;# 
  3077  0E2C                     	;# 
  3078  0E2D                     	;# 
  3079  0E2E                     	;# 
  3080  0E2F                     	;# 
  3081  0E30                     	;# 
  3082  0E31                     	;# 
  3083  0E32                     	;# 
  3084  0E33                     	;# 
  3085  0E34                     	;# 
  3086  0E35                     	;# 
  3087  0E36                     	;# 
  3088  0E37                     	;# 
  3089  0E8F                     	;# 
  3090  0E90                     	;# 
  3091  0E91                     	;# 
  3092  0E92                     	;# 
  3093  0E93                     	;# 
  3094  0E94                     	;# 
  3095  0E95                     	;# 
  3096  0E96                     	;# 
  3097  0E97                     	;# 
  3098  0E9C                     	;# 
  3099  0E9D                     	;# 
  3100  0E9E                     	;# 
  3101  0EA1                     	;# 
  3102  0EA2                     	;# 
  3103  0EA3                     	;# 
  3104  0EA4                     	;# 
  3105  0EA5                     	;# 
  3106  0EA9                     	;# 
  3107  0EAA                     	;# 
  3108  0EAB                     	;# 
  3109  0EAC                     	;# 
  3110  0EB1                     	;# 
  3111  0EB2                     	;# 
  3112  0EB3                     	;# 
  3113  0EB8                     	;# 
  3114  0EB9                     	;# 
  3115  0EBA                     	;# 
  3116  0EBB                     	;# 
  3117  0EBC                     	;# 
  3118  0EBD                     	;# 
  3119  0EBE                     	;# 
  3120  0EC3                     	;# 
  3121  0EC5                     	;# 
  3122  0EC6                     	;# 
  3123  0EC7                     	;# 
  3124  0EC8                     	;# 
  3125  0EC9                     	;# 
  3126  0ECA                     	;# 
  3127  0ECB                     	;# 
  3128  0ECC                     	;# 
  3129  0F10                     	;# 
  3130  0F11                     	;# 
  3131  0F12                     	;# 
  3132  0F13                     	;# 
  3133  0F14                     	;# 
  3134  0F15                     	;# 
  3135  0F16                     	;# 
  3136  0F17                     	;# 
  3137  0F18                     	;# 
  3138  0F19                     	;# 
  3139  0F1A                     	;# 
  3140  0F1B                     	;# 
  3141  0F1C                     	;# 
  3142  0F1D                     	;# 
  3143  0F1E                     	;# 
  3144  0F1F                     	;# 
  3145  0F20                     	;# 
  3146  0F21                     	;# 
  3147  0F22                     	;# 
  3148  0F23                     	;# 
  3149  0F24                     	;# 
  3150  0F25                     	;# 
  3151  0F26                     	;# 
  3152  0F27                     	;# 
  3153  0F38                     	;# 
  3154  0F39                     	;# 
  3155  0F3A                     	;# 
  3156  0F3B                     	;# 
  3157  0F3C                     	;# 
  3158  0F3D                     	;# 
  3159  0F3E                     	;# 
  3160  0F3F                     	;# 
  3161  0F40                     	;# 
  3162  0F41                     	;# 
  3163  0F43                     	;# 
  3164  0F44                     	;# 
  3165  0F45                     	;# 
  3166  0F46                     	;# 
  3167  0F47                     	;# 
  3168  0F48                     	;# 
  3169  0F49                     	;# 
  3170  0F4A                     	;# 
  3171  0F4B                     	;# 
  3172  0F4C                     	;# 
  3173  0F4E                     	;# 
  3174  0F4F                     	;# 
  3175  0F50                     	;# 
  3176  0F51                     	;# 
  3177  0F52                     	;# 
  3178  0F53                     	;# 
  3179  0F54                     	;# 
  3180  0F55                     	;# 
  3181  0F56                     	;# 
  3182  0F57                     	;# 
  3183  0F65                     	;# 
  3184  0F68                     	;# 
  3185  0F69                     	;# 
  3186  0F6A                     	;# 
  3187  0F6B                     	;# 
  3188  0FE4                     	;# 
  3189  0FE5                     	;# 
  3190  0FE6                     	;# 
  3191  0FE7                     	;# 
  3192  0FE8                     	;# 
  3193  0FE9                     	;# 
  3194  0FEA                     	;# 
  3195  0FEB                     	;# 
  3196  0FED                     	;# 
  3197  0FEE                     	;# 
  3198  0FEF                     	;# 
  3199  0000                     	;# 
  3200  0001                     	;# 
  3201  0002                     	;# 
  3202  0003                     	;# 
  3203  0004                     	;# 
  3204  0005                     	;# 
  3205  0006                     	;# 
  3206  0007                     	;# 
  3207  0008                     	;# 
  3208  0009                     	;# 
  3209  000A                     	;# 
  3210  000B                     	;# 
  3211  000C                     	;# 
  3212  000D                     	;# 
  3213  000E                     	;# 
  3214  0010                     	;# 
  3215  0011                     	;# 
  3216  0012                     	;# 
  3217  0013                     	;# 
  3218  0016                     	;# 
  3219  0017                     	;# 
  3220  0018                     	;# 
  3221  001C                     	;# 
  3222  001C                     	;# 
  3223  001D                     	;# 
  3224  001D                     	;# 
  3225  001E                     	;# 
  3226  001F                     	;# 
  3227  008C                     	;# 
  3228  008C                     	;# 
  3229  008D                     	;# 
  3230  008E                     	;# 
  3231  008E                     	;# 
  3232  008F                     	;# 
  3233  0090                     	;# 
  3234  0090                     	;# 
  3235  0091                     	;# 
  3236  0093                     	;# 
  3237  0094                     	;# 
  3238  0095                     	;# 
  3239  0096                     	;# 
  3240  0097                     	;# 
  3241  0098                     	;# 
  3242  0099                     	;# 
  3243  009A                     	;# 
  3244  009B                     	;# 
  3245  009C                     	;# 
  3246  009D                     	;# 
  3247  009E                     	;# 
  3248  010C                     	;# 
  3249  010D                     	;# 
  3250  010E                     	;# 
  3251  010E                     	;# 
  3252  010F                     	;# 
  3253  0110                     	;# 
  3254  0110                     	;# 
  3255  0111                     	;# 
  3256  0112                     	;# 
  3257  0112                     	;# 
  3258  0113                     	;# 
  3259  0114                     	;# 
  3260  0114                     	;# 
  3261  0115                     	;# 
  3262  0116                     	;# 
  3263  0116                     	;# 
  3264  0117                     	;# 
  3265  0119                     	;# 
  3266  0119                     	;# 
  3267  0119                     	;# 
  3268  011A                     	;# 
  3269  011A                     	;# 
  3270  011A                     	;# 
  3271  011B                     	;# 
  3272  011B                     	;# 
  3273  011B                     	;# 
  3274  011B                     	;# 
  3275  011B                     	;# 
  3276  011C                     	;# 
  3277  011C                     	;# 
  3278  011C                     	;# 
  3279  011D                     	;# 
  3280  011D                     	;# 
  3281  011D                     	;# 
  3282  011E                     	;# 
  3283  011E                     	;# 
  3284  011E                     	;# 
  3285  011F                     	;# 
  3286  011F                     	;# 
  3287  011F                     	;# 
  3288  011F                     	;# 
  3289  011F                     	;# 
  3290  018C                     	;# 
  3291  018D                     	;# 
  3292  018E                     	;# 
  3293  018F                     	;# 
  3294  0190                     	;# 
  3295  0191                     	;# 
  3296  0192                     	;# 
  3297  0196                     	;# 
  3298  0197                     	;# 
  3299  0198                     	;# 
  3300  0199                     	;# 
  3301  019A                     	;# 
  3302  019B                     	;# 
  3303  019C                     	;# 
  3304  020C                     	;# 
  3305  020C                     	;# 
  3306  020D                     	;# 
  3307  020E                     	;# 
  3308  020F                     	;# 
  3309  020F                     	;# 
  3310  0210                     	;# 
  3311  0210                     	;# 
  3312  0211                     	;# 
  3313  0211                     	;# 
  3314  0212                     	;# 
  3315  0212                     	;# 
  3316  0213                     	;# 
  3317  0214                     	;# 
  3318  0215                     	;# 
  3319  0215                     	;# 
  3320  0216                     	;# 
  3321  0216                     	;# 
  3322  0217                     	;# 
  3323  0217                     	;# 
  3324  0218                     	;# 
  3325  0218                     	;# 
  3326  0219                     	;# 
  3327  021A                     	;# 
  3328  021B                     	;# 
  3329  021B                     	;# 
  3330  021C                     	;# 
  3331  021C                     	;# 
  3332  021D                     	;# 
  3333  021D                     	;# 
  3334  021E                     	;# 
  3335  021F                     	;# 
  3336  028C                     	;# 
  3337  028C                     	;# 
  3338  028D                     	;# 
  3339  028D                     	;# 
  3340  028E                     	;# 
  3341  028F                     	;# 
  3342  0290                     	;# 
  3343  0290                     	;# 
  3344  0291                     	;# 
  3345  0292                     	;# 
  3346  0292                     	;# 
  3347  0293                     	;# 
  3348  0293                     	;# 
  3349  0294                     	;# 
  3350  0295                     	;# 
  3351  0296                     	;# 
  3352  0296                     	;# 
  3353  0297                     	;# 
  3354  0298                     	;# 
  3355  0298                     	;# 
  3356  0299                     	;# 
  3357  0299                     	;# 
  3358  029A                     	;# 
  3359  029B                     	;# 
  3360  029C                     	;# 
  3361  029C                     	;# 
  3362  029D                     	;# 
  3363  030C                     	;# 
  3364  030C                     	;# 
  3365  030D                     	;# 
  3366  030E                     	;# 
  3367  030F                     	;# 
  3368  0310                     	;# 
  3369  0310                     	;# 
  3370  0311                     	;# 
  3371  0312                     	;# 
  3372  0313                     	;# 
  3373  0314                     	;# 
  3374  0314                     	;# 
  3375  0315                     	;# 
  3376  0316                     	;# 
  3377  0317                     	;# 
  3378  0318                     	;# 
  3379  0318                     	;# 
  3380  0319                     	;# 
  3381  031A                     	;# 
  3382  031B                     	;# 
  3383  031C                     	;# 
  3384  031C                     	;# 
  3385  031D                     	;# 
  3386  031E                     	;# 
  3387  031F                     	;# 
  3388  038C                     	;# 
  3389  038D                     	;# 
  3390  038E                     	;# 
  3391  0390                     	;# 
  3392  0391                     	;# 
  3393  0392                     	;# 
  3394  040C                     	;# 
  3395  040D                     	;# 
  3396  040E                     	;# 
  3397  040F                     	;# 
  3398  0410                     	;# 
  3399  0411                     	;# 
  3400  0416                     	;# 
  3401  0416                     	;# 
  3402  0417                     	;# 
  3403  0418                     	;# 
  3404  0418                     	;# 
  3405  0419                     	;# 
  3406  041A                     	;# 
  3407  041A                     	;# 
  3408  041B                     	;# 
  3409  041C                     	;# 
  3410  041C                     	;# 
  3411  041D                     	;# 
  3412  041E                     	;# 
  3413  041F                     	;# 
  3414  048C                     	;# 
  3415  048C                     	;# 
  3416  048D                     	;# 
  3417  048E                     	;# 
  3418  048F                     	;# 
  3419  048F                     	;# 
  3420  0490                     	;# 
  3421  0491                     	;# 
  3422  0492                     	;# 
  3423  0492                     	;# 
  3424  0493                     	;# 
  3425  0494                     	;# 
  3426  0495                     	;# 
  3427  0495                     	;# 
  3428  0496                     	;# 
  3429  0497                     	;# 
  3430  0498                     	;# 
  3431  0499                     	;# 
  3432  049A                     	;# 
  3433  049B                     	;# 
  3434  049C                     	;# 
  3435  049D                     	;# 
  3436  050C                     	;# 
  3437  050C                     	;# 
  3438  050D                     	;# 
  3439  050E                     	;# 
  3440  050F                     	;# 
  3441  050F                     	;# 
  3442  0510                     	;# 
  3443  0511                     	;# 
  3444  0512                     	;# 
  3445  0512                     	;# 
  3446  0513                     	;# 
  3447  0514                     	;# 
  3448  0515                     	;# 
  3449  0515                     	;# 
  3450  0516                     	;# 
  3451  0517                     	;# 
  3452  0518                     	;# 
  3453  0519                     	;# 
  3454  051A                     	;# 
  3455  051B                     	;# 
  3456  051C                     	;# 
  3457  051D                     	;# 
  3458  058C                     	;# 
  3459  058C                     	;# 
  3460  058D                     	;# 
  3461  058E                     	;# 
  3462  058F                     	;# 
  3463  058F                     	;# 
  3464  0590                     	;# 
  3465  0591                     	;# 
  3466  0592                     	;# 
  3467  0593                     	;# 
  3468  060C                     	;# 
  3469  060D                     	;# 
  3470  060E                     	;# 
  3471  060F                     	;# 
  3472  0610                     	;# 
  3473  0611                     	;# 
  3474  0612                     	;# 
  3475  0613                     	;# 
  3476  0614                     	;# 
  3477  0616                     	;# 
  3478  0617                     	;# 
  3479  0618                     	;# 
  3480  0619                     	;# 
  3481  061A                     	;# 
  3482  061B                     	;# 
  3483  061C                     	;# 
  3484  061D                     	;# 
  3485  061E                     	;# 
  3486  068C                     	;# 
  3487  068D                     	;# 
  3488  068E                     	;# 
  3489  068F                     	;# 
  3490  0690                     	;# 
  3491  0691                     	;# 
  3492  0692                     	;# 
  3493  0693                     	;# 
  3494  0694                     	;# 
  3495  070C                     	;# 
  3496  070D                     	;# 
  3497  070E                     	;# 
  3498  070F                     	;# 
  3499  0710                     	;# 
  3500  0711                     	;# 
  3501  0712                     	;# 
  3502  0713                     	;# 
  3503  0714                     	;# 
  3504  0716                     	;# 
  3505  0717                     	;# 
  3506  0718                     	;# 
  3507  0719                     	;# 
  3508  071A                     	;# 
  3509  071B                     	;# 
  3510  071C                     	;# 
  3511  071D                     	;# 
  3512  071E                     	;# 
  3513  0796                     	;# 
  3514  0797                     	;# 
  3515  0798                     	;# 
  3516  0799                     	;# 
  3517  079A                     	;# 
  3518  079B                     	;# 
  3519  080C                     	;# 
  3520  080D                     	;# 
  3521  080E                     	;# 
  3522  080F                     	;# 
  3523  0810                     	;# 
  3524  0811                     	;# 
  3525  0812                     	;# 
  3526  0813                     	;# 
  3527  0814                     	;# 
  3528  081A                     	;# 
  3529  081B                     	;# 
  3530  081C                     	;# 
  3531  081D                     	;# 
  3532  081E                     	;# 
  3533  081F                     	;# 
  3534  088C                     	;# 
  3535  088D                     	;# 
  3536  088E                     	;# 
  3537  088F                     	;# 
  3538  0890                     	;# 
  3539  0891                     	;# 
  3540  0892                     	;# 
  3541  0893                     	;# 
  3542  0895                     	;# 
  3543  0896                     	;# 
  3544  0897                     	;# 
  3545  0898                     	;# 
  3546  0899                     	;# 
  3547  089A                     	;# 
  3548  089B                     	;# 
  3549  090C                     	;# 
  3550  090E                     	;# 
  3551  090F                     	;# 
  3552  091F                     	;# 
  3553  091F                     	;# 
  3554  098F                     	;# 
  3555  098F                     	;# 
  3556  0990                     	;# 
  3557  0991                     	;# 
  3558  0992                     	;# 
  3559  0993                     	;# 
  3560  0994                     	;# 
  3561  0995                     	;# 
  3562  0996                     	;# 
  3563  0997                     	;# 
  3564  0E0F                     	;# 
  3565  0E10                     	;# 
  3566  0E11                     	;# 
  3567  0E12                     	;# 
  3568  0E13                     	;# 
  3569  0E14                     	;# 
  3570  0E15                     	;# 
  3571  0E16                     	;# 
  3572  0E17                     	;# 
  3573  0E18                     	;# 
  3574  0E19                     	;# 
  3575  0E1A                     	;# 
  3576  0E1B                     	;# 
  3577  0E1C                     	;# 
  3578  0E1D                     	;# 
  3579  0E1E                     	;# 
  3580  0E1F                     	;# 
  3581  0E20                     	;# 
  3582  0E21                     	;# 
  3583  0E22                     	;# 
  3584  0E23                     	;# 
  3585  0E24                     	;# 
  3586  0E25                     	;# 
  3587  0E26                     	;# 
  3588  0E27                     	;# 
  3589  0E28                     	;# 
  3590  0E29                     	;# 
  3591  0E2A                     	;# 
  3592  0E2B                     	;# 
  3593  0E2C                     	;# 
  3594  0E2D                     	;# 
  3595  0E2E                     	;# 
  3596  0E2F                     	;# 
  3597  0E30                     	;# 
  3598  0E31                     	;# 
  3599  0E32                     	;# 
  3600  0E33                     	;# 
  3601  0E34                     	;# 
  3602  0E35                     	;# 
  3603  0E36                     	;# 
  3604  0E37                     	;# 
  3605  0E8F                     	;# 
  3606  0E90                     	;# 
  3607  0E91                     	;# 
  3608  0E92                     	;# 
  3609  0E93                     	;# 
  3610  0E94                     	;# 
  3611  0E95                     	;# 
  3612  0E96                     	;# 
  3613  0E97                     	;# 
  3614  0E9C                     	;# 
  3615  0E9D                     	;# 
  3616  0E9E                     	;# 
  3617  0EA1                     	;# 
  3618  0EA2                     	;# 
  3619  0EA3                     	;# 
  3620  0EA4                     	;# 
  3621  0EA5                     	;# 
  3622  0EA9                     	;# 
  3623  0EAA                     	;# 
  3624  0EAB                     	;# 
  3625  0EAC                     	;# 
  3626  0EB1                     	;# 
  3627  0EB2                     	;# 
  3628  0EB3                     	;# 
  3629  0EB8                     	;# 
  3630  0EB9                     	;# 
  3631  0EBA                     	;# 
  3632  0EBB                     	;# 
  3633  0EBC                     	;# 
  3634  0EBD                     	;# 
  3635  0EBE                     	;# 
  3636  0EC3                     	;# 
  3637  0EC5                     	;# 
  3638  0EC6                     	;# 
  3639  0EC7                     	;# 
  3640  0EC8                     	;# 
  3641  0EC9                     	;# 
  3642  0ECA                     	;# 
  3643  0ECB                     	;# 
  3644  0ECC                     	;# 
  3645  0F10                     	;# 
  3646  0F11                     	;# 
  3647  0F12                     	;# 
  3648  0F13                     	;# 
  3649  0F14                     	;# 
  3650  0F15                     	;# 
  3651  0F16                     	;# 
  3652  0F17                     	;# 
  3653  0F18                     	;# 
  3654  0F19                     	;# 
  3655  0F1A                     	;# 
  3656  0F1B                     	;# 
  3657  0F1C                     	;# 
  3658  0F1D                     	;# 
  3659  0F1E                     	;# 
  3660  0F1F                     	;# 
  3661  0F20                     	;# 
  3662  0F21                     	;# 
  3663  0F22                     	;# 
  3664  0F23                     	;# 
  3665  0F24                     	;# 
  3666  0F25                     	;# 
  3667  0F26                     	;# 
  3668  0F27                     	;# 
  3669  0F38                     	;# 
  3670  0F39                     	;# 
  3671  0F3A                     	;# 
  3672  0F3B                     	;# 
  3673  0F3C                     	;# 
  3674  0F3D                     	;# 
  3675  0F3E                     	;# 
  3676  0F3F                     	;# 
  3677  0F40                     	;# 
  3678  0F41                     	;# 
  3679  0F43                     	;# 
  3680  0F44                     	;# 
  3681  0F45                     	;# 
  3682  0F46                     	;# 
  3683  0F47                     	;# 
  3684  0F48                     	;# 
  3685  0F49                     	;# 
  3686  0F4A                     	;# 
  3687  0F4B                     	;# 
  3688  0F4C                     	;# 
  3689  0F4E                     	;# 
  3690  0F4F                     	;# 
  3691  0F50                     	;# 
  3692  0F51                     	;# 
  3693  0F52                     	;# 
  3694  0F53                     	;# 
  3695  0F54                     	;# 
  3696  0F55                     	;# 
  3697  0F56                     	;# 
  3698  0F57                     	;# 
  3699  0F65                     	;# 
  3700  0F68                     	;# 
  3701  0F69                     	;# 
  3702  0F6A                     	;# 
  3703  0F6B                     	;# 
  3704  0FE4                     	;# 
  3705  0FE5                     	;# 
  3706  0FE6                     	;# 
  3707  0FE7                     	;# 
  3708  0FE8                     	;# 
  3709  0FE9                     	;# 
  3710  0FEA                     	;# 
  3711  0FEB                     	;# 
  3712  0FED                     	;# 
  3713  0FEE                     	;# 
  3714  0FEF                     	;# 
  3715  0000                     	;# 
  3716  0001                     	;# 
  3717  0002                     	;# 
  3718  0003                     	;# 
  3719  0004                     	;# 
  3720  0005                     	;# 
  3721  0006                     	;# 
  3722  0007                     	;# 
  3723  0008                     	;# 
  3724  0009                     	;# 
  3725  000A                     	;# 
  3726  000B                     	;# 
  3727  000C                     	;# 
  3728  000D                     	;# 
  3729  000E                     	;# 
  3730  0010                     	;# 
  3731  0011                     	;# 
  3732  0012                     	;# 
  3733  0013                     	;# 
  3734  0016                     	;# 
  3735  0017                     	;# 
  3736  0018                     	;# 
  3737  001C                     	;# 
  3738  001C                     	;# 
  3739  001D                     	;# 
  3740  001D                     	;# 
  3741  001E                     	;# 
  3742  001F                     	;# 
  3743  008C                     	;# 
  3744  008C                     	;# 
  3745  008D                     	;# 
  3746  008E                     	;# 
  3747  008E                     	;# 
  3748  008F                     	;# 
  3749  0090                     	;# 
  3750  0090                     	;# 
  3751  0091                     	;# 
  3752  0093                     	;# 
  3753  0094                     	;# 
  3754  0095                     	;# 
  3755  0096                     	;# 
  3756  0097                     	;# 
  3757  0098                     	;# 
  3758  0099                     	;# 
  3759  009A                     	;# 
  3760  009B                     	;# 
  3761  009C                     	;# 
  3762  009D                     	;# 
  3763  009E                     	;# 
  3764  010C                     	;# 
  3765  010D                     	;# 
  3766  010E                     	;# 
  3767  010E                     	;# 
  3768  010F                     	;# 
  3769  0110                     	;# 
  3770  0110                     	;# 
  3771  0111                     	;# 
  3772  0112                     	;# 
  3773  0112                     	;# 
  3774  0113                     	;# 
  3775  0114                     	;# 
  3776  0114                     	;# 
  3777  0115                     	;# 
  3778  0116                     	;# 
  3779  0116                     	;# 
  3780  0117                     	;# 
  3781  0119                     	;# 
  3782  0119                     	;# 
  3783  0119                     	;# 
  3784  011A                     	;# 
  3785  011A                     	;# 
  3786  011A                     	;# 
  3787  011B                     	;# 
  3788  011B                     	;# 
  3789  011B                     	;# 
  3790  011B                     	;# 
  3791  011B                     	;# 
  3792  011C                     	;# 
  3793  011C                     	;# 
  3794  011C                     	;# 
  3795  011D                     	;# 
  3796  011D                     	;# 
  3797  011D                     	;# 
  3798  011E                     	;# 
  3799  011E                     	;# 
  3800  011E                     	;# 
  3801  011F                     	;# 
  3802  011F                     	;# 
  3803  011F                     	;# 
  3804  011F                     	;# 
  3805  011F                     	;# 
  3806  018C                     	;# 
  3807  018D                     	;# 
  3808  018E                     	;# 
  3809  018F                     	;# 
  3810  0190                     	;# 
  3811  0191                     	;# 
  3812  0192                     	;# 
  3813  0196                     	;# 
  3814  0197                     	;# 
  3815  0198                     	;# 
  3816  0199                     	;# 
  3817  019A                     	;# 
  3818  019B                     	;# 
  3819  019C                     	;# 
  3820  020C                     	;# 
  3821  020C                     	;# 
  3822  020D                     	;# 
  3823  020E                     	;# 
  3824  020F                     	;# 
  3825  020F                     	;# 
  3826  0210                     	;# 
  3827  0210                     	;# 
  3828  0211                     	;# 
  3829  0211                     	;# 
  3830  0212                     	;# 
  3831  0212                     	;# 
  3832  0213                     	;# 
  3833  0214                     	;# 
  3834  0215                     	;# 
  3835  0215                     	;# 
  3836  0216                     	;# 
  3837  0216                     	;# 
  3838  0217                     	;# 
  3839  0217                     	;# 
  3840  0218                     	;# 
  3841  0218                     	;# 
  3842  0219                     	;# 
  3843  021A                     	;# 
  3844  021B                     	;# 
  3845  021B                     	;# 
  3846  021C                     	;# 
  3847  021C                     	;# 
  3848  021D                     	;# 
  3849  021D                     	;# 
  3850  021E                     	;# 
  3851  021F                     	;# 
  3852  028C                     	;# 
  3853  028C                     	;# 
  3854  028D                     	;# 
  3855  028D                     	;# 
  3856  028E                     	;# 
  3857  028F                     	;# 
  3858  0290                     	;# 
  3859  0290                     	;# 
  3860  0291                     	;# 
  3861  0292                     	;# 
  3862  0292                     	;# 
  3863  0293                     	;# 
  3864  0293                     	;# 
  3865  0294                     	;# 
  3866  0295                     	;# 
  3867  0296                     	;# 
  3868  0296                     	;# 
  3869  0297                     	;# 
  3870  0298                     	;# 
  3871  0298                     	;# 
  3872  0299                     	;# 
  3873  0299                     	;# 
  3874  029A                     	;# 
  3875  029B                     	;# 
  3876  029C                     	;# 
  3877  029C                     	;# 
  3878  029D                     	;# 
  3879  030C                     	;# 
  3880  030C                     	;# 
  3881  030D                     	;# 
  3882  030E                     	;# 
  3883  030F                     	;# 
  3884  0310                     	;# 
  3885  0310                     	;# 
  3886  0311                     	;# 
  3887  0312                     	;# 
  3888  0313                     	;# 
  3889  0314                     	;# 
  3890  0314                     	;# 
  3891  0315                     	;# 
  3892  0316                     	;# 
  3893  0317                     	;# 
  3894  0318                     	;# 
  3895  0318                     	;# 
  3896  0319                     	;# 
  3897  031A                     	;# 
  3898  031B                     	;# 
  3899  031C                     	;# 
  3900  031C                     	;# 
  3901  031D                     	;# 
  3902  031E                     	;# 
  3903  031F                     	;# 
  3904  038C                     	;# 
  3905  038D                     	;# 
  3906  038E                     	;# 
  3907  0390                     	;# 
  3908  0391                     	;# 
  3909  0392                     	;# 
  3910  040C                     	;# 
  3911  040D                     	;# 
  3912  040E                     	;# 
  3913  040F                     	;# 
  3914  0410                     	;# 
  3915  0411                     	;# 
  3916  0416                     	;# 
  3917  0416                     	;# 
  3918  0417                     	;# 
  3919  0418                     	;# 
  3920  0418                     	;# 
  3921  0419                     	;# 
  3922  041A                     	;# 
  3923  041A                     	;# 
  3924  041B                     	;# 
  3925  041C                     	;# 
  3926  041C                     	;# 
  3927  041D                     	;# 
  3928  041E                     	;# 
  3929  041F                     	;# 
  3930  048C                     	;# 
  3931  048C                     	;# 
  3932  048D                     	;# 
  3933  048E                     	;# 
  3934  048F                     	;# 
  3935  048F                     	;# 
  3936  0490                     	;# 
  3937  0491                     	;# 
  3938  0492                     	;# 
  3939  0492                     	;# 
  3940  0493                     	;# 
  3941  0494                     	;# 
  3942  0495                     	;# 
  3943  0495                     	;# 
  3944  0496                     	;# 
  3945  0497                     	;# 
  3946  0498                     	;# 
  3947  0499                     	;# 
  3948  049A                     	;# 
  3949  049B                     	;# 
  3950  049C                     	;# 
  3951  049D                     	;# 
  3952  050C                     	;# 
  3953  050C                     	;# 
  3954  050D                     	;# 
  3955  050E                     	;# 
  3956  050F                     	;# 
  3957  050F                     	;# 
  3958  0510                     	;# 
  3959  0511                     	;# 
  3960  0512                     	;# 
  3961  0512                     	;# 
  3962  0513                     	;# 
  3963  0514                     	;# 
  3964  0515                     	;# 
  3965  0515                     	;# 
  3966  0516                     	;# 
  3967  0517                     	;# 
  3968  0518                     	;# 
  3969  0519                     	;# 
  3970  051A                     	;# 
  3971  051B                     	;# 
  3972  051C                     	;# 
  3973  051D                     	;# 
  3974  058C                     	;# 
  3975  058C                     	;# 
  3976  058D                     	;# 
  3977  058E                     	;# 
  3978  058F                     	;# 
  3979  058F                     	;# 
  3980  0590                     	;# 
  3981  0591                     	;# 
  3982  0592                     	;# 
  3983  0593                     	;# 
  3984  060C                     	;# 
  3985  060D                     	;# 
  3986  060E                     	;# 
  3987  060F                     	;# 
  3988  0610                     	;# 
  3989  0611                     	;# 
  3990  0612                     	;# 
  3991  0613                     	;# 
  3992  0614                     	;# 
  3993  0616                     	;# 
  3994  0617                     	;# 
  3995  0618                     	;# 
  3996  0619                     	;# 
  3997  061A                     	;# 
  3998  061B                     	;# 
  3999  061C                     	;# 
  4000  061D                     	;# 
  4001  061E                     	;# 
  4002  068C                     	;# 
  4003  068D                     	;# 
  4004  068E                     	;# 
  4005  068F                     	;# 
  4006  0690                     	;# 
  4007  0691                     	;# 
  4008  0692                     	;# 
  4009  0693                     	;# 
  4010  0694                     	;# 
  4011  070C                     	;# 
  4012  070D                     	;# 
  4013  070E                     	;# 
  4014  070F                     	;# 
  4015  0710                     	;# 
  4016  0711                     	;# 
  4017  0712                     	;# 
  4018  0713                     	;# 
  4019  0714                     	;# 
  4020  0716                     	;# 
  4021  0717                     	;# 
  4022  0718                     	;# 
  4023  0719                     	;# 
  4024  071A                     	;# 
  4025  071B                     	;# 
  4026  071C                     	;# 
  4027  071D                     	;# 
  4028  071E                     	;# 
  4029  0796                     	;# 
  4030  0797                     	;# 
  4031  0798                     	;# 
  4032  0799                     	;# 
  4033  079A                     	;# 
  4034  079B                     	;# 
  4035  080C                     	;# 
  4036  080D                     	;# 
  4037  080E                     	;# 
  4038  080F                     	;# 
  4039  0810                     	;# 
  4040  0811                     	;# 
  4041  0812                     	;# 
  4042  0813                     	;# 
  4043  0814                     	;# 
  4044  081A                     	;# 
  4045  081B                     	;# 
  4046  081C                     	;# 
  4047  081D                     	;# 
  4048  081E                     	;# 
  4049  081F                     	;# 
  4050  088C                     	;# 
  4051  088D                     	;# 
  4052  088E                     	;# 
  4053  088F                     	;# 
  4054  0890                     	;# 
  4055  0891                     	;# 
  4056  0892                     	;# 
  4057  0893                     	;# 
  4058  0895                     	;# 
  4059  0896                     	;# 
  4060  0897                     	;# 
  4061  0898                     	;# 
  4062  0899                     	;# 
  4063  089A                     	;# 
  4064  089B                     	;# 
  4065  090C                     	;# 
  4066  090E                     	;# 
  4067  090F                     	;# 
  4068  091F                     	;# 
  4069  091F                     	;# 
  4070  098F                     	;# 
  4071  098F                     	;# 
  4072  0990                     	;# 
  4073  0991                     	;# 
  4074  0992                     	;# 
  4075  0993                     	;# 
  4076  0994                     	;# 
  4077  0995                     	;# 
  4078  0996                     	;# 
  4079  0997                     	;# 
  4080  0E0F                     	;# 
  4081  0E10                     	;# 
  4082  0E11                     	;# 
  4083  0E12                     	;# 
  4084  0E13                     	;# 
  4085  0E14                     	;# 
  4086  0E15                     	;# 
  4087  0E16                     	;# 
  4088  0E17                     	;# 
  4089  0E18                     	;# 
  4090  0E19                     	;# 
  4091  0E1A                     	;# 
  4092  0E1B                     	;# 
  4093  0E1C                     	;# 
  4094  0E1D                     	;# 
  4095  0E1E                     	;# 
  4096  0E1F                     	;# 
  4097  0E20                     	;# 
  4098  0E21                     	;# 
  4099  0E22                     	;# 
  4100  0E23                     	;# 
  4101  0E24                     	;# 
  4102  0E25                     	;# 
  4103  0E26                     	;# 
  4104  0E27                     	;# 
  4105  0E28                     	;# 
  4106  0E29                     	;# 
  4107  0E2A                     	;# 
  4108  0E2B                     	;# 
  4109  0E2C                     	;# 
  4110  0E2D                     	;# 
  4111  0E2E                     	;# 
  4112  0E2F                     	;# 
  4113  0E30                     	;# 
  4114  0E31                     	;# 
  4115  0E32                     	;# 
  4116  0E33                     	;# 
  4117  0E34                     	;# 
  4118  0E35                     	;# 
  4119  0E36                     	;# 
  4120  0E37                     	;# 
  4121  0E8F                     	;# 
  4122  0E90                     	;# 
  4123  0E91                     	;# 
  4124  0E92                     	;# 
  4125  0E93                     	;# 
  4126  0E94                     	;# 
  4127  0E95                     	;# 
  4128  0E96                     	;# 
  4129  0E97                     	;# 
  4130  0E9C                     	;# 
  4131  0E9D                     	;# 
  4132  0E9E                     	;# 
  4133  0EA1                     	;# 
  4134  0EA2                     	;# 
  4135  0EA3                     	;# 
  4136  0EA4                     	;# 
  4137  0EA5                     	;# 
  4138  0EA9                     	;# 
  4139  0EAA                     	;# 
  4140  0EAB                     	;# 
  4141  0EAC                     	;# 
  4142  0EB1                     	;# 
  4143  0EB2                     	;# 
  4144  0EB3                     	;# 
  4145  0EB8                     	;# 
  4146  0EB9                     	;# 
  4147  0EBA                     	;# 
  4148  0EBB                     	;# 
  4149  0EBC                     	;# 
  4150  0EBD                     	;# 
  4151  0EBE                     	;# 
  4152  0EC3                     	;# 
  4153  0EC5                     	;# 
  4154  0EC6                     	;# 
  4155  0EC7                     	;# 
  4156  0EC8                     	;# 
  4157  0EC9                     	;# 
  4158  0ECA                     	;# 
  4159  0ECB                     	;# 
  4160  0ECC                     	;# 
  4161  0F10                     	;# 
  4162  0F11                     	;# 
  4163  0F12                     	;# 
  4164  0F13                     	;# 
  4165  0F14                     	;# 
  4166  0F15                     	;# 
  4167  0F16                     	;# 
  4168  0F17                     	;# 
  4169  0F18                     	;# 
  4170  0F19                     	;# 
  4171  0F1A                     	;# 
  4172  0F1B                     	;# 
  4173  0F1C                     	;# 
  4174  0F1D                     	;# 
  4175  0F1E                     	;# 
  4176  0F1F                     	;# 
  4177  0F20                     	;# 
  4178  0F21                     	;# 
  4179  0F22                     	;# 
  4180  0F23                     	;# 
  4181  0F24                     	;# 
  4182  0F25                     	;# 
  4183  0F26                     	;# 
  4184  0F27                     	;# 
  4185  0F38                     	;# 
  4186  0F39                     	;# 
  4187  0F3A                     	;# 
  4188  0F3B                     	;# 
  4189  0F3C                     	;# 
  4190  0F3D                     	;# 
  4191  0F3E                     	;# 
  4192  0F3F                     	;# 
  4193  0F40                     	;# 
  4194  0F41                     	;# 
  4195  0F43                     	;# 
  4196  0F44                     	;# 
  4197  0F45                     	;# 
  4198  0F46                     	;# 
  4199  0F47                     	;# 
  4200  0F48                     	;# 
  4201  0F49                     	;# 
  4202  0F4A                     	;# 
  4203  0F4B                     	;# 
  4204  0F4C                     	;# 
  4205  0F4E                     	;# 
  4206  0F4F                     	;# 
  4207  0F50                     	;# 
  4208  0F51                     	;# 
  4209  0F52                     	;# 
  4210  0F53                     	;# 
  4211  0F54                     	;# 
  4212  0F55                     	;# 
  4213  0F56                     	;# 
  4214  0F57                     	;# 
  4215  0F65                     	;# 
  4216  0F68                     	;# 
  4217  0F69                     	;# 
  4218  0F6A                     	;# 
  4219  0F6B                     	;# 
  4220  0FE4                     	;# 
  4221  0FE5                     	;# 
  4222  0FE6                     	;# 
  4223  0FE7                     	;# 
  4224  0FE8                     	;# 
  4225  0FE9                     	;# 
  4226  0FEA                     	;# 
  4227  0FEB                     	;# 
  4228  0FED                     	;# 
  4229  0FEE                     	;# 
  4230  0FEF                     	;# 
  4231  0000                     	;# 
  4232  0001                     	;# 
  4233  0002                     	;# 
  4234  0003                     	;# 
  4235  0004                     	;# 
  4236  0005                     	;# 
  4237  0006                     	;# 
  4238  0007                     	;# 
  4239  0008                     	;# 
  4240  0009                     	;# 
  4241  000A                     	;# 
  4242  000B                     	;# 
  4243  000C                     	;# 
  4244  000D                     	;# 
  4245  000E                     	;# 
  4246  0010                     	;# 
  4247  0011                     	;# 
  4248  0012                     	;# 
  4249  0013                     	;# 
  4250  0016                     	;# 
  4251  0017                     	;# 
  4252  0018                     	;# 
  4253  001C                     	;# 
  4254  001C                     	;# 
  4255  001D                     	;# 
  4256  001D                     	;# 
  4257  001E                     	;# 
  4258  001F                     	;# 
  4259  008C                     	;# 
  4260  008C                     	;# 
  4261  008D                     	;# 
  4262  008E                     	;# 
  4263  008E                     	;# 
  4264  008F                     	;# 
  4265  0090                     	;# 
  4266  0090                     	;# 
  4267  0091                     	;# 
  4268  0093                     	;# 
  4269  0094                     	;# 
  4270  0095                     	;# 
  4271  0096                     	;# 
  4272  0097                     	;# 
  4273  0098                     	;# 
  4274  0099                     	;# 
  4275  009A                     	;# 
  4276  009B                     	;# 
  4277  009C                     	;# 
  4278  009D                     	;# 
  4279  009E                     	;# 
  4280  010C                     	;# 
  4281  010D                     	;# 
  4282  010E                     	;# 
  4283  010E                     	;# 
  4284  010F                     	;# 
  4285  0110                     	;# 
  4286  0110                     	;# 
  4287  0111                     	;# 
  4288  0112                     	;# 
  4289  0112                     	;# 
  4290  0113                     	;# 
  4291  0114                     	;# 
  4292  0114                     	;# 
  4293  0115                     	;# 
  4294  0116                     	;# 
  4295  0116                     	;# 
  4296  0117                     	;# 
  4297  0119                     	;# 
  4298  0119                     	;# 
  4299  0119                     	;# 
  4300  011A                     	;# 
  4301  011A                     	;# 
  4302  011A                     	;# 
  4303  011B                     	;# 
  4304  011B                     	;# 
  4305  011B                     	;# 
  4306  011B                     	;# 
  4307  011B                     	;# 
  4308  011C                     	;# 
  4309  011C                     	;# 
  4310  011C                     	;# 
  4311  011D                     	;# 
  4312  011D                     	;# 
  4313  011D                     	;# 
  4314  011E                     	;# 
  4315  011E                     	;# 
  4316  011E                     	;# 
  4317  011F                     	;# 
  4318  011F                     	;# 
  4319  011F                     	;# 
  4320  011F                     	;# 
  4321  011F                     	;# 
  4322  018C                     	;# 
  4323  018D                     	;# 
  4324  018E                     	;# 
  4325  018F                     	;# 
  4326  0190                     	;# 
  4327  0191                     	;# 
  4328  0192                     	;# 
  4329  0196                     	;# 
  4330  0197                     	;# 
  4331  0198                     	;# 
  4332  0199                     	;# 
  4333  019A                     	;# 
  4334  019B                     	;# 
  4335  019C                     	;# 
  4336  020C                     	;# 
  4337  020C                     	;# 
  4338  020D                     	;# 
  4339  020E                     	;# 
  4340  020F                     	;# 
  4341  020F                     	;# 
  4342  0210                     	;# 
  4343  0210                     	;# 
  4344  0211                     	;# 
  4345  0211                     	;# 
  4346  0212                     	;# 
  4347  0212                     	;# 
  4348  0213                     	;# 
  4349  0214                     	;# 
  4350  0215                     	;# 
  4351  0215                     	;# 
  4352  0216                     	;# 
  4353  0216                     	;# 
  4354  0217                     	;# 
  4355  0217                     	;# 
  4356  0218                     	;# 
  4357  0218                     	;# 
  4358  0219                     	;# 
  4359  021A                     	;# 
  4360  021B                     	;# 
  4361  021B                     	;# 
  4362  021C                     	;# 
  4363  021C                     	;# 
  4364  021D                     	;# 
  4365  021D                     	;# 
  4366  021E                     	;# 
  4367  021F                     	;# 
  4368  028C                     	;# 
  4369  028C                     	;# 
  4370  028D                     	;# 
  4371  028D                     	;# 
  4372  028E                     	;# 
  4373  028F                     	;# 
  4374  0290                     	;# 
  4375  0290                     	;# 
  4376  0291                     	;# 
  4377  0292                     	;# 
  4378  0292                     	;# 
  4379  0293                     	;# 
  4380  0293                     	;# 
  4381  0294                     	;# 
  4382  0295                     	;# 
  4383  0296                     	;# 
  4384  0296                     	;# 
  4385  0297                     	;# 
  4386  0298                     	;# 
  4387  0298                     	;# 
  4388  0299                     	;# 
  4389  0299                     	;# 
  4390  029A                     	;# 
  4391  029B                     	;# 
  4392  029C                     	;# 
  4393  029C                     	;# 
  4394  029D                     	;# 
  4395  030C                     	;# 
  4396  030C                     	;# 
  4397  030D                     	;# 
  4398  030E                     	;# 
  4399  030F                     	;# 
  4400  0310                     	;# 
  4401  0310                     	;# 
  4402  0311                     	;# 
  4403  0312                     	;# 
  4404  0313                     	;# 
  4405  0314                     	;# 
  4406  0314                     	;# 
  4407  0315                     	;# 
  4408  0316                     	;# 
  4409  0317                     	;# 
  4410  0318                     	;# 
  4411  0318                     	;# 
  4412  0319                     	;# 
  4413  031A                     	;# 
  4414  031B                     	;# 
  4415  031C                     	;# 
  4416  031C                     	;# 
  4417  031D                     	;# 
  4418  031E                     	;# 
  4419  031F                     	;# 
  4420  038C                     	;# 
  4421  038D                     	;# 
  4422  038E                     	;# 
  4423  0390                     	;# 
  4424  0391                     	;# 
  4425  0392                     	;# 
  4426  040C                     	;# 
  4427  040D                     	;# 
  4428  040E                     	;# 
  4429  040F                     	;# 
  4430  0410                     	;# 
  4431  0411                     	;# 
  4432  0416                     	;# 
  4433  0416                     	;# 
  4434  0417                     	;# 
  4435  0418                     	;# 
  4436  0418                     	;# 
  4437  0419                     	;# 
  4438  041A                     	;# 
  4439  041A                     	;# 
  4440  041B                     	;# 
  4441  041C                     	;# 
  4442  041C                     	;# 
  4443  041D                     	;# 
  4444  041E                     	;# 
  4445  041F                     	;# 
  4446  048C                     	;# 
  4447  048C                     	;# 
  4448  048D                     	;# 
  4449  048E                     	;# 
  4450  048F                     	;# 
  4451  048F                     	;# 
  4452  0490                     	;# 
  4453  0491                     	;# 
  4454  0492                     	;# 
  4455  0492                     	;# 
  4456  0493                     	;# 
  4457  0494                     	;# 
  4458  0495                     	;# 
  4459  0495                     	;# 
  4460  0496                     	;# 
  4461  0497                     	;# 
  4462  0498                     	;# 
  4463  0499                     	;# 
  4464  049A                     	;# 
  4465  049B                     	;# 
  4466  049C                     	;# 
  4467  049D                     	;# 
  4468  050C                     	;# 
  4469  050C                     	;# 
  4470  050D                     	;# 
  4471  050E                     	;# 
  4472  050F                     	;# 
  4473  050F                     	;# 
  4474  0510                     	;# 
  4475  0511                     	;# 
  4476  0512                     	;# 
  4477  0512                     	;# 
  4478  0513                     	;# 
  4479  0514                     	;# 
  4480  0515                     	;# 
  4481  0515                     	;# 
  4482  0516                     	;# 
  4483  0517                     	;# 
  4484  0518                     	;# 
  4485  0519                     	;# 
  4486  051A                     	;# 
  4487  051B                     	;# 
  4488  051C                     	;# 
  4489  051D                     	;# 
  4490  058C                     	;# 
  4491  058C                     	;# 
  4492  058D                     	;# 
  4493  058E                     	;# 
  4494  058F                     	;# 
  4495  058F                     	;# 
  4496  0590                     	;# 
  4497  0591                     	;# 
  4498  0592                     	;# 
  4499  0593                     	;# 
  4500  060C                     	;# 
  4501  060D                     	;# 
  4502  060E                     	;# 
  4503  060F                     	;# 
  4504  0610                     	;# 
  4505  0611                     	;# 
  4506  0612                     	;# 
  4507  0613                     	;# 
  4508  0614                     	;# 
  4509  0616                     	;# 
  4510  0617                     	;# 
  4511  0618                     	;# 
  4512  0619                     	;# 
  4513  061A                     	;# 
  4514  061B                     	;# 
  4515  061C                     	;# 
  4516  061D                     	;# 
  4517  061E                     	;# 
  4518  068C                     	;# 
  4519  068D                     	;# 
  4520  068E                     	;# 
  4521  068F                     	;# 
  4522  0690                     	;# 
  4523  0691                     	;# 
  4524  0692                     	;# 
  4525  0693                     	;# 
  4526  0694                     	;# 
  4527  070C                     	;# 
  4528  070D                     	;# 
  4529  070E                     	;# 
  4530  070F                     	;# 
  4531  0710                     	;# 
  4532  0711                     	;# 
  4533  0712                     	;# 
  4534  0713                     	;# 
  4535  0714                     	;# 
  4536  0716                     	;# 
  4537  0717                     	;# 
  4538  0718                     	;# 
  4539  0719                     	;# 
  4540  071A                     	;# 
  4541  071B                     	;# 
  4542  071C                     	;# 
  4543  071D                     	;# 
  4544  071E                     	;# 
  4545  0796                     	;# 
  4546  0797                     	;# 
  4547  0798                     	;# 
  4548  0799                     	;# 
  4549  079A                     	;# 
  4550  079B                     	;# 
  4551  080C                     	;# 
  4552  080D                     	;# 
  4553  080E                     	;# 
  4554  080F                     	;# 
  4555  0810                     	;# 
  4556  0811                     	;# 
  4557  0812                     	;# 
  4558  0813                     	;# 
  4559  0814                     	;# 
  4560  081A                     	;# 
  4561  081B                     	;# 
  4562  081C                     	;# 
  4563  081D                     	;# 
  4564  081E                     	;# 
  4565  081F                     	;# 
  4566  088C                     	;# 
  4567  088D                     	;# 
  4568  088E                     	;# 
  4569  088F                     	;# 
  4570  0890                     	;# 
  4571  0891                     	;# 
  4572  0892                     	;# 
  4573  0893                     	;# 
  4574  0895                     	;# 
  4575  0896                     	;# 
  4576  0897                     	;# 
  4577  0898                     	;# 
  4578  0899                     	;# 
  4579  089A                     	;# 
  4580  089B                     	;# 
  4581  090C                     	;# 
  4582  090E                     	;# 
  4583  090F                     	;# 
  4584  091F                     	;# 
  4585  091F                     	;# 
  4586  098F                     	;# 
  4587  098F                     	;# 
  4588  0990                     	;# 
  4589  0991                     	;# 
  4590  0992                     	;# 
  4591  0993                     	;# 
  4592  0994                     	;# 
  4593  0995                     	;# 
  4594  0996                     	;# 
  4595  0997                     	;# 
  4596  0E0F                     	;# 
  4597  0E10                     	;# 
  4598  0E11                     	;# 
  4599  0E12                     	;# 
  4600  0E13                     	;# 
  4601  0E14                     	;# 
  4602  0E15                     	;# 
  4603  0E16                     	;# 
  4604  0E17                     	;# 
  4605  0E18                     	;# 
  4606  0E19                     	;# 
  4607  0E1A                     	;# 
  4608  0E1B                     	;# 
  4609  0E1C                     	;# 
  4610  0E1D                     	;# 
  4611  0E1E                     	;# 
  4612  0E1F                     	;# 
  4613  0E20                     	;# 
  4614  0E21                     	;# 
  4615  0E22                     	;# 
  4616  0E23                     	;# 
  4617  0E24                     	;# 
  4618  0E25                     	;# 
  4619  0E26                     	;# 
  4620  0E27                     	;# 
  4621  0E28                     	;# 
  4622  0E29                     	;# 
  4623  0E2A                     	;# 
  4624  0E2B                     	;# 
  4625  0E2C                     	;# 
  4626  0E2D                     	;# 
  4627  0E2E                     	;# 
  4628  0E2F                     	;# 
  4629  0E30                     	;# 
  4630  0E31                     	;# 
  4631  0E32                     	;# 
  4632  0E33                     	;# 
  4633  0E34                     	;# 
  4634  0E35                     	;# 
  4635  0E36                     	;# 
  4636  0E37                     	;# 
  4637  0E8F                     	;# 
  4638  0E90                     	;# 
  4639  0E91                     	;# 
  4640  0E92                     	;# 
  4641  0E93                     	;# 
  4642  0E94                     	;# 
  4643  0E95                     	;# 
  4644  0E96                     	;# 
  4645  0E97                     	;# 
  4646  0E9C                     	;# 
  4647  0E9D                     	;# 
  4648  0E9E                     	;# 
  4649  0EA1                     	;# 
  4650  0EA2                     	;# 
  4651  0EA3                     	;# 
  4652  0EA4                     	;# 
  4653  0EA5                     	;# 
  4654  0EA9                     	;# 
  4655  0EAA                     	;# 
  4656  0EAB                     	;# 
  4657  0EAC                     	;# 
  4658  0EB1                     	;# 
  4659  0EB2                     	;# 
  4660  0EB3                     	;# 
  4661  0EB8                     	;# 
  4662  0EB9                     	;# 
  4663  0EBA                     	;# 
  4664  0EBB                     	;# 
  4665  0EBC                     	;# 
  4666  0EBD                     	;# 
  4667  0EBE                     	;# 
  4668  0EC3                     	;# 
  4669  0EC5                     	;# 
  4670  0EC6                     	;# 
  4671  0EC7                     	;# 
  4672  0EC8                     	;# 
  4673  0EC9                     	;# 
  4674  0ECA                     	;# 
  4675  0ECB                     	;# 
  4676  0ECC                     	;# 
  4677  0F10                     	;# 
  4678  0F11                     	;# 
  4679  0F12                     	;# 
  4680  0F13                     	;# 
  4681  0F14                     	;# 
  4682  0F15                     	;# 
  4683  0F16                     	;# 
  4684  0F17                     	;# 
  4685  0F18                     	;# 
  4686  0F19                     	;# 
  4687  0F1A                     	;# 
  4688  0F1B                     	;# 
  4689  0F1C                     	;# 
  4690  0F1D                     	;# 
  4691  0F1E                     	;# 
  4692  0F1F                     	;# 
  4693  0F20                     	;# 
  4694  0F21                     	;# 
  4695  0F22                     	;# 
  4696  0F23                     	;# 
  4697  0F24                     	;# 
  4698  0F25                     	;# 
  4699  0F26                     	;# 
  4700  0F27                     	;# 
  4701  0F38                     	;# 
  4702  0F39                     	;# 
  4703  0F3A                     	;# 
  4704  0F3B                     	;# 
  4705  0F3C                     	;# 
  4706  0F3D                     	;# 
  4707  0F3E                     	;# 
  4708  0F3F                     	;# 
  4709  0F40                     	;# 
  4710  0F41                     	;# 
  4711  0F43                     	;# 
  4712  0F44                     	;# 
  4713  0F45                     	;# 
  4714  0F46                     	;# 
  4715  0F47                     	;# 
  4716  0F48                     	;# 
  4717  0F49                     	;# 
  4718  0F4A                     	;# 
  4719  0F4B                     	;# 
  4720  0F4C                     	;# 
  4721  0F4E                     	;# 
  4722  0F4F                     	;# 
  4723  0F50                     	;# 
  4724  0F51                     	;# 
  4725  0F52                     	;# 
  4726  0F53                     	;# 
  4727  0F54                     	;# 
  4728  0F55                     	;# 
  4729  0F56                     	;# 
  4730  0F57                     	;# 
  4731  0F65                     	;# 
  4732  0F68                     	;# 
  4733  0F69                     	;# 
  4734  0F6A                     	;# 
  4735  0F6B                     	;# 
  4736  0FE4                     	;# 
  4737  0FE5                     	;# 
  4738  0FE6                     	;# 
  4739  0FE7                     	;# 
  4740  0FE8                     	;# 
  4741  0FE9                     	;# 
  4742  0FEA                     	;# 
  4743  0FEB                     	;# 
  4744  0FED                     	;# 
  4745  0FEE                     	;# 
  4746  0FEF                     	;# 
  4747  0000                     	;# 
  4748  0001                     	;# 
  4749  0002                     	;# 
  4750  0003                     	;# 
  4751  0004                     	;# 
  4752  0005                     	;# 
  4753  0006                     	;# 
  4754  0007                     	;# 
  4755  0008                     	;# 
  4756  0009                     	;# 
  4757  000A                     	;# 
  4758  000B                     	;# 
  4759  000C                     	;# 
  4760  000D                     	;# 
  4761  000E                     	;# 
  4762  0010                     	;# 
  4763  0011                     	;# 
  4764  0012                     	;# 
  4765  0013                     	;# 
  4766  0016                     	;# 
  4767  0017                     	;# 
  4768  0018                     	;# 
  4769  001C                     	;# 
  4770  001C                     	;# 
  4771  001D                     	;# 
  4772  001D                     	;# 
  4773  001E                     	;# 
  4774  001F                     	;# 
  4775  008C                     	;# 
  4776  008C                     	;# 
  4777  008D                     	;# 
  4778  008E                     	;# 
  4779  008E                     	;# 
  4780  008F                     	;# 
  4781  0090                     	;# 
  4782  0090                     	;# 
  4783  0091                     	;# 
  4784  0093                     	;# 
  4785  0094                     	;# 
  4786  0095                     	;# 
  4787  0096                     	;# 
  4788  0097                     	;# 
  4789  0098                     	;# 
  4790  0099                     	;# 
  4791  009A                     	;# 
  4792  009B                     	;# 
  4793  009C                     	;# 
  4794  009D                     	;# 
  4795  009E                     	;# 
  4796  010C                     	;# 
  4797  010D                     	;# 
  4798  010E                     	;# 
  4799  010E                     	;# 
  4800  010F                     	;# 
  4801  0110                     	;# 
  4802  0110                     	;# 
  4803  0111                     	;# 
  4804  0112                     	;# 
  4805  0112                     	;# 
  4806  0113                     	;# 
  4807  0114                     	;# 
  4808  0114                     	;# 
  4809  0115                     	;# 
  4810  0116                     	;# 
  4811  0116                     	;# 
  4812  0117                     	;# 
  4813  0119                     	;# 
  4814  0119                     	;# 
  4815  0119                     	;# 
  4816  011A                     	;# 
  4817  011A                     	;# 
  4818  011A                     	;# 
  4819  011B                     	;# 
  4820  011B                     	;# 
  4821  011B                     	;# 
  4822  011B                     	;# 
  4823  011B                     	;# 
  4824  011C                     	;# 
  4825  011C                     	;# 
  4826  011C                     	;# 
  4827  011D                     	;# 
  4828  011D                     	;# 
  4829  011D                     	;# 
  4830  011E                     	;# 
  4831  011E                     	;# 
  4832  011E                     	;# 
  4833  011F                     	;# 
  4834  011F                     	;# 
  4835  011F                     	;# 
  4836  011F                     	;# 
  4837  011F                     	;# 
  4838  018C                     	;# 
  4839  018D                     	;# 
  4840  018E                     	;# 
  4841  018F                     	;# 
  4842  0190                     	;# 
  4843  0191                     	;# 
  4844  0192                     	;# 
  4845  0196                     	;# 
  4846  0197                     	;# 
  4847  0198                     	;# 
  4848  0199                     	;# 
  4849  019A                     	;# 
  4850  019B                     	;# 
  4851  019C                     	;# 
  4852  020C                     	;# 
  4853  020C                     	;# 
  4854  020D                     	;# 
  4855  020E                     	;# 
  4856  020F                     	;# 
  4857  020F                     	;# 
  4858  0210                     	;# 
  4859  0210                     	;# 
  4860  0211                     	;# 
  4861  0211                     	;# 
  4862  0212                     	;# 
  4863  0212                     	;# 
  4864  0213                     	;# 
  4865  0214                     	;# 
  4866  0215                     	;# 
  4867  0215                     	;# 
  4868  0216                     	;# 
  4869  0216                     	;# 
  4870  0217                     	;# 
  4871  0217                     	;# 
  4872  0218                     	;# 
  4873  0218                     	;# 
  4874  0219                     	;# 
  4875  021A                     	;# 
  4876  021B                     	;# 
  4877  021B                     	;# 
  4878  021C                     	;# 
  4879  021C                     	;# 
  4880  021D                     	;# 
  4881  021D                     	;# 
  4882  021E                     	;# 
  4883  021F                     	;# 
  4884  028C                     	;# 
  4885  028C                     	;# 
  4886  028D                     	;# 
  4887  028D                     	;# 
  4888  028E                     	;# 
  4889  028F                     	;# 
  4890  0290                     	;# 
  4891  0290                     	;# 
  4892  0291                     	;# 
  4893  0292                     	;# 
  4894  0292                     	;# 
  4895  0293                     	;# 
  4896  0293                     	;# 
  4897  0294                     	;# 
  4898  0295                     	;# 
  4899  0296                     	;# 
  4900  0296                     	;# 
  4901  0297                     	;# 
  4902  0298                     	;# 
  4903  0298                     	;# 
  4904  0299                     	;# 
  4905  0299                     	;# 
  4906  029A                     	;# 
  4907  029B                     	;# 
  4908  029C                     	;# 
  4909  029C                     	;# 
  4910  029D                     	;# 
  4911  030C                     	;# 
  4912  030C                     	;# 
  4913  030D                     	;# 
  4914  030E                     	;# 
  4915  030F                     	;# 
  4916  0310                     	;# 
  4917  0310                     	;# 
  4918  0311                     	;# 
  4919  0312                     	;# 
  4920  0313                     	;# 
  4921  0314                     	;# 
  4922  0314                     	;# 
  4923  0315                     	;# 
  4924  0316                     	;# 
  4925  0317                     	;# 
  4926  0318                     	;# 
  4927  0318                     	;# 
  4928  0319                     	;# 
  4929  031A                     	;# 
  4930  031B                     	;# 
  4931  031C                     	;# 
  4932  031C                     	;# 
  4933  031D                     	;# 
  4934  031E                     	;# 
  4935  031F                     	;# 
  4936  038C                     	;# 
  4937  038D                     	;# 
  4938  038E                     	;# 
  4939  0390                     	;# 
  4940  0391                     	;# 
  4941  0392                     	;# 
  4942  040C                     	;# 
  4943  040D                     	;# 
  4944  040E                     	;# 
  4945  040F                     	;# 
  4946  0410                     	;# 
  4947  0411                     	;# 
  4948  0416                     	;# 
  4949  0416                     	;# 
  4950  0417                     	;# 
  4951  0418                     	;# 
  4952  0418                     	;# 
  4953  0419                     	;# 
  4954  041A                     	;# 
  4955  041A                     	;# 
  4956  041B                     	;# 
  4957  041C                     	;# 
  4958  041C                     	;# 
  4959  041D                     	;# 
  4960  041E                     	;# 
  4961  041F                     	;# 
  4962  048C                     	;# 
  4963  048C                     	;# 
  4964  048D                     	;# 
  4965  048E                     	;# 
  4966  048F                     	;# 
  4967  048F                     	;# 
  4968  0490                     	;# 
  4969  0491                     	;# 
  4970  0492                     	;# 
  4971  0492                     	;# 
  4972  0493                     	;# 
  4973  0494                     	;# 
  4974  0495                     	;# 
  4975  0495                     	;# 
  4976  0496                     	;# 
  4977  0497                     	;# 
  4978  0498                     	;# 
  4979  0499                     	;# 
  4980  049A                     	;# 
  4981  049B                     	;# 
  4982  049C                     	;# 
  4983  049D                     	;# 
  4984  050C                     	;# 
  4985  050C                     	;# 
  4986  050D                     	;# 
  4987  050E                     	;# 
  4988  050F                     	;# 
  4989  050F                     	;# 
  4990  0510                     	;# 
  4991  0511                     	;# 
  4992  0512                     	;# 
  4993  0512                     	;# 
  4994  0513                     	;# 
  4995  0514                     	;# 
  4996  0515                     	;# 
  4997  0515                     	;# 
  4998  0516                     	;# 
  4999  0517                     	;# 
  5000  0518                     	;# 
  5001  0519                     	;# 
  5002  051A                     	;# 
  5003  051B                     	;# 
  5004  051C                     	;# 
  5005  051D                     	;# 
  5006  058C                     	;# 
  5007  058C                     	;# 
  5008  058D                     	;# 
  5009  058E                     	;# 
  5010  058F                     	;# 
  5011  058F                     	;# 
  5012  0590                     	;# 
  5013  0591                     	;# 
  5014  0592                     	;# 
  5015  0593                     	;# 
  5016  060C                     	;# 
  5017  060D                     	;# 
  5018  060E                     	;# 
  5019  060F                     	;# 
  5020  0610                     	;# 
  5021  0611                     	;# 
  5022  0612                     	;# 
  5023  0613                     	;# 
  5024  0614                     	;# 
  5025  0616                     	;# 
  5026  0617                     	;# 
  5027  0618                     	;# 
  5028  0619                     	;# 
  5029  061A                     	;# 
  5030  061B                     	;# 
  5031  061C                     	;# 
  5032  061D                     	;# 
  5033  061E                     	;# 
  5034  068C                     	;# 
  5035  068D                     	;# 
  5036  068E                     	;# 
  5037  068F                     	;# 
  5038  0690                     	;# 
  5039  0691                     	;# 
  5040  0692                     	;# 
  5041  0693                     	;# 
  5042  0694                     	;# 
  5043  070C                     	;# 
  5044  070D                     	;# 
  5045  070E                     	;# 
  5046  070F                     	;# 
  5047  0710                     	;# 
  5048  0711                     	;# 
  5049  0712                     	;# 
  5050  0713                     	;# 
  5051  0714                     	;# 
  5052  0716                     	;# 
  5053  0717                     	;# 
  5054  0718                     	;# 
  5055  0719                     	;# 
  5056  071A                     	;# 
  5057  071B                     	;# 
  5058  071C                     	;# 
  5059  071D                     	;# 
  5060  071E                     	;# 
  5061  0796                     	;# 
  5062  0797                     	;# 
  5063  0798                     	;# 
  5064  0799                     	;# 
  5065  079A                     	;# 
  5066  079B                     	;# 
  5067  080C                     	;# 
  5068  080D                     	;# 
  5069  080E                     	;# 
  5070  080F                     	;# 
  5071  0810                     	;# 
  5072  0811                     	;# 
  5073  0812                     	;# 
  5074  0813                     	;# 
  5075  0814                     	;# 
  5076  081A                     	;# 
  5077  081B                     	;# 
  5078  081C                     	;# 
  5079  081D                     	;# 
  5080  081E                     	;# 
  5081  081F                     	;# 
  5082  088C                     	;# 
  5083  088D                     	;# 
  5084  088E                     	;# 
  5085  088F                     	;# 
  5086  0890                     	;# 
  5087  0891                     	;# 
  5088  0892                     	;# 
  5089  0893                     	;# 
  5090  0895                     	;# 
  5091  0896                     	;# 
  5092  0897                     	;# 
  5093  0898                     	;# 
  5094  0899                     	;# 
  5095  089A                     	;# 
  5096  089B                     	;# 
  5097  090C                     	;# 
  5098  090E                     	;# 
  5099  090F                     	;# 
  5100  091F                     	;# 
  5101  091F                     	;# 
  5102  098F                     	;# 
  5103  098F                     	;# 
  5104  0990                     	;# 
  5105  0991                     	;# 
  5106  0992                     	;# 
  5107  0993                     	;# 
  5108  0994                     	;# 
  5109  0995                     	;# 
  5110  0996                     	;# 
  5111  0997                     	;# 
  5112  0E0F                     	;# 
  5113  0E10                     	;# 
  5114  0E11                     	;# 
  5115  0E12                     	;# 
  5116  0E13                     	;# 
  5117  0E14                     	;# 
  5118  0E15                     	;# 
  5119  0E16                     	;# 
  5120  0E17                     	;# 
  5121  0E18                     	;# 
  5122  0E19                     	;# 
  5123  0E1A                     	;# 
  5124  0E1B                     	;# 
  5125  0E1C                     	;# 
  5126  0E1D                     	;# 
  5127  0E1E                     	;# 
  5128  0E1F                     	;# 
  5129  0E20                     	;# 
  5130  0E21                     	;# 
  5131  0E22                     	;# 
  5132  0E23                     	;# 
  5133  0E24                     	;# 
  5134  0E25                     	;# 
  5135  0E26                     	;# 
  5136  0E27                     	;# 
  5137  0E28                     	;# 
  5138  0E29                     	;# 
  5139  0E2A                     	;# 
  5140  0E2B                     	;# 
  5141  0E2C                     	;# 
  5142  0E2D                     	;# 
  5143  0E2E                     	;# 
  5144  0E2F                     	;# 
  5145  0E30                     	;# 
  5146  0E31                     	;# 
  5147  0E32                     	;# 
  5148  0E33                     	;# 
  5149  0E34                     	;# 
  5150  0E35                     	;# 
  5151  0E36                     	;# 
  5152  0E37                     	;# 
  5153  0E8F                     	;# 
  5154  0E90                     	;# 
  5155  0E91                     	;# 
  5156  0E92                     	;# 
  5157  0E93                     	;# 
  5158  0E94                     	;# 
  5159  0E95                     	;# 
  5160  0E96                     	;# 
  5161  0E97                     	;# 
  5162  0E9C                     	;# 
  5163  0E9D                     	;# 
  5164  0E9E                     	;# 
  5165  0EA1                     	;# 
  5166  0EA2                     	;# 
  5167  0EA3                     	;# 
  5168  0EA4                     	;# 
  5169  0EA5                     	;# 
  5170  0EA9                     	;# 
  5171  0EAA                     	;# 
  5172  0EAB                     	;# 
  5173  0EAC                     	;# 
  5174  0EB1                     	;# 
  5175  0EB2                     	;# 
  5176  0EB3                     	;# 
  5177  0EB8                     	;# 
  5178  0EB9                     	;# 
  5179  0EBA                     	;# 
  5180  0EBB                     	;# 
  5181  0EBC                     	;# 
  5182  0EBD                     	;# 
  5183  0EBE                     	;# 
  5184  0EC3                     	;# 
  5185  0EC5                     	;# 
  5186  0EC6                     	;# 
  5187  0EC7                     	;# 
  5188  0EC8                     	;# 
  5189  0EC9                     	;# 
  5190  0ECA                     	;# 
  5191  0ECB                     	;# 
  5192  0ECC                     	;# 
  5193  0F10                     	;# 
  5194  0F11                     	;# 
  5195  0F12                     	;# 
  5196  0F13                     	;# 
  5197  0F14                     	;# 
  5198  0F15                     	;# 
  5199  0F16                     	;# 
  5200  0F17                     	;# 
  5201  0F18                     	;# 
  5202  0F19                     	;# 
  5203  0F1A                     	;# 
  5204  0F1B                     	;# 
  5205  0F1C                     	;# 
  5206  0F1D                     	;# 
  5207  0F1E                     	;# 
  5208  0F1F                     	;# 
  5209  0F20                     	;# 
  5210  0F21                     	;# 
  5211  0F22                     	;# 
  5212  0F23                     	;# 
  5213  0F24                     	;# 
  5214  0F25                     	;# 
  5215  0F26                     	;# 
  5216  0F27                     	;# 
  5217  0F38                     	;# 
  5218  0F39                     	;# 
  5219  0F3A                     	;# 
  5220  0F3B                     	;# 
  5221  0F3C                     	;# 
  5222  0F3D                     	;# 
  5223  0F3E                     	;# 
  5224  0F3F                     	;# 
  5225  0F40                     	;# 
  5226  0F41                     	;# 
  5227  0F43                     	;# 
  5228  0F44                     	;# 
  5229  0F45                     	;# 
  5230  0F46                     	;# 
  5231  0F47                     	;# 
  5232  0F48                     	;# 
  5233  0F49                     	;# 
  5234  0F4A                     	;# 
  5235  0F4B                     	;# 
  5236  0F4C                     	;# 
  5237  0F4E                     	;# 
  5238  0F4F                     	;# 
  5239  0F50                     	;# 
  5240  0F51                     	;# 
  5241  0F52                     	;# 
  5242  0F53                     	;# 
  5243  0F54                     	;# 
  5244  0F55                     	;# 
  5245  0F56                     	;# 
  5246  0F57                     	;# 
  5247  0F65                     	;# 
  5248  0F68                     	;# 
  5249  0F69                     	;# 
  5250  0F6A                     	;# 
  5251  0F6B                     	;# 
  5252  0FE4                     	;# 
  5253  0FE5                     	;# 
  5254  0FE6                     	;# 
  5255  0FE7                     	;# 
  5256  0FE8                     	;# 
  5257  0FE9                     	;# 
  5258  0FEA                     	;# 
  5259  0FEB                     	;# 
  5260  0FED                     	;# 
  5261  0FEE                     	;# 
  5262  0FEF                     	;# 
  5263                           
  5264                           	psect	idataBANK1
  5265  15D2                     __pidataBANK1:	
  5266                           
  5267                           ;initializer for _setpoint
  5268  15D2  3466               	retlw	102
  5269  15D3  3408               	retlw	8
  5270  15D4  340B               	retlw	11
  5271  15D5  3402               	retlw	2
  5272                           
  5273                           ;initializer for _pidMaxOutput
  5274  15D6  34FF               	retlw	255
  5275  15D7  3403               	retlw	3
  5276                           
  5277                           ;initializer for _Kd
  5278  15D8  3414               	retlw	20
  5279  15D9  3400               	retlw	0
  5280                           
  5281                           ;initializer for _Ki
  5282  15DA  3401               	retlw	1
  5283  15DB  3400               	retlw	0
  5284                           
  5285                           ;initializer for _Kp
  5286  15DC  3403               	retlw	3
  5287  15DD  3400               	retlw	0
  5288                           
  5289                           ;initializer for _loop
  5290  15DE  3440               	retlw	64
  5291                           
  5292                           	psect	idataBANK2
  5293  16E0                     __pidataBANK2:	
  5294                           
  5295                           ;initializer for ___cgram
  5296  16E0  340C               	retlw	12
  5297  16E1  3412               	retlw	18
  5298  16E2  3412               	retlw	18
  5299  16E3  340C               	retlw	12
  5300  16E4  3400               	retlw	0
  5301  16E5  3400               	retlw	0
  5302  16E6  3400               	retlw	0
  5303  16E7  3400               	retlw	0
  5304  16E8  3408               	retlw	8
  5305  16E9  3404               	retlw	4
  5306  16EA  3402               	retlw	2
  5307  16EB  341F               	retlw	31
  5308  16EC  3402               	retlw	2
  5309  16ED  3404               	retlw	4
  5310  16EE  3408               	retlw	8
  5311  16EF  3400               	retlw	0
  5312                           
  5313                           ;initializer for _desc
  5314  16F0  3470               	retlw	low (STR_1| (0+32768))
  5315  16F1  3498               	retlw	high (STR_1| (0+32768))
  5316  16F2  347B               	retlw	low (STR_2| (0+32768))
  5317  16F3  3498               	retlw	high (STR_2| (0+32768))
  5318                           
  5319                           ;initializer for _highRangeSet
  5320  16F4  34BE               	retlw	190
  5321  16F5  340A               	retlw	10
  5322  16F6  34FF               	retlw	255
  5323  16F7  3403               	retlw	3
  5324                           
  5325                           ;initializer for _lowRangeSet
  5326  16F8  34EE               	retlw	238
  5327  16F9  3402               	retlw	2
  5328  16FA  340A               	retlw	10
  5329  16FB  3400               	retlw	0
  5330                           
  5331                           	psect	stringtext1
  5332  1886                     __pstringtext1:	
  5333  1886                     _channels:	
  5334  1886  3401               	retlw	1
  5335  1887  3403               	retlw	3
  5336  1888                     __end_of_channels:	
  5337                           
  5338                           	psect	stringtext2
  5339  1800                     __pstringtext2:	
  5340  1800                     log@coeff:	
  5341  1800  3400               	retlw	0
  5342  1801  3400               	retlw	0
  5343  1802  3400               	retlw	0
  5344  1803  3400               	retlw	0
  5345  1804  3480               	retlw	128
  5346  1805  343F               	retlw	63
  5347  1806  34F0               	retlw	240
  5348  1807  34FF               	retlw	255
  5349  1808  34BE               	retlw	190
  5350  1809  34E2               	retlw	226
  5351  180A  34A9               	retlw	169
  5352  180B  343E               	retlw	62
  5353  180C  3483               	retlw	131
  5354  180D  3476               	retlw	118
  5355  180E  34BE               	retlw	190
  5356  180F  34AE               	retlw	174
  5357  1810  342B               	retlw	43
  5358  1811  343E               	retlw	62
  5359  1812  343C               	retlw	60
  5360  1813  34C3               	retlw	195
  5361  1814  34BD               	retlw	189
  5362  1815  34D2               	retlw	210
  5363  1816  3413               	retlw	19
  5364  1817  343D               	retlw	61
  5365  1818  3478               	retlw	120
  5366  1819  34D3               	retlw	211
  5367  181A  34BB               	retlw	187
  5368  181B                     __end_oflog@coeff:	
  5369  0013                     _TRISC	set	19
  5370  0012                     _TRISB	set	18
  5371  0011                     _TRISA	set	17
  5372  0018                     _LATC	set	24
  5373  0017                     _LATB	set	23
  5374  0016                     _LATA	set	22
  5375  005F                     _GIE	set	95
  5376  006A                     _RB2	set	106
  5377  0068                     _RB0	set	104
  5378  0069                     _RB1	set	105
  5379  0062                     _RA2	set	98
  5380  0060                     _RA0	set	96
  5381  0071                     _RC1	set	113
  5382  0070                     _RC0	set	112
  5383  0066                     _RA6	set	102
  5384  0067                     _RA7	set	103
  5385  0093                     _ADCON0	set	147
  5386  009D                     _ADACQ	set	157
  5387  009C                     _ADPRE	set	156
  5388  009B                     _ADCAP	set	155
  5389  009A                     _ADREF	set	154
  5390  0098                     _ADCLK	set	152
  5391  0097                     _ADSTAT	set	151
  5392  0099                     _ADACT	set	153
  5393  0096                     _ADCON3	set	150
  5394  0095                     _ADCON2	set	149
  5395  0094                     _ADCON1	set	148
  5396  008C                     _ADRESL	set	140
  5397  008D                     _ADRESH	set	141
  5398  0093                     _ADCON0bits	set	147
  5399  009E                     _ADPCH	set	158
  5400  0113                     _ADSTPTH	set	275
  5401  0112                     _ADSTPTL	set	274
  5402  0111                     _ADUTHH	set	273
  5403  0110                     _ADUTHL	set	272
  5404  010F                     _ADLTHH	set	271
  5405  010E                     _ADLTHL	set	270
  5406  010D                     _ADRPT	set	269
  5407  021F                     _CCPTMRS1bits	set	543
  5408  028E                     _T2CONbits	set	654
  5409  028C                     _T2TMR	set	652
  5410  028D                     _T2PR	set	653
  5411  0291                     _T2RST	set	657
  5412  028F                     _T2HLT	set	655
  5413  0290                     _T2CLKCON	set	656
  5414  028E                     _T2CON	set	654
  5415  0390                     _PWM7DCL	set	912
  5416  0391                     _PWM7DCH	set	913
  5417  0392                     _PWM7CON	set	914
  5418  038C                     _PWM6DCL	set	908
  5419  038D                     _PWM6DCH	set	909
  5420  038E                     _PWM6CON	set	910
  5421  0710                     _PIR4bits	set	1808
  5422  0716                     _PIE0bits	set	1814
  5423  0892                     _OSCTUNE	set	2194
  5424  0893                     _OSCFRQ	set	2195
  5425  0891                     _OSCEN	set	2193
  5426  088F                     _OSCCON3	set	2191
  5427  088D                     _OSCCON1	set	2189
  5428  090C                     _FVRCON	set	2316
  5429  0E8F                     _PPSLOCKbits	set	3727
  5430  0E8F                     _PPSLOCK	set	3727
  5431  0F23                     _RC3PPS	set	3875
  5432  0F22                     _RC2PPS	set	3874
  5433  0F4E                     _ANSELC	set	3918
  5434  0F43                     _ANSELB	set	3907
  5435  0F38                     _ANSELA	set	3896
  5436  0F65                     _WPUE	set	3941
  5437  0F4F                     _WPUC	set	3919
  5438  0F44                     _WPUB	set	3908
  5439  0F39                     _WPUA	set	3897
  5440  181B                     STR_6:	
  5441  181B  3441               	retlw	65	;'A'
  5442  181C  346C               	retlw	108	;'l'
  5443  181D  3474               	retlw	116	;'t'
  5444  181E  3465               	retlw	101	;'e'
  5445  181F  3472               	retlw	114	;'r'
  5446  1820  3420               	retlw	32	;' '
  5447  1821  3477               	retlw	119	;'w'
  5448  1822  3469               	retlw	105	;'i'
  5449  1823  3474               	retlw	116	;'t'
  5450  1824  3468               	retlw	104	;'h'
  5451  1825  3420               	retlw	32	;' '
  5452  1826  3455               	retlw	85	;'U'
  5453  1827  3470               	retlw	112	;'p'
  5454  1828  342F               	retlw	47	;'/'
  5455  1829  3444               	retlw	68	;'D'
  5456  182A  346E               	retlw	110	;'n'
  5457  182B  3400               	retlw	0
  5458                           
  5459                           	psect	stringtext3
  5460  182C                     __pstringtext3:	
  5461  182C                     STR_7:	
  5462  182C  3445               	retlw	69	;'E'
  5463  182D  346E               	retlw	110	;'n'
  5464  182E  3474               	retlw	116	;'t'
  5465  182F  3465               	retlw	101	;'e'
  5466  1830  3472               	retlw	114	;'r'
  5467  1831  3420               	retlw	32	;' '
  5468  1832  344B               	retlw	75	;'K'
  5469  1833  3465               	retlw	101	;'e'
  5470  1834  3479               	retlw	121	;'y'
  5471  1835  3420               	retlw	32	;' '
  5472  1836  3474               	retlw	116	;'t'
  5473  1837  346F               	retlw	111	;'o'
  5474  1838  3420               	retlw	32	;' '
  5475  1839  3453               	retlw	83	;'S'
  5476  183A  3465               	retlw	101	;'e'
  5477  183B  3474               	retlw	116	;'t'
  5478  183C  3400               	retlw	0
  5479                           
  5480                           	psect	stringtext4
  5481  183D                     __pstringtext4:	
  5482  183D                     STR_5:	
  5483  183D  3420               	retlw	32	;' '
  5484  183E  3420               	retlw	32	;' '
  5485  183F  3420               	retlw	32	;' '
  5486  1840  3447               	retlw	71	;'G'
  5487  1841  346F               	retlw	111	;'o'
  5488  1842  346F               	retlw	111	;'o'
  5489  1843  3464               	retlw	100	;'d'
  5490  1844  342D               	retlw	45	;'-'
  5491  1845  3442               	retlw	66	;'B'
  5492  1846  3479               	retlw	121	;'y'
  5493  1847  3465               	retlw	101	;'e'
  5494  1848  3421               	retlw	33	;'!'
  5495  1849  3421               	retlw	33	;'!'
  5496  184A  3420               	retlw	32	;' '
  5497  184B  3420               	retlw	32	;' '
  5498  184C  3420               	retlw	32	;' '
  5499  184D  3400               	retlw	0
  5500                           
  5501                           	psect	stringtext5
  5502  184E                     __pstringtext5:	
  5503  184E                     STR_4:	
  5504  184E  3445               	retlw	69	;'E'
  5505  184F  346E               	retlw	110	;'n'
  5506  1850  3474               	retlw	116	;'t'
  5507  1851  3465               	retlw	101	;'e'
  5508  1852  3472               	retlw	114	;'r'
  5509  1853  3420               	retlw	32	;' '
  5510  1854  3474               	retlw	116	;'t'
  5511  1855  346F               	retlw	111	;'o'
  5512  1856  3420               	retlw	32	;' '
  5513  1857  3453               	retlw	83	;'S'
  5514  1858  3465               	retlw	101	;'e'
  5515  1859  346C               	retlw	108	;'l'
  5516  185A  3465               	retlw	101	;'e'
  5517  185B  3463               	retlw	99	;'c'
  5518  185C  3474               	retlw	116	;'t'
  5519  185D  3420               	retlw	32	;' '
  5520  185E  3400               	retlw	0
  5521                           
  5522                           	psect	stringtext6
  5523  185F                     __pstringtext6:	
  5524  185F                     STR_3:	
  5525  185F  3455               	retlw	85	;'U'
  5526  1860  3470               	retlw	112	;'p'
  5527  1861  342F               	retlw	47	;'/'
  5528  1862  3444               	retlw	68	;'D'
  5529  1863  346F               	retlw	111	;'o'
  5530  1864  3477               	retlw	119	;'w'
  5531  1865  346E               	retlw	110	;'n'
  5532  1866  3420               	retlw	32	;' '
  5533  1867  3474               	retlw	116	;'t'
  5534  1868  346F               	retlw	111	;'o'
  5535  1869  3420               	retlw	32	;' '
  5536  186A  3441               	retlw	65	;'A'
  5537  186B  346C               	retlw	108	;'l'
  5538  186C  3474               	retlw	116	;'t'
  5539  186D  3465               	retlw	101	;'e'
  5540  186E  3472               	retlw	114	;'r'
  5541  186F  3400               	retlw	0
  5542                           
  5543                           	psect	stringtext7
  5544  1870                     __pstringtext7:	
  5545  1870                     STR_1:	
  5546  1870  3420               	retlw	32	;' '
  5547  1871  3450               	retlw	80	;'P'
  5548  1872  3469               	retlw	105	;'i'
  5549  1873  3474               	retlw	116	;'t'
  5550  1874  3420               	retlw	32	;' '
  5551  1875  3454               	retlw	84	;'T'
  5552  1876  3465               	retlw	101	;'e'
  5553  1877  346D               	retlw	109	;'m'
  5554  1878  3470               	retlw	112	;'p'
  5555  1879  343A               	retlw	58	;':'
  5556  187A  3400               	retlw	0
  5557                           
  5558                           	psect	stringtext8
  5559  187B                     __pstringtext8:	
  5560  187B                     STR_2:	
  5561  187B  3442               	retlw	66	;'B'
  5562  187C  3461               	retlw	97	;'a'
  5563  187D  3463               	retlw	99	;'c'
  5564  187E  346B               	retlw	107	;'k'
  5565  187F  344C               	retlw	76	;'L'
  5566  1880  3469               	retlw	105	;'i'
  5567  1881  3467               	retlw	103	;'g'
  5568  1882  3468               	retlw	104	;'h'
  5569  1883  3474               	retlw	116	;'t'
  5570  1884  343A               	retlw	58	;':'
  5571  1885  3400               	retlw	0
  5572                           
  5573                           	psect	stringtext9
  5574  0000                     __pstringtext9:	
  5575                           
  5576                           ; #config settings
  5577  0000                     
  5578                           	psect	cinit
  5579  07C6                     start_initialization:	
  5580  07C6                     __initialization:	
  5581                           
  5582                           ; Initialize objects allocated to BANK1
  5583  07C6  30D2               	movlw	low __pidataBANK1
  5584  07C7  0084               	movwf	4
  5585  07C8  3095               	movlw	(high __pidataBANK1)| (0+128)
  5586  07C9  0085               	movwf	5
  5587  07CA  30E2               	movlw	low __pdataBANK1
  5588  07CB  0086               	movwf	6
  5589  07CC  3000               	movlw	high __pdataBANK1
  5590  07CD  0087               	movwf	7
  5591  07CE  300D               	movlw	13
  5592  07CF  3188  2001  3187   	fcall	init_ram
  5593                           
  5594                           ; Initialize objects allocated to BANK2
  5595  07D2  30E0               	movlw	low __pidataBANK2
  5596  07D3  0084               	movwf	4
  5597  07D4  3096               	movlw	(high __pidataBANK2)| (0+128)
  5598  07D5  0085               	movwf	5
  5599  07D6  303D               	movlw	low __pdataBANK2
  5600  07D7  0086               	movwf	6
  5601  07D8  3001               	movlw	high __pdataBANK2
  5602  07D9  0087               	movwf	7
  5603  07DA  301C               	movlw	28
  5604  07DB  3188  2001  3187   	fcall	init_ram
  5605                           
  5606                           ; Clear objects allocated to BANK0
  5607  07DE  3068               	movlw	low __pbssBANK0
  5608  07DF  0084               	movwf	4
  5609  07E0  3000               	movlw	high __pbssBANK0
  5610  07E1  0085               	movwf	5
  5611  07E2  3007               	movlw	7
  5612  07E3  3195  25C4  3187   	fcall	clear_ram0
  5613                           
  5614                           ; Clear objects allocated to BANK1
  5615  07E6  30C9               	movlw	low __pbssBANK1
  5616  07E7  0084               	movwf	4
  5617  07E8  3000               	movlw	high __pbssBANK1
  5618  07E9  0085               	movwf	5
  5619  07EA  3019               	movlw	25
  5620  07EB  3195  25C4  3187   	fcall	clear_ram0
  5621                           
  5622                           ; Clear objects allocated to BANK2
  5623  07EE  3020               	movlw	low __pbssBANK2
  5624  07EF  0084               	movwf	4
  5625  07F0  3001               	movlw	high __pbssBANK2
  5626  07F1  0085               	movwf	5
  5627  07F2  301D               	movlw	29
  5628  07F3  3195  25C4  3187   	fcall	clear_ram0
  5629                           
  5630                           ; Clear objects allocated to BANK3
  5631  07F6  30A0               	movlw	low __pbssBANK3
  5632  07F7  0084               	movwf	4
  5633  07F8  3001               	movlw	high __pbssBANK3
  5634  07F9  0085               	movwf	5
  5635  07FA  3050               	movlw	80
  5636  07FB  3195  25C4         	fcall	clear_ram0
  5637  07FD                     end_of_initialization:	
  5638                           ;End of C runtime variable initialization code
  5639                           
  5640  07FD                     __end_of__initialization:	
  5641  07FD  0020               	movlb	0
  5642  07FE  3185  2D61         	ljmp	_main	;jump to C main() function
  5643                           
  5644                           	psect	bssBANK0
  5645  0068                     __pbssBANK0:	
  5646  0068                     _pidIntegrated:	
  5647  0068                     	ds	2
  5648  006A                     _error:	
  5649  006A                     	ds	2
  5650  006C                     _choice:	
  5651  006C                     	ds	1
  5652  006D                     _key:	
  5653  006D                     	ds	1
  5654  006E                     _delayCount:	
  5655  006E                     	ds	1
  5656                           
  5657                           	psect	bssBANK1
  5658  00C9                     __pbssBANK1:	
  5659  00C9                     _pidMinOutput:	
  5660  00C9                     	ds	2
  5661  00CB                     _D_PrevError:	
  5662  00CB                     	ds	2
  5663  00CD                     _oldError:	
  5664  00CD                     	ds	2
  5665  00CF                     _integralValue:	
  5666  00CF                     	ds	2
  5667  00D1                     _Result:	
  5668  00D1                     	ds	2
  5669  00D3                     _derivativeValue:	
  5670  00D3                     	ds	2
  5671  00D5                     _errorValue:	
  5672  00D5                     	ds	2
  5673  00D7                     _lastError:	
  5674  00D7                     	ds	2
  5675  00D9                     _timer:	
  5676  00D9                     	ds	2
  5677  00DB                     _menuDelay:	
  5678  00DB                     	ds	2
  5679  00DD                     _sampleIndex:	
  5680  00DD                     	ds	2
  5681  00DF                     pid@loop:	
  5682  00DF                     	ds	1
  5683  00E0                     _timer2:	
  5684  00E0                     	ds	1
  5685  00E1                     _testKey:	
  5686  00E1                     	ds	1
  5687                           
  5688                           	psect	dataBANK1
  5689  00E2                     __pdataBANK1:	
  5690  00E2                     _setpoint:	
  5691  00E2                     	ds	4
  5692  00E6                     _pidMaxOutput:	
  5693  00E6                     	ds	2
  5694  00E8                     _Kd:	
  5695  00E8                     	ds	2
  5696  00EA                     _Ki:	
  5697  00EA                     	ds	2
  5698  00EC                     _Kp:	
  5699  00EC                     	ds	2
  5700  00EE                     _loop:	
  5701  00EE                     	ds	1
  5702                           
  5703                           	psect	bssBANK2
  5704  0120                     __pbssBANK2:	
  5705  0120                     main@F14372:	
  5706  0120                     	ds	10
  5707  012A                     _totals:	
  5708  012A                     	ds	8
  5709  0132                     LCD_Write_Int@F14404:	
  5710  0132                     	ds	5
  5711  0137                     main@F14366:	
  5712  0137                     	ds	4
  5713  013B                     _errno:	
  5714  013B                     	ds	2
  5715                           
  5716                           	psect	dataBANK2
  5717  013D                     __pdataBANK2:	
  5718  013D                     ___cgram:	
  5719  013D                     	ds	16
  5720  014D                     _desc:	
  5721  014D                     	ds	4
  5722  0151                     _highRangeSet:	
  5723  0151                     	ds	4
  5724  0155                     _lowRangeSet:	
  5725  0155                     	ds	4
  5726                           
  5727                           	psect	bssBANK3
  5728  01A0                     __pbssBANK3:	
  5729  01A0                     _samples:	
  5730  01A0                     	ds	80
  5731                           
  5732                           	psect	inittext
  5733  0801                     init_ram:	
  5734  0801  00FE               	movwf	126
  5735  0802                     initloop:	
  5736  0802  0012               	moviw fsr0++
  5737  0803  001E               	movwi fsr1++
  5738  0804  0BFE               	decfsz	126,f
  5739  0805  2802               	goto	initloop
  5740  0806  3400               	retlw	0
  5741                           
  5742                           	psect	clrtext
  5743  15C4                     clear_ram0:	
  5744                           ;	Called with FSR0 containing the base address, and
  5745                           ;	WREG with the size to clear
  5746                           
  5747  15C4  0064               	clrwdt	;clear the watchdog before getting into this loop
  5748  15C5                     clrloop0:	
  5749  15C5  0180               	clrf	0	;clear RAM location pointed to by FSR
  5750  15C6  3101               	addfsr 0,1
  5751  15C7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5752  15C8  2DC5               	goto	clrloop0	;have we reached the end yet?
  5753  15C9  3400               	retlw	0	;all done for this memory range, return
  5754                           
  5755                           	psect	cstackBANK1
  5756  00A0                     __pcstackBANK1:	
  5757  00A0                     ??_main:	
  5758                           
  5759                           ; 1 bytes @ 0x0
  5760  00A0                     	ds	10
  5761  00AA                     main@x:	
  5762                           
  5763                           ; 1 bytes @ 0xA
  5764  00AA                     	ds	1
  5765  00AB                     main@outputSamples:	
  5766                           
  5767                           ; 10 bytes @ 0xB
  5768  00AB                     	ds	10
  5769  00B5                     main@output:	
  5770                           
  5771                           ; 2 bytes @ 0x15
  5772  00B5                     	ds	2
  5773  00B7                     main@holdOutput:	
  5774                           
  5775                           ; 1 bytes @ 0x17
  5776  00B7                     	ds	1
  5777  00B8                     main@lidOpenCount:	
  5778                           
  5779                           ; 1 bytes @ 0x18
  5780  00B8                     	ds	1
  5781  00B9                     main@lastTemperature:	
  5782                           
  5783                           ; 2 bytes @ 0x19
  5784  00B9                     	ds	2
  5785  00BB                     main@currentTemperature:	
  5786                           
  5787                           ; 2 bytes @ 0x1B
  5788  00BB                     	ds	2
  5789  00BD                     main@outputTotal:	
  5790                           
  5791                           ; 4 bytes @ 0x1D
  5792  00BD                     	ds	4
  5793  00C1                     main@analogs:	
  5794                           
  5795                           ; 4 bytes @ 0x21
  5796  00C1                     	ds	4
  5797  00C5                     main@outputIndex:	
  5798                           
  5799                           ; 1 bytes @ 0x25
  5800  00C5                     	ds	1
  5801  00C6                     main@j:	
  5802                           
  5803                           ; 1 bytes @ 0x26
  5804  00C6                     	ds	1
  5805  00C7                     main@viperFanOut:	
  5806                           
  5807                           ; 2 bytes @ 0x27
  5808  00C7                     	ds	2
  5809                           
  5810                           	psect	cstackCOMMON
  5811  0070                     __pcstackCOMMON:	
  5812  0070                     ?___ftge:	
  5813  0070                     ?_LCD_Cmd:	
  5814                           ; 1 bit 
  5815                           
  5816  0070                     ?_LCD_Write_Char:	
  5817                           ; 1 bytes @ 0x0
  5818                           
  5819  0070                     ?_PWM7_LoadDutyValue:	
  5820                           ; 1 bytes @ 0x0
  5821                           
  5822  0070                     ?_OSCILLATOR_Initialize:	
  5823                           ; 1 bytes @ 0x0
  5824                           
  5825  0070                     ??_OSCILLATOR_Initialize:	
  5826                           ; 1 bytes @ 0x0
  5827                           
  5828  0070                     ?_TMR2_Initialize:	
  5829                           ; 1 bytes @ 0x0
  5830                           
  5831  0070                     ??_TMR2_Initialize:	
  5832                           ; 1 bytes @ 0x0
  5833                           
  5834  0070                     ?_ADCC_Initialize:	
  5835                           ; 1 bytes @ 0x0
  5836                           
  5837  0070                     ??_ADCC_Initialize:	
  5838                           ; 1 bytes @ 0x0
  5839                           
  5840  0070                     ?_InitCustomChars:	
  5841                           ; 1 bytes @ 0x0
  5842                           
  5843  0070                     ?_LCD_Port:	
  5844                           ; 1 bytes @ 0x0
  5845                           
  5846  0070                     ??_LCD_Port:	
  5847                           ; 1 bytes @ 0x0
  5848                           
  5849  0070                     ?_LCD_Clear:	
  5850                           ; 1 bytes @ 0x0
  5851                           
  5852  0070                     ?_LCD_Init:	
  5853                           ; 1 bytes @ 0x0
  5854                           
  5855  0070                     ?_readKey:	
  5856                           ; 1 bytes @ 0x0
  5857                           
  5858  0070                     ??_readKey:	
  5859                           ; 1 bytes @ 0x0
  5860                           
  5861  0070                     ?_menuChoice:	
  5862                           ; 1 bytes @ 0x0
  5863                           
  5864  0070                     ?_PIN_MANAGER_Initialize:	
  5865                           ; 1 bytes @ 0x0
  5866                           
  5867  0070                     ??_PIN_MANAGER_Initialize:	
  5868                           ; 1 bytes @ 0x0
  5869                           
  5870  0070                     ?_PWM_Initialize:	
  5871                           ; 1 bytes @ 0x0
  5872                           
  5873  0070                     ??_PWM_Initialize:	
  5874                           ; 1 bytes @ 0x0
  5875                           
  5876  0070                     ?_PWM6_LoadDutyValue:	
  5877                           ; 1 bytes @ 0x0
  5878                           
  5879  0070                     ?_SYSTEM_Initialize:	
  5880                           ; 1 bytes @ 0x0
  5881                           
  5882  0070                     ?_main:	
  5883                           ; 1 bytes @ 0x0
  5884                           
  5885  0070                     ?___bmul:	
  5886                           ; 1 bytes @ 0x0
  5887                           
  5888  0070                     ?_ADCRead:	
  5889                           ; 1 bytes @ 0x0
  5890                           
  5891  0070                     ?___wmul:	
  5892                           ; 2 bytes @ 0x0
  5893                           
  5894  0070                     ?___awdiv:	
  5895                           ; 2 bytes @ 0x0
  5896                           
  5897  0070                     ?___awmod:	
  5898                           ; 2 bytes @ 0x0
  5899                           
  5900  0070                     ?___ftpack:	
  5901                           ; 2 bytes @ 0x0
  5902                           
  5903  0070                     ?_frexp:	
  5904                           ; 3 bytes @ 0x0
  5905                           
  5906  0070                     ?___aldiv:	
  5907                           ; 3 bytes @ 0x0
  5908                           
  5909  0070                     ?___fttol:	
  5910                           ; 4 bytes @ 0x0
  5911                           
  5912  0070                     LCD_Port@a:	
  5913                           ; 4 bytes @ 0x0
  5914                           
  5915  0070                     PIN_MANAGER_Initialize@state:	
  5916                           ; 1 bytes @ 0x0
  5917                           
  5918  0070                     ___bmul@multiplicand:	
  5919                           ; 1 bytes @ 0x0
  5920                           
  5921  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  5922                           ; 1 bytes @ 0x0
  5923                           
  5924  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5925                           ; 2 bytes @ 0x0
  5926                           
  5927  0070                     ___wmul@multiplier:	
  5928                           ; 2 bytes @ 0x0
  5929                           
  5930  0070                     ___awdiv@divisor:	
  5931                           ; 2 bytes @ 0x0
  5932                           
  5933  0070                     ___awmod@divisor:	
  5934                           ; 2 bytes @ 0x0
  5935                           
  5936  0070                     ___ftpack@arg:	
  5937                           ; 2 bytes @ 0x0
  5938                           
  5939  0070                     ___ftge@ff1:	
  5940                           ; 3 bytes @ 0x0
  5941                           
  5942  0070                     ___fttol@f1:	
  5943                           ; 3 bytes @ 0x0
  5944                           
  5945  0070                     frexp@value:	
  5946                           ; 3 bytes @ 0x0
  5947                           
  5948  0070                     ___aldiv@divisor:	
  5949                           ; 3 bytes @ 0x0
  5950                           
  5951                           
  5952                           ; 4 bytes @ 0x0
  5953  0070                     	ds	1
  5954  0071                     ??_LCD_Cmd:	
  5955  0071                     ??_LCD_Write_Char:	
  5956                           ; 1 bytes @ 0x1
  5957                           
  5958  0071                     ??___bmul:	
  5959                           ; 1 bytes @ 0x1
  5960                           
  5961                           
  5962                           ; 1 bytes @ 0x1
  5963  0071                     	ds	1
  5964  0072                     ??_PWM7_LoadDutyValue:	
  5965  0072                     ??_PWM6_LoadDutyValue:	
  5966                           ; 1 bytes @ 0x2
  5967                           
  5968  0072                     LCD_Cmd@a:	
  5969                           ; 1 bytes @ 0x2
  5970                           
  5971  0072                     LCD_Write_Char@temp:	
  5972                           ; 1 bytes @ 0x2
  5973                           
  5974  0072                     ___bmul@product:	
  5975                           ; 1 bytes @ 0x2
  5976                           
  5977  0072                     ___wmul@multiplicand:	
  5978                           ; 1 bytes @ 0x2
  5979                           
  5980  0072                     ___awdiv@dividend:	
  5981                           ; 2 bytes @ 0x2
  5982                           
  5983  0072                     ___awmod@dividend:	
  5984                           ; 2 bytes @ 0x2
  5985                           
  5986                           
  5987                           ; 2 bytes @ 0x2
  5988  0072                     	ds	1
  5989  0073                     ??_ADCRead:	
  5990  0073                     ??_LCD_Clear:	
  5991                           ; 1 bytes @ 0x3
  5992                           
  5993  0073                     ?_LCD_Set_Cursor:	
  5994                           ; 1 bytes @ 0x3
  5995                           
  5996  0073                     ??_LCD_Init:	
  5997                           ; 1 bytes @ 0x3
  5998                           
  5999  0073                     ADCRead@channel:	
  6000                           ; 1 bytes @ 0x3
  6001                           
  6002  0073                     LCD_Set_Cursor@y:	
  6003                           ; 1 bytes @ 0x3
  6004                           
  6005  0073                     LCD_Write_Char@y:	
  6006                           ; 1 bytes @ 0x3
  6007                           
  6008  0073                     ___bmul@multiplier:	
  6009                           ; 1 bytes @ 0x3
  6010                           
  6011  0073                     ___ftpack@exp:	
  6012                           ; 1 bytes @ 0x3
  6013                           
  6014  0073                     frexp@eptr:	
  6015                           ; 1 bytes @ 0x3
  6016                           
  6017  0073                     ___ftge@ff2:	
  6018                           ; 1 bytes @ 0x3
  6019                           
  6020                           
  6021                           ; 3 bytes @ 0x3
  6022  0073                     	ds	1
  6023  0074                     ??_frexp:	
  6024  0074                     ??_LCD_Set_Cursor:	
  6025                           ; 1 bytes @ 0x4
  6026                           
  6027  0074                     ??___wmul:	
  6028                           ; 1 bytes @ 0x4
  6029                           
  6030  0074                     ??___awdiv:	
  6031                           ; 1 bytes @ 0x4
  6032                           
  6033  0074                     ??___awmod:	
  6034                           ; 1 bytes @ 0x4
  6035                           
  6036  0074                     ??___fttol:	
  6037                           ; 1 bytes @ 0x4
  6038                           
  6039  0074                     LCD_Write_Char@a:	
  6040                           ; 1 bytes @ 0x4
  6041                           
  6042  0074                     ___ftpack@sign:	
  6043                           ; 1 bytes @ 0x4
  6044                           
  6045  0074                     ___wmul@product:	
  6046                           ; 1 bytes @ 0x4
  6047                           
  6048  0074                     ___aldiv@dividend:	
  6049                           ; 2 bytes @ 0x4
  6050                           
  6051                           
  6052                           ; 4 bytes @ 0x4
  6053  0074                     	ds	1
  6054  0075                     ??___ftpack:	
  6055  0075                     ??_InitCustomChars:	
  6056                           ; 1 bytes @ 0x5
  6057                           
  6058  0075                     ?_LCD_Write_String:	
  6059                           ; 1 bytes @ 0x5
  6060                           
  6061  0075                     LCD_Init@style:	
  6062                           ; 1 bytes @ 0x5
  6063                           
  6064  0075                     ___awdiv@counter:	
  6065                           ; 1 bytes @ 0x5
  6066                           
  6067  0075                     ___awmod@counter:	
  6068                           ; 1 bytes @ 0x5
  6069                           
  6070  0075                     LCD_Write_String@a:	
  6071                           ; 1 bytes @ 0x5
  6072                           
  6073                           
  6074                           ; 2 bytes @ 0x5
  6075  0075                     	ds	1
  6076  0076                     ??___ftge:	
  6077  0076                     ?_PID_Calculate:	
  6078                           ; 1 bytes @ 0x6
  6079                           
  6080  0076                     InitCustomChars@i:	
  6081                           ; 2 bytes @ 0x6
  6082                           
  6083  0076                     LCD_Set_Cursor@x:	
  6084                           ; 1 bytes @ 0x6
  6085                           
  6086  0076                     ___awdiv@sign:	
  6087                           ; 1 bytes @ 0x6
  6088                           
  6089  0076                     ___awmod@sign:	
  6090                           ; 1 bytes @ 0x6
  6091                           
  6092  0076                     PID_Calculate@setpoint:	
  6093                           ; 1 bytes @ 0x6
  6094                           
  6095                           
  6096                           ; 2 bytes @ 0x6
  6097  0076                     	ds	1
  6098  0077                     ??_LCD_Write_String:	
  6099  0077                     ??_SYSTEM_Initialize:	
  6100                           ; 1 bytes @ 0x7
  6101                           
  6102  0077                     LCD_Set_Cursor@z:	
  6103                           ; 1 bytes @ 0x7
  6104                           
  6105  0077                     ___awdiv@quotient:	
  6106                           ; 1 bytes @ 0x7
  6107                           
  6108                           
  6109                           ; 2 bytes @ 0x7
  6110  0077                     	ds	1
  6111  0078                     ??___aldiv:	
  6112  0078                     ?___awtoft:	
  6113                           ; 1 bytes @ 0x8
  6114                           
  6115  0078                     LCD_Set_Cursor@w:	
  6116                           ; 3 bytes @ 0x8
  6117                           
  6118  0078                     ___fttol@sign1:	
  6119                           ; 1 bytes @ 0x8
  6120                           
  6121  0078                     LCD_Write_String@i:	
  6122                           ; 1 bytes @ 0x8
  6123                           
  6124  0078                     PID_Calculate@temp:	
  6125                           ; 2 bytes @ 0x8
  6126                           
  6127  0078                     ___awtoft@c:	
  6128                           ; 2 bytes @ 0x8
  6129                           
  6130                           
  6131                           ; 2 bytes @ 0x8
  6132  0078                     	ds	1
  6133  0079                     ?_LCD_Write_Int:	
  6134  0079                     readAnalog@analog_channel:	
  6135                           ; 1 bytes @ 0x9
  6136                           
  6137  0079                     LCD_Set_Cursor@temp:	
  6138                           ; 1 bytes @ 0x9
  6139                           
  6140  0079                     LCD_Write_Int@value:	
  6141                           ; 1 bytes @ 0x9
  6142                           
  6143  0079                     ___fttol@lval:	
  6144                           ; 2 bytes @ 0x9
  6145                           
  6146                           
  6147                           ; 4 bytes @ 0x9
  6148  0079                     	ds	1
  6149  007A                     ??_PID_Calculate:	
  6150  007A                     readAnalog@value:	
  6151                           ; 1 bytes @ 0xA
  6152                           
  6153                           
  6154                           ; 2 bytes @ 0xA
  6155  007A                     	ds	1
  6156  007B                     ??___awtoft:	
  6157  007B                     LCD_Write_Int@fieldLength:	
  6158                           ; 1 bytes @ 0xB
  6159                           
  6160                           
  6161                           ; 1 bytes @ 0xB
  6162  007B                     	ds	1
  6163  007C                     readAnalog@channel:	
  6164  007C                     LCD_Write_Int@numPlaces:	
  6165                           ; 1 bytes @ 0xC
  6166                           
  6167                           
  6168                           ; 1 bytes @ 0xC
  6169  007C                     	ds	1
  6170  007D                     LCD_Write_Int@sign:	
  6171  007D                     ___awtoft@sign:	
  6172                           ; 1 bytes @ 0xD
  6173                           
  6174  007D                     ___fttol@exp1:	
  6175                           ; 1 bytes @ 0xD
  6176                           
  6177                           
  6178                           ; 1 bytes @ 0xD
  6179  007D                     	ds	1
  6180  007E                     ??_eval_poly:	
  6181  007E                     ??_tempCalc:	
  6182                           ; 1 bytes @ 0xE
  6183                           
  6184  007E                     ??___ftsub:	
  6185                           ; 1 bytes @ 0xE
  6186                           
  6187                           
  6188                           	psect	cstackBANK0
  6189  0020                     __pcstackBANK0:	
  6190                           ; 1 bytes @ 0xE
  6191                           
  6192  0020                     ??_LCD_Write_Int:	
  6193  0020                     ?___ftmul:	
  6194                           ; 1 bytes @ 0x0
  6195                           
  6196  0020                     ___aldiv@counter:	
  6197                           ; 3 bytes @ 0x0
  6198                           
  6199  0020                     ___ftmul@f1:	
  6200                           ; 1 bytes @ 0x0
  6201                           
  6202                           
  6203                           ; 3 bytes @ 0x0
  6204  0020                     	ds	1
  6205  0021                     ___aldiv@sign:	
  6206                           
  6207                           ; 1 bytes @ 0x1
  6208  0021                     	ds	1
  6209  0022                     ___aldiv@quotient:	
  6210                           
  6211                           ; 4 bytes @ 0x2
  6212  0022                     	ds	1
  6213  0023                     ___ftmul@f2:	
  6214                           
  6215                           ; 3 bytes @ 0x3
  6216  0023                     	ds	1
  6217  0024                     LCD_Write_Int@str:	
  6218                           
  6219                           ; 5 bytes @ 0x4
  6220  0024                     	ds	2
  6221  0026                     ??___ftmul:	
  6222  0026                     ?_readAnalog:	
  6223                           ; 1 bytes @ 0x6
  6224                           
  6225                           
  6226                           ; 2 bytes @ 0x6
  6227  0026                     	ds	2
  6228  0028                     ??_readAnalog:	
  6229                           
  6230                           ; 1 bytes @ 0x8
  6231  0028                     	ds	1
  6232  0029                     LCD_Write_Int@j:	
  6233                           
  6234                           ; 1 bytes @ 0x9
  6235  0029                     	ds	1
  6236  002A                     LCD_Write_Int@i:	
  6237  002A                     ___ftmul@exp:	
  6238                           ; 1 bytes @ 0xA
  6239                           
  6240                           
  6241                           ; 1 bytes @ 0xA
  6242  002A                     	ds	1
  6243  002B                     ??_menuChoice:	
  6244  002B                     ___ftmul@f3_as_product:	
  6245                           ; 1 bytes @ 0xB
  6246                           
  6247                           
  6248                           ; 3 bytes @ 0xB
  6249  002B                     	ds	3
  6250  002E                     ___ftmul@cntr:	
  6251                           
  6252                           ; 1 bytes @ 0xE
  6253  002E                     	ds	1
  6254  002F                     ___ftmul@sign:	
  6255                           
  6256                           ; 1 bytes @ 0xF
  6257  002F                     	ds	1
  6258  0030                     ?___ftdiv:	
  6259  0030                     ___ftdiv@f2:	
  6260                           ; 3 bytes @ 0x10
  6261                           
  6262                           
  6263                           ; 3 bytes @ 0x10
  6264  0030                     	ds	3
  6265  0033                     ___ftdiv@f1:	
  6266                           
  6267                           ; 3 bytes @ 0x13
  6268  0033                     	ds	3
  6269  0036                     ??___ftdiv:	
  6270                           
  6271                           ; 1 bytes @ 0x16
  6272  0036                     	ds	4
  6273  003A                     ___ftdiv@cntr:	
  6274                           
  6275                           ; 1 bytes @ 0x1A
  6276  003A                     	ds	1
  6277  003B                     ___ftdiv@f3:	
  6278                           
  6279                           ; 3 bytes @ 0x1B
  6280  003B                     	ds	3
  6281  003E                     ___ftdiv@exp:	
  6282                           
  6283                           ; 1 bytes @ 0x1E
  6284  003E                     	ds	1
  6285  003F                     ___ftdiv@sign:	
  6286                           
  6287                           ; 1 bytes @ 0x1F
  6288  003F                     	ds	1
  6289  0040                     ?___ftadd:	
  6290  0040                     ___ftadd@f1:	
  6291                           ; 3 bytes @ 0x20
  6292                           
  6293                           
  6294                           ; 3 bytes @ 0x20
  6295  0040                     	ds	3
  6296  0043                     ___ftadd@f2:	
  6297                           
  6298                           ; 3 bytes @ 0x23
  6299  0043                     	ds	3
  6300  0046                     ??___ftadd:	
  6301                           
  6302                           ; 1 bytes @ 0x26
  6303  0046                     	ds	4
  6304  004A                     ___ftadd@sign:	
  6305                           
  6306                           ; 1 bytes @ 0x2A
  6307  004A                     	ds	1
  6308  004B                     ___ftadd@exp2:	
  6309                           
  6310                           ; 1 bytes @ 0x2B
  6311  004B                     	ds	1
  6312  004C                     ___ftadd@exp1:	
  6313                           
  6314                           ; 1 bytes @ 0x2C
  6315  004C                     	ds	1
  6316  004D                     ?_eval_poly:	
  6317  004D                     ?___ftsub:	
  6318                           ; 3 bytes @ 0x2D
  6319                           
  6320  004D                     ___ftsub@f2:	
  6321                           ; 3 bytes @ 0x2D
  6322                           
  6323  004D                     eval_poly@x:	
  6324                           ; 3 bytes @ 0x2D
  6325                           
  6326                           
  6327                           ; 3 bytes @ 0x2D
  6328  004D                     	ds	3
  6329  0050                     eval_poly@d:	
  6330  0050                     ___ftsub@f1:	
  6331                           ; 2 bytes @ 0x30
  6332                           
  6333                           
  6334                           ; 3 bytes @ 0x30
  6335  0050                     	ds	2
  6336  0052                     eval_poly@n:	
  6337                           
  6338                           ; 2 bytes @ 0x32
  6339  0052                     	ds	2
  6340  0054                     eval_poly@res:	
  6341                           
  6342                           ; 3 bytes @ 0x34
  6343  0054                     	ds	3
  6344  0057                     ?_log:	
  6345  0057                     log@x:	
  6346                           ; 3 bytes @ 0x37
  6347                           
  6348                           
  6349                           ; 3 bytes @ 0x37
  6350  0057                     	ds	3
  6351  005A                     ??_log:	
  6352                           
  6353                           ; 1 bytes @ 0x3A
  6354  005A                     	ds	1
  6355  005B                     log@exponent:	
  6356                           
  6357                           ; 2 bytes @ 0x3B
  6358  005B                     	ds	2
  6359  005D                     ?_tempCalc:	
  6360  005D                     tempCalc@analogValue:	
  6361                           ; 2 bytes @ 0x3D
  6362                           
  6363                           
  6364                           ; 2 bytes @ 0x3D
  6365  005D                     	ds	2
  6366  005F                     tempCalc@R:	
  6367                           
  6368                           ; 3 bytes @ 0x3F
  6369  005F                     	ds	3
  6370  0062                     _tempCalc$1036:	
  6371                           
  6372                           ; 3 bytes @ 0x42
  6373  0062                     	ds	3
  6374  0065                     tempCalc@steinhart:	
  6375                           
  6376                           ; 3 bytes @ 0x45
  6377  0065                     	ds	3
  6378                           
  6379                           	psect	maintext
  6380  0561                     __pmaintext:	
  6381 ;;
  6382 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6383 ;;
  6384 ;; *************** function _main *****************
  6385 ;; Defined at:
  6386 ;;		line 19 in file "main.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;		None
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  outputSample   10   11[BANK1 ] int [5]
  6391 ;;  analogs         4   33[BANK1 ] int [2]
  6392 ;;  outputTotal     4   29[BANK1 ] long 
  6393 ;;  viperFanOut     2   39[BANK1 ] unsigned int 
  6394 ;;  currentTempe    2   27[BANK1 ] int 
  6395 ;;  lastTemperat    2   25[BANK1 ] int 
  6396 ;;  output          2   21[BANK1 ] int 
  6397 ;;  j               1   38[BANK1 ] unsigned char 
  6398 ;;  outputIndex     1   37[BANK1 ] unsigned char 
  6399 ;;  lidOpenCount    1   24[BANK1 ] unsigned char 
  6400 ;;  holdOutput      1   23[BANK1 ] unsigned char 
  6401 ;;  x               1   10[BANK1 ] unsigned char 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : B1F/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;Total ram usage:       41 bytes
  6416 ;; Hardware stack levels required when called:    5
  6417 ;; This function calls:
  6418 ;;		_LCD_Clear
  6419 ;;		_LCD_Set_Cursor
  6420 ;;		_LCD_Write_Char
  6421 ;;		_LCD_Write_Int
  6422 ;;		_LCD_Write_String
  6423 ;;		_PID_Calculate
  6424 ;;		_PWM6_LoadDutyValue
  6425 ;;		_PWM7_LoadDutyValue
  6426 ;;		_SYSTEM_Initialize
  6427 ;;		___aldiv
  6428 ;;		_menuChoice
  6429 ;;		_readAnalog
  6430 ;;		_tempCalc
  6431 ;; This function is called by:
  6432 ;;		Startup code after reset
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           
  6437                           ;psect for function _main
  6438  0561                     _main:	
  6439                           
  6440                           ;main.c: 21: SYSTEM_Initialize();
  6441                           
  6442                           ;incstack = 0
  6443                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6444  0561  3188  2079  3185   	fcall	_SYSTEM_Initialize
  6445                           
  6446                           ;main.c: 23: int16_t analogs[2] = {0};
  6447  0564  0022               	movlb	2	; select bank2
  6448  0565  083A               	movf	(main@F14366+3)^(0+256),w
  6449  0566  0021               	movlb	1	; select bank1
  6450  0567  00C4               	movwf	(main@analogs+3)^(0+128)
  6451  0568  0022               	movlb	2	; select bank2
  6452  0569  0839               	movf	(main@F14366+2)^(0+256),w
  6453  056A  0021               	movlb	1	; select bank1
  6454  056B  00C3               	movwf	(main@analogs+2)^(0+128)
  6455  056C  0022               	movlb	2	; select bank2
  6456  056D  0838               	movf	(main@F14366+1)^(0+256),w
  6457  056E  0021               	movlb	1	; select bank1
  6458  056F  00C2               	movwf	(main@analogs+1)^(0+128)
  6459  0570  0022               	movlb	2	; select bank2
  6460  0571  0837               	movf	main@F14366^(0+256),w
  6461  0572  0021               	movlb	1	; select bank1
  6462  0573  00C1               	movwf	main@analogs^(0+128)
  6463                           
  6464                           ;main.c: 25: extern uint16_t setpoint[2];
  6465                           ;main.c: 27: int16_t output = 0;
  6466  0574  01B5               	clrf	main@output^(0+128)
  6467  0575  01B6               	clrf	(main@output+1)^(0+128)
  6468                           
  6469                           ;main.c: 29: int32_t outputTotal = 0;
  6470  0576  3000               	movlw	0
  6471  0577  00C0               	movwf	(main@outputTotal+3)^(0+128)
  6472  0578  3000               	movlw	0
  6473  0579  00BF               	movwf	(main@outputTotal+2)^(0+128)
  6474  057A  3000               	movlw	0
  6475  057B  00BE               	movwf	(main@outputTotal+1)^(0+128)
  6476  057C  3000               	movlw	0
  6477  057D  00BD               	movwf	main@outputTotal^(0+128)
  6478                           
  6479                           ;main.c: 31: uint8_t outputIndex = 0;
  6480  057E  01C5               	clrf	main@outputIndex^(0+128)
  6481                           
  6482                           ;main.c: 33: int16_t outputSamples[5] = {0};
  6483  057F  3020               	movlw	low main@F14372
  6484  0580  0086               	movwf	6
  6485  0581  3001               	movlw	high main@F14372
  6486  0582  0087               	movwf	7
  6487  0583  30AB               	movlw	low main@outputSamples
  6488  0584  0084               	movwf	4
  6489  0585  3000               	movlw	high main@outputSamples
  6490  0586  0085               	movwf	5
  6491  0587  300A               	movlw	10
  6492  0588  00A0               	movwf	??_main^(0+128)
  6493  0589                     u3820:	
  6494  0589  0016               	moviw fsr1++
  6495  058A  001A               	movwi fsr0++
  6496  058B  0BA0               	decfsz	??_main^(0+128),f
  6497  058C  2D89               	goto	u3820
  6498                           
  6499                           ;main.c: 35: uint8_t holdOutput = 0;
  6500  058D  01B7               	clrf	main@holdOutput^(0+128)
  6501                           
  6502                           ;main.c: 37: int16_t currentTemperature = 750;
  6503  058E  30EE               	movlw	238
  6504  058F  00BB               	movwf	main@currentTemperature^(0+128)
  6505  0590  3002               	movlw	2
  6506  0591  00BC               	movwf	(main@currentTemperature^(0+128)+1)
  6507                           
  6508                           ;main.c: 39: int16_t lastTemperature = 750;
  6509  0592  30EE               	movlw	238
  6510  0593  00B9               	movwf	main@lastTemperature^(0+128)
  6511  0594  3002               	movlw	2
  6512  0595  00BA               	movwf	(main@lastTemperature^(0+128)+1)
  6513                           
  6514                           ;main.c: 41: uint8_t lidOpenCount = 0;
  6515  0596  01B8               	clrf	main@lidOpenCount^(0+128)
  6516                           
  6517                           ;main.c: 43: uint8_t j = 0;
  6518  0597  01C6               	clrf	main@j^(0+128)
  6519                           
  6520                           ;main.c: 45: uint8_t x = 0;
  6521  0598  01AA               	clrf	main@x^(0+128)
  6522                           
  6523                           ;main.c: 47: extern uint8_t loop;
  6524                           ;main.c: 49: uint16_t viperFanOut = 0;
  6525  0599  01C7               	clrf	main@viperFanOut^(0+128)
  6526  059A  01C8               	clrf	(main@viperFanOut+1)^(0+128)
  6527                           
  6528                           ;main.c: 51: extern int16_t errorValue;
  6529                           ;main.c: 53: extern int16_t integralValue;
  6530                           ;main.c: 55: extern int16_t oldError;
  6531                           ;main.c: 57: extern int16_t derivativeValue;
  6532                           ;main.c: 61: PWM6_LoadDutyValue(viperFanOut);
  6533  059B  0848               	movf	(main@viperFanOut+1)^(0+128),w
  6534  059C  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6535  059D  0847               	movf	main@viperFanOut^(0+128),w
  6536  059E  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6537  059F  3196  264D  3185   	fcall	_PWM6_LoadDutyValue
  6538                           
  6539                           ;main.c: 63: PWM7_LoadDutyValue(setpoint[1]);
  6540  05A2  0021               	movlb	1	; select bank1
  6541  05A3  0865               	movf	((_setpoint+1)^(0+128)+2),w
  6542  05A4  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6543  05A5  0864               	movf	(_setpoint^(0+128)+2),w
  6544  05A6  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6545  05A7  3196  2663  3185   	fcall	_PWM7_LoadDutyValue
  6546                           
  6547                           ;main.c: 65: _delay((unsigned long)((300)*(32000000/4000.0)));
  6548  05AA  300D               	movlw	13
  6549  05AB  0021               	movlb	1	; select bank1
  6550  05AC  00A1               	movwf	(??_main^(0+128)+1)
  6551  05AD  302D               	movlw	45
  6552  05AE  00A0               	movwf	??_main^(0+128)
  6553  05AF  30D7               	movlw	215
  6554  05B0                     u3937:	
  6555  05B0  0B89               	decfsz	9,f
  6556  05B1  2DB0               	goto	u3937
  6557  05B2  0BA0               	decfsz	??_main^(0+128),f
  6558  05B3  2DB0               	goto	u3937
  6559  05B4  0BA1               	decfsz	(??_main^(0+128)+1),f
  6560  05B5  2DB0               	goto	u3937
  6561  05B6  3200               	nop2
  6562                           
  6563                           ;main.c: 67: LCD_Clear();
  6564  05B7  3195  25CA  3185   	fcall	_LCD_Clear
  6565  05BA                     l3271:	
  6566                           ;main.c: 79: while (1)
  6567                           
  6568                           
  6569                           ;main.c: 80: {
  6570                           ;main.c: 81: if(loop>253)
  6571  05BA  30FE               	movlw	254
  6572  05BB  0021               	movlb	1	; select bank1
  6573  05BC  026E               	subwf	_loop^(0+128),w
  6574  05BD  1C03               	skipc
  6575  05BE  2F37               	goto	l3339
  6576                           
  6577                           ;main.c: 82: {
  6578                           ;main.c: 83: PWM6_LoadDutyValue(viperFanOut);
  6579  05BF  0848               	movf	(main@viperFanOut+1)^(0+128),w
  6580  05C0  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6581  05C1  0847               	movf	main@viperFanOut^(0+128),w
  6582  05C2  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6583  05C3  3196  264D  3185   	fcall	_PWM6_LoadDutyValue
  6584                           
  6585                           ;main.c: 84: PWM7_LoadDutyValue(setpoint[1]);
  6586  05C6  0021               	movlb	1	; select bank1
  6587  05C7  0865               	movf	((_setpoint+1)^(0+128)+2),w
  6588  05C8  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6589  05C9  0864               	movf	(_setpoint^(0+128)+2),w
  6590  05CA  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6591  05CB  3196  2663  3185   	fcall	_PWM7_LoadDutyValue
  6592                           
  6593                           ;main.c: 86: { LCD_Set_Cursor(0,0); LCD_Write_Int(errorValue,5, 0, 0);};
  6594  05CE  01F3               	clrf	LCD_Set_Cursor@y
  6595  05CF  3000               	movlw	0
  6596  05D0  3188  203A  3185   	fcall	_LCD_Set_Cursor
  6597  05D3  0021               	movlb	1	; select bank1
  6598  05D4  0856               	movf	(_errorValue+1)^(0+128),w
  6599  05D5  00FA               	movwf	LCD_Write_Int@value+1
  6600  05D6  0855               	movf	_errorValue^(0+128),w
  6601  05D7  00F9               	movwf	LCD_Write_Int@value
  6602  05D8  3005               	movlw	5
  6603  05D9  00A0               	movwf	??_main^(0+128)
  6604  05DA  0820               	movf	??_main^(0+128),w
  6605  05DB  00FB               	movwf	LCD_Write_Int@fieldLength
  6606  05DC  01FC               	clrf	LCD_Write_Int@numPlaces
  6607  05DD  01FD               	clrf	LCD_Write_Int@sign
  6608  05DE  318C  2486  3185   	fcall	_LCD_Write_Int
  6609                           
  6610                           ;main.c: 87: LCD_Write_Char(' ');
  6611  05E1  3020               	movlw	32
  6612  05E2  3197  2760  3185   	fcall	_LCD_Write_Char
  6613                           
  6614                           ;main.c: 88: LCD_Write_Char(' ');
  6615  05E5  3020               	movlw	32
  6616  05E6  3197  2760  3185   	fcall	_LCD_Write_Char
  6617                           
  6618                           ;main.c: 89: { LCD_Set_Cursor(8,0); LCD_Write_Int(integralValue,5, 0, 0);};
  6619  05E9  01F3               	clrf	LCD_Set_Cursor@y
  6620  05EA  3008               	movlw	8
  6621  05EB  3188  203A  3185   	fcall	_LCD_Set_Cursor
  6622  05EE  0021               	movlb	1	; select bank1
  6623  05EF  0850               	movf	(_integralValue+1)^(0+128),w
  6624  05F0  00FA               	movwf	LCD_Write_Int@value+1
  6625  05F1  084F               	movf	_integralValue^(0+128),w
  6626  05F2  00F9               	movwf	LCD_Write_Int@value
  6627  05F3  3005               	movlw	5
  6628  05F4  00A0               	movwf	??_main^(0+128)
  6629  05F5  0820               	movf	??_main^(0+128),w
  6630  05F6  00FB               	movwf	LCD_Write_Int@fieldLength
  6631  05F7  01FC               	clrf	LCD_Write_Int@numPlaces
  6632  05F8  01FD               	clrf	LCD_Write_Int@sign
  6633  05F9  318C  2486  3185   	fcall	_LCD_Write_Int
  6634                           
  6635                           ;main.c: 90: LCD_Write_Char(' ');
  6636  05FC  3020               	movlw	32
  6637  05FD  3197  2760  3185   	fcall	_LCD_Write_Char
  6638                           
  6639                           ;main.c: 91: LCD_Write_Char(' ');
  6640  0600  3020               	movlw	32
  6641  0601  3197  2760  3185   	fcall	_LCD_Write_Char
  6642                           
  6643                           ;main.c: 93: { LCD_Set_Cursor(0,1); LCD_Write_Int(derivativeValue,4, 0, 0);};
  6644  0604  01F3               	clrf	LCD_Set_Cursor@y
  6645  0605  0AF3               	incf	LCD_Set_Cursor@y,f
  6646  0606  3000               	movlw	0
  6647  0607  3188  203A  3185   	fcall	_LCD_Set_Cursor
  6648  060A  0021               	movlb	1	; select bank1
  6649  060B  0854               	movf	(_derivativeValue+1)^(0+128),w
  6650  060C  00FA               	movwf	LCD_Write_Int@value+1
  6651  060D  0853               	movf	_derivativeValue^(0+128),w
  6652  060E  00F9               	movwf	LCD_Write_Int@value
  6653  060F  3004               	movlw	4
  6654  0610  00A0               	movwf	??_main^(0+128)
  6655  0611  0820               	movf	??_main^(0+128),w
  6656  0612  00FB               	movwf	LCD_Write_Int@fieldLength
  6657  0613  01FC               	clrf	LCD_Write_Int@numPlaces
  6658  0614  01FD               	clrf	LCD_Write_Int@sign
  6659  0615  318C  2486  3185   	fcall	_LCD_Write_Int
  6660                           
  6661                           ;main.c: 95: LCD_Write_Char(' ');
  6662  0618  3020               	movlw	32
  6663  0619  3197  2760  3185   	fcall	_LCD_Write_Char
  6664                           
  6665                           ;main.c: 96: { LCD_Set_Cursor(6,1); LCD_Write_Int(analogs[1],4, 1, 0);};
  6666  061C  01F3               	clrf	LCD_Set_Cursor@y
  6667  061D  0AF3               	incf	LCD_Set_Cursor@y,f
  6668  061E  3006               	movlw	6
  6669  061F  3188  203A  3185   	fcall	_LCD_Set_Cursor
  6670  0622  0021               	movlb	1	; select bank1
  6671  0623  0844               	movf	((main@analogs+1)^(0+128)+2),w
  6672  0624  00FA               	movwf	LCD_Write_Int@value+1
  6673  0625  0843               	movf	(main@analogs^(0+128)+2),w
  6674  0626  00F9               	movwf	LCD_Write_Int@value
  6675  0627  3004               	movlw	4
  6676  0628  00A0               	movwf	??_main^(0+128)
  6677  0629  0820               	movf	??_main^(0+128),w
  6678  062A  00FB               	movwf	LCD_Write_Int@fieldLength
  6679  062B  01FC               	clrf	LCD_Write_Int@numPlaces
  6680  062C  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6681  062D  01FD               	clrf	LCD_Write_Int@sign
  6682  062E  318C  2486  3185   	fcall	_LCD_Write_Int
  6683                           
  6684                           ;main.c: 97: { LCD_Set_Cursor(12,1); LCD_Write_Int(viperFanOut,4, 0, 0);};
  6685  0631  01F3               	clrf	LCD_Set_Cursor@y
  6686  0632  0AF3               	incf	LCD_Set_Cursor@y,f
  6687  0633  300C               	movlw	12
  6688  0634  3188  203A  3185   	fcall	_LCD_Set_Cursor
  6689  0637  0021               	movlb	1	; select bank1
  6690  0638  0848               	movf	(main@viperFanOut+1)^(0+128),w
  6691  0639  00FA               	movwf	LCD_Write_Int@value+1
  6692  063A  0847               	movf	main@viperFanOut^(0+128),w
  6693  063B  00F9               	movwf	LCD_Write_Int@value
  6694  063C  3004               	movlw	4
  6695  063D  00A0               	movwf	??_main^(0+128)
  6696  063E  0820               	movf	??_main^(0+128),w
  6697  063F  00FB               	movwf	LCD_Write_Int@fieldLength
  6698  0640  01FC               	clrf	LCD_Write_Int@numPlaces
  6699  0641  01FD               	clrf	LCD_Write_Int@sign
  6700  0642  318C  2486  3185   	fcall	_LCD_Write_Int
  6701                           
  6702                           ;main.c: 113: if(holdOutput==0)
  6703  0645  0021               	movlb	1	; select bank1
  6704  0646  0837               	movf	main@holdOutput^(0+128),w
  6705  0647  1D03               	btfss	3,2
  6706  0648  2EE9               	goto	l3317
  6707                           
  6708                           ;main.c: 114: {
  6709                           ;main.c: 115: output = PID_Calculate(setpoint[0],analogs[1]);
  6710  0649  0863               	movf	(_setpoint+1)^(0+128),w
  6711  064A  00F7               	movwf	PID_Calculate@setpoint+1
  6712  064B  0862               	movf	_setpoint^(0+128),w
  6713  064C  00F6               	movwf	PID_Calculate@setpoint
  6714  064D  0844               	movf	((main@analogs+1)^(0+128)+2),w
  6715  064E  00F9               	movwf	PID_Calculate@temp+1
  6716  064F  0843               	movf	(main@analogs^(0+128)+2),w
  6717  0650  00F8               	movwf	PID_Calculate@temp
  6718  0651  3181  2192  3185   	fcall	_PID_Calculate
  6719  0654  0877               	movf	?_PID_Calculate+1,w
  6720  0655  0021               	movlb	1	; select bank1
  6721  0656  00B6               	movwf	(main@output+1)^(0+128)
  6722  0657  0876               	movf	?_PID_Calculate,w
  6723  0658  00B5               	movwf	main@output^(0+128)
  6724                           
  6725                           ;main.c: 116: outputTotal = outputTotal - outputSamples[outputIndex];
  6726  0659  083D               	movf	main@outputTotal^(0+128),w
  6727  065A  00A0               	movwf	??_main^(0+128)
  6728  065B  083E               	movf	(main@outputTotal+1)^(0+128),w
  6729  065C  00A1               	movwf	(??_main^(0+128)+1)
  6730  065D  083F               	movf	(main@outputTotal+2)^(0+128),w
  6731  065E  00A2               	movwf	(??_main^(0+128)+2)
  6732  065F  0840               	movf	(main@outputTotal+3)^(0+128),w
  6733  0660  00A3               	movwf	(??_main^(0+128)+3)
  6734  0661  3545               	lslf	main@outputIndex^(0+128),w
  6735  0662  3EAB               	addlw	(low (main@outputSamples| 0))& (0+255)
  6736  0663  0086               	movwf	6
  6737  0664  0187               	clrf	7
  6738  0665  3F40               	moviw [0]fsr1
  6739  0666  00A4               	movwf	(??_main+4)^(0+128)
  6740  0667  3F41               	moviw [1]fsr1
  6741  0668  00A5               	movwf	((??_main+4)^(0+128)+1)
  6742  0669  0824               	movf	(??_main+4)^(0+128),w
  6743  066A  00A6               	movwf	(??_main+6)^(0+128)
  6744  066B  0825               	movf	(??_main+5)^(0+128),w
  6745  066C  00A7               	movwf	((??_main+6)^(0+128)+1)
  6746  066D  3000               	movlw	0
  6747  066E  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6748  066F  30FF               	movlw	255
  6749  0670  00A8               	movwf	((??_main+6)^(0+128)+2)
  6750  0671  00A9               	movwf	((??_main+6)^(0+128)+3)
  6751  0672  09A6               	comf	(??_main+6)^(0+128),f
  6752  0673  09A7               	comf	((??_main+6)^(0+128)+1),f
  6753  0674  09A8               	comf	((??_main+6)^(0+128)+2),f
  6754  0675  09A9               	comf	((??_main+6)^(0+128)+3),f
  6755  0676  0AA6               	incf	(??_main+6)^(0+128),f
  6756  0677  1903               	skipnz
  6757  0678  0AA7               	incf	((??_main+6)^(0+128)+1),f
  6758  0679  1903               	skipnz
  6759  067A  0AA8               	incf	((??_main+6)^(0+128)+2),f
  6760  067B  1903               	skipnz
  6761  067C  0AA9               	incf	((??_main+6)^(0+128)+3),f
  6762  067D  0826               	movf	(??_main+6)^(0+128),w
  6763  067E  07A0               	addwf	??_main^(0+128),f
  6764  067F  0827               	movf	(??_main+7)^(0+128),w
  6765  0680  3DA1               	addwfc	(??_main^(0+128)+1),f
  6766  0681  0828               	movf	(??_main+8)^(0+128),w
  6767  0682  3DA2               	addwfc	(??_main^(0+128)+2),f
  6768  0683  0829               	movf	(??_main+9)^(0+128),w
  6769  0684  3DA3               	addwfc	(??_main^(0+128)+3),f
  6770  0685  0823               	movf	(??_main+3)^(0+128),w
  6771  0686  00C0               	movwf	(main@outputTotal+3)^(0+128)
  6772  0687  0822               	movf	(??_main+2)^(0+128),w
  6773  0688  00BF               	movwf	(main@outputTotal+2)^(0+128)
  6774  0689  0821               	movf	(??_main+1)^(0+128),w
  6775  068A  00BE               	movwf	(main@outputTotal+1)^(0+128)
  6776  068B  0820               	movf	??_main^(0+128),w
  6777  068C  00BD               	movwf	main@outputTotal^(0+128)
  6778                           
  6779                           ;main.c: 117: outputSamples[outputIndex] = output;
  6780  068D  3545               	lslf	main@outputIndex^(0+128),w
  6781  068E  3EAB               	addlw	(low (main@outputSamples| 0))& (0+255)
  6782  068F  0086               	movwf	6
  6783  0690  0187               	clrf	7
  6784  0691  0835               	movf	main@output^(0+128),w
  6785  0692  3FC0               	movwi [0]fsr1
  6786  0693  0836               	movf	(main@output+1)^(0+128),w
  6787  0694  3FC1               	movwi [1]fsr1
  6788                           
  6789                           ;main.c: 118: outputTotal = outputTotal + outputSamples[outputIndex];
  6790  0695  083D               	movf	main@outputTotal^(0+128),w
  6791  0696  00A0               	movwf	??_main^(0+128)
  6792  0697  083E               	movf	(main@outputTotal+1)^(0+128),w
  6793  0698  00A1               	movwf	(??_main^(0+128)+1)
  6794  0699  083F               	movf	(main@outputTotal+2)^(0+128),w
  6795  069A  00A2               	movwf	(??_main^(0+128)+2)
  6796  069B  0840               	movf	(main@outputTotal+3)^(0+128),w
  6797  069C  00A3               	movwf	(??_main^(0+128)+3)
  6798  069D  3545               	lslf	main@outputIndex^(0+128),w
  6799  069E  3EAB               	addlw	(low (main@outputSamples| 0))& (0+255)
  6800  069F  0086               	movwf	6
  6801  06A0  0187               	clrf	7
  6802  06A1  3F40               	moviw [0]fsr1
  6803  06A2  00A4               	movwf	(??_main+4)^(0+128)
  6804  06A3  3F41               	moviw [1]fsr1
  6805  06A4  00A5               	movwf	((??_main+4)^(0+128)+1)
  6806  06A5  0824               	movf	(??_main+4)^(0+128),w
  6807  06A6  00A6               	movwf	(??_main+6)^(0+128)
  6808  06A7  0825               	movf	(??_main+5)^(0+128),w
  6809  06A8  00A7               	movwf	((??_main+6)^(0+128)+1)
  6810  06A9  3000               	movlw	0
  6811  06AA  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6812  06AB  30FF               	movlw	255
  6813  06AC  00A8               	movwf	((??_main+6)^(0+128)+2)
  6814  06AD  00A9               	movwf	((??_main+6)^(0+128)+3)
  6815  06AE  0826               	movf	(??_main+6)^(0+128),w
  6816  06AF  07A0               	addwf	??_main^(0+128),f
  6817  06B0  0827               	movf	(??_main+7)^(0+128),w
  6818  06B1  3DA1               	addwfc	(??_main^(0+128)+1),f
  6819  06B2  0828               	movf	(??_main+8)^(0+128),w
  6820  06B3  3DA2               	addwfc	(??_main^(0+128)+2),f
  6821  06B4  0829               	movf	(??_main+9)^(0+128),w
  6822  06B5  3DA3               	addwfc	(??_main^(0+128)+3),f
  6823  06B6  0823               	movf	(??_main+3)^(0+128),w
  6824  06B7  00C0               	movwf	(main@outputTotal+3)^(0+128)
  6825  06B8  0822               	movf	(??_main+2)^(0+128),w
  6826  06B9  00BF               	movwf	(main@outputTotal+2)^(0+128)
  6827  06BA  0821               	movf	(??_main+1)^(0+128),w
  6828  06BB  00BE               	movwf	(main@outputTotal+1)^(0+128)
  6829  06BC  0820               	movf	??_main^(0+128),w
  6830  06BD  00BD               	movwf	main@outputTotal^(0+128)
  6831                           
  6832                           ;main.c: 119: viperFanOut = (uint16_t)(outputTotal/5);
  6833  06BE  3000               	movlw	0
  6834  06BF  00F3               	movwf	___aldiv@divisor+3
  6835  06C0  3000               	movlw	0
  6836  06C1  00F2               	movwf	___aldiv@divisor+2
  6837  06C2  3000               	movlw	0
  6838  06C3  00F1               	movwf	___aldiv@divisor+1
  6839  06C4  3005               	movlw	5
  6840  06C5  00F0               	movwf	___aldiv@divisor
  6841  06C6  0840               	movf	(main@outputTotal+3)^(0+128),w
  6842  06C7  00F7               	movwf	___aldiv@dividend+3
  6843  06C8  083F               	movf	(main@outputTotal+2)^(0+128),w
  6844  06C9  00F6               	movwf	___aldiv@dividend+2
  6845  06CA  083E               	movf	(main@outputTotal+1)^(0+128),w
  6846  06CB  00F5               	movwf	___aldiv@dividend+1
  6847  06CC  083D               	movf	main@outputTotal^(0+128),w
  6848  06CD  00F4               	movwf	___aldiv@dividend
  6849  06CE  318A  2225  3185   	fcall	___aldiv
  6850  06D1  0871               	movf	?___aldiv+1,w
  6851  06D2  0021               	movlb	1	; select bank1
  6852  06D3  00C8               	movwf	(main@viperFanOut+1)^(0+128)
  6853  06D4  0870               	movf	?___aldiv,w
  6854  06D5  00C7               	movwf	main@viperFanOut^(0+128)
  6855                           
  6856                           ;main.c: 120: if(viperFanOut<25)viperFanOut=0;
  6857  06D6  3000               	movlw	0
  6858  06D7  0248               	subwf	(main@viperFanOut+1)^(0+128),w
  6859  06D8  3019               	movlw	25
  6860  06D9  1903               	skipnz
  6861  06DA  0247               	subwf	main@viperFanOut^(0+128),w
  6862  06DB  1803               	skipnc
  6863  06DC  2EDF               	goto	l3311
  6864  06DD  01C7               	clrf	main@viperFanOut^(0+128)
  6865  06DE  01C8               	clrf	(main@viperFanOut+1)^(0+128)
  6866  06DF                     l3311:	
  6867                           
  6868                           ;main.c: 121: outputIndex+=1;
  6869  06DF  3001               	movlw	1
  6870  06E0  00A0               	movwf	??_main^(0+128)
  6871  06E1  0820               	movf	??_main^(0+128),w
  6872  06E2  07C5               	addwf	main@outputIndex^(0+128),f
  6873                           
  6874                           ;main.c: 122: if(outputIndex >= 5)outputIndex = 0;
  6875  06E3  3005               	movlw	5
  6876  06E4  0245               	subwf	main@outputIndex^(0+128),w
  6877  06E5  1C03               	skipc
  6878  06E6  2EEB               	goto	l3319
  6879  06E7  01C5               	clrf	main@outputIndex^(0+128)
  6880                           
  6881                           ;main.c: 123: }
  6882  06E8  2EEB               	goto	l3319
  6883  06E9                     l3317:	
  6884                           
  6885                           ;main.c: 124: else
  6886                           ;main.c: 125: {
  6887                           ;main.c: 126: holdOutput-=1;
  6888  06E9  3001               	movlw	1
  6889  06EA  02B7               	subwf	main@holdOutput^(0+128),f
  6890  06EB                     l3319:	
  6891                           
  6892                           ;main.c: 127: }
  6893                           ;main.c: 129: currentTemperature=analogs[1];
  6894  06EB  0844               	movf	((main@analogs+1)^(0+128)+2),w
  6895  06EC  00BC               	movwf	(main@currentTemperature+1)^(0+128)
  6896  06ED  0843               	movf	(main@analogs^(0+128)+2),w
  6897  06EE  00BB               	movwf	main@currentTemperature^(0+128)
  6898                           
  6899                           ;main.c: 131: if(lidOpenCount<10)
  6900  06EF  300A               	movlw	10
  6901  06F0  0238               	subwf	main@lidOpenCount^(0+128),w
  6902  06F1  1803               	skipnc
  6903  06F2  2EF8               	goto	l3325
  6904                           
  6905                           ;main.c: 132: {
  6906                           ;main.c: 133: lidOpenCount+=1;
  6907  06F3  3001               	movlw	1
  6908  06F4  00A0               	movwf	??_main^(0+128)
  6909  06F5  0820               	movf	??_main^(0+128),w
  6910  06F6  07B8               	addwf	main@lidOpenCount^(0+128),f
  6911                           
  6912                           ;main.c: 134: }
  6913  06F7  2EFD               	goto	l3329
  6914  06F8                     l3325:	
  6915                           
  6916                           ;main.c: 135: else
  6917                           ;main.c: 136: {
  6918                           ;main.c: 137: lastTemperature=currentTemperature;
  6919  06F8  083C               	movf	(main@currentTemperature+1)^(0+128),w
  6920  06F9  00BA               	movwf	(main@lastTemperature+1)^(0+128)
  6921  06FA  083B               	movf	main@currentTemperature^(0+128),w
  6922  06FB  00B9               	movwf	main@lastTemperature^(0+128)
  6923                           
  6924                           ;main.c: 138: lidOpenCount=0;
  6925  06FC  01B8               	clrf	main@lidOpenCount^(0+128)
  6926  06FD                     l3329:	
  6927                           
  6928                           ;main.c: 139: }
  6929                           ;main.c: 141: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6930  06FD  093B               	comf	main@currentTemperature^(0+128),w
  6931  06FE  00A0               	movwf	??_main^(0+128)
  6932  06FF  093C               	comf	(main@currentTemperature+1)^(0+128),w
  6933  0700  00A1               	movwf	(??_main^(0+128)+1)
  6934  0701  0AA0               	incf	??_main^(0+128),f
  6935  0702  1903               	skipnz
  6936  0703  0AA1               	incf	(??_main^(0+128)+1),f
  6937  0704  0839               	movf	main@lastTemperature^(0+128),w
  6938  0705  0720               	addwf	??_main^(0+128),w
  6939  0706  00A2               	movwf	(??_main+2)^(0+128)
  6940  0707  083A               	movf	(main@lastTemperature+1)^(0+128),w
  6941  0708  3D21               	addwfc	(??_main+1)^(0+128),w
  6942  0709  00A3               	movwf	(??_main+3)^(0+128)
  6943  070A  0823               	movf	(??_main+3)^(0+128),w
  6944  070B  3A80               	xorlw	128
  6945  070C  00A4               	movwf	(??_main+4)^(0+128)
  6946  070D  3080               	movlw	128
  6947  070E  0224               	subwf	(??_main+4)^(0+128),w
  6948  070F  1D03               	skipz
  6949  0710  2F13               	goto	u3885
  6950  0711  3065               	movlw	101
  6951  0712  0222               	subwf	(??_main+2)^(0+128),w
  6952  0713                     u3885:	
  6953  0713  1803               	skipnc
  6954  0714  2F2E               	goto	l3333
  6955  0715  0021               	movlb	1	; select bank1
  6956  0716  093B               	comf	main@currentTemperature^(0+128),w
  6957  0717  00A0               	movwf	??_main^(0+128)
  6958  0718  093C               	comf	(main@currentTemperature+1)^(0+128),w
  6959  0719  00A1               	movwf	(??_main^(0+128)+1)
  6960  071A  0AA0               	incf	??_main^(0+128),f
  6961  071B  1903               	skipnz
  6962  071C  0AA1               	incf	(??_main^(0+128)+1),f
  6963  071D  0839               	movf	main@lastTemperature^(0+128),w
  6964  071E  0720               	addwf	??_main^(0+128),w
  6965  071F  00A2               	movwf	(??_main+2)^(0+128)
  6966  0720  083A               	movf	(main@lastTemperature+1)^(0+128),w
  6967  0721  3D21               	addwfc	(??_main+1)^(0+128),w
  6968  0722  00A3               	movwf	(??_main+3)^(0+128)
  6969  0723  0823               	movf	(??_main+3)^(0+128),w
  6970  0724  3A80               	xorlw	128
  6971  0725  00A4               	movwf	(??_main+4)^(0+128)
  6972  0726  307F               	movlw	127
  6973  0727  0224               	subwf	(??_main+4)^(0+128),w
  6974  0728  1D03               	skipz
  6975  0729  2F2C               	goto	u3895
  6976  072A  309C               	movlw	156
  6977  072B  0222               	subwf	(??_main+2)^(0+128),w
  6978  072C                     u3895:	
  6979  072C  1803               	skipnc
  6980  072D  2F35               	goto	l3337
  6981  072E                     l3333:	
  6982                           
  6983                           ;main.c: 142: {
  6984                           ;main.c: 143: viperFanOut=0;
  6985  072E  0021               	movlb	1	; select bank1
  6986  072F  01C7               	clrf	main@viperFanOut^(0+128)
  6987  0730  01C8               	clrf	(main@viperFanOut+1)^(0+128)
  6988                           
  6989                           ;main.c: 144: holdOutput=30;
  6990  0731  301E               	movlw	30
  6991  0732  00A0               	movwf	??_main^(0+128)
  6992  0733  0820               	movf	??_main^(0+128),w
  6993  0734  00B7               	movwf	main@holdOutput^(0+128)
  6994  0735                     l3337:	
  6995                           
  6996                           ;main.c: 145: }
  6997                           ;main.c: 146: loop=0;
  6998  0735  0021               	movlb	1	; select bank1
  6999  0736  01EE               	clrf	_loop^(0+128)
  7000  0737                     l3339:	
  7001                           
  7002                           ;main.c: 147: }
  7003                           ;main.c: 149: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  7004  0737  01C6               	clrf	main@j^(0+128)
  7005  0738  3002               	movlw	2
  7006  0739  0246               	subwf	main@j^(0+128),w
  7007  073A  1803               	btfsc	3,0
  7008  073B  2F53               	goto	l3351
  7009  073C                     l3345:	
  7010  073C  0846               	movf	main@j^(0+128),w
  7011  073D  3180  2071  3185   	fcall	_readAnalog
  7012  0740  0021               	movlb	1	; select bank1
  7013  0741  3546               	lslf	main@j^(0+128),w
  7014  0742  3EC1               	addlw	(low (main@analogs| 0))& (0+255)
  7015  0743  0086               	movwf	6
  7016  0744  0187               	clrf	7
  7017  0745  0020               	movlb	0	; select bank0
  7018  0746  0826               	movf	?_readAnalog,w
  7019  0747  3FC0               	movwi [0]fsr1
  7020  0748  0827               	movf	?_readAnalog+1,w
  7021  0749  3FC1               	movwi [1]fsr1
  7022  074A  3001               	movlw	1
  7023  074B  0021               	movlb	1	; select bank1
  7024  074C  00A0               	movwf	??_main^(0+128)
  7025  074D  0820               	movf	??_main^(0+128),w
  7026  074E  07C6               	addwf	main@j^(0+128),f
  7027  074F  3002               	movlw	2
  7028  0750  0246               	subwf	main@j^(0+128),w
  7029  0751  1C03               	skipc
  7030  0752  2F3C               	goto	l3345
  7031  0753                     l3351:	
  7032                           
  7033                           ;main.c: 151: analogs[0]=tempCalc(analogs[0]);
  7034  0753  0842               	movf	(main@analogs+1)^(0+128),w
  7035  0754  0020               	movlb	0	; select bank0
  7036  0755  00DE               	movwf	tempCalc@analogValue+1
  7037  0756  0021               	movlb	1	; select bank1
  7038  0757  0841               	movf	main@analogs^(0+128),w
  7039  0758  0020               	movlb	0	; select bank0
  7040  0759  00DD               	movwf	tempCalc@analogValue
  7041  075A  318E  26E3  3185   	fcall	_tempCalc
  7042  075D  0020               	movlb	0	; select bank0
  7043  075E  085E               	movf	?_tempCalc+1,w
  7044  075F  0021               	movlb	1	; select bank1
  7045  0760  00C2               	movwf	(main@analogs+1)^(0+128)
  7046  0761  0020               	movlb	0	; select bank0
  7047  0762  085D               	movf	?_tempCalc,w
  7048  0763  0021               	movlb	1	; select bank1
  7049  0764  00C1               	movwf	main@analogs^(0+128)
  7050                           
  7051                           ;main.c: 153: analogs[1]=tempCalc(analogs[1]);
  7052  0765  0844               	movf	((main@analogs+1)^(0+128)+2),w
  7053  0766  0020               	movlb	0	; select bank0
  7054  0767  00DE               	movwf	tempCalc@analogValue+1
  7055  0768  0021               	movlb	1	; select bank1
  7056  0769  0843               	movf	(main@analogs^(0+128)+2),w
  7057  076A  0020               	movlb	0	; select bank0
  7058  076B  00DD               	movwf	tempCalc@analogValue
  7059  076C  318E  26E3  3185   	fcall	_tempCalc
  7060  076F  0020               	movlb	0	; select bank0
  7061  0770  085E               	movf	?_tempCalc+1,w
  7062  0771  0021               	movlb	1	; select bank1
  7063  0772  00C4               	movwf	((main@analogs+1)^(0+128)+2)
  7064  0773  0020               	movlb	0	; select bank0
  7065  0774  085D               	movf	?_tempCalc,w
  7066  0775  0021               	movlb	1	; select bank1
  7067  0776  00C3               	movwf	(main@analogs^(0+128)+2)
  7068                           
  7069                           ;main.c: 156: if(RB2)
  7070  0777  0020               	movlb	0	; select bank0
  7071  0778  1D0D               	btfss	13,2	;volatile
  7072  0779  2FC0               	goto	l3373
  7073                           
  7074                           ;main.c: 157: {
  7075                           ;main.c: 159: LCD_Clear();
  7076  077A  3195  25CA  3185   	fcall	_LCD_Clear
  7077                           
  7078                           ;main.c: 160: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7079  077D  01F3               	clrf	LCD_Set_Cursor@y
  7080  077E  3000               	movlw	0
  7081  077F  3188  203A  3185   	fcall	_LCD_Set_Cursor
  7082  0782  301B               	movlw	low (STR_6| (0+32768))
  7083  0783  00F5               	movwf	LCD_Write_String@a
  7084  0784  3098               	movlw	high (STR_6| (0+32768))
  7085  0785  00F6               	movwf	LCD_Write_String@a+1
  7086  0786  3196  26AB  3185   	fcall	_LCD_Write_String
  7087                           
  7088                           ;main.c: 161: { LCD_Set_Cursor(0,1); LCD_Write_String("Enter Key to Set");};
  7089  0789  01F3               	clrf	LCD_Set_Cursor@y
  7090  078A  0AF3               	incf	LCD_Set_Cursor@y,f
  7091  078B  3000               	movlw	0
  7092  078C  3188  203A  3185   	fcall	_LCD_Set_Cursor
  7093  078F  302C               	movlw	low (STR_7| (0+32768))
  7094  0790  00F5               	movwf	LCD_Write_String@a
  7095  0791  3098               	movlw	high (STR_7| (0+32768))
  7096  0792  00F6               	movwf	LCD_Write_String@a+1
  7097  0793  3196  26AB  3185   	fcall	_LCD_Write_String
  7098                           
  7099                           ;main.c: 162: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7100  0796  303D               	movlw	61
  7101  0797  0021               	movlb	1	; select bank1
  7102  0798  00A1               	movwf	(??_main^(0+128)+1)
  7103  0799  30E1               	movlw	225
  7104  079A  00A0               	movwf	??_main^(0+128)
  7105  079B  303F               	movlw	63
  7106  079C                     u3947:	
  7107  079C  0B89               	decfsz	9,f
  7108  079D  2F9C               	goto	u3947
  7109  079E  0BA0               	decfsz	??_main^(0+128),f
  7110  079F  2F9C               	goto	u3947
  7111  07A0  0BA1               	decfsz	(??_main^(0+128)+1),f
  7112  07A1  2F9C               	goto	u3947
  7113  07A2  3200               	nop2
  7114                           
  7115                           ;main.c: 163: LCD_Clear();
  7116  07A3  3195  25CA  3185   	fcall	_LCD_Clear
  7117                           
  7118                           ;main.c: 164: menuChoice();
  7119  07A6  3183  2330  3185   	fcall	_menuChoice
  7120                           
  7121                           ;main.c: 165: _delay((unsigned long)((500)*(32000000/4000.0)));
  7122  07A9  3015               	movlw	21
  7123  07AA  0021               	movlb	1	; select bank1
  7124  07AB  00A1               	movwf	(??_main^(0+128)+1)
  7125  07AC  304B               	movlw	75
  7126  07AD  00A0               	movwf	??_main^(0+128)
  7127  07AE  30BE               	movlw	190
  7128  07AF                     u3957:	
  7129  07AF  0B89               	decfsz	9,f
  7130  07B0  2FAF               	goto	u3957
  7131  07B1  0BA0               	decfsz	??_main^(0+128),f
  7132  07B2  2FAF               	goto	u3957
  7133  07B3  0BA1               	decfsz	(??_main^(0+128)+1),f
  7134  07B4  2FAF               	goto	u3957
  7135  07B5  0000               	nop
  7136                           
  7137                           ;main.c: 166: viperFanOut=0;
  7138  07B6  0021               	movlb	1	; select bank1
  7139  07B7  01C7               	clrf	main@viperFanOut^(0+128)
  7140  07B8  01C8               	clrf	(main@viperFanOut+1)^(0+128)
  7141                           
  7142                           ;main.c: 167: PWM6_LoadDutyValue(viperFanOut);
  7143  07B9  0848               	movf	(main@viperFanOut+1)^(0+128),w
  7144  07BA  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7145  07BB  0847               	movf	main@viperFanOut^(0+128),w
  7146  07BC  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7147  07BD  3196  264D  3185   	fcall	_PWM6_LoadDutyValue
  7148  07C0                     l3373:	
  7149                           
  7150                           ;main.c: 170: }
  7151                           ;main.c: 171: loop+=1;
  7152  07C0  3001               	movlw	1
  7153  07C1  0021               	movlb	1	; select bank1
  7154  07C2  00A0               	movwf	??_main^(0+128)
  7155  07C3  0820               	movf	??_main^(0+128),w
  7156  07C4  07EE               	addwf	_loop^(0+128),f
  7157  07C5  2DBA               	goto	l3271
  7158  07C6                     __end_of_main:	
  7159                           
  7160                           	psect	text1
  7161  0EE3                     __ptext1:	
  7162 ;; *************** function _tempCalc *****************
  7163 ;; Defined at:
  7164 ;;		line 4 in file "tempCalc.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  analogValue     2   61[BANK0 ] int 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  steinhart       3   69[BANK0 ] float 
  7169 ;;  R               3   63[BANK0 ] float 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  2   61[BANK0 ] int 
  7172 ;; Registers used:
  7173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;Total ram usage:       11 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    4
  7186 ;; This function calls:
  7187 ;;		___awtoft
  7188 ;;		___ftadd
  7189 ;;		___ftdiv
  7190 ;;		___ftmul
  7191 ;;		___ftsub
  7192 ;;		___fttol
  7193 ;;		_log
  7194 ;; This function is called by:
  7195 ;;		_main
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           
  7200                           ;psect for function _tempCalc
  7201  0EE3                     _tempCalc:	
  7202                           
  7203                           ;tempCalc.c: 6: float R, steinhart;
  7204                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7205                           
  7206                           ;incstack = 0
  7207                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7208  0EE3  3000               	movlw	0
  7209  0EE4  0020               	movlb	0	; select bank0
  7210  0EE5  00C0               	movwf	___ftadd@f1
  7211  0EE6  3080               	movlw	128
  7212  0EE7  00C1               	movwf	___ftadd@f1+1
  7213  0EE8  30BF               	movlw	191
  7214  0EE9  00C2               	movwf	___ftadd@f1+2
  7215  0EEA  085E               	movf	tempCalc@analogValue+1,w
  7216  0EEB  00F9               	movwf	___awtoft@c+1
  7217  0EEC  085D               	movf	tempCalc@analogValue,w
  7218  0EED  00F8               	movwf	___awtoft@c
  7219  0EEE  3197  271A  318E   	fcall	___awtoft
  7220  0EF1  0878               	movf	?___awtoft,w
  7221  0EF2  0020               	movlb	0	; select bank0
  7222  0EF3  00B0               	movwf	___ftdiv@f2
  7223  0EF4  0879               	movf	?___awtoft+1,w
  7224  0EF5  00B1               	movwf	___ftdiv@f2+1
  7225  0EF6  087A               	movf	?___awtoft+2,w
  7226  0EF7  00B2               	movwf	___ftdiv@f2+2
  7227  0EF8  30C0               	movlw	192
  7228  0EF9  00B3               	movwf	___ftdiv@f1
  7229  0EFA  307F               	movlw	127
  7230  0EFB  00B4               	movwf	___ftdiv@f1+1
  7231  0EFC  3044               	movlw	68
  7232  0EFD  00B5               	movwf	___ftdiv@f1+2
  7233  0EFE  318B  232D  318E   	fcall	___ftdiv
  7234  0F01  0020               	movlb	0	; select bank0
  7235  0F02  0830               	movf	?___ftdiv,w
  7236  0F03  00C3               	movwf	___ftadd@f2
  7237  0F04  0831               	movf	?___ftdiv+1,w
  7238  0F05  00C4               	movwf	___ftadd@f2+1
  7239  0F06  0832               	movf	?___ftdiv+2,w
  7240  0F07  00C5               	movwf	___ftadd@f2+2
  7241  0F08  318D  25ED  318E   	fcall	___ftadd
  7242  0F0B  0020               	movlb	0	; select bank0
  7243  0F0C  0840               	movf	?___ftadd,w
  7244  0F0D  00E2               	movwf	_tempCalc$1036
  7245  0F0E  0841               	movf	?___ftadd+1,w
  7246  0F0F  00E3               	movwf	_tempCalc$1036+1
  7247  0F10  0842               	movf	?___ftadd+2,w
  7248  0F11  00E4               	movwf	_tempCalc$1036+2
  7249                           
  7250                           ;tempCalc.c: 6: float R, steinhart;
  7251                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7252  0F12  0862               	movf	_tempCalc$1036,w
  7253  0F13  00B0               	movwf	___ftdiv@f2
  7254  0F14  0863               	movf	_tempCalc$1036+1,w
  7255  0F15  00B1               	movwf	___ftdiv@f2+1
  7256  0F16  0864               	movf	_tempCalc$1036+2,w
  7257  0F17  00B2               	movwf	___ftdiv@f2+2
  7258  0F18  3088               	movlw	136
  7259  0F19  00B3               	movwf	___ftdiv@f1
  7260  0F1A  301A               	movlw	26
  7261  0F1B  00B4               	movwf	___ftdiv@f1+1
  7262  0F1C  3046               	movlw	70
  7263  0F1D  00B5               	movwf	___ftdiv@f1+2
  7264  0F1E  318B  232D  318E   	fcall	___ftdiv
  7265  0F21  0020               	movlb	0	; select bank0
  7266  0F22  0830               	movf	?___ftdiv,w
  7267  0F23  00DF               	movwf	tempCalc@R
  7268  0F24  0831               	movf	?___ftdiv+1,w
  7269  0F25  00E0               	movwf	tempCalc@R+1
  7270  0F26  0832               	movf	?___ftdiv+2,w
  7271  0F27  00E1               	movwf	tempCalc@R+2
  7272                           
  7273                           ;tempCalc.c: 10: steinhart = R /9990;
  7274  0F28  3018               	movlw	24
  7275  0F29  00B0               	movwf	___ftdiv@f2
  7276  0F2A  301C               	movlw	28
  7277  0F2B  00B1               	movwf	___ftdiv@f2+1
  7278  0F2C  3046               	movlw	70
  7279  0F2D  00B2               	movwf	___ftdiv@f2+2
  7280  0F2E  085F               	movf	tempCalc@R,w
  7281  0F2F  00B3               	movwf	___ftdiv@f1
  7282  0F30  0860               	movf	tempCalc@R+1,w
  7283  0F31  00B4               	movwf	___ftdiv@f1+1
  7284  0F32  0861               	movf	tempCalc@R+2,w
  7285  0F33  00B5               	movwf	___ftdiv@f1+2
  7286  0F34  318B  232D  318E   	fcall	___ftdiv
  7287  0F37  0020               	movlb	0	; select bank0
  7288  0F38  0830               	movf	?___ftdiv,w
  7289  0F39  00E5               	movwf	tempCalc@steinhart
  7290  0F3A  0831               	movf	?___ftdiv+1,w
  7291  0F3B  00E6               	movwf	tempCalc@steinhart+1
  7292  0F3C  0832               	movf	?___ftdiv+2,w
  7293  0F3D  00E7               	movwf	tempCalc@steinhart+2
  7294                           
  7295                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7296  0F3E  0865               	movf	tempCalc@steinhart,w
  7297  0F3F  00D7               	movwf	log@x
  7298  0F40  0866               	movf	tempCalc@steinhart+1,w
  7299  0F41  00D8               	movwf	log@x+1
  7300  0F42  0867               	movf	tempCalc@steinhart+2,w
  7301  0F43  00D9               	movwf	log@x+2
  7302  0F44  318B  23D6  318E   	fcall	_log
  7303  0F47  0020               	movlb	0	; select bank0
  7304  0F48  0857               	movf	?_log,w
  7305  0F49  00E5               	movwf	tempCalc@steinhart
  7306  0F4A  0858               	movf	?_log+1,w
  7307  0F4B  00E6               	movwf	tempCalc@steinhart+1
  7308  0F4C  0859               	movf	?_log+2,w
  7309  0F4D  00E7               	movwf	tempCalc@steinhart+2
  7310                           
  7311                           ;tempCalc.c: 12: steinhart /= 4030;
  7312  0F4E  30E0               	movlw	224
  7313  0F4F  00B0               	movwf	___ftdiv@f2
  7314  0F50  307B               	movlw	123
  7315  0F51  00B1               	movwf	___ftdiv@f2+1
  7316  0F52  3045               	movlw	69
  7317  0F53  00B2               	movwf	___ftdiv@f2+2
  7318  0F54  0865               	movf	tempCalc@steinhart,w
  7319  0F55  00B3               	movwf	___ftdiv@f1
  7320  0F56  0866               	movf	tempCalc@steinhart+1,w
  7321  0F57  00B4               	movwf	___ftdiv@f1+1
  7322  0F58  0867               	movf	tempCalc@steinhart+2,w
  7323  0F59  00B5               	movwf	___ftdiv@f1+2
  7324  0F5A  318B  232D  318E   	fcall	___ftdiv
  7325  0F5D  0020               	movlb	0	; select bank0
  7326  0F5E  0830               	movf	?___ftdiv,w
  7327  0F5F  00E5               	movwf	tempCalc@steinhart
  7328  0F60  0831               	movf	?___ftdiv+1,w
  7329  0F61  00E6               	movwf	tempCalc@steinhart+1
  7330  0F62  0832               	movf	?___ftdiv+2,w
  7331  0F63  00E7               	movwf	tempCalc@steinhart+2
  7332                           
  7333                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  7334  0F64  30CF               	movlw	207
  7335  0F65  00C0               	movwf	___ftadd@f1
  7336  0F66  305B               	movlw	91
  7337  0F67  00C1               	movwf	___ftadd@f1+1
  7338  0F68  303B               	movlw	59
  7339  0F69  00C2               	movwf	___ftadd@f1+2
  7340  0F6A  0865               	movf	tempCalc@steinhart,w
  7341  0F6B  00C3               	movwf	___ftadd@f2
  7342  0F6C  0866               	movf	tempCalc@steinhart+1,w
  7343  0F6D  00C4               	movwf	___ftadd@f2+1
  7344  0F6E  0867               	movf	tempCalc@steinhart+2,w
  7345  0F6F  00C5               	movwf	___ftadd@f2+2
  7346  0F70  318D  25ED  318E   	fcall	___ftadd
  7347  0F73  0020               	movlb	0	; select bank0
  7348  0F74  0840               	movf	?___ftadd,w
  7349  0F75  00E5               	movwf	tempCalc@steinhart
  7350  0F76  0841               	movf	?___ftadd+1,w
  7351  0F77  00E6               	movwf	tempCalc@steinhart+1
  7352  0F78  0842               	movf	?___ftadd+2,w
  7353  0F79  00E7               	movwf	tempCalc@steinhart+2
  7354                           
  7355                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  7356  0F7A  0865               	movf	tempCalc@steinhart,w
  7357  0F7B  00B0               	movwf	___ftdiv@f2
  7358  0F7C  0866               	movf	tempCalc@steinhart+1,w
  7359  0F7D  00B1               	movwf	___ftdiv@f2+1
  7360  0F7E  0867               	movf	tempCalc@steinhart+2,w
  7361  0F7F  00B2               	movwf	___ftdiv@f2+2
  7362  0F80  3000               	movlw	0
  7363  0F81  00B3               	movwf	___ftdiv@f1
  7364  0F82  3080               	movlw	128
  7365  0F83  00B4               	movwf	___ftdiv@f1+1
  7366  0F84  303F               	movlw	63
  7367  0F85  00B5               	movwf	___ftdiv@f1+2
  7368  0F86  318B  232D  318E   	fcall	___ftdiv
  7369  0F89  0020               	movlb	0	; select bank0
  7370  0F8A  0830               	movf	?___ftdiv,w
  7371  0F8B  00E5               	movwf	tempCalc@steinhart
  7372  0F8C  0831               	movf	?___ftdiv+1,w
  7373  0F8D  00E6               	movwf	tempCalc@steinhart+1
  7374  0F8E  0832               	movf	?___ftdiv+2,w
  7375  0F8F  00E7               	movwf	tempCalc@steinhart+2
  7376                           
  7377                           ;tempCalc.c: 17: steinhart -= 273.15;
  7378  0F90  3093               	movlw	147
  7379  0F91  00CD               	movwf	___ftsub@f2
  7380  0F92  3088               	movlw	136
  7381  0F93  00CE               	movwf	___ftsub@f2+1
  7382  0F94  3043               	movlw	67
  7383  0F95  00CF               	movwf	___ftsub@f2+2
  7384  0F96  0865               	movf	tempCalc@steinhart,w
  7385  0F97  00D0               	movwf	___ftsub@f1
  7386  0F98  0866               	movf	tempCalc@steinhart+1,w
  7387  0F99  00D1               	movwf	___ftsub@f1+1
  7388  0F9A  0867               	movf	tempCalc@steinhart+2,w
  7389  0F9B  00D2               	movwf	___ftsub@f1+2
  7390  0F9C  3196  26FC  318E   	fcall	___ftsub
  7391  0F9F  0020               	movlb	0	; select bank0
  7392  0FA0  084D               	movf	?___ftsub,w
  7393  0FA1  00E5               	movwf	tempCalc@steinhart
  7394  0FA2  084E               	movf	?___ftsub+1,w
  7395  0FA3  00E6               	movwf	tempCalc@steinhart+1
  7396  0FA4  084F               	movf	?___ftsub+2,w
  7397  0FA5  00E7               	movwf	tempCalc@steinhart+2
  7398                           
  7399                           ;tempCalc.c: 19: steinhart*=10;
  7400  0FA6  3000               	movlw	0
  7401  0FA7  00A0               	movwf	___ftmul@f1
  7402  0FA8  3020               	movlw	32
  7403  0FA9  00A1               	movwf	___ftmul@f1+1
  7404  0FAA  3041               	movlw	65
  7405  0FAB  00A2               	movwf	___ftmul@f1+2
  7406  0FAC  0865               	movf	tempCalc@steinhart,w
  7407  0FAD  00A3               	movwf	___ftmul@f2
  7408  0FAE  0866               	movf	tempCalc@steinhart+1,w
  7409  0FAF  00A4               	movwf	___ftmul@f2+1
  7410  0FB0  0867               	movf	tempCalc@steinhart+2,w
  7411  0FB1  00A5               	movwf	___ftmul@f2+2
  7412  0FB2  318D  2539  318E   	fcall	___ftmul
  7413  0FB5  0020               	movlb	0	; select bank0
  7414  0FB6  0820               	movf	?___ftmul,w
  7415  0FB7  00E5               	movwf	tempCalc@steinhart
  7416  0FB8  0821               	movf	?___ftmul+1,w
  7417  0FB9  00E6               	movwf	tempCalc@steinhart+1
  7418  0FBA  0822               	movf	?___ftmul+2,w
  7419  0FBB  00E7               	movwf	tempCalc@steinhart+2
  7420                           
  7421                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  7422  0FBC  3000               	movlw	0
  7423  0FBD  00C0               	movwf	___ftadd@f1
  7424  0FBE  30A0               	movlw	160
  7425  0FBF  00C1               	movwf	___ftadd@f1+1
  7426  0FC0  3043               	movlw	67
  7427  0FC1  00C2               	movwf	___ftadd@f1+2
  7428  0FC2  3000               	movlw	0
  7429  0FC3  00B0               	movwf	___ftdiv@f2
  7430  0FC4  30A0               	movlw	160
  7431  0FC5  00B1               	movwf	___ftdiv@f2+1
  7432  0FC6  3040               	movlw	64
  7433  0FC7  00B2               	movwf	___ftdiv@f2+2
  7434  0FC8  3000               	movlw	0
  7435  0FC9  00A0               	movwf	___ftmul@f1
  7436  0FCA  3010               	movlw	16
  7437  0FCB  00A1               	movwf	___ftmul@f1+1
  7438  0FCC  3041               	movlw	65
  7439  0FCD  00A2               	movwf	___ftmul@f1+2
  7440  0FCE  0865               	movf	tempCalc@steinhart,w
  7441  0FCF  00A3               	movwf	___ftmul@f2
  7442  0FD0  0866               	movf	tempCalc@steinhart+1,w
  7443  0FD1  00A4               	movwf	___ftmul@f2+1
  7444  0FD2  0867               	movf	tempCalc@steinhart+2,w
  7445  0FD3  00A5               	movwf	___ftmul@f2+2
  7446  0FD4  318D  2539  318E   	fcall	___ftmul
  7447  0FD7  0020               	movlb	0	; select bank0
  7448  0FD8  0820               	movf	?___ftmul,w
  7449  0FD9  00B3               	movwf	___ftdiv@f1
  7450  0FDA  0821               	movf	?___ftmul+1,w
  7451  0FDB  00B4               	movwf	___ftdiv@f1+1
  7452  0FDC  0822               	movf	?___ftmul+2,w
  7453  0FDD  00B5               	movwf	___ftdiv@f1+2
  7454  0FDE  318B  232D  318E   	fcall	___ftdiv
  7455  0FE1  0020               	movlb	0	; select bank0
  7456  0FE2  0830               	movf	?___ftdiv,w
  7457  0FE3  00C3               	movwf	___ftadd@f2
  7458  0FE4  0831               	movf	?___ftdiv+1,w
  7459  0FE5  00C4               	movwf	___ftadd@f2+1
  7460  0FE6  0832               	movf	?___ftdiv+2,w
  7461  0FE7  00C5               	movwf	___ftadd@f2+2
  7462  0FE8  318D  25ED  318E   	fcall	___ftadd
  7463  0FEB  0020               	movlb	0	; select bank0
  7464  0FEC  0840               	movf	?___ftadd,w
  7465  0FED  00E5               	movwf	tempCalc@steinhart
  7466  0FEE  0841               	movf	?___ftadd+1,w
  7467  0FEF  00E6               	movwf	tempCalc@steinhart+1
  7468  0FF0  0842               	movf	?___ftadd+2,w
  7469  0FF1  00E7               	movwf	tempCalc@steinhart+2
  7470                           
  7471                           ;tempCalc.c: 23: return (int16_t)steinhart;
  7472  0FF2  0865               	movf	tempCalc@steinhart,w
  7473  0FF3  00F0               	movwf	___fttol@f1
  7474  0FF4  0866               	movf	tempCalc@steinhart+1,w
  7475  0FF5  00F1               	movwf	___fttol@f1+1
  7476  0FF6  0867               	movf	tempCalc@steinhart+2,w
  7477  0FF7  00F2               	movwf	___fttol@f1+2
  7478  0FF8  318A  22A7         	fcall	___fttol
  7479  0FFA  0871               	movf	?___fttol+1,w
  7480  0FFB  0020               	movlb	0	; select bank0
  7481  0FFC  00DE               	movwf	?_tempCalc+1
  7482  0FFD  0870               	movf	?___fttol,w
  7483  0FFE  00DD               	movwf	?_tempCalc
  7484  0FFF  0008               	return
  7485  1000                     __end_of_tempCalc:	
  7486                           
  7487                           	psect	text2
  7488  0BD6                     __ptext2:	
  7489 ;; *************** function _log *****************
  7490 ;; Defined at:
  7491 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  x               3   55[BANK0 ] int 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  exponent        2   59[BANK0 ] int 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  3   55[BANK0 ] int 
  7498 ;; Registers used:
  7499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7505 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;Total ram usage:        6 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    3
  7512 ;; This function calls:
  7513 ;;		___awtoft
  7514 ;;		___ftadd
  7515 ;;		___ftge
  7516 ;;		___ftmul
  7517 ;;		_eval_poly
  7518 ;;		_frexp
  7519 ;; This function is called by:
  7520 ;;		_tempCalc
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           
  7525                           ;psect for function _log
  7526  0BD6                     _log:	
  7527                           
  7528                           ;incstack = 0
  7529                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7530  0BD6  0020               	movlb	0	; select bank0
  7531  0BD7  0857               	movf	log@x,w
  7532  0BD8  00F0               	movwf	___ftge@ff1
  7533  0BD9  0858               	movf	log@x+1,w
  7534  0BDA  00F1               	movwf	___ftge@ff1+1
  7535  0BDB  0859               	movf	log@x+2,w
  7536  0BDC  00F2               	movwf	___ftge@ff1+2
  7537  0BDD  3000               	movlw	0
  7538  0BDE  00F3               	movwf	___ftge@ff2
  7539  0BDF  3000               	movlw	0
  7540  0BE0  00F4               	movwf	___ftge@ff2+1
  7541  0BE1  3000               	movlw	0
  7542  0BE2  00F5               	movwf	___ftge@ff2+2
  7543  0BE3  3197  278A  318B   	fcall	___ftge
  7544  0BE6  1803               	btfsc	3,0
  7545  0BE7  2BF5               	goto	l2797
  7546  0BE8  3021               	movlw	33
  7547  0BE9  0022               	movlb	2	; select bank2
  7548  0BEA  00BB               	movwf	_errno^(0+256)
  7549  0BEB  3000               	movlw	0
  7550  0BEC  00BC               	movwf	(_errno^(0+256)+1)
  7551  0BED  3000               	movlw	0
  7552  0BEE  0020               	movlb	0	; select bank0
  7553  0BEF  00D7               	movwf	?_log
  7554  0BF0  3000               	movlw	0
  7555  0BF1  00D8               	movwf	?_log+1
  7556  0BF2  3000               	movlw	0
  7557  0BF3  00D9               	movwf	?_log+2
  7558  0BF4  0008               	return
  7559  0BF5                     l2797:	
  7560  0BF5  0020               	movlb	0	; select bank0
  7561  0BF6  0859               	movf	log@x+2,w
  7562  0BF7  0458               	iorwf	log@x+1,w
  7563  0BF8  0457               	iorwf	log@x,w
  7564  0BF9  1D03               	skipz
  7565  0BFA  2C08               	goto	l2803
  7566  0BFB  3022               	movlw	34
  7567  0BFC  0022               	movlb	2	; select bank2
  7568  0BFD  00BB               	movwf	_errno^(0+256)
  7569  0BFE  3000               	movlw	0
  7570  0BFF  00BC               	movwf	(_errno^(0+256)+1)
  7571  0C00  3000               	movlw	0
  7572  0C01  0020               	movlb	0	; select bank0
  7573  0C02  00D7               	movwf	?_log
  7574  0C03  3000               	movlw	0
  7575  0C04  00D8               	movwf	?_log+1
  7576  0C05  3000               	movlw	0
  7577  0C06  00D9               	movwf	?_log+2
  7578  0C07  0008               	return
  7579  0C08                     l2803:	
  7580  0C08  3000               	movlw	0
  7581  0C09  00C0               	movwf	___ftadd@f1
  7582  0C0A  3080               	movlw	128
  7583  0C0B  00C1               	movwf	___ftadd@f1+1
  7584  0C0C  30BF               	movlw	191
  7585  0C0D  00C2               	movwf	___ftadd@f1+2
  7586  0C0E  3000               	movlw	0
  7587  0C0F  00A0               	movwf	___ftmul@f1
  7588  0C10  3000               	movlw	0
  7589  0C11  00A1               	movwf	___ftmul@f1+1
  7590  0C12  3040               	movlw	64
  7591  0C13  00A2               	movwf	___ftmul@f1+2
  7592  0C14  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7593  0C15  00DA               	movwf	??_log
  7594  0C16  085A               	movf	??_log,w
  7595  0C17  00F3               	movwf	frexp@eptr
  7596  0C18  0857               	movf	log@x,w
  7597  0C19  00F0               	movwf	frexp@value
  7598  0C1A  0858               	movf	log@x+1,w
  7599  0C1B  00F1               	movwf	frexp@value+1
  7600  0C1C  0859               	movf	log@x+2,w
  7601  0C1D  00F2               	movwf	frexp@value+2
  7602  0C1E  3197  27C5  318B   	fcall	_frexp
  7603  0C21  0870               	movf	?_frexp,w
  7604  0C22  0020               	movlb	0	; select bank0
  7605  0C23  00A3               	movwf	___ftmul@f2
  7606  0C24  0871               	movf	?_frexp+1,w
  7607  0C25  00A4               	movwf	___ftmul@f2+1
  7608  0C26  0872               	movf	?_frexp+2,w
  7609  0C27  00A5               	movwf	___ftmul@f2+2
  7610  0C28  318D  2539  318B   	fcall	___ftmul
  7611  0C2B  0020               	movlb	0	; select bank0
  7612  0C2C  0820               	movf	?___ftmul,w
  7613  0C2D  00C3               	movwf	___ftadd@f2
  7614  0C2E  0821               	movf	?___ftmul+1,w
  7615  0C2F  00C4               	movwf	___ftadd@f2+1
  7616  0C30  0822               	movf	?___ftmul+2,w
  7617  0C31  00C5               	movwf	___ftadd@f2+2
  7618  0C32  318D  25ED  318B   	fcall	___ftadd
  7619  0C35  0020               	movlb	0	; select bank0
  7620  0C36  0840               	movf	?___ftadd,w
  7621  0C37  00D7               	movwf	log@x
  7622  0C38  0841               	movf	?___ftadd+1,w
  7623  0C39  00D8               	movwf	log@x+1
  7624  0C3A  0842               	movf	?___ftadd+2,w
  7625  0C3B  00D9               	movwf	log@x+2
  7626  0C3C  30FF               	movlw	255
  7627  0C3D  07DB               	addwf	log@exponent,f
  7628  0C3E  30FF               	movlw	255
  7629  0C3F  3DDC               	addwfc	log@exponent+1,f
  7630  0C40  0857               	movf	log@x,w
  7631  0C41  00CD               	movwf	eval_poly@x
  7632  0C42  0858               	movf	log@x+1,w
  7633  0C43  00CE               	movwf	eval_poly@x+1
  7634  0C44  0859               	movf	log@x+2,w
  7635  0C45  00CF               	movwf	eval_poly@x+2
  7636  0C46  3000               	movlw	low (log@coeff| (0+32768))
  7637  0C47  00D0               	movwf	eval_poly@d
  7638  0C48  3098               	movlw	high (log@coeff| (0+32768))
  7639  0C49  00D1               	movwf	eval_poly@d+1
  7640  0C4A  3008               	movlw	8
  7641  0C4B  00D2               	movwf	eval_poly@n
  7642  0C4C  3000               	movlw	0
  7643  0C4D  00D3               	movwf	eval_poly@n+1
  7644  0C4E  3189  214F  318B   	fcall	_eval_poly
  7645  0C51  0020               	movlb	0	; select bank0
  7646  0C52  084D               	movf	?_eval_poly,w
  7647  0C53  00D7               	movwf	log@x
  7648  0C54  084E               	movf	?_eval_poly+1,w
  7649  0C55  00D8               	movwf	log@x+1
  7650  0C56  084F               	movf	?_eval_poly+2,w
  7651  0C57  00D9               	movwf	log@x+2
  7652  0C58  0857               	movf	log@x,w
  7653  0C59  00C0               	movwf	___ftadd@f1
  7654  0C5A  0858               	movf	log@x+1,w
  7655  0C5B  00C1               	movwf	___ftadd@f1+1
  7656  0C5C  0859               	movf	log@x+2,w
  7657  0C5D  00C2               	movwf	___ftadd@f1+2
  7658  0C5E  3072               	movlw	114
  7659  0C5F  00A0               	movwf	___ftmul@f1
  7660  0C60  3031               	movlw	49
  7661  0C61  00A1               	movwf	___ftmul@f1+1
  7662  0C62  303F               	movlw	63
  7663  0C63  00A2               	movwf	___ftmul@f1+2
  7664  0C64  085C               	movf	log@exponent+1,w
  7665  0C65  00F9               	movwf	___awtoft@c+1
  7666  0C66  085B               	movf	log@exponent,w
  7667  0C67  00F8               	movwf	___awtoft@c
  7668  0C68  3197  271A  318B   	fcall	___awtoft
  7669  0C6B  0878               	movf	?___awtoft,w
  7670  0C6C  0020               	movlb	0	; select bank0
  7671  0C6D  00A3               	movwf	___ftmul@f2
  7672  0C6E  0879               	movf	?___awtoft+1,w
  7673  0C6F  00A4               	movwf	___ftmul@f2+1
  7674  0C70  087A               	movf	?___awtoft+2,w
  7675  0C71  00A5               	movwf	___ftmul@f2+2
  7676  0C72  318D  2539  318B   	fcall	___ftmul
  7677  0C75  0020               	movlb	0	; select bank0
  7678  0C76  0820               	movf	?___ftmul,w
  7679  0C77  00C3               	movwf	___ftadd@f2
  7680  0C78  0821               	movf	?___ftmul+1,w
  7681  0C79  00C4               	movwf	___ftadd@f2+1
  7682  0C7A  0822               	movf	?___ftmul+2,w
  7683  0C7B  00C5               	movwf	___ftadd@f2+2
  7684  0C7C  318D  25ED         	fcall	___ftadd
  7685  0C7E  0020               	movlb	0	; select bank0
  7686  0C7F  0840               	movf	?___ftadd,w
  7687  0C80  00D7               	movwf	?_log
  7688  0C81  0841               	movf	?___ftadd+1,w
  7689  0C82  00D8               	movwf	?_log+1
  7690  0C83  0842               	movf	?___ftadd+2,w
  7691  0C84  00D9               	movwf	?_log+2
  7692  0C85  0008               	return
  7693  0C86                     __end_of_log:	
  7694                           
  7695                           	psect	text3
  7696  17C5                     __ptext3:	
  7697 ;; *************** function _frexp *****************
  7698 ;; Defined at:
  7699 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  value           3    0[COMMON] int 
  7702 ;;  eptr            1    3[COMMON] PTR int 
  7703 ;;		 -> log@exponent(2), 
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;		None
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  3    0[COMMON] PTR int 
  7708 ;; Registers used:
  7709 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;Total ram usage:        6 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_log
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           
  7729                           ;psect for function _frexp
  7730  17C5                     _frexp:	
  7731                           
  7732                           ;incstack = 0
  7733                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7734  17C5  0872               	movf	frexp@value+2,w
  7735  17C6  0471               	iorwf	frexp@value+1,w
  7736  17C7  0470               	iorwf	frexp@value,w
  7737  17C8  1D03               	skipz
  7738  17C9  2FD7               	goto	l2517
  7739  17CA  0873               	movf	frexp@eptr,w
  7740  17CB  0086               	movwf	6
  7741  17CC  0187               	clrf	7
  7742  17CD  3000               	movlw	0
  7743  17CE  3FC0               	movwi [0]fsr1
  7744  17CF  3FC1               	movwi [1]fsr1
  7745  17D0  3000               	movlw	0
  7746  17D1  00F0               	movwf	?_frexp
  7747  17D2  3000               	movlw	0
  7748  17D3  00F1               	movwf	?_frexp+1
  7749  17D4  3000               	movlw	0
  7750  17D5  00F2               	movwf	?_frexp+2
  7751  17D6  0008               	return
  7752  17D7                     l2517:	
  7753  17D7  0872               	movf	frexp@value+2,w
  7754  17D8  397F               	andlw	127
  7755  17D9  00F4               	movwf	??_frexp
  7756  17DA  01F5               	clrf	??_frexp+1
  7757  17DB  35F4               	lslf	??_frexp,f
  7758  17DC  0DF5               	rlf	??_frexp+1,f
  7759  17DD  0873               	movf	frexp@eptr,w
  7760  17DE  0086               	movwf	6
  7761  17DF  0187               	clrf	7
  7762  17E0  0874               	movf	??_frexp,w
  7763  17E1  3FC0               	movwi [0]fsr1
  7764  17E2  0875               	movf	??_frexp+1,w
  7765  17E3  3FC1               	movwi [1]fsr1
  7766  17E4  0D71               	rlf	frexp@value+1,w
  7767  17E5  0D71               	rlf	frexp@value+1,w
  7768  17E6  3901               	andlw	1
  7769  17E7  00F4               	movwf	??_frexp
  7770  17E8  01F5               	clrf	??_frexp+1
  7771  17E9  0873               	movf	frexp@eptr,w
  7772  17EA  0086               	movwf	6
  7773  17EB  0187               	clrf	7
  7774  17EC  0874               	movf	??_frexp,w
  7775  17ED  0481               	iorwf	1,f
  7776  17EE  3141               	addfsr 1,1
  7777  17EF  0875               	movf	??_frexp+1,w
  7778  17F0  0481               	iorwf	1,f
  7779  17F1  0873               	movf	frexp@eptr,w
  7780  17F2  0086               	movwf	6
  7781  17F3  0187               	clrf	7
  7782  17F4  3082               	movlw	130
  7783  17F5  0781               	addwf	1,f
  7784  17F6  3141               	addfsr 1,1
  7785  17F7  30FF               	movlw	255
  7786  17F8  3D81               	addwfc	1,f
  7787  17F9  317F               	addfsr 1,-1
  7788  17FA  0872               	movf	frexp@value+2,w
  7789  17FB  3980               	andlw	-128
  7790  17FC  383F               	iorlw	63
  7791  17FD  00F2               	movwf	frexp@value+2
  7792  17FE  13F1               	bcf	frexp@value+1,7
  7793  17FF  0008               	return
  7794  1800                     __end_of_frexp:	
  7795                           
  7796                           	psect	text4
  7797  094F                     __ptext4:	
  7798 ;; *************** function _eval_poly *****************
  7799 ;; Defined at:
  7800 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  x               3   45[BANK0 ] PTR int 
  7803 ;;  d               2   48[BANK0 ] PTR const 
  7804 ;;		 -> log@coeff(27), 
  7805 ;;  n               2   50[BANK0 ] int 
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  res             3   52[BANK0 ] int 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  3   45[BANK0 ] int 
  7810 ;; Registers used:
  7811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7817 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;Total ram usage:       10 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    2
  7824 ;; This function calls:
  7825 ;;		___ftadd
  7826 ;;		___ftmul
  7827 ;;		___wmul
  7828 ;; This function is called by:
  7829 ;;		_log
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           
  7834                           ;psect for function _eval_poly
  7835  094F                     _eval_poly:	
  7836                           
  7837                           ;incstack = 0
  7838                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7839  094F  0020               	movlb	0	; select bank0
  7840  0950  0853               	movf	eval_poly@n+1,w
  7841  0951  00F1               	movwf	___wmul@multiplier+1
  7842  0952  0852               	movf	eval_poly@n,w
  7843  0953  00F0               	movwf	___wmul@multiplier
  7844  0954  3003               	movlw	3
  7845  0955  00F2               	movwf	___wmul@multiplicand
  7846  0956  3000               	movlw	0
  7847  0957  00F3               	movwf	___wmul@multiplicand+1
  7848  0958  3196  26C5  3189   	fcall	___wmul
  7849  095B  0020               	movlb	0	; select bank0
  7850  095C  0850               	movf	eval_poly@d,w
  7851  095D  0770               	addwf	?___wmul,w
  7852  095E  0084               	movwf	4
  7853  095F  0851               	movf	eval_poly@d+1,w
  7854  0960  3D71               	addwfc	?___wmul+1,w
  7855  0961  0085               	movwf	5
  7856  0962  3F00               	moviw [0]fsr0
  7857  0963  00D4               	movwf	eval_poly@res
  7858  0964  3F01               	moviw [1]fsr0
  7859  0965  00D5               	movwf	eval_poly@res+1
  7860  0966  3F02               	moviw [2]fsr0
  7861  0967                     L1:	
  7862  0967  00D6               	movwf	eval_poly@res+2
  7863  0968  0852               	movf	eval_poly@n,w
  7864  0969  0453               	iorwf	eval_poly@n+1,w
  7865  096A  1903               	btfsc	3,2
  7866  096B  29A8               	goto	l2535
  7867  096C  30FF               	movlw	255
  7868  096D  07D2               	addwf	eval_poly@n,f
  7869  096E  30FF               	movlw	255
  7870  096F  3DD3               	addwfc	eval_poly@n+1,f
  7871  0970  0853               	movf	eval_poly@n+1,w
  7872  0971  00F1               	movwf	___wmul@multiplier+1
  7873  0972  0852               	movf	eval_poly@n,w
  7874  0973  00F0               	movwf	___wmul@multiplier
  7875  0974  3003               	movlw	3
  7876  0975  00F2               	movwf	___wmul@multiplicand
  7877  0976  3000               	movlw	0
  7878  0977  00F3               	movwf	___wmul@multiplicand+1
  7879  0978  3196  26C5  3189   	fcall	___wmul
  7880  097B  0020               	movlb	0	; select bank0
  7881  097C  0850               	movf	eval_poly@d,w
  7882  097D  0770               	addwf	?___wmul,w
  7883  097E  0084               	movwf	4
  7884  097F  0851               	movf	eval_poly@d+1,w
  7885  0980  3D71               	addwfc	?___wmul+1,w
  7886  0981  0085               	movwf	5
  7887  0982  3F00               	moviw [0]fsr0
  7888  0983  00C0               	movwf	___ftadd@f1
  7889  0984  3F01               	moviw [1]fsr0
  7890  0985  00C1               	movwf	___ftadd@f1+1
  7891  0986  3F02               	moviw [2]fsr0
  7892  0987  00C2               	movwf	___ftadd@f1+2
  7893  0988  0854               	movf	eval_poly@res,w
  7894  0989  00A0               	movwf	___ftmul@f1
  7895  098A  0855               	movf	eval_poly@res+1,w
  7896  098B  00A1               	movwf	___ftmul@f1+1
  7897  098C  0856               	movf	eval_poly@res+2,w
  7898  098D  00A2               	movwf	___ftmul@f1+2
  7899  098E  084D               	movf	eval_poly@x,w
  7900  098F  00A3               	movwf	___ftmul@f2
  7901  0990  084E               	movf	eval_poly@x+1,w
  7902  0991  00A4               	movwf	___ftmul@f2+1
  7903  0992  084F               	movf	eval_poly@x+2,w
  7904  0993  00A5               	movwf	___ftmul@f2+2
  7905  0994  318D  2539  3189   	fcall	___ftmul
  7906  0997  0020               	movlb	0	; select bank0
  7907  0998  0820               	movf	?___ftmul,w
  7908  0999  00C3               	movwf	___ftadd@f2
  7909  099A  0821               	movf	?___ftmul+1,w
  7910  099B  00C4               	movwf	___ftadd@f2+1
  7911  099C  0822               	movf	?___ftmul+2,w
  7912  099D  00C5               	movwf	___ftadd@f2+2
  7913  099E  318D  25ED  3189   	fcall	___ftadd
  7914  09A1  0020               	movlb	0	; select bank0
  7915  09A2  0840               	movf	?___ftadd,w
  7916  09A3  00D4               	movwf	eval_poly@res
  7917  09A4  0841               	movf	?___ftadd+1,w
  7918  09A5  00D5               	movwf	eval_poly@res+1
  7919  09A6  0842               	movf	?___ftadd+2,w
  7920  09A7  2967               	goto	L1
  7921  09A8                     l2535:	
  7922  09A8  0854               	movf	eval_poly@res,w
  7923  09A9  00CD               	movwf	?_eval_poly
  7924  09AA  0855               	movf	eval_poly@res+1,w
  7925  09AB  00CE               	movwf	?_eval_poly+1
  7926  09AC  0856               	movf	eval_poly@res+2,w
  7927  09AD  00CF               	movwf	?_eval_poly+2
  7928  09AE  0008               	return
  7929  09AF                     __end_of_eval_poly:	
  7930                           
  7931                           	psect	text5
  7932  0D39                     __ptext5:	
  7933 ;; *************** function ___ftmul *****************
  7934 ;; Defined at:
  7935 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  f1              3    0[BANK0 ] float 
  7938 ;;  f2              3    3[BANK0 ] float 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7941 ;;  sign            1   15[BANK0 ] unsigned char 
  7942 ;;  cntr            1   14[BANK0 ] unsigned char 
  7943 ;;  exp             1   10[BANK0 ] unsigned char 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  3    0[BANK0 ] float 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, status,0, pclath, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7953 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;Total ram usage:       16 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:    1
  7960 ;; This function calls:
  7961 ;;		___ftpack
  7962 ;; This function is called by:
  7963 ;;		_tempCalc
  7964 ;;		_log
  7965 ;;		_eval_poly
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           
  7970                           ;psect for function ___ftmul
  7971  0D39                     ___ftmul:	
  7972                           
  7973                           ;incstack = 0
  7974                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7975  0D39  0020               	movlb	0	; select bank0
  7976  0D3A  0820               	movf	___ftmul@f1,w
  7977  0D3B  00A6               	movwf	??___ftmul
  7978  0D3C  0821               	movf	___ftmul@f1+1,w
  7979  0D3D  00A7               	movwf	??___ftmul+1
  7980  0D3E  0822               	movf	___ftmul@f1+2,w
  7981  0D3F  00A8               	movwf	??___ftmul+2
  7982  0D40  1003               	clrc
  7983  0D41  0D27               	rlf	??___ftmul+1,w
  7984  0D42  0D28               	rlf	??___ftmul+2,w
  7985  0D43  00A9               	movwf	??___ftmul+3
  7986  0D44  0829               	movf	??___ftmul+3,w
  7987  0D45  00AA               	movwf	___ftmul@exp
  7988  0D46  082A               	movf	___ftmul@exp,w
  7989  0D47  1D03               	btfss	3,2
  7990  0D48  2D50               	goto	l2321
  7991  0D49  3000               	movlw	0
  7992  0D4A  00A0               	movwf	?___ftmul
  7993  0D4B  3000               	movlw	0
  7994  0D4C  00A1               	movwf	?___ftmul+1
  7995  0D4D  3000               	movlw	0
  7996  0D4E  00A2               	movwf	?___ftmul+2
  7997  0D4F  0008               	return
  7998  0D50                     l2321:	
  7999  0D50  0823               	movf	___ftmul@f2,w
  8000  0D51  00A6               	movwf	??___ftmul
  8001  0D52  0824               	movf	___ftmul@f2+1,w
  8002  0D53  00A7               	movwf	??___ftmul+1
  8003  0D54  0825               	movf	___ftmul@f2+2,w
  8004  0D55  00A8               	movwf	??___ftmul+2
  8005  0D56  1003               	clrc
  8006  0D57  0D27               	rlf	??___ftmul+1,w
  8007  0D58  0D28               	rlf	??___ftmul+2,w
  8008  0D59  00A9               	movwf	??___ftmul+3
  8009  0D5A  0829               	movf	??___ftmul+3,w
  8010  0D5B  00AF               	movwf	___ftmul@sign
  8011  0D5C  082F               	movf	___ftmul@sign,w
  8012  0D5D  1D03               	btfss	3,2
  8013  0D5E  2D66               	goto	l2327
  8014  0D5F  3000               	movlw	0
  8015  0D60  00A0               	movwf	?___ftmul
  8016  0D61  3000               	movlw	0
  8017  0D62  00A1               	movwf	?___ftmul+1
  8018  0D63  3000               	movlw	0
  8019  0D64  00A2               	movwf	?___ftmul+2
  8020  0D65  0008               	return
  8021  0D66                     l2327:	
  8022  0D66  082F               	movf	___ftmul@sign,w
  8023  0D67  3E7B               	addlw	123
  8024  0D68  00A6               	movwf	??___ftmul
  8025  0D69  0826               	movf	??___ftmul,w
  8026  0D6A  07AA               	addwf	___ftmul@exp,f
  8027  0D6B  0820               	movf	___ftmul@f1,w
  8028  0D6C  00A6               	movwf	??___ftmul
  8029  0D6D  0821               	movf	___ftmul@f1+1,w
  8030  0D6E  00A7               	movwf	??___ftmul+1
  8031  0D6F  0822               	movf	___ftmul@f1+2,w
  8032  0D70  00A8               	movwf	??___ftmul+2
  8033  0D71  3010               	movlw	16
  8034  0D72                     u2425:	
  8035  0D72  36A8               	lsrf	??___ftmul+2,f
  8036  0D73  0CA7               	rrf	??___ftmul+1,f
  8037  0D74  0CA6               	rrf	??___ftmul,f
  8038  0D75  0B89               	decfsz	9,f
  8039  0D76  2D72               	goto	u2425
  8040  0D77  0826               	movf	??___ftmul,w
  8041  0D78  00A9               	movwf	??___ftmul+3
  8042  0D79  0829               	movf	??___ftmul+3,w
  8043  0D7A  00AF               	movwf	___ftmul@sign
  8044  0D7B  0823               	movf	___ftmul@f2,w
  8045  0D7C  00A6               	movwf	??___ftmul
  8046  0D7D  0824               	movf	___ftmul@f2+1,w
  8047  0D7E  00A7               	movwf	??___ftmul+1
  8048  0D7F  0825               	movf	___ftmul@f2+2,w
  8049  0D80  00A8               	movwf	??___ftmul+2
  8050  0D81  3010               	movlw	16
  8051  0D82                     u2435:	
  8052  0D82  36A8               	lsrf	??___ftmul+2,f
  8053  0D83  0CA7               	rrf	??___ftmul+1,f
  8054  0D84  0CA6               	rrf	??___ftmul,f
  8055  0D85  0B89               	decfsz	9,f
  8056  0D86  2D82               	goto	u2435
  8057  0D87  0826               	movf	??___ftmul,w
  8058  0D88  00A9               	movwf	??___ftmul+3
  8059  0D89  0829               	movf	??___ftmul+3,w
  8060  0D8A  06AF               	xorwf	___ftmul@sign,f
  8061  0D8B  3080               	movlw	128
  8062  0D8C  00A6               	movwf	??___ftmul
  8063  0D8D  0826               	movf	??___ftmul,w
  8064  0D8E  05AF               	andwf	___ftmul@sign,f
  8065  0D8F  17A1               	bsf	___ftmul@f1+1,7
  8066  0D90  17A4               	bsf	___ftmul@f2+1,7
  8067  0D91  30FF               	movlw	255
  8068  0D92  05A3               	andwf	___ftmul@f2,f
  8069  0D93  30FF               	movlw	255
  8070  0D94  05A4               	andwf	___ftmul@f2+1,f
  8071  0D95  3000               	movlw	0
  8072  0D96  05A5               	andwf	___ftmul@f2+2,f
  8073  0D97  3000               	movlw	0
  8074  0D98  00AB               	movwf	___ftmul@f3_as_product
  8075  0D99  3000               	movlw	0
  8076  0D9A  00AC               	movwf	___ftmul@f3_as_product+1
  8077  0D9B  3000               	movlw	0
  8078  0D9C  00AD               	movwf	___ftmul@f3_as_product+2
  8079  0D9D  3007               	movlw	7
  8080  0D9E  00A6               	movwf	??___ftmul
  8081  0D9F  0826               	movf	??___ftmul,w
  8082  0DA0  00AE               	movwf	___ftmul@cntr
  8083  0DA1                     l2339:	
  8084  0DA1  1C20               	btfss	___ftmul@f1,0
  8085  0DA2  2DA9               	goto	l2343
  8086  0DA3  0823               	movf	___ftmul@f2,w
  8087  0DA4  07AB               	addwf	___ftmul@f3_as_product,f
  8088  0DA5  0824               	movf	___ftmul@f2+1,w
  8089  0DA6  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8090  0DA7  0825               	movf	___ftmul@f2+2,w
  8091  0DA8  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8092  0DA9                     l2343:	
  8093  0DA9  3001               	movlw	1
  8094  0DAA                     u2455:	
  8095  0DAA  36A2               	lsrf	___ftmul@f1+2,f
  8096  0DAB  0CA1               	rrf	___ftmul@f1+1,f
  8097  0DAC  0CA0               	rrf	___ftmul@f1,f
  8098  0DAD  0B89               	decfsz	9,f
  8099  0DAE  2DAA               	goto	u2455
  8100  0DAF  3001               	movlw	1
  8101  0DB0                     u2465:	
  8102  0DB0  35A3               	lslf	___ftmul@f2,f
  8103  0DB1  0DA4               	rlf	___ftmul@f2+1,f
  8104  0DB2  0DA5               	rlf	___ftmul@f2+2,f
  8105  0DB3  0B89               	decfsz	9,f
  8106  0DB4  2DB0               	goto	u2465
  8107  0DB5  3001               	movlw	1
  8108  0DB6  02AE               	subwf	___ftmul@cntr,f
  8109  0DB7  1D03               	btfss	3,2
  8110  0DB8  2DA1               	goto	l2339
  8111  0DB9  3009               	movlw	9
  8112  0DBA  00A6               	movwf	??___ftmul
  8113  0DBB  0826               	movf	??___ftmul,w
  8114  0DBC  00AE               	movwf	___ftmul@cntr
  8115  0DBD                     l2351:	
  8116  0DBD  1C20               	btfss	___ftmul@f1,0
  8117  0DBE  2DC5               	goto	l2355
  8118  0DBF  0823               	movf	___ftmul@f2,w
  8119  0DC0  07AB               	addwf	___ftmul@f3_as_product,f
  8120  0DC1  0824               	movf	___ftmul@f2+1,w
  8121  0DC2  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8122  0DC3  0825               	movf	___ftmul@f2+2,w
  8123  0DC4  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8124  0DC5                     l2355:	
  8125  0DC5  3001               	movlw	1
  8126  0DC6                     u2495:	
  8127  0DC6  36A2               	lsrf	___ftmul@f1+2,f
  8128  0DC7  0CA1               	rrf	___ftmul@f1+1,f
  8129  0DC8  0CA0               	rrf	___ftmul@f1,f
  8130  0DC9  0B89               	decfsz	9,f
  8131  0DCA  2DC6               	goto	u2495
  8132  0DCB  3001               	movlw	1
  8133  0DCC                     u2505:	
  8134  0DCC  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8135  0DCD  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8136  0DCE  0CAB               	rrf	___ftmul@f3_as_product,f
  8137  0DCF  0B89               	decfsz	9,f
  8138  0DD0  2DCC               	goto	u2505
  8139  0DD1  3001               	movlw	1
  8140  0DD2  02AE               	subwf	___ftmul@cntr,f
  8141  0DD3  1D03               	btfss	3,2
  8142  0DD4  2DBD               	goto	l2351
  8143  0DD5  082B               	movf	___ftmul@f3_as_product,w
  8144  0DD6  00F0               	movwf	___ftpack@arg
  8145  0DD7  082C               	movf	___ftmul@f3_as_product+1,w
  8146  0DD8  00F1               	movwf	___ftpack@arg+1
  8147  0DD9  082D               	movf	___ftmul@f3_as_product+2,w
  8148  0DDA  00F2               	movwf	___ftpack@arg+2
  8149  0DDB  082A               	movf	___ftmul@exp,w
  8150  0DDC  00A6               	movwf	??___ftmul
  8151  0DDD  0826               	movf	??___ftmul,w
  8152  0DDE  00F3               	movwf	___ftpack@exp
  8153  0DDF  082F               	movf	___ftmul@sign,w
  8154  0DE0  00A7               	movwf	??___ftmul+1
  8155  0DE1  0827               	movf	??___ftmul+1,w
  8156  0DE2  00F4               	movwf	___ftpack@sign
  8157  0DE3  3180  200D         	fcall	___ftpack
  8158  0DE5  0870               	movf	?___ftpack,w
  8159  0DE6  0020               	movlb	0	; select bank0
  8160  0DE7  00A0               	movwf	?___ftmul
  8161  0DE8  0871               	movf	?___ftpack+1,w
  8162  0DE9  00A1               	movwf	?___ftmul+1
  8163  0DEA  0872               	movf	?___ftpack+2,w
  8164  0DEB  00A2               	movwf	?___ftmul+2
  8165  0DEC  0008               	return
  8166  0DED                     __end_of___ftmul:	
  8167                           
  8168                           	psect	text6
  8169  178A                     __ptext6:	
  8170 ;; *************** function ___ftge *****************
  8171 ;; Defined at:
  8172 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  ff1             3    0[COMMON] float 
  8175 ;;  ff2             3    3[COMMON] float 
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;		None
  8178 ;; Return value:  Size  Location     Type
  8179 ;;		None               void
  8180 ;; Registers used:
  8181 ;;		wreg, status,2, status,0
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8187 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8189 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8190 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8191 ;;Total ram usage:        9 bytes
  8192 ;; Hardware stack levels used:    1
  8193 ;; This function calls:
  8194 ;;		Nothing
  8195 ;; This function is called by:
  8196 ;;		_log
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           
  8201                           ;psect for function ___ftge
  8202  178A                     ___ftge:	
  8203                           
  8204                           ;incstack = 0
  8205                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8206  178A  1FF2               	btfss	___ftge@ff1+2,7
  8207  178B  2FA0               	goto	l2493
  8208  178C  0970               	comf	___ftge@ff1,w
  8209  178D  00F6               	movwf	??___ftge
  8210  178E  0971               	comf	___ftge@ff1+1,w
  8211  178F  00F7               	movwf	??___ftge+1
  8212  1790  0972               	comf	___ftge@ff1+2,w
  8213  1791  00F8               	movwf	??___ftge+2
  8214  1792  0AF6               	incf	??___ftge,f
  8215  1793  1903               	skipnz
  8216  1794  0AF7               	incf	??___ftge+1,f
  8217  1795  1903               	skipnz
  8218  1796  0AF8               	incf	??___ftge+2,f
  8219  1797  3000               	movlw	0
  8220  1798  0776               	addwf	??___ftge,w
  8221  1799  00F0               	movwf	___ftge@ff1
  8222  179A  3000               	movlw	0
  8223  179B  3D77               	addwfc	??___ftge+1,w
  8224  179C  00F1               	movwf	___ftge@ff1+1
  8225  179D  3080               	movlw	128
  8226  179E  3D78               	addwfc	??___ftge+2,w
  8227  179F  00F2               	movwf	___ftge@ff1+2
  8228  17A0                     l2493:	
  8229  17A0  1FF5               	btfss	___ftge@ff2+2,7
  8230  17A1  2FB6               	goto	l2497
  8231  17A2  0973               	comf	___ftge@ff2,w
  8232  17A3  00F6               	movwf	??___ftge
  8233  17A4  0974               	comf	___ftge@ff2+1,w
  8234  17A5  00F7               	movwf	??___ftge+1
  8235  17A6  0975               	comf	___ftge@ff2+2,w
  8236  17A7  00F8               	movwf	??___ftge+2
  8237  17A8  0AF6               	incf	??___ftge,f
  8238  17A9  1903               	skipnz
  8239  17AA  0AF7               	incf	??___ftge+1,f
  8240  17AB  1903               	skipnz
  8241  17AC  0AF8               	incf	??___ftge+2,f
  8242  17AD  3000               	movlw	0
  8243  17AE  0776               	addwf	??___ftge,w
  8244  17AF  00F3               	movwf	___ftge@ff2
  8245  17B0  3000               	movlw	0
  8246  17B1  3D77               	addwfc	??___ftge+1,w
  8247  17B2  00F4               	movwf	___ftge@ff2+1
  8248  17B3  3080               	movlw	128
  8249  17B4  3D78               	addwfc	??___ftge+2,w
  8250  17B5  00F5               	movwf	___ftge@ff2+2
  8251  17B6                     l2497:	
  8252  17B6  3080               	movlw	128
  8253  17B7  06F2               	xorwf	___ftge@ff1+2,f
  8254  17B8  3080               	movlw	128
  8255  17B9  06F5               	xorwf	___ftge@ff2+2,f
  8256  17BA  0875               	movf	___ftge@ff2+2,w
  8257  17BB  0272               	subwf	___ftge@ff1+2,w
  8258  17BC  1D03               	skipz
  8259  17BD  0008               	return
  8260  17BE  0874               	movf	___ftge@ff2+1,w
  8261  17BF  0271               	subwf	___ftge@ff1+1,w
  8262  17C0  1D03               	skipz
  8263  17C1  0008               	return
  8264  17C2  0873               	movf	___ftge@ff2,w
  8265  17C3  0270               	subwf	___ftge@ff1,w
  8266  17C4  0008               	return
  8267  17C5                     __end_of___ftge:	
  8268                           
  8269                           	psect	text7
  8270  171A                     __ptext7:	
  8271 ;; *************** function ___awtoft *****************
  8272 ;; Defined at:
  8273 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  c               2    8[COMMON] int 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  sign            1   13[COMMON] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  3    8[COMMON] float 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0, pclath, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8287 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;Total ram usage:        6 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    1
  8294 ;; This function calls:
  8295 ;;		___ftpack
  8296 ;; This function is called by:
  8297 ;;		_tempCalc
  8298 ;;		_log
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           
  8303                           ;psect for function ___awtoft
  8304  171A                     ___awtoft:	
  8305                           
  8306                           ;incstack = 0
  8307                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8308  171A  01FD               	clrf	___awtoft@sign
  8309  171B  1FF9               	btfss	___awtoft@c+1,7
  8310  171C  2F24               	goto	l2485
  8311  171D  09F8               	comf	___awtoft@c,f
  8312  171E  09F9               	comf	___awtoft@c+1,f
  8313  171F  0AF8               	incf	___awtoft@c,f
  8314  1720  1903               	skipnz
  8315  1721  0AF9               	incf	___awtoft@c+1,f
  8316  1722  01FD               	clrf	___awtoft@sign
  8317  1723  0AFD               	incf	___awtoft@sign,f
  8318  1724                     l2485:	
  8319  1724  0878               	movf	___awtoft@c,w
  8320  1725  00F0               	movwf	___ftpack@arg
  8321  1726  0879               	movf	___awtoft@c+1,w
  8322  1727  00F1               	movwf	___ftpack@arg+1
  8323  1728  01F2               	clrf	___ftpack@arg+2
  8324  1729  308E               	movlw	142
  8325  172A  00FB               	movwf	??___awtoft
  8326  172B  087B               	movf	??___awtoft,w
  8327  172C  00F3               	movwf	___ftpack@exp
  8328  172D  087D               	movf	___awtoft@sign,w
  8329  172E  00FC               	movwf	??___awtoft+1
  8330  172F  087C               	movf	??___awtoft+1,w
  8331  1730  00F4               	movwf	___ftpack@sign
  8332  1731  3180  200D         	fcall	___ftpack
  8333  1733  0870               	movf	?___ftpack,w
  8334  1734  00F8               	movwf	?___awtoft
  8335  1735  0871               	movf	?___ftpack+1,w
  8336  1736  00F9               	movwf	?___awtoft+1
  8337  1737  0872               	movf	?___ftpack+2,w
  8338  1738  00FA               	movwf	?___awtoft+2
  8339  1739  0008               	return
  8340  173A                     __end_of___awtoft:	
  8341                           
  8342                           	psect	text8
  8343  0AA7                     __ptext8:	
  8344 ;; *************** function ___fttol *****************
  8345 ;; Defined at:
  8346 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  f1              3    0[COMMON] float 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;  lval            4    9[COMMON] unsigned long 
  8351 ;;  exp1            1   13[COMMON] unsigned char 
  8352 ;;  sign1           1    8[COMMON] unsigned char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  4    0[COMMON] long 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;Total ram usage:       14 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_tempCalc
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           
  8376                           ;psect for function ___fttol
  8377  0AA7                     ___fttol:	
  8378                           
  8379                           ;incstack = 0
  8380                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8381  0AA7  0870               	movf	___fttol@f1,w
  8382  0AA8  00F4               	movwf	??___fttol
  8383  0AA9  0871               	movf	___fttol@f1+1,w
  8384  0AAA  00F5               	movwf	??___fttol+1
  8385  0AAB  0872               	movf	___fttol@f1+2,w
  8386  0AAC  00F6               	movwf	??___fttol+2
  8387  0AAD  1003               	clrc
  8388  0AAE  0D75               	rlf	??___fttol+1,w
  8389  0AAF  0D76               	rlf	??___fttol+2,w
  8390  0AB0  00F7               	movwf	??___fttol+3
  8391  0AB1  0877               	movf	??___fttol+3,w
  8392  0AB2  00FD               	movwf	___fttol@exp1
  8393  0AB3  087D               	movf	___fttol@exp1,w
  8394  0AB4  1D03               	btfss	3,2
  8395  0AB5  2ABF               	goto	l2923
  8396  0AB6  3000               	movlw	0
  8397  0AB7  00F3               	movwf	?___fttol+3
  8398  0AB8  3000               	movlw	0
  8399  0AB9  00F2               	movwf	?___fttol+2
  8400  0ABA  3000               	movlw	0
  8401  0ABB  00F1               	movwf	?___fttol+1
  8402  0ABC  3000               	movlw	0
  8403  0ABD  00F0               	movwf	?___fttol
  8404  0ABE  0008               	return
  8405  0ABF                     l2923:	
  8406  0ABF  0870               	movf	___fttol@f1,w
  8407  0AC0  00F4               	movwf	??___fttol
  8408  0AC1  0871               	movf	___fttol@f1+1,w
  8409  0AC2  00F5               	movwf	??___fttol+1
  8410  0AC3  0872               	movf	___fttol@f1+2,w
  8411  0AC4  00F6               	movwf	??___fttol+2
  8412  0AC5  3017               	movlw	23
  8413  0AC6                     u3265:	
  8414  0AC6  36F6               	lsrf	??___fttol+2,f
  8415  0AC7  0CF5               	rrf	??___fttol+1,f
  8416  0AC8  0CF4               	rrf	??___fttol,f
  8417  0AC9  0B89               	decfsz	9,f
  8418  0ACA  2AC6               	goto	u3265
  8419  0ACB  0874               	movf	??___fttol,w
  8420  0ACC  00F7               	movwf	??___fttol+3
  8421  0ACD  0877               	movf	??___fttol+3,w
  8422  0ACE  00F8               	movwf	___fttol@sign1
  8423  0ACF  17F1               	bsf	___fttol@f1+1,7
  8424  0AD0  30FF               	movlw	255
  8425  0AD1  05F0               	andwf	___fttol@f1,f
  8426  0AD2  30FF               	movlw	255
  8427  0AD3  05F1               	andwf	___fttol@f1+1,f
  8428  0AD4  3000               	movlw	0
  8429  0AD5  05F2               	andwf	___fttol@f1+2,f
  8430  0AD6  0870               	movf	___fttol@f1,w
  8431  0AD7  00F9               	movwf	___fttol@lval
  8432  0AD8  0871               	movf	___fttol@f1+1,w
  8433  0AD9  00FA               	movwf	___fttol@lval+1
  8434  0ADA  0872               	movf	___fttol@f1+2,w
  8435  0ADB  00FB               	movwf	___fttol@lval+2
  8436  0ADC  01FC               	clrf	___fttol@lval+3
  8437  0ADD  308E               	movlw	142
  8438  0ADE  02FD               	subwf	___fttol@exp1,f
  8439  0ADF  1FFD               	btfss	___fttol@exp1,7
  8440  0AE0  2AFD               	goto	l2943
  8441  0AE1  087D               	movf	___fttol@exp1,w
  8442  0AE2  3A80               	xorlw	128
  8443  0AE3  3E8F               	addlw	143
  8444  0AE4  1803               	skipnc
  8445  0AE5  2AEF               	goto	l2941
  8446  0AE6  3000               	movlw	0
  8447  0AE7  00F3               	movwf	?___fttol+3
  8448  0AE8  3000               	movlw	0
  8449  0AE9  00F2               	movwf	?___fttol+2
  8450  0AEA  3000               	movlw	0
  8451  0AEB  00F1               	movwf	?___fttol+1
  8452  0AEC  3000               	movlw	0
  8453  0AED  00F0               	movwf	?___fttol
  8454  0AEE  0008               	return
  8455  0AEF                     l2941:	
  8456  0AEF  3001               	movlw	1
  8457  0AF0                     u3295:	
  8458  0AF0  36FC               	lsrf	___fttol@lval+3,f
  8459  0AF1  0CFB               	rrf	___fttol@lval+2,f
  8460  0AF2  0CFA               	rrf	___fttol@lval+1,f
  8461  0AF3  0CF9               	rrf	___fttol@lval,f
  8462  0AF4  0B89               	decfsz	9,f
  8463  0AF5  2AF0               	goto	u3295
  8464  0AF6  3001               	movlw	1
  8465  0AF7  00F4               	movwf	??___fttol
  8466  0AF8  0874               	movf	??___fttol,w
  8467  0AF9  07FD               	addwf	___fttol@exp1,f
  8468  0AFA  1903               	btfsc	3,2
  8469  0AFB  2B16               	goto	l2951
  8470  0AFC  2AEF               	goto	l2941
  8471  0AFD                     l2943:	
  8472  0AFD  3018               	movlw	24
  8473  0AFE  027D               	subwf	___fttol@exp1,w
  8474  0AFF  1C03               	skipc
  8475  0B00  2B13               	goto	l807
  8476  0B01  3000               	movlw	0
  8477  0B02  00F3               	movwf	?___fttol+3
  8478  0B03  3000               	movlw	0
  8479  0B04  00F2               	movwf	?___fttol+2
  8480  0B05  3000               	movlw	0
  8481  0B06  00F1               	movwf	?___fttol+1
  8482  0B07  3000               	movlw	0
  8483  0B08  00F0               	movwf	?___fttol
  8484  0B09  0008               	return
  8485  0B0A                     l2949:	
  8486  0B0A  3001               	movlw	1
  8487  0B0B                     u3325:	
  8488  0B0B  35F9               	lslf	___fttol@lval,f
  8489  0B0C  0DFA               	rlf	___fttol@lval+1,f
  8490  0B0D  0DFB               	rlf	___fttol@lval+2,f
  8491  0B0E  0DFC               	rlf	___fttol@lval+3,f
  8492  0B0F  0B89               	decfsz	9,f
  8493  0B10  2B0B               	goto	u3325
  8494  0B11  3001               	movlw	1
  8495  0B12  02FD               	subwf	___fttol@exp1,f
  8496  0B13                     l807:	
  8497  0B13  087D               	movf	___fttol@exp1,w
  8498  0B14  1D03               	btfss	3,2
  8499  0B15  2B0A               	goto	l2949
  8500  0B16                     l2951:	
  8501  0B16  0878               	movf	___fttol@sign1,w
  8502  0B17  1903               	btfsc	3,2
  8503  0B18  2B24               	goto	l2955
  8504  0B19  09F9               	comf	___fttol@lval,f
  8505  0B1A  09FA               	comf	___fttol@lval+1,f
  8506  0B1B  09FB               	comf	___fttol@lval+2,f
  8507  0B1C  09FC               	comf	___fttol@lval+3,f
  8508  0B1D  0AF9               	incf	___fttol@lval,f
  8509  0B1E  1903               	skipnz
  8510  0B1F  0AFA               	incf	___fttol@lval+1,f
  8511  0B20  1903               	skipnz
  8512  0B21  0AFB               	incf	___fttol@lval+2,f
  8513  0B22  1903               	skipnz
  8514  0B23  0AFC               	incf	___fttol@lval+3,f
  8515  0B24                     l2955:	
  8516  0B24  087C               	movf	___fttol@lval+3,w
  8517  0B25  00F3               	movwf	?___fttol+3
  8518  0B26  087B               	movf	___fttol@lval+2,w
  8519  0B27  00F2               	movwf	?___fttol+2
  8520  0B28  087A               	movf	___fttol@lval+1,w
  8521  0B29  00F1               	movwf	?___fttol+1
  8522  0B2A  0879               	movf	___fttol@lval,w
  8523  0B2B  00F0               	movwf	?___fttol
  8524  0B2C  0008               	return
  8525  0B2D                     __end_of___fttol:	
  8526                           
  8527                           	psect	text9
  8528  16FC                     __ptext9:	
  8529 ;; *************** function ___ftsub *****************
  8530 ;; Defined at:
  8531 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  f2              3   45[BANK0 ] float 
  8534 ;;  f1              3   48[BANK0 ] float 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  3   45[BANK0 ] float 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0, pclath, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8546 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;Total ram usage:        6 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    2
  8553 ;; This function calls:
  8554 ;;		___ftadd
  8555 ;; This function is called by:
  8556 ;;		_tempCalc
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           
  8561                           ;psect for function ___ftsub
  8562  16FC                     ___ftsub:	
  8563                           
  8564                           ;incstack = 0
  8565                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8566  16FC  0020               	movlb	0	; select bank0
  8567  16FD  084F               	movf	___ftsub@f2+2,w
  8568  16FE  044E               	iorwf	___ftsub@f2+1,w
  8569  16FF  044D               	iorwf	___ftsub@f2,w
  8570  1700  1903               	skipnz
  8571  1701  2F04               	goto	l2913
  8572  1702  3080               	movlw	128
  8573  1703  06CF               	xorwf	___ftsub@f2+2,f
  8574  1704                     l2913:	
  8575  1704  0850               	movf	___ftsub@f1,w
  8576  1705  00C0               	movwf	___ftadd@f1
  8577  1706  0851               	movf	___ftsub@f1+1,w
  8578  1707  00C1               	movwf	___ftadd@f1+1
  8579  1708  0852               	movf	___ftsub@f1+2,w
  8580  1709  00C2               	movwf	___ftadd@f1+2
  8581  170A  084D               	movf	___ftsub@f2,w
  8582  170B  00C3               	movwf	___ftadd@f2
  8583  170C  084E               	movf	___ftsub@f2+1,w
  8584  170D  00C4               	movwf	___ftadd@f2+1
  8585  170E  084F               	movf	___ftsub@f2+2,w
  8586  170F  00C5               	movwf	___ftadd@f2+2
  8587  1710  318D  25ED         	fcall	___ftadd
  8588  1712  0020               	movlb	0	; select bank0
  8589  1713  0840               	movf	?___ftadd,w
  8590  1714  00CD               	movwf	?___ftsub
  8591  1715  0841               	movf	?___ftadd+1,w
  8592  1716  00CE               	movwf	?___ftsub+1
  8593  1717  0842               	movf	?___ftadd+2,w
  8594  1718  00CF               	movwf	?___ftsub+2
  8595  1719  0008               	return
  8596  171A                     __end_of___ftsub:	
  8597                           
  8598                           	psect	text10
  8599  0DED                     __ptext10:	
  8600 ;; *************** function ___ftadd *****************
  8601 ;; Defined at:
  8602 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;  f1              3   32[BANK0 ] float 
  8605 ;;  f2              3   35[BANK0 ] float 
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;  exp1            1   44[BANK0 ] unsigned char 
  8608 ;;  exp2            1   43[BANK0 ] unsigned char 
  8609 ;;  sign            1   42[BANK0 ] unsigned char 
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  3   32[BANK0 ] float 
  8612 ;; Registers used:
  8613 ;;		wreg, status,2, status,0, pclath, cstack
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8619 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8620 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8621 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8622 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8623 ;;Total ram usage:       13 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    1
  8626 ;; This function calls:
  8627 ;;		___ftpack
  8628 ;; This function is called by:
  8629 ;;		_tempCalc
  8630 ;;		___ftsub
  8631 ;;		_log
  8632 ;;		_eval_poly
  8633 ;; This function uses a non-reentrant model
  8634 ;;
  8635                           
  8636                           
  8637                           ;psect for function ___ftadd
  8638  0DED                     ___ftadd:	
  8639                           
  8640                           ;incstack = 0
  8641                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8642  0DED  0020               	movlb	0	; select bank0
  8643  0DEE  0840               	movf	___ftadd@f1,w
  8644  0DEF  00C6               	movwf	??___ftadd
  8645  0DF0  0841               	movf	___ftadd@f1+1,w
  8646  0DF1  00C7               	movwf	??___ftadd+1
  8647  0DF2  0842               	movf	___ftadd@f1+2,w
  8648  0DF3  00C8               	movwf	??___ftadd+2
  8649  0DF4  1003               	clrc
  8650  0DF5  0D47               	rlf	??___ftadd+1,w
  8651  0DF6  0D48               	rlf	??___ftadd+2,w
  8652  0DF7  00C9               	movwf	??___ftadd+3
  8653  0DF8  0849               	movf	??___ftadd+3,w
  8654  0DF9  00CC               	movwf	___ftadd@exp1
  8655  0DFA  0843               	movf	___ftadd@f2,w
  8656  0DFB  00C6               	movwf	??___ftadd
  8657  0DFC  0844               	movf	___ftadd@f2+1,w
  8658  0DFD  00C7               	movwf	??___ftadd+1
  8659  0DFE  0845               	movf	___ftadd@f2+2,w
  8660  0DFF  00C8               	movwf	??___ftadd+2
  8661  0E00  1003               	clrc
  8662  0E01  0D47               	rlf	??___ftadd+1,w
  8663  0E02  0D48               	rlf	??___ftadd+2,w
  8664  0E03  00C9               	movwf	??___ftadd+3
  8665  0E04  0849               	movf	??___ftadd+3,w
  8666  0E05  00CB               	movwf	___ftadd@exp2
  8667  0E06  084C               	movf	___ftadd@exp1,w
  8668  0E07  1903               	btfsc	3,2
  8669  0E08  2E15               	goto	l2251
  8670  0E09  084B               	movf	___ftadd@exp2,w
  8671  0E0A  024C               	subwf	___ftadd@exp1,w
  8672  0E0B  1803               	skipnc
  8673  0E0C  2E1C               	goto	l2255
  8674  0E0D  034C               	decf	___ftadd@exp1,w
  8675  0E0E  3AFF               	xorlw	255
  8676  0E0F  074B               	addwf	___ftadd@exp2,w
  8677  0E10  00C6               	movwf	??___ftadd
  8678  0E11  3019               	movlw	25
  8679  0E12  0246               	subwf	??___ftadd,w
  8680  0E13  1C03               	skipc
  8681  0E14  2E1C               	goto	l2255
  8682  0E15                     l2251:	
  8683  0E15  0843               	movf	___ftadd@f2,w
  8684  0E16  00C0               	movwf	?___ftadd
  8685  0E17  0844               	movf	___ftadd@f2+1,w
  8686  0E18  00C1               	movwf	?___ftadd+1
  8687  0E19  0845               	movf	___ftadd@f2+2,w
  8688  0E1A  00C2               	movwf	?___ftadd+2
  8689  0E1B  0008               	return
  8690  0E1C                     l2255:	
  8691  0E1C  084B               	movf	___ftadd@exp2,w
  8692  0E1D  1903               	btfsc	3,2
  8693  0E1E  0008               	return
  8694  0E1F  084C               	movf	___ftadd@exp1,w
  8695  0E20  024B               	subwf	___ftadd@exp2,w
  8696  0E21  1803               	skipnc
  8697  0E22  2E2B               	goto	l2261
  8698  0E23  034B               	decf	___ftadd@exp2,w
  8699  0E24  3AFF               	xorlw	255
  8700  0E25  074C               	addwf	___ftadd@exp1,w
  8701  0E26  00C6               	movwf	??___ftadd
  8702  0E27  3019               	movlw	25
  8703  0E28  0246               	subwf	??___ftadd,w
  8704  0E29  1803               	btfsc	3,0
  8705  0E2A  0008               	return
  8706  0E2B                     l2261:	
  8707  0E2B  3006               	movlw	6
  8708  0E2C  00C6               	movwf	??___ftadd
  8709  0E2D  0846               	movf	??___ftadd,w
  8710  0E2E  00CA               	movwf	___ftadd@sign
  8711  0E2F  1BC2               	btfsc	___ftadd@f1+2,7
  8712  0E30  17CA               	bsf	___ftadd@sign,7
  8713  0E31  1BC5               	btfsc	___ftadd@f2+2,7
  8714  0E32  174A               	bsf	___ftadd@sign,6
  8715  0E33  17C1               	bsf	___ftadd@f1+1,7
  8716  0E34  30FF               	movlw	255
  8717  0E35  05C0               	andwf	___ftadd@f1,f
  8718  0E36  30FF               	movlw	255
  8719  0E37  05C1               	andwf	___ftadd@f1+1,f
  8720  0E38  3000               	movlw	0
  8721  0E39  05C2               	andwf	___ftadd@f1+2,f
  8722  0E3A  17C4               	bsf	___ftadd@f2+1,7
  8723  0E3B  30FF               	movlw	255
  8724  0E3C  05C3               	andwf	___ftadd@f2,f
  8725  0E3D  30FF               	movlw	255
  8726  0E3E  05C4               	andwf	___ftadd@f2+1,f
  8727  0E3F  3000               	movlw	0
  8728  0E40  05C5               	andwf	___ftadd@f2+2,f
  8729  0E41  084B               	movf	___ftadd@exp2,w
  8730  0E42  024C               	subwf	___ftadd@exp1,w
  8731  0E43  1803               	skipnc
  8732  0E44  2E67               	goto	l2283
  8733  0E45                     l2273:	
  8734  0E45  3001               	movlw	1
  8735  0E46                     u2265:	
  8736  0E46  35C3               	lslf	___ftadd@f2,f
  8737  0E47  0DC4               	rlf	___ftadd@f2+1,f
  8738  0E48  0DC5               	rlf	___ftadd@f2+2,f
  8739  0E49  0B89               	decfsz	9,f
  8740  0E4A  2E46               	goto	u2265
  8741  0E4B  3001               	movlw	1
  8742  0E4C  02CB               	subwf	___ftadd@exp2,f
  8743  0E4D  084B               	movf	___ftadd@exp2,w
  8744  0E4E  064C               	xorwf	___ftadd@exp1,w
  8745  0E4F  1903               	skipnz
  8746  0E50  2E62               	goto	l2281
  8747  0E51  3001               	movlw	1
  8748  0E52  02CA               	subwf	___ftadd@sign,f
  8749  0E53  084A               	movf	___ftadd@sign,w
  8750  0E54  3907               	andlw	7
  8751  0E55  1903               	btfsc	3,2
  8752  0E56  2E62               	goto	l2281
  8753  0E57  2E45               	goto	l2273
  8754  0E58                     l2279:	
  8755  0E58  3001               	movlw	1
  8756  0E59                     u2295:	
  8757  0E59  36C2               	lsrf	___ftadd@f1+2,f
  8758  0E5A  0CC1               	rrf	___ftadd@f1+1,f
  8759  0E5B  0CC0               	rrf	___ftadd@f1,f
  8760  0E5C  0B89               	decfsz	9,f
  8761  0E5D  2E59               	goto	u2295
  8762  0E5E  3001               	movlw	1
  8763  0E5F  00C6               	movwf	??___ftadd
  8764  0E60  0846               	movf	??___ftadd,w
  8765  0E61  07CC               	addwf	___ftadd@exp1,f
  8766  0E62                     l2281:	
  8767  0E62  084C               	movf	___ftadd@exp1,w
  8768  0E63  064B               	xorwf	___ftadd@exp2,w
  8769  0E64  1903               	btfsc	3,2
  8770  0E65  2E8C               	goto	l747
  8771  0E66  2E58               	goto	l2279
  8772  0E67                     l2283:	
  8773  0E67  084C               	movf	___ftadd@exp1,w
  8774  0E68  024B               	subwf	___ftadd@exp2,w
  8775  0E69  1803               	skipnc
  8776  0E6A  2E8C               	goto	l747
  8777  0E6B                     l2285:	
  8778  0E6B  3001               	movlw	1
  8779  0E6C                     u2325:	
  8780  0E6C  35C0               	lslf	___ftadd@f1,f
  8781  0E6D  0DC1               	rlf	___ftadd@f1+1,f
  8782  0E6E  0DC2               	rlf	___ftadd@f1+2,f
  8783  0E6F  0B89               	decfsz	9,f
  8784  0E70  2E6C               	goto	u2325
  8785  0E71  3001               	movlw	1
  8786  0E72  02CC               	subwf	___ftadd@exp1,f
  8787  0E73  084B               	movf	___ftadd@exp2,w
  8788  0E74  064C               	xorwf	___ftadd@exp1,w
  8789  0E75  1903               	skipnz
  8790  0E76  2E88               	goto	l2293
  8791  0E77  3001               	movlw	1
  8792  0E78  02CA               	subwf	___ftadd@sign,f
  8793  0E79  084A               	movf	___ftadd@sign,w
  8794  0E7A  3907               	andlw	7
  8795  0E7B  1903               	btfsc	3,2
  8796  0E7C  2E88               	goto	l2293
  8797  0E7D  2E6B               	goto	l2285
  8798  0E7E                     l2291:	
  8799  0E7E  3001               	movlw	1
  8800  0E7F                     u2355:	
  8801  0E7F  36C5               	lsrf	___ftadd@f2+2,f
  8802  0E80  0CC4               	rrf	___ftadd@f2+1,f
  8803  0E81  0CC3               	rrf	___ftadd@f2,f
  8804  0E82  0B89               	decfsz	9,f
  8805  0E83  2E7F               	goto	u2355
  8806  0E84  3001               	movlw	1
  8807  0E85  00C6               	movwf	??___ftadd
  8808  0E86  0846               	movf	??___ftadd,w
  8809  0E87  07CB               	addwf	___ftadd@exp2,f
  8810  0E88                     l2293:	
  8811  0E88  084C               	movf	___ftadd@exp1,w
  8812  0E89  064B               	xorwf	___ftadd@exp2,w
  8813  0E8A  1D03               	skipz
  8814  0E8B  2E7E               	goto	l2291
  8815  0E8C                     l747:	
  8816  0E8C  1FCA               	btfss	___ftadd@sign,7
  8817  0E8D  2E9E               	goto	l2297
  8818  0E8E  30FF               	movlw	255
  8819  0E8F  06C0               	xorwf	___ftadd@f1,f
  8820  0E90  30FF               	movlw	255
  8821  0E91  06C1               	xorwf	___ftadd@f1+1,f
  8822  0E92  30FF               	movlw	255
  8823  0E93  06C2               	xorwf	___ftadd@f1+2,f
  8824  0E94  3001               	movlw	1
  8825  0E95  07C0               	addwf	___ftadd@f1,f
  8826  0E96  3000               	movlw	0
  8827  0E97  1803               	skipnc
  8828  0E98  3001               	movlw	1
  8829  0E99  07C1               	addwf	___ftadd@f1+1,f
  8830  0E9A  3000               	movlw	0
  8831  0E9B  1803               	skipnc
  8832  0E9C  3001               	movlw	1
  8833  0E9D  07C2               	addwf	___ftadd@f1+2,f
  8834  0E9E                     l2297:	
  8835  0E9E  1F4A               	btfss	___ftadd@sign,6
  8836  0E9F  2EB0               	goto	l2301
  8837  0EA0  30FF               	movlw	255
  8838  0EA1  06C3               	xorwf	___ftadd@f2,f
  8839  0EA2  30FF               	movlw	255
  8840  0EA3  06C4               	xorwf	___ftadd@f2+1,f
  8841  0EA4  30FF               	movlw	255
  8842  0EA5  06C5               	xorwf	___ftadd@f2+2,f
  8843  0EA6  3001               	movlw	1
  8844  0EA7  07C3               	addwf	___ftadd@f2,f
  8845  0EA8  3000               	movlw	0
  8846  0EA9  1803               	skipnc
  8847  0EAA  3001               	movlw	1
  8848  0EAB  07C4               	addwf	___ftadd@f2+1,f
  8849  0EAC  3000               	movlw	0
  8850  0EAD  1803               	skipnc
  8851  0EAE  3001               	movlw	1
  8852  0EAF  07C5               	addwf	___ftadd@f2+2,f
  8853  0EB0                     l2301:	
  8854  0EB0  01CA               	clrf	___ftadd@sign
  8855  0EB1  0840               	movf	___ftadd@f1,w
  8856  0EB2  07C3               	addwf	___ftadd@f2,f
  8857  0EB3  0841               	movf	___ftadd@f1+1,w
  8858  0EB4  3DC4               	addwfc	___ftadd@f2+1,f
  8859  0EB5  0842               	movf	___ftadd@f1+2,w
  8860  0EB6  3DC5               	addwfc	___ftadd@f2+2,f
  8861  0EB7  1FC5               	btfss	___ftadd@f2+2,7
  8862  0EB8  2ECB               	goto	l2311
  8863  0EB9  30FF               	movlw	255
  8864  0EBA  06C3               	xorwf	___ftadd@f2,f
  8865  0EBB  30FF               	movlw	255
  8866  0EBC  06C4               	xorwf	___ftadd@f2+1,f
  8867  0EBD  30FF               	movlw	255
  8868  0EBE  06C5               	xorwf	___ftadd@f2+2,f
  8869  0EBF  3001               	movlw	1
  8870  0EC0  07C3               	addwf	___ftadd@f2,f
  8871  0EC1  3000               	movlw	0
  8872  0EC2  1803               	skipnc
  8873  0EC3  3001               	movlw	1
  8874  0EC4  07C4               	addwf	___ftadd@f2+1,f
  8875  0EC5  3000               	movlw	0
  8876  0EC6  1803               	skipnc
  8877  0EC7  3001               	movlw	1
  8878  0EC8  07C5               	addwf	___ftadd@f2+2,f
  8879  0EC9  01CA               	clrf	___ftadd@sign
  8880  0ECA  0ACA               	incf	___ftadd@sign,f
  8881  0ECB                     l2311:	
  8882  0ECB  0843               	movf	___ftadd@f2,w
  8883  0ECC  00F0               	movwf	___ftpack@arg
  8884  0ECD  0844               	movf	___ftadd@f2+1,w
  8885  0ECE  00F1               	movwf	___ftpack@arg+1
  8886  0ECF  0845               	movf	___ftadd@f2+2,w
  8887  0ED0  00F2               	movwf	___ftpack@arg+2
  8888  0ED1  084C               	movf	___ftadd@exp1,w
  8889  0ED2  00C6               	movwf	??___ftadd
  8890  0ED3  0846               	movf	??___ftadd,w
  8891  0ED4  00F3               	movwf	___ftpack@exp
  8892  0ED5  084A               	movf	___ftadd@sign,w
  8893  0ED6  00C7               	movwf	??___ftadd+1
  8894  0ED7  0847               	movf	??___ftadd+1,w
  8895  0ED8  00F4               	movwf	___ftpack@sign
  8896  0ED9  3180  200D         	fcall	___ftpack
  8897  0EDB  0870               	movf	?___ftpack,w
  8898  0EDC  0020               	movlb	0	; select bank0
  8899  0EDD  00C0               	movwf	?___ftadd
  8900  0EDE  0871               	movf	?___ftpack+1,w
  8901  0EDF  00C1               	movwf	?___ftadd+1
  8902  0EE0  0872               	movf	?___ftpack+2,w
  8903  0EE1  00C2               	movwf	?___ftadd+2
  8904  0EE2  0008               	return
  8905  0EE3                     __end_of___ftadd:	
  8906                           
  8907                           	psect	text11
  8908  0B2D                     __ptext11:	
  8909 ;; *************** function ___ftdiv *****************
  8910 ;; Defined at:
  8911 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  f2              3   16[BANK0 ] float 
  8914 ;;  f1              3   19[BANK0 ] float 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;  f3              3   27[BANK0 ] float 
  8917 ;;  sign            1   31[BANK0 ] unsigned char 
  8918 ;;  exp             1   30[BANK0 ] unsigned char 
  8919 ;;  cntr            1   26[BANK0 ] unsigned char 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  3   16[BANK0 ] float 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2, status,0, pclath, cstack
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8929 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;Total ram usage:       16 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:    1
  8936 ;; This function calls:
  8937 ;;		___ftpack
  8938 ;; This function is called by:
  8939 ;;		_tempCalc
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           
  8944                           ;psect for function ___ftdiv
  8945  0B2D                     ___ftdiv:	
  8946                           
  8947                           ;incstack = 0
  8948                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8949  0B2D  0020               	movlb	0	; select bank0
  8950  0B2E  0833               	movf	___ftdiv@f1,w
  8951  0B2F  00B6               	movwf	??___ftdiv
  8952  0B30  0834               	movf	___ftdiv@f1+1,w
  8953  0B31  00B7               	movwf	??___ftdiv+1
  8954  0B32  0835               	movf	___ftdiv@f1+2,w
  8955  0B33  00B8               	movwf	??___ftdiv+2
  8956  0B34  1003               	clrc
  8957  0B35  0D37               	rlf	??___ftdiv+1,w
  8958  0B36  0D38               	rlf	??___ftdiv+2,w
  8959  0B37  00B9               	movwf	??___ftdiv+3
  8960  0B38  0839               	movf	??___ftdiv+3,w
  8961  0B39  00BE               	movwf	___ftdiv@exp
  8962  0B3A  083E               	movf	___ftdiv@exp,w
  8963  0B3B  1D03               	btfss	3,2
  8964  0B3C  2B44               	goto	l2873
  8965  0B3D  3000               	movlw	0
  8966  0B3E  00B0               	movwf	?___ftdiv
  8967  0B3F  3000               	movlw	0
  8968  0B40  00B1               	movwf	?___ftdiv+1
  8969  0B41  3000               	movlw	0
  8970  0B42  00B2               	movwf	?___ftdiv+2
  8971  0B43  0008               	return
  8972  0B44                     l2873:	
  8973  0B44  0830               	movf	___ftdiv@f2,w
  8974  0B45  00B6               	movwf	??___ftdiv
  8975  0B46  0831               	movf	___ftdiv@f2+1,w
  8976  0B47  00B7               	movwf	??___ftdiv+1
  8977  0B48  0832               	movf	___ftdiv@f2+2,w
  8978  0B49  00B8               	movwf	??___ftdiv+2
  8979  0B4A  1003               	clrc
  8980  0B4B  0D37               	rlf	??___ftdiv+1,w
  8981  0B4C  0D38               	rlf	??___ftdiv+2,w
  8982  0B4D  00B9               	movwf	??___ftdiv+3
  8983  0B4E  0839               	movf	??___ftdiv+3,w
  8984  0B4F  00BF               	movwf	___ftdiv@sign
  8985  0B50  083F               	movf	___ftdiv@sign,w
  8986  0B51  1D03               	btfss	3,2
  8987  0B52  2B5A               	goto	l2879
  8988  0B53  3000               	movlw	0
  8989  0B54  00B0               	movwf	?___ftdiv
  8990  0B55  3000               	movlw	0
  8991  0B56  00B1               	movwf	?___ftdiv+1
  8992  0B57  3000               	movlw	0
  8993  0B58  00B2               	movwf	?___ftdiv+2
  8994  0B59  0008               	return
  8995  0B5A                     l2879:	
  8996  0B5A  3000               	movlw	0
  8997  0B5B  00BB               	movwf	___ftdiv@f3
  8998  0B5C  3000               	movlw	0
  8999  0B5D  00BC               	movwf	___ftdiv@f3+1
  9000  0B5E  3000               	movlw	0
  9001  0B5F  00BD               	movwf	___ftdiv@f3+2
  9002  0B60  3089               	movlw	137
  9003  0B61  073F               	addwf	___ftdiv@sign,w
  9004  0B62  00B6               	movwf	??___ftdiv
  9005  0B63  0836               	movf	??___ftdiv,w
  9006  0B64  02BE               	subwf	___ftdiv@exp,f
  9007  0B65  0833               	movf	___ftdiv@f1,w
  9008  0B66  00B6               	movwf	??___ftdiv
  9009  0B67  0834               	movf	___ftdiv@f1+1,w
  9010  0B68  00B7               	movwf	??___ftdiv+1
  9011  0B69  0835               	movf	___ftdiv@f1+2,w
  9012  0B6A  00B8               	movwf	??___ftdiv+2
  9013  0B6B  3010               	movlw	16
  9014  0B6C                     u3185:	
  9015  0B6C  36B8               	lsrf	??___ftdiv+2,f
  9016  0B6D  0CB7               	rrf	??___ftdiv+1,f
  9017  0B6E  0CB6               	rrf	??___ftdiv,f
  9018  0B6F  0B89               	decfsz	9,f
  9019  0B70  2B6C               	goto	u3185
  9020  0B71  0836               	movf	??___ftdiv,w
  9021  0B72  00B9               	movwf	??___ftdiv+3
  9022  0B73  0839               	movf	??___ftdiv+3,w
  9023  0B74  00BF               	movwf	___ftdiv@sign
  9024  0B75  0830               	movf	___ftdiv@f2,w
  9025  0B76  00B6               	movwf	??___ftdiv
  9026  0B77  0831               	movf	___ftdiv@f2+1,w
  9027  0B78  00B7               	movwf	??___ftdiv+1
  9028  0B79  0832               	movf	___ftdiv@f2+2,w
  9029  0B7A  00B8               	movwf	??___ftdiv+2
  9030  0B7B  3010               	movlw	16
  9031  0B7C                     u3195:	
  9032  0B7C  36B8               	lsrf	??___ftdiv+2,f
  9033  0B7D  0CB7               	rrf	??___ftdiv+1,f
  9034  0B7E  0CB6               	rrf	??___ftdiv,f
  9035  0B7F  0B89               	decfsz	9,f
  9036  0B80  2B7C               	goto	u3195
  9037  0B81  0836               	movf	??___ftdiv,w
  9038  0B82  00B9               	movwf	??___ftdiv+3
  9039  0B83  0839               	movf	??___ftdiv+3,w
  9040  0B84  06BF               	xorwf	___ftdiv@sign,f
  9041  0B85  3080               	movlw	128
  9042  0B86  00B6               	movwf	??___ftdiv
  9043  0B87  0836               	movf	??___ftdiv,w
  9044  0B88  05BF               	andwf	___ftdiv@sign,f
  9045  0B89  17B4               	bsf	___ftdiv@f1+1,7
  9046  0B8A  30FF               	movlw	255
  9047  0B8B  05B3               	andwf	___ftdiv@f1,f
  9048  0B8C  30FF               	movlw	255
  9049  0B8D  05B4               	andwf	___ftdiv@f1+1,f
  9050  0B8E  3000               	movlw	0
  9051  0B8F  05B5               	andwf	___ftdiv@f1+2,f
  9052  0B90  17B1               	bsf	___ftdiv@f2+1,7
  9053  0B91  30FF               	movlw	255
  9054  0B92  05B0               	andwf	___ftdiv@f2,f
  9055  0B93  30FF               	movlw	255
  9056  0B94  05B1               	andwf	___ftdiv@f2+1,f
  9057  0B95  3000               	movlw	0
  9058  0B96  05B2               	andwf	___ftdiv@f2+2,f
  9059  0B97  3018               	movlw	24
  9060  0B98  00B6               	movwf	??___ftdiv
  9061  0B99  0836               	movf	??___ftdiv,w
  9062  0B9A  00BA               	movwf	___ftdiv@cntr
  9063  0B9B                     l2893:	
  9064  0B9B  3001               	movlw	1
  9065  0B9C                     u3205:	
  9066  0B9C  35BB               	lslf	___ftdiv@f3,f
  9067  0B9D  0DBC               	rlf	___ftdiv@f3+1,f
  9068  0B9E  0DBD               	rlf	___ftdiv@f3+2,f
  9069  0B9F  0B89               	decfsz	9,f
  9070  0BA0  2B9C               	goto	u3205
  9071  0BA1  0832               	movf	___ftdiv@f2+2,w
  9072  0BA2  0235               	subwf	___ftdiv@f1+2,w
  9073  0BA3  1D03               	skipz
  9074  0BA4  2BAB               	goto	u3215
  9075  0BA5  0831               	movf	___ftdiv@f2+1,w
  9076  0BA6  0234               	subwf	___ftdiv@f1+1,w
  9077  0BA7  1D03               	skipz
  9078  0BA8  2BAB               	goto	u3215
  9079  0BA9  0830               	movf	___ftdiv@f2,w
  9080  0BAA  0233               	subwf	___ftdiv@f1,w
  9081  0BAB                     u3215:	
  9082  0BAB  1C03               	skipc
  9083  0BAC  2BB4               	goto	l2901
  9084  0BAD  0830               	movf	___ftdiv@f2,w
  9085  0BAE  02B3               	subwf	___ftdiv@f1,f
  9086  0BAF  0831               	movf	___ftdiv@f2+1,w
  9087  0BB0  3BB4               	subwfb	___ftdiv@f1+1,f
  9088  0BB1  0832               	movf	___ftdiv@f2+2,w
  9089  0BB2  3BB5               	subwfb	___ftdiv@f1+2,f
  9090  0BB3  143B               	bsf	___ftdiv@f3,0
  9091  0BB4                     l2901:	
  9092  0BB4  3001               	movlw	1
  9093  0BB5                     u3225:	
  9094  0BB5  35B3               	lslf	___ftdiv@f1,f
  9095  0BB6  0DB4               	rlf	___ftdiv@f1+1,f
  9096  0BB7  0DB5               	rlf	___ftdiv@f1+2,f
  9097  0BB8  0B89               	decfsz	9,f
  9098  0BB9  2BB5               	goto	u3225
  9099  0BBA  3001               	movlw	1
  9100  0BBB  02BA               	subwf	___ftdiv@cntr,f
  9101  0BBC  1D03               	btfss	3,2
  9102  0BBD  2B9B               	goto	l2893
  9103  0BBE  083B               	movf	___ftdiv@f3,w
  9104  0BBF  00F0               	movwf	___ftpack@arg
  9105  0BC0  083C               	movf	___ftdiv@f3+1,w
  9106  0BC1  00F1               	movwf	___ftpack@arg+1
  9107  0BC2  083D               	movf	___ftdiv@f3+2,w
  9108  0BC3  00F2               	movwf	___ftpack@arg+2
  9109  0BC4  083E               	movf	___ftdiv@exp,w
  9110  0BC5  00B6               	movwf	??___ftdiv
  9111  0BC6  0836               	movf	??___ftdiv,w
  9112  0BC7  00F3               	movwf	___ftpack@exp
  9113  0BC8  083F               	movf	___ftdiv@sign,w
  9114  0BC9  00B7               	movwf	??___ftdiv+1
  9115  0BCA  0837               	movf	??___ftdiv+1,w
  9116  0BCB  00F4               	movwf	___ftpack@sign
  9117  0BCC  3180  200D         	fcall	___ftpack
  9118  0BCE  0870               	movf	?___ftpack,w
  9119  0BCF  0020               	movlb	0	; select bank0
  9120  0BD0  00B0               	movwf	?___ftdiv
  9121  0BD1  0871               	movf	?___ftpack+1,w
  9122  0BD2  00B1               	movwf	?___ftdiv+1
  9123  0BD3  0872               	movf	?___ftpack+2,w
  9124  0BD4  00B2               	movwf	?___ftdiv+2
  9125  0BD5  0008               	return
  9126  0BD6                     __end_of___ftdiv:	
  9127                           
  9128                           	psect	text12
  9129  000D                     __ptext12:	
  9130 ;; *************** function ___ftpack *****************
  9131 ;; Defined at:
  9132 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  arg             3    0[COMMON] unsigned um
  9135 ;;  exp             1    3[COMMON] unsigned char 
  9136 ;;  sign            1    4[COMMON] unsigned char 
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;		None
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  3    0[COMMON] float 
  9141 ;; Registers used:
  9142 ;;		wreg, status,2, status,0
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9148 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;Total ram usage:        8 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; This function calls:
  9155 ;;		Nothing
  9156 ;; This function is called by:
  9157 ;;		___awtoft
  9158 ;;		___ftadd
  9159 ;;		___ftdiv
  9160 ;;		___ftmul
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           
  9165                           ;psect for function ___ftpack
  9166  000D                     ___ftpack:	
  9167                           
  9168                           ;incstack = 0
  9169                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9170  000D  0873               	movf	___ftpack@exp,w
  9171  000E  1903               	btfsc	3,2
  9172  000F  2815               	goto	l2187
  9173  0010  0872               	movf	___ftpack@arg+2,w
  9174  0011  0471               	iorwf	___ftpack@arg+1,w
  9175  0012  0470               	iorwf	___ftpack@arg,w
  9176  0013  1D03               	skipz
  9177  0014  2826               	goto	l2193
  9178  0015                     l2187:	
  9179  0015  3000               	movlw	0
  9180  0016  00F0               	movwf	?___ftpack
  9181  0017  3000               	movlw	0
  9182  0018  00F1               	movwf	?___ftpack+1
  9183  0019  3000               	movlw	0
  9184  001A  00F2               	movwf	?___ftpack+2
  9185  001B  0008               	return
  9186  001C                     l2191:	
  9187  001C  3001               	movlw	1
  9188  001D  00F5               	movwf	??___ftpack
  9189  001E  0875               	movf	??___ftpack,w
  9190  001F  07F3               	addwf	___ftpack@exp,f
  9191  0020  3001               	movlw	1
  9192  0021                     u1995:	
  9193  0021  36F2               	lsrf	___ftpack@arg+2,f
  9194  0022  0CF1               	rrf	___ftpack@arg+1,f
  9195  0023  0CF0               	rrf	___ftpack@arg,f
  9196  0024  0B89               	decfsz	9,f
  9197  0025  2821               	goto	u1995
  9198  0026                     l2193:	
  9199  0026  30FE               	movlw	254
  9200  0027  0572               	andwf	___ftpack@arg+2,w
  9201  0028  1903               	btfsc	3,2
  9202  0029  283F               	goto	l716
  9203  002A  281C               	goto	l2191
  9204  002B                     l2195:	
  9205  002B  3001               	movlw	1
  9206  002C  00F5               	movwf	??___ftpack
  9207  002D  0875               	movf	??___ftpack,w
  9208  002E  07F3               	addwf	___ftpack@exp,f
  9209  002F  3001               	movlw	1
  9210  0030  07F0               	addwf	___ftpack@arg,f
  9211  0031  3000               	movlw	0
  9212  0032  1803               	skipnc
  9213  0033  3001               	movlw	1
  9214  0034  07F1               	addwf	___ftpack@arg+1,f
  9215  0035  3000               	movlw	0
  9216  0036  1803               	skipnc
  9217  0037  3001               	movlw	1
  9218  0038  07F2               	addwf	___ftpack@arg+2,f
  9219  0039  3001               	movlw	1
  9220  003A                     u2015:	
  9221  003A  36F2               	lsrf	___ftpack@arg+2,f
  9222  003B  0CF1               	rrf	___ftpack@arg+1,f
  9223  003C  0CF0               	rrf	___ftpack@arg,f
  9224  003D  0B89               	decfsz	9,f
  9225  003E  283A               	goto	u2015
  9226  003F                     l716:	
  9227  003F  30FF               	movlw	255
  9228  0040  0572               	andwf	___ftpack@arg+2,w
  9229  0041  1903               	btfsc	3,2
  9230  0042  284C               	goto	l2203
  9231  0043  282B               	goto	l2195
  9232  0044                     l2201:	
  9233  0044  3001               	movlw	1
  9234  0045  02F3               	subwf	___ftpack@exp,f
  9235  0046  3001               	movlw	1
  9236  0047                     u2035:	
  9237  0047  35F0               	lslf	___ftpack@arg,f
  9238  0048  0DF1               	rlf	___ftpack@arg+1,f
  9239  0049  0DF2               	rlf	___ftpack@arg+2,f
  9240  004A  0B89               	decfsz	9,f
  9241  004B  2847               	goto	u2035
  9242  004C                     l2203:	
  9243  004C  1BF1               	btfsc	___ftpack@arg+1,7
  9244  004D  2852               	goto	l723
  9245  004E  3002               	movlw	2
  9246  004F  0273               	subwf	___ftpack@exp,w
  9247  0050  1803               	skipnc
  9248  0051  2844               	goto	l2201
  9249  0052                     l723:	
  9250  0052  1873               	btfsc	___ftpack@exp,0
  9251  0053  285A               	goto	l724
  9252  0054  30FF               	movlw	255
  9253  0055  05F0               	andwf	___ftpack@arg,f
  9254  0056  307F               	movlw	127
  9255  0057  05F1               	andwf	___ftpack@arg+1,f
  9256  0058  30FF               	movlw	255
  9257  0059  05F2               	andwf	___ftpack@arg+2,f
  9258  005A                     l724:	
  9259  005A  1003               	clrc
  9260  005B  0CF3               	rrf	___ftpack@exp,f
  9261  005C  0873               	movf	___ftpack@exp,w
  9262  005D  00F5               	movwf	??___ftpack
  9263  005E  01F6               	clrf	??___ftpack+1
  9264  005F  01F7               	clrf	??___ftpack+2
  9265  0060  3010               	movlw	16
  9266  0061                     u2075:	
  9267  0061  35F5               	lslf	??___ftpack,f
  9268  0062  0DF6               	rlf	??___ftpack+1,f
  9269  0063  0DF7               	rlf	??___ftpack+2,f
  9270  0064  0B89               	decfsz	9,f
  9271  0065  2861               	goto	u2075
  9272  0066  0875               	movf	??___ftpack,w
  9273  0067  04F0               	iorwf	___ftpack@arg,f
  9274  0068  0876               	movf	??___ftpack+1,w
  9275  0069  04F1               	iorwf	___ftpack@arg+1,f
  9276  006A  0877               	movf	??___ftpack+2,w
  9277  006B  04F2               	iorwf	___ftpack@arg+2,f
  9278  006C  0874               	movf	___ftpack@sign,w
  9279  006D  1903               	btfsc	3,2
  9280  006E  0008               	return
  9281  006F  17F2               	bsf	___ftpack@arg+2,7
  9282  0070  0008               	return
  9283  0071                     __end_of___ftpack:	
  9284                           
  9285                           	psect	text13
  9286  0071                     __ptext13:	
  9287 ;; *************** function _readAnalog *****************
  9288 ;; Defined at:
  9289 ;;		line 46 in file "adc.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;  channel         1    wreg     unsigned char 
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;  channel         1   12[COMMON] unsigned char 
  9294 ;;  value           2   10[COMMON] int 
  9295 ;;  analog_chann    1    9[COMMON] unsigned char 
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  2    6[BANK0 ] int 
  9298 ;; Registers used:
  9299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9306 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9307 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;Total ram usage:       21 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    1
  9312 ;; This function calls:
  9313 ;;		_ADCRead
  9314 ;;		___aldiv
  9315 ;;		___bmul
  9316 ;; This function is called by:
  9317 ;;		_main
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           
  9322                           ;psect for function _readAnalog
  9323  0071                     _readAnalog:	
  9324                           
  9325                           ;incstack = 0
  9326                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9327                           ;readAnalog@channel stored from wreg
  9328  0071  00FC               	movwf	readAnalog@channel
  9329                           
  9330                           ;adc.c: 48: int16_t value;
  9331                           ;adc.c: 50: uint8_t analog_channel = channels[channel];
  9332  0072  087C               	movf	readAnalog@channel,w
  9333  0073  3E86               	addlw	low (_channels| (0+32768))
  9334  0074  0084               	movwf	4
  9335  0075  3098               	movlw	high (_channels| (0+32768))
  9336  0076  1803               	skipnc
  9337  0077  3E01               	addlw	1
  9338  0078  0085               	movwf	5
  9339  0079  0800               	movf	0,w	;code access
  9340  007A  0020               	movlb	0	; select bank0
  9341  007B  00A8               	movwf	??_readAnalog
  9342  007C  0828               	movf	??_readAnalog,w
  9343  007D  00F9               	movwf	readAnalog@analog_channel
  9344                           
  9345                           ;adc.c: 52: value = ADCRead(analog_channel);
  9346  007E  0879               	movf	readAnalog@analog_channel,w
  9347  007F  3196  2638  3180   	fcall	_ADCRead
  9348  0082  0871               	movf	?_ADCRead+1,w
  9349  0083  00FB               	movwf	readAnalog@value+1
  9350  0084  0870               	movf	?_ADCRead,w
  9351  0085  00FA               	movwf	readAnalog@value
  9352                           
  9353                           ;adc.c: 54: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9354  0086  087C               	movf	readAnalog@channel,w
  9355  0087  0020               	movlb	0	; select bank0
  9356  0088  00A8               	movwf	??_readAnalog
  9357  0089  3001               	movlw	1
  9358  008A                     u3355:	
  9359  008A  35A8               	lslf	??_readAnalog,f
  9360  008B  3EFF               	addlw	-1
  9361  008C  1D03               	skipz
  9362  008D  288A               	goto	u3355
  9363  008E  3528               	lslf	??_readAnalog,w
  9364  008F  3E2A               	addlw	(low (_totals| (0+256)))& (0+255)
  9365  0090  0086               	movwf	6
  9366  0091  3001               	movlw	1	; select bank2/3
  9367  0092  0087               	movwf	7
  9368  0093  3F40               	moviw [0]fsr1
  9369  0094  00A9               	movwf	??_readAnalog+1
  9370  0095  3F41               	moviw [1]fsr1
  9371  0096  00AA               	movwf	??_readAnalog+2
  9372  0097  3F42               	moviw [2]fsr1
  9373  0098  00AB               	movwf	??_readAnalog+3
  9374  0099  3F43               	moviw [3]fsr1
  9375  009A  00AC               	movwf	??_readAnalog+4
  9376  009B  0021               	movlb	1	; select bank1
  9377  009C  085D               	movf	_sampleIndex^(0+128),w
  9378  009D  0020               	movlb	0	; select bank0
  9379  009E  00AD               	movwf	??_readAnalog+5
  9380  009F  3001               	movlw	1
  9381  00A0                     u3365:	
  9382  00A0  35AD               	lslf	??_readAnalog+5,f
  9383  00A1  0B89               	decfsz	9,f
  9384  00A2  28A0               	goto	u3365
  9385  00A3  3028               	movlw	40
  9386  00A4  00AE               	movwf	??_readAnalog+6
  9387  00A5  082E               	movf	??_readAnalog+6,w
  9388  00A6  00F0               	movwf	___bmul@multiplicand
  9389  00A7  087C               	movf	readAnalog@channel,w
  9390  00A8  3195  25ED  3180   	fcall	___bmul
  9391  00AB  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9392  00AC  0020               	movlb	0	; select bank0
  9393  00AD  072D               	addwf	??_readAnalog+5,w
  9394  00AE  00AF               	movwf	??_readAnalog+7
  9395  00AF  082F               	movf	??_readAnalog+7,w
  9396  00B0  0086               	movwf	6
  9397  00B1  3001               	movlw	1	; select bank3/4
  9398  00B2  0087               	movwf	7
  9399  00B3  3F40               	moviw [0]fsr1
  9400  00B4  00B0               	movwf	??_readAnalog+8
  9401  00B5  3F41               	moviw [1]fsr1
  9402  00B6  00B1               	movwf	??_readAnalog+9
  9403  00B7  0830               	movf	??_readAnalog+8,w
  9404  00B8  00B2               	movwf	??_readAnalog+10
  9405  00B9  0831               	movf	??_readAnalog+9,w
  9406  00BA  00B3               	movwf	??_readAnalog+11
  9407  00BB  3000               	movlw	0
  9408  00BC  1BB3               	btfsc	??_readAnalog+11,7
  9409  00BD  30FF               	movlw	255
  9410  00BE  00B4               	movwf	??_readAnalog+12
  9411  00BF  00B5               	movwf	??_readAnalog+13
  9412  00C0  09B2               	comf	??_readAnalog+10,f
  9413  00C1  09B3               	comf	??_readAnalog+11,f
  9414  00C2  09B4               	comf	??_readAnalog+12,f
  9415  00C3  09B5               	comf	??_readAnalog+13,f
  9416  00C4  0AB2               	incf	??_readAnalog+10,f
  9417  00C5  1903               	skipnz
  9418  00C6  0AB3               	incf	??_readAnalog+11,f
  9419  00C7  1903               	skipnz
  9420  00C8  0AB4               	incf	??_readAnalog+12,f
  9421  00C9  1903               	skipnz
  9422  00CA  0AB5               	incf	??_readAnalog+13,f
  9423  00CB  0832               	movf	??_readAnalog+10,w
  9424  00CC  07A9               	addwf	??_readAnalog+1,f
  9425  00CD  0833               	movf	??_readAnalog+11,w
  9426  00CE  3DAA               	addwfc	??_readAnalog+2,f
  9427  00CF  0834               	movf	??_readAnalog+12,w
  9428  00D0  3DAB               	addwfc	??_readAnalog+3,f
  9429  00D1  0835               	movf	??_readAnalog+13,w
  9430  00D2  3DAC               	addwfc	??_readAnalog+4,f
  9431  00D3  087C               	movf	readAnalog@channel,w
  9432  00D4  00B6               	movwf	??_readAnalog+14
  9433  00D5  3001               	movlw	1
  9434  00D6                     u3375:	
  9435  00D6  35B6               	lslf	??_readAnalog+14,f
  9436  00D7  3EFF               	addlw	-1
  9437  00D8  1D03               	skipz
  9438  00D9  28D6               	goto	u3375
  9439  00DA  3536               	lslf	??_readAnalog+14,w
  9440  00DB  3E2A               	addlw	(low (_totals| (0+256)))& (0+255)
  9441  00DC  0086               	movwf	6
  9442  00DD  3001               	movlw	1	; select bank2/3
  9443  00DE  0087               	movwf	7
  9444  00DF  0829               	movf	??_readAnalog+1,w
  9445  00E0  3FC0               	movwi [0]fsr1
  9446  00E1  082A               	movf	??_readAnalog+2,w
  9447  00E2  3FC1               	movwi [1]fsr1
  9448  00E3  082B               	movf	??_readAnalog+3,w
  9449  00E4  3FC2               	movwi [2]fsr1
  9450  00E5  082C               	movf	??_readAnalog+4,w
  9451  00E6  3FC3               	movwi [3]fsr1
  9452                           
  9453                           ;adc.c: 56: samples[channel][sampleIndex] = value;
  9454  00E7  0021               	movlb	1	; select bank1
  9455  00E8  085D               	movf	_sampleIndex^(0+128),w
  9456  00E9  0020               	movlb	0	; select bank0
  9457  00EA  00A8               	movwf	??_readAnalog
  9458  00EB  3001               	movlw	1
  9459  00EC                     u3385:	
  9460  00EC  35A8               	lslf	??_readAnalog,f
  9461  00ED  0B89               	decfsz	9,f
  9462  00EE  28EC               	goto	u3385
  9463  00EF  3028               	movlw	40
  9464  00F0  00A9               	movwf	??_readAnalog+1
  9465  00F1  0829               	movf	??_readAnalog+1,w
  9466  00F2  00F0               	movwf	___bmul@multiplicand
  9467  00F3  087C               	movf	readAnalog@channel,w
  9468  00F4  3195  25ED  3180   	fcall	___bmul
  9469  00F7  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9470  00F8  0020               	movlb	0	; select bank0
  9471  00F9  0728               	addwf	??_readAnalog,w
  9472  00FA  00AA               	movwf	??_readAnalog+2
  9473  00FB  082A               	movf	??_readAnalog+2,w
  9474  00FC  0086               	movwf	6
  9475  00FD  3001               	movlw	1	; select bank3/4
  9476  00FE  0087               	movwf	7
  9477  00FF  087A               	movf	readAnalog@value,w
  9478  0100  3FC0               	movwi [0]fsr1
  9479  0101  087B               	movf	readAnalog@value+1,w
  9480  0102  3FC1               	movwi [1]fsr1
  9481                           
  9482                           ;adc.c: 58: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9483  0103  087C               	movf	readAnalog@channel,w
  9484  0104  00A8               	movwf	??_readAnalog
  9485  0105  3001               	movlw	1
  9486  0106                     u3395:	
  9487  0106  35A8               	lslf	??_readAnalog,f
  9488  0107  3EFF               	addlw	-1
  9489  0108  1D03               	skipz
  9490  0109  2906               	goto	u3395
  9491  010A  3528               	lslf	??_readAnalog,w
  9492  010B  3E2A               	addlw	(low (_totals| (0+256)))& (0+255)
  9493  010C  0086               	movwf	6
  9494  010D  3001               	movlw	1	; select bank2/3
  9495  010E  0087               	movwf	7
  9496  010F  3F40               	moviw [0]fsr1
  9497  0110  00A9               	movwf	??_readAnalog+1
  9498  0111  3F41               	moviw [1]fsr1
  9499  0112  00AA               	movwf	??_readAnalog+2
  9500  0113  3F42               	moviw [2]fsr1
  9501  0114  00AB               	movwf	??_readAnalog+3
  9502  0115  3F43               	moviw [3]fsr1
  9503  0116  00AC               	movwf	??_readAnalog+4
  9504  0117  0021               	movlb	1	; select bank1
  9505  0118  085D               	movf	_sampleIndex^(0+128),w
  9506  0119  0020               	movlb	0	; select bank0
  9507  011A  00AD               	movwf	??_readAnalog+5
  9508  011B  3001               	movlw	1
  9509  011C                     u3405:	
  9510  011C  35AD               	lslf	??_readAnalog+5,f
  9511  011D  0B89               	decfsz	9,f
  9512  011E  291C               	goto	u3405
  9513  011F  3028               	movlw	40
  9514  0120  00AE               	movwf	??_readAnalog+6
  9515  0121  082E               	movf	??_readAnalog+6,w
  9516  0122  00F0               	movwf	___bmul@multiplicand
  9517  0123  087C               	movf	readAnalog@channel,w
  9518  0124  3195  25ED  3180   	fcall	___bmul
  9519  0127  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9520  0128  0020               	movlb	0	; select bank0
  9521  0129  072D               	addwf	??_readAnalog+5,w
  9522  012A  00AF               	movwf	??_readAnalog+7
  9523  012B  082F               	movf	??_readAnalog+7,w
  9524  012C  0086               	movwf	6
  9525  012D  3001               	movlw	1	; select bank3/4
  9526  012E  0087               	movwf	7
  9527  012F  3F40               	moviw [0]fsr1
  9528  0130  00B0               	movwf	??_readAnalog+8
  9529  0131  3F41               	moviw [1]fsr1
  9530  0132  00B1               	movwf	??_readAnalog+9
  9531  0133  0830               	movf	??_readAnalog+8,w
  9532  0134  00B2               	movwf	??_readAnalog+10
  9533  0135  0831               	movf	??_readAnalog+9,w
  9534  0136  00B3               	movwf	??_readAnalog+11
  9535  0137  3000               	movlw	0
  9536  0138  1BB3               	btfsc	??_readAnalog+11,7
  9537  0139  30FF               	movlw	255
  9538  013A  00B4               	movwf	??_readAnalog+12
  9539  013B  00B5               	movwf	??_readAnalog+13
  9540  013C  0832               	movf	??_readAnalog+10,w
  9541  013D  07A9               	addwf	??_readAnalog+1,f
  9542  013E  0833               	movf	??_readAnalog+11,w
  9543  013F  3DAA               	addwfc	??_readAnalog+2,f
  9544  0140  0834               	movf	??_readAnalog+12,w
  9545  0141  3DAB               	addwfc	??_readAnalog+3,f
  9546  0142  0835               	movf	??_readAnalog+13,w
  9547  0143  3DAC               	addwfc	??_readAnalog+4,f
  9548  0144  087C               	movf	readAnalog@channel,w
  9549  0145  00B6               	movwf	??_readAnalog+14
  9550  0146  3001               	movlw	1
  9551  0147                     u3415:	
  9552  0147  35B6               	lslf	??_readAnalog+14,f
  9553  0148  3EFF               	addlw	-1
  9554  0149  1D03               	skipz
  9555  014A  2947               	goto	u3415
  9556  014B  3536               	lslf	??_readAnalog+14,w
  9557  014C  3E2A               	addlw	(low (_totals| (0+256)))& (0+255)
  9558  014D  0086               	movwf	6
  9559  014E  3001               	movlw	1	; select bank2/3
  9560  014F  0087               	movwf	7
  9561  0150  0829               	movf	??_readAnalog+1,w
  9562  0151  3FC0               	movwi [0]fsr1
  9563  0152  082A               	movf	??_readAnalog+2,w
  9564  0153  3FC1               	movwi [1]fsr1
  9565  0154  082B               	movf	??_readAnalog+3,w
  9566  0155  3FC2               	movwi [2]fsr1
  9567  0156  082C               	movf	??_readAnalog+4,w
  9568  0157  3FC3               	movwi [3]fsr1
  9569                           
  9570                           ;adc.c: 60: if(channel>=(2-1))
  9571  0158  087C               	movf	readAnalog@channel,w
  9572  0159  1903               	btfsc	3,2
  9573  015A  2969               	goto	l2975
  9574                           
  9575                           ;adc.c: 61: {
  9576                           ;adc.c: 62: sampleIndex+=1;
  9577  015B  3001               	movlw	1
  9578  015C  0021               	movlb	1	; select bank1
  9579  015D  07DD               	addwf	_sampleIndex^(0+128),f
  9580  015E  3000               	movlw	0
  9581  015F  3DDE               	addwfc	(_sampleIndex+1)^(0+128),f
  9582                           
  9583                           ;adc.c: 63: if(sampleIndex >= 20)sampleIndex = 0;
  9584  0160  3000               	movlw	0
  9585  0161  025E               	subwf	(_sampleIndex+1)^(0+128),w
  9586  0162  3014               	movlw	20
  9587  0163  1903               	skipnz
  9588  0164  025D               	subwf	_sampleIndex^(0+128),w
  9589  0165  1C03               	skipc
  9590  0166  2969               	goto	l2975
  9591  0167  01DD               	clrf	_sampleIndex^(0+128)
  9592  0168  01DE               	clrf	(_sampleIndex+1)^(0+128)
  9593  0169                     l2975:	
  9594                           
  9595                           ;adc.c: 64: }
  9596                           ;adc.c: 66: value = totals[channel]/20;
  9597  0169  3000               	movlw	0
  9598  016A  00F3               	movwf	___aldiv@divisor+3
  9599  016B  3000               	movlw	0
  9600  016C  00F2               	movwf	___aldiv@divisor+2
  9601  016D  3000               	movlw	0
  9602  016E  00F1               	movwf	___aldiv@divisor+1
  9603  016F  3014               	movlw	20
  9604  0170  00F0               	movwf	___aldiv@divisor
  9605  0171  087C               	movf	readAnalog@channel,w
  9606  0172  0020               	movlb	0	; select bank0
  9607  0173  00A8               	movwf	??_readAnalog
  9608  0174  3001               	movlw	1
  9609  0175                     u3445:	
  9610  0175  35A8               	lslf	??_readAnalog,f
  9611  0176  3EFF               	addlw	-1
  9612  0177  1D03               	skipz
  9613  0178  2975               	goto	u3445
  9614  0179  3528               	lslf	??_readAnalog,w
  9615  017A  3E2A               	addlw	(low (_totals| (0+256)))& (0+255)
  9616  017B  0086               	movwf	6
  9617  017C  3001               	movlw	1	; select bank2/3
  9618  017D  0087               	movwf	7
  9619  017E  3F40               	moviw [0]fsr1
  9620  017F  00F4               	movwf	___aldiv@dividend
  9621  0180  3F41               	moviw [1]fsr1
  9622  0181  00F5               	movwf	___aldiv@dividend+1
  9623  0182  3F42               	moviw [2]fsr1
  9624  0183  00F6               	movwf	___aldiv@dividend+2
  9625  0184  3F43               	moviw [3]fsr1
  9626  0185  00F7               	movwf	___aldiv@dividend+3
  9627  0186  318A  2225         	fcall	___aldiv
  9628  0188  0871               	movf	?___aldiv+1,w
  9629  0189  00FB               	movwf	readAnalog@value+1
  9630  018A  0870               	movf	?___aldiv,w
  9631  018B  00FA               	movwf	readAnalog@value
  9632                           
  9633                           ;adc.c: 68: return value;
  9634  018C  087B               	movf	readAnalog@value+1,w
  9635  018D  0020               	movlb	0	; select bank0
  9636  018E  00A7               	movwf	?_readAnalog+1
  9637  018F  087A               	movf	readAnalog@value,w
  9638  0190  00A6               	movwf	?_readAnalog
  9639  0191  0008               	return
  9640  0192                     __end_of_readAnalog:	
  9641                           
  9642                           	psect	text14
  9643  15ED                     __ptext14:	
  9644 ;; *************** function ___bmul *****************
  9645 ;; Defined at:
  9646 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  multiplier      1    wreg     unsigned char 
  9649 ;;  multiplicand    1    0[COMMON] unsigned char 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;  multiplier      1    3[COMMON] unsigned char 
  9652 ;;  product         1    2[COMMON] unsigned char 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      unsigned char 
  9655 ;; Registers used:
  9656 ;;		wreg, status,2, status,0
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9662 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;Total ram usage:        4 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		_readAnalog
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           
  9676                           ;psect for function ___bmul
  9677  15ED                     ___bmul:	
  9678                           
  9679                           ;incstack = 0
  9680                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9681                           ;___bmul@multiplier stored from wreg
  9682  15ED  00F3               	movwf	___bmul@multiplier
  9683  15EE  01F2               	clrf	___bmul@product
  9684  15EF                     l2815:	
  9685  15EF  1C73               	btfss	___bmul@multiplier,0
  9686  15F0  2DF5               	goto	l2819
  9687  15F1  0870               	movf	___bmul@multiplicand,w
  9688  15F2  00F1               	movwf	??___bmul
  9689  15F3  0871               	movf	??___bmul,w
  9690  15F4  07F2               	addwf	___bmul@product,f
  9691  15F5                     l2819:	
  9692  15F5  1003               	clrc
  9693  15F6  0DF0               	rlf	___bmul@multiplicand,f
  9694  15F7  1003               	clrc
  9695  15F8  0CF3               	rrf	___bmul@multiplier,f
  9696  15F9  0873               	movf	___bmul@multiplier,w
  9697  15FA  1D03               	btfss	3,2
  9698  15FB  2DEF               	goto	l2815
  9699  15FC  0872               	movf	___bmul@product,w
  9700  15FD  0008               	return
  9701  15FE                     __end_of___bmul:	
  9702                           
  9703                           	psect	text15
  9704  0A25                     __ptext15:	
  9705 ;; *************** function ___aldiv *****************
  9706 ;; Defined at:
  9707 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  divisor         4    0[COMMON] long 
  9710 ;;  dividend        4    4[COMMON] long 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  quotient        4    2[BANK0 ] long 
  9713 ;;  sign            1    1[BANK0 ] unsigned char 
  9714 ;;  counter         1    0[BANK0 ] unsigned char 
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  4    0[COMMON] long 
  9717 ;; Registers used:
  9718 ;;		wreg, status,2, status,0
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9724 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;Total ram usage:       15 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; This function calls:
  9731 ;;		Nothing
  9732 ;; This function is called by:
  9733 ;;		_readAnalog
  9734 ;;		_main
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           
  9739                           ;psect for function ___aldiv
  9740  0A25                     ___aldiv:	
  9741                           
  9742                           ;incstack = 0
  9743                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9744  0A25  0020               	movlb	0	; select bank0
  9745  0A26  01A1               	clrf	___aldiv@sign
  9746  0A27  1FF3               	btfss	___aldiv@divisor+3,7
  9747  0A28  2A36               	goto	l610
  9748  0A29  09F0               	comf	___aldiv@divisor,f
  9749  0A2A  09F1               	comf	___aldiv@divisor+1,f
  9750  0A2B  09F2               	comf	___aldiv@divisor+2,f
  9751  0A2C  09F3               	comf	___aldiv@divisor+3,f
  9752  0A2D  0AF0               	incf	___aldiv@divisor,f
  9753  0A2E  1903               	skipnz
  9754  0A2F  0AF1               	incf	___aldiv@divisor+1,f
  9755  0A30  1903               	skipnz
  9756  0A31  0AF2               	incf	___aldiv@divisor+2,f
  9757  0A32  1903               	skipnz
  9758  0A33  0AF3               	incf	___aldiv@divisor+3,f
  9759  0A34  01A1               	clrf	___aldiv@sign
  9760  0A35  0AA1               	incf	___aldiv@sign,f
  9761  0A36                     l610:	
  9762  0A36  1FF7               	btfss	___aldiv@dividend+3,7
  9763  0A37  2A47               	goto	l2837
  9764  0A38  09F4               	comf	___aldiv@dividend,f
  9765  0A39  09F5               	comf	___aldiv@dividend+1,f
  9766  0A3A  09F6               	comf	___aldiv@dividend+2,f
  9767  0A3B  09F7               	comf	___aldiv@dividend+3,f
  9768  0A3C  0AF4               	incf	___aldiv@dividend,f
  9769  0A3D  1903               	skipnz
  9770  0A3E  0AF5               	incf	___aldiv@dividend+1,f
  9771  0A3F  1903               	skipnz
  9772  0A40  0AF6               	incf	___aldiv@dividend+2,f
  9773  0A41  1903               	skipnz
  9774  0A42  0AF7               	incf	___aldiv@dividend+3,f
  9775  0A43  3001               	movlw	1
  9776  0A44  00F8               	movwf	??___aldiv
  9777  0A45  0878               	movf	??___aldiv,w
  9778  0A46  06A1               	xorwf	___aldiv@sign,f
  9779  0A47                     l2837:	
  9780  0A47  3000               	movlw	0
  9781  0A48  00A5               	movwf	___aldiv@quotient+3
  9782  0A49  3000               	movlw	0
  9783  0A4A  00A4               	movwf	___aldiv@quotient+2
  9784  0A4B  3000               	movlw	0
  9785  0A4C  00A3               	movwf	___aldiv@quotient+1
  9786  0A4D  3000               	movlw	0
  9787  0A4E  00A2               	movwf	___aldiv@quotient
  9788  0A4F  0873               	movf	___aldiv@divisor+3,w
  9789  0A50  0472               	iorwf	___aldiv@divisor+2,w
  9790  0A51  0471               	iorwf	___aldiv@divisor+1,w
  9791  0A52  0470               	iorwf	___aldiv@divisor,w
  9792  0A53  1903               	skipnz
  9793  0A54  2A90               	goto	l2859
  9794  0A55  01A0               	clrf	___aldiv@counter
  9795  0A56  0AA0               	incf	___aldiv@counter,f
  9796  0A57                     l2845:	
  9797  0A57  1BF3               	btfsc	___aldiv@divisor+3,7
  9798  0A58  2A65               	goto	l2847
  9799  0A59  3001               	movlw	1
  9800  0A5A                     u3095:	
  9801  0A5A  35F0               	lslf	___aldiv@divisor,f
  9802  0A5B  0DF1               	rlf	___aldiv@divisor+1,f
  9803  0A5C  0DF2               	rlf	___aldiv@divisor+2,f
  9804  0A5D  0DF3               	rlf	___aldiv@divisor+3,f
  9805  0A5E  0B89               	decfsz	9,f
  9806  0A5F  2A5A               	goto	u3095
  9807  0A60  3001               	movlw	1
  9808  0A61  00F8               	movwf	??___aldiv
  9809  0A62  0878               	movf	??___aldiv,w
  9810  0A63  07A0               	addwf	___aldiv@counter,f
  9811  0A64  2A57               	goto	l2845
  9812  0A65                     l2847:	
  9813  0A65  3001               	movlw	1
  9814  0A66                     u3115:	
  9815  0A66  35A2               	lslf	___aldiv@quotient,f
  9816  0A67  0DA3               	rlf	___aldiv@quotient+1,f
  9817  0A68  0DA4               	rlf	___aldiv@quotient+2,f
  9818  0A69  0DA5               	rlf	___aldiv@quotient+3,f
  9819  0A6A  0B89               	decfsz	9,f
  9820  0A6B  2A66               	goto	u3115
  9821  0A6C  0873               	movf	___aldiv@divisor+3,w
  9822  0A6D  0277               	subwf	___aldiv@dividend+3,w
  9823  0A6E  1D03               	skipz
  9824  0A6F  2A7A               	goto	u3125
  9825  0A70  0872               	movf	___aldiv@divisor+2,w
  9826  0A71  0276               	subwf	___aldiv@dividend+2,w
  9827  0A72  1D03               	skipz
  9828  0A73  2A7A               	goto	u3125
  9829  0A74  0871               	movf	___aldiv@divisor+1,w
  9830  0A75  0275               	subwf	___aldiv@dividend+1,w
  9831  0A76  1D03               	skipz
  9832  0A77  2A7A               	goto	u3125
  9833  0A78  0870               	movf	___aldiv@divisor,w
  9834  0A79  0274               	subwf	___aldiv@dividend,w
  9835  0A7A                     u3125:	
  9836  0A7A  1C03               	skipc
  9837  0A7B  2A85               	goto	l2855
  9838  0A7C  0870               	movf	___aldiv@divisor,w
  9839  0A7D  02F4               	subwf	___aldiv@dividend,f
  9840  0A7E  0871               	movf	___aldiv@divisor+1,w
  9841  0A7F  3BF5               	subwfb	___aldiv@dividend+1,f
  9842  0A80  0872               	movf	___aldiv@divisor+2,w
  9843  0A81  3BF6               	subwfb	___aldiv@dividend+2,f
  9844  0A82  0873               	movf	___aldiv@divisor+3,w
  9845  0A83  3BF7               	subwfb	___aldiv@dividend+3,f
  9846  0A84  1422               	bsf	___aldiv@quotient,0
  9847  0A85                     l2855:	
  9848  0A85  3001               	movlw	1
  9849  0A86                     u3135:	
  9850  0A86  36F3               	lsrf	___aldiv@divisor+3,f
  9851  0A87  0CF2               	rrf	___aldiv@divisor+2,f
  9852  0A88  0CF1               	rrf	___aldiv@divisor+1,f
  9853  0A89  0CF0               	rrf	___aldiv@divisor,f
  9854  0A8A  0B89               	decfsz	9,f
  9855  0A8B  2A86               	goto	u3135
  9856  0A8C  3001               	movlw	1
  9857  0A8D  02A0               	subwf	___aldiv@counter,f
  9858  0A8E  1D03               	btfss	3,2
  9859  0A8F  2A65               	goto	l2847
  9860  0A90                     l2859:	
  9861  0A90  0821               	movf	___aldiv@sign,w
  9862  0A91  1903               	btfsc	3,2
  9863  0A92  2A9E               	goto	l2863
  9864  0A93  09A2               	comf	___aldiv@quotient,f
  9865  0A94  09A3               	comf	___aldiv@quotient+1,f
  9866  0A95  09A4               	comf	___aldiv@quotient+2,f
  9867  0A96  09A5               	comf	___aldiv@quotient+3,f
  9868  0A97  0AA2               	incf	___aldiv@quotient,f
  9869  0A98  1903               	skipnz
  9870  0A99  0AA3               	incf	___aldiv@quotient+1,f
  9871  0A9A  1903               	skipnz
  9872  0A9B  0AA4               	incf	___aldiv@quotient+2,f
  9873  0A9C  1903               	skipnz
  9874  0A9D  0AA5               	incf	___aldiv@quotient+3,f
  9875  0A9E                     l2863:	
  9876  0A9E  0825               	movf	___aldiv@quotient+3,w
  9877  0A9F  00F3               	movwf	?___aldiv+3
  9878  0AA0  0824               	movf	___aldiv@quotient+2,w
  9879  0AA1  00F2               	movwf	?___aldiv+2
  9880  0AA2  0823               	movf	___aldiv@quotient+1,w
  9881  0AA3  00F1               	movwf	?___aldiv+1
  9882  0AA4  0822               	movf	___aldiv@quotient,w
  9883  0AA5  00F0               	movwf	?___aldiv
  9884  0AA6  0008               	return
  9885  0AA7                     __end_of___aldiv:	
  9886                           
  9887                           	psect	text16
  9888  1638                     __ptext16:	
  9889 ;; *************** function _ADCRead *****************
  9890 ;; Defined at:
  9891 ;;		line 16 in file "adc.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;  channel         1    wreg     enum E14259
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  channel         1    3[COMMON] enum E14259
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  2    0[COMMON] unsigned int 
  9898 ;; Registers used:
  9899 ;;		wreg
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9905 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9909 ;;Total ram usage:        4 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; This function calls:
  9912 ;;		Nothing
  9913 ;; This function is called by:
  9914 ;;		_readAnalog
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           
  9919                           ;psect for function _ADCRead
  9920  1638                     _ADCRead:	
  9921                           
  9922                           ;incstack = 0
  9923                           ; Regs used in _ADCRead: [wreg]
  9924                           ;ADCRead@channel stored from wreg
  9925  1638  00F3               	movwf	ADCRead@channel
  9926                           
  9927                           ;adc.c: 18: ADPCH = channel_VSS;
  9928  1639  303C               	movlw	60
  9929  163A  0021               	movlb	1	; select bank1
  9930  163B  009E               	movwf	30	;volatile
  9931                           
  9932                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9933  163C  1793               	bsf	19,7	;volatile
  9934                           
  9935                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9936  163D  1313               	bcf	19,6	;volatile
  9937                           
  9938                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9939  163E  1413               	bsf	19,0	;volatile
  9940  163F                     l55:	
  9941                           ;adc.c: 27: {
  9942                           
  9943                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9944                           
  9945  163F  1813               	btfsc	19,0	;volatile
  9946  1640  2E3F               	goto	l55
  9947                           
  9948                           ;adc.c: 28: }
  9949                           ;adc.c: 30: ADPCH = channel;
  9950  1641  0873               	movf	ADCRead@channel,w
  9951  1642  009E               	movwf	30	;volatile
  9952                           
  9953                           ;adc.c: 32: ADCON0bits.ADON = 1;
  9954  1643  1793               	bsf	19,7	;volatile
  9955                           
  9956                           ;adc.c: 34: ADCON0bits.ADCONT = 0;
  9957  1644  1313               	bcf	19,6	;volatile
  9958                           
  9959                           ;adc.c: 36: ADCON0bits.ADGO = 1;
  9960  1645  1413               	bsf	19,0	;volatile
  9961  1646                     l58:	
  9962                           ;adc.c: 39: {
  9963                           
  9964                           ;adc.c: 38: while(ADCON0bits.ADGO)
  9965                           
  9966  1646  1813               	btfsc	19,0	;volatile
  9967  1647  2E46               	goto	l58
  9968                           
  9969                           ;adc.c: 40: }
  9970                           ;adc.c: 42: return (adc_result_t)((ADRESH<<8)+ADRESL);
  9971  1648  080D               	movf	13,w	;volatile
  9972  1649  00F1               	movwf	?_ADCRead+1
  9973  164A  080C               	movf	12,w	;volatile
  9974  164B  00F0               	movwf	?_ADCRead
  9975  164C  0008               	return
  9976  164D                     __end_of_ADCRead:	
  9977                           
  9978                           	psect	text17
  9979  0330                     __ptext17:	
  9980 ;; *************** function _menuChoice *****************
  9981 ;; Defined at:
  9982 ;;		line 56 in file "menu.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;		None
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;		None
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  1    wreg      void 
  9989 ;; Registers used:
  9990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9998 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9999 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;Total ram usage:        4 bytes
 10001 ;; Hardware stack levels used:    1
 10002 ;; Hardware stack levels required when called:    3
 10003 ;; This function calls:
 10004 ;;		_LCD_Clear
 10005 ;;		_LCD_Set_Cursor
 10006 ;;		_LCD_Write_Char
 10007 ;;		_LCD_Write_Int
 10008 ;;		_LCD_Write_String
 10009 ;;		_PWM7_LoadDutyValue
 10010 ;;		_readKey
 10011 ;; This function is called by:
 10012 ;;		_main
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           
 10017                           ;psect for function _menuChoice
 10018  0330                     _menuChoice:	
 10019  0330                     l3011:	
 10020                           ;menu.c: 58: while(RB2 != 1)
 10021                           
 10022                           ;incstack = 0
 10023                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10024                           
 10025  0330  0020               	movlb	0	; select bank0
 10026  0331  190D               	btfsc	13,2	;volatile
 10027  0332  2B89               	goto	l3013
 10028                           
 10029                           ;menu.c: 59: {
 10030                           ;menu.c: 60: choice = readKey();
 10031  0333  3196  2610  3183   	fcall	_readKey
 10032  0336  0020               	movlb	0	; select bank0
 10033  0337  00AB               	movwf	??_menuChoice
 10034  0338  082B               	movf	??_menuChoice,w
 10035  0339  00EC               	movwf	_choice
 10036                           
 10037                           ;menu.c: 62: if(timer > 4000)
 10038  033A  0021               	movlb	1	; select bank1
 10039  033B  085A               	movf	(_timer+1)^(0+128),w
 10040  033C  3A80               	xorlw	128
 10041  033D  0020               	movlb	0	; select bank0
 10042  033E  00AB               	movwf	??_menuChoice
 10043  033F  308F               	movlw	143
 10044  0340  022B               	subwf	??_menuChoice,w
 10045  0341  1D03               	skipz
 10046  0342  2B46               	goto	u3455
 10047  0343  30A1               	movlw	161
 10048  0344  0021               	movlb	1	; select bank1
 10049  0345  0259               	subwf	_timer^(0+128),w
 10050  0346                     u3455:	
 10051  0346  1C03               	skipc
 10052  0347  2B4C               	goto	l2989
 10053                           
 10054                           ;menu.c: 63: {
 10055                           ;menu.c: 64: timer = 0;
 10056  0348  0021               	movlb	1	; select bank1
 10057  0349  01D9               	clrf	_timer^(0+128)
 10058  034A  01DA               	clrf	(_timer+1)^(0+128)
 10059                           
 10060                           ;menu.c: 65: goto Exit;
 10061  034B  2D55               	goto	l3121
 10062  034C                     l2989:	
 10063                           
 10064                           ;menu.c: 66: }
 10065                           ;menu.c: 68: if(timer2>125){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}
      +                          else { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
 10066  034C  307E               	movlw	126
 10067  034D  0021               	movlb	1	; select bank1
 10068  034E  0260               	subwf	_timer2^(0+128),w
 10069  034F  1C03               	skipc
 10070  0350  2B5A               	goto	l2995
 10071  0351  01F3               	clrf	LCD_Set_Cursor@y
 10072  0352  3000               	movlw	0
 10073  0353  3188  203A  3183   	fcall	_LCD_Set_Cursor
 10074  0356  305F               	movlw	low (STR_3| (0+32768))
 10075  0357  00F5               	movwf	LCD_Write_String@a
 10076  0358  3098               	movlw	high (STR_3| (0+32768))
 10077  0359  2B62               	goto	L3
 10078  035A                     l2995:	
 10079  035A  01F3               	clrf	LCD_Set_Cursor@y
 10080  035B  3000               	movlw	0
 10081  035C  3188  203A  3183   	fcall	_LCD_Set_Cursor
 10082  035F  304E               	movlw	low (STR_4| (0+32768))
 10083  0360  00F5               	movwf	LCD_Write_String@a
 10084  0361  3098               	movlw	high (STR_4| (0+32768))
 10085  0362                     L3:	
 10086  0362  00F6               	movwf	LCD_Write_String@a+1
 10087  0363  3196  26AB  3183   	fcall	_LCD_Write_String
 10088                           
 10089                           ;menu.c: 70: { LCD_Set_Cursor(0,1); LCD_Write_String(desc[choice]);};
 10090  0366  01F3               	clrf	LCD_Set_Cursor@y
 10091  0367  0AF3               	incf	LCD_Set_Cursor@y,f
 10092  0368  3000               	movlw	0
 10093  0369  3188  203A  3183   	fcall	_LCD_Set_Cursor
 10094  036C  0020               	movlb	0	; select bank0
 10095  036D  356C               	lslf	_choice,w
 10096  036E  3E4D               	addlw	(low (_desc| (0+256)))& (0+255)
 10097  036F  0086               	movwf	6
 10098  0370  3001               	movlw	1	; select bank2/3
 10099  0371  0087               	movwf	7
 10100  0372  3F40               	moviw [0]fsr1
 10101  0373  00F5               	movwf	LCD_Write_String@a
 10102  0374  3F41               	moviw [1]fsr1
 10103  0375  00F6               	movwf	LCD_Write_String@a+1
 10104  0376  3196  26AB  3183   	fcall	_LCD_Write_String
 10105                           
 10106                           ;menu.c: 72: if(timer2>249)timer2=0;
 10107  0379  30FA               	movlw	250
 10108  037A  0021               	movlb	1	; select bank1
 10109  037B  0260               	subwf	_timer2^(0+128),w
 10110  037C  1803               	btfsc	3,0
 10111  037D  01E0               	clrf	_timer2^(0+128)
 10112                           
 10113                           ;menu.c: 74: timer+=1;
 10114  037E  3001               	movlw	1
 10115  037F  07D9               	addwf	_timer^(0+128),f
 10116  0380  3000               	movlw	0
 10117  0381  3DDA               	addwfc	(_timer+1)^(0+128),f
 10118                           
 10119                           ;menu.c: 75: timer2+=1;
 10120  0382  3001               	movlw	1
 10121  0383  0020               	movlb	0	; select bank0
 10122  0384  00AB               	movwf	??_menuChoice
 10123  0385  082B               	movf	??_menuChoice,w
 10124  0386  0021               	movlb	1	; select bank1
 10125  0387  07E0               	addwf	_timer2^(0+128),f
 10126  0388  2B30               	goto	l3011
 10127  0389                     l3013:	
 10128                           
 10129                           ;menu.c: 76: }
 10130                           ;menu.c: 77: timer=0;
 10131  0389  0021               	movlb	1	; select bank1
 10132  038A  01D9               	clrf	_timer^(0+128)
 10133  038B  01DA               	clrf	(_timer+1)^(0+128)
 10134                           
 10135                           ;menu.c: 78: timer2=0;
 10136  038C  01E0               	clrf	_timer2^(0+128)
 10137                           
 10138                           ;menu.c: 80: _delay((unsigned long)((1000)*(32000000/4000.0)));
 10139  038D  3029               	movlw	41
 10140  038E  0020               	movlb	0	; select bank0
 10141  038F  00AC               	movwf	??_menuChoice+1
 10142  0390  3096               	movlw	150
 10143  0391  00AB               	movwf	??_menuChoice
 10144  0392  307F               	movlw	127
 10145  0393                     u3967:	
 10146  0393  0B89               	decfsz	9,f
 10147  0394  2B93               	goto	u3967
 10148  0395  0BAB               	decfsz	??_menuChoice,f
 10149  0396  2B93               	goto	u3967
 10150  0397  0BAC               	decfsz	??_menuChoice+1,f
 10151  0398  2B93               	goto	u3967
 10152                           
 10153                           ;menu.c: 82: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1, 
      +                          0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10154  0399  0020               	movlb	0	; select bank0
 10155  039A  086C               	movf	_choice,w
 10156  039B  1D03               	btfss	3,2
 10157  039C  2BB3               	goto	l3023
 10158  039D  01F3               	clrf	LCD_Set_Cursor@y
 10159  039E  0AF3               	incf	LCD_Set_Cursor@y,f
 10160  039F  300A               	movlw	10
 10161  03A0  3188  203A  3183   	fcall	_LCD_Set_Cursor
 10162  03A3  0020               	movlb	0	; select bank0
 10163  03A4  356C               	lslf	_choice,w
 10164  03A5  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10165  03A6  0086               	movwf	6
 10166  03A7  0187               	clrf	7
 10167  03A8  3F40               	moviw [0]fsr1
 10168  03A9  00F9               	movwf	LCD_Write_Int@value
 10169  03AA  3F41               	moviw [1]fsr1
 10170  03AB  00FA               	movwf	LCD_Write_Int@value+1
 10171  03AC  30FF               	movlw	255
 10172  03AD  00AB               	movwf	??_menuChoice
 10173  03AE  082B               	movf	??_menuChoice,w
 10174  03AF  00FB               	movwf	LCD_Write_Int@fieldLength
 10175  03B0  01FC               	clrf	LCD_Write_Int@numPlaces
 10176  03B1  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10177  03B2  2BC7               	goto	L4
 10178  03B3                     l3023:	
 10179  03B3  01F3               	clrf	LCD_Set_Cursor@y
 10180  03B4  0AF3               	incf	LCD_Set_Cursor@y,f
 10181  03B5  300A               	movlw	10
 10182  03B6  3188  203A  3183   	fcall	_LCD_Set_Cursor
 10183  03B9  0020               	movlb	0	; select bank0
 10184  03BA  356C               	lslf	_choice,w
 10185  03BB  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10186  03BC  0086               	movwf	6
 10187  03BD  0187               	clrf	7
 10188  03BE  3F40               	moviw [0]fsr1
 10189  03BF  00F9               	movwf	LCD_Write_Int@value
 10190  03C0  3F41               	moviw [1]fsr1
 10191  03C1  00FA               	movwf	LCD_Write_Int@value+1
 10192  03C2  30FF               	movlw	255
 10193  03C3  00AB               	movwf	??_menuChoice
 10194  03C4  082B               	movf	??_menuChoice,w
 10195  03C5  00FB               	movwf	LCD_Write_Int@fieldLength
 10196  03C6  01FC               	clrf	LCD_Write_Int@numPlaces
 10197  03C7                     L4:	
 10198  03C7  01FD               	clrf	LCD_Write_Int@sign
 10199  03C8  318C  2486  3183   	fcall	_LCD_Write_Int
 10200                           
 10201                           ;menu.c: 84: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10202  03CB  3052               	movlw	82
 10203  03CC  0020               	movlb	0	; select bank0
 10204  03CD  00AC               	movwf	??_menuChoice+1
 10205  03CE  302B               	movlw	43
 10206  03CF  00AB               	movwf	??_menuChoice
 10207  03D0  3000               	movlw	0
 10208  03D1                     u3977:	
 10209  03D1  0B89               	decfsz	9,f
 10210  03D2  2BD1               	goto	u3977
 10211  03D3  0BAB               	decfsz	??_menuChoice,f
 10212  03D4  2BD1               	goto	u3977
 10213  03D5  0BAC               	decfsz	??_menuChoice+1,f
 10214  03D6  2BD1               	goto	u3977
 10215  03D7  0000               	nop
 10216                           
 10217                           ;menu.c: 86: while(RB2 != 1)
 10218  03D8  2D28               	goto	l3119
 10219  03D9                     l3039:	
 10220                           ;menu.c: 93: goto Exit;
 10221                           
 10222                           
 10223                           ;menu.c: 94: }
 10224                           ;menu.c: 95: _delay((unsigned long)((2)*(32000000/4000.0)));
 10225  03D9  3015               	movlw	21
 10226  03DA  0020               	movlb	0	; select bank0
 10227  03DB  00AB               	movwf	??_menuChoice
 10228  03DC  30C6               	movlw	198
 10229  03DD                     u3997:	
 10230  03DD  0B89               	decfsz	9,f
 10231  03DE  2BDD               	goto	u3997
 10232  03DF  0BAB               	decfsz	??_menuChoice,f
 10233  03E0  2BDD               	goto	u3997
 10234  03E1  0000               	nop
 10235                           
 10236                           ;menu.c: 96: timer+=1;
 10237  03E2  3001               	movlw	1
 10238  03E3  0021               	movlb	1	; select bank1
 10239  03E4  07D9               	addwf	_timer^(0+128),f
 10240  03E5  3000               	movlw	0
 10241  03E6  3DDA               	addwfc	(_timer+1)^(0+128),f
 10242                           
 10243                           ;menu.c: 98: if(RB0)
 10244  03E7  0020               	movlb	0	; select bank0
 10245  03E8  1C0D               	btfss	13,0	;volatile
 10246  03E9  2C75               	goto	l3073
 10247                           
 10248                           ;menu.c: 99: {
 10249                           ;menu.c: 100: delayCount+=2;
 10250  03EA  3002               	movlw	2
 10251  03EB  00AB               	movwf	??_menuChoice
 10252  03EC  082B               	movf	??_menuChoice,w
 10253  03ED  07EE               	addwf	_delayCount,f
 10254                           
 10255                           ;menu.c: 102: setpoint[choice]+=1;
 10256  03EE  356C               	lslf	_choice,w
 10257  03EF  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10258  03F0  0086               	movwf	6
 10259  03F1  0187               	clrf	7
 10260  03F2  3001               	movlw	1
 10261  03F3  0781               	addwf	1,f
 10262  03F4  3141               	addfsr 1,1
 10263  03F5  1803               	skipnc
 10264  03F6  0A81               	incf	1,f
 10265                           
 10266                           ;menu.c: 103: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[cho
      +                          ice];
 10267  03F7  356C               	lslf	_choice,w
 10268  03F8  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10269  03F9  0086               	movwf	6
 10270  03FA  0187               	clrf	7
 10271  03FB  3F40               	moviw [0]fsr1
 10272  03FC  00AB               	movwf	??_menuChoice
 10273  03FD  3F41               	moviw [1]fsr1
 10274  03FE  00AC               	movwf	??_menuChoice+1
 10275  03FF  356C               	lslf	_choice,w
 10276  0400  3E51               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10277  0401  0086               	movwf	6
 10278  0402  3001               	movlw	1	; select bank2/3
 10279  0403  0087               	movwf	7
 10280  0404  3F40               	moviw [0]fsr1
 10281  0405  00AD               	movwf	??_menuChoice+2
 10282  0406  3F41               	moviw [1]fsr1
 10283  0407  00AE               	movwf	??_menuChoice+3
 10284  0408  082C               	movf	??_menuChoice+1,w
 10285  0409  022E               	subwf	??_menuChoice+3,w
 10286  040A  1D03               	skipz
 10287  040B  2C0E               	goto	u3525
 10288  040C  082B               	movf	??_menuChoice,w
 10289  040D  022D               	subwf	??_menuChoice+2,w
 10290  040E                     u3525:	
 10291  040E  1803               	skipnc
 10292  040F  2C1D               	goto	l3051
 10293  0410  356C               	lslf	_choice,w
 10294  0411  3E51               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10295  0412  0086               	movwf	6
 10296  0413  3001               	movlw	1	; select bank2/3
 10297  0414  0087               	movwf	7
 10298  0415  356C               	lslf	_choice,w
 10299  0416  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10300  0417  0084               	movwf	4
 10301  0418  0185               	clrf	5
 10302  0419  3F40               	moviw [0]fsr1
 10303  041A  3F80               	movwi [0]fsr0
 10304  041B  3F41               	moviw [1]fsr1
 10305  041C  3F81               	movwi [1]fsr0
 10306  041D                     l3051:	
 10307                           
 10308                           ;menu.c: 104: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10309  041D  086C               	movf	_choice,w
 10310  041E  1D03               	btfss	3,2
 10311  041F  2C36               	goto	l3057
 10312  0420  01F3               	clrf	LCD_Set_Cursor@y
 10313  0421  0AF3               	incf	LCD_Set_Cursor@y,f
 10314  0422  300A               	movlw	10
 10315  0423  3188  203A  3183   	fcall	_LCD_Set_Cursor
 10316  0426  0020               	movlb	0	; select bank0
 10317  0427  356C               	lslf	_choice,w
 10318  0428  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10319  0429  0086               	movwf	6
 10320  042A  0187               	clrf	7
 10321  042B  3F40               	moviw [0]fsr1
 10322  042C  00F9               	movwf	LCD_Write_Int@value
 10323  042D  3F41               	moviw [1]fsr1
 10324  042E  00FA               	movwf	LCD_Write_Int@value+1
 10325  042F  30FF               	movlw	255
 10326  0430  00AB               	movwf	??_menuChoice
 10327  0431  082B               	movf	??_menuChoice,w
 10328  0432  00FB               	movwf	LCD_Write_Int@fieldLength
 10329  0433  01FC               	clrf	LCD_Write_Int@numPlaces
 10330  0434  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10331  0435  2C4A               	goto	L5
 10332  0436                     l3057:	
 10333  0436  01F3               	clrf	LCD_Set_Cursor@y
 10334  0437  0AF3               	incf	LCD_Set_Cursor@y,f
 10335  0438  300A               	movlw	10
 10336  0439  3188  203A  3183   	fcall	_LCD_Set_Cursor
 10337  043C  0020               	movlb	0	; select bank0
 10338  043D  356C               	lslf	_choice,w
 10339  043E  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10340  043F  0086               	movwf	6
 10341  0440  0187               	clrf	7
 10342  0441  3F40               	moviw [0]fsr1
 10343  0442  00F9               	movwf	LCD_Write_Int@value
 10344  0443  3F41               	moviw [1]fsr1
 10345  0444  00FA               	movwf	LCD_Write_Int@value+1
 10346  0445  30FF               	movlw	255
 10347  0446  00AB               	movwf	??_menuChoice
 10348  0447  082B               	movf	??_menuChoice,w
 10349  0448  00FB               	movwf	LCD_Write_Int@fieldLength
 10350  0449  01FC               	clrf	LCD_Write_Int@numPlaces
 10351  044A                     L5:	
 10352  044A  01FD               	clrf	LCD_Write_Int@sign
 10353  044B  318C  2486  3183   	fcall	_LCD_Write_Int
 10354                           
 10355                           ;menu.c: 105: LCD_Write_Char(' ');
 10356  044E  3020               	movlw	32
 10357  044F  3197  2760  3183   	fcall	_LCD_Write_Char
 10358                           
 10359                           ;menu.c: 106: menuDelay=1255;
 10360  0452  30E7               	movlw	231
 10361  0453  0021               	movlb	1	; select bank1
 10362  0454  00DB               	movwf	_menuDelay^(0+128)
 10363  0455  3004               	movlw	4
 10364  0456  00DC               	movwf	(_menuDelay^(0+128)+1)
 10365                           
 10366                           ;menu.c: 107: if(delayCount<30)
 10367  0457  301E               	movlw	30
 10368  0458  0020               	movlb	0	; select bank0
 10369  0459  026E               	subwf	_delayCount,w
 10370  045A  1803               	skipnc
 10371  045B  2C69               	goto	l221
 10372                           
 10373                           ;menu.c: 108: {
 10374                           ;menu.c: 109: _delay((unsigned long)((150)*(32000000/4000.0)));
 10375  045C  3007               	movlw	7
 10376  045D  0020               	movlb	0	; select bank0
 10377  045E  00AC               	movwf	??_menuChoice+1
 10378  045F  3017               	movlw	23
 10379  0460  00AB               	movwf	??_menuChoice
 10380  0461  306A               	movlw	106
 10381  0462                     u4007:	
 10382  0462  0B89               	decfsz	9,f
 10383  0463  2C62               	goto	u4007
 10384  0464  0BAB               	decfsz	??_menuChoice,f
 10385  0465  2C62               	goto	u4007
 10386  0466  0BAC               	decfsz	??_menuChoice+1,f
 10387  0467  2C62               	goto	u4007
 10388  0468  0000               	nop
 10389  0469                     l221:	
 10390                           
 10391                           ;menu.c: 110: }
 10392                           ;menu.c: 111: if(delayCount>(30+10))delayCount=(30+10);
 10393  0469  3029               	movlw	41
 10394  046A  0020               	movlb	0	; select bank0
 10395  046B  026E               	subwf	_delayCount,w
 10396  046C  1C03               	skipc
 10397  046D  2C72               	goto	l3071
 10398  046E  3028               	movlw	40
 10399  046F  00AB               	movwf	??_menuChoice
 10400  0470  082B               	movf	??_menuChoice,w
 10401  0471  00EE               	movwf	_delayCount
 10402  0472                     l3071:	
 10403                           
 10404                           ;menu.c: 113: timer=0;
 10405  0472  0021               	movlb	1	; select bank1
 10406  0473  01D9               	clrf	_timer^(0+128)
 10407  0474  01DA               	clrf	(_timer+1)^(0+128)
 10408  0475                     l3073:	
 10409                           
 10410                           ;menu.c: 114: }
 10411                           ;menu.c: 117: if(RB1)
 10412  0475  0020               	movlb	0	; select bank0
 10413  0476  1C8D               	btfss	13,1	;volatile
 10414  0477  2D04               	goto	l3105
 10415                           
 10416                           ;menu.c: 118: {
 10417                           ;menu.c: 119: delayCount+=2;
 10418  0478  3002               	movlw	2
 10419  0479  00AB               	movwf	??_menuChoice
 10420  047A  082B               	movf	??_menuChoice,w
 10421  047B  07EE               	addwf	_delayCount,f
 10422                           
 10423                           ;menu.c: 120: setpoint[choice]-=1;
 10424  047C  356C               	lslf	_choice,w
 10425  047D  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10426  047E  0086               	movwf	6
 10427  047F  0187               	clrf	7
 10428  0480  3001               	movlw	1
 10429  0481  0281               	subwf	1,f
 10430  0482  3141               	addfsr 1,1
 10431  0483  3000               	movlw	0
 10432  0484  3B81               	subwfb	1,f
 10433  0485  317F               	addfsr 1,-1
 10434                           
 10435                           ;menu.c: 121: if(setpoint[choice]<=lowRangeSet[choice])setpoint[choice]=lowRangeSet[choi
      +                          ce];
 10436  0486  356C               	lslf	_choice,w
 10437  0487  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10438  0488  0086               	movwf	6
 10439  0489  0187               	clrf	7
 10440  048A  3F40               	moviw [0]fsr1
 10441  048B  00AB               	movwf	??_menuChoice
 10442  048C  3F41               	moviw [1]fsr1
 10443  048D  00AC               	movwf	??_menuChoice+1
 10444  048E  356C               	lslf	_choice,w
 10445  048F  3E55               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10446  0490  0086               	movwf	6
 10447  0491  3001               	movlw	1	; select bank2/3
 10448  0492  0087               	movwf	7
 10449  0493  3F40               	moviw [0]fsr1
 10450  0494  00AD               	movwf	??_menuChoice+2
 10451  0495  3F41               	moviw [1]fsr1
 10452  0496  00AE               	movwf	??_menuChoice+3
 10453  0497  082C               	movf	??_menuChoice+1,w
 10454  0498  022E               	subwf	??_menuChoice+3,w
 10455  0499  1D03               	skipz
 10456  049A  2C9D               	goto	u3575
 10457  049B  082B               	movf	??_menuChoice,w
 10458  049C  022D               	subwf	??_menuChoice+2,w
 10459  049D                     u3575:	
 10460  049D  1C03               	skipc
 10461  049E  2CAC               	goto	l3083
 10462  049F  356C               	lslf	_choice,w
 10463  04A0  3E55               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10464  04A1  0086               	movwf	6
 10465  04A2  3001               	movlw	1	; select bank2/3
 10466  04A3  0087               	movwf	7
 10467  04A4  356C               	lslf	_choice,w
 10468  04A5  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10469  04A6  0084               	movwf	4
 10470  04A7  0185               	clrf	5
 10471  04A8  3F40               	moviw [0]fsr1
 10472  04A9  3F80               	movwi [0]fsr0
 10473  04AA  3F41               	moviw [1]fsr1
 10474  04AB  3F81               	movwi [1]fsr0
 10475  04AC                     l3083:	
 10476                           
 10477                           ;menu.c: 122: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10478  04AC  086C               	movf	_choice,w
 10479  04AD  1D03               	btfss	3,2
 10480  04AE  2CC5               	goto	l3089
 10481  04AF  01F3               	clrf	LCD_Set_Cursor@y
 10482  04B0  0AF3               	incf	LCD_Set_Cursor@y,f
 10483  04B1  300A               	movlw	10
 10484  04B2  3188  203A  3183   	fcall	_LCD_Set_Cursor
 10485  04B5  0020               	movlb	0	; select bank0
 10486  04B6  356C               	lslf	_choice,w
 10487  04B7  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10488  04B8  0086               	movwf	6
 10489  04B9  0187               	clrf	7
 10490  04BA  3F40               	moviw [0]fsr1
 10491  04BB  00F9               	movwf	LCD_Write_Int@value
 10492  04BC  3F41               	moviw [1]fsr1
 10493  04BD  00FA               	movwf	LCD_Write_Int@value+1
 10494  04BE  30FF               	movlw	255
 10495  04BF  00AB               	movwf	??_menuChoice
 10496  04C0  082B               	movf	??_menuChoice,w
 10497  04C1  00FB               	movwf	LCD_Write_Int@fieldLength
 10498  04C2  01FC               	clrf	LCD_Write_Int@numPlaces
 10499  04C3  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10500  04C4  2CD9               	goto	L6
 10501  04C5                     l3089:	
 10502  04C5  01F3               	clrf	LCD_Set_Cursor@y
 10503  04C6  0AF3               	incf	LCD_Set_Cursor@y,f
 10504  04C7  300A               	movlw	10
 10505  04C8  3188  203A  3183   	fcall	_LCD_Set_Cursor
 10506  04CB  0020               	movlb	0	; select bank0
 10507  04CC  356C               	lslf	_choice,w
 10508  04CD  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10509  04CE  0086               	movwf	6
 10510  04CF  0187               	clrf	7
 10511  04D0  3F40               	moviw [0]fsr1
 10512  04D1  00F9               	movwf	LCD_Write_Int@value
 10513  04D2  3F41               	moviw [1]fsr1
 10514  04D3  00FA               	movwf	LCD_Write_Int@value+1
 10515  04D4  30FF               	movlw	255
 10516  04D5  00AB               	movwf	??_menuChoice
 10517  04D6  082B               	movf	??_menuChoice,w
 10518  04D7  00FB               	movwf	LCD_Write_Int@fieldLength
 10519  04D8  01FC               	clrf	LCD_Write_Int@numPlaces
 10520  04D9                     L6:	
 10521  04D9  01FD               	clrf	LCD_Write_Int@sign
 10522  04DA  318C  2486  3183   	fcall	_LCD_Write_Int
 10523                           
 10524                           ;menu.c: 123: LCD_Write_Char(' ');
 10525  04DD  3020               	movlw	32
 10526  04DE  3197  2760  3183   	fcall	_LCD_Write_Char
 10527                           
 10528                           ;menu.c: 124: menuDelay=1255;
 10529  04E1  30E7               	movlw	231
 10530  04E2  0021               	movlb	1	; select bank1
 10531  04E3  00DB               	movwf	_menuDelay^(0+128)
 10532  04E4  3004               	movlw	4
 10533  04E5  00DC               	movwf	(_menuDelay^(0+128)+1)
 10534                           
 10535                           ;menu.c: 126: if(delayCount<30)
 10536  04E6  301E               	movlw	30
 10537  04E7  0020               	movlb	0	; select bank0
 10538  04E8  026E               	subwf	_delayCount,w
 10539  04E9  1803               	skipnc
 10540  04EA  2CF8               	goto	l227
 10541                           
 10542                           ;menu.c: 127: {
 10543                           ;menu.c: 128: _delay((unsigned long)((150)*(32000000/4000.0)));
 10544  04EB  3007               	movlw	7
 10545  04EC  0020               	movlb	0	; select bank0
 10546  04ED  00AC               	movwf	??_menuChoice+1
 10547  04EE  3017               	movlw	23
 10548  04EF  00AB               	movwf	??_menuChoice
 10549  04F0  306A               	movlw	106
 10550  04F1                     u4017:	
 10551  04F1  0B89               	decfsz	9,f
 10552  04F2  2CF1               	goto	u4017
 10553  04F3  0BAB               	decfsz	??_menuChoice,f
 10554  04F4  2CF1               	goto	u4017
 10555  04F5  0BAC               	decfsz	??_menuChoice+1,f
 10556  04F6  2CF1               	goto	u4017
 10557  04F7  0000               	nop
 10558  04F8                     l227:	
 10559                           
 10560                           ;menu.c: 129: }
 10561                           ;menu.c: 131: if(delayCount>(30+10))delayCount=(30+10);
 10562  04F8  3029               	movlw	41
 10563  04F9  0020               	movlb	0	; select bank0
 10564  04FA  026E               	subwf	_delayCount,w
 10565  04FB  1C03               	skipc
 10566  04FC  2D01               	goto	l3103
 10567  04FD  3028               	movlw	40
 10568  04FE  00AB               	movwf	??_menuChoice
 10569  04FF  082B               	movf	??_menuChoice,w
 10570  0500  00EE               	movwf	_delayCount
 10571  0501                     l3103:	
 10572                           
 10573                           ;menu.c: 133: timer=0;
 10574  0501  0021               	movlb	1	; select bank1
 10575  0502  01D9               	clrf	_timer^(0+128)
 10576  0503  01DA               	clrf	(_timer+1)^(0+128)
 10577  0504                     l3105:	
 10578                           
 10579                           ;menu.c: 134: }
 10580                           ;menu.c: 136: PWM7_LoadDutyValue(setpoint[1]);
 10581  0504  0021               	movlb	1	; select bank1
 10582  0505  0865               	movf	((_setpoint+1)^(0+128)+2),w
 10583  0506  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
 10584  0507  0864               	movf	(_setpoint^(0+128)+2),w
 10585  0508  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
 10586  0509  3196  2663  3183   	fcall	_PWM7_LoadDutyValue
 10587                           
 10588                           ;menu.c: 139: if(delayCount>0)delayCount-=1;
 10589  050C  0020               	movlb	0	; select bank0
 10590  050D  086E               	movf	_delayCount,w
 10591  050E  1903               	btfsc	3,2
 10592  050F  2D12               	goto	l3111
 10593  0510  3001               	movlw	1
 10594  0511  02EE               	subwf	_delayCount,f
 10595  0512                     l3111:	
 10596                           
 10597                           ;menu.c: 141: if(!(RB1 || RB0))
 10598  0512  1C8D               	btfss	13,1	;volatile
 10599  0513  180D               	btfsc	13,0	;volatile
 10600  0514  2D28               	goto	l3119
 10601                           
 10602                           ;menu.c: 142: {
 10603                           ;menu.c: 143: if(menuDelay>0)
 10604  0515  0021               	movlb	1	; select bank1
 10605  0516  085C               	movf	(_menuDelay+1)^(0+128),w
 10606  0517  3A80               	xorlw	128
 10607  0518  0020               	movlb	0	; select bank0
 10608  0519  00AB               	movwf	??_menuChoice
 10609  051A  3080               	movlw	128
 10610  051B  022B               	subwf	??_menuChoice,w
 10611  051C  1D03               	skipz
 10612  051D  2D21               	goto	u3645
 10613  051E  3001               	movlw	1
 10614  051F  0021               	movlb	1	; select bank1
 10615  0520  025B               	subwf	_menuDelay^(0+128),w
 10616  0521                     u3645:	
 10617  0521  1C03               	skipc
 10618  0522  2D28               	goto	l3119
 10619                           
 10620                           ;menu.c: 144: {
 10621                           ;menu.c: 145: menuDelay-=1;
 10622  0523  30FF               	movlw	255
 10623  0524  0021               	movlb	1	; select bank1
 10624  0525  07DB               	addwf	_menuDelay^(0+128),f
 10625  0526  30FF               	movlw	255
 10626  0527  3DDC               	addwfc	(_menuDelay+1)^(0+128),f
 10627  0528                     l3119:	
 10628  0528  0020               	movlb	0	; select bank0
 10629  0529  190D               	btfsc	13,2	;volatile
 10630  052A  2D55               	goto	l3121
 10631                           
 10632                           ;menu.c: 87: {
 10633                           ;menu.c: 88: if(timer > 4000)
 10634  052B  0021               	movlb	1	; select bank1
 10635  052C  085A               	movf	(_timer+1)^(0+128),w
 10636  052D  3A80               	xorlw	128
 10637  052E  0020               	movlb	0	; select bank0
 10638  052F  00AB               	movwf	??_menuChoice
 10639  0530  308F               	movlw	143
 10640  0531  022B               	subwf	??_menuChoice,w
 10641  0532  1D03               	skipz
 10642  0533  2D37               	goto	u3505
 10643  0534  30A1               	movlw	161
 10644  0535  0021               	movlb	1	; select bank1
 10645  0536  0259               	subwf	_timer^(0+128),w
 10646  0537                     u3505:	
 10647  0537  1C03               	skipc
 10648  0538  2BD9               	goto	l3039
 10649                           
 10650                           ;menu.c: 89: {
 10651                           ;menu.c: 90: timer = 0;
 10652  0539  0021               	movlb	1	; select bank1
 10653  053A  01D9               	clrf	_timer^(0+128)
 10654  053B  01DA               	clrf	(_timer+1)^(0+128)
 10655                           
 10656                           ;menu.c: 91: { LCD_Set_Cursor(0,0); LCD_Write_String("   Good-Bye!!   ");};
 10657  053C  01F3               	clrf	LCD_Set_Cursor@y
 10658  053D  3000               	movlw	0
 10659  053E  3188  203A  3183   	fcall	_LCD_Set_Cursor
 10660  0541  303D               	movlw	low (STR_5| (0+32768))
 10661  0542  00F5               	movwf	LCD_Write_String@a
 10662  0543  3098               	movlw	high (STR_5| (0+32768))
 10663  0544  00F6               	movwf	LCD_Write_String@a+1
 10664  0545  3196  26AB  3183   	fcall	_LCD_Write_String
 10665                           
 10666                           ;menu.c: 92: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10667  0548  3052               	movlw	82
 10668  0549  0020               	movlb	0	; select bank0
 10669  054A  00AC               	movwf	??_menuChoice+1
 10670  054B  302B               	movlw	43
 10671  054C  00AB               	movwf	??_menuChoice
 10672  054D  3000               	movlw	0
 10673  054E                     u3987:	
 10674  054E  0B89               	decfsz	9,f
 10675  054F  2D4E               	goto	u3987
 10676  0550  0BAB               	decfsz	??_menuChoice,f
 10677  0551  2D4E               	goto	u3987
 10678  0552  0BAC               	decfsz	??_menuChoice+1,f
 10679  0553  2D4E               	goto	u3987
 10680  0554  0000               	nop
 10681  0555                     l3121:	
 10682                           ;menu.c: 146: }
 10683                           ;menu.c: 147: }
 10684                           ;menu.c: 148: }
 10685                           ;menu.c: 149: Exit:
 10686                           
 10687                           
 10688                           ;menu.c: 150: timer=0;
 10689  0555  0021               	movlb	1	; select bank1
 10690  0556  01D9               	clrf	_timer^(0+128)
 10691  0557  01DA               	clrf	(_timer+1)^(0+128)
 10692                           
 10693                           ;menu.c: 151: loop=254;
 10694  0558  30FE               	movlw	254
 10695  0559  0020               	movlb	0	; select bank0
 10696  055A  00AB               	movwf	??_menuChoice
 10697  055B  082B               	movf	??_menuChoice,w
 10698  055C  0021               	movlb	1	; select bank1
 10699  055D  00EE               	movwf	_loop^(0+128)
 10700                           
 10701                           ;menu.c: 152: LCD_Clear();
 10702  055E  3195  25CA         	fcall	_LCD_Clear
 10703  0560  0008               	return
 10704  0561                     __end_of_menuChoice:	
 10705                           
 10706                           	psect	text18
 10707  1610                     __ptext18:	
 10708 ;; *************** function _readKey *****************
 10709 ;; Defined at:
 10710 ;;		line 41 in file "menu.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;		None
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;		None
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  1    wreg      unsigned char 
 10717 ;; Registers used:
 10718 ;;		wreg, status,2, status,0
 10719 ;; Tracked objects:
 10720 ;;		On entry : 0/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;Total ram usage:        1 bytes
 10729 ;; Hardware stack levels used:    1
 10730 ;; This function calls:
 10731 ;;		Nothing
 10732 ;; This function is called by:
 10733 ;;		_menuChoice
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           
 10738                           ;psect for function _readKey
 10739  1610                     _readKey:	
 10740                           
 10741                           ;menu.c: 43: if(RB1)
 10742                           
 10743                           ;incstack = 0
 10744                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10745  1610  0020               	movlb	0	; select bank0
 10746  1611  1C8D               	btfss	13,1	;volatile
 10747  1612  2E18               	goto	l2705
 10748                           
 10749                           ;menu.c: 44: {
 10750                           ;menu.c: 45: if(key>0)key-=1;
 10751  1613  086D               	movf	_key,w
 10752  1614  1903               	btfsc	3,2
 10753  1615  2E18               	goto	l2705
 10754  1616  3001               	movlw	1
 10755  1617  02ED               	subwf	_key,f
 10756  1618                     l2705:	
 10757                           
 10758                           ;menu.c: 46: }
 10759                           ;menu.c: 48: if(RB0)
 10760  1618  1C0D               	btfss	13,0	;volatile
 10761  1619  2E21               	goto	l2711
 10762                           
 10763                           ;menu.c: 49: {
 10764                           ;menu.c: 50: if(key<1)key+=1;
 10765  161A  086D               	movf	_key,w
 10766  161B  1D03               	btfss	3,2
 10767  161C  2E21               	goto	l2711
 10768  161D  3001               	movlw	1
 10769  161E  00F0               	movwf	??_readKey
 10770  161F  0870               	movf	??_readKey,w
 10771  1620  07ED               	addwf	_key,f
 10772  1621                     l2711:	
 10773                           
 10774                           ;menu.c: 51: }
 10775                           ;menu.c: 53: return key;
 10776  1621  086D               	movf	_key,w
 10777  1622  0008               	return
 10778  1623                     __end_of_readKey:	
 10779                           
 10780                           	psect	text19
 10781  1663                     __ptext19:	
 10782 ;; *************** function _PWM7_LoadDutyValue *****************
 10783 ;; Defined at:
 10784 ;;		line 32 in file "pwm.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      void 
 10791 ;; Registers used:
 10792 ;;		wreg, status,2, status,0
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;Total ram usage:        4 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; This function calls:
 10805 ;;		Nothing
 10806 ;; This function is called by:
 10807 ;;		_menuChoice
 10808 ;;		_main
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           
 10813                           ;psect for function _PWM7_LoadDutyValue
 10814  1663                     _PWM7_LoadDutyValue:	
 10815                           
 10816                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10817                           
 10818                           ;incstack = 0
 10819                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10820  1663  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10821  1664  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10822  1665  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10823  1666  00F2               	movwf	??_PWM7_LoadDutyValue
 10824  1667  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10825  1668  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10826  1669  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10827  166A  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10828  166B  0872               	movf	??_PWM7_LoadDutyValue,w
 10829  166C  0027               	movlb	7	; select bank7
 10830  166D  0091               	movwf	17	;volatile
 10831                           
 10832                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10833  166E  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10834  166F  3903               	andlw	3
 10835  1670  00F2               	movwf	??_PWM7_LoadDutyValue
 10836  1671  3005               	movlw	5
 10837  1672                     u2995:	
 10838  1672  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10839  1673  3EFF               	addlw	-1
 10840  1674  1D03               	skipz
 10841  1675  2E72               	goto	u2995
 10842  1676  3572               	lslf	??_PWM7_LoadDutyValue,w
 10843  1677  0090               	movwf	16	;volatile
 10844  1678  0008               	return
 10845  1679                     __end_of_PWM7_LoadDutyValue:	
 10846                           
 10847                           	psect	text20
 10848  16AB                     __ptext20:	
 10849 ;; *************** function _LCD_Write_String *****************
 10850 ;; Defined at:
 10851 ;;		line 240 in file "lcd.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;  a               2    5[COMMON] PTR const unsigned char 
 10854 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 10855 ;;		 -> STR_3(17), STR_2(11), STR_1(11), 
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;  i               2    8[COMMON] int 
 10858 ;; Return value:  Size  Location     Type
 10859 ;;                  1    wreg      void 
 10860 ;; Registers used:
 10861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;Total ram usage:        5 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; Hardware stack levels required when called:    2
 10874 ;; This function calls:
 10875 ;;		_LCD_Write_Char
 10876 ;; This function is called by:
 10877 ;;		_menuChoice
 10878 ;;		_main
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           
 10883                           ;psect for function _LCD_Write_String
 10884  16AB                     _LCD_Write_String:	
 10885                           
 10886                           ;lcd.c: 242: int i;
 10887                           ;lcd.c: 243: for(i=0;a[i]!='\0';i++)
 10888                           
 10889                           ;incstack = 0
 10890                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10891  16AB  01F8               	clrf	LCD_Write_String@i
 10892  16AC  01F9               	clrf	LCD_Write_String@i+1
 10893  16AD                     l2649:	
 10894  16AD  0875               	movf	LCD_Write_String@a,w
 10895  16AE  0778               	addwf	LCD_Write_String@i,w
 10896  16AF  0084               	movwf	4
 10897  16B0  0876               	movf	LCD_Write_String@a+1,w
 10898  16B1  3D79               	addwfc	LCD_Write_String@i+1,w
 10899  16B2  0085               	movwf	5
 10900  16B3  0012               	moviw fsr0++
 10901  16B4  1903               	btfsc	3,2
 10902  16B5  0008               	return
 10903                           
 10904                           ;lcd.c: 244: LCD_Write_Char(a[i]);
 10905  16B6  0875               	movf	LCD_Write_String@a,w
 10906  16B7  0778               	addwf	LCD_Write_String@i,w
 10907  16B8  0084               	movwf	4
 10908  16B9  0876               	movf	LCD_Write_String@a+1,w
 10909  16BA  3D79               	addwfc	LCD_Write_String@i+1,w
 10910  16BB  0085               	movwf	5
 10911  16BC  0800               	movf	0,w	;code access
 10912  16BD  3197  2760  3196   	fcall	_LCD_Write_Char
 10913  16C0  3001               	movlw	1
 10914  16C1  07F8               	addwf	LCD_Write_String@i,f
 10915  16C2  3000               	movlw	0
 10916  16C3  3DF9               	addwfc	LCD_Write_String@i+1,f
 10917  16C4  2EAD               	goto	l2649
 10918  16C5                     __end_of_LCD_Write_String:	
 10919                           
 10920                           	psect	text21
 10921  0C86                     __ptext21:	
 10922 ;; *************** function _LCD_Write_Int *****************
 10923 ;; Defined at:
 10924 ;;		line 247 in file "lcd.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;  value           2    9[COMMON] int 
 10927 ;;  fieldLength     1   11[COMMON] unsigned char 
 10928 ;;  numPlaces       1   12[COMMON] unsigned char 
 10929 ;;  sign            1   13[COMMON] unsigned char 
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;  str             5    4[BANK0 ] unsigned char [5]
 10932 ;;  i               1   10[BANK0 ] unsigned char 
 10933 ;;  j               1    9[BANK0 ] unsigned char 
 10934 ;; Return value:  Size  Location     Type
 10935 ;;                  1    wreg      void 
 10936 ;; Registers used:
 10937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10938 ;; Tracked objects:
 10939 ;;		On entry : 0/0
 10940 ;;		On exit  : 0/0
 10941 ;;		Unchanged: 0/0
 10942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10943 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;      Totals:         5      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;Total ram usage:       16 bytes
 10948 ;; Hardware stack levels used:    1
 10949 ;; Hardware stack levels required when called:    2
 10950 ;; This function calls:
 10951 ;;		_LCD_Write_Char
 10952 ;;		___awdiv
 10953 ;;		___awmod
 10954 ;; This function is called by:
 10955 ;;		_menuChoice
 10956 ;;		_main
 10957 ;; This function uses a non-reentrant model
 10958 ;;
 10959                           
 10960                           
 10961                           ;psect for function _LCD_Write_Int
 10962  0C86                     _LCD_Write_Int:	
 10963                           
 10964                           ;lcd.c: 249: uint8_t str[5]={0,0,0,0,0};
 10965                           
 10966                           ;incstack = 0
 10967                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10968  0C86  3032               	movlw	low LCD_Write_Int@F14404
 10969  0C87  0086               	movwf	6
 10970  0C88  3001               	movlw	high LCD_Write_Int@F14404
 10971  0C89  0087               	movwf	7
 10972  0C8A  3024               	movlw	low LCD_Write_Int@str
 10973  0C8B  0084               	movwf	4
 10974  0C8C  3000               	movlw	high LCD_Write_Int@str
 10975  0C8D  0085               	movwf	5
 10976  0C8E  3005               	movlw	5
 10977  0C8F  0020               	movlb	0	; select bank0
 10978  0C90  00A0               	movwf	??_LCD_Write_Int
 10979  0C91                     u2870:	
 10980  0C91  0016               	moviw fsr1++
 10981  0C92  001A               	movwi fsr0++
 10982  0C93  0BA0               	decfsz	??_LCD_Write_Int,f
 10983  0C94  2C91               	goto	u2870
 10984                           
 10985                           ;lcd.c: 250: uint8_t i=4,j=0;
 10986  0C95  3004               	movlw	4
 10987  0C96  00A0               	movwf	??_LCD_Write_Int
 10988  0C97  0820               	movf	??_LCD_Write_Int,w
 10989  0C98  00AA               	movwf	LCD_Write_Int@i
 10990  0C99  01A9               	clrf	LCD_Write_Int@j
 10991                           
 10992                           ;lcd.c: 252: if(value<0)
 10993  0C9A  1FFA               	btfss	LCD_Write_Int@value+1,7
 10994  0C9B  2CA6               	goto	l2663
 10995                           
 10996                           ;lcd.c: 253: {
 10997                           ;lcd.c: 254: LCD_Write_Char('-');
 10998  0C9C  302D               	movlw	45
 10999  0C9D  3197  2760  318C   	fcall	_LCD_Write_Char
 11000                           
 11001                           ;lcd.c: 255: value=value*-1;
 11002  0CA0  09F9               	comf	LCD_Write_Int@value,f
 11003  0CA1  09FA               	comf	LCD_Write_Int@value+1,f
 11004  0CA2  0AF9               	incf	LCD_Write_Int@value,f
 11005  0CA3  1903               	skipnz
 11006  0CA4  0AFA               	incf	LCD_Write_Int@value+1,f
 11007                           
 11008                           ;lcd.c: 256: }
 11009  0CA5  2CAD               	goto	l2673
 11010  0CA6                     l2663:	
 11011                           
 11012                           ;lcd.c: 258: else
 11013                           ;lcd.c: 259: {
 11014                           ;lcd.c: 260: if(sign == 1)
 11015  0CA6  037D               	decf	LCD_Write_Int@sign,w
 11016  0CA7  1D03               	btfss	3,2
 11017  0CA8  2CAD               	goto	l2673
 11018                           
 11019                           ;lcd.c: 261: {
 11020                           ;lcd.c: 262: LCD_Write_Char('+');
 11021  0CA9  302B               	movlw	43
 11022  0CAA  3197  2760  318C   	fcall	_LCD_Write_Char
 11023  0CAD                     l2673:	
 11024                           ;lcd.c: 263: }
 11025                           ;lcd.c: 264: }
 11026                           ;lcd.c: 266: while(value)
 11027                           
 11028  0CAD  0879               	movf	LCD_Write_Int@value,w
 11029  0CAE  047A               	iorwf	LCD_Write_Int@value+1,w
 11030  0CAF  1903               	btfsc	3,2
 11031  0CB0  2CE6               	goto	l2681
 11032                           
 11033                           ;lcd.c: 267: {
 11034                           ;lcd.c: 268: str[i]=value%10;
 11035  0CB1  300A               	movlw	10
 11036  0CB2  00F0               	movwf	___awmod@divisor
 11037  0CB3  3000               	movlw	0
 11038  0CB4  00F1               	movwf	___awmod@divisor+1
 11039  0CB5  087A               	movf	LCD_Write_Int@value+1,w
 11040  0CB6  00F3               	movwf	___awmod@dividend+1
 11041  0CB7  0879               	movf	LCD_Write_Int@value,w
 11042  0CB8  00F2               	movwf	___awmod@dividend
 11043  0CB9  3188  20B9  318C   	fcall	___awmod
 11044  0CBC  0870               	movf	?___awmod,w
 11045  0CBD  0020               	movlb	0	; select bank0
 11046  0CBE  00A0               	movwf	??_LCD_Write_Int
 11047  0CBF  082A               	movf	LCD_Write_Int@i,w
 11048  0CC0  3E24               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11049  0CC1  0086               	movwf	6
 11050  0CC2  0187               	clrf	7
 11051  0CC3  0820               	movf	??_LCD_Write_Int,w
 11052  0CC4  0081               	movwf	1
 11053                           
 11054                           ;lcd.c: 269: value=value/10;
 11055  0CC5  300A               	movlw	10
 11056  0CC6  00F0               	movwf	___awdiv@divisor
 11057  0CC7  3000               	movlw	0
 11058  0CC8  00F1               	movwf	___awdiv@divisor+1
 11059  0CC9  087A               	movf	LCD_Write_Int@value+1,w
 11060  0CCA  00F3               	movwf	___awdiv@dividend+1
 11061  0CCB  0879               	movf	LCD_Write_Int@value,w
 11062  0CCC  00F2               	movwf	___awdiv@dividend
 11063  0CCD  3188  20FE  318C   	fcall	___awdiv
 11064  0CD0  0871               	movf	?___awdiv+1,w
 11065  0CD1  00FA               	movwf	LCD_Write_Int@value+1
 11066  0CD2  0870               	movf	?___awdiv,w
 11067  0CD3  00F9               	movwf	LCD_Write_Int@value
 11068                           
 11069                           ;lcd.c: 270: i--;
 11070  0CD4  3001               	movlw	1
 11071  0CD5  0020               	movlb	0	; select bank0
 11072  0CD6  02AA               	subwf	LCD_Write_Int@i,f
 11073  0CD7  2CAD               	goto	l2673
 11074  0CD8                     l2677:	
 11075                           ;lcd.c: 273: {
 11076                           ;lcd.c: 274: while(str[j]==0)
 11077                           
 11078                           ;lcd.c: 271: }
 11079                           ;lcd.c: 272: if(fieldLength==-1)
 11080                           
 11081                           
 11082                           ;lcd.c: 275: {
 11083                           ;lcd.c: 276: j++;
 11084  0CD8  3001               	movlw	1
 11085  0CD9  0020               	movlb	0	; select bank0
 11086  0CDA  00A0               	movwf	??_LCD_Write_Int
 11087  0CDB  0820               	movf	??_LCD_Write_Int,w
 11088  0CDC  07A9               	addwf	LCD_Write_Int@j,f
 11089  0CDD  0020               	movlb	0	; select bank0
 11090  0CDE  0829               	movf	LCD_Write_Int@j,w
 11091  0CDF  3E24               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11092  0CE0  0086               	movwf	6
 11093  0CE1  0187               	clrf	7
 11094  0CE2  0801               	movf	1,w
 11095  0CE3  1D03               	btfss	3,2
 11096  0CE4  2CED               	goto	l2683
 11097  0CE5  2CD8               	goto	l2677
 11098  0CE6                     l2681:	
 11099                           ;lcd.c: 277: }
 11100                           ;lcd.c: 278: }
 11101                           
 11102                           
 11103                           ;lcd.c: 279: else
 11104                           ;lcd.c: 280: {
 11105                           ;lcd.c: 281: j=5-fieldLength;
 11106  0CE6  037B               	decf	LCD_Write_Int@fieldLength,w
 11107  0CE7  3AFF               	xorlw	255
 11108  0CE8  3E05               	addlw	5
 11109  0CE9  0020               	movlb	0	; select bank0
 11110  0CEA  00A0               	movwf	??_LCD_Write_Int
 11111  0CEB  0820               	movf	??_LCD_Write_Int,w
 11112  0CEC  00A9               	movwf	LCD_Write_Int@j
 11113  0CED                     l2683:	
 11114                           
 11115                           ;lcd.c: 282: }
 11116                           ;lcd.c: 284: for(i=j;i<(5-numPlaces);i++)
 11117  0CED  0829               	movf	LCD_Write_Int@j,w
 11118  0CEE  00A0               	movwf	??_LCD_Write_Int
 11119  0CEF  0820               	movf	??_LCD_Write_Int,w
 11120  0CF0  00AA               	movwf	LCD_Write_Int@i
 11121  0CF1                     l2689:	
 11122  0CF1  087C               	movf	LCD_Write_Int@numPlaces,w
 11123  0CF2  00A0               	movwf	??_LCD_Write_Int
 11124  0CF3  01A1               	clrf	??_LCD_Write_Int+1
 11125  0CF4  09A0               	comf	??_LCD_Write_Int,f
 11126  0CF5  09A1               	comf	??_LCD_Write_Int+1,f
 11127  0CF6  0AA0               	incf	??_LCD_Write_Int,f
 11128  0CF7  1903               	skipnz
 11129  0CF8  0AA1               	incf	??_LCD_Write_Int+1,f
 11130  0CF9  0820               	movf	??_LCD_Write_Int,w
 11131  0CFA  3E05               	addlw	5
 11132  0CFB  00A2               	movwf	??_LCD_Write_Int+2
 11133  0CFC  3000               	movlw	0
 11134  0CFD  3D21               	addwfc	??_LCD_Write_Int+1,w
 11135  0CFE  00A3               	movwf	??_LCD_Write_Int+3
 11136  0CFF  0823               	movf	??_LCD_Write_Int+3,w
 11137  0D00  3A80               	xorlw	128
 11138  0D01  3C80               	sublw	128
 11139  0D02  1D03               	skipz
 11140  0D03  2D06               	goto	u2925
 11141  0D04  0822               	movf	??_LCD_Write_Int+2,w
 11142  0D05  022A               	subwf	LCD_Write_Int@i,w
 11143  0D06                     u2925:	
 11144  0D06  1803               	btfsc	3,0
 11145  0D07  2D18               	goto	l2691
 11146                           
 11147                           ;lcd.c: 285: {
 11148                           ;lcd.c: 286: LCD_Write_Char(48+str[i]);
 11149  0D08  0020               	movlb	0	; select bank0
 11150  0D09  082A               	movf	LCD_Write_Int@i,w
 11151  0D0A  3E24               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11152  0D0B  0086               	movwf	6
 11153  0D0C  0187               	clrf	7
 11154  0D0D  0801               	movf	1,w
 11155  0D0E  3E30               	addlw	48
 11156  0D0F  3197  2760  318C   	fcall	_LCD_Write_Char
 11157  0D12  3001               	movlw	1
 11158  0D13  0020               	movlb	0	; select bank0
 11159  0D14  00A0               	movwf	??_LCD_Write_Int
 11160  0D15  0820               	movf	??_LCD_Write_Int,w
 11161  0D16  07AA               	addwf	LCD_Write_Int@i,f
 11162  0D17  2CF1               	goto	l2689
 11163  0D18                     l2691:	
 11164                           
 11165                           ;lcd.c: 287: }
 11166                           ;lcd.c: 289: if(numPlaces == 1)
 11167  0D18  037C               	decf	LCD_Write_Int@numPlaces,w
 11168  0D19  1D03               	btfss	3,2
 11169  0D1A  2D25               	goto	l2695
 11170                           
 11171                           ;lcd.c: 290: {
 11172                           ;lcd.c: 291: LCD_Write_Char(46);
 11173  0D1B  302E               	movlw	46
 11174  0D1C  3197  2760  318C   	fcall	_LCD_Write_Char
 11175                           
 11176                           ;lcd.c: 292: LCD_Write_Char(48+str[4]);
 11177  0D1F  0020               	movlb	0	; select bank0
 11178  0D20  0828               	movf	LCD_Write_Int@str+4,w
 11179  0D21  3E30               	addlw	48
 11180  0D22  3197  2760  318C   	fcall	_LCD_Write_Char
 11181  0D25                     l2695:	
 11182                           
 11183                           ;lcd.c: 293: }
 11184                           ;lcd.c: 295: if(numPlaces == 2)
 11185  0D25  3002               	movlw	2
 11186  0D26  067C               	xorwf	LCD_Write_Int@numPlaces,w
 11187  0D27  1D03               	btfss	3,2
 11188  0D28  0008               	return
 11189                           
 11190                           ;lcd.c: 296: {
 11191                           ;lcd.c: 297: LCD_Write_Char(46);
 11192  0D29  302E               	movlw	46
 11193  0D2A  3197  2760  318C   	fcall	_LCD_Write_Char
 11194                           
 11195                           ;lcd.c: 298: LCD_Write_Char(48+str[3]);
 11196  0D2D  0020               	movlb	0	; select bank0
 11197  0D2E  0827               	movf	LCD_Write_Int@str+3,w
 11198  0D2F  3E30               	addlw	48
 11199  0D30  3197  2760  318C   	fcall	_LCD_Write_Char
 11200                           
 11201                           ;lcd.c: 299: LCD_Write_Char(48+str[4]);
 11202  0D33  0020               	movlb	0	; select bank0
 11203  0D34  0828               	movf	LCD_Write_Int@str+4,w
 11204  0D35  3E30               	addlw	48
 11205  0D36  3197  2760         	fcall	_LCD_Write_Char
 11206  0D38  0008               	return
 11207  0D39                     __end_of_LCD_Write_Int:	
 11208                           
 11209                           	psect	text22
 11210  08B9                     __ptext22:	
 11211 ;; *************** function ___awmod *****************
 11212 ;; Defined at:
 11213 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11214 ;; Parameters:    Size  Location     Type
 11215 ;;  divisor         2    0[COMMON] int 
 11216 ;;  dividend        2    2[COMMON] int 
 11217 ;; Auto vars:     Size  Location     Type
 11218 ;;  sign            1    6[COMMON] unsigned char 
 11219 ;;  counter         1    5[COMMON] unsigned char 
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  2    0[COMMON] int 
 11222 ;; Registers used:
 11223 ;;		wreg, status,2, status,0
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11232 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;Total ram usage:        7 bytes
 11234 ;; Hardware stack levels used:    1
 11235 ;; This function calls:
 11236 ;;		Nothing
 11237 ;; This function is called by:
 11238 ;;		_LCD_Write_Int
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           
 11242                           
 11243                           ;psect for function ___awmod
 11244  08B9                     ___awmod:	
 11245                           
 11246                           ;incstack = 0
 11247                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11248  08B9  01F6               	clrf	___awmod@sign
 11249  08BA  1FF3               	btfss	___awmod@dividend+1,7
 11250  08BB  28C3               	goto	l2447
 11251  08BC  09F2               	comf	___awmod@dividend,f
 11252  08BD  09F3               	comf	___awmod@dividend+1,f
 11253  08BE  0AF2               	incf	___awmod@dividend,f
 11254  08BF  1903               	skipnz
 11255  08C0  0AF3               	incf	___awmod@dividend+1,f
 11256  08C1  01F6               	clrf	___awmod@sign
 11257  08C2  0AF6               	incf	___awmod@sign,f
 11258  08C3                     l2447:	
 11259  08C3  1FF1               	btfss	___awmod@divisor+1,7
 11260  08C4  28CA               	goto	l2451
 11261  08C5  09F0               	comf	___awmod@divisor,f
 11262  08C6  09F1               	comf	___awmod@divisor+1,f
 11263  08C7  0AF0               	incf	___awmod@divisor,f
 11264  08C8  1903               	skipnz
 11265  08C9  0AF1               	incf	___awmod@divisor+1,f
 11266  08CA                     l2451:	
 11267  08CA  0870               	movf	___awmod@divisor,w
 11268  08CB  0471               	iorwf	___awmod@divisor+1,w
 11269  08CC  1903               	btfsc	3,2
 11270  08CD  28F1               	goto	l2469
 11271  08CE  01F5               	clrf	___awmod@counter
 11272  08CF  0AF5               	incf	___awmod@counter,f
 11273  08D0                     l2459:	
 11274  08D0  1BF1               	btfsc	___awmod@divisor+1,7
 11275  08D1  28DC               	goto	l2461
 11276  08D2  3001               	movlw	1
 11277  08D3                     u2665:	
 11278  08D3  35F0               	lslf	___awmod@divisor,f
 11279  08D4  0DF1               	rlf	___awmod@divisor+1,f
 11280  08D5  0B89               	decfsz	9,f
 11281  08D6  28D3               	goto	u2665
 11282  08D7  3001               	movlw	1
 11283  08D8  00F4               	movwf	??___awmod
 11284  08D9  0874               	movf	??___awmod,w
 11285  08DA  07F5               	addwf	___awmod@counter,f
 11286  08DB  28D0               	goto	l2459
 11287  08DC                     l2461:	
 11288  08DC  0871               	movf	___awmod@divisor+1,w
 11289  08DD  0273               	subwf	___awmod@dividend+1,w
 11290  08DE  1D03               	skipz
 11291  08DF  28E2               	goto	u2685
 11292  08E0  0870               	movf	___awmod@divisor,w
 11293  08E1  0272               	subwf	___awmod@dividend,w
 11294  08E2                     u2685:	
 11295  08E2  1C03               	skipc
 11296  08E3  28E8               	goto	l2465
 11297  08E4  0870               	movf	___awmod@divisor,w
 11298  08E5  02F2               	subwf	___awmod@dividend,f
 11299  08E6  0871               	movf	___awmod@divisor+1,w
 11300  08E7  3BF3               	subwfb	___awmod@dividend+1,f
 11301  08E8                     l2465:	
 11302  08E8  3001               	movlw	1
 11303  08E9                     u2695:	
 11304  08E9  36F1               	lsrf	___awmod@divisor+1,f
 11305  08EA  0CF0               	rrf	___awmod@divisor,f
 11306  08EB  0B89               	decfsz	9,f
 11307  08EC  28E9               	goto	u2695
 11308  08ED  3001               	movlw	1
 11309  08EE  02F5               	subwf	___awmod@counter,f
 11310  08EF  1D03               	btfss	3,2
 11311  08F0  28DC               	goto	l2461
 11312  08F1                     l2469:	
 11313  08F1  0876               	movf	___awmod@sign,w
 11314  08F2  1903               	btfsc	3,2
 11315  08F3  28F9               	goto	l2473
 11316  08F4  09F2               	comf	___awmod@dividend,f
 11317  08F5  09F3               	comf	___awmod@dividend+1,f
 11318  08F6  0AF2               	incf	___awmod@dividend,f
 11319  08F7  1903               	skipnz
 11320  08F8  0AF3               	incf	___awmod@dividend+1,f
 11321  08F9                     l2473:	
 11322  08F9  0873               	movf	___awmod@dividend+1,w
 11323  08FA  00F1               	movwf	?___awmod+1
 11324  08FB  0872               	movf	___awmod@dividend,w
 11325  08FC  00F0               	movwf	?___awmod
 11326  08FD  0008               	return
 11327  08FE                     __end_of___awmod:	
 11328                           
 11329                           	psect	text23
 11330  08FE                     __ptext23:	
 11331 ;; *************** function ___awdiv *****************
 11332 ;; Defined at:
 11333 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;  divisor         2    0[COMMON] int 
 11336 ;;  dividend        2    2[COMMON] int 
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;  quotient        2    7[COMMON] int 
 11339 ;;  sign            1    6[COMMON] unsigned char 
 11340 ;;  counter         1    5[COMMON] unsigned char 
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  2    0[COMMON] int 
 11343 ;; Registers used:
 11344 ;;		wreg, status,2, status,0
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11353 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11354 ;;Total ram usage:        9 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; This function calls:
 11357 ;;		Nothing
 11358 ;; This function is called by:
 11359 ;;		_LCD_Write_Int
 11360 ;; This function uses a non-reentrant model
 11361 ;;
 11362                           
 11363                           
 11364                           ;psect for function ___awdiv
 11365  08FE                     ___awdiv:	
 11366                           
 11367                           ;incstack = 0
 11368                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11369  08FE  01F6               	clrf	___awdiv@sign
 11370  08FF  1FF1               	btfss	___awdiv@divisor+1,7
 11371  0900  2908               	goto	l2403
 11372  0901  09F0               	comf	___awdiv@divisor,f
 11373  0902  09F1               	comf	___awdiv@divisor+1,f
 11374  0903  0AF0               	incf	___awdiv@divisor,f
 11375  0904  1903               	skipnz
 11376  0905  0AF1               	incf	___awdiv@divisor+1,f
 11377  0906  01F6               	clrf	___awdiv@sign
 11378  0907  0AF6               	incf	___awdiv@sign,f
 11379  0908                     l2403:	
 11380  0908  1FF3               	btfss	___awdiv@dividend+1,7
 11381  0909  2913               	goto	l2409
 11382  090A  09F2               	comf	___awdiv@dividend,f
 11383  090B  09F3               	comf	___awdiv@dividend+1,f
 11384  090C  0AF2               	incf	___awdiv@dividend,f
 11385  090D  1903               	skipnz
 11386  090E  0AF3               	incf	___awdiv@dividend+1,f
 11387  090F  3001               	movlw	1
 11388  0910  00F4               	movwf	??___awdiv
 11389  0911  0874               	movf	??___awdiv,w
 11390  0912  06F6               	xorwf	___awdiv@sign,f
 11391  0913                     l2409:	
 11392  0913  01F7               	clrf	___awdiv@quotient
 11393  0914  01F8               	clrf	___awdiv@quotient+1
 11394  0915  0870               	movf	___awdiv@divisor,w
 11395  0916  0471               	iorwf	___awdiv@divisor+1,w
 11396  0917  1903               	btfsc	3,2
 11397  0918  2942               	goto	l2431
 11398  0919  01F5               	clrf	___awdiv@counter
 11399  091A  0AF5               	incf	___awdiv@counter,f
 11400  091B                     l2419:	
 11401  091B  1BF1               	btfsc	___awdiv@divisor+1,7
 11402  091C  2927               	goto	l2421
 11403  091D  3001               	movlw	1
 11404  091E                     u2565:	
 11405  091E  35F0               	lslf	___awdiv@divisor,f
 11406  091F  0DF1               	rlf	___awdiv@divisor+1,f
 11407  0920  0B89               	decfsz	9,f
 11408  0921  291E               	goto	u2565
 11409  0922  3001               	movlw	1
 11410  0923  00F4               	movwf	??___awdiv
 11411  0924  0874               	movf	??___awdiv,w
 11412  0925  07F5               	addwf	___awdiv@counter,f
 11413  0926  291B               	goto	l2419
 11414  0927                     l2421:	
 11415  0927  3001               	movlw	1
 11416  0928                     u2585:	
 11417  0928  35F7               	lslf	___awdiv@quotient,f
 11418  0929  0DF8               	rlf	___awdiv@quotient+1,f
 11419  092A  0B89               	decfsz	9,f
 11420  092B  2928               	goto	u2585
 11421  092C  0871               	movf	___awdiv@divisor+1,w
 11422  092D  0273               	subwf	___awdiv@dividend+1,w
 11423  092E  1D03               	skipz
 11424  092F  2932               	goto	u2595
 11425  0930  0870               	movf	___awdiv@divisor,w
 11426  0931  0272               	subwf	___awdiv@dividend,w
 11427  0932                     u2595:	
 11428  0932  1C03               	skipc
 11429  0933  2939               	goto	l2427
 11430  0934  0870               	movf	___awdiv@divisor,w
 11431  0935  02F2               	subwf	___awdiv@dividend,f
 11432  0936  0871               	movf	___awdiv@divisor+1,w
 11433  0937  3BF3               	subwfb	___awdiv@dividend+1,f
 11434  0938  1477               	bsf	___awdiv@quotient,0
 11435  0939                     l2427:	
 11436  0939  3001               	movlw	1
 11437  093A                     u2605:	
 11438  093A  36F1               	lsrf	___awdiv@divisor+1,f
 11439  093B  0CF0               	rrf	___awdiv@divisor,f
 11440  093C  0B89               	decfsz	9,f
 11441  093D  293A               	goto	u2605
 11442  093E  3001               	movlw	1
 11443  093F  02F5               	subwf	___awdiv@counter,f
 11444  0940  1D03               	btfss	3,2
 11445  0941  2927               	goto	l2421
 11446  0942                     l2431:	
 11447  0942  0876               	movf	___awdiv@sign,w
 11448  0943  1903               	btfsc	3,2
 11449  0944  294A               	goto	l2435
 11450  0945  09F7               	comf	___awdiv@quotient,f
 11451  0946  09F8               	comf	___awdiv@quotient+1,f
 11452  0947  0AF7               	incf	___awdiv@quotient,f
 11453  0948  1903               	skipnz
 11454  0949  0AF8               	incf	___awdiv@quotient+1,f
 11455  094A                     l2435:	
 11456  094A  0878               	movf	___awdiv@quotient+1,w
 11457  094B  00F1               	movwf	?___awdiv+1
 11458  094C  0877               	movf	___awdiv@quotient,w
 11459  094D  00F0               	movwf	?___awdiv
 11460  094E  0008               	return
 11461  094F                     __end_of___awdiv:	
 11462                           
 11463                           	psect	text24
 11464  083A                     __ptext24:	
 11465 ;; *************** function _LCD_Set_Cursor *****************
 11466 ;; Defined at:
 11467 ;;		line 82 in file "lcd.c"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;  x               1    wreg     unsigned char 
 11470 ;;  y               1    3[COMMON] unsigned char 
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  x               1    6[COMMON] unsigned char 
 11473 ;;  temp            1    9[COMMON] unsigned char 
 11474 ;;  w               1    8[COMMON] unsigned char 
 11475 ;;  z               1    7[COMMON] unsigned char 
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  1    wreg      void 
 11478 ;; Registers used:
 11479 ;;		wreg, status,2, status,0, pclath, cstack
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11485 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11486 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;Total ram usage:        7 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    2
 11492 ;; This function calls:
 11493 ;;		_LCD_Cmd
 11494 ;; This function is called by:
 11495 ;;		_menuChoice
 11496 ;;		_main
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500                           
 11501                           ;psect for function _LCD_Set_Cursor
 11502  083A                     _LCD_Set_Cursor:	
 11503                           
 11504                           ;incstack = 0
 11505                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11506                           ;LCD_Set_Cursor@x stored from wreg
 11507  083A  00F6               	movwf	LCD_Set_Cursor@x
 11508                           
 11509                           ;lcd.c: 86: uint8_t temp;
 11510                           ;lcd.c: 87: uint8_t z,w;
 11511                           ;lcd.c: 89: if(y == 0)
 11512  083B  0873               	movf	LCD_Set_Cursor@y,w
 11513  083C  1D03               	btfss	3,2
 11514  083D  285A               	goto	l2599
 11515                           
 11516                           ;lcd.c: 90: {
 11517                           ;lcd.c: 91: temp = (uint8_t)(0x80 + x);
 11518  083E  0876               	movf	LCD_Set_Cursor@x,w
 11519  083F  3E80               	addlw	128
 11520  0840  00F4               	movwf	??_LCD_Set_Cursor
 11521  0841  0874               	movf	??_LCD_Set_Cursor,w
 11522  0842  00F9               	movwf	LCD_Set_Cursor@temp
 11523                           
 11524                           ;lcd.c: 92: z = (uint8_t)(temp>>4);
 11525  0843  0879               	movf	LCD_Set_Cursor@temp,w
 11526  0844  00F4               	movwf	??_LCD_Set_Cursor
 11527  0845  3004               	movlw	4
 11528  0846                     u2835:	
 11529  0846  36F4               	lsrf	??_LCD_Set_Cursor,f
 11530  0847  0B89               	decfsz	9,f
 11531  0848  2846               	goto	u2835
 11532  0849  0874               	movf	??_LCD_Set_Cursor,w
 11533  084A  00F5               	movwf	??_LCD_Set_Cursor+1
 11534  084B  0875               	movf	??_LCD_Set_Cursor+1,w
 11535  084C  00F7               	movwf	LCD_Set_Cursor@z
 11536                           
 11537                           ;lcd.c: 93: w = (uint8_t)(temp & 0x0F);
 11538  084D  0879               	movf	LCD_Set_Cursor@temp,w
 11539  084E  390F               	andlw	15
 11540  084F  00F4               	movwf	??_LCD_Set_Cursor
 11541  0850  0874               	movf	??_LCD_Set_Cursor,w
 11542  0851  00F8               	movwf	LCD_Set_Cursor@w
 11543                           
 11544                           ;lcd.c: 94: LCD_Cmd(z);
 11545  0852  0877               	movf	LCD_Set_Cursor@z,w
 11546  0853  3195  25FE  3188   	fcall	_LCD_Cmd
 11547                           
 11548                           ;lcd.c: 95: LCD_Cmd(w);
 11549  0856  0878               	movf	LCD_Set_Cursor@w,w
 11550  0857  3195  25FE         	fcall	_LCD_Cmd
 11551                           
 11552                           ;lcd.c: 96: }
 11553  0859  0008               	return
 11554  085A                     l2599:	
 11555                           
 11556                           ;lcd.c: 98: else if(y == 1)
 11557  085A  0373               	decf	LCD_Set_Cursor@y,w
 11558  085B  1D03               	btfss	3,2
 11559  085C  0008               	return
 11560                           
 11561                           ;lcd.c: 99: {
 11562                           ;lcd.c: 100: temp = (uint8_t)(0xC0 + x);
 11563  085D  0876               	movf	LCD_Set_Cursor@x,w
 11564  085E  3EC0               	addlw	192
 11565  085F  00F4               	movwf	??_LCD_Set_Cursor
 11566  0860  0874               	movf	??_LCD_Set_Cursor,w
 11567  0861  00F9               	movwf	LCD_Set_Cursor@temp
 11568                           
 11569                           ;lcd.c: 101: z = (uint8_t)(temp>>4);
 11570  0862  0879               	movf	LCD_Set_Cursor@temp,w
 11571  0863  00F4               	movwf	??_LCD_Set_Cursor
 11572  0864  3004               	movlw	4
 11573  0865                     u2855:	
 11574  0865  36F4               	lsrf	??_LCD_Set_Cursor,f
 11575  0866  0B89               	decfsz	9,f
 11576  0867  2865               	goto	u2855
 11577  0868  0874               	movf	??_LCD_Set_Cursor,w
 11578  0869  00F5               	movwf	??_LCD_Set_Cursor+1
 11579  086A  0875               	movf	??_LCD_Set_Cursor+1,w
 11580  086B  00F7               	movwf	LCD_Set_Cursor@z
 11581                           
 11582                           ;lcd.c: 102: w = (uint8_t)(temp & 0x0F);
 11583  086C  0879               	movf	LCD_Set_Cursor@temp,w
 11584  086D  390F               	andlw	15
 11585  086E  00F4               	movwf	??_LCD_Set_Cursor
 11586  086F  0874               	movf	??_LCD_Set_Cursor,w
 11587  0870  00F8               	movwf	LCD_Set_Cursor@w
 11588                           
 11589                           ;lcd.c: 103: LCD_Cmd(z);
 11590  0871  0877               	movf	LCD_Set_Cursor@z,w
 11591  0872  3195  25FE  3188   	fcall	_LCD_Cmd
 11592                           
 11593                           ;lcd.c: 104: LCD_Cmd(w);
 11594  0875  0878               	movf	LCD_Set_Cursor@w,w
 11595  0876  3195  25FE         	fcall	_LCD_Cmd
 11596  0878  0008               	return
 11597  0879                     __end_of_LCD_Set_Cursor:	
 11598                           
 11599                           	psect	text25
 11600  0879                     __ptext25:	
 11601 ;; *************** function _SYSTEM_Initialize *****************
 11602 ;; Defined at:
 11603 ;;		line 71 in file "system.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;		None
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;		None
 11608 ;; Return value:  Size  Location     Type
 11609 ;;                  1    wreg      void 
 11610 ;; Registers used:
 11611 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11612 ;; Tracked objects:
 11613 ;;		On entry : 0/0
 11614 ;;		On exit  : 0/0
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11621 ;;Total ram usage:        2 bytes
 11622 ;; Hardware stack levels used:    1
 11623 ;; Hardware stack levels required when called:    3
 11624 ;; This function calls:
 11625 ;;		_ADCC_Initialize
 11626 ;;		_InitCustomChars
 11627 ;;		_LCD_Clear
 11628 ;;		_LCD_Init
 11629 ;;		_OSCILLATOR_Initialize
 11630 ;;		_PIN_MANAGER_Initialize
 11631 ;;		_PWM_Initialize
 11632 ;;		_TMR2_Initialize
 11633 ;; This function is called by:
 11634 ;;		_main
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           
 11639                           ;psect for function _SYSTEM_Initialize
 11640  0879                     _SYSTEM_Initialize:	
 11641                           
 11642                           ;system.c: 73: PIN_MANAGER_Initialize();
 11643                           
 11644                           ;incstack = 0
 11645                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11646  0879  3188  2007  3188   	fcall	_PIN_MANAGER_Initialize
 11647                           
 11648                           ;system.c: 74: OSCILLATOR_Initialize();
 11649  087C  3180  2004  3188   	fcall	_OSCILLATOR_Initialize
 11650                           
 11651                           ;system.c: 75: FVRCON = 0x00;
 11652  087F  0032               	movlb	18	; select bank18
 11653  0880  018C               	clrf	12	;volatile
 11654                           
 11655                           ;system.c: 76: ADCC_Initialize();
 11656  0881  3196  2691  3188   	fcall	_ADCC_Initialize
 11657                           
 11658                           ;system.c: 77: PWM_Initialize();
 11659  0884  3196  2623  3188   	fcall	_PWM_Initialize
 11660                           
 11661                           ;system.c: 79: TMR2_Initialize();
 11662  0887  3195  25DF  3188   	fcall	_TMR2_Initialize
 11663                           
 11664                           ;system.c: 81: LCD_Init(0X00);
 11665  088A  3000               	movlw	0
 11666  088B  3189  21AF  3188   	fcall	_LCD_Init
 11667                           
 11668                           ;system.c: 82: _delay((unsigned long)((200)*(32000000/4000.0)));
 11669  088E  3009               	movlw	9
 11670  088F  00F8               	movwf	??_SYSTEM_Initialize+1
 11671  0890  301E               	movlw	30
 11672  0891  00F7               	movwf	??_SYSTEM_Initialize
 11673  0892  30E4               	movlw	228
 11674  0893                     u4027:	
 11675  0893  0B89               	decfsz	9,f
 11676  0894  2893               	goto	u4027
 11677  0895  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11678  0896  2893               	goto	u4027
 11679  0897  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11680  0898  2893               	goto	u4027
 11681  0899  3200               	nop2
 11682                           
 11683                           ;system.c: 83: LCD_Clear();
 11684  089A  3195  25CA  3188   	fcall	_LCD_Clear
 11685                           
 11686                           ;system.c: 84: _delay((unsigned long)((100)*(32000000/4000.0)));
 11687  089D  3005               	movlw	5
 11688  089E  00F8               	movwf	??_SYSTEM_Initialize+1
 11689  089F  300F               	movlw	15
 11690  08A0  00F7               	movwf	??_SYSTEM_Initialize
 11691  08A1  30F1               	movlw	241
 11692  08A2                     u4037:	
 11693  08A2  0B89               	decfsz	9,f
 11694  08A3  28A2               	goto	u4037
 11695  08A4  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11696  08A5  28A2               	goto	u4037
 11697  08A6  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11698  08A7  28A2               	goto	u4037
 11699  08A8  0000               	nop
 11700                           
 11701                           ;system.c: 85: InitCustomChars();
 11702  08A9  3197  273A  3188   	fcall	_InitCustomChars
 11703                           
 11704                           ;system.c: 86: _delay((unsigned long)((200)*(32000000/4000.0)));
 11705  08AC  3009               	movlw	9
 11706  08AD  00F8               	movwf	??_SYSTEM_Initialize+1
 11707  08AE  301E               	movlw	30
 11708  08AF  00F7               	movwf	??_SYSTEM_Initialize
 11709  08B0  30E4               	movlw	228
 11710  08B1                     u4047:	
 11711  08B1  0B89               	decfsz	9,f
 11712  08B2  28B1               	goto	u4047
 11713  08B3  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11714  08B4  28B1               	goto	u4047
 11715  08B5  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11716  08B6  28B1               	goto	u4047
 11717  08B7  3200               	nop2
 11718  08B8  0008               	return
 11719  08B9                     __end_of_SYSTEM_Initialize:	
 11720                           
 11721                           	psect	text26
 11722  15DF                     __ptext26:	
 11723 ;; *************** function _TMR2_Initialize *****************
 11724 ;; Defined at:
 11725 ;;		line 3 in file "tmr2.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;		None
 11728 ;; Auto vars:     Size  Location     Type
 11729 ;;		None
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  1    wreg      void 
 11732 ;; Registers used:
 11733 ;;		wreg, status,2
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11743 ;;Total ram usage:        0 bytes
 11744 ;; Hardware stack levels used:    1
 11745 ;; This function calls:
 11746 ;;		Nothing
 11747 ;; This function is called by:
 11748 ;;		_SYSTEM_Initialize
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752                           
 11753                           ;psect for function _TMR2_Initialize
 11754  15DF                     _TMR2_Initialize:	
 11755                           
 11756                           ;tmr2.c: 5: T2CON = 0x00;
 11757                           
 11758                           ;incstack = 0
 11759                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11760  15DF  0025               	movlb	5	; select bank5
 11761  15E0  018E               	clrf	14	;volatile
 11762                           
 11763                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11764  15E1  3001               	movlw	1
 11765  15E2  0090               	movwf	16	;volatile
 11766                           
 11767                           ;tmr2.c: 9: T2HLT = 0x00;
 11768  15E3  018F               	clrf	15	;volatile
 11769                           
 11770                           ;tmr2.c: 11: T2RST = 0x00;
 11771  15E4  0191               	clrf	17	;volatile
 11772                           
 11773                           ;tmr2.c: 13: T2PR = 0xFF;
 11774  15E5  30FF               	movlw	255
 11775  15E6  008D               	movwf	13	;volatile
 11776                           
 11777                           ;tmr2.c: 15: T2TMR = 0x00;
 11778  15E7  018C               	clrf	12	;volatile
 11779                           
 11780                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11781  15E8  002E               	movlb	14	; select bank14
 11782  15E9  1090               	bcf	16,1	;volatile
 11783                           
 11784                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11785  15EA  0025               	movlb	5	; select bank5
 11786  15EB  178E               	bsf	14,7	;volatile
 11787  15EC  0008               	return
 11788  15ED                     __end_of_TMR2_Initialize:	
 11789                           
 11790                           	psect	text27
 11791  1623                     __ptext27:	
 11792 ;; *************** function _PWM_Initialize *****************
 11793 ;; Defined at:
 11794 ;;		line 3 in file "pwm.c"
 11795 ;; Parameters:    Size  Location     Type
 11796 ;;		None
 11797 ;; Auto vars:     Size  Location     Type
 11798 ;;		None
 11799 ;; Return value:  Size  Location     Type
 11800 ;;                  1    wreg      void 
 11801 ;; Registers used:
 11802 ;;		wreg, status,2, status,0
 11803 ;; Tracked objects:
 11804 ;;		On entry : 0/0
 11805 ;;		On exit  : 0/0
 11806 ;;		Unchanged: 0/0
 11807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11812 ;;Total ram usage:        0 bytes
 11813 ;; Hardware stack levels used:    1
 11814 ;; This function calls:
 11815 ;;		Nothing
 11816 ;; This function is called by:
 11817 ;;		_SYSTEM_Initialize
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           
 11821                           
 11822                           ;psect for function _PWM_Initialize
 11823  1623                     _PWM_Initialize:	
 11824                           
 11825                           ;pwm.c: 5: PWM6CON = 0x80;
 11826                           
 11827                           ;incstack = 0
 11828                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11829  1623  3080               	movlw	128
 11830  1624  0027               	movlb	7	; select bank7
 11831  1625  008E               	movwf	14	;volatile
 11832                           
 11833                           ;pwm.c: 7: PWM6DCH = 0x00;
 11834  1626  018D               	clrf	13	;volatile
 11835                           
 11836                           ;pwm.c: 9: PWM6DCL = 0x00;
 11837  1627  018C               	clrf	12	;volatile
 11838                           
 11839                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
 11840  1628  0024               	movlb	4	; select bank4
 11841  1629  081F               	movf	31,w	;volatile
 11842  162A  39F3               	andlw	-13
 11843  162B  3804               	iorlw	4
 11844  162C  009F               	movwf	31	;volatile
 11845                           
 11846                           ;pwm.c: 14: PWM7CON = 0x80;
 11847  162D  3080               	movlw	128
 11848  162E  0027               	movlb	7	; select bank7
 11849  162F  0092               	movwf	18	;volatile
 11850                           
 11851                           ;pwm.c: 16: PWM7DCH = 0x00;
 11852  1630  0191               	clrf	17	;volatile
 11853                           
 11854                           ;pwm.c: 18: PWM7DCL = 0x00;
 11855  1631  0190               	clrf	16	;volatile
 11856                           
 11857                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x1;
 11858  1632  0024               	movlb	4	; select bank4
 11859  1633  081F               	movf	31,w	;volatile
 11860  1634  39CF               	andlw	-49
 11861  1635  3810               	iorlw	16
 11862  1636  009F               	movwf	31	;volatile
 11863  1637  0008               	return
 11864  1638                     __end_of_PWM_Initialize:	
 11865                           
 11866                           	psect	text28
 11867  0807                     __ptext28:	
 11868 ;; *************** function _PIN_MANAGER_Initialize *****************
 11869 ;; Defined at:
 11870 ;;		line 5 in file "pin_manager.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;		None
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;  state           1    0[COMMON] char 
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, status,2
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11888 ;;Total ram usage:        1 bytes
 11889 ;; Hardware stack levels used:    1
 11890 ;; This function calls:
 11891 ;;		Nothing
 11892 ;; This function is called by:
 11893 ;;		_SYSTEM_Initialize
 11894 ;; This function uses a non-reentrant model
 11895 ;;
 11896                           
 11897                           
 11898                           ;psect for function _PIN_MANAGER_Initialize
 11899  0807                     _PIN_MANAGER_Initialize:	
 11900                           
 11901                           ;pin_manager.c: 7: LATA = 0x00;
 11902                           
 11903                           ;incstack = 0
 11904                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11905  0807  0020               	movlb	0	; select bank0
 11906  0808  0196               	clrf	22	;volatile
 11907                           
 11908                           ;pin_manager.c: 8: LATB = 0x00;
 11909  0809  0197               	clrf	23	;volatile
 11910                           
 11911                           ;pin_manager.c: 9: LATC = 0x00;
 11912  080A  0198               	clrf	24	;volatile
 11913                           
 11914                           ;pin_manager.c: 11: WPUA = 0x00;
 11915  080B  003E               	movlb	30	; select bank30
 11916  080C  01B9               	clrf	57	;volatile
 11917                           
 11918                           ;pin_manager.c: 12: WPUB = 0x00;
 11919  080D  01C4               	clrf	68	;volatile
 11920                           
 11921                           ;pin_manager.c: 13: WPUC = 0x00;
 11922  080E  01CF               	clrf	79	;volatile
 11923                           
 11924                           ;pin_manager.c: 14: WPUE = 0x8;
 11925  080F  3008               	movlw	8
 11926  0810  00E5               	movwf	101	;volatile
 11927                           
 11928                           ;pin_manager.c: 16: TRISA = 0x0A;
 11929  0811  300A               	movlw	10
 11930  0812  0020               	movlb	0	; select bank0
 11931  0813  0091               	movwf	17	;volatile
 11932                           
 11933                           ;pin_manager.c: 17: TRISB = 0x07;
 11934  0814  3007               	movlw	7
 11935  0815  0092               	movwf	18	;volatile
 11936                           
 11937                           ;pin_manager.c: 18: TRISC = 0x00;
 11938  0816  0193               	clrf	19	;volatile
 11939                           
 11940                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11941  0817  300A               	movlw	10
 11942  0818  003E               	movlb	30	; select bank30
 11943  0819  00B8               	movwf	56	;volatile
 11944                           
 11945                           ;pin_manager.c: 21: ANSELB = 0x00;
 11946  081A  01C3               	clrf	67	;volatile
 11947                           
 11948                           ;pin_manager.c: 22: ANSELC = 0x00;
 11949  081B  01CE               	clrf	78	;volatile
 11950                           
 11951                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11952  081C  002E               	movlb	14	; select bank14
 11953  081D  1216               	bcf	22,4	;volatile
 11954                           
 11955                           ;pin_manager.c: 25: int8_t state = GIE;
 11956  081E  3000               	movlw	0
 11957  081F  1B8B               	btfsc	11,7	;volatile
 11958  0820  3001               	movlw	1
 11959  0821  00F0               	movwf	PIN_MANAGER_Initialize@state
 11960                           
 11961                           ;pin_manager.c: 26: GIE = 0;
 11962  0822  138B               	bcf	11,7	;volatile
 11963                           
 11964                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11965  0823  3055               	movlw	85
 11966  0824  003D               	movlb	29	; select bank29
 11967  0825  008F               	movwf	15	;volsfr
 11968                           
 11969                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11970  0826  30AA               	movlw	170
 11971  0827  008F               	movwf	15	;volsfr
 11972                           
 11973                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11974  0828  100F               	bcf	15,0	;volsfr
 11975                           
 11976                           ;pin_manager.c: 31: RC2PPS = 0x0E;
 11977  0829  300E               	movlw	14
 11978  082A  003E               	movlb	30	; select bank30
 11979  082B  00A2               	movwf	34	;volatile
 11980                           
 11981                           ;pin_manager.c: 32: RC3PPS = 0X0F;
 11982  082C  300F               	movlw	15
 11983  082D  00A3               	movwf	35	;volatile
 11984                           
 11985                           ;pin_manager.c: 34: PPSLOCK = 0x55;
 11986  082E  3055               	movlw	85
 11987  082F  003D               	movlb	29	; select bank29
 11988  0830  008F               	movwf	15	;volsfr
 11989                           
 11990                           ;pin_manager.c: 35: PPSLOCK = 0xAA;
 11991  0831  30AA               	movlw	170
 11992  0832  008F               	movwf	15	;volsfr
 11993                           
 11994                           ;pin_manager.c: 36: PPSLOCKbits.PPSLOCKED = 0x01;
 11995  0833  140F               	bsf	15,0	;volsfr
 11996                           
 11997                           ;pin_manager.c: 37: GIE = state;
 11998  0834  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11999  0835  2838               	goto	u3000
 12000  0836  178B               	bsf	11,7	;volatile
 12001  0837  0008               	return
 12002  0838                     u3000:	
 12003  0838  138B               	bcf	11,7	;volatile
 12004  0839  0008               	return
 12005  083A                     __end_of_PIN_MANAGER_Initialize:	
 12006                           
 12007                           	psect	text29
 12008  0004                     __ptext29:	
 12009 ;; *************** function _OSCILLATOR_Initialize *****************
 12010 ;; Defined at:
 12011 ;;		line 90 in file "system.c"
 12012 ;; Parameters:    Size  Location     Type
 12013 ;;		None
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;		None
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  1    wreg      void 
 12018 ;; Registers used:
 12019 ;;		wreg, status,2
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12029 ;;Total ram usage:        0 bytes
 12030 ;; Hardware stack levels used:    1
 12031 ;; This function calls:
 12032 ;;		Nothing
 12033 ;; This function is called by:
 12034 ;;		_SYSTEM_Initialize
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           
 12039                           ;psect for function _OSCILLATOR_Initialize
 12040  0004                     _OSCILLATOR_Initialize:	
 12041                           
 12042                           ;system.c: 92: OSCCON1 = 0x60;
 12043                           
 12044                           ;incstack = 0
 12045                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12046  0004  3060               	movlw	96
 12047  0005  0031               	movlb	17	; select bank17
 12048  0006  008D               	movwf	13	;volatile
 12049                           
 12050                           ;system.c: 93: OSCCON3 = 0x00;
 12051  0007  018F               	clrf	15	;volatile
 12052                           
 12053                           ;system.c: 94: OSCEN = 0x00;
 12054  0008  0191               	clrf	17	;volatile
 12055                           
 12056                           ;system.c: 95: OSCFRQ = 0x06;
 12057  0009  3006               	movlw	6
 12058  000A  0093               	movwf	19	;volatile
 12059                           
 12060                           ;system.c: 96: OSCTUNE = 0x00;
 12061  000B  0192               	clrf	18	;volatile
 12062  000C  0008               	return
 12063  000D                     __end_of_OSCILLATOR_Initialize:	
 12064                           
 12065                           	psect	text30
 12066  09AF                     __ptext30:	
 12067 ;; *************** function _LCD_Init *****************
 12068 ;; Defined at:
 12069 ;;		line 155 in file "lcd.c"
 12070 ;; Parameters:    Size  Location     Type
 12071 ;;  style           1    wreg     unsigned char 
 12072 ;; Auto vars:     Size  Location     Type
 12073 ;;  style           1    5[COMMON] unsigned char 
 12074 ;; Return value:  Size  Location     Type
 12075 ;;                  1    wreg      void 
 12076 ;; Registers used:
 12077 ;;		wreg, status,2, status,0, pclath, cstack
 12078 ;; Tracked objects:
 12079 ;;		On entry : 0/0
 12080 ;;		On exit  : 0/0
 12081 ;;		Unchanged: 0/0
 12082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12087 ;;Total ram usage:        3 bytes
 12088 ;; Hardware stack levels used:    1
 12089 ;; Hardware stack levels required when called:    2
 12090 ;; This function calls:
 12091 ;;		_LCD_Cmd
 12092 ;;		_LCD_Port
 12093 ;; This function is called by:
 12094 ;;		_SYSTEM_Initialize
 12095 ;; This function uses a non-reentrant model
 12096 ;;
 12097                           
 12098                           
 12099                           ;psect for function _LCD_Init
 12100  09AF                     _LCD_Init:	
 12101                           
 12102                           ;incstack = 0
 12103                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 12104                           ;LCD_Init@style stored from wreg
 12105  09AF  00F5               	movwf	LCD_Init@style
 12106                           
 12107                           ;lcd.c: 157: LCD_Port(0x00);
 12108  09B0  3000               	movlw	0
 12109  09B1  3196  2679  3189   	fcall	_LCD_Port
 12110                           
 12111                           ;lcd.c: 159: _delay((unsigned long)((100)*(32000000/4000.0)));
 12112  09B4  3005               	movlw	5
 12113  09B5  00F4               	movwf	??_LCD_Init+1
 12114  09B6  300F               	movlw	15
 12115  09B7  00F3               	movwf	??_LCD_Init
 12116  09B8  30F1               	movlw	241
 12117  09B9                     u4057:	
 12118  09B9  0B89               	decfsz	9,f
 12119  09BA  29B9               	goto	u4057
 12120  09BB  0BF3               	decfsz	??_LCD_Init,f
 12121  09BC  29B9               	goto	u4057
 12122  09BD  0BF4               	decfsz	??_LCD_Init+1,f
 12123  09BE  29B9               	goto	u4057
 12124  09BF  0000               	nop
 12125                           
 12126                           ;lcd.c: 161: LCD_Cmd(0x03);
 12127  09C0  3003               	movlw	3
 12128  09C1  3195  25FE  3189   	fcall	_LCD_Cmd
 12129                           
 12130                           ;lcd.c: 163: _delay((unsigned long)((10)*(32000000/4000.0)));
 12131  09C4  3068               	movlw	104
 12132  09C5  00F3               	movwf	??_LCD_Init
 12133  09C6  30E4               	movlw	228
 12134  09C7                     u4067:	
 12135  09C7  0B89               	decfsz	9,f
 12136  09C8  29C7               	goto	u4067
 12137  09C9  0BF3               	decfsz	??_LCD_Init,f
 12138  09CA  29C7               	goto	u4067
 12139  09CB  3200               	nop2
 12140                           
 12141                           ;lcd.c: 165: LCD_Cmd(0x03);
 12142  09CC  3003               	movlw	3
 12143  09CD  3195  25FE  3189   	fcall	_LCD_Cmd
 12144                           
 12145                           ;lcd.c: 167: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12146  09D0  30C0               	movlw	192
 12147  09D1                     u4077:	
 12148  09D1  3200               	nop2
 12149  09D2  0B89               	decfsz	9,f
 12150  09D3  29D1               	goto	u4077
 12151                           
 12152                           ;lcd.c: 169: LCD_Cmd(0x03);
 12153  09D4  3003               	movlw	3
 12154  09D5  3195  25FE  3189   	fcall	_LCD_Cmd
 12155                           
 12156                           ;lcd.c: 171: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12157  09D8  30C0               	movlw	192
 12158  09D9                     u4087:	
 12159  09D9  3200               	nop2
 12160  09DA  0B89               	decfsz	9,f
 12161  09DB  29D9               	goto	u4087
 12162                           
 12163                           ;lcd.c: 173: LCD_Cmd(0x02);
 12164  09DC  3002               	movlw	2
 12165  09DD  3195  25FE  3189   	fcall	_LCD_Cmd
 12166                           
 12167                           ;lcd.c: 175: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12168  09E0  30C0               	movlw	192
 12169  09E1                     u4097:	
 12170  09E1  3200               	nop2
 12171  09E2  0B89               	decfsz	9,f
 12172  09E3  29E1               	goto	u4097
 12173                           
 12174                           ;lcd.c: 177: LCD_Cmd(0x2);
 12175  09E4  3002               	movlw	2
 12176  09E5  3195  25FE  3189   	fcall	_LCD_Cmd
 12177                           
 12178                           ;lcd.c: 179: LCD_Cmd(0x8);
 12179  09E8  3008               	movlw	8
 12180  09E9  3195  25FE  3189   	fcall	_LCD_Cmd
 12181                           
 12182                           ;lcd.c: 181: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12183  09EC  30C0               	movlw	192
 12184  09ED                     u4107:	
 12185  09ED  3200               	nop2
 12186  09EE  0B89               	decfsz	9,f
 12187  09EF  29ED               	goto	u4107
 12188                           
 12189                           ;lcd.c: 183: LCD_Cmd(0x0);
 12190  09F0  3000               	movlw	0
 12191  09F1  3195  25FE  3189   	fcall	_LCD_Cmd
 12192                           
 12193                           ;lcd.c: 185: LCD_Cmd(0x8);
 12194  09F4  3008               	movlw	8
 12195  09F5  3195  25FE  3189   	fcall	_LCD_Cmd
 12196                           
 12197                           ;lcd.c: 187: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12198  09F8  30C0               	movlw	192
 12199  09F9                     u4117:	
 12200  09F9  3200               	nop2
 12201  09FA  0B89               	decfsz	9,f
 12202  09FB  29F9               	goto	u4117
 12203                           
 12204                           ;lcd.c: 189: LCD_Cmd(0x0);
 12205  09FC  3000               	movlw	0
 12206  09FD  3195  25FE  3189   	fcall	_LCD_Cmd
 12207                           
 12208                           ;lcd.c: 191: LCD_Cmd(0x1);
 12209  0A00  3001               	movlw	1
 12210  0A01  3195  25FE  3189   	fcall	_LCD_Cmd
 12211                           
 12212                           ;lcd.c: 193: _delay((unsigned long)((5)*(32000000/4000.0)));
 12213  0A04  3034               	movlw	52
 12214  0A05  00F3               	movwf	??_LCD_Init
 12215  0A06  30F2               	movlw	242
 12216  0A07                     u4127:	
 12217  0A07  0B89               	decfsz	9,f
 12218  0A08  2A07               	goto	u4127
 12219  0A09  0BF3               	decfsz	??_LCD_Init,f
 12220  0A0A  2A07               	goto	u4127
 12221                           
 12222                           ;lcd.c: 195: LCD_Cmd(0x0);
 12223  0A0B  3000               	movlw	0
 12224  0A0C  3195  25FE  3189   	fcall	_LCD_Cmd
 12225                           
 12226                           ;lcd.c: 197: LCD_Cmd(0x6);
 12227  0A0F  3006               	movlw	6
 12228  0A10  3195  25FE  3189   	fcall	_LCD_Cmd
 12229                           
 12230                           ;lcd.c: 199: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12231  0A13  30C0               	movlw	192
 12232  0A14                     u4137:	
 12233  0A14  3200               	nop2
 12234  0A15  0B89               	decfsz	9,f
 12235  0A16  2A14               	goto	u4137
 12236                           
 12237                           ;lcd.c: 201: LCD_Cmd(0x0);
 12238  0A17  3000               	movlw	0
 12239  0A18  3195  25FE  3189   	fcall	_LCD_Cmd
 12240                           
 12241                           ;lcd.c: 203: LCD_Cmd((uint8_t)(0xc|style));
 12242  0A1B  0875               	movf	LCD_Init@style,w
 12243  0A1C  380C               	iorlw	12
 12244  0A1D  3195  25FE  3189   	fcall	_LCD_Cmd
 12245                           
 12246                           ;lcd.c: 205: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12247  0A20  30C0               	movlw	192
 12248  0A21                     u4147:	
 12249  0A21  3200               	nop2
 12250  0A22  0B89               	decfsz	9,f
 12251  0A23  2A21               	goto	u4147
 12252  0A24  0008               	return
 12253  0A25                     __end_of_LCD_Init:	
 12254                           
 12255                           	psect	text31
 12256  15CA                     __ptext31:	
 12257 ;; *************** function _LCD_Clear *****************
 12258 ;; Defined at:
 12259 ;;		line 75 in file "lcd.c"
 12260 ;; Parameters:    Size  Location     Type
 12261 ;;		None
 12262 ;; Auto vars:     Size  Location     Type
 12263 ;;		None
 12264 ;; Return value:  Size  Location     Type
 12265 ;;                  1    wreg      void 
 12266 ;; Registers used:
 12267 ;;		wreg, status,2, status,0, pclath, cstack
 12268 ;; Tracked objects:
 12269 ;;		On entry : 0/0
 12270 ;;		On exit  : 0/0
 12271 ;;		Unchanged: 0/0
 12272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12277 ;;Total ram usage:        0 bytes
 12278 ;; Hardware stack levels used:    1
 12279 ;; Hardware stack levels required when called:    2
 12280 ;; This function calls:
 12281 ;;		_LCD_Cmd
 12282 ;; This function is called by:
 12283 ;;		_menuChoice
 12284 ;;		_SYSTEM_Initialize
 12285 ;;		_main
 12286 ;; This function uses a non-reentrant model
 12287 ;;
 12288                           
 12289                           
 12290                           ;psect for function _LCD_Clear
 12291  15CA                     _LCD_Clear:	
 12292                           
 12293                           ;lcd.c: 77: LCD_Cmd(0);
 12294                           
 12295                           ;incstack = 0
 12296                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 12297  15CA  3000               	movlw	0
 12298  15CB  3195  25FE  3195   	fcall	_LCD_Cmd
 12299                           
 12300                           ;lcd.c: 78: LCD_Cmd(1);
 12301  15CE  3001               	movlw	1
 12302  15CF  3195  25FE         	fcall	_LCD_Cmd
 12303  15D1  0008               	return
 12304  15D2                     __end_of_LCD_Clear:	
 12305                           
 12306                           	psect	text32
 12307  173A                     __ptext32:	
 12308 ;; *************** function _InitCustomChars *****************
 12309 ;; Defined at:
 12310 ;;		line 29 in file "lcd.c"
 12311 ;; Parameters:    Size  Location     Type
 12312 ;;		None
 12313 ;; Auto vars:     Size  Location     Type
 12314 ;;  i               1    6[COMMON] unsigned char 
 12315 ;; Return value:  Size  Location     Type
 12316 ;;                  1    wreg      void 
 12317 ;; Registers used:
 12318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12319 ;; Tracked objects:
 12320 ;;		On entry : 0/0
 12321 ;;		On exit  : 0/0
 12322 ;;		Unchanged: 0/0
 12323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12328 ;;Total ram usage:        2 bytes
 12329 ;; Hardware stack levels used:    1
 12330 ;; Hardware stack levels required when called:    2
 12331 ;; This function calls:
 12332 ;;		_LCD_Cmd
 12333 ;;		_LCD_Write_Char
 12334 ;; This function is called by:
 12335 ;;		_SYSTEM_Initialize
 12336 ;; This function uses a non-reentrant model
 12337 ;;
 12338                           
 12339                           
 12340                           ;psect for function _InitCustomChars
 12341  173A                     _InitCustomChars:	
 12342                           
 12343                           ;lcd.c: 31: uint8_t i;
 12344                           ;lcd.c: 32: LCD_Cmd(0x04);
 12345                           
 12346                           ;incstack = 0
 12347                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12348  173A  3004               	movlw	4
 12349  173B  3195  25FE  3197   	fcall	_LCD_Cmd
 12350                           
 12351                           ;lcd.c: 33: LCD_Cmd(0x00);
 12352  173E  3000               	movlw	0
 12353  173F  3195  25FE  3197   	fcall	_LCD_Cmd
 12354                           
 12355                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12356  1742  01F6               	clrf	InitCustomChars@i
 12357  1743  3010               	movlw	16
 12358  1744  0276               	subwf	InitCustomChars@i,w
 12359  1745  1803               	btfsc	3,0
 12360  1746  2F58               	goto	l2585
 12361  1747                     l2579:	
 12362                           
 12363                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12364  1747  0876               	movf	InitCustomChars@i,w
 12365  1748  3E3D               	addlw	(low (___cgram| (0+256)))& (0+255)
 12366  1749  0086               	movwf	6
 12367  174A  3001               	movlw	1	; select bank2/3
 12368  174B  0087               	movwf	7
 12369  174C  0801               	movf	1,w
 12370  174D  3197  2760  3197   	fcall	_LCD_Write_Char
 12371  1750  3001               	movlw	1
 12372  1751  00F5               	movwf	??_InitCustomChars
 12373  1752  0875               	movf	??_InitCustomChars,w
 12374  1753  07F6               	addwf	InitCustomChars@i,f
 12375  1754  3010               	movlw	16
 12376  1755  0276               	subwf	InitCustomChars@i,w
 12377  1756  1C03               	skipc
 12378  1757  2F47               	goto	l2579
 12379  1758                     l2585:	
 12380                           
 12381                           ;lcd.c: 36: LCD_Cmd(0);
 12382  1758  3000               	movlw	0
 12383  1759  3195  25FE  3197   	fcall	_LCD_Cmd
 12384                           
 12385                           ;lcd.c: 37: LCD_Cmd(2);
 12386  175C  3002               	movlw	2
 12387  175D  3195  25FE         	fcall	_LCD_Cmd
 12388  175F  0008               	return
 12389  1760                     __end_of_InitCustomChars:	
 12390                           
 12391                           	psect	text33
 12392  1760                     __ptext33:	
 12393 ;; *************** function _LCD_Write_Char *****************
 12394 ;; Defined at:
 12395 ;;		line 224 in file "lcd.c"
 12396 ;; Parameters:    Size  Location     Type
 12397 ;;  a               1    wreg     const unsigned char 
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;  a               1    4[COMMON] const unsigned char 
 12400 ;;  y               1    3[COMMON] unsigned char 
 12401 ;;  temp            1    2[COMMON] unsigned char 
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  1    wreg      void 
 12404 ;; Registers used:
 12405 ;;		wreg, status,2, status,0, pclath, cstack
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;Total ram usage:        4 bytes
 12416 ;; Hardware stack levels used:    1
 12417 ;; Hardware stack levels required when called:    1
 12418 ;; This function calls:
 12419 ;;		_LCD_Port
 12420 ;; This function is called by:
 12421 ;;		_InitCustomChars
 12422 ;;		_LCD_Write_String
 12423 ;;		_LCD_Write_Int
 12424 ;;		_menuChoice
 12425 ;;		_main
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           
 12430                           ;psect for function _LCD_Write_Char
 12431  1760                     _LCD_Write_Char:	
 12432                           
 12433                           ;incstack = 0
 12434                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12435                           ;LCD_Write_Char@a stored from wreg
 12436  1760  00F4               	movwf	LCD_Write_Char@a
 12437                           
 12438                           ;lcd.c: 226: uint8_t temp,y;
 12439                           ;lcd.c: 227: temp = a&0x0F;
 12440  1761  0874               	movf	LCD_Write_Char@a,w
 12441  1762  390F               	andlw	15
 12442  1763  00F1               	movwf	??_LCD_Write_Char
 12443  1764  0871               	movf	??_LCD_Write_Char,w
 12444  1765  00F2               	movwf	LCD_Write_Char@temp
 12445                           
 12446                           ;lcd.c: 228: y = a&0xF0;
 12447  1766  0874               	movf	LCD_Write_Char@a,w
 12448  1767  39F0               	andlw	240
 12449  1768  00F1               	movwf	??_LCD_Write_Char
 12450  1769  0871               	movf	??_LCD_Write_Char,w
 12451  176A  00F3               	movwf	LCD_Write_Char@y
 12452                           
 12453                           ;lcd.c: 229: RA0 = 1;
 12454  176B  0020               	movlb	0	; select bank0
 12455  176C  140C               	bsf	12,0	;volatile
 12456                           
 12457                           ;lcd.c: 230: LCD_Port((uint8_t)(y>>4));
 12458  176D  0873               	movf	LCD_Write_Char@y,w
 12459  176E  00F1               	movwf	??_LCD_Write_Char
 12460  176F  3004               	movlw	4
 12461  1770                     u2525:	
 12462  1770  36F1               	lsrf	??_LCD_Write_Char,f
 12463  1771  0B89               	decfsz	9,f
 12464  1772  2F70               	goto	u2525
 12465  1773  0871               	movf	??_LCD_Write_Char,w
 12466  1774  3196  2679  3197   	fcall	_LCD_Port
 12467                           
 12468                           ;lcd.c: 231: RA2 = 1;
 12469  1777  0020               	movlb	0	; select bank0
 12470  1778  150C               	bsf	12,2	;volatile
 12471                           
 12472                           ;lcd.c: 232: RA2 = 0;
 12473  1779  110C               	bcf	12,2	;volatile
 12474                           
 12475                           ;lcd.c: 233: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12476  177A  306A               	movlw	106
 12477  177B                     u4157:	
 12478  177B  0B89               	decfsz	9,f
 12479  177C  2F7B               	goto	u4157
 12480  177D  3200               	nop2
 12481                           
 12482                           ;lcd.c: 234: LCD_Port(temp);
 12483  177E  0872               	movf	LCD_Write_Char@temp,w
 12484  177F  3196  2679  3197   	fcall	_LCD_Port
 12485                           
 12486                           ;lcd.c: 235: RA2 = 1;
 12487  1782  0020               	movlb	0	; select bank0
 12488  1783  150C               	bsf	12,2	;volatile
 12489                           
 12490                           ;lcd.c: 236: RA2 = 0;
 12491  1784  110C               	bcf	12,2	;volatile
 12492                           
 12493                           ;lcd.c: 237: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12494  1785  306A               	movlw	106
 12495  1786                     u4167:	
 12496  1786  0B89               	decfsz	9,f
 12497  1787  2F86               	goto	u4167
 12498  1788  3200               	nop2
 12499  1789  0008               	return
 12500  178A                     __end_of_LCD_Write_Char:	
 12501                           
 12502                           	psect	text34
 12503  15FE                     __ptext34:	
 12504 ;; *************** function _LCD_Cmd *****************
 12505 ;; Defined at:
 12506 ;;		line 65 in file "lcd.c"
 12507 ;; Parameters:    Size  Location     Type
 12508 ;;  a               1    wreg     unsigned char 
 12509 ;; Auto vars:     Size  Location     Type
 12510 ;;  a               1    2[COMMON] unsigned char 
 12511 ;; Return value:  Size  Location     Type
 12512 ;;                  1    wreg      void 
 12513 ;; Registers used:
 12514 ;;		wreg, status,2, status,0, pclath, cstack
 12515 ;; Tracked objects:
 12516 ;;		On entry : 0/0
 12517 ;;		On exit  : 0/0
 12518 ;;		Unchanged: 0/0
 12519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12524 ;;Total ram usage:        2 bytes
 12525 ;; Hardware stack levels used:    1
 12526 ;; Hardware stack levels required when called:    1
 12527 ;; This function calls:
 12528 ;;		_LCD_Port
 12529 ;; This function is called by:
 12530 ;;		_InitCustomChars
 12531 ;;		_LCD_Clear
 12532 ;;		_LCD_Set_Cursor
 12533 ;;		_LCD_Init
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           
 12538                           ;psect for function _LCD_Cmd
 12539  15FE                     _LCD_Cmd:	
 12540                           
 12541                           ;incstack = 0
 12542                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12543                           ;LCD_Cmd@a stored from wreg
 12544  15FE  00F2               	movwf	LCD_Cmd@a
 12545                           
 12546                           ;lcd.c: 67: RA0 = 0;
 12547  15FF  0020               	movlb	0	; select bank0
 12548  1600  100C               	bcf	12,0	;volatile
 12549                           
 12550                           ;lcd.c: 68: LCD_Port(a);
 12551  1601  0872               	movf	LCD_Cmd@a,w
 12552  1602  3196  2679  3195   	fcall	_LCD_Port
 12553                           
 12554                           ;lcd.c: 69: RA2 = 1;
 12555  1605  0020               	movlb	0	; select bank0
 12556  1606  150C               	bsf	12,2	;volatile
 12557                           
 12558                           ;lcd.c: 70: RA2 = 0;
 12559  1607  110C               	bcf	12,2	;volatile
 12560                           
 12561                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12562  1608  302A               	movlw	42
 12563  1609  00F1               	movwf	??_LCD_Cmd
 12564  160A  308E               	movlw	142
 12565  160B                     u4177:	
 12566  160B  0B89               	decfsz	9,f
 12567  160C  2E0B               	goto	u4177
 12568  160D  0BF1               	decfsz	??_LCD_Cmd,f
 12569  160E  2E0B               	goto	u4177
 12570  160F  0008               	return
 12571  1610                     __end_of_LCD_Cmd:	
 12572                           
 12573                           	psect	text35
 12574  1679                     __ptext35:	
 12575 ;; *************** function _LCD_Port *****************
 12576 ;; Defined at:
 12577 ;;		line 41 in file "lcd.c"
 12578 ;; Parameters:    Size  Location     Type
 12579 ;;  a               1    wreg     unsigned char 
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;  a               1    0[COMMON] unsigned char 
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  1    wreg      void 
 12584 ;; Registers used:
 12585 ;;		wreg
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;Total ram usage:        1 bytes
 12596 ;; Hardware stack levels used:    1
 12597 ;; This function calls:
 12598 ;;		Nothing
 12599 ;; This function is called by:
 12600 ;;		_LCD_Cmd
 12601 ;;		_LCD_Init
 12602 ;;		_LCD_Write_Char
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606                           
 12607                           ;psect for function _LCD_Port
 12608  1679                     _LCD_Port:	
 12609                           
 12610                           ;incstack = 0
 12611                           ; Regs used in _LCD_Port: [wreg]
 12612                           ;LCD_Port@a stored from wreg
 12613  1679  00F0               	movwf	LCD_Port@a
 12614                           
 12615                           ;lcd.c: 43: if(a & 1)
 12616  167A  1C70               	btfss	LCD_Port@a,0
 12617  167B  2E7F               	goto	l97
 12618                           
 12619                           ;lcd.c: 44: RA7 = 1;
 12620  167C  0020               	movlb	0	; select bank0
 12621  167D  178C               	bsf	12,7	;volatile
 12622  167E  2E81               	goto	l2219
 12623  167F                     l97:	
 12624                           
 12625                           ;lcd.c: 45: else
 12626                           ;lcd.c: 46: RA7 = 0;
 12627  167F  0020               	movlb	0	; select bank0
 12628  1680  138C               	bcf	12,7	;volatile
 12629  1681                     l2219:	
 12630                           
 12631                           ;lcd.c: 48: if(a & 2)
 12632  1681  1CF0               	btfss	LCD_Port@a,1
 12633  1682  2E85               	goto	l99
 12634                           
 12635                           ;lcd.c: 49: RA6 = 1;
 12636  1683  170C               	bsf	12,6	;volatile
 12637  1684  2E86               	goto	l2223
 12638  1685                     l99:	
 12639                           
 12640                           ;lcd.c: 50: else
 12641                           ;lcd.c: 51: RA6 = 0;
 12642  1685  130C               	bcf	12,6	;volatile
 12643  1686                     l2223:	
 12644                           
 12645                           ;lcd.c: 53: if(a & 4)
 12646  1686  1D70               	btfss	LCD_Port@a,2
 12647  1687  2E8A               	goto	l101
 12648                           
 12649                           ;lcd.c: 54: RC0 = 1;
 12650  1688  140E               	bsf	14,0	;volatile
 12651  1689  2E8B               	goto	l2227
 12652  168A                     l101:	
 12653                           
 12654                           ;lcd.c: 55: else
 12655                           ;lcd.c: 56: RC0 = 0;
 12656  168A  100E               	bcf	14,0	;volatile
 12657  168B                     l2227:	
 12658                           
 12659                           ;lcd.c: 58: if(a & 8)
 12660  168B  1DF0               	btfss	LCD_Port@a,3
 12661  168C  2E8F               	goto	l103
 12662                           
 12663                           ;lcd.c: 59: RC1 = 1;
 12664  168D  148E               	bsf	14,1	;volatile
 12665  168E  0008               	return
 12666  168F                     l103:	
 12667                           
 12668                           ;lcd.c: 60: else
 12669                           ;lcd.c: 61: RC1 = 0;
 12670  168F  108E               	bcf	14,1	;volatile
 12671  1690  0008               	return
 12672  1691                     __end_of_LCD_Port:	
 12673                           
 12674                           	psect	text36
 12675  1691                     __ptext36:	
 12676 ;; *************** function _ADCC_Initialize *****************
 12677 ;; Defined at:
 12678 ;;		line 72 in file "adc.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;		None
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;		None
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  1    wreg      void 
 12685 ;; Registers used:
 12686 ;;		wreg, status,2
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12696 ;;Total ram usage:        0 bytes
 12697 ;; Hardware stack levels used:    1
 12698 ;; This function calls:
 12699 ;;		Nothing
 12700 ;; This function is called by:
 12701 ;;		_SYSTEM_Initialize
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           
 12705                           
 12706                           ;psect for function _ADCC_Initialize
 12707  1691                     _ADCC_Initialize:	
 12708                           
 12709                           ;adc.c: 74: ADCON1 = 0x00;
 12710                           
 12711                           ;incstack = 0
 12712                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12713  1691  0021               	movlb	1	; select bank1
 12714  1692  0194               	clrf	20	;volatile
 12715                           
 12716                           ;adc.c: 76: ADCON2 = 0x00;
 12717  1693  0195               	clrf	21	;volatile
 12718                           
 12719                           ;adc.c: 78: ADCON3 = 0x00;
 12720  1694  0196               	clrf	22	;volatile
 12721                           
 12722                           ;adc.c: 80: ADACT = 0x00;
 12723  1695  0199               	clrf	25	;volatile
 12724                           
 12725                           ;adc.c: 82: ADSTAT = 0x00;
 12726  1696  0197               	clrf	23	;volatile
 12727                           
 12728                           ;adc.c: 85: ADCLK = 0x3F;
 12729  1697  303F               	movlw	63
 12730  1698  0098               	movwf	24	;volatile
 12731                           
 12732                           ;adc.c: 93: ADREF = 0x00;
 12733  1699  019A               	clrf	26	;volatile
 12734                           
 12735                           ;adc.c: 95: ADCAP = 0x00;
 12736  169A  019B               	clrf	27	;volatile
 12737                           
 12738                           ;adc.c: 98: ADPRE = 0x07;
 12739  169B  3007               	movlw	7
 12740  169C  009C               	movwf	28	;volatile
 12741                           
 12742                           ;adc.c: 100: ADACQ = 0x00;
 12743  169D  019D               	clrf	29	;volatile
 12744                           
 12745                           ;adc.c: 102: ADPCH = 0x00;
 12746  169E  019E               	clrf	30	;volatile
 12747                           
 12748                           ;adc.c: 104: ADRPT = 0x00;
 12749  169F  0022               	movlb	2	; select bank2
 12750  16A0  018D               	clrf	13	;volatile
 12751                           
 12752                           ;adc.c: 106: ADLTHL = 0x00;
 12753  16A1  018E               	clrf	14	;volatile
 12754                           
 12755                           ;adc.c: 108: ADLTHH = 0x00;
 12756  16A2  018F               	clrf	15	;volatile
 12757                           
 12758                           ;adc.c: 110: ADUTHL = 0x00;
 12759  16A3  0190               	clrf	16	;volatile
 12760                           
 12761                           ;adc.c: 112: ADUTHH = 0x00;
 12762  16A4  0191               	clrf	17	;volatile
 12763                           
 12764                           ;adc.c: 114: ADSTPTL = 0x00;
 12765  16A5  0192               	clrf	18	;volatile
 12766                           
 12767                           ;adc.c: 116: ADSTPTH = 0x00;
 12768  16A6  0193               	clrf	19	;volatile
 12769                           
 12770                           ;adc.c: 118: ADCON0 = 0x84;
 12771  16A7  3084               	movlw	132
 12772  16A8  0021               	movlb	1	; select bank1
 12773  16A9  0093               	movwf	19	;volatile
 12774  16AA  0008               	return
 12775  16AB                     __end_of_ADCC_Initialize:	
 12776                           
 12777                           	psect	text37
 12778  164D                     __ptext37:	
 12779 ;; *************** function _PWM6_LoadDutyValue *****************
 12780 ;; Defined at:
 12781 ;;		line 25 in file "pwm.c"
 12782 ;; Parameters:    Size  Location     Type
 12783 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12784 ;; Auto vars:     Size  Location     Type
 12785 ;;		None
 12786 ;; Return value:  Size  Location     Type
 12787 ;;                  1    wreg      void 
 12788 ;; Registers used:
 12789 ;;		wreg, status,2, status,0
 12790 ;; Tracked objects:
 12791 ;;		On entry : 0/0
 12792 ;;		On exit  : 0/0
 12793 ;;		Unchanged: 0/0
 12794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12798 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12799 ;;Total ram usage:        4 bytes
 12800 ;; Hardware stack levels used:    1
 12801 ;; This function calls:
 12802 ;;		Nothing
 12803 ;; This function is called by:
 12804 ;;		_main
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           
 12809                           ;psect for function _PWM6_LoadDutyValue
 12810  164D                     _PWM6_LoadDutyValue:	
 12811                           
 12812                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12813                           
 12814                           ;incstack = 0
 12815                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12816  164D  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12817  164E  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12818  164F  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12819  1650  00F2               	movwf	??_PWM6_LoadDutyValue
 12820  1651  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12821  1652  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12822  1653  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12823  1654  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12824  1655  0872               	movf	??_PWM6_LoadDutyValue,w
 12825  1656  0027               	movlb	7	; select bank7
 12826  1657  008D               	movwf	13	;volatile
 12827                           
 12828                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12829  1658  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12830  1659  3903               	andlw	3
 12831  165A  00F2               	movwf	??_PWM6_LoadDutyValue
 12832  165B  3005               	movlw	5
 12833  165C                     u3815:	
 12834  165C  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12835  165D  3EFF               	addlw	-1
 12836  165E  1D03               	skipz
 12837  165F  2E5C               	goto	u3815
 12838  1660  3572               	lslf	??_PWM6_LoadDutyValue,w
 12839  1661  008C               	movwf	12	;volatile
 12840  1662  0008               	return
 12841  1663                     __end_of_PWM6_LoadDutyValue:	
 12842                           
 12843                           	psect	text38
 12844  0192                     __ptext38:	
 12845 ;; *************** function _PID_Calculate *****************
 12846 ;; Defined at:
 12847 ;;		line 22 in file "pid.c"
 12848 ;; Parameters:    Size  Location     Type
 12849 ;;  setpoint        2    6[COMMON] int 
 12850 ;;  temp            2    8[COMMON] int 
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;		None
 12853 ;; Return value:  Size  Location     Type
 12854 ;;                  2    6[COMMON] int 
 12855 ;; Registers used:
 12856 ;;		wreg, status,2, status,0, pclath, cstack
 12857 ;; Tracked objects:
 12858 ;;		On entry : 0/0
 12859 ;;		On exit  : 0/0
 12860 ;;		Unchanged: 0/0
 12861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12866 ;;Total ram usage:        6 bytes
 12867 ;; Hardware stack levels used:    1
 12868 ;; Hardware stack levels required when called:    1
 12869 ;; This function calls:
 12870 ;;		___wmul
 12871 ;; This function is called by:
 12872 ;;		_main
 12873 ;; This function uses a non-reentrant model
 12874 ;;
 12875                           
 12876                           
 12877                           ;psect for function _PID_Calculate
 12878  0192                     _PID_Calculate:	
 12879                           
 12880                           ;pid.c: 24: loop+=1;
 12881                           
 12882                           ;incstack = 0
 12883                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12884  0192  3001               	movlw	1
 12885  0193  00FA               	movwf	??_PID_Calculate
 12886  0194  087A               	movf	??_PID_Calculate,w
 12887  0195  0021               	movlb	1	; select bank1
 12888  0196  07DF               	addwf	pid@loop^(0+128),f
 12889                           
 12890                           ;pid.c: 26: error = setpoint - temp;
 12891  0197  0978               	comf	PID_Calculate@temp,w
 12892  0198  00FA               	movwf	??_PID_Calculate
 12893  0199  0979               	comf	PID_Calculate@temp+1,w
 12894  019A  00FB               	movwf	??_PID_Calculate+1
 12895  019B  0AFA               	incf	??_PID_Calculate,f
 12896  019C  1903               	skipnz
 12897  019D  0AFB               	incf	??_PID_Calculate+1,f
 12898  019E  0876               	movf	PID_Calculate@setpoint,w
 12899  019F  077A               	addwf	??_PID_Calculate,w
 12900  01A0  0020               	movlb	0	; select bank0
 12901  01A1  00EA               	movwf	_error
 12902  01A2  0877               	movf	PID_Calculate@setpoint+1,w
 12903  01A3  3D7B               	addwfc	??_PID_Calculate+1,w
 12904  01A4  00EB               	movwf	_error+1
 12905                           
 12906                           ;pid.c: 28: errorValue = error * Kp;
 12907  01A5  086B               	movf	_error+1,w
 12908  01A6  00F1               	movwf	___wmul@multiplier+1
 12909  01A7  086A               	movf	_error,w
 12910  01A8  00F0               	movwf	___wmul@multiplier
 12911  01A9  0021               	movlb	1	; select bank1
 12912  01AA  086D               	movf	(_Kp+1)^(0+128),w
 12913  01AB  00F3               	movwf	___wmul@multiplicand+1
 12914  01AC  086C               	movf	_Kp^(0+128),w
 12915  01AD  00F2               	movwf	___wmul@multiplicand
 12916  01AE  3196  26C5  3181   	fcall	___wmul
 12917  01B1  0871               	movf	?___wmul+1,w
 12918  01B2  0021               	movlb	1	; select bank1
 12919  01B3  00D6               	movwf	(_errorValue+1)^(0+128)
 12920  01B4  0870               	movf	?___wmul,w
 12921  01B5  00D5               	movwf	_errorValue^(0+128)
 12922                           
 12923                           ;pid.c: 30: if(errorValue>pidMaxOutput)errorValue=pidMaxOutput;
 12924  01B6  0867               	movf	(_pidMaxOutput+1)^(0+128),w
 12925  01B7  3A80               	xorlw	128
 12926  01B8  00FA               	movwf	??_PID_Calculate
 12927  01B9  0856               	movf	(_errorValue+1)^(0+128),w
 12928  01BA  3A80               	xorlw	128
 12929  01BB  027A               	subwf	??_PID_Calculate,w
 12930  01BC  1D03               	skipz
 12931  01BD  29C0               	goto	u3665
 12932  01BE  0855               	movf	_errorValue^(0+128),w
 12933  01BF  0266               	subwf	_pidMaxOutput^(0+128),w
 12934  01C0                     u3665:	
 12935  01C0  1803               	skipnc
 12936  01C1  29C7               	goto	l266
 12937  01C2  0021               	movlb	1	; select bank1
 12938  01C3  0867               	movf	(_pidMaxOutput+1)^(0+128),w
 12939  01C4  00D6               	movwf	(_errorValue+1)^(0+128)
 12940  01C5  0866               	movf	_pidMaxOutput^(0+128),w
 12941  01C6  00D5               	movwf	_errorValue^(0+128)
 12942  01C7                     l266:	
 12943                           
 12944                           ;pid.c: 31: if(errorValue<-1023)errorValue=-1023;
 12945  01C7  0021               	movlb	1	; select bank1
 12946  01C8  0856               	movf	(_errorValue+1)^(0+128),w
 12947  01C9  3A80               	xorlw	128
 12948  01CA  00FA               	movwf	??_PID_Calculate
 12949  01CB  307C               	movlw	124
 12950  01CC  027A               	subwf	??_PID_Calculate,w
 12951  01CD  1D03               	skipz
 12952  01CE  29D1               	goto	u3675
 12953  01CF  3001               	movlw	1
 12954  01D0  0255               	subwf	_errorValue^(0+128),w
 12955  01D1                     u3675:	
 12956  01D1  1803               	skipnc
 12957  01D2  29D8               	goto	l3137
 12958  01D3  3001               	movlw	1
 12959  01D4  0021               	movlb	1	; select bank1
 12960  01D5  00D5               	movwf	_errorValue^(0+128)
 12961  01D6  30FC               	movlw	252
 12962  01D7  00D6               	movwf	(_errorValue^(0+128)+1)
 12963  01D8                     l3137:	
 12964                           
 12965                           ;pid.c: 34: derivativeValue=(error-D_PrevError)*Kd;
 12966  01D8  0021               	movlb	1	; select bank1
 12967  01D9  094B               	comf	_D_PrevError^(0+128),w
 12968  01DA  00FA               	movwf	??_PID_Calculate
 12969  01DB  094C               	comf	(_D_PrevError+1)^(0+128),w
 12970  01DC  00FB               	movwf	??_PID_Calculate+1
 12971  01DD  0AFA               	incf	??_PID_Calculate,f
 12972  01DE  1903               	skipnz
 12973  01DF  0AFB               	incf	??_PID_Calculate+1,f
 12974  01E0  0020               	movlb	0	; select bank0
 12975  01E1  086A               	movf	_error,w
 12976  01E2  077A               	addwf	??_PID_Calculate,w
 12977  01E3  00F0               	movwf	___wmul@multiplier
 12978  01E4  086B               	movf	_error+1,w
 12979  01E5  3D7B               	addwfc	??_PID_Calculate+1,w
 12980  01E6  00F1               	movwf	___wmul@multiplier+1
 12981  01E7  0021               	movlb	1	; select bank1
 12982  01E8  0869               	movf	(_Kd+1)^(0+128),w
 12983  01E9  00F3               	movwf	___wmul@multiplicand+1
 12984  01EA  0868               	movf	_Kd^(0+128),w
 12985  01EB  00F2               	movwf	___wmul@multiplicand
 12986  01EC  3196  26C5  3181   	fcall	___wmul
 12987  01EF  0871               	movf	?___wmul+1,w
 12988  01F0  0021               	movlb	1	; select bank1
 12989  01F1  00D4               	movwf	(_derivativeValue+1)^(0+128)
 12990  01F2  0870               	movf	?___wmul,w
 12991  01F3  00D3               	movwf	_derivativeValue^(0+128)
 12992                           
 12993                           ;pid.c: 35: D_PrevError = error;
 12994  01F4  0020               	movlb	0	; select bank0
 12995  01F5  086B               	movf	_error+1,w
 12996  01F6  0021               	movlb	1	; select bank1
 12997  01F7  00CC               	movwf	(_D_PrevError+1)^(0+128)
 12998  01F8  0020               	movlb	0	; select bank0
 12999  01F9  086A               	movf	_error,w
 13000  01FA  0021               	movlb	1	; select bank1
 13001  01FB  00CB               	movwf	_D_PrevError^(0+128)
 13002                           
 13003                           ;pid.c: 40: if(loop>2)
 13004  01FC  3003               	movlw	3
 13005  01FD  025F               	subwf	pid@loop^(0+128),w
 13006  01FE  1C03               	skipc
 13007  01FF  2AFB               	goto	l3183
 13008                           
 13009                           ;pid.c: 41: {
 13010                           ;pid.c: 42: if(error>=2)error=2;
 13011  0200  0020               	movlb	0	; select bank0
 13012  0201  086B               	movf	_error+1,w
 13013  0202  3A80               	xorlw	128
 13014  0203  00FA               	movwf	??_PID_Calculate
 13015  0204  3080               	movlw	128
 13016  0205  027A               	subwf	??_PID_Calculate,w
 13017  0206  1D03               	skipz
 13018  0207  2A0A               	goto	u3695
 13019  0208  3002               	movlw	2
 13020  0209  026A               	subwf	_error,w
 13021  020A                     u3695:	
 13022  020A  1C03               	skipc
 13023  020B  2A11               	goto	l269
 13024  020C  3002               	movlw	2
 13025  020D  0020               	movlb	0	; select bank0
 13026  020E  00EA               	movwf	_error
 13027  020F  3000               	movlw	0
 13028  0210  00EB               	movwf	_error+1
 13029  0211                     l269:	
 13030                           
 13031                           ;pid.c: 43: if(error<=-2)error=-2;
 13032  0211  0020               	movlb	0	; select bank0
 13033  0212  086B               	movf	_error+1,w
 13034  0213  3A80               	xorlw	128
 13035  0214  00FA               	movwf	??_PID_Calculate
 13036  0215  307F               	movlw	127
 13037  0216  027A               	subwf	??_PID_Calculate,w
 13038  0217  1D03               	skipz
 13039  0218  2A1B               	goto	u3705
 13040  0219  30FF               	movlw	255
 13041  021A  026A               	subwf	_error,w
 13042  021B                     u3705:	
 13043  021B  1803               	skipnc
 13044  021C  2A22               	goto	l3149
 13045  021D  30FE               	movlw	254
 13046  021E  0020               	movlb	0	; select bank0
 13047  021F  00EA               	movwf	_error
 13048  0220  30FF               	movlw	255
 13049  0221  00EB               	movwf	_error+1
 13050  0222                     l3149:	
 13051                           
 13052                           ;pid.c: 46: if(error>=0)
 13053  0222  0020               	movlb	0	; select bank0
 13054  0223  1BEB               	btfsc	_error+1,7
 13055  0224  2A7E               	goto	l3161
 13056                           
 13057                           ;pid.c: 47: {
 13058                           ;pid.c: 48: if(error>=lastError)
 13059  0225  086B               	movf	_error+1,w
 13060  0226  3A80               	xorlw	128
 13061  0227  00FA               	movwf	??_PID_Calculate
 13062  0228  0021               	movlb	1	; select bank1
 13063  0229  0858               	movf	(_lastError+1)^(0+128),w
 13064  022A  3A80               	xorlw	128
 13065  022B  027A               	subwf	??_PID_Calculate,w
 13066  022C  1D03               	skipz
 13067  022D  2A31               	goto	u3725
 13068  022E  0857               	movf	_lastError^(0+128),w
 13069  022F  0020               	movlb	0	; select bank0
 13070  0230  026A               	subwf	_error,w
 13071  0231                     u3725:	
 13072  0231  1C03               	skipc
 13073  0232  2A56               	goto	l3157
 13074                           
 13075                           ;pid.c: 49: {
 13076                           ;pid.c: 50: if(pidIntegrated<pidMaxOutput)pidIntegrated = pidIntegrated + (error * Ki);
 13077  0233  0020               	movlb	0	; select bank0
 13078  0234  0869               	movf	_pidIntegrated+1,w
 13079  0235  3A80               	xorlw	128
 13080  0236  00FA               	movwf	??_PID_Calculate
 13081  0237  0021               	movlb	1	; select bank1
 13082  0238  0867               	movf	(_pidMaxOutput+1)^(0+128),w
 13083  0239  3A80               	xorlw	128
 13084  023A  027A               	subwf	??_PID_Calculate,w
 13085  023B  1D03               	skipz
 13086  023C  2A40               	goto	u3735
 13087  023D  0866               	movf	_pidMaxOutput^(0+128),w
 13088  023E  0020               	movlb	0	; select bank0
 13089  023F  0268               	subwf	_pidIntegrated,w
 13090  0240                     u3735:	
 13091  0240  1803               	skipnc
 13092  0241  2AE5               	goto	l3175
 13093  0242  0020               	movlb	0	; select bank0
 13094  0243  086B               	movf	_error+1,w
 13095  0244  00F1               	movwf	___wmul@multiplier+1
 13096  0245  086A               	movf	_error,w
 13097  0246  00F0               	movwf	___wmul@multiplier
 13098  0247  0021               	movlb	1	; select bank1
 13099  0248  086B               	movf	(_Ki+1)^(0+128),w
 13100  0249  00F3               	movwf	___wmul@multiplicand+1
 13101  024A  086A               	movf	_Ki^(0+128),w
 13102  024B  00F2               	movwf	___wmul@multiplicand
 13103  024C  3196  26C5  3181   	fcall	___wmul
 13104  024F  0020               	movlb	0	; select bank0
 13105  0250  0868               	movf	_pidIntegrated,w
 13106  0251  0770               	addwf	?___wmul,w
 13107  0252  00E8               	movwf	_pidIntegrated
 13108  0253  0869               	movf	_pidIntegrated+1,w
 13109  0254  3D71               	addwfc	?___wmul+1,w
 13110  0255  2A7C               	goto	L7
 13111  0256                     l3157:	
 13112                           ;pid.c: 51: }
 13113                           
 13114                           
 13115                           ;pid.c: 52: else
 13116                           ;pid.c: 53: {
 13117                           ;pid.c: 54: if(pidIntegrated>-1023)pidIntegrated = pidIntegrated - (error * Ki);
 13118  0256  0020               	movlb	0	; select bank0
 13119  0257  0869               	movf	_pidIntegrated+1,w
 13120  0258  3A80               	xorlw	128
 13121  0259  00FA               	movwf	??_PID_Calculate
 13122  025A  307C               	movlw	124
 13123  025B  027A               	subwf	??_PID_Calculate,w
 13124  025C  1D03               	skipz
 13125  025D  2A60               	goto	u3745
 13126  025E  3002               	movlw	2
 13127  025F  0268               	subwf	_pidIntegrated,w
 13128  0260                     u3745:	
 13129  0260  1C03               	skipc
 13130  0261  2AE5               	goto	l3175
 13131  0262  0020               	movlb	0	; select bank0
 13132  0263  086B               	movf	_error+1,w
 13133  0264  00F1               	movwf	___wmul@multiplier+1
 13134  0265  086A               	movf	_error,w
 13135  0266  00F0               	movwf	___wmul@multiplier
 13136  0267  0021               	movlb	1	; select bank1
 13137  0268  086B               	movf	(_Ki+1)^(0+128),w
 13138  0269  00F3               	movwf	___wmul@multiplicand+1
 13139  026A  086A               	movf	_Ki^(0+128),w
 13140  026B  00F2               	movwf	___wmul@multiplicand
 13141  026C  3196  26C5  3181   	fcall	___wmul
 13142  026F  0970               	comf	?___wmul,w
 13143  0270  00FA               	movwf	??_PID_Calculate
 13144  0271  0971               	comf	?___wmul+1,w
 13145  0272  00FB               	movwf	??_PID_Calculate+1
 13146  0273  0AFA               	incf	??_PID_Calculate,f
 13147  0274  1903               	skipnz
 13148  0275  0AFB               	incf	??_PID_Calculate+1,f
 13149  0276  0020               	movlb	0	; select bank0
 13150  0277  0868               	movf	_pidIntegrated,w
 13151  0278  077A               	addwf	??_PID_Calculate,w
 13152  0279  00E8               	movwf	_pidIntegrated
 13153  027A  0869               	movf	_pidIntegrated+1,w
 13154  027B  3D7B               	addwfc	??_PID_Calculate+1,w
 13155  027C                     L7:	
 13156  027C  00E9               	movwf	_pidIntegrated+1
 13157                           
 13158                           ;pid.c: 55: }
 13159                           ;pid.c: 56: }
 13160  027D  2AE5               	goto	l3175
 13161  027E                     l3161:	
 13162                           
 13163                           ;pid.c: 57: else
 13164                           ;pid.c: 58: {
 13165                           ;pid.c: 59: if(error>=lastError)
 13166  027E  086B               	movf	_error+1,w
 13167  027F  3A80               	xorlw	128
 13168  0280  00FA               	movwf	??_PID_Calculate
 13169  0281  0021               	movlb	1	; select bank1
 13170  0282  0858               	movf	(_lastError+1)^(0+128),w
 13171  0283  3A80               	xorlw	128
 13172  0284  027A               	subwf	??_PID_Calculate,w
 13173  0285  1D03               	skipz
 13174  0286  2A8A               	goto	u3755
 13175  0287  0857               	movf	_lastError^(0+128),w
 13176  0288  0020               	movlb	0	; select bank0
 13177  0289  026A               	subwf	_error,w
 13178  028A                     u3755:	
 13179  028A  1C03               	skipc
 13180  028B  2AB6               	goto	l3167
 13181                           
 13182                           ;pid.c: 61: {
 13183                           ;pid.c: 62: if(pidIntegrated<pidMaxOutput)pidIntegrated = pidIntegrated - (error * Ki);
 13184  028C  0020               	movlb	0	; select bank0
 13185  028D  0869               	movf	_pidIntegrated+1,w
 13186  028E  3A80               	xorlw	128
 13187  028F  00FA               	movwf	??_PID_Calculate
 13188  0290  0021               	movlb	1	; select bank1
 13189  0291  0867               	movf	(_pidMaxOutput+1)^(0+128),w
 13190  0292  3A80               	xorlw	128
 13191  0293  027A               	subwf	??_PID_Calculate,w
 13192  0294  1D03               	skipz
 13193  0295  2A99               	goto	u3765
 13194  0296  0866               	movf	_pidMaxOutput^(0+128),w
 13195  0297  0020               	movlb	0	; select bank0
 13196  0298  0268               	subwf	_pidIntegrated,w
 13197  0299                     u3765:	
 13198  0299  1803               	skipnc
 13199  029A  2AD6               	goto	l3171
 13200  029B  0020               	movlb	0	; select bank0
 13201  029C  086B               	movf	_error+1,w
 13202  029D  00F1               	movwf	___wmul@multiplier+1
 13203  029E  086A               	movf	_error,w
 13204  029F  00F0               	movwf	___wmul@multiplier
 13205  02A0  0021               	movlb	1	; select bank1
 13206  02A1  086B               	movf	(_Ki+1)^(0+128),w
 13207  02A2  00F3               	movwf	___wmul@multiplicand+1
 13208  02A3  086A               	movf	_Ki^(0+128),w
 13209  02A4  00F2               	movwf	___wmul@multiplicand
 13210  02A5  3196  26C5  3181   	fcall	___wmul
 13211  02A8  0970               	comf	?___wmul,w
 13212  02A9  00FA               	movwf	??_PID_Calculate
 13213  02AA  0971               	comf	?___wmul+1,w
 13214  02AB  00FB               	movwf	??_PID_Calculate+1
 13215  02AC  0AFA               	incf	??_PID_Calculate,f
 13216  02AD  1903               	skipnz
 13217  02AE  0AFB               	incf	??_PID_Calculate+1,f
 13218  02AF  0020               	movlb	0	; select bank0
 13219  02B0  0868               	movf	_pidIntegrated,w
 13220  02B1  077A               	addwf	??_PID_Calculate,w
 13221  02B2  00E8               	movwf	_pidIntegrated
 13222  02B3  0869               	movf	_pidIntegrated+1,w
 13223  02B4  3D7B               	addwfc	??_PID_Calculate+1,w
 13224  02B5  2AD5               	goto	L8
 13225  02B6                     l3167:	
 13226                           ;pid.c: 63: }
 13227                           
 13228                           
 13229                           ;pid.c: 64: else
 13230                           ;pid.c: 65: {
 13231                           ;pid.c: 66: if(pidIntegrated>-1023)pidIntegrated = pidIntegrated + (error * Ki);
 13232  02B6  0020               	movlb	0	; select bank0
 13233  02B7  0869               	movf	_pidIntegrated+1,w
 13234  02B8  3A80               	xorlw	128
 13235  02B9  00FA               	movwf	??_PID_Calculate
 13236  02BA  307C               	movlw	124
 13237  02BB  027A               	subwf	??_PID_Calculate,w
 13238  02BC  1D03               	skipz
 13239  02BD  2AC0               	goto	u3775
 13240  02BE  3002               	movlw	2
 13241  02BF  0268               	subwf	_pidIntegrated,w
 13242  02C0                     u3775:	
 13243  02C0  1C03               	skipc
 13244  02C1  2AD6               	goto	l3171
 13245  02C2  0020               	movlb	0	; select bank0
 13246  02C3  086B               	movf	_error+1,w
 13247  02C4  00F1               	movwf	___wmul@multiplier+1
 13248  02C5  086A               	movf	_error,w
 13249  02C6  00F0               	movwf	___wmul@multiplier
 13250  02C7  0021               	movlb	1	; select bank1
 13251  02C8  086B               	movf	(_Ki+1)^(0+128),w
 13252  02C9  00F3               	movwf	___wmul@multiplicand+1
 13253  02CA  086A               	movf	_Ki^(0+128),w
 13254  02CB  00F2               	movwf	___wmul@multiplicand
 13255  02CC  3196  26C5  3181   	fcall	___wmul
 13256  02CF  0020               	movlb	0	; select bank0
 13257  02D0  0868               	movf	_pidIntegrated,w
 13258  02D1  0770               	addwf	?___wmul,w
 13259  02D2  00E8               	movwf	_pidIntegrated
 13260  02D3  0869               	movf	_pidIntegrated+1,w
 13261  02D4  3D71               	addwfc	?___wmul+1,w
 13262  02D5                     L8:	
 13263  02D5  00E9               	movwf	_pidIntegrated+1
 13264  02D6                     l3171:	
 13265                           
 13266                           ;pid.c: 67: }
 13267                           ;pid.c: 68: if(pidIntegrated>0)pidIntegrated=0;
 13268  02D6  0020               	movlb	0	; select bank0
 13269  02D7  0869               	movf	_pidIntegrated+1,w
 13270  02D8  3A80               	xorlw	128
 13271  02D9  00FA               	movwf	??_PID_Calculate
 13272  02DA  3080               	movlw	128
 13273  02DB  027A               	subwf	??_PID_Calculate,w
 13274  02DC  1D03               	skipz
 13275  02DD  2AE0               	goto	u3785
 13276  02DE  3001               	movlw	1
 13277  02DF  0268               	subwf	_pidIntegrated,w
 13278  02E0                     u3785:	
 13279  02E0  1C03               	skipc
 13280  02E1  2AE5               	goto	l3175
 13281  02E2  0020               	movlb	0	; select bank0
 13282  02E3  01E8               	clrf	_pidIntegrated
 13283  02E4  01E9               	clrf	_pidIntegrated+1
 13284  02E5                     l3175:	
 13285                           
 13286                           ;pid.c: 79: }
 13287                           ;pid.c: 80: oldError = lastError;
 13288  02E5  0021               	movlb	1	; select bank1
 13289  02E6  0858               	movf	(_lastError+1)^(0+128),w
 13290  02E7  00CE               	movwf	(_oldError+1)^(0+128)
 13291  02E8  0857               	movf	_lastError^(0+128),w
 13292  02E9  00CD               	movwf	_oldError^(0+128)
 13293                           
 13294                           ;pid.c: 82: integralValue = pidIntegrated;
 13295  02EA  0020               	movlb	0	; select bank0
 13296  02EB  0869               	movf	_pidIntegrated+1,w
 13297  02EC  0021               	movlb	1	; select bank1
 13298  02ED  00D0               	movwf	(_integralValue+1)^(0+128)
 13299  02EE  0020               	movlb	0	; select bank0
 13300  02EF  0868               	movf	_pidIntegrated,w
 13301  02F0  0021               	movlb	1	; select bank1
 13302  02F1  00CF               	movwf	_integralValue^(0+128)
 13303                           
 13304                           ;pid.c: 84: lastError=error;
 13305  02F2  0020               	movlb	0	; select bank0
 13306  02F3  086B               	movf	_error+1,w
 13307  02F4  0021               	movlb	1	; select bank1
 13308  02F5  00D8               	movwf	(_lastError+1)^(0+128)
 13309  02F6  0020               	movlb	0	; select bank0
 13310  02F7  086A               	movf	_error,w
 13311  02F8  0021               	movlb	1	; select bank1
 13312  02F9  00D7               	movwf	_lastError^(0+128)
 13313                           
 13314                           ;pid.c: 86: loop=0;
 13315  02FA  01DF               	clrf	pid@loop^(0+128)
 13316  02FB                     l3183:	
 13317                           
 13318                           ;pid.c: 87: }
 13319                           ;pid.c: 90: Result = errorValue+integralValue+derivativeValue;
 13320  02FB  084F               	movf	_integralValue^(0+128),w
 13321  02FC  0755               	addwf	_errorValue^(0+128),w
 13322  02FD  00FA               	movwf	??_PID_Calculate
 13323  02FE  0850               	movf	(_integralValue+1)^(0+128),w
 13324  02FF  3D56               	addwfc	(_errorValue+1)^(0+128),w
 13325  0300  00FB               	movwf	??_PID_Calculate+1
 13326  0301  0853               	movf	_derivativeValue^(0+128),w
 13327  0302  077A               	addwf	??_PID_Calculate,w
 13328  0303  00D1               	movwf	_Result^(0+128)
 13329  0304  0854               	movf	(_derivativeValue+1)^(0+128),w
 13330  0305  3D7B               	addwfc	??_PID_Calculate+1,w
 13331  0306  00D2               	movwf	(_Result+1)^(0+128)
 13332                           
 13333                           ;pid.c: 92: if (Result < pidMinOutput)
 13334  0307  0852               	movf	(_Result+1)^(0+128),w
 13335  0308  3A80               	xorlw	128
 13336  0309  00FA               	movwf	??_PID_Calculate
 13337  030A  084A               	movf	(_pidMinOutput+1)^(0+128),w
 13338  030B  3A80               	xorlw	128
 13339  030C  027A               	subwf	??_PID_Calculate,w
 13340  030D  1D03               	skipz
 13341  030E  2B11               	goto	u3795
 13342  030F  0849               	movf	_pidMinOutput^(0+128),w
 13343  0310  0251               	subwf	_Result^(0+128),w
 13344  0311                     u3795:	
 13345  0311  1803               	skipnc
 13346  0312  2B18               	goto	l282
 13347                           
 13348                           ;pid.c: 93: {
 13349                           ;pid.c: 94: Result = pidMinOutput;
 13350  0313  0021               	movlb	1	; select bank1
 13351  0314  084A               	movf	(_pidMinOutput+1)^(0+128),w
 13352  0315  00D2               	movwf	(_Result+1)^(0+128)
 13353  0316  0849               	movf	_pidMinOutput^(0+128),w
 13354  0317  00D1               	movwf	_Result^(0+128)
 13355  0318                     l282:	
 13356                           
 13357                           ;pid.c: 95: }
 13358                           ;pid.c: 97: if (Result > pidMaxOutput)
 13359  0318  0021               	movlb	1	; select bank1
 13360  0319  0867               	movf	(_pidMaxOutput+1)^(0+128),w
 13361  031A  3A80               	xorlw	128
 13362  031B  00FA               	movwf	??_PID_Calculate
 13363  031C  0852               	movf	(_Result+1)^(0+128),w
 13364  031D  3A80               	xorlw	128
 13365  031E  027A               	subwf	??_PID_Calculate,w
 13366  031F  1D03               	skipz
 13367  0320  2B23               	goto	u3805
 13368  0321  0851               	movf	_Result^(0+128),w
 13369  0322  0266               	subwf	_pidMaxOutput^(0+128),w
 13370  0323                     u3805:	
 13371  0323  1803               	skipnc
 13372  0324  2B2A               	goto	l283
 13373                           
 13374                           ;pid.c: 98: {
 13375                           ;pid.c: 99: Result = pidMaxOutput;
 13376  0325  0021               	movlb	1	; select bank1
 13377  0326  0867               	movf	(_pidMaxOutput+1)^(0+128),w
 13378  0327  00D2               	movwf	(_Result+1)^(0+128)
 13379  0328  0866               	movf	_pidMaxOutput^(0+128),w
 13380  0329  00D1               	movwf	_Result^(0+128)
 13381  032A                     l283:	
 13382                           
 13383                           ;pid.c: 100: }
 13384                           ;pid.c: 102: return (Result);
 13385  032A  0021               	movlb	1	; select bank1
 13386  032B  0852               	movf	(_Result+1)^(0+128),w
 13387  032C  00F7               	movwf	?_PID_Calculate+1
 13388  032D  0851               	movf	_Result^(0+128),w
 13389  032E  00F6               	movwf	?_PID_Calculate
 13390  032F  0008               	return
 13391  0330                     __end_of_PID_Calculate:	
 13392                           
 13393                           	psect	text39
 13394  16C5                     __ptext39:	
 13395 ;; *************** function ___wmul *****************
 13396 ;; Defined at:
 13397 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13398 ;; Parameters:    Size  Location     Type
 13399 ;;  multiplier      2    0[COMMON] unsigned int 
 13400 ;;  multiplicand    2    2[COMMON] unsigned int 
 13401 ;; Auto vars:     Size  Location     Type
 13402 ;;  product         2    4[COMMON] unsigned int 
 13403 ;; Return value:  Size  Location     Type
 13404 ;;                  2    0[COMMON] unsigned int 
 13405 ;; Registers used:
 13406 ;;		wreg, status,2, status,0
 13407 ;; Tracked objects:
 13408 ;;		On entry : 0/0
 13409 ;;		On exit  : 0/0
 13410 ;;		Unchanged: 0/0
 13411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13415 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13416 ;;Total ram usage:        6 bytes
 13417 ;; Hardware stack levels used:    1
 13418 ;; This function calls:
 13419 ;;		Nothing
 13420 ;; This function is called by:
 13421 ;;		_PID_Calculate
 13422 ;;		_eval_poly
 13423 ;; This function uses a non-reentrant model
 13424 ;;
 13425                           
 13426                           
 13427                           ;psect for function ___wmul
 13428  16C5                     ___wmul:	
 13429                           
 13430                           ;incstack = 0
 13431                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13432  16C5  01F4               	clrf	___wmul@product
 13433  16C6  01F5               	clrf	___wmul@product+1
 13434  16C7                     l2233:	
 13435  16C7  1C70               	btfss	___wmul@multiplier,0
 13436  16C8  2ECD               	goto	l555
 13437  16C9  0872               	movf	___wmul@multiplicand,w
 13438  16CA  07F4               	addwf	___wmul@product,f
 13439  16CB  0873               	movf	___wmul@multiplicand+1,w
 13440  16CC  3DF5               	addwfc	___wmul@product+1,f
 13441  16CD                     l555:	
 13442  16CD  3001               	movlw	1
 13443  16CE                     u2145:	
 13444  16CE  35F2               	lslf	___wmul@multiplicand,f
 13445  16CF  0DF3               	rlf	___wmul@multiplicand+1,f
 13446  16D0  0B89               	decfsz	9,f
 13447  16D1  2ECE               	goto	u2145
 13448  16D2  3001               	movlw	1
 13449  16D3                     u2155:	
 13450  16D3  36F1               	lsrf	___wmul@multiplier+1,f
 13451  16D4  0CF0               	rrf	___wmul@multiplier,f
 13452  16D5  0B89               	decfsz	9,f
 13453  16D6  2ED3               	goto	u2155
 13454  16D7  0870               	movf	___wmul@multiplier,w
 13455  16D8  0471               	iorwf	___wmul@multiplier+1,w
 13456  16D9  1D03               	btfss	3,2
 13457  16DA  2EC7               	goto	l2233
 13458  16DB  0875               	movf	___wmul@product+1,w
 13459  16DC  00F1               	movwf	?___wmul+1
 13460  16DD  0874               	movf	___wmul@product,w
 13461  16DE  00F0               	movwf	?___wmul
 13462  16DF  0008               	return
 13463  16E0                     __end_of___wmul:	
 13464  007E                     btemp	set	126	;btemp
 13465  007E                     wtemp0	set	126


Data Sizes:
    Strings     107
    Constant    29
    Data        41
    BSS         141
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      79
    BANK1            80     41      79
    BANK2            80      0      57
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   47578
                                              0 BANK1     41    41      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30755
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16171
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7425
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2     993
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           4     4      0    6155
                                             11 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM7_LoadDutyValue
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     586
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       16    11      5    3797
                                              9 COMMON     5     0      5
                                              0 BANK0     11    11      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1281
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1306
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _PWM7_LoadDutyValue
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     29      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      39       9       71.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     135      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     135      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jun 29 18:42:04 2018

                 ___bmul@product 0072          __size_of_PWM_Initialize 0015                      __CFG_CP$OFF 0000  
                             l55 163F                               l58 1646                               l97 167F  
                             l99 1685                               _Kd 00E8                               _Ki 00EA  
                             _Kp 00EC                     ___awdiv@sign 0076              ___wmul@multiplicand 0072  
    __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C                     ___ftadd@exp2 004B  
                    __CFG_LVP$ON 0000                     ___ftadd@sign 004A                              l101 168A  
                            l103 168F                              l221 0469                              l227 04F8  
                            l282 0318                              l266 01C7                              l610 0A36  
                            l283 032A                              l269 0211                              l555 16CD  
                            l723 0052                              l724 005A                              l716 003F  
                            l807 0B13                              l747 0E8C                              _GIE 005F  
                            _RA0 0060                              _RA2 0062                              _RB0 0068  
                            _RB1 0069                              _RC0 0070                              _RB2 006A  
                            _RC1 0071                              _RA6 0066                              _RA7 0067  
                   __CFG_CPD$OFF 0000                              _key 006D                              _log 0BD6  
                __end_of_ADCRead 164D                     ___awmod@sign 0076                  _TMR2_Initialize 15DF  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@analogs 00C1  
                __end_of_LCD_Cmd 1610                     __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A  
                 _LCD_Set_Cursor 083A                     ___ftdiv@sign 003F                             l2201 0044  
                           l3011 0330                             l2203 004C                             l3013 0389  
                           l2301 0EB0                             l2223 1686                             l3111 0512  
                           l3103 0501                             l3023 03B3                             l2311 0ECB  
                           l2233 16C7                             l3105 0504                             l3121 0555  
                           l2321 0D50                             l2227 168B                             l2219 1681  
                           l2403 0908                             l3051 041D                             l2251 0E15  
                           l2421 0927                             l2261 0E2B                             l2431 0942  
                           l3071 0472                             l3039 03D9                             l3119 0528  
                           l2191 001C                             l2255 0E1C                             l2351 0DBD  
                           l2343 0DA9                             l2327 0D66                             l3311 06DF  
                           l3161 027E                             l3137 01D8                             l2409 0913  
                           l3057 0436                             l3073 0475                             l2193 0026  
                           l2281 0E62                             l2273 0E45                             l3171 02D6  
                           l2435 094A                             l2427 0939                             l2419 091B  
                           l2451 08CA                             l3083 04AC                             l2195 002B  
                           l2187 0015                             l2291 0E7E                             l2283 0E67  
                           l2355 0DC5                             l2339 0DA1                             l3157 0256  
                           l3149 0222                             l2461 08DC                             l2293 0E88  
                           l2285 0E6B                             l2517 17D7                             l3333 072E  
                           l3325 06F8                             l3317 06E9                             l3167 02B6  
                           l3175 02E5                             l3183 02FB                             l2447 08C3  
                           l2711 1621                             l2279 0E58                             l2535 09A8  
                           l3351 0753                             l3319 06EB                             l3271 05BA  
                           l2473 08F9                             l2465 08E8                             l2705 1618  
                           l3089 04C5                             l2297 0E9E                             l3345 073C  
                           l3337 0735                             l3329 06FD                             l2459 08D0  
                           l2803 0C08                             l3339 0737                             l2469 08F1  
                           l2901 0BB4                             l2485 1724                             l2493 17A0  
                           l3373 07C0                             l2663 0CA6                             l2815 15EF  
                           l2585 1758                             l2681 0CE6                             l2673 0CAD  
                           l2649 16AD                             l2913 1704                             l2497 17B6  
                           l2579 1747                             l2691 0D18                             l2683 0CED  
                           l2819 15F5                             l2923 0ABF                             l2677 0CD8  
                           l2845 0A57                             l2837 0A47                             l2941 0AEF  
                           l2599 085A                             l2695 0D25                             l2863 0A9E  
                           l2855 0A85                             l2847 0A65                             l2951 0B16  
                           l2943 0AFD                             l2689 0CF1                             l2873 0B44  
                           l2859 0A90                             l2955 0B24                             l2893 0B9B  
                           l2949 0B0A                             l2797 0BF5                             l2975 0169  
                           l2879 0B5A                             l2995 035A                             l2989 034C  
                           ?_log 0057                             STR_1 1870                             STR_2 187B  
                           STR_3 185F                             STR_4 184E                             STR_5 183D  
                           STR_6 181B                             STR_7 182C                             u2015 003A  
                           u3000 0838                             u2035 0047                             _LATA 0016  
                           _LATB 0017                             _LATC 0018                             u2145 16CE  
                           u2155 16D3                             u3115 0A66                             u2075 0061  
                           u3125 0A7A                             u3205 0B9C                             u2325 0E6C  
                           u4007 0462                             u3135 0A86                             u3215 0BAB  
                           u4017 04F1                             u3225 0BB5                             u2265 0E46  
                           u2505 0DCC                             u2425 0D72                             _T2PR 028D  
                           u4107 09ED                             u4027 0893                             u2355 0E7F  
                           u2435 0D82                             u2525 1770                             u4117 09F9  
                           u4037 08A2                             u2605 093A                             u3405 011C  
                           u3325 0B0B                             u4127 0A07                             u4047 08B1  
                           u3095 0A5A                             u3415 0147                             u2295 0E59  
                           u2455 0DAA                             u4137 0A14                             u4057 09B9  
                           u3505 0537                             u3185 0B6C                             u3265 0AC6  
                           u2465 0DB0                             u4147 0A21                             u4067 09C7  
                           u3355 008A                             u3195 0B7C                             u4157 177B  
                           u4077 09D1                             u2565 091E                             u3525 040E  
                           u3445 0175                             u3365 00A0                             u4167 1786  
                           u4087 09D9                             u3455 0346                             u3375 00D6  
                           u3295 0AF0                             u2495 0DC6                             u3705 021B  
                           u4177 160B                             u4097 09E1                             u2585 0928  
                           u2665 08D3                             u3385 00EC                             u2835 0846  
                           u2595 0932                             u3395 0106                             u3820 0589  
                           u3805 0323                             u3725 0231                             u2685 08E2  
                           u2925 0D06                             u3645 0521                             u2870 0C91  
                           u3735 0240                             u3815 165C                             u2855 0865  
                           u2695 08E9                             u3575 049D                             u3745 0260  
                           u3665 01C0                             u3755 028A                             u3675 01D1  
                           u1995 0021                             u3765 0299                             u3775 02C0  
                           u3695 020A                             u3785 02E0                             u3937 05B0  
                           u3795 0311                             u2995 1672                             u3947 079C  
                           u3957 07AF                             u3885 0713                             u3967 0393  
                           u3895 072C                             u3977 03D1                             u3987 054E  
                           u3997 03DD              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _desc 014D                             _main 0561                     ___ftpack@arg 0070  
             __size_of_LCD_Clear 0008                             _loop 00EE                     ___ftpack@exp 0073  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             log@x 0057                    __CFG_BOREN$ON 0000  
                           start 0002               ??_LCD_Write_String 0077                    __CFG_CSWEN$ON 0000  
              ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 0C86                     ___ftmul@sign 002F                     ___fttol@exp1 007D  
                          ??_log 005A                     ___fttol@lval 0079                 __end_of_LCD_Init 0A25  
               __end_of_LCD_Port 1691   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 000D  
                __end_of___aldiv 0AA7                            _ADACQ 009D                            _ADACT 0099  
                          _ADCAP 009B                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 094F  
                          _ADPRE 009C                  __end_of___ftadd 0EE3                    __CFG_WDTE$OFF 0000  
                __end_of___awmod 08FE                            _ADRPT 010D                  __end_of___ftdiv 0BD6  
                __end_of___ftmul 0DED                  ___awdiv@divisor 0070                  __end_of___ftsub 171A  
                __end_of___fttol 0B2D                            _T2CON 028E                            _T2HLT 028F  
                          _T2TMR 028C                            _T2RST 0291                  ___awdiv@counter 0075  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013           __end_of_LCD_Set_Cursor 0879                    ___awtoft@sign 007D  
                __end_of_readKey 1623                            _frexp 17C5                            _errno 013B  
                          _error 006A                    ___ftpack@sign 0074                            _timer 00D9  
                          main@j 00C6                            main@x 00AA                            status 0003  
                          wtemp0 007E                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0079  
                 _LCD_Write_Char 1760                  __initialization 07C6                      log@exponent 005B  
                   __end_of_main 07C6                readAnalog@channel 007C          __end_of_TMR2_Initialize 15ED  
                      ??_ADCRead 0073                           ??_main 00A0                    ___fttol@sign1 0078  
              __end_of_LCD_Clear 15D2                        ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0073  
                         _ADCON0 0093                           _ADCON1 0094                           _ADCON2 0095  
                         _ADCON3 0096                           ?_frexp 0070                           _ADLTHH 010F  
                         _ADLTHL 010E                           _ADRESH 008D                           _ADRESL 008C  
                         _ADSTAT 0097                           _ADUTHH 0111                 ___awdiv@dividend 0072  
                         _ADUTHL 0110                 __end_of___awtoft 173A                           _ANSELA 0F38  
                         _ANSELB 0F43                           _ANSELC 0F4E                 __end_of___ftpack 0071  
                         _RC2PPS 0F22                           _RC3PPS 0F23                   __CFG_WDTCCS$SC 0000  
                         _FVRCON 090C                           _OSCFRQ 0893                 __end_of_channels 1888  
         __end_of_LCD_Write_Char 178A                   __CFG_PWRTE$OFF 0000                           _Result 00D1  
                   _CCPTMRS1bits 021F                           ___bmul 15ED                           ___ftge 178A  
         LCD_Write_Int@numPlaces 007C                        ??___aldiv 0078                           ___wmul 16C5  
                      ??___awdiv 0074                        ??___ftadd 0046                   __CFG_STVREN$ON 0000  
                      ??___awmod 0074                   _PWM_Initialize 1623                        ??___ftdiv 0036  
                      ??___ftmul 0026                           _choice 006C                        ??___ftsub 007E  
                      ??___fttol 0074           main@currentTemperature 00BB                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                           _timer2 00E0                  ___awmod@counter 0075  
                         _totals 012A            ___ftmul@f3_as_product 002B                 __end_of_tempCalc 1000  
                _ADCC_Initialize 1691                        ??_readKey 0070                 LCD_Write_Int@str 0024  
                _InitCustomChars 173A                  LCD_Set_Cursor@w 0078                  LCD_Set_Cursor@x 0076  
                LCD_Set_Cursor@y 0073                  LCD_Set_Cursor@z 0077                    _pidIntegrated 0068  
       readAnalog@analog_channel 0079                _SYSTEM_Initialize 0879                 __end_oflog@coeff 181B  
        __end_of__initialization 07FD                        ?_LCD_Init 0070                        ?_LCD_Port 0070  
                     ___ftadd@f1 0040                       ___ftadd@f2 0043                  _derivativeValue 00D3  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                  ??_LCD_Write_Int 0020  
             ?_SYSTEM_Initialize 0070                     eval_poly@res 0054                       ___ftdiv@f1 0033  
                     ___ftdiv@f2 0030                       ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070  
                  LCD_Init@style 0075                       ___awtoft@c 0078              ___bmul@multiplicand 0070  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023           __end_of_PWM_Initialize 1638  
                     ___ftsub@f1 0050                       ___ftsub@f2 004D                       ___fttol@f1 0070  
                 __pcstackCOMMON 0070                        LCD_Port@a 0070                     __pidataBANK1 15D2  
                   __pidataBANK2 16E0              ??_SYSTEM_Initialize 0077                    __end_of_frexp 1800  
               ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 08B9                       __pbssBANK0 0068                       __pbssBANK1 00C9  
                     __pbssBANK2 0120                       __pbssBANK3 01A0               __size_of_eval_poly 0060  
                     ??_LCD_Init 0073                       ??_LCD_Port 0070           __size_of_PID_Calculate 019E  
                     _delayCount 006E                  ?_PWM_Initialize 0070                       __pmaintext 0561  
                        ?___bmul 0070                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 16AB       __end_of_PWM6_LoadDutyValue 1663  
                        _ADCRead 1638        __size_of_LCD_Write_String 001A                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 1760  
                        _LCD_Cmd 15FE                   main@holdOutput 00B7                 main@lidOpenCount 00B8  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM6DCH 038D                          _PWM6DCL 038C                          _PWM7DCH 0391  
                        _PWM7DCL 0390                          _PWM6CON 038E                          _PWM7CON 0392  
                        _PPSLOCK 0E8F            PID_Calculate@setpoint 0076                        ?_tempCalc 005D  
                     _readAnalog 0071                    _integralValue 00CF                          ___aldiv 0A25  
                __size_of___bmul 0011                          ___cgram 013D                       _menuChoice 0330  
                __size_of___ftge 003B                          ___awdiv 08FE                          ___ftadd 0DED  
                        ___awmod 08B9                          ___ftdiv 0B2D                  __size_of___wmul 001B  
                        ___ftmul 0D39                          ___ftsub 16FC                          ___fttol 0AA7  
                     _errorValue 00D5                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 09AF                 ??_LCD_Set_Cursor 0074                          __ptext1 0EE3  
                        __ptext2 0BD6                          __ptext3 17C5                          __ptext4 094F  
                        __ptext5 0D39                          __ptext6 178A                          __ptext7 171A  
                        __ptext8 0AA7                          __ptext9 16FC                    _PID_Calculate 0192  
          _OSCILLATOR_Initialize 0004                          _readKey 1610                        _T2CONbits 028E  
                   __size_of_log 00B0                 ___awmod@dividend 0072                   ADCRead@channel 0073  
                   _highRangeSet 0151                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 01A0                          _testKey 00E1                        _LCD_Clear 15CA  
     __size_of_SYSTEM_Initialize 0040                          clrloop0 15C5             end_of_initialization 07FD  
                        pid@loop 00DF                          init_ram 0801                          initloop 0802  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                LCD_Write_Int@sign 007D  
                     main@F14372 0120                       main@F14366 0137                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0076                 ?_InitCustomChars 0070  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0076                __size_of_LCD_Port 0018                       main@output 00B5  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                      ?_menuChoice 0070  
                 __end_of___bmul 15FE                   __end_of___ftge 17C5                   __end_of___wmul 16E0  
               _LCD_Write_String 16AB           ?_OSCILLATOR_Initialize 0070              start_initialization 07C6  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0033                      __end_of_log 0C86                       frexp@value 0070  
               ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 0D39  
               __CFG_LPBOREN$OFF 0000                         ??___bmul 0071                         ??___ftge 0076  
              tempCalc@steinhart 0065                         ??___wmul 0074                     _pidMaxOutput 00E6  
                  _tempCalc$1036 0062                      __pdataBANK1 00E2                      __pdataBANK2 013D  
                ??_PID_Calculate 007A       __end_of_PWM7_LoadDutyValue 1679                  LCD_Write_Char@a 0074  
                LCD_Write_Char@y 0073                         ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070  
                   _pidMinOutput 00C9                         ?_LCD_Cmd 0070                __size_of___awtoft 0020  
              __size_of___ftpack 0064                         LCD_Cmd@a 0072                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0               _PWM6_LoadDutyValue 164D  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0073              __size_of_readAnalog 0121  
            __size_of_menuChoice 0231              ?_PWM6_LoadDutyValue 0070           _PIN_MANAGER_Initialize 0807  
                       ?___aldiv 0070                __size_of_tempCalc 011D                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
           ??_PWM6_LoadDutyValue 0072              main@lastTemperature 00B9                         ?_readKey 0070  
                      _eval_poly 094F                        _lastError 00D7                        _menuDelay 00DB  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 09AF                   ___wmul@product 0074  
                       _LCD_Port 1679                        clear_ram0 15C4                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 0015                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0012  
       __end_of_LCD_Write_String 16C5                ??_TMR2_Initialize 0070                  readAnalog@value 007A  
                      frexp@eptr 0073                     ??_readAnalog 0028                     ??_menuChoice 002B  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002A                   LCD_Write_Int@j 0029  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                         ___awtoft 171A  
                       ___ftpack 000D         __size_of_ADCC_Initialize 001A                         _channels 1886  
               __size_of_readKey 0013                PID_Calculate@temp 0078                         __ptext10 0DED  
                       __ptext11 0B2D                         __ptext20 16AB                         __ptext12 000D  
                       __ptext21 0C86                         __ptext13 0071                         __ptext30 09AF  
                       __ptext22 08B9                         __ptext14 15ED                         __ptext31 15CA  
                       __ptext23 08FE                         __ptext15 0A25                         __ptext32 173A  
                       __ptext24 083A                         __ptext16 1638                         __ptext33 1760  
                       __ptext25 0879                         __ptext17 0330                         __ptext34 15FE  
                       __ptext26 15DF                         __ptext18 1610                         __ptext35 1679  
                       __ptext27 1623                         __ptext19 1663                         __ptext36 1691  
                       __ptext28 0807                         __ptext37 164D                         __ptext29 0004  
                       __ptext38 0192                         __ptext39 16C5               __end_of_readAnalog 0192  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 005F         __size_of_InitCustomChars 0026  
             __end_of_menuChoice 0561              LCD_Write_Int@F14404 0132                         _oldError 00CD  
                  __size_of_main 0265             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0EE3  
                       _setpoint 00E2                      _lowRangeSet 0155      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1800                      ??_eval_poly 007E                      _sampleIndex 00DD  
             _PWM7_LoadDutyValue 1663               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
            ?_PWM7_LoadDutyValue 0070                main@outputSamples 00AB                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F     PWM6_LoadDutyValue@dutyCycle6 0070                  main@viperFanOut 00C7  
        __size_of_LCD_Write_Char 002A               LCD_Set_Cursor@temp 0079               LCD_Write_Int@value 0079  
                  __pstringtext1 1886                    __pstringtext2 1800                    __pstringtext3 182C  
                  __pstringtext4 183D                    __pstringtext5 184E                    __pstringtext6 185F  
                  __pstringtext7 1870                    __pstringtext8 187B                    __pstringtext9 0000  
          __end_of_PID_Calculate 0330             ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021  
                    _D_PrevError 00CB           __size_of_LCD_Write_Int 00B3                  main@outputIndex 00C5  
 __end_of_PIN_MANAGER_Initialize 083A                ??_ADCC_Initialize 0070                  main@outputTotal 00BD  
              ??_InitCustomChars 0075  
