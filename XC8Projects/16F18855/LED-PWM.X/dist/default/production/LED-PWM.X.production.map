Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/production\LED-PWM.X.production.sym \
  --cmf=dist/default/production\LED-PWM.X.production.cmf -z -Q16F720 \
  -oC:\Users\DAVE\AppData\Local\Temp\s108.2 \
  -Mdist/default/production/LED-PWM.X.production.map -E1 -ver=XC8 \
  -ASTACK=050h-06fh -pstack=STACK -ACODE=00h-07FFh -ASTRCODE=00h-07FFh \
  -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 -AENTRY=00h-0FFhx8 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0BFh \
  -ARAM=020h-06Fh,0A0h-0BFh -AABS1=020h-07Fh,0A0h-0BFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-016Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\DAVE\AppData\Local\Temp\s108.obj \
  dist/default/production\LED-PWM.X.production.obj 

Object code version is 3.11

Machine type is 16F720



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\DAVE\AppData\Local\Temp\s108.obj
                end_init                             10       10        1        8       0
                reset_vec                             0        0        1        0       0
                config                             2007     2007        1     400E       0
dist/default/production\LED-PWM.X.production.obj
                cinit                                11       11        4        8       0
                intentry                              4        4        C        8       0
                text14                              449      449       1D      5F2       0
                text13                              42C      42C       1D      5F2       0
                text12                              2F9      2F9       40      5F2       0
                text11                              466      466       1A      5F2       0
                text10                              480      480       16      5F2       0
                text9                               496      496        5      5F2       0
                text8                               3DC      3DC       31      5F2       0
                text7                               1BF      1BF       8B        8       0
                text6                               3AB      3AB       31      5F2       0
                text5                               40D      40D       1F      5F2       0
                text4                               24A      24A       5B        8       0
                text3                               339      339       3E      5F2       0
                text2                               377      377       34      5F2       0
                text1                               109      109       B6        8       0
                maintext                             15       15       F4        8       0
                cstackBANK0                          20       20       2F       20       1
                cstackCOMMON                         70       70        A       70       1
                dataBANK0                            4F       4F        1       20       1
                strings                             2A5      2A5       54      54A       0
                idataBANK0                          49B      49B        1      5F2       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        1         0
                cinit                                11       11        4         0
                intentry                              4        4        C         0
                reset_vec                             0        0        1         0
                text14                              449      449       1D         0
                text13                              42C      42C       1D         0
                text12                              2F9      2F9       40         0
                text11                              466      466       1A         0
                text10                              480      480       16         0
                text9                               496      496        5         0
                text8                               3DC      3DC       31         0
                text7                               1BF      1BF       8B         0
                text6                               3AB      3AB       31         0
                text5                               40D      40D       1F         0
                text4                               24A      24A       5B         0
                text3                               339      339       3E         0
                text2                               377      377       34         0
                text1                               109      109       B6         0
                maintext                             15       15       F4         0
                idataBANK0                          49B      49B        1         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             2A5      2A5       54         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        A         1

        CLASS   BANK0          
                cstackBANK0                          20       20       2F         1
                dataBANK0                            4F       4F        1         1

        CLASS   BANK1          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   BANK3          

        CLASS   BANK2          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  0002A1  0002A5         8       0  CODE        2
                cstackBANK0                    000020  000030  000050        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                strings                        0002A5  000054  0002F9       54A       0  STRING      2
                text12                         0002F9  0001A3  00049C       5F2       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0050-006F             20           1
        BANK1            00A0-00BF             20           1
        CODE             0001-0003              3           2
                         049C-07FF            364
        COMMON           007A-007D              4           1
        CONFIG           2008-2008              1           2
        CONST            0001-0003              3           2
                         049C-07FF            100
        ENTRY            0001-0003              3           2
                         049C-07FF            100
        IDLOC            2000-2003              4           2
        RAM              0050-006F             20           1
                         00A0-00BF             20
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-016F             70           1
        SFR3             0180-01EF             70           1
        STACK            0050-006F             20           1
        STRCODE          0001-0003              3           2
                         049C-07FF            364
        STRING           0001-0003              3           2
                         049C-07FF            100

                                  Symbol Table

?___awdiv                  cstackCOMMON 0076
?___lwdiv                  cstackCOMMON 0074
?___lwmod                  cstackBANK0  0023
?_sprintf                  cstackBANK0  0028
ADCRead@ch                 cstackCOMMON 0075
LCD_Cmd@a                  cstackCOMMON 0077
LCD_Port@a                 cstackCOMMON 0074
LCD_Set_Cursor@temp        cstackBANK0  0025
LCD_Set_Cursor@w           cstackBANK0  0024
LCD_Set_Cursor@x           cstackBANK0  0022
LCD_Set_Cursor@y           cstackCOMMON 0078
LCD_Set_Cursor@z           cstackBANK0  0023
LCD_Write_Char@a           cstackCOMMON 0078
LCD_Write_Char@temp        cstackCOMMON 0076
LCD_Write_Char@y           cstackCOMMON 0077
LCD_Write_String@a         cstackBANK0  0022
LCD_Write_String@i         cstackBANK0  0020
_ADCON0                    (abs)        001F
_ADCON1                    (abs)        009F
_ADCRead                   text13       042C
_ADON                      (abs)        00F8
_ADRES                     (abs)        001E
_ANSELA                    (abs)        0185
_ANSELB                    (abs)        0186
_ANSELC                    (abs)        0187
_CCP1CON                   (abs)        0017
_CCP1CONbits               (abs)        0017
_CCPR1L                    (abs)        0015
_FVRCON                    (abs)        009D
_GO_nDONE                  (abs)        00F9
_INTCONbits                (abs)        000B
_IRCF0                     (abs)        0484
_IRCF1                     (abs)        0485
_Init                      text12       02F9
_LCD_Clear                 text9        0496
_LCD_Cmd                   text10       0480
_LCD_Init                  text8        03DC
_LCD_Port                  text11       0466
_LCD_Set_Cursor            text7        01BF
_LCD_Write_Char            text6        03AB
_LCD_Write_String          text5        040D
_OutCurrent                dataBANK0    004F
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_PORTA                     (abs)        0005
_PORTB                     (abs)        0006
_PORTCbits                 (abs)        0007
_PR2                       (abs)        0092
_PS0                       (abs)        0408
_PS1                       (abs)        0409
_PS2                       (abs)        040A
_PSA                       (abs)        040B
_RC0                       (abs)        0038
_RC1                       (abs)        0039
_RC2                       (abs)        003A
_RC3                       (abs)        003B
_RC4                       (abs)        003C
_RC6                       (abs)        003E
_T0CS                      (abs)        040D
_T0SE                      (abs)        040C
_T1CON                     (abs)        0010
_T1CONbits                 (abs)        0010
_T2CONbits                 (abs)        0012
_TMR0                      (abs)        0001
_TMR1H                     (abs)        000F
_TMR1L                     (abs)        000E
_TRISA                     (abs)        0085
_TRISB                     (abs)        0086
_TRISC                     (abs)        0087
_TRISCbits                 (abs)        0087
__CFG_BOREN$ON             (abs)        0000
__CFG_FOSC$INTOSCIO        (abs)        0000
__CFG_PWRTE$ON             (abs)        0000
__CFG_WDTE$OFF             (abs)        0000
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__Hcinit                   cinit        0015
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2008
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__HdataBANK0               dataBANK0    0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0011
__Hfunctab                 functab      0000
__HidataBANK0              idataBANK0   0000
__Hidloc                   idloc        0000
__Hinit                    init         0010
__Hintentry                intentry     0010
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0001
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        2008
__Hspace_1                 (abs)        007A
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__Lcinit                   cinit        0011
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       2007
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__LdataBANK0               dataBANK0    0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0010
__Lfunctab                 functab      0000
__LidataBANK0              idataBANK0   0000
__Lidloc                   idloc        0000
__Linit                    init         0010
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        2008
__S1                       (abs)        007A
__S2                       (abs)        0000
___awdiv                   text4        024A
___awdiv@counter           cstackBANK0  0021
___awdiv@dividend          cstackCOMMON 0078
___awdiv@divisor           cstackCOMMON 0076
___awdiv@quotient          cstackBANK0  0023
___awdiv@sign              cstackBANK0  0022
___int_sp                  stack        0000
___latbits                 (abs)        0000
___lwdiv                   text3        0339
___lwdiv@counter           cstackBANK0  0022
___lwdiv@dividend          cstackCOMMON 0076
___lwdiv@divisor           cstackCOMMON 0074
___lwdiv@quotient          cstackBANK0  0020
___lwmod                   text2        0377
___lwmod@counter           cstackBANK0  0027
___lwmod@dividend          cstackBANK0  0025
___lwmod@divisor           cstackBANK0  0023
___sp                      stack        0000
__end_of_ADCRead           text13       0449
__end_of_Init              text12       0339
__end_of_LCD_Clear         text9        049B
__end_of_LCD_Cmd           text10       0496
__end_of_LCD_Init          text8        040D
__end_of_LCD_Port          text11       0480
__end_of_LCD_Set_Cursor    text7        024A
__end_of_LCD_Write_Char    text6        03DC
__end_of_LCD_Write_String  text5        042C
__end_of___awdiv           text4        02A5
__end_of___lwdiv           text3        0377
__end_of___lwmod           text2        03AB
__end_of__initialization   cinit        0013
__end_of__stringtab        strings      02AB
__end_of_dpowers           strings      02B5
__end_of_int_routine       text14       0466
__end_of_main              maintext     0109
__end_of_sprintf           text1        01BF
__initialization           cinit        0011
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pdataBANK0               dataBANK0    004F
__pidataBANK0              idataBANK0   049B
__pintentry                intentry     0004
__pmaintext                maintext     0015
__pstrings                 strings      02A5
__ptext1                   text1        0109
__ptext10                  text10       0480
__ptext11                  text11       0466
__ptext12                  text12       02F9
__ptext13                  text13       042C
__ptext14                  text14       0449
__ptext2                   text2        0377
__ptext3                   text3        0339
__ptext4                   text4        024A
__ptext5                   text5        040D
__ptext6                   text6        03AB
__ptext7                   text7        01BF
__ptext8                   text8        03DC
__ptext9                   text9        0496
__size_of_ADCRead          (abs)        0000
__size_of_Init             (abs)        0000
__size_of_LCD_Clear        (abs)        0000
__size_of_LCD_Cmd          (abs)        0000
__size_of_LCD_Init         (abs)        0000
__size_of_LCD_Port         (abs)        0000
__size_of_LCD_Set_Cursor   (abs)        0000
__size_of_LCD_Write_Char   (abs)        0000
__size_of_LCD_Write_String (abs)        0000
__size_of___awdiv          (abs)        0000
__size_of___lwdiv          (abs)        0000
__size_of___lwmod          (abs)        0000
__size_of_int_routine      (abs)        0000
__size_of_main             (abs)        0000
__size_of_sprintf          (abs)        0000
__stringbase               strings      02AA
__stringtab                strings      02A5
_dpowers                   strings      02AB
_int_routine               text14       0449
_main                      maintext     0015
_sprintf                   text1        0109
btemp                      (abs)        007E
end_of_initialization      cinit        0013
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
ltemp                      (abs)        007E
ltemp0                     (abs)        007E
ltemp1                     (abs)        0082
ltemp2                     (abs)        0086
ltemp3                     (abs)        0080
main@ReadCurrent           cstackBANK0  004D
main@s                     cstackBANK0  0038
main@setpoint              cstackBANK0  004C
main@x                     cstackBANK0  004E
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
sprintf@ap                 cstackBANK0  002E
sprintf@c                  cstackBANK0  0034
sprintf@f                  cstackBANK0  0028
sprintf@flag               cstackBANK0  002F
sprintf@prec               cstackBANK0  0030
sprintf@sp                 cstackBANK0  0033
sprintf@val                cstackBANK0  0031
stackhi                    (abs)        0000
stacklo                    (abs)        0000
start                      init         0010
start_initialization       cinit        0011
ttemp                      (abs)        007E
ttemp0                     (abs)        007E
ttemp1                     (abs)        0081
ttemp2                     (abs)        0084
ttemp3                     (abs)        0087
ttemp4                     (abs)        007F
wtemp                      (abs)        007E
wtemp0                     (abs)        007E
wtemp1                     (abs)        0080
wtemp2                     (abs)        0082
wtemp3                     (abs)        0084
wtemp4                     (abs)        0086
wtemp5                     (abs)        0088
wtemp6                     (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 24 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  x               1   46[BANK0 ] unsigned char 
  ReadCurrent     1   45[BANK0 ] unsigned char 
  setpoint        1   44[BANK0 ] unsigned char 
  s              20   24[BANK0 ] unsigned char [20]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0      23       0
      Temps:          0       3       0
      Totals:         0      26       0
Total ram usage:       26 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_ADCRead
		_Init
		_LCD_Clear
		_LCD_Init
		_LCD_Set_Cursor
		_LCD_Write_String
		___awdiv
		_sprintf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> main@s(20), 
  f               1    8[BANK0 ] PTR const unsigned char 
		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 Auto vars:     Size  Location     Type
  sp              1   19[BANK0 ] PTR unsigned char 
		 -> main@s(20), 
  tmpval          4    0        struct .
  val             2   17[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   20[BANK0 ] char 
  prec            1   16[BANK0 ] char 
  flag            1   15[BANK0 ] unsigned char 
  ap              1   14[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       3       0
      Locals:         0       7       0
      Temps:          0       3       0
      Totals:         0      13       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    3[BANK0 ] unsigned int 
  dividend        2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       4       0
      Locals:         0       1       0
      Temps:          1       0       0
      Totals:         1       5       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    4[COMMON] unsigned int 
  dividend        2    6[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    0[BANK0 ] unsigned int 
  counter         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    4[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         4       0       0
      Locals:         0       3       0
      Temps:          1       0       0
      Totals:         5       3       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    6[COMMON] int 
  dividend        2    8[COMMON] int 
 Auto vars:     Size  Location     Type
  quotient        2    3[BANK0 ] int 
  sign            1    2[BANK0 ] unsigned char 
  counter         1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    6[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         4       0       0
      Locals:         0       4       0
      Temps:          0       1       0
      Totals:         4       5       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_String *****************
 Defined at:
		line 172 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR const unsigned char 
		 -> main@s(20), 
 Auto vars:     Size  Location     Type
  a               1    2[BANK0 ] PTR const unsigned char 
		 -> main@s(20), 
  i               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       3       0
      Temps:          1       0       0
      Totals:         1       3       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_Char *****************
 Defined at:
		line 156 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    8[COMMON] unsigned char 
  y               1    7[COMMON] unsigned char 
  temp            1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         3       0       0
      Temps:          1       0       0
      Totals:         4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_Port
 This function is called by:
		_LCD_Write_String
 This function uses a non-reentrant model


 *************** function _LCD_Set_Cursor *****************
 Defined at:
		line 94 in file "lcd.h"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    8[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    2[BANK0 ] unsigned char 
  temp            1    5[BANK0 ] unsigned char 
  w               1    4[BANK0 ] unsigned char 
  z               1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         1       0       0
      Locals:         0       4       0
      Temps:          0       2       0
      Totals:         1       6       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 137 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          2       0       0
      Totals:         2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Cmd
		_LCD_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Clear *****************
 Defined at:
		line 59 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   40[None  ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Cmd *****************
 Defined at:
		line 50 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          2       0       0
      Totals:         3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_Port
 This function is called by:
		_LCD_Clear
		_LCD_Set_Cursor
		_LCD_Init
		_LCD_Shift_Right
		_LCD_Shift_Left
 This function uses a non-reentrant model


 *************** function _LCD_Port *****************
 Defined at:
		line 28 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          0       0       0
      Totals:         1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_Cmd
		_LCD_Init
		_LCD_Write_Char
 This function uses a non-reentrant model


 *************** function _Init *****************
 Defined at:
		line 26 in file "system.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADCRead *****************
 Defined at:
		line 15 in file "user.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          1       0       0
      Totals:         2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _int_routine *****************
 Defined at:
		line 10 in file "interupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          4       0       0
      Totals:         4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c
		___lwmod       		CODE           	0377	0000	53

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c estimated size: 53

interupts.c
		_int_routine   		CODE           	0449	0000	30

interupts.c estimated size: 30

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c
		___lwdiv       		CODE           	0339	0000	63

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c estimated size: 63

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c
		___awdiv       		CODE           	024A	0000	92

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c estimated size: 92

shared
		__stringtab    		STRING         	02A5	0000	7
		_dpowers       		STRING         	02AB	0000	11
		__initialization		CODE           	0011	0000	3

shared estimated size: 21

lcd.h
		_LCD_Init      		CODE           	03DC	0000	50
		_LCD_Write_Char		CODE           	03AB	0000	50
		_LCD_Cmd       		CODE           	0480	0000	23
		_LCD_Set_Cursor		CODE           	01BF	0000	140
		_LCD_Clear     		CODE           	0496	0000	6
		_LCD_Port      		CODE           	0466	0000	27
		_LCD_Write_String		CODE           	040D	0000	32

lcd.h estimated size: 328

user.c
		_ADCRead       		CODE           	042C	0000	30

user.c estimated size: 30

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c
		_sprintf       		CODE           	0109	0000	183

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c estimated size: 183

main.c
		_main          		CODE           	0015	0000	245

main.c estimated size: 245

system.c
		_Init          		CODE           	02F9	0000	65

system.c estimated size: 65

