

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Nov 03 01:47:53 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  001C                     	;# 
    71  001C                     	;# 
    72  001D                     	;# 
    73  001D                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  008C                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  008E                     	;# 
    80  008E                     	;# 
    81  008F                     	;# 
    82  0090                     	;# 
    83  0090                     	;# 
    84  0091                     	;# 
    85  0093                     	;# 
    86  0094                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  0110                     	;# 
   103  0110                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0114                     	;# 
   110  0115                     	;# 
   111  0116                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0119                     	;# 
   115  0119                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011A                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011B                     	;# 
   122  011B                     	;# 
   123  011B                     	;# 
   124  011B                     	;# 
   125  011C                     	;# 
   126  011C                     	;# 
   127  011C                     	;# 
   128  011D                     	;# 
   129  011D                     	;# 
   130  011D                     	;# 
   131  011E                     	;# 
   132  011E                     	;# 
   133  011E                     	;# 
   134  011F                     	;# 
   135  011F                     	;# 
   136  011F                     	;# 
   137  011F                     	;# 
   138  011F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  018E                     	;# 
   142  018F                     	;# 
   143  0190                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0196                     	;# 
   147  0197                     	;# 
   148  0198                     	;# 
   149  0199                     	;# 
   150  019A                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  020C                     	;# 
   154  020D                     	;# 
   155  020E                     	;# 
   156  020F                     	;# 
   157  020F                     	;# 
   158  0210                     	;# 
   159  0210                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0213                     	;# 
   164  0214                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  0218                     	;# 
   172  0219                     	;# 
   173  021A                     	;# 
   174  021B                     	;# 
   175  021B                     	;# 
   176  021C                     	;# 
   177  021C                     	;# 
   178  021D                     	;# 
   179  021D                     	;# 
   180  021E                     	;# 
   181  021F                     	;# 
   182  028C                     	;# 
   183  028C                     	;# 
   184  028D                     	;# 
   185  028D                     	;# 
   186  028E                     	;# 
   187  028F                     	;# 
   188  0290                     	;# 
   189  0290                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0292                     	;# 
   193  0293                     	;# 
   194  0293                     	;# 
   195  0294                     	;# 
   196  0295                     	;# 
   197  0296                     	;# 
   198  0296                     	;# 
   199  0297                     	;# 
   200  0298                     	;# 
   201  0298                     	;# 
   202  0299                     	;# 
   203  0299                     	;# 
   204  029A                     	;# 
   205  029B                     	;# 
   206  029C                     	;# 
   207  029C                     	;# 
   208  029D                     	;# 
   209  030C                     	;# 
   210  030C                     	;# 
   211  030D                     	;# 
   212  030E                     	;# 
   213  030F                     	;# 
   214  0310                     	;# 
   215  0310                     	;# 
   216  0311                     	;# 
   217  0312                     	;# 
   218  0313                     	;# 
   219  0314                     	;# 
   220  0314                     	;# 
   221  0315                     	;# 
   222  0316                     	;# 
   223  0317                     	;# 
   224  0318                     	;# 
   225  0318                     	;# 
   226  0319                     	;# 
   227  031A                     	;# 
   228  031B                     	;# 
   229  031C                     	;# 
   230  031C                     	;# 
   231  031D                     	;# 
   232  031E                     	;# 
   233  031F                     	;# 
   234  038C                     	;# 
   235  038D                     	;# 
   236  038E                     	;# 
   237  0390                     	;# 
   238  0391                     	;# 
   239  0392                     	;# 
   240  040C                     	;# 
   241  040D                     	;# 
   242  040E                     	;# 
   243  040F                     	;# 
   244  0410                     	;# 
   245  0411                     	;# 
   246  0416                     	;# 
   247  0416                     	;# 
   248  0417                     	;# 
   249  0418                     	;# 
   250  0418                     	;# 
   251  0419                     	;# 
   252  041A                     	;# 
   253  041A                     	;# 
   254  041B                     	;# 
   255  041C                     	;# 
   256  041C                     	;# 
   257  041D                     	;# 
   258  041E                     	;# 
   259  041F                     	;# 
   260  048C                     	;# 
   261  048C                     	;# 
   262  048D                     	;# 
   263  048E                     	;# 
   264  048F                     	;# 
   265  048F                     	;# 
   266  0490                     	;# 
   267  0491                     	;# 
   268  0492                     	;# 
   269  0492                     	;# 
   270  0493                     	;# 
   271  0494                     	;# 
   272  0495                     	;# 
   273  0495                     	;# 
   274  0496                     	;# 
   275  0497                     	;# 
   276  0498                     	;# 
   277  0499                     	;# 
   278  049A                     	;# 
   279  049B                     	;# 
   280  049C                     	;# 
   281  049D                     	;# 
   282  050C                     	;# 
   283  050C                     	;# 
   284  050D                     	;# 
   285  050E                     	;# 
   286  050F                     	;# 
   287  050F                     	;# 
   288  0510                     	;# 
   289  0511                     	;# 
   290  0512                     	;# 
   291  0512                     	;# 
   292  0513                     	;# 
   293  0514                     	;# 
   294  0515                     	;# 
   295  0515                     	;# 
   296  0516                     	;# 
   297  0517                     	;# 
   298  0518                     	;# 
   299  0519                     	;# 
   300  051A                     	;# 
   301  051B                     	;# 
   302  051C                     	;# 
   303  051D                     	;# 
   304  058C                     	;# 
   305  058C                     	;# 
   306  058D                     	;# 
   307  058E                     	;# 
   308  058F                     	;# 
   309  058F                     	;# 
   310  0590                     	;# 
   311  0591                     	;# 
   312  0592                     	;# 
   313  0593                     	;# 
   314  060C                     	;# 
   315  060D                     	;# 
   316  060E                     	;# 
   317  060F                     	;# 
   318  0610                     	;# 
   319  0611                     	;# 
   320  0612                     	;# 
   321  0613                     	;# 
   322  0614                     	;# 
   323  0616                     	;# 
   324  0617                     	;# 
   325  0618                     	;# 
   326  0619                     	;# 
   327  061A                     	;# 
   328  061B                     	;# 
   329  061C                     	;# 
   330  061D                     	;# 
   331  061E                     	;# 
   332  068C                     	;# 
   333  068D                     	;# 
   334  068E                     	;# 
   335  068F                     	;# 
   336  0690                     	;# 
   337  0691                     	;# 
   338  0692                     	;# 
   339  0693                     	;# 
   340  0694                     	;# 
   341  070C                     	;# 
   342  070D                     	;# 
   343  070E                     	;# 
   344  070F                     	;# 
   345  0710                     	;# 
   346  0711                     	;# 
   347  0712                     	;# 
   348  0713                     	;# 
   349  0714                     	;# 
   350  0716                     	;# 
   351  0717                     	;# 
   352  0718                     	;# 
   353  0719                     	;# 
   354  071A                     	;# 
   355  071B                     	;# 
   356  071C                     	;# 
   357  071D                     	;# 
   358  071E                     	;# 
   359  0796                     	;# 
   360  0797                     	;# 
   361  0798                     	;# 
   362  0799                     	;# 
   363  079A                     	;# 
   364  079B                     	;# 
   365  080C                     	;# 
   366  080D                     	;# 
   367  080E                     	;# 
   368  080F                     	;# 
   369  0810                     	;# 
   370  0811                     	;# 
   371  0812                     	;# 
   372  0813                     	;# 
   373  0814                     	;# 
   374  081A                     	;# 
   375  081B                     	;# 
   376  081C                     	;# 
   377  081D                     	;# 
   378  081E                     	;# 
   379  081F                     	;# 
   380  088C                     	;# 
   381  088D                     	;# 
   382  088E                     	;# 
   383  088F                     	;# 
   384  0890                     	;# 
   385  0891                     	;# 
   386  0892                     	;# 
   387  0893                     	;# 
   388  0895                     	;# 
   389  0896                     	;# 
   390  0897                     	;# 
   391  0898                     	;# 
   392  0899                     	;# 
   393  089A                     	;# 
   394  089B                     	;# 
   395  090C                     	;# 
   396  090E                     	;# 
   397  090F                     	;# 
   398  091F                     	;# 
   399  091F                     	;# 
   400  098F                     	;# 
   401  098F                     	;# 
   402  0990                     	;# 
   403  0991                     	;# 
   404  0992                     	;# 
   405  0993                     	;# 
   406  0994                     	;# 
   407  0995                     	;# 
   408  0996                     	;# 
   409  0997                     	;# 
   410  0E0F                     	;# 
   411  0E10                     	;# 
   412  0E11                     	;# 
   413  0E12                     	;# 
   414  0E13                     	;# 
   415  0E14                     	;# 
   416  0E15                     	;# 
   417  0E16                     	;# 
   418  0E17                     	;# 
   419  0E18                     	;# 
   420  0E19                     	;# 
   421  0E1A                     	;# 
   422  0E1B                     	;# 
   423  0E1C                     	;# 
   424  0E1D                     	;# 
   425  0E1E                     	;# 
   426  0E1F                     	;# 
   427  0E20                     	;# 
   428  0E21                     	;# 
   429  0E22                     	;# 
   430  0E23                     	;# 
   431  0E24                     	;# 
   432  0E25                     	;# 
   433  0E26                     	;# 
   434  0E27                     	;# 
   435  0E28                     	;# 
   436  0E29                     	;# 
   437  0E2A                     	;# 
   438  0E2B                     	;# 
   439  0E2C                     	;# 
   440  0E2D                     	;# 
   441  0E2E                     	;# 
   442  0E2F                     	;# 
   443  0E30                     	;# 
   444  0E31                     	;# 
   445  0E32                     	;# 
   446  0E33                     	;# 
   447  0E34                     	;# 
   448  0E35                     	;# 
   449  0E36                     	;# 
   450  0E37                     	;# 
   451  0E8F                     	;# 
   452  0E90                     	;# 
   453  0E91                     	;# 
   454  0E92                     	;# 
   455  0E93                     	;# 
   456  0E94                     	;# 
   457  0E95                     	;# 
   458  0E96                     	;# 
   459  0E97                     	;# 
   460  0E9C                     	;# 
   461  0E9D                     	;# 
   462  0E9E                     	;# 
   463  0EA1                     	;# 
   464  0EA2                     	;# 
   465  0EA3                     	;# 
   466  0EA4                     	;# 
   467  0EA5                     	;# 
   468  0EA9                     	;# 
   469  0EAA                     	;# 
   470  0EAB                     	;# 
   471  0EAC                     	;# 
   472  0EB1                     	;# 
   473  0EB2                     	;# 
   474  0EB3                     	;# 
   475  0EB8                     	;# 
   476  0EB9                     	;# 
   477  0EBA                     	;# 
   478  0EBB                     	;# 
   479  0EBC                     	;# 
   480  0EBD                     	;# 
   481  0EBE                     	;# 
   482  0EC3                     	;# 
   483  0EC5                     	;# 
   484  0EC6                     	;# 
   485  0EC7                     	;# 
   486  0EC8                     	;# 
   487  0EC9                     	;# 
   488  0ECA                     	;# 
   489  0ECB                     	;# 
   490  0ECC                     	;# 
   491  0F10                     	;# 
   492  0F11                     	;# 
   493  0F12                     	;# 
   494  0F13                     	;# 
   495  0F14                     	;# 
   496  0F15                     	;# 
   497  0F16                     	;# 
   498  0F17                     	;# 
   499  0F18                     	;# 
   500  0F19                     	;# 
   501  0F1A                     	;# 
   502  0F1B                     	;# 
   503  0F1C                     	;# 
   504  0F1D                     	;# 
   505  0F1E                     	;# 
   506  0F1F                     	;# 
   507  0F20                     	;# 
   508  0F21                     	;# 
   509  0F22                     	;# 
   510  0F23                     	;# 
   511  0F24                     	;# 
   512  0F25                     	;# 
   513  0F26                     	;# 
   514  0F27                     	;# 
   515  0F38                     	;# 
   516  0F39                     	;# 
   517  0F3A                     	;# 
   518  0F3B                     	;# 
   519  0F3C                     	;# 
   520  0F3D                     	;# 
   521  0F3E                     	;# 
   522  0F3F                     	;# 
   523  0F40                     	;# 
   524  0F41                     	;# 
   525  0F43                     	;# 
   526  0F44                     	;# 
   527  0F45                     	;# 
   528  0F46                     	;# 
   529  0F47                     	;# 
   530  0F48                     	;# 
   531  0F49                     	;# 
   532  0F4A                     	;# 
   533  0F4B                     	;# 
   534  0F4C                     	;# 
   535  0F4E                     	;# 
   536  0F4F                     	;# 
   537  0F50                     	;# 
   538  0F51                     	;# 
   539  0F52                     	;# 
   540  0F53                     	;# 
   541  0F54                     	;# 
   542  0F55                     	;# 
   543  0F56                     	;# 
   544  0F57                     	;# 
   545  0F65                     	;# 
   546  0F68                     	;# 
   547  0F69                     	;# 
   548  0F6A                     	;# 
   549  0F6B                     	;# 
   550  0FE4                     	;# 
   551  0FE5                     	;# 
   552  0FE6                     	;# 
   553  0FE7                     	;# 
   554  0FE8                     	;# 
   555  0FE9                     	;# 
   556  0FEA                     	;# 
   557  0FEB                     	;# 
   558  0FED                     	;# 
   559  0FEE                     	;# 
   560  0FEF                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0008                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  000D                     	;# 
   575  000E                     	;# 
   576  0010                     	;# 
   577  0011                     	;# 
   578  0012                     	;# 
   579  0013                     	;# 
   580  0016                     	;# 
   581  0017                     	;# 
   582  0018                     	;# 
   583  001C                     	;# 
   584  001C                     	;# 
   585  001D                     	;# 
   586  001D                     	;# 
   587  001E                     	;# 
   588  001F                     	;# 
   589  008C                     	;# 
   590  008C                     	;# 
   591  008D                     	;# 
   592  008E                     	;# 
   593  008E                     	;# 
   594  008F                     	;# 
   595  0090                     	;# 
   596  0090                     	;# 
   597  0091                     	;# 
   598  0093                     	;# 
   599  0094                     	;# 
   600  0095                     	;# 
   601  0096                     	;# 
   602  0097                     	;# 
   603  0098                     	;# 
   604  0099                     	;# 
   605  009A                     	;# 
   606  009B                     	;# 
   607  009C                     	;# 
   608  009D                     	;# 
   609  009E                     	;# 
   610  010C                     	;# 
   611  010D                     	;# 
   612  010E                     	;# 
   613  010E                     	;# 
   614  010F                     	;# 
   615  0110                     	;# 
   616  0110                     	;# 
   617  0111                     	;# 
   618  0112                     	;# 
   619  0112                     	;# 
   620  0113                     	;# 
   621  0114                     	;# 
   622  0114                     	;# 
   623  0115                     	;# 
   624  0116                     	;# 
   625  0116                     	;# 
   626  0117                     	;# 
   627  0119                     	;# 
   628  0119                     	;# 
   629  0119                     	;# 
   630  011A                     	;# 
   631  011A                     	;# 
   632  011A                     	;# 
   633  011B                     	;# 
   634  011B                     	;# 
   635  011B                     	;# 
   636  011B                     	;# 
   637  011B                     	;# 
   638  011C                     	;# 
   639  011C                     	;# 
   640  011C                     	;# 
   641  011D                     	;# 
   642  011D                     	;# 
   643  011D                     	;# 
   644  011E                     	;# 
   645  011E                     	;# 
   646  011E                     	;# 
   647  011F                     	;# 
   648  011F                     	;# 
   649  011F                     	;# 
   650  011F                     	;# 
   651  011F                     	;# 
   652  018C                     	;# 
   653  018D                     	;# 
   654  018E                     	;# 
   655  018F                     	;# 
   656  0190                     	;# 
   657  0191                     	;# 
   658  0192                     	;# 
   659  0196                     	;# 
   660  0197                     	;# 
   661  0198                     	;# 
   662  0199                     	;# 
   663  019A                     	;# 
   664  019B                     	;# 
   665  019C                     	;# 
   666  020C                     	;# 
   667  020D                     	;# 
   668  020E                     	;# 
   669  020F                     	;# 
   670  020F                     	;# 
   671  0210                     	;# 
   672  0210                     	;# 
   673  0211                     	;# 
   674  0211                     	;# 
   675  0212                     	;# 
   676  0213                     	;# 
   677  0214                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0216                     	;# 
   681  0216                     	;# 
   682  0217                     	;# 
   683  0217                     	;# 
   684  0218                     	;# 
   685  0219                     	;# 
   686  021A                     	;# 
   687  021B                     	;# 
   688  021B                     	;# 
   689  021C                     	;# 
   690  021C                     	;# 
   691  021D                     	;# 
   692  021D                     	;# 
   693  021E                     	;# 
   694  021F                     	;# 
   695  028C                     	;# 
   696  028C                     	;# 
   697  028D                     	;# 
   698  028D                     	;# 
   699  028E                     	;# 
   700  028F                     	;# 
   701  0290                     	;# 
   702  0290                     	;# 
   703  0291                     	;# 
   704  0292                     	;# 
   705  0292                     	;# 
   706  0293                     	;# 
   707  0293                     	;# 
   708  0294                     	;# 
   709  0295                     	;# 
   710  0296                     	;# 
   711  0296                     	;# 
   712  0297                     	;# 
   713  0298                     	;# 
   714  0298                     	;# 
   715  0299                     	;# 
   716  0299                     	;# 
   717  029A                     	;# 
   718  029B                     	;# 
   719  029C                     	;# 
   720  029C                     	;# 
   721  029D                     	;# 
   722  030C                     	;# 
   723  030C                     	;# 
   724  030D                     	;# 
   725  030E                     	;# 
   726  030F                     	;# 
   727  0310                     	;# 
   728  0310                     	;# 
   729  0311                     	;# 
   730  0312                     	;# 
   731  0313                     	;# 
   732  0314                     	;# 
   733  0314                     	;# 
   734  0315                     	;# 
   735  0316                     	;# 
   736  0317                     	;# 
   737  0318                     	;# 
   738  0318                     	;# 
   739  0319                     	;# 
   740  031A                     	;# 
   741  031B                     	;# 
   742  031C                     	;# 
   743  031C                     	;# 
   744  031D                     	;# 
   745  031E                     	;# 
   746  031F                     	;# 
   747  038C                     	;# 
   748  038D                     	;# 
   749  038E                     	;# 
   750  0390                     	;# 
   751  0391                     	;# 
   752  0392                     	;# 
   753  040C                     	;# 
   754  040D                     	;# 
   755  040E                     	;# 
   756  040F                     	;# 
   757  0410                     	;# 
   758  0411                     	;# 
   759  0416                     	;# 
   760  0416                     	;# 
   761  0417                     	;# 
   762  0418                     	;# 
   763  0418                     	;# 
   764  0419                     	;# 
   765  041A                     	;# 
   766  041A                     	;# 
   767  041B                     	;# 
   768  041C                     	;# 
   769  041C                     	;# 
   770  041D                     	;# 
   771  041E                     	;# 
   772  041F                     	;# 
   773  048C                     	;# 
   774  048C                     	;# 
   775  048D                     	;# 
   776  048E                     	;# 
   777  048F                     	;# 
   778  048F                     	;# 
   779  0490                     	;# 
   780  0491                     	;# 
   781  0492                     	;# 
   782  0492                     	;# 
   783  0493                     	;# 
   784  0494                     	;# 
   785  0495                     	;# 
   786  0495                     	;# 
   787  0496                     	;# 
   788  0497                     	;# 
   789  0498                     	;# 
   790  0499                     	;# 
   791  049A                     	;# 
   792  049B                     	;# 
   793  049C                     	;# 
   794  049D                     	;# 
   795  050C                     	;# 
   796  050C                     	;# 
   797  050D                     	;# 
   798  050E                     	;# 
   799  050F                     	;# 
   800  050F                     	;# 
   801  0510                     	;# 
   802  0511                     	;# 
   803  0512                     	;# 
   804  0512                     	;# 
   805  0513                     	;# 
   806  0514                     	;# 
   807  0515                     	;# 
   808  0515                     	;# 
   809  0516                     	;# 
   810  0517                     	;# 
   811  0518                     	;# 
   812  0519                     	;# 
   813  051A                     	;# 
   814  051B                     	;# 
   815  051C                     	;# 
   816  051D                     	;# 
   817  058C                     	;# 
   818  058C                     	;# 
   819  058D                     	;# 
   820  058E                     	;# 
   821  058F                     	;# 
   822  058F                     	;# 
   823  0590                     	;# 
   824  0591                     	;# 
   825  0592                     	;# 
   826  0593                     	;# 
   827  060C                     	;# 
   828  060D                     	;# 
   829  060E                     	;# 
   830  060F                     	;# 
   831  0610                     	;# 
   832  0611                     	;# 
   833  0612                     	;# 
   834  0613                     	;# 
   835  0614                     	;# 
   836  0616                     	;# 
   837  0617                     	;# 
   838  0618                     	;# 
   839  0619                     	;# 
   840  061A                     	;# 
   841  061B                     	;# 
   842  061C                     	;# 
   843  061D                     	;# 
   844  061E                     	;# 
   845  068C                     	;# 
   846  068D                     	;# 
   847  068E                     	;# 
   848  068F                     	;# 
   849  0690                     	;# 
   850  0691                     	;# 
   851  0692                     	;# 
   852  0693                     	;# 
   853  0694                     	;# 
   854  070C                     	;# 
   855  070D                     	;# 
   856  070E                     	;# 
   857  070F                     	;# 
   858  0710                     	;# 
   859  0711                     	;# 
   860  0712                     	;# 
   861  0713                     	;# 
   862  0714                     	;# 
   863  0716                     	;# 
   864  0717                     	;# 
   865  0718                     	;# 
   866  0719                     	;# 
   867  071A                     	;# 
   868  071B                     	;# 
   869  071C                     	;# 
   870  071D                     	;# 
   871  071E                     	;# 
   872  0796                     	;# 
   873  0797                     	;# 
   874  0798                     	;# 
   875  0799                     	;# 
   876  079A                     	;# 
   877  079B                     	;# 
   878  080C                     	;# 
   879  080D                     	;# 
   880  080E                     	;# 
   881  080F                     	;# 
   882  0810                     	;# 
   883  0811                     	;# 
   884  0812                     	;# 
   885  0813                     	;# 
   886  0814                     	;# 
   887  081A                     	;# 
   888  081B                     	;# 
   889  081C                     	;# 
   890  081D                     	;# 
   891  081E                     	;# 
   892  081F                     	;# 
   893  088C                     	;# 
   894  088D                     	;# 
   895  088E                     	;# 
   896  088F                     	;# 
   897  0890                     	;# 
   898  0891                     	;# 
   899  0892                     	;# 
   900  0893                     	;# 
   901  0895                     	;# 
   902  0896                     	;# 
   903  0897                     	;# 
   904  0898                     	;# 
   905  0899                     	;# 
   906  089A                     	;# 
   907  089B                     	;# 
   908  090C                     	;# 
   909  090E                     	;# 
   910  090F                     	;# 
   911  091F                     	;# 
   912  091F                     	;# 
   913  098F                     	;# 
   914  098F                     	;# 
   915  0990                     	;# 
   916  0991                     	;# 
   917  0992                     	;# 
   918  0993                     	;# 
   919  0994                     	;# 
   920  0995                     	;# 
   921  0996                     	;# 
   922  0997                     	;# 
   923  0E0F                     	;# 
   924  0E10                     	;# 
   925  0E11                     	;# 
   926  0E12                     	;# 
   927  0E13                     	;# 
   928  0E14                     	;# 
   929  0E15                     	;# 
   930  0E16                     	;# 
   931  0E17                     	;# 
   932  0E18                     	;# 
   933  0E19                     	;# 
   934  0E1A                     	;# 
   935  0E1B                     	;# 
   936  0E1C                     	;# 
   937  0E1D                     	;# 
   938  0E1E                     	;# 
   939  0E1F                     	;# 
   940  0E20                     	;# 
   941  0E21                     	;# 
   942  0E22                     	;# 
   943  0E23                     	;# 
   944  0E24                     	;# 
   945  0E25                     	;# 
   946  0E26                     	;# 
   947  0E27                     	;# 
   948  0E28                     	;# 
   949  0E29                     	;# 
   950  0E2A                     	;# 
   951  0E2B                     	;# 
   952  0E2C                     	;# 
   953  0E2D                     	;# 
   954  0E2E                     	;# 
   955  0E2F                     	;# 
   956  0E30                     	;# 
   957  0E31                     	;# 
   958  0E32                     	;# 
   959  0E33                     	;# 
   960  0E34                     	;# 
   961  0E35                     	;# 
   962  0E36                     	;# 
   963  0E37                     	;# 
   964  0E8F                     	;# 
   965  0E90                     	;# 
   966  0E91                     	;# 
   967  0E92                     	;# 
   968  0E93                     	;# 
   969  0E94                     	;# 
   970  0E95                     	;# 
   971  0E96                     	;# 
   972  0E97                     	;# 
   973  0E9C                     	;# 
   974  0E9D                     	;# 
   975  0E9E                     	;# 
   976  0EA1                     	;# 
   977  0EA2                     	;# 
   978  0EA3                     	;# 
   979  0EA4                     	;# 
   980  0EA5                     	;# 
   981  0EA9                     	;# 
   982  0EAA                     	;# 
   983  0EAB                     	;# 
   984  0EAC                     	;# 
   985  0EB1                     	;# 
   986  0EB2                     	;# 
   987  0EB3                     	;# 
   988  0EB8                     	;# 
   989  0EB9                     	;# 
   990  0EBA                     	;# 
   991  0EBB                     	;# 
   992  0EBC                     	;# 
   993  0EBD                     	;# 
   994  0EBE                     	;# 
   995  0EC3                     	;# 
   996  0EC5                     	;# 
   997  0EC6                     	;# 
   998  0EC7                     	;# 
   999  0EC8                     	;# 
  1000  0EC9                     	;# 
  1001  0ECA                     	;# 
  1002  0ECB                     	;# 
  1003  0ECC                     	;# 
  1004  0F10                     	;# 
  1005  0F11                     	;# 
  1006  0F12                     	;# 
  1007  0F13                     	;# 
  1008  0F14                     	;# 
  1009  0F15                     	;# 
  1010  0F16                     	;# 
  1011  0F17                     	;# 
  1012  0F18                     	;# 
  1013  0F19                     	;# 
  1014  0F1A                     	;# 
  1015  0F1B                     	;# 
  1016  0F1C                     	;# 
  1017  0F1D                     	;# 
  1018  0F1E                     	;# 
  1019  0F1F                     	;# 
  1020  0F20                     	;# 
  1021  0F21                     	;# 
  1022  0F22                     	;# 
  1023  0F23                     	;# 
  1024  0F24                     	;# 
  1025  0F25                     	;# 
  1026  0F26                     	;# 
  1027  0F27                     	;# 
  1028  0F38                     	;# 
  1029  0F39                     	;# 
  1030  0F3A                     	;# 
  1031  0F3B                     	;# 
  1032  0F3C                     	;# 
  1033  0F3D                     	;# 
  1034  0F3E                     	;# 
  1035  0F3F                     	;# 
  1036  0F40                     	;# 
  1037  0F41                     	;# 
  1038  0F43                     	;# 
  1039  0F44                     	;# 
  1040  0F45                     	;# 
  1041  0F46                     	;# 
  1042  0F47                     	;# 
  1043  0F48                     	;# 
  1044  0F49                     	;# 
  1045  0F4A                     	;# 
  1046  0F4B                     	;# 
  1047  0F4C                     	;# 
  1048  0F4E                     	;# 
  1049  0F4F                     	;# 
  1050  0F50                     	;# 
  1051  0F51                     	;# 
  1052  0F52                     	;# 
  1053  0F53                     	;# 
  1054  0F54                     	;# 
  1055  0F55                     	;# 
  1056  0F56                     	;# 
  1057  0F57                     	;# 
  1058  0F65                     	;# 
  1059  0F68                     	;# 
  1060  0F69                     	;# 
  1061  0F6A                     	;# 
  1062  0F6B                     	;# 
  1063  0FE4                     	;# 
  1064  0FE5                     	;# 
  1065  0FE6                     	;# 
  1066  0FE7                     	;# 
  1067  0FE8                     	;# 
  1068  0FE9                     	;# 
  1069  0FEA                     	;# 
  1070  0FEB                     	;# 
  1071  0FED                     	;# 
  1072  0FEE                     	;# 
  1073  0FEF                     	;# 
  1074  0000                     	;# 
  1075  0001                     	;# 
  1076  0002                     	;# 
  1077  0003                     	;# 
  1078  0004                     	;# 
  1079  0005                     	;# 
  1080  0006                     	;# 
  1081  0007                     	;# 
  1082  0008                     	;# 
  1083  0009                     	;# 
  1084  000A                     	;# 
  1085  000B                     	;# 
  1086  000C                     	;# 
  1087  000D                     	;# 
  1088  000E                     	;# 
  1089  0010                     	;# 
  1090  0011                     	;# 
  1091  0012                     	;# 
  1092  0013                     	;# 
  1093  0016                     	;# 
  1094  0017                     	;# 
  1095  0018                     	;# 
  1096  001C                     	;# 
  1097  001C                     	;# 
  1098  001D                     	;# 
  1099  001D                     	;# 
  1100  001E                     	;# 
  1101  001F                     	;# 
  1102  008C                     	;# 
  1103  008C                     	;# 
  1104  008D                     	;# 
  1105  008E                     	;# 
  1106  008E                     	;# 
  1107  008F                     	;# 
  1108  0090                     	;# 
  1109  0090                     	;# 
  1110  0091                     	;# 
  1111  0093                     	;# 
  1112  0094                     	;# 
  1113  0095                     	;# 
  1114  0096                     	;# 
  1115  0097                     	;# 
  1116  0098                     	;# 
  1117  0099                     	;# 
  1118  009A                     	;# 
  1119  009B                     	;# 
  1120  009C                     	;# 
  1121  009D                     	;# 
  1122  009E                     	;# 
  1123  010C                     	;# 
  1124  010D                     	;# 
  1125  010E                     	;# 
  1126  010E                     	;# 
  1127  010F                     	;# 
  1128  0110                     	;# 
  1129  0110                     	;# 
  1130  0111                     	;# 
  1131  0112                     	;# 
  1132  0112                     	;# 
  1133  0113                     	;# 
  1134  0114                     	;# 
  1135  0114                     	;# 
  1136  0115                     	;# 
  1137  0116                     	;# 
  1138  0116                     	;# 
  1139  0117                     	;# 
  1140  0119                     	;# 
  1141  0119                     	;# 
  1142  0119                     	;# 
  1143  011A                     	;# 
  1144  011A                     	;# 
  1145  011A                     	;# 
  1146  011B                     	;# 
  1147  011B                     	;# 
  1148  011B                     	;# 
  1149  011B                     	;# 
  1150  011B                     	;# 
  1151  011C                     	;# 
  1152  011C                     	;# 
  1153  011C                     	;# 
  1154  011D                     	;# 
  1155  011D                     	;# 
  1156  011D                     	;# 
  1157  011E                     	;# 
  1158  011E                     	;# 
  1159  011E                     	;# 
  1160  011F                     	;# 
  1161  011F                     	;# 
  1162  011F                     	;# 
  1163  011F                     	;# 
  1164  011F                     	;# 
  1165  018C                     	;# 
  1166  018D                     	;# 
  1167  018E                     	;# 
  1168  018F                     	;# 
  1169  0190                     	;# 
  1170  0191                     	;# 
  1171  0192                     	;# 
  1172  0196                     	;# 
  1173  0197                     	;# 
  1174  0198                     	;# 
  1175  0199                     	;# 
  1176  019A                     	;# 
  1177  019B                     	;# 
  1178  019C                     	;# 
  1179  020C                     	;# 
  1180  020D                     	;# 
  1181  020E                     	;# 
  1182  020F                     	;# 
  1183  020F                     	;# 
  1184  0210                     	;# 
  1185  0210                     	;# 
  1186  0211                     	;# 
  1187  0211                     	;# 
  1188  0212                     	;# 
  1189  0213                     	;# 
  1190  0214                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0216                     	;# 
  1194  0216                     	;# 
  1195  0217                     	;# 
  1196  0217                     	;# 
  1197  0218                     	;# 
  1198  0219                     	;# 
  1199  021A                     	;# 
  1200  021B                     	;# 
  1201  021B                     	;# 
  1202  021C                     	;# 
  1203  021C                     	;# 
  1204  021D                     	;# 
  1205  021D                     	;# 
  1206  021E                     	;# 
  1207  021F                     	;# 
  1208  028C                     	;# 
  1209  028C                     	;# 
  1210  028D                     	;# 
  1211  028D                     	;# 
  1212  028E                     	;# 
  1213  028F                     	;# 
  1214  0290                     	;# 
  1215  0290                     	;# 
  1216  0291                     	;# 
  1217  0292                     	;# 
  1218  0292                     	;# 
  1219  0293                     	;# 
  1220  0293                     	;# 
  1221  0294                     	;# 
  1222  0295                     	;# 
  1223  0296                     	;# 
  1224  0296                     	;# 
  1225  0297                     	;# 
  1226  0298                     	;# 
  1227  0298                     	;# 
  1228  0299                     	;# 
  1229  0299                     	;# 
  1230  029A                     	;# 
  1231  029B                     	;# 
  1232  029C                     	;# 
  1233  029C                     	;# 
  1234  029D                     	;# 
  1235  030C                     	;# 
  1236  030C                     	;# 
  1237  030D                     	;# 
  1238  030E                     	;# 
  1239  030F                     	;# 
  1240  0310                     	;# 
  1241  0310                     	;# 
  1242  0311                     	;# 
  1243  0312                     	;# 
  1244  0313                     	;# 
  1245  0314                     	;# 
  1246  0314                     	;# 
  1247  0315                     	;# 
  1248  0316                     	;# 
  1249  0317                     	;# 
  1250  0318                     	;# 
  1251  0318                     	;# 
  1252  0319                     	;# 
  1253  031A                     	;# 
  1254  031B                     	;# 
  1255  031C                     	;# 
  1256  031C                     	;# 
  1257  031D                     	;# 
  1258  031E                     	;# 
  1259  031F                     	;# 
  1260  038C                     	;# 
  1261  038D                     	;# 
  1262  038E                     	;# 
  1263  0390                     	;# 
  1264  0391                     	;# 
  1265  0392                     	;# 
  1266  040C                     	;# 
  1267  040D                     	;# 
  1268  040E                     	;# 
  1269  040F                     	;# 
  1270  0410                     	;# 
  1271  0411                     	;# 
  1272  0416                     	;# 
  1273  0416                     	;# 
  1274  0417                     	;# 
  1275  0418                     	;# 
  1276  0418                     	;# 
  1277  0419                     	;# 
  1278  041A                     	;# 
  1279  041A                     	;# 
  1280  041B                     	;# 
  1281  041C                     	;# 
  1282  041C                     	;# 
  1283  041D                     	;# 
  1284  041E                     	;# 
  1285  041F                     	;# 
  1286  048C                     	;# 
  1287  048C                     	;# 
  1288  048D                     	;# 
  1289  048E                     	;# 
  1290  048F                     	;# 
  1291  048F                     	;# 
  1292  0490                     	;# 
  1293  0491                     	;# 
  1294  0492                     	;# 
  1295  0492                     	;# 
  1296  0493                     	;# 
  1297  0494                     	;# 
  1298  0495                     	;# 
  1299  0495                     	;# 
  1300  0496                     	;# 
  1301  0497                     	;# 
  1302  0498                     	;# 
  1303  0499                     	;# 
  1304  049A                     	;# 
  1305  049B                     	;# 
  1306  049C                     	;# 
  1307  049D                     	;# 
  1308  050C                     	;# 
  1309  050C                     	;# 
  1310  050D                     	;# 
  1311  050E                     	;# 
  1312  050F                     	;# 
  1313  050F                     	;# 
  1314  0510                     	;# 
  1315  0511                     	;# 
  1316  0512                     	;# 
  1317  0512                     	;# 
  1318  0513                     	;# 
  1319  0514                     	;# 
  1320  0515                     	;# 
  1321  0515                     	;# 
  1322  0516                     	;# 
  1323  0517                     	;# 
  1324  0518                     	;# 
  1325  0519                     	;# 
  1326  051A                     	;# 
  1327  051B                     	;# 
  1328  051C                     	;# 
  1329  051D                     	;# 
  1330  058C                     	;# 
  1331  058C                     	;# 
  1332  058D                     	;# 
  1333  058E                     	;# 
  1334  058F                     	;# 
  1335  058F                     	;# 
  1336  0590                     	;# 
  1337  0591                     	;# 
  1338  0592                     	;# 
  1339  0593                     	;# 
  1340  060C                     	;# 
  1341  060D                     	;# 
  1342  060E                     	;# 
  1343  060F                     	;# 
  1344  0610                     	;# 
  1345  0611                     	;# 
  1346  0612                     	;# 
  1347  0613                     	;# 
  1348  0614                     	;# 
  1349  0616                     	;# 
  1350  0617                     	;# 
  1351  0618                     	;# 
  1352  0619                     	;# 
  1353  061A                     	;# 
  1354  061B                     	;# 
  1355  061C                     	;# 
  1356  061D                     	;# 
  1357  061E                     	;# 
  1358  068C                     	;# 
  1359  068D                     	;# 
  1360  068E                     	;# 
  1361  068F                     	;# 
  1362  0690                     	;# 
  1363  0691                     	;# 
  1364  0692                     	;# 
  1365  0693                     	;# 
  1366  0694                     	;# 
  1367  070C                     	;# 
  1368  070D                     	;# 
  1369  070E                     	;# 
  1370  070F                     	;# 
  1371  0710                     	;# 
  1372  0711                     	;# 
  1373  0712                     	;# 
  1374  0713                     	;# 
  1375  0714                     	;# 
  1376  0716                     	;# 
  1377  0717                     	;# 
  1378  0718                     	;# 
  1379  0719                     	;# 
  1380  071A                     	;# 
  1381  071B                     	;# 
  1382  071C                     	;# 
  1383  071D                     	;# 
  1384  071E                     	;# 
  1385  0796                     	;# 
  1386  0797                     	;# 
  1387  0798                     	;# 
  1388  0799                     	;# 
  1389  079A                     	;# 
  1390  079B                     	;# 
  1391  080C                     	;# 
  1392  080D                     	;# 
  1393  080E                     	;# 
  1394  080F                     	;# 
  1395  0810                     	;# 
  1396  0811                     	;# 
  1397  0812                     	;# 
  1398  0813                     	;# 
  1399  0814                     	;# 
  1400  081A                     	;# 
  1401  081B                     	;# 
  1402  081C                     	;# 
  1403  081D                     	;# 
  1404  081E                     	;# 
  1405  081F                     	;# 
  1406  088C                     	;# 
  1407  088D                     	;# 
  1408  088E                     	;# 
  1409  088F                     	;# 
  1410  0890                     	;# 
  1411  0891                     	;# 
  1412  0892                     	;# 
  1413  0893                     	;# 
  1414  0895                     	;# 
  1415  0896                     	;# 
  1416  0897                     	;# 
  1417  0898                     	;# 
  1418  0899                     	;# 
  1419  089A                     	;# 
  1420  089B                     	;# 
  1421  090C                     	;# 
  1422  090E                     	;# 
  1423  090F                     	;# 
  1424  091F                     	;# 
  1425  091F                     	;# 
  1426  098F                     	;# 
  1427  098F                     	;# 
  1428  0990                     	;# 
  1429  0991                     	;# 
  1430  0992                     	;# 
  1431  0993                     	;# 
  1432  0994                     	;# 
  1433  0995                     	;# 
  1434  0996                     	;# 
  1435  0997                     	;# 
  1436  0E0F                     	;# 
  1437  0E10                     	;# 
  1438  0E11                     	;# 
  1439  0E12                     	;# 
  1440  0E13                     	;# 
  1441  0E14                     	;# 
  1442  0E15                     	;# 
  1443  0E16                     	;# 
  1444  0E17                     	;# 
  1445  0E18                     	;# 
  1446  0E19                     	;# 
  1447  0E1A                     	;# 
  1448  0E1B                     	;# 
  1449  0E1C                     	;# 
  1450  0E1D                     	;# 
  1451  0E1E                     	;# 
  1452  0E1F                     	;# 
  1453  0E20                     	;# 
  1454  0E21                     	;# 
  1455  0E22                     	;# 
  1456  0E23                     	;# 
  1457  0E24                     	;# 
  1458  0E25                     	;# 
  1459  0E26                     	;# 
  1460  0E27                     	;# 
  1461  0E28                     	;# 
  1462  0E29                     	;# 
  1463  0E2A                     	;# 
  1464  0E2B                     	;# 
  1465  0E2C                     	;# 
  1466  0E2D                     	;# 
  1467  0E2E                     	;# 
  1468  0E2F                     	;# 
  1469  0E30                     	;# 
  1470  0E31                     	;# 
  1471  0E32                     	;# 
  1472  0E33                     	;# 
  1473  0E34                     	;# 
  1474  0E35                     	;# 
  1475  0E36                     	;# 
  1476  0E37                     	;# 
  1477  0E8F                     	;# 
  1478  0E90                     	;# 
  1479  0E91                     	;# 
  1480  0E92                     	;# 
  1481  0E93                     	;# 
  1482  0E94                     	;# 
  1483  0E95                     	;# 
  1484  0E96                     	;# 
  1485  0E97                     	;# 
  1486  0E9C                     	;# 
  1487  0E9D                     	;# 
  1488  0E9E                     	;# 
  1489  0EA1                     	;# 
  1490  0EA2                     	;# 
  1491  0EA3                     	;# 
  1492  0EA4                     	;# 
  1493  0EA5                     	;# 
  1494  0EA9                     	;# 
  1495  0EAA                     	;# 
  1496  0EAB                     	;# 
  1497  0EAC                     	;# 
  1498  0EB1                     	;# 
  1499  0EB2                     	;# 
  1500  0EB3                     	;# 
  1501  0EB8                     	;# 
  1502  0EB9                     	;# 
  1503  0EBA                     	;# 
  1504  0EBB                     	;# 
  1505  0EBC                     	;# 
  1506  0EBD                     	;# 
  1507  0EBE                     	;# 
  1508  0EC3                     	;# 
  1509  0EC5                     	;# 
  1510  0EC6                     	;# 
  1511  0EC7                     	;# 
  1512  0EC8                     	;# 
  1513  0EC9                     	;# 
  1514  0ECA                     	;# 
  1515  0ECB                     	;# 
  1516  0ECC                     	;# 
  1517  0F10                     	;# 
  1518  0F11                     	;# 
  1519  0F12                     	;# 
  1520  0F13                     	;# 
  1521  0F14                     	;# 
  1522  0F15                     	;# 
  1523  0F16                     	;# 
  1524  0F17                     	;# 
  1525  0F18                     	;# 
  1526  0F19                     	;# 
  1527  0F1A                     	;# 
  1528  0F1B                     	;# 
  1529  0F1C                     	;# 
  1530  0F1D                     	;# 
  1531  0F1E                     	;# 
  1532  0F1F                     	;# 
  1533  0F20                     	;# 
  1534  0F21                     	;# 
  1535  0F22                     	;# 
  1536  0F23                     	;# 
  1537  0F24                     	;# 
  1538  0F25                     	;# 
  1539  0F26                     	;# 
  1540  0F27                     	;# 
  1541  0F38                     	;# 
  1542  0F39                     	;# 
  1543  0F3A                     	;# 
  1544  0F3B                     	;# 
  1545  0F3C                     	;# 
  1546  0F3D                     	;# 
  1547  0F3E                     	;# 
  1548  0F3F                     	;# 
  1549  0F40                     	;# 
  1550  0F41                     	;# 
  1551  0F43                     	;# 
  1552  0F44                     	;# 
  1553  0F45                     	;# 
  1554  0F46                     	;# 
  1555  0F47                     	;# 
  1556  0F48                     	;# 
  1557  0F49                     	;# 
  1558  0F4A                     	;# 
  1559  0F4B                     	;# 
  1560  0F4C                     	;# 
  1561  0F4E                     	;# 
  1562  0F4F                     	;# 
  1563  0F50                     	;# 
  1564  0F51                     	;# 
  1565  0F52                     	;# 
  1566  0F53                     	;# 
  1567  0F54                     	;# 
  1568  0F55                     	;# 
  1569  0F56                     	;# 
  1570  0F57                     	;# 
  1571  0F65                     	;# 
  1572  0F68                     	;# 
  1573  0F69                     	;# 
  1574  0F6A                     	;# 
  1575  0F6B                     	;# 
  1576  0FE4                     	;# 
  1577  0FE5                     	;# 
  1578  0FE6                     	;# 
  1579  0FE7                     	;# 
  1580  0FE8                     	;# 
  1581  0FE9                     	;# 
  1582  0FEA                     	;# 
  1583  0FEB                     	;# 
  1584  0FED                     	;# 
  1585  0FEE                     	;# 
  1586  0FEF                     	;# 
  1587  0000                     	;# 
  1588  0001                     	;# 
  1589  0002                     	;# 
  1590  0003                     	;# 
  1591  0004                     	;# 
  1592  0005                     	;# 
  1593  0006                     	;# 
  1594  0007                     	;# 
  1595  0008                     	;# 
  1596  0009                     	;# 
  1597  000A                     	;# 
  1598  000B                     	;# 
  1599  000C                     	;# 
  1600  000D                     	;# 
  1601  000E                     	;# 
  1602  0010                     	;# 
  1603  0011                     	;# 
  1604  0012                     	;# 
  1605  0013                     	;# 
  1606  0016                     	;# 
  1607  0017                     	;# 
  1608  0018                     	;# 
  1609  001C                     	;# 
  1610  001C                     	;# 
  1611  001D                     	;# 
  1612  001D                     	;# 
  1613  001E                     	;# 
  1614  001F                     	;# 
  1615  008C                     	;# 
  1616  008C                     	;# 
  1617  008D                     	;# 
  1618  008E                     	;# 
  1619  008E                     	;# 
  1620  008F                     	;# 
  1621  0090                     	;# 
  1622  0090                     	;# 
  1623  0091                     	;# 
  1624  0093                     	;# 
  1625  0094                     	;# 
  1626  0095                     	;# 
  1627  0096                     	;# 
  1628  0097                     	;# 
  1629  0098                     	;# 
  1630  0099                     	;# 
  1631  009A                     	;# 
  1632  009B                     	;# 
  1633  009C                     	;# 
  1634  009D                     	;# 
  1635  009E                     	;# 
  1636  010C                     	;# 
  1637  010D                     	;# 
  1638  010E                     	;# 
  1639  010E                     	;# 
  1640  010F                     	;# 
  1641  0110                     	;# 
  1642  0110                     	;# 
  1643  0111                     	;# 
  1644  0112                     	;# 
  1645  0112                     	;# 
  1646  0113                     	;# 
  1647  0114                     	;# 
  1648  0114                     	;# 
  1649  0115                     	;# 
  1650  0116                     	;# 
  1651  0116                     	;# 
  1652  0117                     	;# 
  1653  0119                     	;# 
  1654  0119                     	;# 
  1655  0119                     	;# 
  1656  011A                     	;# 
  1657  011A                     	;# 
  1658  011A                     	;# 
  1659  011B                     	;# 
  1660  011B                     	;# 
  1661  011B                     	;# 
  1662  011B                     	;# 
  1663  011B                     	;# 
  1664  011C                     	;# 
  1665  011C                     	;# 
  1666  011C                     	;# 
  1667  011D                     	;# 
  1668  011D                     	;# 
  1669  011D                     	;# 
  1670  011E                     	;# 
  1671  011E                     	;# 
  1672  011E                     	;# 
  1673  011F                     	;# 
  1674  011F                     	;# 
  1675  011F                     	;# 
  1676  011F                     	;# 
  1677  011F                     	;# 
  1678  018C                     	;# 
  1679  018D                     	;# 
  1680  018E                     	;# 
  1681  018F                     	;# 
  1682  0190                     	;# 
  1683  0191                     	;# 
  1684  0192                     	;# 
  1685  0196                     	;# 
  1686  0197                     	;# 
  1687  0198                     	;# 
  1688  0199                     	;# 
  1689  019A                     	;# 
  1690  019B                     	;# 
  1691  019C                     	;# 
  1692  020C                     	;# 
  1693  020D                     	;# 
  1694  020E                     	;# 
  1695  020F                     	;# 
  1696  020F                     	;# 
  1697  0210                     	;# 
  1698  0210                     	;# 
  1699  0211                     	;# 
  1700  0211                     	;# 
  1701  0212                     	;# 
  1702  0213                     	;# 
  1703  0214                     	;# 
  1704  0215                     	;# 
  1705  0215                     	;# 
  1706  0216                     	;# 
  1707  0216                     	;# 
  1708  0217                     	;# 
  1709  0217                     	;# 
  1710  0218                     	;# 
  1711  0219                     	;# 
  1712  021A                     	;# 
  1713  021B                     	;# 
  1714  021B                     	;# 
  1715  021C                     	;# 
  1716  021C                     	;# 
  1717  021D                     	;# 
  1718  021D                     	;# 
  1719  021E                     	;# 
  1720  021F                     	;# 
  1721  028C                     	;# 
  1722  028C                     	;# 
  1723  028D                     	;# 
  1724  028D                     	;# 
  1725  028E                     	;# 
  1726  028F                     	;# 
  1727  0290                     	;# 
  1728  0290                     	;# 
  1729  0291                     	;# 
  1730  0292                     	;# 
  1731  0292                     	;# 
  1732  0293                     	;# 
  1733  0293                     	;# 
  1734  0294                     	;# 
  1735  0295                     	;# 
  1736  0296                     	;# 
  1737  0296                     	;# 
  1738  0297                     	;# 
  1739  0298                     	;# 
  1740  0298                     	;# 
  1741  0299                     	;# 
  1742  0299                     	;# 
  1743  029A                     	;# 
  1744  029B                     	;# 
  1745  029C                     	;# 
  1746  029C                     	;# 
  1747  029D                     	;# 
  1748  030C                     	;# 
  1749  030C                     	;# 
  1750  030D                     	;# 
  1751  030E                     	;# 
  1752  030F                     	;# 
  1753  0310                     	;# 
  1754  0310                     	;# 
  1755  0311                     	;# 
  1756  0312                     	;# 
  1757  0313                     	;# 
  1758  0314                     	;# 
  1759  0314                     	;# 
  1760  0315                     	;# 
  1761  0316                     	;# 
  1762  0317                     	;# 
  1763  0318                     	;# 
  1764  0318                     	;# 
  1765  0319                     	;# 
  1766  031A                     	;# 
  1767  031B                     	;# 
  1768  031C                     	;# 
  1769  031C                     	;# 
  1770  031D                     	;# 
  1771  031E                     	;# 
  1772  031F                     	;# 
  1773  038C                     	;# 
  1774  038D                     	;# 
  1775  038E                     	;# 
  1776  0390                     	;# 
  1777  0391                     	;# 
  1778  0392                     	;# 
  1779  040C                     	;# 
  1780  040D                     	;# 
  1781  040E                     	;# 
  1782  040F                     	;# 
  1783  0410                     	;# 
  1784  0411                     	;# 
  1785  0416                     	;# 
  1786  0416                     	;# 
  1787  0417                     	;# 
  1788  0418                     	;# 
  1789  0418                     	;# 
  1790  0419                     	;# 
  1791  041A                     	;# 
  1792  041A                     	;# 
  1793  041B                     	;# 
  1794  041C                     	;# 
  1795  041C                     	;# 
  1796  041D                     	;# 
  1797  041E                     	;# 
  1798  041F                     	;# 
  1799  048C                     	;# 
  1800  048C                     	;# 
  1801  048D                     	;# 
  1802  048E                     	;# 
  1803  048F                     	;# 
  1804  048F                     	;# 
  1805  0490                     	;# 
  1806  0491                     	;# 
  1807  0492                     	;# 
  1808  0492                     	;# 
  1809  0493                     	;# 
  1810  0494                     	;# 
  1811  0495                     	;# 
  1812  0495                     	;# 
  1813  0496                     	;# 
  1814  0497                     	;# 
  1815  0498                     	;# 
  1816  0499                     	;# 
  1817  049A                     	;# 
  1818  049B                     	;# 
  1819  049C                     	;# 
  1820  049D                     	;# 
  1821  050C                     	;# 
  1822  050C                     	;# 
  1823  050D                     	;# 
  1824  050E                     	;# 
  1825  050F                     	;# 
  1826  050F                     	;# 
  1827  0510                     	;# 
  1828  0511                     	;# 
  1829  0512                     	;# 
  1830  0512                     	;# 
  1831  0513                     	;# 
  1832  0514                     	;# 
  1833  0515                     	;# 
  1834  0515                     	;# 
  1835  0516                     	;# 
  1836  0517                     	;# 
  1837  0518                     	;# 
  1838  0519                     	;# 
  1839  051A                     	;# 
  1840  051B                     	;# 
  1841  051C                     	;# 
  1842  051D                     	;# 
  1843  058C                     	;# 
  1844  058C                     	;# 
  1845  058D                     	;# 
  1846  058E                     	;# 
  1847  058F                     	;# 
  1848  058F                     	;# 
  1849  0590                     	;# 
  1850  0591                     	;# 
  1851  0592                     	;# 
  1852  0593                     	;# 
  1853  060C                     	;# 
  1854  060D                     	;# 
  1855  060E                     	;# 
  1856  060F                     	;# 
  1857  0610                     	;# 
  1858  0611                     	;# 
  1859  0612                     	;# 
  1860  0613                     	;# 
  1861  0614                     	;# 
  1862  0616                     	;# 
  1863  0617                     	;# 
  1864  0618                     	;# 
  1865  0619                     	;# 
  1866  061A                     	;# 
  1867  061B                     	;# 
  1868  061C                     	;# 
  1869  061D                     	;# 
  1870  061E                     	;# 
  1871  068C                     	;# 
  1872  068D                     	;# 
  1873  068E                     	;# 
  1874  068F                     	;# 
  1875  0690                     	;# 
  1876  0691                     	;# 
  1877  0692                     	;# 
  1878  0693                     	;# 
  1879  0694                     	;# 
  1880  070C                     	;# 
  1881  070D                     	;# 
  1882  070E                     	;# 
  1883  070F                     	;# 
  1884  0710                     	;# 
  1885  0711                     	;# 
  1886  0712                     	;# 
  1887  0713                     	;# 
  1888  0714                     	;# 
  1889  0716                     	;# 
  1890  0717                     	;# 
  1891  0718                     	;# 
  1892  0719                     	;# 
  1893  071A                     	;# 
  1894  071B                     	;# 
  1895  071C                     	;# 
  1896  071D                     	;# 
  1897  071E                     	;# 
  1898  0796                     	;# 
  1899  0797                     	;# 
  1900  0798                     	;# 
  1901  0799                     	;# 
  1902  079A                     	;# 
  1903  079B                     	;# 
  1904  080C                     	;# 
  1905  080D                     	;# 
  1906  080E                     	;# 
  1907  080F                     	;# 
  1908  0810                     	;# 
  1909  0811                     	;# 
  1910  0812                     	;# 
  1911  0813                     	;# 
  1912  0814                     	;# 
  1913  081A                     	;# 
  1914  081B                     	;# 
  1915  081C                     	;# 
  1916  081D                     	;# 
  1917  081E                     	;# 
  1918  081F                     	;# 
  1919  088C                     	;# 
  1920  088D                     	;# 
  1921  088E                     	;# 
  1922  088F                     	;# 
  1923  0890                     	;# 
  1924  0891                     	;# 
  1925  0892                     	;# 
  1926  0893                     	;# 
  1927  0895                     	;# 
  1928  0896                     	;# 
  1929  0897                     	;# 
  1930  0898                     	;# 
  1931  0899                     	;# 
  1932  089A                     	;# 
  1933  089B                     	;# 
  1934  090C                     	;# 
  1935  090E                     	;# 
  1936  090F                     	;# 
  1937  091F                     	;# 
  1938  091F                     	;# 
  1939  098F                     	;# 
  1940  098F                     	;# 
  1941  0990                     	;# 
  1942  0991                     	;# 
  1943  0992                     	;# 
  1944  0993                     	;# 
  1945  0994                     	;# 
  1946  0995                     	;# 
  1947  0996                     	;# 
  1948  0997                     	;# 
  1949  0E0F                     	;# 
  1950  0E10                     	;# 
  1951  0E11                     	;# 
  1952  0E12                     	;# 
  1953  0E13                     	;# 
  1954  0E14                     	;# 
  1955  0E15                     	;# 
  1956  0E16                     	;# 
  1957  0E17                     	;# 
  1958  0E18                     	;# 
  1959  0E19                     	;# 
  1960  0E1A                     	;# 
  1961  0E1B                     	;# 
  1962  0E1C                     	;# 
  1963  0E1D                     	;# 
  1964  0E1E                     	;# 
  1965  0E1F                     	;# 
  1966  0E20                     	;# 
  1967  0E21                     	;# 
  1968  0E22                     	;# 
  1969  0E23                     	;# 
  1970  0E24                     	;# 
  1971  0E25                     	;# 
  1972  0E26                     	;# 
  1973  0E27                     	;# 
  1974  0E28                     	;# 
  1975  0E29                     	;# 
  1976  0E2A                     	;# 
  1977  0E2B                     	;# 
  1978  0E2C                     	;# 
  1979  0E2D                     	;# 
  1980  0E2E                     	;# 
  1981  0E2F                     	;# 
  1982  0E30                     	;# 
  1983  0E31                     	;# 
  1984  0E32                     	;# 
  1985  0E33                     	;# 
  1986  0E34                     	;# 
  1987  0E35                     	;# 
  1988  0E36                     	;# 
  1989  0E37                     	;# 
  1990  0E8F                     	;# 
  1991  0E90                     	;# 
  1992  0E91                     	;# 
  1993  0E92                     	;# 
  1994  0E93                     	;# 
  1995  0E94                     	;# 
  1996  0E95                     	;# 
  1997  0E96                     	;# 
  1998  0E97                     	;# 
  1999  0E9C                     	;# 
  2000  0E9D                     	;# 
  2001  0E9E                     	;# 
  2002  0EA1                     	;# 
  2003  0EA2                     	;# 
  2004  0EA3                     	;# 
  2005  0EA4                     	;# 
  2006  0EA5                     	;# 
  2007  0EA9                     	;# 
  2008  0EAA                     	;# 
  2009  0EAB                     	;# 
  2010  0EAC                     	;# 
  2011  0EB1                     	;# 
  2012  0EB2                     	;# 
  2013  0EB3                     	;# 
  2014  0EB8                     	;# 
  2015  0EB9                     	;# 
  2016  0EBA                     	;# 
  2017  0EBB                     	;# 
  2018  0EBC                     	;# 
  2019  0EBD                     	;# 
  2020  0EBE                     	;# 
  2021  0EC3                     	;# 
  2022  0EC5                     	;# 
  2023  0EC6                     	;# 
  2024  0EC7                     	;# 
  2025  0EC8                     	;# 
  2026  0EC9                     	;# 
  2027  0ECA                     	;# 
  2028  0ECB                     	;# 
  2029  0ECC                     	;# 
  2030  0F10                     	;# 
  2031  0F11                     	;# 
  2032  0F12                     	;# 
  2033  0F13                     	;# 
  2034  0F14                     	;# 
  2035  0F15                     	;# 
  2036  0F16                     	;# 
  2037  0F17                     	;# 
  2038  0F18                     	;# 
  2039  0F19                     	;# 
  2040  0F1A                     	;# 
  2041  0F1B                     	;# 
  2042  0F1C                     	;# 
  2043  0F1D                     	;# 
  2044  0F1E                     	;# 
  2045  0F1F                     	;# 
  2046  0F20                     	;# 
  2047  0F21                     	;# 
  2048  0F22                     	;# 
  2049  0F23                     	;# 
  2050  0F24                     	;# 
  2051  0F25                     	;# 
  2052  0F26                     	;# 
  2053  0F27                     	;# 
  2054  0F38                     	;# 
  2055  0F39                     	;# 
  2056  0F3A                     	;# 
  2057  0F3B                     	;# 
  2058  0F3C                     	;# 
  2059  0F3D                     	;# 
  2060  0F3E                     	;# 
  2061  0F3F                     	;# 
  2062  0F40                     	;# 
  2063  0F41                     	;# 
  2064  0F43                     	;# 
  2065  0F44                     	;# 
  2066  0F45                     	;# 
  2067  0F46                     	;# 
  2068  0F47                     	;# 
  2069  0F48                     	;# 
  2070  0F49                     	;# 
  2071  0F4A                     	;# 
  2072  0F4B                     	;# 
  2073  0F4C                     	;# 
  2074  0F4E                     	;# 
  2075  0F4F                     	;# 
  2076  0F50                     	;# 
  2077  0F51                     	;# 
  2078  0F52                     	;# 
  2079  0F53                     	;# 
  2080  0F54                     	;# 
  2081  0F55                     	;# 
  2082  0F56                     	;# 
  2083  0F57                     	;# 
  2084  0F65                     	;# 
  2085  0F68                     	;# 
  2086  0F69                     	;# 
  2087  0F6A                     	;# 
  2088  0F6B                     	;# 
  2089  0FE4                     	;# 
  2090  0FE5                     	;# 
  2091  0FE6                     	;# 
  2092  0FE7                     	;# 
  2093  0FE8                     	;# 
  2094  0FE9                     	;# 
  2095  0FEA                     	;# 
  2096  0FEB                     	;# 
  2097  0FED                     	;# 
  2098  0FEE                     	;# 
  2099  0FEF                     	;# 
  2100  0000                     	;# 
  2101  0001                     	;# 
  2102  0002                     	;# 
  2103  0003                     	;# 
  2104  0004                     	;# 
  2105  0005                     	;# 
  2106  0006                     	;# 
  2107  0007                     	;# 
  2108  0008                     	;# 
  2109  0009                     	;# 
  2110  000A                     	;# 
  2111  000B                     	;# 
  2112  000C                     	;# 
  2113  000D                     	;# 
  2114  000E                     	;# 
  2115  0010                     	;# 
  2116  0011                     	;# 
  2117  0012                     	;# 
  2118  0013                     	;# 
  2119  0016                     	;# 
  2120  0017                     	;# 
  2121  0018                     	;# 
  2122  001C                     	;# 
  2123  001C                     	;# 
  2124  001D                     	;# 
  2125  001D                     	;# 
  2126  001E                     	;# 
  2127  001F                     	;# 
  2128  008C                     	;# 
  2129  008C                     	;# 
  2130  008D                     	;# 
  2131  008E                     	;# 
  2132  008E                     	;# 
  2133  008F                     	;# 
  2134  0090                     	;# 
  2135  0090                     	;# 
  2136  0091                     	;# 
  2137  0093                     	;# 
  2138  0094                     	;# 
  2139  0095                     	;# 
  2140  0096                     	;# 
  2141  0097                     	;# 
  2142  0098                     	;# 
  2143  0099                     	;# 
  2144  009A                     	;# 
  2145  009B                     	;# 
  2146  009C                     	;# 
  2147  009D                     	;# 
  2148  009E                     	;# 
  2149  010C                     	;# 
  2150  010D                     	;# 
  2151  010E                     	;# 
  2152  010E                     	;# 
  2153  010F                     	;# 
  2154  0110                     	;# 
  2155  0110                     	;# 
  2156  0111                     	;# 
  2157  0112                     	;# 
  2158  0112                     	;# 
  2159  0113                     	;# 
  2160  0114                     	;# 
  2161  0114                     	;# 
  2162  0115                     	;# 
  2163  0116                     	;# 
  2164  0116                     	;# 
  2165  0117                     	;# 
  2166  0119                     	;# 
  2167  0119                     	;# 
  2168  0119                     	;# 
  2169  011A                     	;# 
  2170  011A                     	;# 
  2171  011A                     	;# 
  2172  011B                     	;# 
  2173  011B                     	;# 
  2174  011B                     	;# 
  2175  011B                     	;# 
  2176  011B                     	;# 
  2177  011C                     	;# 
  2178  011C                     	;# 
  2179  011C                     	;# 
  2180  011D                     	;# 
  2181  011D                     	;# 
  2182  011D                     	;# 
  2183  011E                     	;# 
  2184  011E                     	;# 
  2185  011E                     	;# 
  2186  011F                     	;# 
  2187  011F                     	;# 
  2188  011F                     	;# 
  2189  011F                     	;# 
  2190  011F                     	;# 
  2191  018C                     	;# 
  2192  018D                     	;# 
  2193  018E                     	;# 
  2194  018F                     	;# 
  2195  0190                     	;# 
  2196  0191                     	;# 
  2197  0192                     	;# 
  2198  0196                     	;# 
  2199  0197                     	;# 
  2200  0198                     	;# 
  2201  0199                     	;# 
  2202  019A                     	;# 
  2203  019B                     	;# 
  2204  019C                     	;# 
  2205  020C                     	;# 
  2206  020D                     	;# 
  2207  020E                     	;# 
  2208  020F                     	;# 
  2209  020F                     	;# 
  2210  0210                     	;# 
  2211  0210                     	;# 
  2212  0211                     	;# 
  2213  0211                     	;# 
  2214  0212                     	;# 
  2215  0213                     	;# 
  2216  0214                     	;# 
  2217  0215                     	;# 
  2218  0215                     	;# 
  2219  0216                     	;# 
  2220  0216                     	;# 
  2221  0217                     	;# 
  2222  0217                     	;# 
  2223  0218                     	;# 
  2224  0219                     	;# 
  2225  021A                     	;# 
  2226  021B                     	;# 
  2227  021B                     	;# 
  2228  021C                     	;# 
  2229  021C                     	;# 
  2230  021D                     	;# 
  2231  021D                     	;# 
  2232  021E                     	;# 
  2233  021F                     	;# 
  2234  028C                     	;# 
  2235  028C                     	;# 
  2236  028D                     	;# 
  2237  028D                     	;# 
  2238  028E                     	;# 
  2239  028F                     	;# 
  2240  0290                     	;# 
  2241  0290                     	;# 
  2242  0291                     	;# 
  2243  0292                     	;# 
  2244  0292                     	;# 
  2245  0293                     	;# 
  2246  0293                     	;# 
  2247  0294                     	;# 
  2248  0295                     	;# 
  2249  0296                     	;# 
  2250  0296                     	;# 
  2251  0297                     	;# 
  2252  0298                     	;# 
  2253  0298                     	;# 
  2254  0299                     	;# 
  2255  0299                     	;# 
  2256  029A                     	;# 
  2257  029B                     	;# 
  2258  029C                     	;# 
  2259  029C                     	;# 
  2260  029D                     	;# 
  2261  030C                     	;# 
  2262  030C                     	;# 
  2263  030D                     	;# 
  2264  030E                     	;# 
  2265  030F                     	;# 
  2266  0310                     	;# 
  2267  0310                     	;# 
  2268  0311                     	;# 
  2269  0312                     	;# 
  2270  0313                     	;# 
  2271  0314                     	;# 
  2272  0314                     	;# 
  2273  0315                     	;# 
  2274  0316                     	;# 
  2275  0317                     	;# 
  2276  0318                     	;# 
  2277  0318                     	;# 
  2278  0319                     	;# 
  2279  031A                     	;# 
  2280  031B                     	;# 
  2281  031C                     	;# 
  2282  031C                     	;# 
  2283  031D                     	;# 
  2284  031E                     	;# 
  2285  031F                     	;# 
  2286  038C                     	;# 
  2287  038D                     	;# 
  2288  038E                     	;# 
  2289  0390                     	;# 
  2290  0391                     	;# 
  2291  0392                     	;# 
  2292  040C                     	;# 
  2293  040D                     	;# 
  2294  040E                     	;# 
  2295  040F                     	;# 
  2296  0410                     	;# 
  2297  0411                     	;# 
  2298  0416                     	;# 
  2299  0416                     	;# 
  2300  0417                     	;# 
  2301  0418                     	;# 
  2302  0418                     	;# 
  2303  0419                     	;# 
  2304  041A                     	;# 
  2305  041A                     	;# 
  2306  041B                     	;# 
  2307  041C                     	;# 
  2308  041C                     	;# 
  2309  041D                     	;# 
  2310  041E                     	;# 
  2311  041F                     	;# 
  2312  048C                     	;# 
  2313  048C                     	;# 
  2314  048D                     	;# 
  2315  048E                     	;# 
  2316  048F                     	;# 
  2317  048F                     	;# 
  2318  0490                     	;# 
  2319  0491                     	;# 
  2320  0492                     	;# 
  2321  0492                     	;# 
  2322  0493                     	;# 
  2323  0494                     	;# 
  2324  0495                     	;# 
  2325  0495                     	;# 
  2326  0496                     	;# 
  2327  0497                     	;# 
  2328  0498                     	;# 
  2329  0499                     	;# 
  2330  049A                     	;# 
  2331  049B                     	;# 
  2332  049C                     	;# 
  2333  049D                     	;# 
  2334  050C                     	;# 
  2335  050C                     	;# 
  2336  050D                     	;# 
  2337  050E                     	;# 
  2338  050F                     	;# 
  2339  050F                     	;# 
  2340  0510                     	;# 
  2341  0511                     	;# 
  2342  0512                     	;# 
  2343  0512                     	;# 
  2344  0513                     	;# 
  2345  0514                     	;# 
  2346  0515                     	;# 
  2347  0515                     	;# 
  2348  0516                     	;# 
  2349  0517                     	;# 
  2350  0518                     	;# 
  2351  0519                     	;# 
  2352  051A                     	;# 
  2353  051B                     	;# 
  2354  051C                     	;# 
  2355  051D                     	;# 
  2356  058C                     	;# 
  2357  058C                     	;# 
  2358  058D                     	;# 
  2359  058E                     	;# 
  2360  058F                     	;# 
  2361  058F                     	;# 
  2362  0590                     	;# 
  2363  0591                     	;# 
  2364  0592                     	;# 
  2365  0593                     	;# 
  2366  060C                     	;# 
  2367  060D                     	;# 
  2368  060E                     	;# 
  2369  060F                     	;# 
  2370  0610                     	;# 
  2371  0611                     	;# 
  2372  0612                     	;# 
  2373  0613                     	;# 
  2374  0614                     	;# 
  2375  0616                     	;# 
  2376  0617                     	;# 
  2377  0618                     	;# 
  2378  0619                     	;# 
  2379  061A                     	;# 
  2380  061B                     	;# 
  2381  061C                     	;# 
  2382  061D                     	;# 
  2383  061E                     	;# 
  2384  068C                     	;# 
  2385  068D                     	;# 
  2386  068E                     	;# 
  2387  068F                     	;# 
  2388  0690                     	;# 
  2389  0691                     	;# 
  2390  0692                     	;# 
  2391  0693                     	;# 
  2392  0694                     	;# 
  2393  070C                     	;# 
  2394  070D                     	;# 
  2395  070E                     	;# 
  2396  070F                     	;# 
  2397  0710                     	;# 
  2398  0711                     	;# 
  2399  0712                     	;# 
  2400  0713                     	;# 
  2401  0714                     	;# 
  2402  0716                     	;# 
  2403  0717                     	;# 
  2404  0718                     	;# 
  2405  0719                     	;# 
  2406  071A                     	;# 
  2407  071B                     	;# 
  2408  071C                     	;# 
  2409  071D                     	;# 
  2410  071E                     	;# 
  2411  0796                     	;# 
  2412  0797                     	;# 
  2413  0798                     	;# 
  2414  0799                     	;# 
  2415  079A                     	;# 
  2416  079B                     	;# 
  2417  080C                     	;# 
  2418  080D                     	;# 
  2419  080E                     	;# 
  2420  080F                     	;# 
  2421  0810                     	;# 
  2422  0811                     	;# 
  2423  0812                     	;# 
  2424  0813                     	;# 
  2425  0814                     	;# 
  2426  081A                     	;# 
  2427  081B                     	;# 
  2428  081C                     	;# 
  2429  081D                     	;# 
  2430  081E                     	;# 
  2431  081F                     	;# 
  2432  088C                     	;# 
  2433  088D                     	;# 
  2434  088E                     	;# 
  2435  088F                     	;# 
  2436  0890                     	;# 
  2437  0891                     	;# 
  2438  0892                     	;# 
  2439  0893                     	;# 
  2440  0895                     	;# 
  2441  0896                     	;# 
  2442  0897                     	;# 
  2443  0898                     	;# 
  2444  0899                     	;# 
  2445  089A                     	;# 
  2446  089B                     	;# 
  2447  090C                     	;# 
  2448  090E                     	;# 
  2449  090F                     	;# 
  2450  091F                     	;# 
  2451  091F                     	;# 
  2452  098F                     	;# 
  2453  098F                     	;# 
  2454  0990                     	;# 
  2455  0991                     	;# 
  2456  0992                     	;# 
  2457  0993                     	;# 
  2458  0994                     	;# 
  2459  0995                     	;# 
  2460  0996                     	;# 
  2461  0997                     	;# 
  2462  0E0F                     	;# 
  2463  0E10                     	;# 
  2464  0E11                     	;# 
  2465  0E12                     	;# 
  2466  0E13                     	;# 
  2467  0E14                     	;# 
  2468  0E15                     	;# 
  2469  0E16                     	;# 
  2470  0E17                     	;# 
  2471  0E18                     	;# 
  2472  0E19                     	;# 
  2473  0E1A                     	;# 
  2474  0E1B                     	;# 
  2475  0E1C                     	;# 
  2476  0E1D                     	;# 
  2477  0E1E                     	;# 
  2478  0E1F                     	;# 
  2479  0E20                     	;# 
  2480  0E21                     	;# 
  2481  0E22                     	;# 
  2482  0E23                     	;# 
  2483  0E24                     	;# 
  2484  0E25                     	;# 
  2485  0E26                     	;# 
  2486  0E27                     	;# 
  2487  0E28                     	;# 
  2488  0E29                     	;# 
  2489  0E2A                     	;# 
  2490  0E2B                     	;# 
  2491  0E2C                     	;# 
  2492  0E2D                     	;# 
  2493  0E2E                     	;# 
  2494  0E2F                     	;# 
  2495  0E30                     	;# 
  2496  0E31                     	;# 
  2497  0E32                     	;# 
  2498  0E33                     	;# 
  2499  0E34                     	;# 
  2500  0E35                     	;# 
  2501  0E36                     	;# 
  2502  0E37                     	;# 
  2503  0E8F                     	;# 
  2504  0E90                     	;# 
  2505  0E91                     	;# 
  2506  0E92                     	;# 
  2507  0E93                     	;# 
  2508  0E94                     	;# 
  2509  0E95                     	;# 
  2510  0E96                     	;# 
  2511  0E97                     	;# 
  2512  0E9C                     	;# 
  2513  0E9D                     	;# 
  2514  0E9E                     	;# 
  2515  0EA1                     	;# 
  2516  0EA2                     	;# 
  2517  0EA3                     	;# 
  2518  0EA4                     	;# 
  2519  0EA5                     	;# 
  2520  0EA9                     	;# 
  2521  0EAA                     	;# 
  2522  0EAB                     	;# 
  2523  0EAC                     	;# 
  2524  0EB1                     	;# 
  2525  0EB2                     	;# 
  2526  0EB3                     	;# 
  2527  0EB8                     	;# 
  2528  0EB9                     	;# 
  2529  0EBA                     	;# 
  2530  0EBB                     	;# 
  2531  0EBC                     	;# 
  2532  0EBD                     	;# 
  2533  0EBE                     	;# 
  2534  0EC3                     	;# 
  2535  0EC5                     	;# 
  2536  0EC6                     	;# 
  2537  0EC7                     	;# 
  2538  0EC8                     	;# 
  2539  0EC9                     	;# 
  2540  0ECA                     	;# 
  2541  0ECB                     	;# 
  2542  0ECC                     	;# 
  2543  0F10                     	;# 
  2544  0F11                     	;# 
  2545  0F12                     	;# 
  2546  0F13                     	;# 
  2547  0F14                     	;# 
  2548  0F15                     	;# 
  2549  0F16                     	;# 
  2550  0F17                     	;# 
  2551  0F18                     	;# 
  2552  0F19                     	;# 
  2553  0F1A                     	;# 
  2554  0F1B                     	;# 
  2555  0F1C                     	;# 
  2556  0F1D                     	;# 
  2557  0F1E                     	;# 
  2558  0F1F                     	;# 
  2559  0F20                     	;# 
  2560  0F21                     	;# 
  2561  0F22                     	;# 
  2562  0F23                     	;# 
  2563  0F24                     	;# 
  2564  0F25                     	;# 
  2565  0F26                     	;# 
  2566  0F27                     	;# 
  2567  0F38                     	;# 
  2568  0F39                     	;# 
  2569  0F3A                     	;# 
  2570  0F3B                     	;# 
  2571  0F3C                     	;# 
  2572  0F3D                     	;# 
  2573  0F3E                     	;# 
  2574  0F3F                     	;# 
  2575  0F40                     	;# 
  2576  0F41                     	;# 
  2577  0F43                     	;# 
  2578  0F44                     	;# 
  2579  0F45                     	;# 
  2580  0F46                     	;# 
  2581  0F47                     	;# 
  2582  0F48                     	;# 
  2583  0F49                     	;# 
  2584  0F4A                     	;# 
  2585  0F4B                     	;# 
  2586  0F4C                     	;# 
  2587  0F4E                     	;# 
  2588  0F4F                     	;# 
  2589  0F50                     	;# 
  2590  0F51                     	;# 
  2591  0F52                     	;# 
  2592  0F53                     	;# 
  2593  0F54                     	;# 
  2594  0F55                     	;# 
  2595  0F56                     	;# 
  2596  0F57                     	;# 
  2597  0F65                     	;# 
  2598  0F68                     	;# 
  2599  0F69                     	;# 
  2600  0F6A                     	;# 
  2601  0F6B                     	;# 
  2602  0FE4                     	;# 
  2603  0FE5                     	;# 
  2604  0FE6                     	;# 
  2605  0FE7                     	;# 
  2606  0FE8                     	;# 
  2607  0FE9                     	;# 
  2608  0FEA                     	;# 
  2609  0FEB                     	;# 
  2610  0FED                     	;# 
  2611  0FEE                     	;# 
  2612  0FEF                     	;# 
  2613  0000                     	;# 
  2614  0001                     	;# 
  2615  0002                     	;# 
  2616  0003                     	;# 
  2617  0004                     	;# 
  2618  0005                     	;# 
  2619  0006                     	;# 
  2620  0007                     	;# 
  2621  0008                     	;# 
  2622  0009                     	;# 
  2623  000A                     	;# 
  2624  000B                     	;# 
  2625  000C                     	;# 
  2626  000D                     	;# 
  2627  000E                     	;# 
  2628  0010                     	;# 
  2629  0011                     	;# 
  2630  0012                     	;# 
  2631  0013                     	;# 
  2632  0016                     	;# 
  2633  0017                     	;# 
  2634  0018                     	;# 
  2635  001C                     	;# 
  2636  001C                     	;# 
  2637  001D                     	;# 
  2638  001D                     	;# 
  2639  001E                     	;# 
  2640  001F                     	;# 
  2641  008C                     	;# 
  2642  008C                     	;# 
  2643  008D                     	;# 
  2644  008E                     	;# 
  2645  008E                     	;# 
  2646  008F                     	;# 
  2647  0090                     	;# 
  2648  0090                     	;# 
  2649  0091                     	;# 
  2650  0093                     	;# 
  2651  0094                     	;# 
  2652  0095                     	;# 
  2653  0096                     	;# 
  2654  0097                     	;# 
  2655  0098                     	;# 
  2656  0099                     	;# 
  2657  009A                     	;# 
  2658  009B                     	;# 
  2659  009C                     	;# 
  2660  009D                     	;# 
  2661  009E                     	;# 
  2662  010C                     	;# 
  2663  010D                     	;# 
  2664  010E                     	;# 
  2665  010E                     	;# 
  2666  010F                     	;# 
  2667  0110                     	;# 
  2668  0110                     	;# 
  2669  0111                     	;# 
  2670  0112                     	;# 
  2671  0112                     	;# 
  2672  0113                     	;# 
  2673  0114                     	;# 
  2674  0114                     	;# 
  2675  0115                     	;# 
  2676  0116                     	;# 
  2677  0116                     	;# 
  2678  0117                     	;# 
  2679  0119                     	;# 
  2680  0119                     	;# 
  2681  0119                     	;# 
  2682  011A                     	;# 
  2683  011A                     	;# 
  2684  011A                     	;# 
  2685  011B                     	;# 
  2686  011B                     	;# 
  2687  011B                     	;# 
  2688  011B                     	;# 
  2689  011B                     	;# 
  2690  011C                     	;# 
  2691  011C                     	;# 
  2692  011C                     	;# 
  2693  011D                     	;# 
  2694  011D                     	;# 
  2695  011D                     	;# 
  2696  011E                     	;# 
  2697  011E                     	;# 
  2698  011E                     	;# 
  2699  011F                     	;# 
  2700  011F                     	;# 
  2701  011F                     	;# 
  2702  011F                     	;# 
  2703  011F                     	;# 
  2704  018C                     	;# 
  2705  018D                     	;# 
  2706  018E                     	;# 
  2707  018F                     	;# 
  2708  0190                     	;# 
  2709  0191                     	;# 
  2710  0192                     	;# 
  2711  0196                     	;# 
  2712  0197                     	;# 
  2713  0198                     	;# 
  2714  0199                     	;# 
  2715  019A                     	;# 
  2716  019B                     	;# 
  2717  019C                     	;# 
  2718  020C                     	;# 
  2719  020D                     	;# 
  2720  020E                     	;# 
  2721  020F                     	;# 
  2722  020F                     	;# 
  2723  0210                     	;# 
  2724  0210                     	;# 
  2725  0211                     	;# 
  2726  0211                     	;# 
  2727  0212                     	;# 
  2728  0213                     	;# 
  2729  0214                     	;# 
  2730  0215                     	;# 
  2731  0215                     	;# 
  2732  0216                     	;# 
  2733  0216                     	;# 
  2734  0217                     	;# 
  2735  0217                     	;# 
  2736  0218                     	;# 
  2737  0219                     	;# 
  2738  021A                     	;# 
  2739  021B                     	;# 
  2740  021B                     	;# 
  2741  021C                     	;# 
  2742  021C                     	;# 
  2743  021D                     	;# 
  2744  021D                     	;# 
  2745  021E                     	;# 
  2746  021F                     	;# 
  2747  028C                     	;# 
  2748  028C                     	;# 
  2749  028D                     	;# 
  2750  028D                     	;# 
  2751  028E                     	;# 
  2752  028F                     	;# 
  2753  0290                     	;# 
  2754  0290                     	;# 
  2755  0291                     	;# 
  2756  0292                     	;# 
  2757  0292                     	;# 
  2758  0293                     	;# 
  2759  0293                     	;# 
  2760  0294                     	;# 
  2761  0295                     	;# 
  2762  0296                     	;# 
  2763  0296                     	;# 
  2764  0297                     	;# 
  2765  0298                     	;# 
  2766  0298                     	;# 
  2767  0299                     	;# 
  2768  0299                     	;# 
  2769  029A                     	;# 
  2770  029B                     	;# 
  2771  029C                     	;# 
  2772  029C                     	;# 
  2773  029D                     	;# 
  2774  030C                     	;# 
  2775  030C                     	;# 
  2776  030D                     	;# 
  2777  030E                     	;# 
  2778  030F                     	;# 
  2779  0310                     	;# 
  2780  0310                     	;# 
  2781  0311                     	;# 
  2782  0312                     	;# 
  2783  0313                     	;# 
  2784  0314                     	;# 
  2785  0314                     	;# 
  2786  0315                     	;# 
  2787  0316                     	;# 
  2788  0317                     	;# 
  2789  0318                     	;# 
  2790  0318                     	;# 
  2791  0319                     	;# 
  2792  031A                     	;# 
  2793  031B                     	;# 
  2794  031C                     	;# 
  2795  031C                     	;# 
  2796  031D                     	;# 
  2797  031E                     	;# 
  2798  031F                     	;# 
  2799  038C                     	;# 
  2800  038D                     	;# 
  2801  038E                     	;# 
  2802  0390                     	;# 
  2803  0391                     	;# 
  2804  0392                     	;# 
  2805  040C                     	;# 
  2806  040D                     	;# 
  2807  040E                     	;# 
  2808  040F                     	;# 
  2809  0410                     	;# 
  2810  0411                     	;# 
  2811  0416                     	;# 
  2812  0416                     	;# 
  2813  0417                     	;# 
  2814  0418                     	;# 
  2815  0418                     	;# 
  2816  0419                     	;# 
  2817  041A                     	;# 
  2818  041A                     	;# 
  2819  041B                     	;# 
  2820  041C                     	;# 
  2821  041C                     	;# 
  2822  041D                     	;# 
  2823  041E                     	;# 
  2824  041F                     	;# 
  2825  048C                     	;# 
  2826  048C                     	;# 
  2827  048D                     	;# 
  2828  048E                     	;# 
  2829  048F                     	;# 
  2830  048F                     	;# 
  2831  0490                     	;# 
  2832  0491                     	;# 
  2833  0492                     	;# 
  2834  0492                     	;# 
  2835  0493                     	;# 
  2836  0494                     	;# 
  2837  0495                     	;# 
  2838  0495                     	;# 
  2839  0496                     	;# 
  2840  0497                     	;# 
  2841  0498                     	;# 
  2842  0499                     	;# 
  2843  049A                     	;# 
  2844  049B                     	;# 
  2845  049C                     	;# 
  2846  049D                     	;# 
  2847  050C                     	;# 
  2848  050C                     	;# 
  2849  050D                     	;# 
  2850  050E                     	;# 
  2851  050F                     	;# 
  2852  050F                     	;# 
  2853  0510                     	;# 
  2854  0511                     	;# 
  2855  0512                     	;# 
  2856  0512                     	;# 
  2857  0513                     	;# 
  2858  0514                     	;# 
  2859  0515                     	;# 
  2860  0515                     	;# 
  2861  0516                     	;# 
  2862  0517                     	;# 
  2863  0518                     	;# 
  2864  0519                     	;# 
  2865  051A                     	;# 
  2866  051B                     	;# 
  2867  051C                     	;# 
  2868  051D                     	;# 
  2869  058C                     	;# 
  2870  058C                     	;# 
  2871  058D                     	;# 
  2872  058E                     	;# 
  2873  058F                     	;# 
  2874  058F                     	;# 
  2875  0590                     	;# 
  2876  0591                     	;# 
  2877  0592                     	;# 
  2878  0593                     	;# 
  2879  060C                     	;# 
  2880  060D                     	;# 
  2881  060E                     	;# 
  2882  060F                     	;# 
  2883  0610                     	;# 
  2884  0611                     	;# 
  2885  0612                     	;# 
  2886  0613                     	;# 
  2887  0614                     	;# 
  2888  0616                     	;# 
  2889  0617                     	;# 
  2890  0618                     	;# 
  2891  0619                     	;# 
  2892  061A                     	;# 
  2893  061B                     	;# 
  2894  061C                     	;# 
  2895  061D                     	;# 
  2896  061E                     	;# 
  2897  068C                     	;# 
  2898  068D                     	;# 
  2899  068E                     	;# 
  2900  068F                     	;# 
  2901  0690                     	;# 
  2902  0691                     	;# 
  2903  0692                     	;# 
  2904  0693                     	;# 
  2905  0694                     	;# 
  2906  070C                     	;# 
  2907  070D                     	;# 
  2908  070E                     	;# 
  2909  070F                     	;# 
  2910  0710                     	;# 
  2911  0711                     	;# 
  2912  0712                     	;# 
  2913  0713                     	;# 
  2914  0714                     	;# 
  2915  0716                     	;# 
  2916  0717                     	;# 
  2917  0718                     	;# 
  2918  0719                     	;# 
  2919  071A                     	;# 
  2920  071B                     	;# 
  2921  071C                     	;# 
  2922  071D                     	;# 
  2923  071E                     	;# 
  2924  0796                     	;# 
  2925  0797                     	;# 
  2926  0798                     	;# 
  2927  0799                     	;# 
  2928  079A                     	;# 
  2929  079B                     	;# 
  2930  080C                     	;# 
  2931  080D                     	;# 
  2932  080E                     	;# 
  2933  080F                     	;# 
  2934  0810                     	;# 
  2935  0811                     	;# 
  2936  0812                     	;# 
  2937  0813                     	;# 
  2938  0814                     	;# 
  2939  081A                     	;# 
  2940  081B                     	;# 
  2941  081C                     	;# 
  2942  081D                     	;# 
  2943  081E                     	;# 
  2944  081F                     	;# 
  2945  088C                     	;# 
  2946  088D                     	;# 
  2947  088E                     	;# 
  2948  088F                     	;# 
  2949  0890                     	;# 
  2950  0891                     	;# 
  2951  0892                     	;# 
  2952  0893                     	;# 
  2953  0895                     	;# 
  2954  0896                     	;# 
  2955  0897                     	;# 
  2956  0898                     	;# 
  2957  0899                     	;# 
  2958  089A                     	;# 
  2959  089B                     	;# 
  2960  090C                     	;# 
  2961  090E                     	;# 
  2962  090F                     	;# 
  2963  091F                     	;# 
  2964  091F                     	;# 
  2965  098F                     	;# 
  2966  098F                     	;# 
  2967  0990                     	;# 
  2968  0991                     	;# 
  2969  0992                     	;# 
  2970  0993                     	;# 
  2971  0994                     	;# 
  2972  0995                     	;# 
  2973  0996                     	;# 
  2974  0997                     	;# 
  2975  0E0F                     	;# 
  2976  0E10                     	;# 
  2977  0E11                     	;# 
  2978  0E12                     	;# 
  2979  0E13                     	;# 
  2980  0E14                     	;# 
  2981  0E15                     	;# 
  2982  0E16                     	;# 
  2983  0E17                     	;# 
  2984  0E18                     	;# 
  2985  0E19                     	;# 
  2986  0E1A                     	;# 
  2987  0E1B                     	;# 
  2988  0E1C                     	;# 
  2989  0E1D                     	;# 
  2990  0E1E                     	;# 
  2991  0E1F                     	;# 
  2992  0E20                     	;# 
  2993  0E21                     	;# 
  2994  0E22                     	;# 
  2995  0E23                     	;# 
  2996  0E24                     	;# 
  2997  0E25                     	;# 
  2998  0E26                     	;# 
  2999  0E27                     	;# 
  3000  0E28                     	;# 
  3001  0E29                     	;# 
  3002  0E2A                     	;# 
  3003  0E2B                     	;# 
  3004  0E2C                     	;# 
  3005  0E2D                     	;# 
  3006  0E2E                     	;# 
  3007  0E2F                     	;# 
  3008  0E30                     	;# 
  3009  0E31                     	;# 
  3010  0E32                     	;# 
  3011  0E33                     	;# 
  3012  0E34                     	;# 
  3013  0E35                     	;# 
  3014  0E36                     	;# 
  3015  0E37                     	;# 
  3016  0E8F                     	;# 
  3017  0E90                     	;# 
  3018  0E91                     	;# 
  3019  0E92                     	;# 
  3020  0E93                     	;# 
  3021  0E94                     	;# 
  3022  0E95                     	;# 
  3023  0E96                     	;# 
  3024  0E97                     	;# 
  3025  0E9C                     	;# 
  3026  0E9D                     	;# 
  3027  0E9E                     	;# 
  3028  0EA1                     	;# 
  3029  0EA2                     	;# 
  3030  0EA3                     	;# 
  3031  0EA4                     	;# 
  3032  0EA5                     	;# 
  3033  0EA9                     	;# 
  3034  0EAA                     	;# 
  3035  0EAB                     	;# 
  3036  0EAC                     	;# 
  3037  0EB1                     	;# 
  3038  0EB2                     	;# 
  3039  0EB3                     	;# 
  3040  0EB8                     	;# 
  3041  0EB9                     	;# 
  3042  0EBA                     	;# 
  3043  0EBB                     	;# 
  3044  0EBC                     	;# 
  3045  0EBD                     	;# 
  3046  0EBE                     	;# 
  3047  0EC3                     	;# 
  3048  0EC5                     	;# 
  3049  0EC6                     	;# 
  3050  0EC7                     	;# 
  3051  0EC8                     	;# 
  3052  0EC9                     	;# 
  3053  0ECA                     	;# 
  3054  0ECB                     	;# 
  3055  0ECC                     	;# 
  3056  0F10                     	;# 
  3057  0F11                     	;# 
  3058  0F12                     	;# 
  3059  0F13                     	;# 
  3060  0F14                     	;# 
  3061  0F15                     	;# 
  3062  0F16                     	;# 
  3063  0F17                     	;# 
  3064  0F18                     	;# 
  3065  0F19                     	;# 
  3066  0F1A                     	;# 
  3067  0F1B                     	;# 
  3068  0F1C                     	;# 
  3069  0F1D                     	;# 
  3070  0F1E                     	;# 
  3071  0F1F                     	;# 
  3072  0F20                     	;# 
  3073  0F21                     	;# 
  3074  0F22                     	;# 
  3075  0F23                     	;# 
  3076  0F24                     	;# 
  3077  0F25                     	;# 
  3078  0F26                     	;# 
  3079  0F27                     	;# 
  3080  0F38                     	;# 
  3081  0F39                     	;# 
  3082  0F3A                     	;# 
  3083  0F3B                     	;# 
  3084  0F3C                     	;# 
  3085  0F3D                     	;# 
  3086  0F3E                     	;# 
  3087  0F3F                     	;# 
  3088  0F40                     	;# 
  3089  0F41                     	;# 
  3090  0F43                     	;# 
  3091  0F44                     	;# 
  3092  0F45                     	;# 
  3093  0F46                     	;# 
  3094  0F47                     	;# 
  3095  0F48                     	;# 
  3096  0F49                     	;# 
  3097  0F4A                     	;# 
  3098  0F4B                     	;# 
  3099  0F4C                     	;# 
  3100  0F4E                     	;# 
  3101  0F4F                     	;# 
  3102  0F50                     	;# 
  3103  0F51                     	;# 
  3104  0F52                     	;# 
  3105  0F53                     	;# 
  3106  0F54                     	;# 
  3107  0F55                     	;# 
  3108  0F56                     	;# 
  3109  0F57                     	;# 
  3110  0F65                     	;# 
  3111  0F68                     	;# 
  3112  0F69                     	;# 
  3113  0F6A                     	;# 
  3114  0F6B                     	;# 
  3115  0FE4                     	;# 
  3116  0FE5                     	;# 
  3117  0FE6                     	;# 
  3118  0FE7                     	;# 
  3119  0FE8                     	;# 
  3120  0FE9                     	;# 
  3121  0FEA                     	;# 
  3122  0FEB                     	;# 
  3123  0FED                     	;# 
  3124  0FEE                     	;# 
  3125  0FEF                     	;# 
  3126  0000                     	;# 
  3127  0001                     	;# 
  3128  0002                     	;# 
  3129  0003                     	;# 
  3130  0004                     	;# 
  3131  0005                     	;# 
  3132  0006                     	;# 
  3133  0007                     	;# 
  3134  0008                     	;# 
  3135  0009                     	;# 
  3136  000A                     	;# 
  3137  000B                     	;# 
  3138  000C                     	;# 
  3139  000D                     	;# 
  3140  000E                     	;# 
  3141  0010                     	;# 
  3142  0011                     	;# 
  3143  0012                     	;# 
  3144  0013                     	;# 
  3145  0016                     	;# 
  3146  0017                     	;# 
  3147  0018                     	;# 
  3148  001C                     	;# 
  3149  001C                     	;# 
  3150  001D                     	;# 
  3151  001D                     	;# 
  3152  001E                     	;# 
  3153  001F                     	;# 
  3154  008C                     	;# 
  3155  008C                     	;# 
  3156  008D                     	;# 
  3157  008E                     	;# 
  3158  008E                     	;# 
  3159  008F                     	;# 
  3160  0090                     	;# 
  3161  0090                     	;# 
  3162  0091                     	;# 
  3163  0093                     	;# 
  3164  0094                     	;# 
  3165  0095                     	;# 
  3166  0096                     	;# 
  3167  0097                     	;# 
  3168  0098                     	;# 
  3169  0099                     	;# 
  3170  009A                     	;# 
  3171  009B                     	;# 
  3172  009C                     	;# 
  3173  009D                     	;# 
  3174  009E                     	;# 
  3175  010C                     	;# 
  3176  010D                     	;# 
  3177  010E                     	;# 
  3178  010E                     	;# 
  3179  010F                     	;# 
  3180  0110                     	;# 
  3181  0110                     	;# 
  3182  0111                     	;# 
  3183  0112                     	;# 
  3184  0112                     	;# 
  3185  0113                     	;# 
  3186  0114                     	;# 
  3187  0114                     	;# 
  3188  0115                     	;# 
  3189  0116                     	;# 
  3190  0116                     	;# 
  3191  0117                     	;# 
  3192  0119                     	;# 
  3193  0119                     	;# 
  3194  0119                     	;# 
  3195  011A                     	;# 
  3196  011A                     	;# 
  3197  011A                     	;# 
  3198  011B                     	;# 
  3199  011B                     	;# 
  3200  011B                     	;# 
  3201  011B                     	;# 
  3202  011B                     	;# 
  3203  011C                     	;# 
  3204  011C                     	;# 
  3205  011C                     	;# 
  3206  011D                     	;# 
  3207  011D                     	;# 
  3208  011D                     	;# 
  3209  011E                     	;# 
  3210  011E                     	;# 
  3211  011E                     	;# 
  3212  011F                     	;# 
  3213  011F                     	;# 
  3214  011F                     	;# 
  3215  011F                     	;# 
  3216  011F                     	;# 
  3217  018C                     	;# 
  3218  018D                     	;# 
  3219  018E                     	;# 
  3220  018F                     	;# 
  3221  0190                     	;# 
  3222  0191                     	;# 
  3223  0192                     	;# 
  3224  0196                     	;# 
  3225  0197                     	;# 
  3226  0198                     	;# 
  3227  0199                     	;# 
  3228  019A                     	;# 
  3229  019B                     	;# 
  3230  019C                     	;# 
  3231  020C                     	;# 
  3232  020D                     	;# 
  3233  020E                     	;# 
  3234  020F                     	;# 
  3235  020F                     	;# 
  3236  0210                     	;# 
  3237  0210                     	;# 
  3238  0211                     	;# 
  3239  0211                     	;# 
  3240  0212                     	;# 
  3241  0213                     	;# 
  3242  0214                     	;# 
  3243  0215                     	;# 
  3244  0215                     	;# 
  3245  0216                     	;# 
  3246  0216                     	;# 
  3247  0217                     	;# 
  3248  0217                     	;# 
  3249  0218                     	;# 
  3250  0219                     	;# 
  3251  021A                     	;# 
  3252  021B                     	;# 
  3253  021B                     	;# 
  3254  021C                     	;# 
  3255  021C                     	;# 
  3256  021D                     	;# 
  3257  021D                     	;# 
  3258  021E                     	;# 
  3259  021F                     	;# 
  3260  028C                     	;# 
  3261  028C                     	;# 
  3262  028D                     	;# 
  3263  028D                     	;# 
  3264  028E                     	;# 
  3265  028F                     	;# 
  3266  0290                     	;# 
  3267  0290                     	;# 
  3268  0291                     	;# 
  3269  0292                     	;# 
  3270  0292                     	;# 
  3271  0293                     	;# 
  3272  0293                     	;# 
  3273  0294                     	;# 
  3274  0295                     	;# 
  3275  0296                     	;# 
  3276  0296                     	;# 
  3277  0297                     	;# 
  3278  0298                     	;# 
  3279  0298                     	;# 
  3280  0299                     	;# 
  3281  0299                     	;# 
  3282  029A                     	;# 
  3283  029B                     	;# 
  3284  029C                     	;# 
  3285  029C                     	;# 
  3286  029D                     	;# 
  3287  030C                     	;# 
  3288  030C                     	;# 
  3289  030D                     	;# 
  3290  030E                     	;# 
  3291  030F                     	;# 
  3292  0310                     	;# 
  3293  0310                     	;# 
  3294  0311                     	;# 
  3295  0312                     	;# 
  3296  0313                     	;# 
  3297  0314                     	;# 
  3298  0314                     	;# 
  3299  0315                     	;# 
  3300  0316                     	;# 
  3301  0317                     	;# 
  3302  0318                     	;# 
  3303  0318                     	;# 
  3304  0319                     	;# 
  3305  031A                     	;# 
  3306  031B                     	;# 
  3307  031C                     	;# 
  3308  031C                     	;# 
  3309  031D                     	;# 
  3310  031E                     	;# 
  3311  031F                     	;# 
  3312  038C                     	;# 
  3313  038D                     	;# 
  3314  038E                     	;# 
  3315  0390                     	;# 
  3316  0391                     	;# 
  3317  0392                     	;# 
  3318  040C                     	;# 
  3319  040D                     	;# 
  3320  040E                     	;# 
  3321  040F                     	;# 
  3322  0410                     	;# 
  3323  0411                     	;# 
  3324  0416                     	;# 
  3325  0416                     	;# 
  3326  0417                     	;# 
  3327  0418                     	;# 
  3328  0418                     	;# 
  3329  0419                     	;# 
  3330  041A                     	;# 
  3331  041A                     	;# 
  3332  041B                     	;# 
  3333  041C                     	;# 
  3334  041C                     	;# 
  3335  041D                     	;# 
  3336  041E                     	;# 
  3337  041F                     	;# 
  3338  048C                     	;# 
  3339  048C                     	;# 
  3340  048D                     	;# 
  3341  048E                     	;# 
  3342  048F                     	;# 
  3343  048F                     	;# 
  3344  0490                     	;# 
  3345  0491                     	;# 
  3346  0492                     	;# 
  3347  0492                     	;# 
  3348  0493                     	;# 
  3349  0494                     	;# 
  3350  0495                     	;# 
  3351  0495                     	;# 
  3352  0496                     	;# 
  3353  0497                     	;# 
  3354  0498                     	;# 
  3355  0499                     	;# 
  3356  049A                     	;# 
  3357  049B                     	;# 
  3358  049C                     	;# 
  3359  049D                     	;# 
  3360  050C                     	;# 
  3361  050C                     	;# 
  3362  050D                     	;# 
  3363  050E                     	;# 
  3364  050F                     	;# 
  3365  050F                     	;# 
  3366  0510                     	;# 
  3367  0511                     	;# 
  3368  0512                     	;# 
  3369  0512                     	;# 
  3370  0513                     	;# 
  3371  0514                     	;# 
  3372  0515                     	;# 
  3373  0515                     	;# 
  3374  0516                     	;# 
  3375  0517                     	;# 
  3376  0518                     	;# 
  3377  0519                     	;# 
  3378  051A                     	;# 
  3379  051B                     	;# 
  3380  051C                     	;# 
  3381  051D                     	;# 
  3382  058C                     	;# 
  3383  058C                     	;# 
  3384  058D                     	;# 
  3385  058E                     	;# 
  3386  058F                     	;# 
  3387  058F                     	;# 
  3388  0590                     	;# 
  3389  0591                     	;# 
  3390  0592                     	;# 
  3391  0593                     	;# 
  3392  060C                     	;# 
  3393  060D                     	;# 
  3394  060E                     	;# 
  3395  060F                     	;# 
  3396  0610                     	;# 
  3397  0611                     	;# 
  3398  0612                     	;# 
  3399  0613                     	;# 
  3400  0614                     	;# 
  3401  0616                     	;# 
  3402  0617                     	;# 
  3403  0618                     	;# 
  3404  0619                     	;# 
  3405  061A                     	;# 
  3406  061B                     	;# 
  3407  061C                     	;# 
  3408  061D                     	;# 
  3409  061E                     	;# 
  3410  068C                     	;# 
  3411  068D                     	;# 
  3412  068E                     	;# 
  3413  068F                     	;# 
  3414  0690                     	;# 
  3415  0691                     	;# 
  3416  0692                     	;# 
  3417  0693                     	;# 
  3418  0694                     	;# 
  3419  070C                     	;# 
  3420  070D                     	;# 
  3421  070E                     	;# 
  3422  070F                     	;# 
  3423  0710                     	;# 
  3424  0711                     	;# 
  3425  0712                     	;# 
  3426  0713                     	;# 
  3427  0714                     	;# 
  3428  0716                     	;# 
  3429  0717                     	;# 
  3430  0718                     	;# 
  3431  0719                     	;# 
  3432  071A                     	;# 
  3433  071B                     	;# 
  3434  071C                     	;# 
  3435  071D                     	;# 
  3436  071E                     	;# 
  3437  0796                     	;# 
  3438  0797                     	;# 
  3439  0798                     	;# 
  3440  0799                     	;# 
  3441  079A                     	;# 
  3442  079B                     	;# 
  3443  080C                     	;# 
  3444  080D                     	;# 
  3445  080E                     	;# 
  3446  080F                     	;# 
  3447  0810                     	;# 
  3448  0811                     	;# 
  3449  0812                     	;# 
  3450  0813                     	;# 
  3451  0814                     	;# 
  3452  081A                     	;# 
  3453  081B                     	;# 
  3454  081C                     	;# 
  3455  081D                     	;# 
  3456  081E                     	;# 
  3457  081F                     	;# 
  3458  088C                     	;# 
  3459  088D                     	;# 
  3460  088E                     	;# 
  3461  088F                     	;# 
  3462  0890                     	;# 
  3463  0891                     	;# 
  3464  0892                     	;# 
  3465  0893                     	;# 
  3466  0895                     	;# 
  3467  0896                     	;# 
  3468  0897                     	;# 
  3469  0898                     	;# 
  3470  0899                     	;# 
  3471  089A                     	;# 
  3472  089B                     	;# 
  3473  090C                     	;# 
  3474  090E                     	;# 
  3475  090F                     	;# 
  3476  091F                     	;# 
  3477  091F                     	;# 
  3478  098F                     	;# 
  3479  098F                     	;# 
  3480  0990                     	;# 
  3481  0991                     	;# 
  3482  0992                     	;# 
  3483  0993                     	;# 
  3484  0994                     	;# 
  3485  0995                     	;# 
  3486  0996                     	;# 
  3487  0997                     	;# 
  3488  0E0F                     	;# 
  3489  0E10                     	;# 
  3490  0E11                     	;# 
  3491  0E12                     	;# 
  3492  0E13                     	;# 
  3493  0E14                     	;# 
  3494  0E15                     	;# 
  3495  0E16                     	;# 
  3496  0E17                     	;# 
  3497  0E18                     	;# 
  3498  0E19                     	;# 
  3499  0E1A                     	;# 
  3500  0E1B                     	;# 
  3501  0E1C                     	;# 
  3502  0E1D                     	;# 
  3503  0E1E                     	;# 
  3504  0E1F                     	;# 
  3505  0E20                     	;# 
  3506  0E21                     	;# 
  3507  0E22                     	;# 
  3508  0E23                     	;# 
  3509  0E24                     	;# 
  3510  0E25                     	;# 
  3511  0E26                     	;# 
  3512  0E27                     	;# 
  3513  0E28                     	;# 
  3514  0E29                     	;# 
  3515  0E2A                     	;# 
  3516  0E2B                     	;# 
  3517  0E2C                     	;# 
  3518  0E2D                     	;# 
  3519  0E2E                     	;# 
  3520  0E2F                     	;# 
  3521  0E30                     	;# 
  3522  0E31                     	;# 
  3523  0E32                     	;# 
  3524  0E33                     	;# 
  3525  0E34                     	;# 
  3526  0E35                     	;# 
  3527  0E36                     	;# 
  3528  0E37                     	;# 
  3529  0E8F                     	;# 
  3530  0E90                     	;# 
  3531  0E91                     	;# 
  3532  0E92                     	;# 
  3533  0E93                     	;# 
  3534  0E94                     	;# 
  3535  0E95                     	;# 
  3536  0E96                     	;# 
  3537  0E97                     	;# 
  3538  0E9C                     	;# 
  3539  0E9D                     	;# 
  3540  0E9E                     	;# 
  3541  0EA1                     	;# 
  3542  0EA2                     	;# 
  3543  0EA3                     	;# 
  3544  0EA4                     	;# 
  3545  0EA5                     	;# 
  3546  0EA9                     	;# 
  3547  0EAA                     	;# 
  3548  0EAB                     	;# 
  3549  0EAC                     	;# 
  3550  0EB1                     	;# 
  3551  0EB2                     	;# 
  3552  0EB3                     	;# 
  3553  0EB8                     	;# 
  3554  0EB9                     	;# 
  3555  0EBA                     	;# 
  3556  0EBB                     	;# 
  3557  0EBC                     	;# 
  3558  0EBD                     	;# 
  3559  0EBE                     	;# 
  3560  0EC3                     	;# 
  3561  0EC5                     	;# 
  3562  0EC6                     	;# 
  3563  0EC7                     	;# 
  3564  0EC8                     	;# 
  3565  0EC9                     	;# 
  3566  0ECA                     	;# 
  3567  0ECB                     	;# 
  3568  0ECC                     	;# 
  3569  0F10                     	;# 
  3570  0F11                     	;# 
  3571  0F12                     	;# 
  3572  0F13                     	;# 
  3573  0F14                     	;# 
  3574  0F15                     	;# 
  3575  0F16                     	;# 
  3576  0F17                     	;# 
  3577  0F18                     	;# 
  3578  0F19                     	;# 
  3579  0F1A                     	;# 
  3580  0F1B                     	;# 
  3581  0F1C                     	;# 
  3582  0F1D                     	;# 
  3583  0F1E                     	;# 
  3584  0F1F                     	;# 
  3585  0F20                     	;# 
  3586  0F21                     	;# 
  3587  0F22                     	;# 
  3588  0F23                     	;# 
  3589  0F24                     	;# 
  3590  0F25                     	;# 
  3591  0F26                     	;# 
  3592  0F27                     	;# 
  3593  0F38                     	;# 
  3594  0F39                     	;# 
  3595  0F3A                     	;# 
  3596  0F3B                     	;# 
  3597  0F3C                     	;# 
  3598  0F3D                     	;# 
  3599  0F3E                     	;# 
  3600  0F3F                     	;# 
  3601  0F40                     	;# 
  3602  0F41                     	;# 
  3603  0F43                     	;# 
  3604  0F44                     	;# 
  3605  0F45                     	;# 
  3606  0F46                     	;# 
  3607  0F47                     	;# 
  3608  0F48                     	;# 
  3609  0F49                     	;# 
  3610  0F4A                     	;# 
  3611  0F4B                     	;# 
  3612  0F4C                     	;# 
  3613  0F4E                     	;# 
  3614  0F4F                     	;# 
  3615  0F50                     	;# 
  3616  0F51                     	;# 
  3617  0F52                     	;# 
  3618  0F53                     	;# 
  3619  0F54                     	;# 
  3620  0F55                     	;# 
  3621  0F56                     	;# 
  3622  0F57                     	;# 
  3623  0F65                     	;# 
  3624  0F68                     	;# 
  3625  0F69                     	;# 
  3626  0F6A                     	;# 
  3627  0F6B                     	;# 
  3628  0FE4                     	;# 
  3629  0FE5                     	;# 
  3630  0FE6                     	;# 
  3631  0FE7                     	;# 
  3632  0FE8                     	;# 
  3633  0FE9                     	;# 
  3634  0FEA                     	;# 
  3635  0FEB                     	;# 
  3636  0FED                     	;# 
  3637  0FEE                     	;# 
  3638  0FEF                     	;# 
  3639                           
  3640                           	psect	idataBANK1
  3641  0D3F                     __pidataBANK1:	
  3642                           
  3643                           ;initializer for ___cgram
  3644  0D3F  340C               	retlw	12
  3645  0D40  3412               	retlw	18
  3646  0D41  3412               	retlw	18
  3647  0D42  340C               	retlw	12
  3648  0D43  3400               	retlw	0
  3649  0D44  3400               	retlw	0
  3650  0D45  3400               	retlw	0
  3651  0D46  3400               	retlw	0
  3652  0D47  340A               	retlw	10
  3653  0D48  3415               	retlw	21
  3654  0D49  3411               	retlw	17
  3655  0D4A  340A               	retlw	10
  3656  0D4B  3404               	retlw	4
  3657  0D4C  3400               	retlw	0
  3658  0D4D  3400               	retlw	0
  3659  0D4E  3400               	retlw	0
  3660  0D4F  340A               	retlw	10
  3661  0D50  341F               	retlw	31
  3662  0D51  341F               	retlw	31
  3663  0D52  340E               	retlw	14
  3664  0D53  3404               	retlw	4
  3665  0D54  3400               	retlw	0
  3666  0D55  3400               	retlw	0
  3667  0D56  3400               	retlw	0
  3668                           
  3669                           	psect	stringtext
  3670  1000                     __pstringtext:	
  3671  1000                     log@coeff:	
  3672  1000  3400               	retlw	0
  3673  1001  3400               	retlw	0
  3674  1002  3400               	retlw	0
  3675  1003  3400               	retlw	0
  3676  1004  3480               	retlw	128
  3677  1005  343F               	retlw	63
  3678  1006  34F0               	retlw	240
  3679  1007  34FF               	retlw	255
  3680  1008  34BE               	retlw	190
  3681  1009  34E2               	retlw	226
  3682  100A  34A9               	retlw	169
  3683  100B  343E               	retlw	62
  3684  100C  3483               	retlw	131
  3685  100D  3476               	retlw	118
  3686  100E  34BE               	retlw	190
  3687  100F  34AE               	retlw	174
  3688  1010  342B               	retlw	43
  3689  1011  343E               	retlw	62
  3690  1012  343C               	retlw	60
  3691  1013  34C3               	retlw	195
  3692  1014  34BD               	retlw	189
  3693  1015  34D2               	retlw	210
  3694  1016  3413               	retlw	19
  3695  1017  343D               	retlw	61
  3696  1018  3478               	retlw	120
  3697  1019  34D3               	retlw	211
  3698  101A  34BB               	retlw	187
  3699  101B                     __end_oflog@coeff:	
  3700  0016                     _LATA	set	22
  3701  0017                     _LATB	set	23
  3702  0018                     _LATC	set	24
  3703  0011                     _TRISA	set	17
  3704  0012                     _TRISB	set	18
  3705  0013                     _TRISC	set	19
  3706  005F                     _GIE	set	95
  3707  0068                     _RB0	set	104
  3708  0069                     _RB1	set	105
  3709  006A                     _RB2	set	106
  3710  006B                     _RB3	set	107
  3711  006C                     _RB4	set	108
  3712  006D                     _RB5	set	109
  3713  009D                     _ADACQ	set	157
  3714  0099                     _ADACT	set	153
  3715  009B                     _ADCAP	set	155
  3716  0098                     _ADCLK	set	152
  3717  0093                     _ADCON0	set	147
  3718  0093                     _ADCON0bits	set	147
  3719  0094                     _ADCON1	set	148
  3720  0095                     _ADCON2	set	149
  3721  0096                     _ADCON3	set	150
  3722  009E                     _ADPCH	set	158
  3723  009C                     _ADPRE	set	156
  3724  009A                     _ADREF	set	154
  3725  008D                     _ADRESH	set	141
  3726  008C                     _ADRESL	set	140
  3727  0097                     _ADSTAT	set	151
  3728  010F                     _ADLTHH	set	271
  3729  010E                     _ADLTHL	set	270
  3730  010D                     _ADRPT	set	269
  3731  0113                     _ADSTPTH	set	275
  3732  0112                     _ADSTPTL	set	274
  3733  0111                     _ADUTHH	set	273
  3734  0110                     _ADUTHL	set	272
  3735  021F                     _CCPTMRS1bits	set	543
  3736  0290                     _T2CLKCON	set	656
  3737  028E                     _T2CON	set	654
  3738  028E                     _T2CONbits	set	654
  3739  028F                     _T2HLT	set	655
  3740  028D                     _T2PR	set	653
  3741  0291                     _T2RST	set	657
  3742  028C                     _T2TMR	set	652
  3743  038E                     _PWM6CON	set	910
  3744  038D                     _PWM6DCH	set	909
  3745  038C                     _PWM6DCL	set	908
  3746  0716                     _PIE0bits	set	1814
  3747  0710                     _PIR4bits	set	1808
  3748  088D                     _OSCCON1	set	2189
  3749  088F                     _OSCCON3	set	2191
  3750  0891                     _OSCEN	set	2193
  3751  0893                     _OSCFRQ	set	2195
  3752  0892                     _OSCTUNE	set	2194
  3753  090C                     _FVRCON	set	2316
  3754  0E8F                     _PPSLOCK	set	3727
  3755  0E8F                     _PPSLOCKbits	set	3727
  3756  0F38                     _ANSELA	set	3896
  3757  0F43                     _ANSELB	set	3907
  3758  0F4E                     _ANSELC	set	3918
  3759  0F11                     _RA1PPS	set	3857
  3760  0F39                     _WPUA	set	3897
  3761  0F44                     _WPUB	set	3908
  3762  0F4F                     _WPUC	set	3919
  3763  0F65                     _WPUE	set	3941
  3764                           
  3765                           ; #config settings
  3766  0000                     
  3767                           	psect	cinit
  3768  07E6                     start_initialization:	
  3769  07E6                     __initialization:	
  3770                           
  3771                           ; Initialize objects allocated to BANK1
  3772  07E6  303F               	movlw	low __pidataBANK1
  3773  07E7  0084               	movwf	4
  3774  07E8  308D               	movlw	(high __pidataBANK1)| (0+128)
  3775  07E9  0085               	movwf	5
  3776  07EA  30B9               	movlw	low __pdataBANK1
  3777  07EB  0086               	movwf	6
  3778  07EC  3000               	movlw	high __pdataBANK1
  3779  07ED  0087               	movwf	7
  3780  07EE  3018               	movlw	24
  3781  07EF  318C  248F  3187   	fcall	init_ram
  3782                           
  3783                           ; Clear objects allocated to BANK0
  3784  07F2  01EC               	clrf	__pbssBANK0& (0+127)
  3785  07F3  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  3786  07F4  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  3787  07F5  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  3788                           
  3789                           ; Clear objects allocated to BANK1
  3790  07F6  30A0               	movlw	low __pbssBANK1
  3791  07F7  0084               	movwf	4
  3792  07F8  3000               	movlw	high __pbssBANK1
  3793  07F9  0085               	movwf	5
  3794  07FA  3019               	movlw	25
  3795  07FB  318C  2489         	fcall	clear_ram0
  3796  07FD                     end_of_initialization:	
  3797                           ;End of C runtime variable initialization code
  3798                           
  3799  07FD                     __end_of__initialization:	
  3800  07FD  0020               	movlb	0
  3801  07FE  3185  2DDE         	ljmp	_main	;jump to C main() function
  3802                           
  3803                           	psect	bssBANK0
  3804  006C                     __pbssBANK0:	
  3805  006C                     _errno:	
  3806  006C                     	ds	2
  3807  006E                     main@sampleIndex:	
  3808  006E                     	ds	2
  3809                           
  3810                           	psect	bssBANK1
  3811  00A0                     __pbssBANK1:	
  3812  00A0                     _samples:	
  3813  00A0                     	ds	20
  3814  00B4                     LCD_Write_Int@F13684:	
  3815  00B4                     	ds	5
  3816                           
  3817                           	psect	dataBANK1
  3818  00B9                     __pdataBANK1:	
  3819  00B9                     ___cgram:	
  3820  00B9                     	ds	24
  3821                           
  3822                           	psect	inittext
  3823  0C8F                     init_ram:	
  3824  0C8F  00FE               	movwf	126
  3825  0C90                     initloop:	
  3826  0C90  0012               	moviw fsr0++
  3827  0C91  001E               	movwi fsr1++
  3828  0C92  0BFE               	decfsz	126,f
  3829  0C93  2C90               	goto	initloop
  3830  0C94  3400               	retlw	0
  3831                           
  3832                           	psect	clrtext
  3833  0C89                     clear_ram0:	
  3834                           ;	Called with FSR0 containing the base address, and
  3835                           ;	WREG with the size to clear
  3836                           
  3837  0C89  0064               	clrwdt	;clear the watchdog before getting into this loop
  3838  0C8A                     clrloop0:	
  3839  0C8A  0180               	clrf	0	;clear RAM location pointed to by FSR
  3840  0C8B  3101               	addfsr 0,1
  3841  0C8C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3842  0C8D  2C8A               	goto	clrloop0	;have we reached the end yet?
  3843  0C8E  3400               	retlw	0	;all done for this memory range, return
  3844                           
  3845                           	psect	cstackCOMMON
  3846  0070                     __pcstackCOMMON:	
  3847  0070                     ?___ftge:	
  3848  0070                     ?_OSCILLATOR_Initialize:	
  3849                           ; 1 bit 
  3850                           
  3851  0070                     ??_OSCILLATOR_Initialize:	
  3852                           ; 1 bytes @ 0x0
  3853                           
  3854  0070                     ?_TMR2_Initialize:	
  3855                           ; 1 bytes @ 0x0
  3856                           
  3857  0070                     ??_TMR2_Initialize:	
  3858                           ; 1 bytes @ 0x0
  3859                           
  3860  0070                     ?_LCD_Cmd:	
  3861                           ; 1 bytes @ 0x0
  3862                           
  3863  0070                     ?_LCD_Write_Char:	
  3864                           ; 1 bytes @ 0x0
  3865                           
  3866  0070                     ?_ADCC_Initialize:	
  3867                           ; 1 bytes @ 0x0
  3868                           
  3869  0070                     ??_ADCC_Initialize:	
  3870                           ; 1 bytes @ 0x0
  3871                           
  3872  0070                     ?_PIN_MANAGER_Initialize:	
  3873                           ; 1 bytes @ 0x0
  3874                           
  3875  0070                     ??_PIN_MANAGER_Initialize:	
  3876                           ; 1 bytes @ 0x0
  3877                           
  3878  0070                     ?_PWM6_Initialize:	
  3879                           ; 1 bytes @ 0x0
  3880                           
  3881  0070                     ??_PWM6_Initialize:	
  3882                           ; 1 bytes @ 0x0
  3883                           
  3884  0070                     ?_PWM6_LoadDutyValue:	
  3885                           ; 1 bytes @ 0x0
  3886                           
  3887  0070                     ?_SYSTEM_Initialize:	
  3888                           ; 1 bytes @ 0x0
  3889                           
  3890  0070                     ?_InitCustomChars:	
  3891                           ; 1 bytes @ 0x0
  3892                           
  3893  0070                     ?_LCD_Port:	
  3894                           ; 1 bytes @ 0x0
  3895                           
  3896  0070                     ??_LCD_Port:	
  3897                           ; 1 bytes @ 0x0
  3898                           
  3899  0070                     ?_LCD_Clear:	
  3900                           ; 1 bytes @ 0x0
  3901                           
  3902  0070                     ?_LCD_Init:	
  3903                           ; 1 bytes @ 0x0
  3904                           
  3905  0070                     ?_main:	
  3906                           ; 1 bytes @ 0x0
  3907                           
  3908  0070                     ?_ADCC_GetSingleConversion:	
  3909                           ; 1 bytes @ 0x0
  3910                           
  3911  0070                     ?___wmul:	
  3912                           ; 2 bytes @ 0x0
  3913                           
  3914  0070                     ?___awdiv:	
  3915                           ; 2 bytes @ 0x0
  3916                           
  3917  0070                     ?___awmod:	
  3918                           ; 2 bytes @ 0x0
  3919                           
  3920  0070                     ?___ftpack:	
  3921                           ; 2 bytes @ 0x0
  3922                           
  3923  0070                     ?_frexp:	
  3924                           ; 3 bytes @ 0x0
  3925                           
  3926  0070                     ?___aldiv:	
  3927                           ; 3 bytes @ 0x0
  3928                           
  3929  0070                     ?___fttol:	
  3930                           ; 4 bytes @ 0x0
  3931                           
  3932  0070                     PIN_MANAGER_Initialize@state:	
  3933                           ; 4 bytes @ 0x0
  3934                           
  3935  0070                     LCD_Port@a:	
  3936                           ; 1 bytes @ 0x0
  3937                           
  3938  0070                     PWM6_LoadDutyValue@dutyValue:	
  3939                           ; 1 bytes @ 0x0
  3940                           
  3941  0070                     ___wmul@multiplier:	
  3942                           ; 2 bytes @ 0x0
  3943                           
  3944  0070                     ___awdiv@divisor:	
  3945                           ; 2 bytes @ 0x0
  3946                           
  3947  0070                     ___awmod@divisor:	
  3948                           ; 2 bytes @ 0x0
  3949                           
  3950  0070                     ___ftpack@arg:	
  3951                           ; 2 bytes @ 0x0
  3952                           
  3953  0070                     ___ftge@ff1:	
  3954                           ; 3 bytes @ 0x0
  3955                           
  3956  0070                     ___fttol@f1:	
  3957                           ; 3 bytes @ 0x0
  3958                           
  3959  0070                     frexp@value:	
  3960                           ; 3 bytes @ 0x0
  3961                           
  3962  0070                     ___aldiv@divisor:	
  3963                           ; 3 bytes @ 0x0
  3964                           
  3965                           
  3966                           ; 4 bytes @ 0x0
  3967  0070                     	ds	1
  3968  0071                     ??_LCD_Cmd:	
  3969  0071                     ??_LCD_Write_Char:	
  3970                           ; 1 bytes @ 0x1
  3971                           
  3972  0071                     ??_SYSTEM_Initialize:	
  3973                           ; 1 bytes @ 0x1
  3974                           
  3975                           
  3976                           ; 1 bytes @ 0x1
  3977  0071                     	ds	1
  3978  0072                     ??_PWM6_LoadDutyValue:	
  3979  0072                     LCD_Cmd@a:	
  3980                           ; 1 bytes @ 0x2
  3981                           
  3982  0072                     LCD_Write_Char@temp:	
  3983                           ; 1 bytes @ 0x2
  3984                           
  3985  0072                     ___wmul@multiplicand:	
  3986                           ; 1 bytes @ 0x2
  3987                           
  3988  0072                     ___awdiv@dividend:	
  3989                           ; 2 bytes @ 0x2
  3990                           
  3991  0072                     ___awmod@dividend:	
  3992                           ; 2 bytes @ 0x2
  3993                           
  3994                           
  3995                           ; 2 bytes @ 0x2
  3996  0072                     	ds	1
  3997  0073                     ??_ADCC_GetSingleConversion:	
  3998  0073                     ??_LCD_Clear:	
  3999                           ; 1 bytes @ 0x3
  4000                           
  4001  0073                     ?_LCD_Set_Cursor:	
  4002                           ; 1 bytes @ 0x3
  4003                           
  4004  0073                     ??_LCD_Init:	
  4005                           ; 1 bytes @ 0x3
  4006                           
  4007  0073                     ADCC_GetSingleConversion@channel:	
  4008                           ; 1 bytes @ 0x3
  4009                           
  4010  0073                     LCD_Set_Cursor@y:	
  4011                           ; 1 bytes @ 0x3
  4012                           
  4013  0073                     LCD_Write_Char@y:	
  4014                           ; 1 bytes @ 0x3
  4015                           
  4016  0073                     ___ftpack@exp:	
  4017                           ; 1 bytes @ 0x3
  4018                           
  4019  0073                     frexp@eptr:	
  4020                           ; 1 bytes @ 0x3
  4021                           
  4022  0073                     ___ftge@ff2:	
  4023                           ; 1 bytes @ 0x3
  4024                           
  4025                           
  4026                           ; 3 bytes @ 0x3
  4027  0073                     	ds	1
  4028  0074                     ??_frexp:	
  4029  0074                     ??_LCD_Set_Cursor:	
  4030                           ; 1 bytes @ 0x4
  4031                           
  4032  0074                     ??___wmul:	
  4033                           ; 1 bytes @ 0x4
  4034                           
  4035  0074                     ??___awdiv:	
  4036                           ; 1 bytes @ 0x4
  4037                           
  4038  0074                     ??___awmod:	
  4039                           ; 1 bytes @ 0x4
  4040                           
  4041  0074                     ??___fttol:	
  4042                           ; 1 bytes @ 0x4
  4043                           
  4044  0074                     LCD_Write_Char@a:	
  4045                           ; 1 bytes @ 0x4
  4046                           
  4047  0074                     ___ftpack@sign:	
  4048                           ; 1 bytes @ 0x4
  4049                           
  4050  0074                     ___wmul@product:	
  4051                           ; 1 bytes @ 0x4
  4052                           
  4053  0074                     ___aldiv@dividend:	
  4054                           ; 2 bytes @ 0x4
  4055                           
  4056                           
  4057                           ; 4 bytes @ 0x4
  4058  0074                     	ds	1
  4059  0075                     ??___ftpack:	
  4060  0075                     ??_InitCustomChars:	
  4061                           ; 1 bytes @ 0x5
  4062                           
  4063  0075                     LCD_Init@style:	
  4064                           ; 1 bytes @ 0x5
  4065                           
  4066  0075                     ___awdiv@counter:	
  4067                           ; 1 bytes @ 0x5
  4068                           
  4069  0075                     ___awmod@counter:	
  4070                           ; 1 bytes @ 0x5
  4071                           
  4072                           
  4073                           ; 1 bytes @ 0x5
  4074  0075                     	ds	1
  4075  0076                     ??___ftge:	
  4076  0076                     InitCustomChars@i:	
  4077                           ; 1 bytes @ 0x6
  4078                           
  4079  0076                     LCD_Set_Cursor@x:	
  4080                           ; 1 bytes @ 0x6
  4081                           
  4082  0076                     ___awdiv@sign:	
  4083                           ; 1 bytes @ 0x6
  4084                           
  4085  0076                     ___awmod@sign:	
  4086                           ; 1 bytes @ 0x6
  4087                           
  4088                           
  4089                           ; 1 bytes @ 0x6
  4090  0076                     	ds	1
  4091  0077                     LCD_Set_Cursor@z:	
  4092  0077                     ___awdiv@quotient:	
  4093                           ; 1 bytes @ 0x7
  4094                           
  4095                           
  4096                           ; 2 bytes @ 0x7
  4097  0077                     	ds	1
  4098  0078                     ??___aldiv:	
  4099  0078                     ?___awtoft:	
  4100                           ; 1 bytes @ 0x8
  4101                           
  4102  0078                     ?___lwtoft:	
  4103                           ; 3 bytes @ 0x8
  4104                           
  4105  0078                     LCD_Set_Cursor@w:	
  4106                           ; 3 bytes @ 0x8
  4107                           
  4108  0078                     ___fttol@sign1:	
  4109                           ; 1 bytes @ 0x8
  4110                           
  4111  0078                     ___awtoft@c:	
  4112                           ; 1 bytes @ 0x8
  4113                           
  4114  0078                     ___lwtoft@c:	
  4115                           ; 2 bytes @ 0x8
  4116                           
  4117                           
  4118                           ; 2 bytes @ 0x8
  4119  0078                     	ds	1
  4120  0079                     LCD_Set_Cursor@temp:	
  4121  0079                     ___fttol@lval:	
  4122                           ; 1 bytes @ 0x9
  4123                           
  4124                           
  4125                           ; 4 bytes @ 0x9
  4126  0079                     	ds	2
  4127  007B                     ??___awtoft:	
  4128  007B                     ??___lwtoft:	
  4129                           ; 1 bytes @ 0xB
  4130                           
  4131                           
  4132                           ; 1 bytes @ 0xB
  4133  007B                     	ds	2
  4134  007D                     ___awtoft@sign:	
  4135  007D                     ___fttol@exp1:	
  4136                           ; 1 bytes @ 0xD
  4137                           
  4138                           
  4139                           ; 1 bytes @ 0xD
  4140  007D                     	ds	1
  4141  007E                     ??_eval_poly:	
  4142  007E                     ??___ftsub:	
  4143                           ; 1 bytes @ 0xE
  4144                           
  4145                           
  4146                           	psect	cstackBANK0
  4147  0020                     __pcstackBANK0:	
  4148                           ; 1 bytes @ 0xE
  4149                           
  4150  0020                     ?_LCD_Write_Int:	
  4151  0020                     ?___ftdiv:	
  4152                           ; 1 bytes @ 0x0
  4153                           
  4154  0020                     ?___ftmul:	
  4155                           ; 3 bytes @ 0x0
  4156                           
  4157  0020                     ___aldiv@counter:	
  4158                           ; 3 bytes @ 0x0
  4159                           
  4160  0020                     LCD_Write_Int@value:	
  4161                           ; 1 bytes @ 0x0
  4162                           
  4163  0020                     ___ftdiv@f2:	
  4164                           ; 2 bytes @ 0x0
  4165                           
  4166  0020                     ___ftmul@f1:	
  4167                           ; 3 bytes @ 0x0
  4168                           
  4169                           
  4170                           ; 3 bytes @ 0x0
  4171  0020                     	ds	1
  4172  0021                     ___aldiv@sign:	
  4173                           
  4174                           ; 1 bytes @ 0x1
  4175  0021                     	ds	1
  4176  0022                     LCD_Write_Int@fieldLength:	
  4177  0022                     ___aldiv@quotient:	
  4178                           ; 1 bytes @ 0x2
  4179                           
  4180                           
  4181                           ; 4 bytes @ 0x2
  4182  0022                     	ds	1
  4183  0023                     LCD_Write_Int@numPlaces:	
  4184  0023                     ___ftdiv@f1:	
  4185                           ; 1 bytes @ 0x3
  4186                           
  4187  0023                     ___ftmul@f2:	
  4188                           ; 3 bytes @ 0x3
  4189                           
  4190                           
  4191                           ; 3 bytes @ 0x3
  4192  0023                     	ds	1
  4193  0024                     LCD_Write_Int@sign:	
  4194                           
  4195                           ; 1 bytes @ 0x4
  4196  0024                     	ds	1
  4197  0025                     ??_LCD_Write_Int:	
  4198                           
  4199                           ; 1 bytes @ 0x5
  4200  0025                     	ds	1
  4201  0026                     ??___ftdiv:	
  4202  0026                     ??___ftmul:	
  4203                           ; 1 bytes @ 0x6
  4204                           
  4205                           
  4206                           ; 1 bytes @ 0x6
  4207  0026                     	ds	4
  4208  002A                     ___ftdiv@cntr:	
  4209  002A                     ___ftmul@exp:	
  4210                           ; 1 bytes @ 0xA
  4211                           
  4212  002A                     LCD_Write_Int@str:	
  4213                           ; 1 bytes @ 0xA
  4214                           
  4215                           
  4216                           ; 5 bytes @ 0xA
  4217  002A                     	ds	1
  4218  002B                     ___ftdiv@f3:	
  4219  002B                     ___ftmul@f3_as_product:	
  4220                           ; 3 bytes @ 0xB
  4221                           
  4222                           
  4223                           ; 3 bytes @ 0xB
  4224  002B                     	ds	3
  4225  002E                     ___ftdiv@exp:	
  4226  002E                     ___ftmul@cntr:	
  4227                           ; 1 bytes @ 0xE
  4228                           
  4229                           
  4230                           ; 1 bytes @ 0xE
  4231  002E                     	ds	1
  4232  002F                     ___ftdiv@sign:	
  4233  002F                     ___ftmul@sign:	
  4234                           ; 1 bytes @ 0xF
  4235                           
  4236  002F                     LCD_Write_Int@j:	
  4237                           ; 1 bytes @ 0xF
  4238                           
  4239                           
  4240                           ; 2 bytes @ 0xF
  4241  002F                     	ds	1
  4242  0030                     ?___ftadd:	
  4243  0030                     ___ftadd@f1:	
  4244                           ; 3 bytes @ 0x10
  4245                           
  4246                           
  4247                           ; 3 bytes @ 0x10
  4248  0030                     	ds	1
  4249  0031                     LCD_Write_Int@i:	
  4250                           
  4251                           ; 2 bytes @ 0x11
  4252  0031                     	ds	2
  4253  0033                     ___ftadd@f2:	
  4254                           
  4255                           ; 3 bytes @ 0x13
  4256  0033                     	ds	3
  4257  0036                     ??___ftadd:	
  4258                           
  4259                           ; 1 bytes @ 0x16
  4260  0036                     	ds	4
  4261  003A                     ___ftadd@sign:	
  4262                           
  4263                           ; 1 bytes @ 0x1A
  4264  003A                     	ds	1
  4265  003B                     ___ftadd@exp2:	
  4266                           
  4267                           ; 1 bytes @ 0x1B
  4268  003B                     	ds	1
  4269  003C                     ___ftadd@exp1:	
  4270                           
  4271                           ; 1 bytes @ 0x1C
  4272  003C                     	ds	1
  4273  003D                     ?_eval_poly:	
  4274  003D                     ?___ftsub:	
  4275                           ; 3 bytes @ 0x1D
  4276                           
  4277  003D                     ___ftsub@f2:	
  4278                           ; 3 bytes @ 0x1D
  4279                           
  4280  003D                     eval_poly@x:	
  4281                           ; 3 bytes @ 0x1D
  4282                           
  4283                           
  4284                           ; 3 bytes @ 0x1D
  4285  003D                     	ds	3
  4286  0040                     eval_poly@d:	
  4287  0040                     ___ftsub@f1:	
  4288                           ; 2 bytes @ 0x20
  4289                           
  4290                           
  4291                           ; 3 bytes @ 0x20
  4292  0040                     	ds	2
  4293  0042                     eval_poly@n:	
  4294                           
  4295                           ; 2 bytes @ 0x22
  4296  0042                     	ds	2
  4297  0044                     eval_poly@res:	
  4298                           
  4299                           ; 3 bytes @ 0x24
  4300  0044                     	ds	3
  4301  0047                     ?_log:	
  4302  0047                     log@x:	
  4303                           ; 3 bytes @ 0x27
  4304                           
  4305                           
  4306                           ; 3 bytes @ 0x27
  4307  0047                     	ds	3
  4308  004A                     ??_log:	
  4309                           
  4310                           ; 1 bytes @ 0x2A
  4311  004A                     	ds	1
  4312  004B                     log@exponent:	
  4313                           
  4314                           ; 2 bytes @ 0x2B
  4315  004B                     	ds	2
  4316  004D                     ??_main:	
  4317                           
  4318                           ; 1 bytes @ 0x2D
  4319  004D                     	ds	10
  4320  0057                     _main$923:	
  4321                           
  4322                           ; 3 bytes @ 0x37
  4323  0057                     	ds	3
  4324  005A                     main@R:	
  4325                           
  4326                           ; 3 bytes @ 0x3A
  4327  005A                     	ds	3
  4328  005D                     main@setpoint:	
  4329                           
  4330                           ; 2 bytes @ 0x3D
  4331  005D                     	ds	2
  4332  005F                     main@totals:	
  4333                           
  4334                           ; 4 bytes @ 0x3F
  4335  005F                     	ds	4
  4336  0063                     main@readTemperatureOld:	
  4337                           
  4338                           ; 2 bytes @ 0x43
  4339  0063                     	ds	2
  4340  0065                     main@outCurrent:	
  4341                           
  4342                           ; 2 bytes @ 0x45
  4343  0065                     	ds	2
  4344  0067                     main@readTemperature:	
  4345                           
  4346                           ; 2 bytes @ 0x47
  4347  0067                     	ds	2
  4348  0069                     main@steinhart:	
  4349                           
  4350                           ; 3 bytes @ 0x49
  4351  0069                     	ds	3
  4352                           
  4353                           	psect	maintext
  4354  05DE                     __pmaintext:	
  4355 ;;
  4356 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  4357 ;;
  4358 ;; *************** function _main *****************
  4359 ;; Defined at:
  4360 ;;		line 11 in file "../PWMTest.X/main.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;		None
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  totals          4   63[BANK0 ] long 
  4365 ;;  steinhart       3   73[BANK0 ] float 
  4366 ;;  R               3   58[BANK0 ] float 
  4367 ;;  readTemperat    2   71[BANK0 ] unsigned int 
  4368 ;;  outCurrent      2   69[BANK0 ] unsigned int 
  4369 ;;  readTemperat    2   67[BANK0 ] unsigned int 
  4370 ;;  setpoint        2   61[BANK0 ] unsigned int 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : B1F/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;Total ram usage:       31 bytes
  4385 ;; Hardware stack levels required when called:    4
  4386 ;; This function calls:
  4387 ;;		_ADCC_GetSingleConversion
  4388 ;;		_InitCustomChars
  4389 ;;		_LCD_Clear
  4390 ;;		_LCD_Init
  4391 ;;		_LCD_Set_Cursor
  4392 ;;		_LCD_Write_Char
  4393 ;;		_LCD_Write_Int
  4394 ;;		_PWM6_LoadDutyValue
  4395 ;;		_SYSTEM_Initialize
  4396 ;;		___aldiv
  4397 ;;		___ftadd
  4398 ;;		___ftdiv
  4399 ;;		___ftsub
  4400 ;;		___fttol
  4401 ;;		___lwtoft
  4402 ;;		_log
  4403 ;; This function is called by:
  4404 ;;		Startup code after reset
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function _main
  4410  05DE                     _main:	
  4411                           
  4412                           ;main.c: 13: SYSTEM_Initialize();
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4416  05DE  318C  24C3  3185   	fcall	_SYSTEM_Initialize
  4417                           
  4418                           ;main.c: 15: LCD_Init(0X00);
  4419  05E1  3000               	movlw	0
  4420  05E2  3180  2011  3185   	fcall	_LCD_Init
  4421                           
  4422                           ;main.c: 17: _delay((unsigned long)((100)*(1000000/4000.0)));
  4423  05E5  3021               	movlw	33
  4424  05E6  0020               	movlb	0	; select bank0
  4425  05E7  00CE               	movwf	??_main+1
  4426  05E8  3076               	movlw	118
  4427  05E9  00CD               	movwf	??_main
  4428  05EA                     u2877:	
  4429  05EA  0BCD               	decfsz	??_main,f
  4430  05EB  2DEA               	goto	u2877
  4431  05EC  0BCE               	decfsz	??_main+1,f
  4432  05ED  2DEA               	goto	u2877
  4433  05EE  0000               	nop
  4434                           
  4435                           ;main.c: 19: LCD_Clear();
  4436  05EF  318C  2495  3185   	fcall	_LCD_Clear
  4437                           
  4438                           ;main.c: 21: InitCustomChars();
  4439  05F2  318D  25B0  3185   	fcall	_InitCustomChars
  4440                           
  4441                           ;main.c: 23: uint16_t readTemperature, setpoint = 70, outCurrent = 1023, readTemperature
      +                          Old = 20;
  4442  05F5  3046               	movlw	70
  4443  05F6  0020               	movlb	0	; select bank0
  4444  05F7  00DD               	movwf	main@setpoint
  4445  05F8  3000               	movlw	0
  4446  05F9  00DE               	movwf	main@setpoint+1
  4447  05FA  30FF               	movlw	255
  4448  05FB  00E5               	movwf	main@outCurrent
  4449  05FC  3003               	movlw	3
  4450  05FD  00E6               	movwf	main@outCurrent+1
  4451  05FE  3014               	movlw	20
  4452  05FF  00E3               	movwf	main@readTemperatureOld
  4453  0600  3000               	movlw	0
  4454  0601  00E4               	movwf	main@readTemperatureOld+1
  4455                           
  4456                           ;main.c: 25: float R, steinhart;
  4457                           ;main.c: 27: static uint16_t sampleIndex = 0;
  4458                           ;main.c: 29: int32_t totals = 0;
  4459  0602  3000               	movlw	0
  4460  0603  00E2               	movwf	main@totals+3
  4461  0604  3000               	movlw	0
  4462  0605  00E1               	movwf	main@totals+2
  4463  0606  3000               	movlw	0
  4464  0607  00E0               	movwf	main@totals+1
  4465  0608  3000               	movlw	0
  4466  0609  00DF               	movwf	main@totals
  4467  060A                     l2365:	
  4468                           ;main.c: 33: while (1)
  4469                           
  4470                           
  4471                           ;main.c: 34: {
  4472                           ;main.c: 35: readTemperature = ADCC_GetSingleConversion(2);
  4473  060A  3002               	movlw	2
  4474  060B  318C  24A6  3185   	fcall	_ADCC_GetSingleConversion
  4475  060E  0871               	movf	?_ADCC_GetSingleConversion+1,w
  4476  060F  0020               	movlb	0	; select bank0
  4477  0610  00E8               	movwf	main@readTemperature+1
  4478  0611  0870               	movf	?_ADCC_GetSingleConversion,w
  4479  0612  00E7               	movwf	main@readTemperature
  4480                           
  4481                           ;main.c: 37: totals = totals - samples[sampleIndex];
  4482  0613  085F               	movf	main@totals,w
  4483  0614  00CD               	movwf	??_main
  4484  0615  0860               	movf	main@totals+1,w
  4485  0616  00CE               	movwf	??_main+1
  4486  0617  0861               	movf	main@totals+2,w
  4487  0618  00CF               	movwf	??_main+2
  4488  0619  0862               	movf	main@totals+3,w
  4489  061A  00D0               	movwf	??_main+3
  4490  061B  356E               	lslf	main@sampleIndex,w
  4491  061C  3EA0               	addlw	(low (_samples| 0))& (0+255)
  4492  061D  0086               	movwf	6
  4493  061E  0187               	clrf	7
  4494  061F  3F40               	moviw [0]fsr1
  4495  0620  00D1               	movwf	??_main+4
  4496  0621  3F41               	moviw [1]fsr1
  4497  0622  00D2               	movwf	??_main+5
  4498  0623  0851               	movf	??_main+4,w
  4499  0624  00D3               	movwf	??_main+6
  4500  0625  0852               	movf	??_main+5,w
  4501  0626  00D4               	movwf	??_main+7
  4502  0627  01D5               	clrf	??_main+8
  4503  0628  01D6               	clrf	??_main+9
  4504  0629  09D3               	comf	??_main+6,f
  4505  062A  09D4               	comf	??_main+7,f
  4506  062B  09D5               	comf	??_main+8,f
  4507  062C  09D6               	comf	??_main+9,f
  4508  062D  0AD3               	incf	??_main+6,f
  4509  062E  1903               	skipnz
  4510  062F  0AD4               	incf	??_main+7,f
  4511  0630  1903               	skipnz
  4512  0631  0AD5               	incf	??_main+8,f
  4513  0632  1903               	skipnz
  4514  0633  0AD6               	incf	??_main+9,f
  4515  0634  0853               	movf	??_main+6,w
  4516  0635  07CD               	addwf	??_main,f
  4517  0636  0854               	movf	??_main+7,w
  4518  0637  3DCE               	addwfc	??_main+1,f
  4519  0638  0855               	movf	??_main+8,w
  4520  0639  3DCF               	addwfc	??_main+2,f
  4521  063A  0856               	movf	??_main+9,w
  4522  063B  3DD0               	addwfc	??_main+3,f
  4523  063C  0850               	movf	??_main+3,w
  4524  063D  00E2               	movwf	main@totals+3
  4525  063E  084F               	movf	??_main+2,w
  4526  063F  00E1               	movwf	main@totals+2
  4527  0640  084E               	movf	??_main+1,w
  4528  0641  00E0               	movwf	main@totals+1
  4529  0642  084D               	movf	??_main,w
  4530  0643  00DF               	movwf	main@totals
  4531                           
  4532                           ;main.c: 39: samples[sampleIndex] = readTemperature;
  4533  0644  356E               	lslf	main@sampleIndex,w
  4534  0645  3EA0               	addlw	(low (_samples| 0))& (0+255)
  4535  0646  0086               	movwf	6
  4536  0647  0187               	clrf	7
  4537  0648  0867               	movf	main@readTemperature,w
  4538  0649  3FC0               	movwi [0]fsr1
  4539  064A  0868               	movf	main@readTemperature+1,w
  4540  064B  3FC1               	movwi [1]fsr1
  4541                           
  4542                           ;main.c: 41: totals = totals + samples[sampleIndex];
  4543  064C  085F               	movf	main@totals,w
  4544  064D  00CD               	movwf	??_main
  4545  064E  0860               	movf	main@totals+1,w
  4546  064F  00CE               	movwf	??_main+1
  4547  0650  0861               	movf	main@totals+2,w
  4548  0651  00CF               	movwf	??_main+2
  4549  0652  0862               	movf	main@totals+3,w
  4550  0653  00D0               	movwf	??_main+3
  4551  0654  356E               	lslf	main@sampleIndex,w
  4552  0655  3EA0               	addlw	(low (_samples| 0))& (0+255)
  4553  0656  0086               	movwf	6
  4554  0657  0187               	clrf	7
  4555  0658  3F40               	moviw [0]fsr1
  4556  0659  00D1               	movwf	??_main+4
  4557  065A  3F41               	moviw [1]fsr1
  4558  065B  00D2               	movwf	??_main+5
  4559  065C  0851               	movf	??_main+4,w
  4560  065D  00D3               	movwf	??_main+6
  4561  065E  0852               	movf	??_main+5,w
  4562  065F  00D4               	movwf	??_main+7
  4563  0660  01D5               	clrf	??_main+8
  4564  0661  01D6               	clrf	??_main+9
  4565  0662  0853               	movf	??_main+6,w
  4566  0663  07CD               	addwf	??_main,f
  4567  0664  0854               	movf	??_main+7,w
  4568  0665  3DCE               	addwfc	??_main+1,f
  4569  0666  0855               	movf	??_main+8,w
  4570  0667  3DCF               	addwfc	??_main+2,f
  4571  0668  0856               	movf	??_main+9,w
  4572  0669  3DD0               	addwfc	??_main+3,f
  4573  066A  0850               	movf	??_main+3,w
  4574  066B  00E2               	movwf	main@totals+3
  4575  066C  084F               	movf	??_main+2,w
  4576  066D  00E1               	movwf	main@totals+2
  4577  066E  084E               	movf	??_main+1,w
  4578  066F  00E0               	movwf	main@totals+1
  4579  0670  084D               	movf	??_main,w
  4580  0671  00DF               	movwf	main@totals
  4581                           
  4582                           ;main.c: 43: sampleIndex += 1;
  4583  0672  3001               	movlw	1
  4584  0673  07EE               	addwf	main@sampleIndex,f
  4585  0674  3000               	movlw	0
  4586  0675  3DEF               	addwfc	main@sampleIndex+1,f
  4587                           
  4588                           ;main.c: 45: if(sampleIndex >= 10)
  4589  0676  3000               	movlw	0
  4590  0677  026F               	subwf	main@sampleIndex+1,w
  4591  0678  300A               	movlw	10
  4592  0679  1903               	skipnz
  4593  067A  026E               	subwf	main@sampleIndex,w
  4594  067B  1C03               	skipc
  4595  067C  2E7F               	goto	l2373
  4596                           
  4597                           ;main.c: 46: {
  4598                           ;main.c: 47: sampleIndex = 0;
  4599  067D  01EE               	clrf	main@sampleIndex
  4600  067E  01EF               	clrf	main@sampleIndex+1
  4601  067F                     l2373:	
  4602                           
  4603                           ;main.c: 48: }
  4604                           ;main.c: 50: readTemperature = totals / 10;
  4605  067F  3000               	movlw	0
  4606  0680  00F3               	movwf	___aldiv@divisor+3
  4607  0681  3000               	movlw	0
  4608  0682  00F2               	movwf	___aldiv@divisor+2
  4609  0683  3000               	movlw	0
  4610  0684  00F1               	movwf	___aldiv@divisor+1
  4611  0685  300A               	movlw	10
  4612  0686  00F0               	movwf	___aldiv@divisor
  4613  0687  0862               	movf	main@totals+3,w
  4614  0688  00F7               	movwf	___aldiv@dividend+3
  4615  0689  0861               	movf	main@totals+2,w
  4616  068A  00F6               	movwf	___aldiv@dividend+2
  4617  068B  0860               	movf	main@totals+1,w
  4618  068C  00F5               	movwf	___aldiv@dividend+1
  4619  068D  085F               	movf	main@totals,w
  4620  068E  00F4               	movwf	___aldiv@dividend
  4621  068F  3181  210B  3185   	fcall	___aldiv
  4622  0692  0871               	movf	?___aldiv+1,w
  4623  0693  0020               	movlb	0	; select bank0
  4624  0694  00E8               	movwf	main@readTemperature+1
  4625  0695  0870               	movf	?___aldiv,w
  4626  0696  00E7               	movwf	main@readTemperature
  4627                           
  4628                           ;main.c: 52: if(readTemperature > readTemperatureOld)
  4629  0697  0868               	movf	main@readTemperature+1,w
  4630  0698  0264               	subwf	main@readTemperatureOld+1,w
  4631  0699  1D03               	skipz
  4632  069A  2E9D               	goto	u2815
  4633  069B  0867               	movf	main@readTemperature,w
  4634  069C  0263               	subwf	main@readTemperatureOld,w
  4635  069D                     u2815:	
  4636  069D  1803               	skipnc
  4637  069E  2EA3               	goto	l269
  4638                           
  4639                           ;main.c: 53: {
  4640                           ;main.c: 54: readTemperatureOld += 1;
  4641  069F  3001               	movlw	1
  4642  06A0  07E3               	addwf	main@readTemperatureOld,f
  4643  06A1  3000               	movlw	0
  4644  06A2  3DE4               	addwfc	main@readTemperatureOld+1,f
  4645  06A3                     l269:	
  4646                           
  4647                           ;main.c: 55: }
  4648                           ;main.c: 57: if(readTemperature < readTemperatureOld)
  4649  06A3  0864               	movf	main@readTemperatureOld+1,w
  4650  06A4  0268               	subwf	main@readTemperature+1,w
  4651  06A5  1D03               	skipz
  4652  06A6  2EA9               	goto	u2825
  4653  06A7  0863               	movf	main@readTemperatureOld,w
  4654  06A8  0267               	subwf	main@readTemperature,w
  4655  06A9                     u2825:	
  4656  06A9  1803               	skipnc
  4657  06AA  2EAF               	goto	l270
  4658                           
  4659                           ;main.c: 58: {
  4660                           ;main.c: 59: readTemperatureOld -= 1;
  4661  06AB  3001               	movlw	1
  4662  06AC  02E3               	subwf	main@readTemperatureOld,f
  4663  06AD  3000               	movlw	0
  4664  06AE  3BE4               	subwfb	main@readTemperatureOld+1,f
  4665  06AF                     l270:	
  4666                           
  4667                           ;main.c: 60: }
  4668                           ;main.c: 62: readTemperature = readTemperatureOld;
  4669  06AF  0864               	movf	main@readTemperatureOld+1,w
  4670  06B0  00E8               	movwf	main@readTemperature+1
  4671  06B1  0863               	movf	main@readTemperatureOld,w
  4672  06B2  00E7               	movwf	main@readTemperature
  4673                           
  4674                           ;main.c: 65: if(setpoint > readTemperature)
  4675  06B3  085E               	movf	main@setpoint+1,w
  4676  06B4  0268               	subwf	main@readTemperature+1,w
  4677  06B5  1D03               	skipz
  4678  06B6  2EB9               	goto	u2835
  4679  06B7  085D               	movf	main@setpoint,w
  4680  06B8  0267               	subwf	main@readTemperature,w
  4681  06B9                     u2835:	
  4682  06B9  1803               	skipnc
  4683  06BA  2ECB               	goto	l271
  4684                           
  4685                           ;main.c: 66: {
  4686                           ;main.c: 67: if(outCurrent < 1022)
  4687  06BB  3003               	movlw	3
  4688  06BC  0266               	subwf	main@outCurrent+1,w
  4689  06BD  30FE               	movlw	254
  4690  06BE  1903               	skipnz
  4691  06BF  0265               	subwf	main@outCurrent,w
  4692  06C0  1803               	skipnc
  4693  06C1  2EC7               	goto	l2385
  4694                           
  4695                           ;main.c: 68: {
  4696                           ;main.c: 72: outCurrent++;
  4697  06C2  3001               	movlw	1
  4698  06C3  07E5               	addwf	main@outCurrent,f
  4699  06C4  3000               	movlw	0
  4700  06C5  3DE6               	addwfc	main@outCurrent+1,f
  4701                           
  4702                           ;main.c: 75: }
  4703  06C6  2ECB               	goto	l271
  4704  06C7                     l2385:	
  4705                           
  4706                           ;main.c: 76: else
  4707                           ;main.c: 77: {
  4708                           ;main.c: 78: outCurrent = 1023;
  4709  06C7  30FF               	movlw	255
  4710  06C8  00E5               	movwf	main@outCurrent
  4711  06C9  3003               	movlw	3
  4712  06CA  00E6               	movwf	main@outCurrent+1
  4713  06CB                     l271:	
  4714                           
  4715                           ;main.c: 79: }
  4716                           ;main.c: 80: }
  4717                           ;main.c: 82: if(setpoint < readTemperature)
  4718  06CB  0868               	movf	main@readTemperature+1,w
  4719  06CC  025E               	subwf	main@setpoint+1,w
  4720  06CD  1D03               	skipz
  4721  06CE  2ED1               	goto	u2855
  4722  06CF  0867               	movf	main@readTemperature,w
  4723  06D0  025D               	subwf	main@setpoint,w
  4724  06D1                     u2855:	
  4725  06D1  1803               	skipnc
  4726  06D2  2EE1               	goto	l2393
  4727                           
  4728                           ;main.c: 83: {
  4729                           ;main.c: 84: if(outCurrent > 1)
  4730  06D3  3000               	movlw	0
  4731  06D4  0266               	subwf	main@outCurrent+1,w
  4732  06D5  3002               	movlw	2
  4733  06D6  1903               	skipnz
  4734  06D7  0265               	subwf	main@outCurrent,w
  4735  06D8  1C03               	skipc
  4736  06D9  2EDF               	goto	l2391
  4737                           
  4738                           ;main.c: 85: {
  4739                           ;main.c: 89: outCurrent-=1;
  4740  06DA  3001               	movlw	1
  4741  06DB  02E5               	subwf	main@outCurrent,f
  4742  06DC  3000               	movlw	0
  4743  06DD  3BE6               	subwfb	main@outCurrent+1,f
  4744                           
  4745                           ;main.c: 92: }
  4746  06DE  2EE1               	goto	l2393
  4747  06DF                     l2391:	
  4748                           
  4749                           ;main.c: 93: else
  4750                           ;main.c: 94: {
  4751                           ;main.c: 95: outCurrent = 0;
  4752  06DF  01E5               	clrf	main@outCurrent
  4753  06E0  01E6               	clrf	main@outCurrent+1
  4754  06E1                     l2393:	
  4755                           
  4756                           ;main.c: 96: }
  4757                           ;main.c: 97: }
  4758                           ;main.c: 99: R = 9970/(1023/ (float)readTemperature - 1);
  4759  06E1  3000               	movlw	0
  4760  06E2  00B0               	movwf	___ftadd@f1
  4761  06E3  3080               	movlw	128
  4762  06E4  00B1               	movwf	___ftadd@f1+1
  4763  06E5  30BF               	movlw	191
  4764  06E6  00B2               	movwf	___ftadd@f1+2
  4765  06E7  0868               	movf	main@readTemperature+1,w
  4766  06E8  00F9               	movwf	___lwtoft@c+1
  4767  06E9  0867               	movf	main@readTemperature,w
  4768  06EA  00F8               	movwf	___lwtoft@c
  4769  06EB  318C  24E6  3185   	fcall	___lwtoft
  4770  06EE  0878               	movf	?___lwtoft,w
  4771  06EF  0020               	movlb	0	; select bank0
  4772  06F0  00A0               	movwf	___ftdiv@f2
  4773  06F1  0879               	movf	?___lwtoft+1,w
  4774  06F2  00A1               	movwf	___ftdiv@f2+1
  4775  06F3  087A               	movf	?___lwtoft+2,w
  4776  06F4  00A2               	movwf	___ftdiv@f2+2
  4777  06F5  30C0               	movlw	192
  4778  06F6  00A3               	movwf	___ftdiv@f1
  4779  06F7  307F               	movlw	127
  4780  06F8  00A4               	movwf	___ftdiv@f1+1
  4781  06F9  3044               	movlw	68
  4782  06FA  00A5               	movwf	___ftdiv@f1+2
  4783  06FB  3182  2213  3185   	fcall	___ftdiv
  4784  06FE  0020               	movlb	0	; select bank0
  4785  06FF  0820               	movf	?___ftdiv,w
  4786  0700  00B3               	movwf	___ftadd@f2
  4787  0701  0821               	movf	?___ftdiv+1,w
  4788  0702  00B4               	movwf	___ftadd@f2+1
  4789  0703  0822               	movf	?___ftdiv+2,w
  4790  0704  00B5               	movwf	___ftadd@f2+2
  4791  0705  3184  24E8  3185   	fcall	___ftadd
  4792  0708  0020               	movlb	0	; select bank0
  4793  0709  0830               	movf	?___ftadd,w
  4794  070A  00D7               	movwf	_main$923
  4795  070B  0831               	movf	?___ftadd+1,w
  4796  070C  00D8               	movwf	_main$923+1
  4797  070D  0832               	movf	?___ftadd+2,w
  4798  070E  00D9               	movwf	_main$923+2
  4799                           
  4800                           ;main.c: 96: }
  4801                           ;main.c: 97: }
  4802                           ;main.c: 99: R = 9970/(1023/ (float)readTemperature - 1);
  4803  070F  0857               	movf	_main$923,w
  4804  0710  00A0               	movwf	___ftdiv@f2
  4805  0711  0858               	movf	_main$923+1,w
  4806  0712  00A1               	movwf	___ftdiv@f2+1
  4807  0713  0859               	movf	_main$923+2,w
  4808  0714  00A2               	movwf	___ftdiv@f2+2
  4809  0715  30C8               	movlw	200
  4810  0716  00A3               	movwf	___ftdiv@f1
  4811  0717  301B               	movlw	27
  4812  0718  00A4               	movwf	___ftdiv@f1+1
  4813  0719  3046               	movlw	70
  4814  071A  00A5               	movwf	___ftdiv@f1+2
  4815  071B  3182  2213  3185   	fcall	___ftdiv
  4816  071E  0020               	movlb	0	; select bank0
  4817  071F  0820               	movf	?___ftdiv,w
  4818  0720  00DA               	movwf	main@R
  4819  0721  0821               	movf	?___ftdiv+1,w
  4820  0722  00DB               	movwf	main@R+1
  4821  0723  0822               	movf	?___ftdiv+2,w
  4822  0724  00DC               	movwf	main@R+2
  4823                           
  4824                           ;main.c: 105: steinhart = R / 9970;
  4825  0725  30C8               	movlw	200
  4826  0726  00A0               	movwf	___ftdiv@f2
  4827  0727  301B               	movlw	27
  4828  0728  00A1               	movwf	___ftdiv@f2+1
  4829  0729  3046               	movlw	70
  4830  072A  00A2               	movwf	___ftdiv@f2+2
  4831  072B  085A               	movf	main@R,w
  4832  072C  00A3               	movwf	___ftdiv@f1
  4833  072D  085B               	movf	main@R+1,w
  4834  072E  00A4               	movwf	___ftdiv@f1+1
  4835  072F  085C               	movf	main@R+2,w
  4836  0730  00A5               	movwf	___ftdiv@f1+2
  4837  0731  3182  2213  3185   	fcall	___ftdiv
  4838  0734  0020               	movlb	0	; select bank0
  4839  0735  0820               	movf	?___ftdiv,w
  4840  0736  00E9               	movwf	main@steinhart
  4841  0737  0821               	movf	?___ftdiv+1,w
  4842  0738  00EA               	movwf	main@steinhart+1
  4843  0739  0822               	movf	?___ftdiv+2,w
  4844  073A  00EB               	movwf	main@steinhart+2
  4845                           
  4846                           ;main.c: 106: steinhart = log(steinhart);
  4847  073B  0869               	movf	main@steinhart,w
  4848  073C  00C7               	movwf	log@x
  4849  073D  086A               	movf	main@steinhart+1,w
  4850  073E  00C8               	movwf	log@x+1
  4851  073F  086B               	movf	main@steinhart+2,w
  4852  0740  00C9               	movwf	log@x+2
  4853  0741  3182  22BC  3185   	fcall	_log
  4854  0744  0020               	movlb	0	; select bank0
  4855  0745  0847               	movf	?_log,w
  4856  0746  00E9               	movwf	main@steinhart
  4857  0747  0848               	movf	?_log+1,w
  4858  0748  00EA               	movwf	main@steinhart+1
  4859  0749  0849               	movf	?_log+2,w
  4860  074A  00EB               	movwf	main@steinhart+2
  4861                           
  4862                           ;main.c: 107: steinhart /= 3490;
  4863  074B  3020               	movlw	32
  4864  074C  00A0               	movwf	___ftdiv@f2
  4865  074D  305A               	movlw	90
  4866  074E  00A1               	movwf	___ftdiv@f2+1
  4867  074F  3045               	movlw	69
  4868  0750  00A2               	movwf	___ftdiv@f2+2
  4869  0751  0869               	movf	main@steinhart,w
  4870  0752  00A3               	movwf	___ftdiv@f1
  4871  0753  086A               	movf	main@steinhart+1,w
  4872  0754  00A4               	movwf	___ftdiv@f1+1
  4873  0755  086B               	movf	main@steinhart+2,w
  4874  0756  00A5               	movwf	___ftdiv@f1+2
  4875  0757  3182  2213  3185   	fcall	___ftdiv
  4876  075A  0020               	movlb	0	; select bank0
  4877  075B  0820               	movf	?___ftdiv,w
  4878  075C  00E9               	movwf	main@steinhart
  4879  075D  0821               	movf	?___ftdiv+1,w
  4880  075E  00EA               	movwf	main@steinhart+1
  4881  075F  0822               	movf	?___ftdiv+2,w
  4882  0760  00EB               	movwf	main@steinhart+2
  4883                           
  4884                           ;main.c: 108: steinhart += 1.0 / (25 + 273.15);
  4885  0761  30CF               	movlw	207
  4886  0762  00B0               	movwf	___ftadd@f1
  4887  0763  305B               	movlw	91
  4888  0764  00B1               	movwf	___ftadd@f1+1
  4889  0765  303B               	movlw	59
  4890  0766  00B2               	movwf	___ftadd@f1+2
  4891  0767  0869               	movf	main@steinhart,w
  4892  0768  00B3               	movwf	___ftadd@f2
  4893  0769  086A               	movf	main@steinhart+1,w
  4894  076A  00B4               	movwf	___ftadd@f2+1
  4895  076B  086B               	movf	main@steinhart+2,w
  4896  076C  00B5               	movwf	___ftadd@f2+2
  4897  076D  3184  24E8  3185   	fcall	___ftadd
  4898  0770  0020               	movlb	0	; select bank0
  4899  0771  0830               	movf	?___ftadd,w
  4900  0772  00E9               	movwf	main@steinhart
  4901  0773  0831               	movf	?___ftadd+1,w
  4902  0774  00EA               	movwf	main@steinhart+1
  4903  0775  0832               	movf	?___ftadd+2,w
  4904  0776  00EB               	movwf	main@steinhart+2
  4905                           
  4906                           ;main.c: 109: steinhart = 1.0 / steinhart;
  4907  0777  0869               	movf	main@steinhart,w
  4908  0778  00A0               	movwf	___ftdiv@f2
  4909  0779  086A               	movf	main@steinhart+1,w
  4910  077A  00A1               	movwf	___ftdiv@f2+1
  4911  077B  086B               	movf	main@steinhart+2,w
  4912  077C  00A2               	movwf	___ftdiv@f2+2
  4913  077D  3000               	movlw	0
  4914  077E  00A3               	movwf	___ftdiv@f1
  4915  077F  3080               	movlw	128
  4916  0780  00A4               	movwf	___ftdiv@f1+1
  4917  0781  303F               	movlw	63
  4918  0782  00A5               	movwf	___ftdiv@f1+2
  4919  0783  3182  2213  3185   	fcall	___ftdiv
  4920  0786  0020               	movlb	0	; select bank0
  4921  0787  0820               	movf	?___ftdiv,w
  4922  0788  00E9               	movwf	main@steinhart
  4923  0789  0821               	movf	?___ftdiv+1,w
  4924  078A  00EA               	movwf	main@steinhart+1
  4925  078B  0822               	movf	?___ftdiv+2,w
  4926  078C  00EB               	movwf	main@steinhart+2
  4927                           
  4928                           ;main.c: 110: steinhart -= 273.15;
  4929  078D  3093               	movlw	147
  4930  078E  00BD               	movwf	___ftsub@f2
  4931  078F  3088               	movlw	136
  4932  0790  00BE               	movwf	___ftsub@f2+1
  4933  0791  3043               	movlw	67
  4934  0792  00BF               	movwf	___ftsub@f2+2
  4935  0793  0869               	movf	main@steinhart,w
  4936  0794  00C0               	movwf	___ftsub@f1
  4937  0795  086A               	movf	main@steinhart+1,w
  4938  0796  00C1               	movwf	___ftsub@f1+1
  4939  0797  086B               	movf	main@steinhart+2,w
  4940  0798  00C2               	movwf	___ftsub@f1+2
  4941  0799  318D  2572  3185   	fcall	___ftsub
  4942  079C  0020               	movlb	0	; select bank0
  4943  079D  083D               	movf	?___ftsub,w
  4944  079E  00E9               	movwf	main@steinhart
  4945  079F  083E               	movf	?___ftsub+1,w
  4946  07A0  00EA               	movwf	main@steinhart+1
  4947  07A1  083F               	movf	?___ftsub+2,w
  4948  07A2  00EB               	movwf	main@steinhart+2
  4949                           
  4950                           ;main.c: 128: { LCD_Set_Cursor(0,0); LCD_Write_Int((unsigned int)R,-1, 0, 0);};
  4951  07A3  01F3               	clrf	LCD_Set_Cursor@y
  4952  07A4  3000               	movlw	0
  4953  07A5  3180  208C  3185   	fcall	_LCD_Set_Cursor
  4954  07A8  0020               	movlb	0	; select bank0
  4955  07A9  085A               	movf	main@R,w
  4956  07AA  00F0               	movwf	___fttol@f1
  4957  07AB  085B               	movf	main@R+1,w
  4958  07AC  00F1               	movwf	___fttol@f1+1
  4959  07AD  085C               	movf	main@R+2,w
  4960  07AE  00F2               	movwf	___fttol@f1+2
  4961  07AF  3181  218D  3185   	fcall	___fttol
  4962  07B2  0871               	movf	?___fttol+1,w
  4963  07B3  0020               	movlb	0	; select bank0
  4964  07B4  00A1               	movwf	LCD_Write_Int@value+1
  4965  07B5  0870               	movf	?___fttol,w
  4966  07B6  00A0               	movwf	LCD_Write_Int@value
  4967  07B7  01A2               	clrf	LCD_Write_Int@fieldLength
  4968  07B8  03A2               	decf	LCD_Write_Int@fieldLength,f
  4969  07B9  01A3               	clrf	LCD_Write_Int@numPlaces
  4970  07BA  01A4               	clrf	LCD_Write_Int@sign
  4971  07BB  3184  241D  3185   	fcall	_LCD_Write_Int
  4972                           
  4973                           ;main.c: 132: { LCD_Set_Cursor(1,0); LCD_Write_Int((unsigned int)steinhart,-1, 0, 0);};
  4974  07BE  01F3               	clrf	LCD_Set_Cursor@y
  4975  07BF  3001               	movlw	1
  4976  07C0  3180  208C  3185   	fcall	_LCD_Set_Cursor
  4977  07C3  0020               	movlb	0	; select bank0
  4978  07C4  0869               	movf	main@steinhart,w
  4979  07C5  00F0               	movwf	___fttol@f1
  4980  07C6  086A               	movf	main@steinhart+1,w
  4981  07C7  00F1               	movwf	___fttol@f1+1
  4982  07C8  086B               	movf	main@steinhart+2,w
  4983  07C9  00F2               	movwf	___fttol@f1+2
  4984  07CA  3181  218D  3185   	fcall	___fttol
  4985  07CD  0871               	movf	?___fttol+1,w
  4986  07CE  0020               	movlb	0	; select bank0
  4987  07CF  00A1               	movwf	LCD_Write_Int@value+1
  4988  07D0  0870               	movf	?___fttol,w
  4989  07D1  00A0               	movwf	LCD_Write_Int@value
  4990  07D2  01A2               	clrf	LCD_Write_Int@fieldLength
  4991  07D3  03A2               	decf	LCD_Write_Int@fieldLength,f
  4992  07D4  01A3               	clrf	LCD_Write_Int@numPlaces
  4993  07D5  01A4               	clrf	LCD_Write_Int@sign
  4994  07D6  3184  241D  3185   	fcall	_LCD_Write_Int
  4995                           
  4996                           ;main.c: 133: LCD_Write_Char(' ');
  4997  07D9  3020               	movlw	32
  4998  07DA  318D  25D5  3185   	fcall	_LCD_Write_Char
  4999                           
  5000                           ;main.c: 145: PWM6_LoadDutyValue(outCurrent);
  5001  07DD  0020               	movlb	0	; select bank0
  5002  07DE  0866               	movf	main@outCurrent+1,w
  5003  07DF  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5004  07E0  0865               	movf	main@outCurrent,w
  5005  07E1  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5006  07E2  318C  24F9  3185   	fcall	_PWM6_LoadDutyValue
  5007  07E5  2E0A               	goto	l2365
  5008  07E6                     __end_of_main:	
  5009                           
  5010                           	psect	text1
  5011  02BC                     __ptext1:	
  5012 ;; *************** function _log *****************
  5013 ;; Defined at:
  5014 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  x               3   39[BANK0 ] void 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  exponent        2   43[BANK0 ] int 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  3   39[BANK0 ] int 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5028 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;Total ram usage:        6 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    3
  5035 ;; This function calls:
  5036 ;;		___awtoft
  5037 ;;		___ftadd
  5038 ;;		___ftge
  5039 ;;		___ftmul
  5040 ;;		_eval_poly
  5041 ;;		_frexp
  5042 ;; This function is called by:
  5043 ;;		_main
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           
  5048                           ;psect for function _log
  5049  02BC                     _log:	
  5050                           
  5051                           ;incstack = 0
  5052                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5053  02BC  0020               	movlb	0	; select bank0
  5054  02BD  0847               	movf	log@x,w
  5055  02BE  00F0               	movwf	___ftge@ff1
  5056  02BF  0848               	movf	log@x+1,w
  5057  02C0  00F1               	movwf	___ftge@ff1+1
  5058  02C1  0849               	movf	log@x+2,w
  5059  02C2  00F2               	movwf	___ftge@ff1+2
  5060  02C3  3000               	movlw	0
  5061  02C4  00F3               	movwf	___ftge@ff2
  5062  02C5  3000               	movlw	0
  5063  02C6  00F4               	movwf	___ftge@ff2+1
  5064  02C7  3000               	movlw	0
  5065  02C8  00F5               	movwf	___ftge@ff2+2
  5066  02C9  318E  2630  3182   	fcall	___ftge
  5067  02CC  1803               	btfsc	3,0
  5068  02CD  2ADA               	goto	l2189
  5069  02CE  3021               	movlw	33
  5070  02CF  0020               	movlb	0	; select bank0
  5071  02D0  00EC               	movwf	_errno
  5072  02D1  3000               	movlw	0
  5073  02D2  00ED               	movwf	_errno+1
  5074  02D3  3000               	movlw	0
  5075  02D4  00C7               	movwf	?_log
  5076  02D5  3000               	movlw	0
  5077  02D6  00C8               	movwf	?_log+1
  5078  02D7  3000               	movlw	0
  5079  02D8  00C9               	movwf	?_log+2
  5080  02D9  0008               	return
  5081  02DA                     l2189:	
  5082  02DA  0020               	movlb	0	; select bank0
  5083  02DB  0849               	movf	log@x+2,w
  5084  02DC  0448               	iorwf	log@x+1,w
  5085  02DD  0447               	iorwf	log@x,w
  5086  02DE  1D03               	skipz
  5087  02DF  2AEB               	goto	l2195
  5088  02E0  3022               	movlw	34
  5089  02E1  00EC               	movwf	_errno
  5090  02E2  3000               	movlw	0
  5091  02E3  00ED               	movwf	_errno+1
  5092  02E4  3000               	movlw	0
  5093  02E5  00C7               	movwf	?_log
  5094  02E6  3000               	movlw	0
  5095  02E7  00C8               	movwf	?_log+1
  5096  02E8  3000               	movlw	0
  5097  02E9  00C9               	movwf	?_log+2
  5098  02EA  0008               	return
  5099  02EB                     l2195:	
  5100  02EB  3000               	movlw	0
  5101  02EC  00B0               	movwf	___ftadd@f1
  5102  02ED  3080               	movlw	128
  5103  02EE  00B1               	movwf	___ftadd@f1+1
  5104  02EF  30BF               	movlw	191
  5105  02F0  00B2               	movwf	___ftadd@f1+2
  5106  02F1  3000               	movlw	0
  5107  02F2  00A0               	movwf	___ftmul@f1
  5108  02F3  3000               	movlw	0
  5109  02F4  00A1               	movwf	___ftmul@f1+1
  5110  02F5  3040               	movlw	64
  5111  02F6  00A2               	movwf	___ftmul@f1+2
  5112  02F7  304B               	movlw	(low (log@exponent| 0))& (0+255)
  5113  02F8  00CA               	movwf	??_log
  5114  02F9  084A               	movf	??_log,w
  5115  02FA  00F3               	movwf	frexp@eptr
  5116  02FB  0847               	movf	log@x,w
  5117  02FC  00F0               	movwf	frexp@value
  5118  02FD  0848               	movf	log@x+1,w
  5119  02FE  00F1               	movwf	frexp@value+1
  5120  02FF  0849               	movf	log@x+2,w
  5121  0300  00F2               	movwf	frexp@value+2
  5122  0301  318E  266B  3182   	fcall	_frexp
  5123  0304  0870               	movf	?_frexp,w
  5124  0305  0020               	movlb	0	; select bank0
  5125  0306  00A3               	movwf	___ftmul@f2
  5126  0307  0871               	movf	?_frexp+1,w
  5127  0308  00A4               	movwf	___ftmul@f2+1
  5128  0309  0872               	movf	?_frexp+2,w
  5129  030A  00A5               	movwf	___ftmul@f2+2
  5130  030B  3183  2369  3182   	fcall	___ftmul
  5131  030E  0020               	movlb	0	; select bank0
  5132  030F  0820               	movf	?___ftmul,w
  5133  0310  00B3               	movwf	___ftadd@f2
  5134  0311  0821               	movf	?___ftmul+1,w
  5135  0312  00B4               	movwf	___ftadd@f2+1
  5136  0313  0822               	movf	?___ftmul+2,w
  5137  0314  00B5               	movwf	___ftadd@f2+2
  5138  0315  3184  24E8  3182   	fcall	___ftadd
  5139  0318  0020               	movlb	0	; select bank0
  5140  0319  0830               	movf	?___ftadd,w
  5141  031A  00C7               	movwf	log@x
  5142  031B  0831               	movf	?___ftadd+1,w
  5143  031C  00C8               	movwf	log@x+1
  5144  031D  0832               	movf	?___ftadd+2,w
  5145  031E  00C9               	movwf	log@x+2
  5146  031F  30FF               	movlw	255
  5147  0320  07CB               	addwf	log@exponent,f
  5148  0321  30FF               	movlw	255
  5149  0322  3DCC               	addwfc	log@exponent+1,f
  5150  0323  0847               	movf	log@x,w
  5151  0324  00BD               	movwf	eval_poly@x
  5152  0325  0848               	movf	log@x+1,w
  5153  0326  00BE               	movwf	eval_poly@x+1
  5154  0327  0849               	movf	log@x+2,w
  5155  0328  00BF               	movwf	eval_poly@x+2
  5156  0329  3000               	movlw	low (log@coeff| (0+32768))
  5157  032A  00C0               	movwf	eval_poly@d
  5158  032B  3090               	movlw	high (log@coeff| (0+32768))
  5159  032C  00C1               	movwf	eval_poly@d+1
  5160  032D  3008               	movlw	8
  5161  032E  00C2               	movwf	eval_poly@n
  5162  032F  3000               	movlw	0
  5163  0330  00C3               	movwf	eval_poly@n+1
  5164  0331  318F  273C  3182   	fcall	_eval_poly
  5165  0334  0020               	movlb	0	; select bank0
  5166  0335  083D               	movf	?_eval_poly,w
  5167  0336  00C7               	movwf	log@x
  5168  0337  083E               	movf	?_eval_poly+1,w
  5169  0338  00C8               	movwf	log@x+1
  5170  0339  083F               	movf	?_eval_poly+2,w
  5171  033A  00C9               	movwf	log@x+2
  5172  033B  0847               	movf	log@x,w
  5173  033C  00B0               	movwf	___ftadd@f1
  5174  033D  0848               	movf	log@x+1,w
  5175  033E  00B1               	movwf	___ftadd@f1+1
  5176  033F  0849               	movf	log@x+2,w
  5177  0340  00B2               	movwf	___ftadd@f1+2
  5178  0341  3072               	movlw	114
  5179  0342  00A0               	movwf	___ftmul@f1
  5180  0343  3031               	movlw	49
  5181  0344  00A1               	movwf	___ftmul@f1+1
  5182  0345  303F               	movlw	63
  5183  0346  00A2               	movwf	___ftmul@f1+2
  5184  0347  084C               	movf	log@exponent+1,w
  5185  0348  00F9               	movwf	___awtoft@c+1
  5186  0349  084B               	movf	log@exponent,w
  5187  034A  00F8               	movwf	___awtoft@c
  5188  034B  318D  2590  3182   	fcall	___awtoft
  5189  034E  0878               	movf	?___awtoft,w
  5190  034F  0020               	movlb	0	; select bank0
  5191  0350  00A3               	movwf	___ftmul@f2
  5192  0351  0879               	movf	?___awtoft+1,w
  5193  0352  00A4               	movwf	___ftmul@f2+1
  5194  0353  087A               	movf	?___awtoft+2,w
  5195  0354  00A5               	movwf	___ftmul@f2+2
  5196  0355  3183  2369  3182   	fcall	___ftmul
  5197  0358  0020               	movlb	0	; select bank0
  5198  0359  0820               	movf	?___ftmul,w
  5199  035A  00B3               	movwf	___ftadd@f2
  5200  035B  0821               	movf	?___ftmul+1,w
  5201  035C  00B4               	movwf	___ftadd@f2+1
  5202  035D  0822               	movf	?___ftmul+2,w
  5203  035E  00B5               	movwf	___ftadd@f2+2
  5204  035F  3184  24E8         	fcall	___ftadd
  5205  0361  0020               	movlb	0	; select bank0
  5206  0362  0830               	movf	?___ftadd,w
  5207  0363  00C7               	movwf	?_log
  5208  0364  0831               	movf	?___ftadd+1,w
  5209  0365  00C8               	movwf	?_log+1
  5210  0366  0832               	movf	?___ftadd+2,w
  5211  0367  00C9               	movwf	?_log+2
  5212  0368  0008               	return
  5213  0369                     __end_of_log:	
  5214                           
  5215                           	psect	text2
  5216  0E6B                     __ptext2:	
  5217 ;; *************** function _frexp *****************
  5218 ;; Defined at:
  5219 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  value           3    0[COMMON] int 
  5222 ;;  eptr            1    3[COMMON] PTR int 
  5223 ;;		 -> log@exponent(2), 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;		None
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  3    0[COMMON] PTR int 
  5228 ;; Registers used:
  5229 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;Total ram usage:        6 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_log
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           
  5249                           ;psect for function _frexp
  5250  0E6B                     _frexp:	
  5251                           
  5252                           ;incstack = 0
  5253                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5254  0E6B  0872               	movf	frexp@value+2,w
  5255  0E6C  0471               	iorwf	frexp@value+1,w
  5256  0E6D  0470               	iorwf	frexp@value,w
  5257  0E6E  1D03               	skipz
  5258  0E6F  2E7D               	goto	l1995
  5259  0E70  0873               	movf	frexp@eptr,w
  5260  0E71  0086               	movwf	6
  5261  0E72  0187               	clrf	7
  5262  0E73  3000               	movlw	0
  5263  0E74  3FC0               	movwi [0]fsr1
  5264  0E75  3FC1               	movwi [1]fsr1
  5265  0E76  3000               	movlw	0
  5266  0E77  00F0               	movwf	?_frexp
  5267  0E78  3000               	movlw	0
  5268  0E79  00F1               	movwf	?_frexp+1
  5269  0E7A  3000               	movlw	0
  5270  0E7B  00F2               	movwf	?_frexp+2
  5271  0E7C  0008               	return
  5272  0E7D                     l1995:	
  5273  0E7D  0872               	movf	frexp@value+2,w
  5274  0E7E  397F               	andlw	127
  5275  0E7F  00F4               	movwf	??_frexp
  5276  0E80  01F5               	clrf	??_frexp+1
  5277  0E81  35F4               	lslf	??_frexp,f
  5278  0E82  0DF5               	rlf	??_frexp+1,f
  5279  0E83  0873               	movf	frexp@eptr,w
  5280  0E84  0086               	movwf	6
  5281  0E85  0187               	clrf	7
  5282  0E86  0874               	movf	??_frexp,w
  5283  0E87  3FC0               	movwi [0]fsr1
  5284  0E88  0875               	movf	??_frexp+1,w
  5285  0E89  3FC1               	movwi [1]fsr1
  5286  0E8A  0D71               	rlf	frexp@value+1,w
  5287  0E8B  0D71               	rlf	frexp@value+1,w
  5288  0E8C  3901               	andlw	1
  5289  0E8D  00F4               	movwf	??_frexp
  5290  0E8E  01F5               	clrf	??_frexp+1
  5291  0E8F  0873               	movf	frexp@eptr,w
  5292  0E90  0086               	movwf	6
  5293  0E91  0187               	clrf	7
  5294  0E92  0874               	movf	??_frexp,w
  5295  0E93  0481               	iorwf	1,f
  5296  0E94  3141               	addfsr 1,1
  5297  0E95  0875               	movf	??_frexp+1,w
  5298  0E96  0481               	iorwf	1,f
  5299  0E97  0873               	movf	frexp@eptr,w
  5300  0E98  0086               	movwf	6
  5301  0E99  0187               	clrf	7
  5302  0E9A  3082               	movlw	130
  5303  0E9B  0781               	addwf	1,f
  5304  0E9C  3141               	addfsr 1,1
  5305  0E9D  30FF               	movlw	255
  5306  0E9E  3D81               	addwfc	1,f
  5307  0E9F  317F               	addfsr 1,-1
  5308  0EA0  0872               	movf	frexp@value+2,w
  5309  0EA1  3980               	andlw	-128
  5310  0EA2  383F               	iorlw	63
  5311  0EA3  00F2               	movwf	frexp@value+2
  5312  0EA4  13F1               	bcf	frexp@value+1,7
  5313  0EA5  0008               	return
  5314  0EA6                     __end_of_frexp:	
  5315                           
  5316                           	psect	text3
  5317  0F3C                     __ptext3:	
  5318 ;; *************** function _eval_poly *****************
  5319 ;; Defined at:
  5320 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  x               3   29[BANK0 ] PTR int 
  5323 ;;  d               2   32[BANK0 ] PTR const 
  5324 ;;		 -> log@coeff(27), 
  5325 ;;  n               2   34[BANK0 ] int 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  res             3   36[BANK0 ] int 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  3   29[BANK0 ] int 
  5330 ;; Registers used:
  5331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5337 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;Total ram usage:       10 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    2
  5344 ;; This function calls:
  5345 ;;		___ftadd
  5346 ;;		___ftmul
  5347 ;;		___wmul
  5348 ;; This function is called by:
  5349 ;;		_log
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function _eval_poly
  5355  0F3C                     _eval_poly:	
  5356                           
  5357                           ;incstack = 0
  5358                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5359  0F3C  0020               	movlb	0	; select bank0
  5360  0F3D  0843               	movf	eval_poly@n+1,w
  5361  0F3E  00F1               	movwf	___wmul@multiplier+1
  5362  0F3F  0842               	movf	eval_poly@n,w
  5363  0F40  00F0               	movwf	___wmul@multiplier
  5364  0F41  3003               	movlw	3
  5365  0F42  00F2               	movwf	___wmul@multiplicand
  5366  0F43  3000               	movlw	0
  5367  0F44  00F3               	movwf	___wmul@multiplicand+1
  5368  0F45  318D  2557  318F   	fcall	___wmul
  5369  0F48  0020               	movlb	0	; select bank0
  5370  0F49  0840               	movf	eval_poly@d,w
  5371  0F4A  0770               	addwf	?___wmul,w
  5372  0F4B  0084               	movwf	4
  5373  0F4C  0841               	movf	eval_poly@d+1,w
  5374  0F4D  3D71               	addwfc	?___wmul+1,w
  5375  0F4E  0085               	movwf	5
  5376  0F4F  3F00               	moviw [0]fsr0
  5377  0F50  00C4               	movwf	eval_poly@res
  5378  0F51  3F01               	moviw [1]fsr0
  5379  0F52  00C5               	movwf	eval_poly@res+1
  5380  0F53  3F02               	moviw [2]fsr0
  5381  0F54                     L1:	
  5382  0F54  00C6               	movwf	eval_poly@res+2
  5383  0F55  0842               	movf	eval_poly@n,w
  5384  0F56  0443               	iorwf	eval_poly@n+1,w
  5385  0F57  1903               	btfsc	3,2
  5386  0F58  2F95               	goto	l2013
  5387  0F59  30FF               	movlw	255
  5388  0F5A  07C2               	addwf	eval_poly@n,f
  5389  0F5B  30FF               	movlw	255
  5390  0F5C  3DC3               	addwfc	eval_poly@n+1,f
  5391  0F5D  0843               	movf	eval_poly@n+1,w
  5392  0F5E  00F1               	movwf	___wmul@multiplier+1
  5393  0F5F  0842               	movf	eval_poly@n,w
  5394  0F60  00F0               	movwf	___wmul@multiplier
  5395  0F61  3003               	movlw	3
  5396  0F62  00F2               	movwf	___wmul@multiplicand
  5397  0F63  3000               	movlw	0
  5398  0F64  00F3               	movwf	___wmul@multiplicand+1
  5399  0F65  318D  2557  318F   	fcall	___wmul
  5400  0F68  0020               	movlb	0	; select bank0
  5401  0F69  0840               	movf	eval_poly@d,w
  5402  0F6A  0770               	addwf	?___wmul,w
  5403  0F6B  0084               	movwf	4
  5404  0F6C  0841               	movf	eval_poly@d+1,w
  5405  0F6D  3D71               	addwfc	?___wmul+1,w
  5406  0F6E  0085               	movwf	5
  5407  0F6F  3F00               	moviw [0]fsr0
  5408  0F70  00B0               	movwf	___ftadd@f1
  5409  0F71  3F01               	moviw [1]fsr0
  5410  0F72  00B1               	movwf	___ftadd@f1+1
  5411  0F73  3F02               	moviw [2]fsr0
  5412  0F74  00B2               	movwf	___ftadd@f1+2
  5413  0F75  0844               	movf	eval_poly@res,w
  5414  0F76  00A0               	movwf	___ftmul@f1
  5415  0F77  0845               	movf	eval_poly@res+1,w
  5416  0F78  00A1               	movwf	___ftmul@f1+1
  5417  0F79  0846               	movf	eval_poly@res+2,w
  5418  0F7A  00A2               	movwf	___ftmul@f1+2
  5419  0F7B  083D               	movf	eval_poly@x,w
  5420  0F7C  00A3               	movwf	___ftmul@f2
  5421  0F7D  083E               	movf	eval_poly@x+1,w
  5422  0F7E  00A4               	movwf	___ftmul@f2+1
  5423  0F7F  083F               	movf	eval_poly@x+2,w
  5424  0F80  00A5               	movwf	___ftmul@f2+2
  5425  0F81  3183  2369  318F   	fcall	___ftmul
  5426  0F84  0020               	movlb	0	; select bank0
  5427  0F85  0820               	movf	?___ftmul,w
  5428  0F86  00B3               	movwf	___ftadd@f2
  5429  0F87  0821               	movf	?___ftmul+1,w
  5430  0F88  00B4               	movwf	___ftadd@f2+1
  5431  0F89  0822               	movf	?___ftmul+2,w
  5432  0F8A  00B5               	movwf	___ftadd@f2+2
  5433  0F8B  3184  24E8  318F   	fcall	___ftadd
  5434  0F8E  0020               	movlb	0	; select bank0
  5435  0F8F  0830               	movf	?___ftadd,w
  5436  0F90  00C4               	movwf	eval_poly@res
  5437  0F91  0831               	movf	?___ftadd+1,w
  5438  0F92  00C5               	movwf	eval_poly@res+1
  5439  0F93  0832               	movf	?___ftadd+2,w
  5440  0F94  2F54               	goto	L1
  5441  0F95                     l2013:	
  5442  0F95  0844               	movf	eval_poly@res,w
  5443  0F96  00BD               	movwf	?_eval_poly
  5444  0F97  0845               	movf	eval_poly@res+1,w
  5445  0F98  00BE               	movwf	?_eval_poly+1
  5446  0F99  0846               	movf	eval_poly@res+2,w
  5447  0F9A  00BF               	movwf	?_eval_poly+2
  5448  0F9B  0008               	return
  5449  0F9C                     __end_of_eval_poly:	
  5450                           
  5451                           	psect	text4
  5452  0D57                     __ptext4:	
  5453 ;; *************** function ___wmul *****************
  5454 ;; Defined at:
  5455 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  multiplier      2    0[COMMON] unsigned int 
  5458 ;;  multiplicand    2    2[COMMON] unsigned int 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  product         2    4[COMMON] unsigned int 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  2    0[COMMON] unsigned int 
  5463 ;; Registers used:
  5464 ;;		wreg, status,2, status,0
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;Total ram usage:        6 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; This function calls:
  5477 ;;		Nothing
  5478 ;; This function is called by:
  5479 ;;		_eval_poly
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           
  5484                           ;psect for function ___wmul
  5485  0D57                     ___wmul:	
  5486                           
  5487                           ;incstack = 0
  5488                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5489  0D57  01F4               	clrf	___wmul@product
  5490  0D58  01F5               	clrf	___wmul@product+1
  5491  0D59                     l1661:	
  5492  0D59  1C70               	btfss	___wmul@multiplier,0
  5493  0D5A  2D5F               	goto	l361
  5494  0D5B  0872               	movf	___wmul@multiplicand,w
  5495  0D5C  07F4               	addwf	___wmul@product,f
  5496  0D5D  0873               	movf	___wmul@multiplicand+1,w
  5497  0D5E  3DF5               	addwfc	___wmul@product+1,f
  5498  0D5F                     l361:	
  5499  0D5F  3001               	movlw	1
  5500  0D60                     u1615:	
  5501  0D60  35F2               	lslf	___wmul@multiplicand,f
  5502  0D61  0DF3               	rlf	___wmul@multiplicand+1,f
  5503  0D62  0B89               	decfsz	9,f
  5504  0D63  2D60               	goto	u1615
  5505  0D64  3001               	movlw	1
  5506  0D65                     u1625:	
  5507  0D65  36F1               	lsrf	___wmul@multiplier+1,f
  5508  0D66  0CF0               	rrf	___wmul@multiplier,f
  5509  0D67  0B89               	decfsz	9,f
  5510  0D68  2D65               	goto	u1625
  5511  0D69  0870               	movf	___wmul@multiplier,w
  5512  0D6A  0471               	iorwf	___wmul@multiplier+1,w
  5513  0D6B  1D03               	btfss	3,2
  5514  0D6C  2D59               	goto	l1661
  5515  0D6D  0875               	movf	___wmul@product+1,w
  5516  0D6E  00F1               	movwf	?___wmul+1
  5517  0D6F  0874               	movf	___wmul@product,w
  5518  0D70  00F0               	movwf	?___wmul
  5519  0D71  0008               	return
  5520  0D72                     __end_of___wmul:	
  5521                           
  5522                           	psect	text5
  5523  0369                     __ptext5:	
  5524 ;; *************** function ___ftmul *****************
  5525 ;; Defined at:
  5526 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  f1              3    0[BANK0 ] float 
  5529 ;;  f2              3    3[BANK0 ] float 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  5532 ;;  sign            1   15[BANK0 ] unsigned char 
  5533 ;;  cntr            1   14[BANK0 ] unsigned char 
  5534 ;;  exp             1   10[BANK0 ] unsigned char 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  3    0[BANK0 ] float 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2, status,0, pclath, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5544 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5547 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5548 ;;Total ram usage:       16 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    1
  5551 ;; This function calls:
  5552 ;;		___ftpack
  5553 ;; This function is called by:
  5554 ;;		_log
  5555 ;;		_eval_poly
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           
  5560                           ;psect for function ___ftmul
  5561  0369                     ___ftmul:	
  5562                           
  5563                           ;incstack = 0
  5564                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5565  0369  0020               	movlb	0	; select bank0
  5566  036A  0820               	movf	___ftmul@f1,w
  5567  036B  00A6               	movwf	??___ftmul
  5568  036C  0821               	movf	___ftmul@f1+1,w
  5569  036D  00A7               	movwf	??___ftmul+1
  5570  036E  0822               	movf	___ftmul@f1+2,w
  5571  036F  00A8               	movwf	??___ftmul+2
  5572  0370  1003               	clrc
  5573  0371  0D27               	rlf	??___ftmul+1,w
  5574  0372  0D28               	rlf	??___ftmul+2,w
  5575  0373  00A9               	movwf	??___ftmul+3
  5576  0374  0829               	movf	??___ftmul+3,w
  5577  0375  00AA               	movwf	___ftmul@exp
  5578  0376  082A               	movf	___ftmul@exp,w
  5579  0377  1D03               	btfss	3,2
  5580  0378  2B80               	goto	l1749
  5581  0379  3000               	movlw	0
  5582  037A  00A0               	movwf	?___ftmul
  5583  037B  3000               	movlw	0
  5584  037C  00A1               	movwf	?___ftmul+1
  5585  037D  3000               	movlw	0
  5586  037E  00A2               	movwf	?___ftmul+2
  5587  037F  0008               	return
  5588  0380                     l1749:	
  5589  0380  0823               	movf	___ftmul@f2,w
  5590  0381  00A6               	movwf	??___ftmul
  5591  0382  0824               	movf	___ftmul@f2+1,w
  5592  0383  00A7               	movwf	??___ftmul+1
  5593  0384  0825               	movf	___ftmul@f2+2,w
  5594  0385  00A8               	movwf	??___ftmul+2
  5595  0386  1003               	clrc
  5596  0387  0D27               	rlf	??___ftmul+1,w
  5597  0388  0D28               	rlf	??___ftmul+2,w
  5598  0389  00A9               	movwf	??___ftmul+3
  5599  038A  0829               	movf	??___ftmul+3,w
  5600  038B  00AF               	movwf	___ftmul@sign
  5601  038C  082F               	movf	___ftmul@sign,w
  5602  038D  1D03               	btfss	3,2
  5603  038E  2B96               	goto	l1755
  5604  038F  3000               	movlw	0
  5605  0390  00A0               	movwf	?___ftmul
  5606  0391  3000               	movlw	0
  5607  0392  00A1               	movwf	?___ftmul+1
  5608  0393  3000               	movlw	0
  5609  0394  00A2               	movwf	?___ftmul+2
  5610  0395  0008               	return
  5611  0396                     l1755:	
  5612  0396  082F               	movf	___ftmul@sign,w
  5613  0397  3E7B               	addlw	123
  5614  0398  00A6               	movwf	??___ftmul
  5615  0399  0826               	movf	??___ftmul,w
  5616  039A  07AA               	addwf	___ftmul@exp,f
  5617  039B  0820               	movf	___ftmul@f1,w
  5618  039C  00A6               	movwf	??___ftmul
  5619  039D  0821               	movf	___ftmul@f1+1,w
  5620  039E  00A7               	movwf	??___ftmul+1
  5621  039F  0822               	movf	___ftmul@f1+2,w
  5622  03A0  00A8               	movwf	??___ftmul+2
  5623  03A1  3010               	movlw	16
  5624  03A2                     u1895:	
  5625  03A2  36A8               	lsrf	??___ftmul+2,f
  5626  03A3  0CA7               	rrf	??___ftmul+1,f
  5627  03A4  0CA6               	rrf	??___ftmul,f
  5628  03A5  0B89               	decfsz	9,f
  5629  03A6  2BA2               	goto	u1895
  5630  03A7  0826               	movf	??___ftmul,w
  5631  03A8  00A9               	movwf	??___ftmul+3
  5632  03A9  0829               	movf	??___ftmul+3,w
  5633  03AA  00AF               	movwf	___ftmul@sign
  5634  03AB  0823               	movf	___ftmul@f2,w
  5635  03AC  00A6               	movwf	??___ftmul
  5636  03AD  0824               	movf	___ftmul@f2+1,w
  5637  03AE  00A7               	movwf	??___ftmul+1
  5638  03AF  0825               	movf	___ftmul@f2+2,w
  5639  03B0  00A8               	movwf	??___ftmul+2
  5640  03B1  3010               	movlw	16
  5641  03B2                     u1905:	
  5642  03B2  36A8               	lsrf	??___ftmul+2,f
  5643  03B3  0CA7               	rrf	??___ftmul+1,f
  5644  03B4  0CA6               	rrf	??___ftmul,f
  5645  03B5  0B89               	decfsz	9,f
  5646  03B6  2BB2               	goto	u1905
  5647  03B7  0826               	movf	??___ftmul,w
  5648  03B8  00A9               	movwf	??___ftmul+3
  5649  03B9  0829               	movf	??___ftmul+3,w
  5650  03BA  06AF               	xorwf	___ftmul@sign,f
  5651  03BB  3080               	movlw	128
  5652  03BC  00A6               	movwf	??___ftmul
  5653  03BD  0826               	movf	??___ftmul,w
  5654  03BE  05AF               	andwf	___ftmul@sign,f
  5655  03BF  17A1               	bsf	___ftmul@f1+1,7
  5656  03C0  17A4               	bsf	___ftmul@f2+1,7
  5657  03C1  30FF               	movlw	255
  5658  03C2  05A3               	andwf	___ftmul@f2,f
  5659  03C3  30FF               	movlw	255
  5660  03C4  05A4               	andwf	___ftmul@f2+1,f
  5661  03C5  3000               	movlw	0
  5662  03C6  05A5               	andwf	___ftmul@f2+2,f
  5663  03C7  3000               	movlw	0
  5664  03C8  00AB               	movwf	___ftmul@f3_as_product
  5665  03C9  3000               	movlw	0
  5666  03CA  00AC               	movwf	___ftmul@f3_as_product+1
  5667  03CB  3000               	movlw	0
  5668  03CC  00AD               	movwf	___ftmul@f3_as_product+2
  5669  03CD  3007               	movlw	7
  5670  03CE  00A6               	movwf	??___ftmul
  5671  03CF  0826               	movf	??___ftmul,w
  5672  03D0  00AE               	movwf	___ftmul@cntr
  5673  03D1                     l1767:	
  5674  03D1  1C20               	btfss	___ftmul@f1,0
  5675  03D2  2BD9               	goto	l1771
  5676  03D3  0823               	movf	___ftmul@f2,w
  5677  03D4  07AB               	addwf	___ftmul@f3_as_product,f
  5678  03D5  0824               	movf	___ftmul@f2+1,w
  5679  03D6  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  5680  03D7  0825               	movf	___ftmul@f2+2,w
  5681  03D8  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  5682  03D9                     l1771:	
  5683  03D9  3001               	movlw	1
  5684  03DA                     u1925:	
  5685  03DA  36A2               	lsrf	___ftmul@f1+2,f
  5686  03DB  0CA1               	rrf	___ftmul@f1+1,f
  5687  03DC  0CA0               	rrf	___ftmul@f1,f
  5688  03DD  0B89               	decfsz	9,f
  5689  03DE  2BDA               	goto	u1925
  5690  03DF  3001               	movlw	1
  5691  03E0                     u1935:	
  5692  03E0  35A3               	lslf	___ftmul@f2,f
  5693  03E1  0DA4               	rlf	___ftmul@f2+1,f
  5694  03E2  0DA5               	rlf	___ftmul@f2+2,f
  5695  03E3  0B89               	decfsz	9,f
  5696  03E4  2BE0               	goto	u1935
  5697  03E5  3001               	movlw	1
  5698  03E6  02AE               	subwf	___ftmul@cntr,f
  5699  03E7  1D03               	btfss	3,2
  5700  03E8  2BD1               	goto	l1767
  5701  03E9  3009               	movlw	9
  5702  03EA  00A6               	movwf	??___ftmul
  5703  03EB  0826               	movf	??___ftmul,w
  5704  03EC  00AE               	movwf	___ftmul@cntr
  5705  03ED                     l1779:	
  5706  03ED  1C20               	btfss	___ftmul@f1,0
  5707  03EE  2BF5               	goto	l1783
  5708  03EF  0823               	movf	___ftmul@f2,w
  5709  03F0  07AB               	addwf	___ftmul@f3_as_product,f
  5710  03F1  0824               	movf	___ftmul@f2+1,w
  5711  03F2  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  5712  03F3  0825               	movf	___ftmul@f2+2,w
  5713  03F4  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  5714  03F5                     l1783:	
  5715  03F5  3001               	movlw	1
  5716  03F6                     u1965:	
  5717  03F6  36A2               	lsrf	___ftmul@f1+2,f
  5718  03F7  0CA1               	rrf	___ftmul@f1+1,f
  5719  03F8  0CA0               	rrf	___ftmul@f1,f
  5720  03F9  0B89               	decfsz	9,f
  5721  03FA  2BF6               	goto	u1965
  5722  03FB  3001               	movlw	1
  5723  03FC                     u1975:	
  5724  03FC  36AD               	lsrf	___ftmul@f3_as_product+2,f
  5725  03FD  0CAC               	rrf	___ftmul@f3_as_product+1,f
  5726  03FE  0CAB               	rrf	___ftmul@f3_as_product,f
  5727  03FF  0B89               	decfsz	9,f
  5728  0400  2BFC               	goto	u1975
  5729  0401  3001               	movlw	1
  5730  0402  02AE               	subwf	___ftmul@cntr,f
  5731  0403  1D03               	btfss	3,2
  5732  0404  2BED               	goto	l1779
  5733  0405  082B               	movf	___ftmul@f3_as_product,w
  5734  0406  00F0               	movwf	___ftpack@arg
  5735  0407  082C               	movf	___ftmul@f3_as_product+1,w
  5736  0408  00F1               	movwf	___ftpack@arg+1
  5737  0409  082D               	movf	___ftmul@f3_as_product+2,w
  5738  040A  00F2               	movwf	___ftpack@arg+2
  5739  040B  082A               	movf	___ftmul@exp,w
  5740  040C  00A6               	movwf	??___ftmul
  5741  040D  0826               	movf	??___ftmul,w
  5742  040E  00F3               	movwf	___ftpack@exp
  5743  040F  082F               	movf	___ftmul@sign,w
  5744  0410  00A7               	movwf	??___ftmul+1
  5745  0411  0827               	movf	??___ftmul+1,w
  5746  0412  00F4               	movwf	___ftpack@sign
  5747  0413  318F  279C         	fcall	___ftpack
  5748  0415  0870               	movf	?___ftpack,w
  5749  0416  0020               	movlb	0	; select bank0
  5750  0417  00A0               	movwf	?___ftmul
  5751  0418  0871               	movf	?___ftpack+1,w
  5752  0419  00A1               	movwf	?___ftmul+1
  5753  041A  0872               	movf	?___ftpack+2,w
  5754  041B  00A2               	movwf	?___ftmul+2
  5755  041C  0008               	return
  5756  041D                     __end_of___ftmul:	
  5757                           
  5758                           	psect	text6
  5759  0E30                     __ptext6:	
  5760 ;; *************** function ___ftge *****************
  5761 ;; Defined at:
  5762 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  ff1             3    0[COMMON] float 
  5765 ;;  ff2             3    3[COMMON] float 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;		None               void
  5770 ;; Registers used:
  5771 ;;		wreg, status,2, status,0
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5777 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5780 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;Total ram usage:        9 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_log
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           
  5791                           ;psect for function ___ftge
  5792  0E30                     ___ftge:	
  5793                           
  5794                           ;incstack = 0
  5795                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5796  0E30  1FF2               	btfss	___ftge@ff1+2,7
  5797  0E31  2E46               	goto	l1971
  5798  0E32  0970               	comf	___ftge@ff1,w
  5799  0E33  00F6               	movwf	??___ftge
  5800  0E34  0971               	comf	___ftge@ff1+1,w
  5801  0E35  00F7               	movwf	??___ftge+1
  5802  0E36  0972               	comf	___ftge@ff1+2,w
  5803  0E37  00F8               	movwf	??___ftge+2
  5804  0E38  0AF6               	incf	??___ftge,f
  5805  0E39  1903               	skipnz
  5806  0E3A  0AF7               	incf	??___ftge+1,f
  5807  0E3B  1903               	skipnz
  5808  0E3C  0AF8               	incf	??___ftge+2,f
  5809  0E3D  3000               	movlw	0
  5810  0E3E  0776               	addwf	??___ftge,w
  5811  0E3F  00F0               	movwf	___ftge@ff1
  5812  0E40  3000               	movlw	0
  5813  0E41  3D77               	addwfc	??___ftge+1,w
  5814  0E42  00F1               	movwf	___ftge@ff1+1
  5815  0E43  3080               	movlw	128
  5816  0E44  3D78               	addwfc	??___ftge+2,w
  5817  0E45  00F2               	movwf	___ftge@ff1+2
  5818  0E46                     l1971:	
  5819  0E46  1FF5               	btfss	___ftge@ff2+2,7
  5820  0E47  2E5C               	goto	l1975
  5821  0E48  0973               	comf	___ftge@ff2,w
  5822  0E49  00F6               	movwf	??___ftge
  5823  0E4A  0974               	comf	___ftge@ff2+1,w
  5824  0E4B  00F7               	movwf	??___ftge+1
  5825  0E4C  0975               	comf	___ftge@ff2+2,w
  5826  0E4D  00F8               	movwf	??___ftge+2
  5827  0E4E  0AF6               	incf	??___ftge,f
  5828  0E4F  1903               	skipnz
  5829  0E50  0AF7               	incf	??___ftge+1,f
  5830  0E51  1903               	skipnz
  5831  0E52  0AF8               	incf	??___ftge+2,f
  5832  0E53  3000               	movlw	0
  5833  0E54  0776               	addwf	??___ftge,w
  5834  0E55  00F3               	movwf	___ftge@ff2
  5835  0E56  3000               	movlw	0
  5836  0E57  3D77               	addwfc	??___ftge+1,w
  5837  0E58  00F4               	movwf	___ftge@ff2+1
  5838  0E59  3080               	movlw	128
  5839  0E5A  3D78               	addwfc	??___ftge+2,w
  5840  0E5B  00F5               	movwf	___ftge@ff2+2
  5841  0E5C                     l1975:	
  5842  0E5C  3080               	movlw	128
  5843  0E5D  06F2               	xorwf	___ftge@ff1+2,f
  5844  0E5E  3080               	movlw	128
  5845  0E5F  06F5               	xorwf	___ftge@ff2+2,f
  5846  0E60  0875               	movf	___ftge@ff2+2,w
  5847  0E61  0272               	subwf	___ftge@ff1+2,w
  5848  0E62  1D03               	skipz
  5849  0E63  0008               	return
  5850  0E64  0874               	movf	___ftge@ff2+1,w
  5851  0E65  0271               	subwf	___ftge@ff1+1,w
  5852  0E66  1D03               	skipz
  5853  0E67  0008               	return
  5854  0E68  0873               	movf	___ftge@ff2,w
  5855  0E69  0270               	subwf	___ftge@ff1,w
  5856  0E6A  0008               	return
  5857  0E6B                     __end_of___ftge:	
  5858                           
  5859                           	psect	text7
  5860  0D90                     __ptext7:	
  5861 ;; *************** function ___awtoft *****************
  5862 ;; Defined at:
  5863 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  c               2    8[COMMON] int 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  sign            1   13[COMMON] unsigned char 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  3    8[COMMON] float 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0, pclath, cstack
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5877 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;Total ram usage:        6 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:    1
  5884 ;; This function calls:
  5885 ;;		___ftpack
  5886 ;; This function is called by:
  5887 ;;		_log
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function ___awtoft
  5893  0D90                     ___awtoft:	
  5894                           
  5895                           ;incstack = 0
  5896                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5897  0D90  01FD               	clrf	___awtoft@sign
  5898  0D91  1FF9               	btfss	___awtoft@c+1,7
  5899  0D92  2D9A               	goto	l1963
  5900  0D93  09F8               	comf	___awtoft@c,f
  5901  0D94  09F9               	comf	___awtoft@c+1,f
  5902  0D95  0AF8               	incf	___awtoft@c,f
  5903  0D96  1903               	skipnz
  5904  0D97  0AF9               	incf	___awtoft@c+1,f
  5905  0D98  01FD               	clrf	___awtoft@sign
  5906  0D99  0AFD               	incf	___awtoft@sign,f
  5907  0D9A                     l1963:	
  5908  0D9A  0878               	movf	___awtoft@c,w
  5909  0D9B  00F0               	movwf	___ftpack@arg
  5910  0D9C  0879               	movf	___awtoft@c+1,w
  5911  0D9D  00F1               	movwf	___ftpack@arg+1
  5912  0D9E  01F2               	clrf	___ftpack@arg+2
  5913  0D9F  308E               	movlw	142
  5914  0DA0  00FB               	movwf	??___awtoft
  5915  0DA1  087B               	movf	??___awtoft,w
  5916  0DA2  00F3               	movwf	___ftpack@exp
  5917  0DA3  087D               	movf	___awtoft@sign,w
  5918  0DA4  00FC               	movwf	??___awtoft+1
  5919  0DA5  087C               	movf	??___awtoft+1,w
  5920  0DA6  00F4               	movwf	___ftpack@sign
  5921  0DA7  318F  279C         	fcall	___ftpack
  5922  0DA9  0870               	movf	?___ftpack,w
  5923  0DAA  00F8               	movwf	?___awtoft
  5924  0DAB  0871               	movf	?___ftpack+1,w
  5925  0DAC  00F9               	movwf	?___awtoft+1
  5926  0DAD  0872               	movf	?___ftpack+2,w
  5927  0DAE  00FA               	movwf	?___awtoft+2
  5928  0DAF  0008               	return
  5929  0DB0                     __end_of___awtoft:	
  5930                           
  5931                           	psect	text8
  5932  0CE6                     __ptext8:	
  5933 ;; *************** function ___lwtoft *****************
  5934 ;; Defined at:
  5935 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  c               2    8[COMMON] unsigned int 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  3    8[COMMON] float 
  5942 ;; Registers used:
  5943 ;;		wreg, status,2, status,0, pclath, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5949 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;Total ram usage:        4 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    1
  5956 ;; This function calls:
  5957 ;;		___ftpack
  5958 ;; This function is called by:
  5959 ;;		_main
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           
  5964                           ;psect for function ___lwtoft
  5965  0CE6                     ___lwtoft:	
  5966                           
  5967                           ;incstack = 0
  5968                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5969  0CE6  0878               	movf	___lwtoft@c,w
  5970  0CE7  00F0               	movwf	___ftpack@arg
  5971  0CE8  0879               	movf	___lwtoft@c+1,w
  5972  0CE9  00F1               	movwf	___ftpack@arg+1
  5973  0CEA  01F2               	clrf	___ftpack@arg+2
  5974  0CEB  308E               	movlw	142
  5975  0CEC  00FB               	movwf	??___lwtoft
  5976  0CED  087B               	movf	??___lwtoft,w
  5977  0CEE  00F3               	movwf	___ftpack@exp
  5978  0CEF  01F4               	clrf	___ftpack@sign
  5979  0CF0  318F  279C         	fcall	___ftpack
  5980  0CF2  0870               	movf	?___ftpack,w
  5981  0CF3  00F8               	movwf	?___lwtoft
  5982  0CF4  0871               	movf	?___ftpack+1,w
  5983  0CF5  00F9               	movwf	?___lwtoft+1
  5984  0CF6  0872               	movf	?___ftpack+2,w
  5985  0CF7  00FA               	movwf	?___lwtoft+2
  5986  0CF8  0008               	return
  5987  0CF9                     __end_of___lwtoft:	
  5988                           
  5989                           	psect	text9
  5990  018D                     __ptext9:	
  5991 ;; *************** function ___fttol *****************
  5992 ;; Defined at:
  5993 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  f1              3    0[COMMON] float 
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;  lval            4    9[COMMON] unsigned long 
  5998 ;;  exp1            1   13[COMMON] unsigned char 
  5999 ;;  sign1           1    8[COMMON] unsigned char 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  4    0[COMMON] long 
  6002 ;; Registers used:
  6003 ;;		wreg, status,2, status,0
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;Total ram usage:       14 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_main
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           
  6023                           ;psect for function ___fttol
  6024  018D                     ___fttol:	
  6025                           
  6026                           ;incstack = 0
  6027                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6028  018D  0870               	movf	___fttol@f1,w
  6029  018E  00F4               	movwf	??___fttol
  6030  018F  0871               	movf	___fttol@f1+1,w
  6031  0190  00F5               	movwf	??___fttol+1
  6032  0191  0872               	movf	___fttol@f1+2,w
  6033  0192  00F6               	movwf	??___fttol+2
  6034  0193  1003               	clrc
  6035  0194  0D75               	rlf	??___fttol+1,w
  6036  0195  0D76               	rlf	??___fttol+2,w
  6037  0196  00F7               	movwf	??___fttol+3
  6038  0197  0877               	movf	??___fttol+3,w
  6039  0198  00FD               	movwf	___fttol@exp1
  6040  0199  087D               	movf	___fttol@exp1,w
  6041  019A  1D03               	btfss	3,2
  6042  019B  29A5               	goto	l2301
  6043  019C  3000               	movlw	0
  6044  019D  00F3               	movwf	?___fttol+3
  6045  019E  3000               	movlw	0
  6046  019F  00F2               	movwf	?___fttol+2
  6047  01A0  3000               	movlw	0
  6048  01A1  00F1               	movwf	?___fttol+1
  6049  01A2  3000               	movlw	0
  6050  01A3  00F0               	movwf	?___fttol
  6051  01A4  0008               	return
  6052  01A5                     l2301:	
  6053  01A5  0870               	movf	___fttol@f1,w
  6054  01A6  00F4               	movwf	??___fttol
  6055  01A7  0871               	movf	___fttol@f1+1,w
  6056  01A8  00F5               	movwf	??___fttol+1
  6057  01A9  0872               	movf	___fttol@f1+2,w
  6058  01AA  00F6               	movwf	??___fttol+2
  6059  01AB  3017               	movlw	23
  6060  01AC                     u2705:	
  6061  01AC  36F6               	lsrf	??___fttol+2,f
  6062  01AD  0CF5               	rrf	??___fttol+1,f
  6063  01AE  0CF4               	rrf	??___fttol,f
  6064  01AF  0B89               	decfsz	9,f
  6065  01B0  29AC               	goto	u2705
  6066  01B1  0874               	movf	??___fttol,w
  6067  01B2  00F7               	movwf	??___fttol+3
  6068  01B3  0877               	movf	??___fttol+3,w
  6069  01B4  00F8               	movwf	___fttol@sign1
  6070  01B5  17F1               	bsf	___fttol@f1+1,7
  6071  01B6  30FF               	movlw	255
  6072  01B7  05F0               	andwf	___fttol@f1,f
  6073  01B8  30FF               	movlw	255
  6074  01B9  05F1               	andwf	___fttol@f1+1,f
  6075  01BA  3000               	movlw	0
  6076  01BB  05F2               	andwf	___fttol@f1+2,f
  6077  01BC  0870               	movf	___fttol@f1,w
  6078  01BD  00F9               	movwf	___fttol@lval
  6079  01BE  0871               	movf	___fttol@f1+1,w
  6080  01BF  00FA               	movwf	___fttol@lval+1
  6081  01C0  0872               	movf	___fttol@f1+2,w
  6082  01C1  00FB               	movwf	___fttol@lval+2
  6083  01C2  01FC               	clrf	___fttol@lval+3
  6084  01C3  308E               	movlw	142
  6085  01C4  02FD               	subwf	___fttol@exp1,f
  6086  01C5  1FFD               	btfss	___fttol@exp1,7
  6087  01C6  29E3               	goto	l2321
  6088  01C7  087D               	movf	___fttol@exp1,w
  6089  01C8  3A80               	xorlw	128
  6090  01C9  3E8F               	addlw	143
  6091  01CA  1803               	skipnc
  6092  01CB  29D5               	goto	l2319
  6093  01CC  3000               	movlw	0
  6094  01CD  00F3               	movwf	?___fttol+3
  6095  01CE  3000               	movlw	0
  6096  01CF  00F2               	movwf	?___fttol+2
  6097  01D0  3000               	movlw	0
  6098  01D1  00F1               	movwf	?___fttol+1
  6099  01D2  3000               	movlw	0
  6100  01D3  00F0               	movwf	?___fttol
  6101  01D4  0008               	return
  6102  01D5                     l2319:	
  6103  01D5  3001               	movlw	1
  6104  01D6                     u2735:	
  6105  01D6  36FC               	lsrf	___fttol@lval+3,f
  6106  01D7  0CFB               	rrf	___fttol@lval+2,f
  6107  01D8  0CFA               	rrf	___fttol@lval+1,f
  6108  01D9  0CF9               	rrf	___fttol@lval,f
  6109  01DA  0B89               	decfsz	9,f
  6110  01DB  29D6               	goto	u2735
  6111  01DC  3001               	movlw	1
  6112  01DD  00F4               	movwf	??___fttol
  6113  01DE  0874               	movf	??___fttol,w
  6114  01DF  07FD               	addwf	___fttol@exp1,f
  6115  01E0  1903               	btfsc	3,2
  6116  01E1  29FC               	goto	l2329
  6117  01E2  29D5               	goto	l2319
  6118  01E3                     l2321:	
  6119  01E3  3018               	movlw	24
  6120  01E4  027D               	subwf	___fttol@exp1,w
  6121  01E5  1C03               	skipc
  6122  01E6  29F9               	goto	l613
  6123  01E7  3000               	movlw	0
  6124  01E8  00F3               	movwf	?___fttol+3
  6125  01E9  3000               	movlw	0
  6126  01EA  00F2               	movwf	?___fttol+2
  6127  01EB  3000               	movlw	0
  6128  01EC  00F1               	movwf	?___fttol+1
  6129  01ED  3000               	movlw	0
  6130  01EE  00F0               	movwf	?___fttol
  6131  01EF  0008               	return
  6132  01F0                     l2327:	
  6133  01F0  3001               	movlw	1
  6134  01F1                     u2765:	
  6135  01F1  35F9               	lslf	___fttol@lval,f
  6136  01F2  0DFA               	rlf	___fttol@lval+1,f
  6137  01F3  0DFB               	rlf	___fttol@lval+2,f
  6138  01F4  0DFC               	rlf	___fttol@lval+3,f
  6139  01F5  0B89               	decfsz	9,f
  6140  01F6  29F1               	goto	u2765
  6141  01F7  3001               	movlw	1
  6142  01F8  02FD               	subwf	___fttol@exp1,f
  6143  01F9                     l613:	
  6144  01F9  087D               	movf	___fttol@exp1,w
  6145  01FA  1D03               	btfss	3,2
  6146  01FB  29F0               	goto	l2327
  6147  01FC                     l2329:	
  6148  01FC  0878               	movf	___fttol@sign1,w
  6149  01FD  1903               	btfsc	3,2
  6150  01FE  2A0A               	goto	l2333
  6151  01FF  09F9               	comf	___fttol@lval,f
  6152  0200  09FA               	comf	___fttol@lval+1,f
  6153  0201  09FB               	comf	___fttol@lval+2,f
  6154  0202  09FC               	comf	___fttol@lval+3,f
  6155  0203  0AF9               	incf	___fttol@lval,f
  6156  0204  1903               	skipnz
  6157  0205  0AFA               	incf	___fttol@lval+1,f
  6158  0206  1903               	skipnz
  6159  0207  0AFB               	incf	___fttol@lval+2,f
  6160  0208  1903               	skipnz
  6161  0209  0AFC               	incf	___fttol@lval+3,f
  6162  020A                     l2333:	
  6163  020A  087C               	movf	___fttol@lval+3,w
  6164  020B  00F3               	movwf	?___fttol+3
  6165  020C  087B               	movf	___fttol@lval+2,w
  6166  020D  00F2               	movwf	?___fttol+2
  6167  020E  087A               	movf	___fttol@lval+1,w
  6168  020F  00F1               	movwf	?___fttol+1
  6169  0210  0879               	movf	___fttol@lval,w
  6170  0211  00F0               	movwf	?___fttol
  6171  0212  0008               	return
  6172  0213                     __end_of___fttol:	
  6173                           
  6174                           	psect	text10
  6175  0D72                     __ptext10:	
  6176 ;; *************** function ___ftsub *****************
  6177 ;; Defined at:
  6178 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  f2              3   29[BANK0 ] float 
  6181 ;;  f1              3   32[BANK0 ] float 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  3   29[BANK0 ] float 
  6186 ;; Registers used:
  6187 ;;		wreg, status,2, status,0, pclath, cstack
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6193 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;Total ram usage:        6 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:    2
  6200 ;; This function calls:
  6201 ;;		___ftadd
  6202 ;; This function is called by:
  6203 ;;		_main
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           
  6208                           ;psect for function ___ftsub
  6209  0D72                     ___ftsub:	
  6210                           
  6211                           ;incstack = 0
  6212                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6213  0D72  0020               	movlb	0	; select bank0
  6214  0D73  083F               	movf	___ftsub@f2+2,w
  6215  0D74  043E               	iorwf	___ftsub@f2+1,w
  6216  0D75  043D               	iorwf	___ftsub@f2,w
  6217  0D76  1903               	skipnz
  6218  0D77  2D7A               	goto	l2291
  6219  0D78  3080               	movlw	128
  6220  0D79  06BF               	xorwf	___ftsub@f2+2,f
  6221  0D7A                     l2291:	
  6222  0D7A  0840               	movf	___ftsub@f1,w
  6223  0D7B  00B0               	movwf	___ftadd@f1
  6224  0D7C  0841               	movf	___ftsub@f1+1,w
  6225  0D7D  00B1               	movwf	___ftadd@f1+1
  6226  0D7E  0842               	movf	___ftsub@f1+2,w
  6227  0D7F  00B2               	movwf	___ftadd@f1+2
  6228  0D80  083D               	movf	___ftsub@f2,w
  6229  0D81  00B3               	movwf	___ftadd@f2
  6230  0D82  083E               	movf	___ftsub@f2+1,w
  6231  0D83  00B4               	movwf	___ftadd@f2+1
  6232  0D84  083F               	movf	___ftsub@f2+2,w
  6233  0D85  00B5               	movwf	___ftadd@f2+2
  6234  0D86  3184  24E8         	fcall	___ftadd
  6235  0D88  0020               	movlb	0	; select bank0
  6236  0D89  0830               	movf	?___ftadd,w
  6237  0D8A  00BD               	movwf	?___ftsub
  6238  0D8B  0831               	movf	?___ftadd+1,w
  6239  0D8C  00BE               	movwf	?___ftsub+1
  6240  0D8D  0832               	movf	?___ftadd+2,w
  6241  0D8E  00BF               	movwf	?___ftsub+2
  6242  0D8F  0008               	return
  6243  0D90                     __end_of___ftsub:	
  6244                           
  6245                           	psect	text11
  6246  04E8                     __ptext11:	
  6247 ;; *************** function ___ftadd *****************
  6248 ;; Defined at:
  6249 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  f1              3   16[BANK0 ] float 
  6252 ;;  f2              3   19[BANK0 ] float 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  exp1            1   28[BANK0 ] unsigned char 
  6255 ;;  exp2            1   27[BANK0 ] unsigned char 
  6256 ;;  sign            1   26[BANK0 ] unsigned char 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  3   16[BANK0 ] float 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0, pclath, cstack
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6266 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;Total ram usage:       13 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; Hardware stack levels required when called:    1
  6273 ;; This function calls:
  6274 ;;		___ftpack
  6275 ;; This function is called by:
  6276 ;;		_main
  6277 ;;		___ftsub
  6278 ;;		_log
  6279 ;;		_eval_poly
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           
  6284                           ;psect for function ___ftadd
  6285  04E8                     ___ftadd:	
  6286                           
  6287                           ;incstack = 0
  6288                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6289  04E8  0020               	movlb	0	; select bank0
  6290  04E9  0830               	movf	___ftadd@f1,w
  6291  04EA  00B6               	movwf	??___ftadd
  6292  04EB  0831               	movf	___ftadd@f1+1,w
  6293  04EC  00B7               	movwf	??___ftadd+1
  6294  04ED  0832               	movf	___ftadd@f1+2,w
  6295  04EE  00B8               	movwf	??___ftadd+2
  6296  04EF  1003               	clrc
  6297  04F0  0D37               	rlf	??___ftadd+1,w
  6298  04F1  0D38               	rlf	??___ftadd+2,w
  6299  04F2  00B9               	movwf	??___ftadd+3
  6300  04F3  0839               	movf	??___ftadd+3,w
  6301  04F4  00BC               	movwf	___ftadd@exp1
  6302  04F5  0833               	movf	___ftadd@f2,w
  6303  04F6  00B6               	movwf	??___ftadd
  6304  04F7  0834               	movf	___ftadd@f2+1,w
  6305  04F8  00B7               	movwf	??___ftadd+1
  6306  04F9  0835               	movf	___ftadd@f2+2,w
  6307  04FA  00B8               	movwf	??___ftadd+2
  6308  04FB  1003               	clrc
  6309  04FC  0D37               	rlf	??___ftadd+1,w
  6310  04FD  0D38               	rlf	??___ftadd+2,w
  6311  04FE  00B9               	movwf	??___ftadd+3
  6312  04FF  0839               	movf	??___ftadd+3,w
  6313  0500  00BB               	movwf	___ftadd@exp2
  6314  0501  083C               	movf	___ftadd@exp1,w
  6315  0502  1903               	btfsc	3,2
  6316  0503  2D10               	goto	l1679
  6317  0504  083B               	movf	___ftadd@exp2,w
  6318  0505  023C               	subwf	___ftadd@exp1,w
  6319  0506  1803               	skipnc
  6320  0507  2D17               	goto	l1683
  6321  0508  033C               	decf	___ftadd@exp1,w
  6322  0509  3AFF               	xorlw	255
  6323  050A  073B               	addwf	___ftadd@exp2,w
  6324  050B  00B6               	movwf	??___ftadd
  6325  050C  3019               	movlw	25
  6326  050D  0236               	subwf	??___ftadd,w
  6327  050E  1C03               	skipc
  6328  050F  2D17               	goto	l1683
  6329  0510                     l1679:	
  6330  0510  0833               	movf	___ftadd@f2,w
  6331  0511  00B0               	movwf	?___ftadd
  6332  0512  0834               	movf	___ftadd@f2+1,w
  6333  0513  00B1               	movwf	?___ftadd+1
  6334  0514  0835               	movf	___ftadd@f2+2,w
  6335  0515  00B2               	movwf	?___ftadd+2
  6336  0516  0008               	return
  6337  0517                     l1683:	
  6338  0517  083B               	movf	___ftadd@exp2,w
  6339  0518  1903               	btfsc	3,2
  6340  0519  0008               	return
  6341  051A  083C               	movf	___ftadd@exp1,w
  6342  051B  023B               	subwf	___ftadd@exp2,w
  6343  051C  1803               	skipnc
  6344  051D  2D26               	goto	l1689
  6345  051E  033B               	decf	___ftadd@exp2,w
  6346  051F  3AFF               	xorlw	255
  6347  0520  073C               	addwf	___ftadd@exp1,w
  6348  0521  00B6               	movwf	??___ftadd
  6349  0522  3019               	movlw	25
  6350  0523  0236               	subwf	??___ftadd,w
  6351  0524  1803               	btfsc	3,0
  6352  0525  0008               	return
  6353  0526                     l1689:	
  6354  0526  3006               	movlw	6
  6355  0527  00B6               	movwf	??___ftadd
  6356  0528  0836               	movf	??___ftadd,w
  6357  0529  00BA               	movwf	___ftadd@sign
  6358  052A  1BB2               	btfsc	___ftadd@f1+2,7
  6359  052B  17BA               	bsf	___ftadd@sign,7
  6360  052C  1BB5               	btfsc	___ftadd@f2+2,7
  6361  052D  173A               	bsf	___ftadd@sign,6
  6362  052E  17B1               	bsf	___ftadd@f1+1,7
  6363  052F  30FF               	movlw	255
  6364  0530  05B0               	andwf	___ftadd@f1,f
  6365  0531  30FF               	movlw	255
  6366  0532  05B1               	andwf	___ftadd@f1+1,f
  6367  0533  3000               	movlw	0
  6368  0534  05B2               	andwf	___ftadd@f1+2,f
  6369  0535  17B4               	bsf	___ftadd@f2+1,7
  6370  0536  30FF               	movlw	255
  6371  0537  05B3               	andwf	___ftadd@f2,f
  6372  0538  30FF               	movlw	255
  6373  0539  05B4               	andwf	___ftadd@f2+1,f
  6374  053A  3000               	movlw	0
  6375  053B  05B5               	andwf	___ftadd@f2+2,f
  6376  053C  083B               	movf	___ftadd@exp2,w
  6377  053D  023C               	subwf	___ftadd@exp1,w
  6378  053E  1803               	skipnc
  6379  053F  2D62               	goto	l1711
  6380  0540                     l1701:	
  6381  0540  3001               	movlw	1
  6382  0541                     u1735:	
  6383  0541  35B3               	lslf	___ftadd@f2,f
  6384  0542  0DB4               	rlf	___ftadd@f2+1,f
  6385  0543  0DB5               	rlf	___ftadd@f2+2,f
  6386  0544  0B89               	decfsz	9,f
  6387  0545  2D41               	goto	u1735
  6388  0546  3001               	movlw	1
  6389  0547  02BB               	subwf	___ftadd@exp2,f
  6390  0548  083B               	movf	___ftadd@exp2,w
  6391  0549  063C               	xorwf	___ftadd@exp1,w
  6392  054A  1903               	skipnz
  6393  054B  2D5D               	goto	l1709
  6394  054C  3001               	movlw	1
  6395  054D  02BA               	subwf	___ftadd@sign,f
  6396  054E  083A               	movf	___ftadd@sign,w
  6397  054F  3907               	andlw	7
  6398  0550  1903               	btfsc	3,2
  6399  0551  2D5D               	goto	l1709
  6400  0552  2D40               	goto	l1701
  6401  0553                     l1707:	
  6402  0553  3001               	movlw	1
  6403  0554                     u1765:	
  6404  0554  36B2               	lsrf	___ftadd@f1+2,f
  6405  0555  0CB1               	rrf	___ftadd@f1+1,f
  6406  0556  0CB0               	rrf	___ftadd@f1,f
  6407  0557  0B89               	decfsz	9,f
  6408  0558  2D54               	goto	u1765
  6409  0559  3001               	movlw	1
  6410  055A  00B6               	movwf	??___ftadd
  6411  055B  0836               	movf	??___ftadd,w
  6412  055C  07BC               	addwf	___ftadd@exp1,f
  6413  055D                     l1709:	
  6414  055D  083C               	movf	___ftadd@exp1,w
  6415  055E  063B               	xorwf	___ftadd@exp2,w
  6416  055F  1903               	btfsc	3,2
  6417  0560  2D87               	goto	l553
  6418  0561  2D53               	goto	l1707
  6419  0562                     l1711:	
  6420  0562  083C               	movf	___ftadd@exp1,w
  6421  0563  023B               	subwf	___ftadd@exp2,w
  6422  0564  1803               	skipnc
  6423  0565  2D87               	goto	l553
  6424  0566                     l1713:	
  6425  0566  3001               	movlw	1
  6426  0567                     u1795:	
  6427  0567  35B0               	lslf	___ftadd@f1,f
  6428  0568  0DB1               	rlf	___ftadd@f1+1,f
  6429  0569  0DB2               	rlf	___ftadd@f1+2,f
  6430  056A  0B89               	decfsz	9,f
  6431  056B  2D67               	goto	u1795
  6432  056C  3001               	movlw	1
  6433  056D  02BC               	subwf	___ftadd@exp1,f
  6434  056E  083B               	movf	___ftadd@exp2,w
  6435  056F  063C               	xorwf	___ftadd@exp1,w
  6436  0570  1903               	skipnz
  6437  0571  2D83               	goto	l1721
  6438  0572  3001               	movlw	1
  6439  0573  02BA               	subwf	___ftadd@sign,f
  6440  0574  083A               	movf	___ftadd@sign,w
  6441  0575  3907               	andlw	7
  6442  0576  1903               	btfsc	3,2
  6443  0577  2D83               	goto	l1721
  6444  0578  2D66               	goto	l1713
  6445  0579                     l1719:	
  6446  0579  3001               	movlw	1
  6447  057A                     u1825:	
  6448  057A  36B5               	lsrf	___ftadd@f2+2,f
  6449  057B  0CB4               	rrf	___ftadd@f2+1,f
  6450  057C  0CB3               	rrf	___ftadd@f2,f
  6451  057D  0B89               	decfsz	9,f
  6452  057E  2D7A               	goto	u1825
  6453  057F  3001               	movlw	1
  6454  0580  00B6               	movwf	??___ftadd
  6455  0581  0836               	movf	??___ftadd,w
  6456  0582  07BB               	addwf	___ftadd@exp2,f
  6457  0583                     l1721:	
  6458  0583  083C               	movf	___ftadd@exp1,w
  6459  0584  063B               	xorwf	___ftadd@exp2,w
  6460  0585  1D03               	skipz
  6461  0586  2D79               	goto	l1719
  6462  0587                     l553:	
  6463  0587  1FBA               	btfss	___ftadd@sign,7
  6464  0588  2D99               	goto	l1725
  6465  0589  30FF               	movlw	255
  6466  058A  06B0               	xorwf	___ftadd@f1,f
  6467  058B  30FF               	movlw	255
  6468  058C  06B1               	xorwf	___ftadd@f1+1,f
  6469  058D  30FF               	movlw	255
  6470  058E  06B2               	xorwf	___ftadd@f1+2,f
  6471  058F  3001               	movlw	1
  6472  0590  07B0               	addwf	___ftadd@f1,f
  6473  0591  3000               	movlw	0
  6474  0592  1803               	skipnc
  6475  0593  3001               	movlw	1
  6476  0594  07B1               	addwf	___ftadd@f1+1,f
  6477  0595  3000               	movlw	0
  6478  0596  1803               	skipnc
  6479  0597  3001               	movlw	1
  6480  0598  07B2               	addwf	___ftadd@f1+2,f
  6481  0599                     l1725:	
  6482  0599  1F3A               	btfss	___ftadd@sign,6
  6483  059A  2DAB               	goto	l1729
  6484  059B  30FF               	movlw	255
  6485  059C  06B3               	xorwf	___ftadd@f2,f
  6486  059D  30FF               	movlw	255
  6487  059E  06B4               	xorwf	___ftadd@f2+1,f
  6488  059F  30FF               	movlw	255
  6489  05A0  06B5               	xorwf	___ftadd@f2+2,f
  6490  05A1  3001               	movlw	1
  6491  05A2  07B3               	addwf	___ftadd@f2,f
  6492  05A3  3000               	movlw	0
  6493  05A4  1803               	skipnc
  6494  05A5  3001               	movlw	1
  6495  05A6  07B4               	addwf	___ftadd@f2+1,f
  6496  05A7  3000               	movlw	0
  6497  05A8  1803               	skipnc
  6498  05A9  3001               	movlw	1
  6499  05AA  07B5               	addwf	___ftadd@f2+2,f
  6500  05AB                     l1729:	
  6501  05AB  01BA               	clrf	___ftadd@sign
  6502  05AC  0830               	movf	___ftadd@f1,w
  6503  05AD  07B3               	addwf	___ftadd@f2,f
  6504  05AE  0831               	movf	___ftadd@f1+1,w
  6505  05AF  3DB4               	addwfc	___ftadd@f2+1,f
  6506  05B0  0832               	movf	___ftadd@f1+2,w
  6507  05B1  3DB5               	addwfc	___ftadd@f2+2,f
  6508  05B2  1FB5               	btfss	___ftadd@f2+2,7
  6509  05B3  2DC6               	goto	l1739
  6510  05B4  30FF               	movlw	255
  6511  05B5  06B3               	xorwf	___ftadd@f2,f
  6512  05B6  30FF               	movlw	255
  6513  05B7  06B4               	xorwf	___ftadd@f2+1,f
  6514  05B8  30FF               	movlw	255
  6515  05B9  06B5               	xorwf	___ftadd@f2+2,f
  6516  05BA  3001               	movlw	1
  6517  05BB  07B3               	addwf	___ftadd@f2,f
  6518  05BC  3000               	movlw	0
  6519  05BD  1803               	skipnc
  6520  05BE  3001               	movlw	1
  6521  05BF  07B4               	addwf	___ftadd@f2+1,f
  6522  05C0  3000               	movlw	0
  6523  05C1  1803               	skipnc
  6524  05C2  3001               	movlw	1
  6525  05C3  07B5               	addwf	___ftadd@f2+2,f
  6526  05C4  01BA               	clrf	___ftadd@sign
  6527  05C5  0ABA               	incf	___ftadd@sign,f
  6528  05C6                     l1739:	
  6529  05C6  0833               	movf	___ftadd@f2,w
  6530  05C7  00F0               	movwf	___ftpack@arg
  6531  05C8  0834               	movf	___ftadd@f2+1,w
  6532  05C9  00F1               	movwf	___ftpack@arg+1
  6533  05CA  0835               	movf	___ftadd@f2+2,w
  6534  05CB  00F2               	movwf	___ftpack@arg+2
  6535  05CC  083C               	movf	___ftadd@exp1,w
  6536  05CD  00B6               	movwf	??___ftadd
  6537  05CE  0836               	movf	??___ftadd,w
  6538  05CF  00F3               	movwf	___ftpack@exp
  6539  05D0  083A               	movf	___ftadd@sign,w
  6540  05D1  00B7               	movwf	??___ftadd+1
  6541  05D2  0837               	movf	??___ftadd+1,w
  6542  05D3  00F4               	movwf	___ftpack@sign
  6543  05D4  318F  279C         	fcall	___ftpack
  6544  05D6  0870               	movf	?___ftpack,w
  6545  05D7  0020               	movlb	0	; select bank0
  6546  05D8  00B0               	movwf	?___ftadd
  6547  05D9  0871               	movf	?___ftpack+1,w
  6548  05DA  00B1               	movwf	?___ftadd+1
  6549  05DB  0872               	movf	?___ftpack+2,w
  6550  05DC  00B2               	movwf	?___ftadd+2
  6551  05DD  0008               	return
  6552  05DE                     __end_of___ftadd:	
  6553                           
  6554                           	psect	text12
  6555  0213                     __ptext12:	
  6556 ;; *************** function ___ftdiv *****************
  6557 ;; Defined at:
  6558 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  f2              3    0[BANK0 ] float 
  6561 ;;  f1              3    3[BANK0 ] float 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  f3              3   11[BANK0 ] float 
  6564 ;;  sign            1   15[BANK0 ] unsigned char 
  6565 ;;  exp             1   14[BANK0 ] unsigned char 
  6566 ;;  cntr            1   10[BANK0 ] unsigned char 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  3    0[BANK0 ] float 
  6569 ;; Registers used:
  6570 ;;		wreg, status,2, status,0, pclath, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6576 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6577 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6578 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;Total ram usage:       16 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    1
  6583 ;; This function calls:
  6584 ;;		___ftpack
  6585 ;; This function is called by:
  6586 ;;		_main
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           
  6591                           ;psect for function ___ftdiv
  6592  0213                     ___ftdiv:	
  6593                           
  6594                           ;incstack = 0
  6595                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6596  0213  0020               	movlb	0	; select bank0
  6597  0214  0823               	movf	___ftdiv@f1,w
  6598  0215  00A6               	movwf	??___ftdiv
  6599  0216  0824               	movf	___ftdiv@f1+1,w
  6600  0217  00A7               	movwf	??___ftdiv+1
  6601  0218  0825               	movf	___ftdiv@f1+2,w
  6602  0219  00A8               	movwf	??___ftdiv+2
  6603  021A  1003               	clrc
  6604  021B  0D27               	rlf	??___ftdiv+1,w
  6605  021C  0D28               	rlf	??___ftdiv+2,w
  6606  021D  00A9               	movwf	??___ftdiv+3
  6607  021E  0829               	movf	??___ftdiv+3,w
  6608  021F  00AE               	movwf	___ftdiv@exp
  6609  0220  082E               	movf	___ftdiv@exp,w
  6610  0221  1D03               	btfss	3,2
  6611  0222  2A2A               	goto	l2251
  6612  0223  3000               	movlw	0
  6613  0224  00A0               	movwf	?___ftdiv
  6614  0225  3000               	movlw	0
  6615  0226  00A1               	movwf	?___ftdiv+1
  6616  0227  3000               	movlw	0
  6617  0228  00A2               	movwf	?___ftdiv+2
  6618  0229  0008               	return
  6619  022A                     l2251:	
  6620  022A  0820               	movf	___ftdiv@f2,w
  6621  022B  00A6               	movwf	??___ftdiv
  6622  022C  0821               	movf	___ftdiv@f2+1,w
  6623  022D  00A7               	movwf	??___ftdiv+1
  6624  022E  0822               	movf	___ftdiv@f2+2,w
  6625  022F  00A8               	movwf	??___ftdiv+2
  6626  0230  1003               	clrc
  6627  0231  0D27               	rlf	??___ftdiv+1,w
  6628  0232  0D28               	rlf	??___ftdiv+2,w
  6629  0233  00A9               	movwf	??___ftdiv+3
  6630  0234  0829               	movf	??___ftdiv+3,w
  6631  0235  00AF               	movwf	___ftdiv@sign
  6632  0236  082F               	movf	___ftdiv@sign,w
  6633  0237  1D03               	btfss	3,2
  6634  0238  2A40               	goto	l2257
  6635  0239  3000               	movlw	0
  6636  023A  00A0               	movwf	?___ftdiv
  6637  023B  3000               	movlw	0
  6638  023C  00A1               	movwf	?___ftdiv+1
  6639  023D  3000               	movlw	0
  6640  023E  00A2               	movwf	?___ftdiv+2
  6641  023F  0008               	return
  6642  0240                     l2257:	
  6643  0240  3000               	movlw	0
  6644  0241  00AB               	movwf	___ftdiv@f3
  6645  0242  3000               	movlw	0
  6646  0243  00AC               	movwf	___ftdiv@f3+1
  6647  0244  3000               	movlw	0
  6648  0245  00AD               	movwf	___ftdiv@f3+2
  6649  0246  3089               	movlw	137
  6650  0247  072F               	addwf	___ftdiv@sign,w
  6651  0248  00A6               	movwf	??___ftdiv
  6652  0249  0826               	movf	??___ftdiv,w
  6653  024A  02AE               	subwf	___ftdiv@exp,f
  6654  024B  0823               	movf	___ftdiv@f1,w
  6655  024C  00A6               	movwf	??___ftdiv
  6656  024D  0824               	movf	___ftdiv@f1+1,w
  6657  024E  00A7               	movwf	??___ftdiv+1
  6658  024F  0825               	movf	___ftdiv@f1+2,w
  6659  0250  00A8               	movwf	??___ftdiv+2
  6660  0251  3010               	movlw	16
  6661  0252                     u2625:	
  6662  0252  36A8               	lsrf	??___ftdiv+2,f
  6663  0253  0CA7               	rrf	??___ftdiv+1,f
  6664  0254  0CA6               	rrf	??___ftdiv,f
  6665  0255  0B89               	decfsz	9,f
  6666  0256  2A52               	goto	u2625
  6667  0257  0826               	movf	??___ftdiv,w
  6668  0258  00A9               	movwf	??___ftdiv+3
  6669  0259  0829               	movf	??___ftdiv+3,w
  6670  025A  00AF               	movwf	___ftdiv@sign
  6671  025B  0820               	movf	___ftdiv@f2,w
  6672  025C  00A6               	movwf	??___ftdiv
  6673  025D  0821               	movf	___ftdiv@f2+1,w
  6674  025E  00A7               	movwf	??___ftdiv+1
  6675  025F  0822               	movf	___ftdiv@f2+2,w
  6676  0260  00A8               	movwf	??___ftdiv+2
  6677  0261  3010               	movlw	16
  6678  0262                     u2635:	
  6679  0262  36A8               	lsrf	??___ftdiv+2,f
  6680  0263  0CA7               	rrf	??___ftdiv+1,f
  6681  0264  0CA6               	rrf	??___ftdiv,f
  6682  0265  0B89               	decfsz	9,f
  6683  0266  2A62               	goto	u2635
  6684  0267  0826               	movf	??___ftdiv,w
  6685  0268  00A9               	movwf	??___ftdiv+3
  6686  0269  0829               	movf	??___ftdiv+3,w
  6687  026A  06AF               	xorwf	___ftdiv@sign,f
  6688  026B  3080               	movlw	128
  6689  026C  00A6               	movwf	??___ftdiv
  6690  026D  0826               	movf	??___ftdiv,w
  6691  026E  05AF               	andwf	___ftdiv@sign,f
  6692  026F  17A4               	bsf	___ftdiv@f1+1,7
  6693  0270  30FF               	movlw	255
  6694  0271  05A3               	andwf	___ftdiv@f1,f
  6695  0272  30FF               	movlw	255
  6696  0273  05A4               	andwf	___ftdiv@f1+1,f
  6697  0274  3000               	movlw	0
  6698  0275  05A5               	andwf	___ftdiv@f1+2,f
  6699  0276  17A1               	bsf	___ftdiv@f2+1,7
  6700  0277  30FF               	movlw	255
  6701  0278  05A0               	andwf	___ftdiv@f2,f
  6702  0279  30FF               	movlw	255
  6703  027A  05A1               	andwf	___ftdiv@f2+1,f
  6704  027B  3000               	movlw	0
  6705  027C  05A2               	andwf	___ftdiv@f2+2,f
  6706  027D  3018               	movlw	24
  6707  027E  00A6               	movwf	??___ftdiv
  6708  027F  0826               	movf	??___ftdiv,w
  6709  0280  00AA               	movwf	___ftdiv@cntr
  6710  0281                     l2271:	
  6711  0281  3001               	movlw	1
  6712  0282                     u2645:	
  6713  0282  35AB               	lslf	___ftdiv@f3,f
  6714  0283  0DAC               	rlf	___ftdiv@f3+1,f
  6715  0284  0DAD               	rlf	___ftdiv@f3+2,f
  6716  0285  0B89               	decfsz	9,f
  6717  0286  2A82               	goto	u2645
  6718  0287  0822               	movf	___ftdiv@f2+2,w
  6719  0288  0225               	subwf	___ftdiv@f1+2,w
  6720  0289  1D03               	skipz
  6721  028A  2A91               	goto	u2655
  6722  028B  0821               	movf	___ftdiv@f2+1,w
  6723  028C  0224               	subwf	___ftdiv@f1+1,w
  6724  028D  1D03               	skipz
  6725  028E  2A91               	goto	u2655
  6726  028F  0820               	movf	___ftdiv@f2,w
  6727  0290  0223               	subwf	___ftdiv@f1,w
  6728  0291                     u2655:	
  6729  0291  1C03               	skipc
  6730  0292  2A9A               	goto	l2279
  6731  0293  0820               	movf	___ftdiv@f2,w
  6732  0294  02A3               	subwf	___ftdiv@f1,f
  6733  0295  0821               	movf	___ftdiv@f2+1,w
  6734  0296  3BA4               	subwfb	___ftdiv@f1+1,f
  6735  0297  0822               	movf	___ftdiv@f2+2,w
  6736  0298  3BA5               	subwfb	___ftdiv@f1+2,f
  6737  0299  142B               	bsf	___ftdiv@f3,0
  6738  029A                     l2279:	
  6739  029A  3001               	movlw	1
  6740  029B                     u2665:	
  6741  029B  35A3               	lslf	___ftdiv@f1,f
  6742  029C  0DA4               	rlf	___ftdiv@f1+1,f
  6743  029D  0DA5               	rlf	___ftdiv@f1+2,f
  6744  029E  0B89               	decfsz	9,f
  6745  029F  2A9B               	goto	u2665
  6746  02A0  3001               	movlw	1
  6747  02A1  02AA               	subwf	___ftdiv@cntr,f
  6748  02A2  1D03               	btfss	3,2
  6749  02A3  2A81               	goto	l2271
  6750  02A4  082B               	movf	___ftdiv@f3,w
  6751  02A5  00F0               	movwf	___ftpack@arg
  6752  02A6  082C               	movf	___ftdiv@f3+1,w
  6753  02A7  00F1               	movwf	___ftpack@arg+1
  6754  02A8  082D               	movf	___ftdiv@f3+2,w
  6755  02A9  00F2               	movwf	___ftpack@arg+2
  6756  02AA  082E               	movf	___ftdiv@exp,w
  6757  02AB  00A6               	movwf	??___ftdiv
  6758  02AC  0826               	movf	??___ftdiv,w
  6759  02AD  00F3               	movwf	___ftpack@exp
  6760  02AE  082F               	movf	___ftdiv@sign,w
  6761  02AF  00A7               	movwf	??___ftdiv+1
  6762  02B0  0827               	movf	??___ftdiv+1,w
  6763  02B1  00F4               	movwf	___ftpack@sign
  6764  02B2  318F  279C         	fcall	___ftpack
  6765  02B4  0870               	movf	?___ftpack,w
  6766  02B5  0020               	movlb	0	; select bank0
  6767  02B6  00A0               	movwf	?___ftdiv
  6768  02B7  0871               	movf	?___ftpack+1,w
  6769  02B8  00A1               	movwf	?___ftdiv+1
  6770  02B9  0872               	movf	?___ftpack+2,w
  6771  02BA  00A2               	movwf	?___ftdiv+2
  6772  02BB  0008               	return
  6773  02BC                     __end_of___ftdiv:	
  6774                           
  6775                           	psect	text13
  6776  0F9C                     __ptext13:	
  6777 ;; *************** function ___ftpack *****************
  6778 ;; Defined at:
  6779 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  arg             3    0[COMMON] unsigned um
  6782 ;;  exp             1    3[COMMON] unsigned char 
  6783 ;;  sign            1    4[COMMON] unsigned char 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;		None
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  3    0[COMMON] float 
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6795 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;Total ram usage:        8 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		___awtoft
  6805 ;;		___ftadd
  6806 ;;		___ftdiv
  6807 ;;		___ftmul
  6808 ;;		___lwtoft
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           
  6813                           ;psect for function ___ftpack
  6814  0F9C                     ___ftpack:	
  6815                           
  6816                           ;incstack = 0
  6817                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6818  0F9C  0873               	movf	___ftpack@exp,w
  6819  0F9D  1903               	btfsc	3,2
  6820  0F9E  2FA4               	goto	l1615
  6821  0F9F  0872               	movf	___ftpack@arg+2,w
  6822  0FA0  0471               	iorwf	___ftpack@arg+1,w
  6823  0FA1  0470               	iorwf	___ftpack@arg,w
  6824  0FA2  1D03               	skipz
  6825  0FA3  2FB5               	goto	l1621
  6826  0FA4                     l1615:	
  6827  0FA4  3000               	movlw	0
  6828  0FA5  00F0               	movwf	?___ftpack
  6829  0FA6  3000               	movlw	0
  6830  0FA7  00F1               	movwf	?___ftpack+1
  6831  0FA8  3000               	movlw	0
  6832  0FA9  00F2               	movwf	?___ftpack+2
  6833  0FAA  0008               	return
  6834  0FAB                     l1619:	
  6835  0FAB  3001               	movlw	1
  6836  0FAC  00F5               	movwf	??___ftpack
  6837  0FAD  0875               	movf	??___ftpack,w
  6838  0FAE  07F3               	addwf	___ftpack@exp,f
  6839  0FAF  3001               	movlw	1
  6840  0FB0                     u1465:	
  6841  0FB0  36F2               	lsrf	___ftpack@arg+2,f
  6842  0FB1  0CF1               	rrf	___ftpack@arg+1,f
  6843  0FB2  0CF0               	rrf	___ftpack@arg,f
  6844  0FB3  0B89               	decfsz	9,f
  6845  0FB4  2FB0               	goto	u1465
  6846  0FB5                     l1621:	
  6847  0FB5  30FE               	movlw	254
  6848  0FB6  0572               	andwf	___ftpack@arg+2,w
  6849  0FB7  1903               	btfsc	3,2
  6850  0FB8  2FCE               	goto	l522
  6851  0FB9  2FAB               	goto	l1619
  6852  0FBA                     l1623:	
  6853  0FBA  3001               	movlw	1
  6854  0FBB  00F5               	movwf	??___ftpack
  6855  0FBC  0875               	movf	??___ftpack,w
  6856  0FBD  07F3               	addwf	___ftpack@exp,f
  6857  0FBE  3001               	movlw	1
  6858  0FBF  07F0               	addwf	___ftpack@arg,f
  6859  0FC0  3000               	movlw	0
  6860  0FC1  1803               	skipnc
  6861  0FC2  3001               	movlw	1
  6862  0FC3  07F1               	addwf	___ftpack@arg+1,f
  6863  0FC4  3000               	movlw	0
  6864  0FC5  1803               	skipnc
  6865  0FC6  3001               	movlw	1
  6866  0FC7  07F2               	addwf	___ftpack@arg+2,f
  6867  0FC8  3001               	movlw	1
  6868  0FC9                     u1485:	
  6869  0FC9  36F2               	lsrf	___ftpack@arg+2,f
  6870  0FCA  0CF1               	rrf	___ftpack@arg+1,f
  6871  0FCB  0CF0               	rrf	___ftpack@arg,f
  6872  0FCC  0B89               	decfsz	9,f
  6873  0FCD  2FC9               	goto	u1485
  6874  0FCE                     l522:	
  6875  0FCE  30FF               	movlw	255
  6876  0FCF  0572               	andwf	___ftpack@arg+2,w
  6877  0FD0  1903               	btfsc	3,2
  6878  0FD1  2FDB               	goto	l1631
  6879  0FD2  2FBA               	goto	l1623
  6880  0FD3                     l1629:	
  6881  0FD3  3001               	movlw	1
  6882  0FD4  02F3               	subwf	___ftpack@exp,f
  6883  0FD5  3001               	movlw	1
  6884  0FD6                     u1505:	
  6885  0FD6  35F0               	lslf	___ftpack@arg,f
  6886  0FD7  0DF1               	rlf	___ftpack@arg+1,f
  6887  0FD8  0DF2               	rlf	___ftpack@arg+2,f
  6888  0FD9  0B89               	decfsz	9,f
  6889  0FDA  2FD6               	goto	u1505
  6890  0FDB                     l1631:	
  6891  0FDB  1BF1               	btfsc	___ftpack@arg+1,7
  6892  0FDC  2FE1               	goto	l529
  6893  0FDD  3002               	movlw	2
  6894  0FDE  0273               	subwf	___ftpack@exp,w
  6895  0FDF  1803               	skipnc
  6896  0FE0  2FD3               	goto	l1629
  6897  0FE1                     l529:	
  6898  0FE1  1873               	btfsc	___ftpack@exp,0
  6899  0FE2  2FE9               	goto	l530
  6900  0FE3  30FF               	movlw	255
  6901  0FE4  05F0               	andwf	___ftpack@arg,f
  6902  0FE5  307F               	movlw	127
  6903  0FE6  05F1               	andwf	___ftpack@arg+1,f
  6904  0FE7  30FF               	movlw	255
  6905  0FE8  05F2               	andwf	___ftpack@arg+2,f
  6906  0FE9                     l530:	
  6907  0FE9  1003               	clrc
  6908  0FEA  0CF3               	rrf	___ftpack@exp,f
  6909  0FEB  0873               	movf	___ftpack@exp,w
  6910  0FEC  00F5               	movwf	??___ftpack
  6911  0FED  01F6               	clrf	??___ftpack+1
  6912  0FEE  01F7               	clrf	??___ftpack+2
  6913  0FEF  3010               	movlw	16
  6914  0FF0                     u1545:	
  6915  0FF0  35F5               	lslf	??___ftpack,f
  6916  0FF1  0DF6               	rlf	??___ftpack+1,f
  6917  0FF2  0DF7               	rlf	??___ftpack+2,f
  6918  0FF3  0B89               	decfsz	9,f
  6919  0FF4  2FF0               	goto	u1545
  6920  0FF5  0875               	movf	??___ftpack,w
  6921  0FF6  04F0               	iorwf	___ftpack@arg,f
  6922  0FF7  0876               	movf	??___ftpack+1,w
  6923  0FF8  04F1               	iorwf	___ftpack@arg+1,f
  6924  0FF9  0877               	movf	??___ftpack+2,w
  6925  0FFA  04F2               	iorwf	___ftpack@arg+2,f
  6926  0FFB  0874               	movf	___ftpack@sign,w
  6927  0FFC  1903               	btfsc	3,2
  6928  0FFD  0008               	return
  6929  0FFE  17F2               	bsf	___ftpack@arg+2,7
  6930  0FFF  0008               	return
  6931  1000                     __end_of___ftpack:	
  6932                           
  6933                           	psect	text14
  6934  010B                     __ptext14:	
  6935 ;; *************** function ___aldiv *****************
  6936 ;; Defined at:
  6937 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  divisor         4    0[COMMON] long 
  6940 ;;  dividend        4    4[COMMON] long 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  quotient        4    2[BANK0 ] long 
  6943 ;;  sign            1    1[BANK0 ] unsigned char 
  6944 ;;  counter         1    0[BANK0 ] unsigned char 
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  4    0[COMMON] long 
  6947 ;; Registers used:
  6948 ;;		wreg, status,2, status,0
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6954 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6955 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6956 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6957 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6958 ;;Total ram usage:       15 bytes
  6959 ;; Hardware stack levels used:    1
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_main
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           
  6968                           ;psect for function ___aldiv
  6969  010B                     ___aldiv:	
  6970                           
  6971                           ;incstack = 0
  6972                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6973  010B  0020               	movlb	0	; select bank0
  6974  010C  01A1               	clrf	___aldiv@sign
  6975  010D  1FF3               	btfss	___aldiv@divisor+3,7
  6976  010E  291C               	goto	l416
  6977  010F  09F0               	comf	___aldiv@divisor,f
  6978  0110  09F1               	comf	___aldiv@divisor+1,f
  6979  0111  09F2               	comf	___aldiv@divisor+2,f
  6980  0112  09F3               	comf	___aldiv@divisor+3,f
  6981  0113  0AF0               	incf	___aldiv@divisor,f
  6982  0114  1903               	skipnz
  6983  0115  0AF1               	incf	___aldiv@divisor+1,f
  6984  0116  1903               	skipnz
  6985  0117  0AF2               	incf	___aldiv@divisor+2,f
  6986  0118  1903               	skipnz
  6987  0119  0AF3               	incf	___aldiv@divisor+3,f
  6988  011A  01A1               	clrf	___aldiv@sign
  6989  011B  0AA1               	incf	___aldiv@sign,f
  6990  011C                     l416:	
  6991  011C  1FF7               	btfss	___aldiv@dividend+3,7
  6992  011D  292D               	goto	l2215
  6993  011E  09F4               	comf	___aldiv@dividend,f
  6994  011F  09F5               	comf	___aldiv@dividend+1,f
  6995  0120  09F6               	comf	___aldiv@dividend+2,f
  6996  0121  09F7               	comf	___aldiv@dividend+3,f
  6997  0122  0AF4               	incf	___aldiv@dividend,f
  6998  0123  1903               	skipnz
  6999  0124  0AF5               	incf	___aldiv@dividend+1,f
  7000  0125  1903               	skipnz
  7001  0126  0AF6               	incf	___aldiv@dividend+2,f
  7002  0127  1903               	skipnz
  7003  0128  0AF7               	incf	___aldiv@dividend+3,f
  7004  0129  3001               	movlw	1
  7005  012A  00F8               	movwf	??___aldiv
  7006  012B  0878               	movf	??___aldiv,w
  7007  012C  06A1               	xorwf	___aldiv@sign,f
  7008  012D                     l2215:	
  7009  012D  3000               	movlw	0
  7010  012E  00A5               	movwf	___aldiv@quotient+3
  7011  012F  3000               	movlw	0
  7012  0130  00A4               	movwf	___aldiv@quotient+2
  7013  0131  3000               	movlw	0
  7014  0132  00A3               	movwf	___aldiv@quotient+1
  7015  0133  3000               	movlw	0
  7016  0134  00A2               	movwf	___aldiv@quotient
  7017  0135  0873               	movf	___aldiv@divisor+3,w
  7018  0136  0472               	iorwf	___aldiv@divisor+2,w
  7019  0137  0471               	iorwf	___aldiv@divisor+1,w
  7020  0138  0470               	iorwf	___aldiv@divisor,w
  7021  0139  1903               	skipnz
  7022  013A  2976               	goto	l2237
  7023  013B  01A0               	clrf	___aldiv@counter
  7024  013C  0AA0               	incf	___aldiv@counter,f
  7025  013D                     l2223:	
  7026  013D  1BF3               	btfsc	___aldiv@divisor+3,7
  7027  013E  294B               	goto	l2225
  7028  013F  3001               	movlw	1
  7029  0140                     u2535:	
  7030  0140  35F0               	lslf	___aldiv@divisor,f
  7031  0141  0DF1               	rlf	___aldiv@divisor+1,f
  7032  0142  0DF2               	rlf	___aldiv@divisor+2,f
  7033  0143  0DF3               	rlf	___aldiv@divisor+3,f
  7034  0144  0B89               	decfsz	9,f
  7035  0145  2940               	goto	u2535
  7036  0146  3001               	movlw	1
  7037  0147  00F8               	movwf	??___aldiv
  7038  0148  0878               	movf	??___aldiv,w
  7039  0149  07A0               	addwf	___aldiv@counter,f
  7040  014A  293D               	goto	l2223
  7041  014B                     l2225:	
  7042  014B  3001               	movlw	1
  7043  014C                     u2555:	
  7044  014C  35A2               	lslf	___aldiv@quotient,f
  7045  014D  0DA3               	rlf	___aldiv@quotient+1,f
  7046  014E  0DA4               	rlf	___aldiv@quotient+2,f
  7047  014F  0DA5               	rlf	___aldiv@quotient+3,f
  7048  0150  0B89               	decfsz	9,f
  7049  0151  294C               	goto	u2555
  7050  0152  0873               	movf	___aldiv@divisor+3,w
  7051  0153  0277               	subwf	___aldiv@dividend+3,w
  7052  0154  1D03               	skipz
  7053  0155  2960               	goto	u2565
  7054  0156  0872               	movf	___aldiv@divisor+2,w
  7055  0157  0276               	subwf	___aldiv@dividend+2,w
  7056  0158  1D03               	skipz
  7057  0159  2960               	goto	u2565
  7058  015A  0871               	movf	___aldiv@divisor+1,w
  7059  015B  0275               	subwf	___aldiv@dividend+1,w
  7060  015C  1D03               	skipz
  7061  015D  2960               	goto	u2565
  7062  015E  0870               	movf	___aldiv@divisor,w
  7063  015F  0274               	subwf	___aldiv@dividend,w
  7064  0160                     u2565:	
  7065  0160  1C03               	skipc
  7066  0161  296B               	goto	l2233
  7067  0162  0870               	movf	___aldiv@divisor,w
  7068  0163  02F4               	subwf	___aldiv@dividend,f
  7069  0164  0871               	movf	___aldiv@divisor+1,w
  7070  0165  3BF5               	subwfb	___aldiv@dividend+1,f
  7071  0166  0872               	movf	___aldiv@divisor+2,w
  7072  0167  3BF6               	subwfb	___aldiv@dividend+2,f
  7073  0168  0873               	movf	___aldiv@divisor+3,w
  7074  0169  3BF7               	subwfb	___aldiv@dividend+3,f
  7075  016A  1422               	bsf	___aldiv@quotient,0
  7076  016B                     l2233:	
  7077  016B  3001               	movlw	1
  7078  016C                     u2575:	
  7079  016C  36F3               	lsrf	___aldiv@divisor+3,f
  7080  016D  0CF2               	rrf	___aldiv@divisor+2,f
  7081  016E  0CF1               	rrf	___aldiv@divisor+1,f
  7082  016F  0CF0               	rrf	___aldiv@divisor,f
  7083  0170  0B89               	decfsz	9,f
  7084  0171  296C               	goto	u2575
  7085  0172  3001               	movlw	1
  7086  0173  02A0               	subwf	___aldiv@counter,f
  7087  0174  1D03               	btfss	3,2
  7088  0175  294B               	goto	l2225
  7089  0176                     l2237:	
  7090  0176  0821               	movf	___aldiv@sign,w
  7091  0177  1903               	btfsc	3,2
  7092  0178  2984               	goto	l2241
  7093  0179  09A2               	comf	___aldiv@quotient,f
  7094  017A  09A3               	comf	___aldiv@quotient+1,f
  7095  017B  09A4               	comf	___aldiv@quotient+2,f
  7096  017C  09A5               	comf	___aldiv@quotient+3,f
  7097  017D  0AA2               	incf	___aldiv@quotient,f
  7098  017E  1903               	skipnz
  7099  017F  0AA3               	incf	___aldiv@quotient+1,f
  7100  0180  1903               	skipnz
  7101  0181  0AA4               	incf	___aldiv@quotient+2,f
  7102  0182  1903               	skipnz
  7103  0183  0AA5               	incf	___aldiv@quotient+3,f
  7104  0184                     l2241:	
  7105  0184  0825               	movf	___aldiv@quotient+3,w
  7106  0185  00F3               	movwf	?___aldiv+3
  7107  0186  0824               	movf	___aldiv@quotient+2,w
  7108  0187  00F2               	movwf	?___aldiv+2
  7109  0188  0823               	movf	___aldiv@quotient+1,w
  7110  0189  00F1               	movwf	?___aldiv+1
  7111  018A  0822               	movf	___aldiv@quotient,w
  7112  018B  00F0               	movwf	?___aldiv
  7113  018C  0008               	return
  7114  018D                     __end_of___aldiv:	
  7115                           
  7116                           	psect	text15
  7117  0CC3                     __ptext15:	
  7118 ;; *************** function _SYSTEM_Initialize *****************
  7119 ;; Defined at:
  7120 ;;		line 68 in file "../PWMTest.X/system.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;		None
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;		None
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  1    wreg      void 
  7127 ;; Registers used:
  7128 ;;		wreg, status,2, status,0, pclath, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7138 ;;Total ram usage:        0 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:    1
  7141 ;; This function calls:
  7142 ;;		_ADCC_Initialize
  7143 ;;		_OSCILLATOR_Initialize
  7144 ;;		_PIN_MANAGER_Initialize
  7145 ;;		_PWM6_Initialize
  7146 ;;		_TMR2_Initialize
  7147 ;; This function is called by:
  7148 ;;		_main
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           
  7153                           ;psect for function _SYSTEM_Initialize
  7154  0CC3                     _SYSTEM_Initialize:	
  7155                           
  7156                           ;system.c: 71: PIN_MANAGER_Initialize();
  7157                           
  7158                           ;incstack = 0
  7159                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7160  0CC3  318D  25FF  318C   	fcall	_PIN_MANAGER_Initialize
  7161                           
  7162                           ;system.c: 72: OSCILLATOR_Initialize();
  7163  0CC6  318C  249D  318C   	fcall	_OSCILLATOR_Initialize
  7164                           
  7165                           ;system.c: 73: FVRCON = 0x00;
  7166  0CC9  0032               	movlb	18	; select bank18
  7167  0CCA  018C               	clrf	12	;volatile
  7168                           
  7169                           ;system.c: 74: ADCC_Initialize();
  7170  0CCB  318D  2527  318C   	fcall	_ADCC_Initialize
  7171                           
  7172                           ;system.c: 75: PWM6_Initialize();
  7173  0CCE  3180  2004  318C   	fcall	_PWM6_Initialize
  7174                           
  7175                           ;system.c: 76: TMR2_Initialize();
  7176  0CD1  318C  24B4         	fcall	_TMR2_Initialize
  7177  0CD3  0008               	return
  7178  0CD4                     __end_of_SYSTEM_Initialize:	
  7179                           
  7180                           	psect	text16
  7181  0CB4                     __ptext16:	
  7182 ;; *************** function _TMR2_Initialize *****************
  7183 ;; Defined at:
  7184 ;;		line 4 in file "../PWMTest.X/tmr2.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;		None
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      void 
  7191 ;; Registers used:
  7192 ;;		wreg, status,2
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7202 ;;Total ram usage:        0 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; This function calls:
  7205 ;;		Nothing
  7206 ;; This function is called by:
  7207 ;;		_SYSTEM_Initialize
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           
  7212                           ;psect for function _TMR2_Initialize
  7213  0CB4                     _TMR2_Initialize:	
  7214                           
  7215                           ;tmr2.c: 6: T2CON = 0x02;
  7216                           
  7217                           ;incstack = 0
  7218                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  7219  0CB4  3002               	movlw	2
  7220  0CB5  0025               	movlb	5	; select bank5
  7221  0CB6  008E               	movwf	14	;volatile
  7222                           
  7223                           ;tmr2.c: 8: T2CLKCON = 0x01;
  7224  0CB7  3001               	movlw	1
  7225  0CB8  0090               	movwf	16	;volatile
  7226                           
  7227                           ;tmr2.c: 10: T2HLT = 0x00;
  7228  0CB9  018F               	clrf	15	;volatile
  7229                           
  7230                           ;tmr2.c: 12: T2RST = 0x00;
  7231  0CBA  0191               	clrf	17	;volatile
  7232                           
  7233                           ;tmr2.c: 14: T2PR = 0xFF;
  7234  0CBB  30FF               	movlw	255
  7235  0CBC  008D               	movwf	13	;volatile
  7236                           
  7237                           ;tmr2.c: 16: T2TMR = 0x00;
  7238  0CBD  018C               	clrf	12	;volatile
  7239                           
  7240                           ;tmr2.c: 18: PIR4bits.TMR2IF = 0;
  7241  0CBE  002E               	movlb	14	; select bank14
  7242  0CBF  1090               	bcf	16,1	;volatile
  7243                           
  7244                           ;tmr2.c: 20: T2CONbits.TMR2ON = 1;
  7245  0CC0  0025               	movlb	5	; select bank5
  7246  0CC1  178E               	bsf	14,7	;volatile
  7247  0CC2  0008               	return
  7248  0CC3                     __end_of_TMR2_Initialize:	
  7249                           
  7250                           	psect	text17
  7251  0004                     __ptext17:	
  7252 ;; *************** function _PWM6_Initialize *****************
  7253 ;; Defined at:
  7254 ;;		line 4 in file "../PWMTest.X/pwm6.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;		None
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      void 
  7261 ;; Registers used:
  7262 ;;		wreg, status,2, status,0
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;Total ram usage:        0 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; This function calls:
  7275 ;;		Nothing
  7276 ;; This function is called by:
  7277 ;;		_SYSTEM_Initialize
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           
  7282                           ;psect for function _PWM6_Initialize
  7283  0004                     _PWM6_Initialize:	
  7284                           
  7285                           ;pwm6.c: 6: PWM6CON = 0x80;
  7286                           
  7287                           ;incstack = 0
  7288                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  7289  0004  3080               	movlw	128
  7290  0005  0027               	movlb	7	; select bank7
  7291  0006  008E               	movwf	14	;volatile
  7292                           
  7293                           ;pwm6.c: 8: PWM6DCH = 0x3C;
  7294  0007  303C               	movlw	60
  7295  0008  008D               	movwf	13	;volatile
  7296                           
  7297                           ;pwm6.c: 10: PWM6DCL = 0x40;
  7298  0009  3040               	movlw	64
  7299  000A  008C               	movwf	12	;volatile
  7300                           
  7301                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  7302  000B  0024               	movlb	4	; select bank4
  7303  000C  081F               	movf	31,w	;volatile
  7304  000D  39F3               	andlw	-13
  7305  000E  3804               	iorlw	4
  7306  000F  009F               	movwf	31	;volatile
  7307  0010  0008               	return
  7308  0011                     __end_of_PWM6_Initialize:	
  7309                           
  7310                           	psect	text18
  7311  0DFF                     __ptext18:	
  7312 ;; *************** function _PIN_MANAGER_Initialize *****************
  7313 ;; Defined at:
  7314 ;;		line 5 in file "../PWMTest.X/pin_manager.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;		None
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  state           1    0[COMMON] unsigned char 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  1    wreg      void 
  7321 ;; Registers used:
  7322 ;;		wreg, status,2
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;Total ram usage:        1 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_SYSTEM_Initialize
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           
  7342                           ;psect for function _PIN_MANAGER_Initialize
  7343  0DFF                     _PIN_MANAGER_Initialize:	
  7344                           
  7345                           ;pin_manager.c: 7: LATA = 0x00;
  7346                           
  7347                           ;incstack = 0
  7348                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7349  0DFF  0020               	movlb	0	; select bank0
  7350  0E00  0196               	clrf	22	;volatile
  7351                           
  7352                           ;pin_manager.c: 8: LATB = 0x0;
  7353  0E01  0197               	clrf	23	;volatile
  7354                           
  7355                           ;pin_manager.c: 9: LATC = 0x0;
  7356  0E02  0198               	clrf	24	;volatile
  7357                           
  7358                           ;pin_manager.c: 11: WPUA = 0x00;
  7359  0E03  003E               	movlb	30	; select bank30
  7360  0E04  01B9               	clrf	57	;volatile
  7361                           
  7362                           ;pin_manager.c: 12: WPUB = 0x00;
  7363  0E05  01C4               	clrf	68	;volatile
  7364                           
  7365                           ;pin_manager.c: 13: WPUC = 0x00;
  7366  0E06  01CF               	clrf	79	;volatile
  7367                           
  7368                           ;pin_manager.c: 14: WPUE = 0x8;
  7369  0E07  3008               	movlw	8
  7370  0E08  00E5               	movwf	101	;volatile
  7371                           
  7372                           ;pin_manager.c: 16: TRISA = 0x04;
  7373  0E09  3004               	movlw	4
  7374  0E0A  0020               	movlb	0	; select bank0
  7375  0E0B  0091               	movwf	17	;volatile
  7376                           
  7377                           ;pin_manager.c: 17: TRISB = 0x00;
  7378  0E0C  0192               	clrf	18	;volatile
  7379                           
  7380                           ;pin_manager.c: 18: TRISC = 0x10;
  7381  0E0D  3010               	movlw	16
  7382  0E0E  0093               	movwf	19	;volatile
  7383                           
  7384                           ;pin_manager.c: 20: ANSELA = 0x04;
  7385  0E0F  3004               	movlw	4
  7386  0E10  003E               	movlb	30	; select bank30
  7387  0E11  00B8               	movwf	56	;volatile
  7388                           
  7389                           ;pin_manager.c: 21: ANSELB = 0x00;
  7390  0E12  01C3               	clrf	67	;volatile
  7391                           
  7392                           ;pin_manager.c: 22: ANSELC = 0x00;
  7393  0E13  01CE               	clrf	78	;volatile
  7394                           
  7395                           ;pin_manager.c: 26: PIE0bits.IOCIE = 0;
  7396  0E14  002E               	movlb	14	; select bank14
  7397  0E15  1216               	bcf	22,4	;volatile
  7398                           
  7399                           ;pin_manager.c: 27: bool state = GIE;
  7400  0E16  3000               	movlw	0
  7401  0E17  1B8B               	btfsc	11,7	;volatile
  7402  0E18  3001               	movlw	1
  7403  0E19  00F0               	movwf	PIN_MANAGER_Initialize@state
  7404                           
  7405                           ;pin_manager.c: 28: GIE = 0;
  7406  0E1A  138B               	bcf	11,7	;volatile
  7407                           
  7408                           ;pin_manager.c: 29: PPSLOCK = 0x55;
  7409  0E1B  3055               	movlw	85
  7410  0E1C  003D               	movlb	29	; select bank29
  7411  0E1D  008F               	movwf	15	;volatile
  7412                           
  7413                           ;pin_manager.c: 30: PPSLOCK = 0xAA;
  7414  0E1E  30AA               	movlw	170
  7415  0E1F  008F               	movwf	15	;volatile
  7416                           
  7417                           ;pin_manager.c: 31: PPSLOCKbits.PPSLOCKED = 0x00;
  7418  0E20  100F               	bcf	15,0	;volatile
  7419                           
  7420                           ;pin_manager.c: 34: RA1PPS = 0x000E;
  7421  0E21  300E               	movlw	14
  7422  0E22  003E               	movlb	30	; select bank30
  7423  0E23  0091               	movwf	17	;volatile
  7424                           
  7425                           ;pin_manager.c: 38: PPSLOCK = 0x55;
  7426  0E24  3055               	movlw	85
  7427  0E25  003D               	movlb	29	; select bank29
  7428  0E26  008F               	movwf	15	;volatile
  7429                           
  7430                           ;pin_manager.c: 39: PPSLOCK = 0xAA;
  7431  0E27  30AA               	movlw	170
  7432  0E28  008F               	movwf	15	;volatile
  7433                           
  7434                           ;pin_manager.c: 40: PPSLOCKbits.PPSLOCKED = 0x01;
  7435  0E29  140F               	bsf	15,0	;volatile
  7436                           
  7437                           ;pin_manager.c: 41: GIE = state;
  7438  0E2A  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  7439  0E2B  2E2E               	goto	u1990
  7440  0E2C  178B               	bsf	11,7	;volatile
  7441  0E2D  0008               	return
  7442  0E2E                     u1990:	
  7443  0E2E  138B               	bcf	11,7	;volatile
  7444  0E2F  0008               	return
  7445  0E30                     __end_of_PIN_MANAGER_Initialize:	
  7446                           
  7447                           	psect	text19
  7448  0C9D                     __ptext19:	
  7449 ;; *************** function _OSCILLATOR_Initialize *****************
  7450 ;; Defined at:
  7451 ;;		line 79 in file "../PWMTest.X/system.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;		None
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      void 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;Total ram usage:        0 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		_SYSTEM_Initialize
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           
  7479                           ;psect for function _OSCILLATOR_Initialize
  7480  0C9D                     _OSCILLATOR_Initialize:	
  7481                           
  7482                           ;system.c: 94: OSCCON1 = 0x62;
  7483                           
  7484                           ;incstack = 0
  7485                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7486  0C9D  3062               	movlw	98
  7487  0C9E  0031               	movlb	17	; select bank17
  7488  0C9F  008D               	movwf	13	;volatile
  7489                           
  7490                           ;system.c: 96: OSCCON3 = 0x00;
  7491  0CA0  018F               	clrf	15	;volatile
  7492                           
  7493                           ;system.c: 98: OSCEN = 0x00;
  7494  0CA1  0191               	clrf	17	;volatile
  7495                           
  7496                           ;system.c: 100: OSCFRQ = 0x02;
  7497  0CA2  3002               	movlw	2
  7498  0CA3  0093               	movwf	19	;volatile
  7499                           
  7500                           ;system.c: 102: OSCTUNE = 0x00;
  7501  0CA4  0192               	clrf	18	;volatile
  7502  0CA5  0008               	return
  7503  0CA6                     __end_of_OSCILLATOR_Initialize:	
  7504                           
  7505                           	psect	text20
  7506  0D27                     __ptext20:	
  7507 ;; *************** function _ADCC_Initialize *****************
  7508 ;; Defined at:
  7509 ;;		line 5 in file "../PWMTest.X/adcc.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;		None
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;		None
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  1    wreg      void 
  7516 ;; Registers used:
  7517 ;;		wreg, status,2
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;Total ram usage:        0 bytes
  7528 ;; Hardware stack levels used:    1
  7529 ;; This function calls:
  7530 ;;		Nothing
  7531 ;; This function is called by:
  7532 ;;		_SYSTEM_Initialize
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           
  7537                           ;psect for function _ADCC_Initialize
  7538  0D27                     _ADCC_Initialize:	
  7539                           
  7540                           ;adcc.c: 9: ADCON1 = 0x00;
  7541                           
  7542                           ;incstack = 0
  7543                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7544  0D27  0021               	movlb	1	; select bank1
  7545  0D28  0194               	clrf	20	;volatile
  7546                           
  7547                           ;adcc.c: 11: ADCON2 = 0x00;
  7548  0D29  0195               	clrf	21	;volatile
  7549                           
  7550                           ;adcc.c: 13: ADCON3 = 0x00;
  7551  0D2A  0196               	clrf	22	;volatile
  7552                           
  7553                           ;adcc.c: 15: ADACT = 0x00;
  7554  0D2B  0199               	clrf	25	;volatile
  7555                           
  7556                           ;adcc.c: 17: ADSTAT = 0x00;
  7557  0D2C  0197               	clrf	23	;volatile
  7558                           
  7559                           ;adcc.c: 19: ADCLK = 0x00;
  7560  0D2D  0198               	clrf	24	;volatile
  7561                           
  7562                           ;adcc.c: 22: ADREF = 0x00;
  7563  0D2E  019A               	clrf	26	;volatile
  7564                           
  7565                           ;adcc.c: 24: ADCAP = 0x00;
  7566  0D2F  019B               	clrf	27	;volatile
  7567                           
  7568                           ;adcc.c: 26: ADPRE = 0x00;
  7569  0D30  019C               	clrf	28	;volatile
  7570                           
  7571                           ;adcc.c: 28: ADACQ = 0x00;
  7572  0D31  019D               	clrf	29	;volatile
  7573                           
  7574                           ;adcc.c: 30: ADPCH = 0x00;
  7575  0D32  019E               	clrf	30	;volatile
  7576                           
  7577                           ;adcc.c: 32: ADRPT = 0x00;
  7578  0D33  0022               	movlb	2	; select bank2
  7579  0D34  018D               	clrf	13	;volatile
  7580                           
  7581                           ;adcc.c: 34: ADLTHL = 0x00;
  7582  0D35  018E               	clrf	14	;volatile
  7583                           
  7584                           ;adcc.c: 36: ADLTHH = 0x00;
  7585  0D36  018F               	clrf	15	;volatile
  7586                           
  7587                           ;adcc.c: 38: ADUTHL = 0x00;
  7588  0D37  0190               	clrf	16	;volatile
  7589                           
  7590                           ;adcc.c: 40: ADUTHH = 0x00;
  7591  0D38  0191               	clrf	17	;volatile
  7592                           
  7593                           ;adcc.c: 42: ADSTPTL = 0x00;
  7594  0D39  0192               	clrf	18	;volatile
  7595                           
  7596                           ;adcc.c: 44: ADSTPTH = 0x00;
  7597  0D3A  0193               	clrf	19	;volatile
  7598                           
  7599                           ;adcc.c: 47: ADCON0 = 0x84;
  7600  0D3B  3084               	movlw	132
  7601  0D3C  0021               	movlb	1	; select bank1
  7602  0D3D  0093               	movwf	19	;volatile
  7603  0D3E  0008               	return
  7604  0D3F                     __end_of_ADCC_Initialize:	
  7605                           
  7606                           	psect	text21
  7607  0CF9                     __ptext21:	
  7608 ;; *************** function _PWM6_LoadDutyValue *****************
  7609 ;; Defined at:
  7610 ;;		line 15 in file "../PWMTest.X/pwm6.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  dutyValue       2    0[COMMON] unsigned int 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;		None
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7628 ;;Total ram usage:        4 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_main
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           
  7638                           ;psect for function _PWM6_LoadDutyValue
  7639  0CF9                     _PWM6_LoadDutyValue:	
  7640                           
  7641                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
  7642                           
  7643                           ;incstack = 0
  7644                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  7645  0CF9  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
  7646  0CFA  00F3               	movwf	??_PWM6_LoadDutyValue+1
  7647  0CFB  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
  7648  0CFC  00F2               	movwf	??_PWM6_LoadDutyValue
  7649  0CFD  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  7650  0CFE  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  7651  0CFF  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  7652  0D00  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  7653  0D01  0872               	movf	??_PWM6_LoadDutyValue,w
  7654  0D02  0027               	movlb	7	; select bank7
  7655  0D03  008D               	movwf	13	;volatile
  7656                           
  7657                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
  7658  0D04  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
  7659  0D05  3903               	andlw	3
  7660  0D06  00F2               	movwf	??_PWM6_LoadDutyValue
  7661  0D07  3005               	movlw	5
  7662  0D08                     u2285:	
  7663  0D08  35F2               	lslf	??_PWM6_LoadDutyValue,f
  7664  0D09  3EFF               	addlw	-1
  7665  0D0A  1D03               	skipz
  7666  0D0B  2D08               	goto	u2285
  7667  0D0C  3572               	lslf	??_PWM6_LoadDutyValue,w
  7668  0D0D  008C               	movwf	12	;volatile
  7669  0D0E  0008               	return
  7670  0D0F                     __end_of_PWM6_LoadDutyValue:	
  7671                           
  7672                           	psect	text22
  7673  041D                     __ptext22:	
  7674 ;; *************** function _LCD_Write_Int *****************
  7675 ;; Defined at:
  7676 ;;		line 246 in file "../PWMTest.X/lcd.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  value           2    0[BANK0 ] int 
  7679 ;;  fieldLength     1    2[BANK0 ] char 
  7680 ;;  numPlaces       1    3[BANK0 ] char 
  7681 ;;  sign            1    4[BANK0 ] char 
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  str             5   10[BANK0 ] unsigned char [5]
  7684 ;;  i               2   17[BANK0 ] int 
  7685 ;;  j               2   15[BANK0 ] int 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1    wreg      void 
  7688 ;; Registers used:
  7689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7695 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7696 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7697 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7698 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7699 ;;Total ram usage:       19 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; Hardware stack levels required when called:    2
  7702 ;; This function calls:
  7703 ;;		_LCD_Write_Char
  7704 ;;		___awdiv
  7705 ;;		___awmod
  7706 ;; This function is called by:
  7707 ;;		_main
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           
  7712                           ;psect for function _LCD_Write_Int
  7713  041D                     _LCD_Write_Int:	
  7714                           
  7715                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  7716                           
  7717                           ;incstack = 0
  7718                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7719  041D  30B4               	movlw	low LCD_Write_Int@F13684
  7720  041E  0086               	movwf	6
  7721  041F  3000               	movlw	high LCD_Write_Int@F13684
  7722  0420  0087               	movwf	7
  7723  0421  302A               	movlw	low LCD_Write_Int@str
  7724  0422  0084               	movwf	4
  7725  0423  3000               	movlw	high LCD_Write_Int@str
  7726  0424  0085               	movwf	5
  7727  0425  3005               	movlw	5
  7728  0426  0020               	movlb	0	; select bank0
  7729  0427  00A5               	movwf	??_LCD_Write_Int
  7730  0428                     u2390:	
  7731  0428  0016               	moviw fsr1++
  7732  0429  001A               	movwi fsr0++
  7733  042A  0BA5               	decfsz	??_LCD_Write_Int,f
  7734  042B  2C28               	goto	u2390
  7735                           
  7736                           ;lcd.c: 249: int i=4,j=0;
  7737  042C  3004               	movlw	4
  7738  042D  00B1               	movwf	LCD_Write_Int@i
  7739  042E  3000               	movlw	0
  7740  042F  00B2               	movwf	LCD_Write_Int@i+1
  7741  0430  01AF               	clrf	LCD_Write_Int@j
  7742  0431  01B0               	clrf	LCD_Write_Int@j+1
  7743                           
  7744                           ;lcd.c: 251: if(value<0)
  7745  0432  1FA1               	btfss	LCD_Write_Int@value+1,7
  7746  0433  2C3F               	goto	l2145
  7747                           
  7748                           ;lcd.c: 252: {
  7749                           ;lcd.c: 253: LCD_Write_Char('-');
  7750  0434  302D               	movlw	45
  7751  0435  318D  25D5  3184   	fcall	_LCD_Write_Char
  7752                           
  7753                           ;lcd.c: 254: value=value*-1;
  7754  0438  0020               	movlb	0	; select bank0
  7755  0439  09A0               	comf	LCD_Write_Int@value,f
  7756  043A  09A1               	comf	LCD_Write_Int@value+1,f
  7757  043B  0AA0               	incf	LCD_Write_Int@value,f
  7758  043C  1903               	skipnz
  7759  043D  0AA1               	incf	LCD_Write_Int@value+1,f
  7760                           
  7761                           ;lcd.c: 255: }
  7762  043E  2C46               	goto	l2155
  7763  043F                     l2145:	
  7764                           
  7765                           ;lcd.c: 257: else
  7766                           ;lcd.c: 258: {
  7767                           ;lcd.c: 259: if(sign == 1)
  7768  043F  0324               	decf	LCD_Write_Int@sign,w
  7769  0440  1D03               	btfss	3,2
  7770  0441  2C46               	goto	l2155
  7771                           
  7772                           ;lcd.c: 260: {
  7773                           ;lcd.c: 261: LCD_Write_Char('+');
  7774  0442  302B               	movlw	43
  7775  0443  318D  25D5  3184   	fcall	_LCD_Write_Char
  7776  0446                     l2155:	
  7777                           ;lcd.c: 262: }
  7778                           ;lcd.c: 263: }
  7779                           ;lcd.c: 265: while(value)
  7780                           
  7781  0446  0020               	movlb	0	; select bank0
  7782  0447  0820               	movf	LCD_Write_Int@value,w
  7783  0448  0421               	iorwf	LCD_Write_Int@value+1,w
  7784  0449  1903               	btfsc	3,2
  7785  044A  2C75               	goto	l2157
  7786                           
  7787                           ;lcd.c: 266: {
  7788                           ;lcd.c: 267: str[i]=value%10;
  7789  044B  300A               	movlw	10
  7790  044C  00F0               	movwf	___awmod@divisor
  7791  044D  3000               	movlw	0
  7792  044E  00F1               	movwf	___awmod@divisor+1
  7793  044F  0020               	movlb	0	; select bank0
  7794  0450  0821               	movf	LCD_Write_Int@value+1,w
  7795  0451  00F3               	movwf	___awmod@dividend+1
  7796  0452  0820               	movf	LCD_Write_Int@value,w
  7797  0453  00F2               	movwf	___awmod@dividend
  7798  0454  318E  26A6  3184   	fcall	___awmod
  7799  0457  0870               	movf	?___awmod,w
  7800  0458  0020               	movlb	0	; select bank0
  7801  0459  00A5               	movwf	??_LCD_Write_Int
  7802  045A  0831               	movf	LCD_Write_Int@i,w
  7803  045B  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7804  045C  0086               	movwf	6
  7805  045D  0187               	clrf	7
  7806  045E  0825               	movf	??_LCD_Write_Int,w
  7807  045F  0081               	movwf	1
  7808                           
  7809                           ;lcd.c: 268: value=value/10;
  7810  0460  300A               	movlw	10
  7811  0461  00F0               	movwf	___awdiv@divisor
  7812  0462  3000               	movlw	0
  7813  0463  00F1               	movwf	___awdiv@divisor+1
  7814  0464  0821               	movf	LCD_Write_Int@value+1,w
  7815  0465  00F3               	movwf	___awdiv@dividend+1
  7816  0466  0820               	movf	LCD_Write_Int@value,w
  7817  0467  00F2               	movwf	___awdiv@dividend
  7818  0468  318E  26EB  3184   	fcall	___awdiv
  7819  046B  0871               	movf	?___awdiv+1,w
  7820  046C  0020               	movlb	0	; select bank0
  7821  046D  00A1               	movwf	LCD_Write_Int@value+1
  7822  046E  0870               	movf	?___awdiv,w
  7823  046F  00A0               	movwf	LCD_Write_Int@value
  7824                           
  7825                           ;lcd.c: 269: i--;
  7826  0470  30FF               	movlw	255
  7827  0471  07B1               	addwf	LCD_Write_Int@i,f
  7828  0472  30FF               	movlw	255
  7829  0473  3DB2               	addwfc	LCD_Write_Int@i+1,f
  7830  0474  2C46               	goto	l2155
  7831  0475                     l2157:	
  7832                           
  7833                           ;lcd.c: 270: }
  7834                           ;lcd.c: 271: if(fieldLength==-1)
  7835  0475  0A22               	incf	LCD_Write_Int@fieldLength,w
  7836  0476  1903               	btfsc	3,2
  7837  0477  2C7D               	goto	l2163
  7838  0478  2C85               	goto	l2165
  7839  0479                     l2161:	
  7840                           ;lcd.c: 272: {
  7841                           ;lcd.c: 273: while(str[j]==0)
  7842                           
  7843                           
  7844                           ;lcd.c: 274: {
  7845                           ;lcd.c: 275: j++;
  7846  0479  3001               	movlw	1
  7847  047A  07AF               	addwf	LCD_Write_Int@j,f
  7848  047B  3000               	movlw	0
  7849  047C  3DB0               	addwfc	LCD_Write_Int@j+1,f
  7850  047D                     l2163:	
  7851  047D  082F               	movf	LCD_Write_Int@j,w
  7852  047E  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7853  047F  0086               	movwf	6
  7854  0480  0187               	clrf	7
  7855  0481  0801               	movf	1,w
  7856  0482  1D03               	btfss	3,2
  7857  0483  2C95               	goto	l2167
  7858  0484  2C79               	goto	l2161
  7859  0485                     l2165:	
  7860                           ;lcd.c: 276: }
  7861                           ;lcd.c: 277: }
  7862                           
  7863                           
  7864                           ;lcd.c: 278: else
  7865                           ;lcd.c: 279: {
  7866                           ;lcd.c: 280: j=5-fieldLength;
  7867  0485  0822               	movf	LCD_Write_Int@fieldLength,w
  7868  0486  00A5               	movwf	??_LCD_Write_Int
  7869  0487  01A6               	clrf	??_LCD_Write_Int+1
  7870  0488  1BA5               	btfsc	??_LCD_Write_Int,7
  7871  0489  03A6               	decf	??_LCD_Write_Int+1,f
  7872  048A  09A5               	comf	??_LCD_Write_Int,f
  7873  048B  09A6               	comf	??_LCD_Write_Int+1,f
  7874  048C  0AA5               	incf	??_LCD_Write_Int,f
  7875  048D  1903               	skipnz
  7876  048E  0AA6               	incf	??_LCD_Write_Int+1,f
  7877  048F  0825               	movf	??_LCD_Write_Int,w
  7878  0490  3E05               	addlw	5
  7879  0491  00AF               	movwf	LCD_Write_Int@j
  7880  0492  3000               	movlw	0
  7881  0493  3D26               	addwfc	??_LCD_Write_Int+1,w
  7882  0494  00B0               	movwf	LCD_Write_Int@j+1
  7883  0495                     l2167:	
  7884                           
  7885                           ;lcd.c: 281: }
  7886                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  7887  0495  0830               	movf	LCD_Write_Int@j+1,w
  7888  0496  00B2               	movwf	LCD_Write_Int@i+1
  7889  0497  082F               	movf	LCD_Write_Int@j,w
  7890  0498  00B1               	movwf	LCD_Write_Int@i
  7891  0499                     l2173:	
  7892  0499  0823               	movf	LCD_Write_Int@numPlaces,w
  7893  049A  00A5               	movwf	??_LCD_Write_Int
  7894  049B  01A6               	clrf	??_LCD_Write_Int+1
  7895  049C  1BA5               	btfsc	??_LCD_Write_Int,7
  7896  049D  03A6               	decf	??_LCD_Write_Int+1,f
  7897  049E  09A5               	comf	??_LCD_Write_Int,f
  7898  049F  09A6               	comf	??_LCD_Write_Int+1,f
  7899  04A0  0AA5               	incf	??_LCD_Write_Int,f
  7900  04A1  1903               	skipnz
  7901  04A2  0AA6               	incf	??_LCD_Write_Int+1,f
  7902  04A3  0825               	movf	??_LCD_Write_Int,w
  7903  04A4  3E05               	addlw	5
  7904  04A5  00A7               	movwf	??_LCD_Write_Int+2
  7905  04A6  3000               	movlw	0
  7906  04A7  3D26               	addwfc	??_LCD_Write_Int+1,w
  7907  04A8  00A8               	movwf	??_LCD_Write_Int+3
  7908  04A9  0832               	movf	LCD_Write_Int@i+1,w
  7909  04AA  3A80               	xorlw	128
  7910  04AB  00A9               	movwf	??_LCD_Write_Int+4
  7911  04AC  0828               	movf	??_LCD_Write_Int+3,w
  7912  04AD  3A80               	xorlw	128
  7913  04AE  0229               	subwf	??_LCD_Write_Int+4,w
  7914  04AF  1D03               	skipz
  7915  04B0  2CB3               	goto	u2455
  7916  04B1  0827               	movf	??_LCD_Write_Int+2,w
  7917  04B2  0231               	subwf	LCD_Write_Int@i,w
  7918  04B3                     u2455:	
  7919  04B3  1803               	btfsc	3,0
  7920  04B4  2CC5               	goto	l2175
  7921                           
  7922                           ;lcd.c: 284: {
  7923                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  7924  04B5  0020               	movlb	0	; select bank0
  7925  04B6  0831               	movf	LCD_Write_Int@i,w
  7926  04B7  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7927  04B8  0086               	movwf	6
  7928  04B9  0187               	clrf	7
  7929  04BA  0801               	movf	1,w
  7930  04BB  3E30               	addlw	48
  7931  04BC  318D  25D5  3184   	fcall	_LCD_Write_Char
  7932  04BF  3001               	movlw	1
  7933  04C0  0020               	movlb	0	; select bank0
  7934  04C1  07B1               	addwf	LCD_Write_Int@i,f
  7935  04C2  3000               	movlw	0
  7936  04C3  3DB2               	addwfc	LCD_Write_Int@i+1,f
  7937  04C4  2C99               	goto	l2173
  7938  04C5                     l2175:	
  7939                           
  7940                           ;lcd.c: 286: }
  7941                           ;lcd.c: 288: if(numPlaces == 1)
  7942  04C5  0020               	movlb	0	; select bank0
  7943  04C6  0323               	decf	LCD_Write_Int@numPlaces,w
  7944  04C7  1D03               	btfss	3,2
  7945  04C8  2CD3               	goto	l2179
  7946                           
  7947                           ;lcd.c: 289: {
  7948                           ;lcd.c: 290: LCD_Write_Char(46);
  7949  04C9  302E               	movlw	46
  7950  04CA  318D  25D5  3184   	fcall	_LCD_Write_Char
  7951                           
  7952                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  7953  04CD  0020               	movlb	0	; select bank0
  7954  04CE  082E               	movf	LCD_Write_Int@str+4,w
  7955  04CF  3E30               	addlw	48
  7956  04D0  318D  25D5  3184   	fcall	_LCD_Write_Char
  7957  04D3                     l2179:	
  7958                           
  7959                           ;lcd.c: 292: }
  7960                           ;lcd.c: 294: if(numPlaces == 2)
  7961  04D3  3002               	movlw	2
  7962  04D4  0020               	movlb	0	; select bank0
  7963  04D5  0623               	xorwf	LCD_Write_Int@numPlaces,w
  7964  04D6  1D03               	btfss	3,2
  7965  04D7  0008               	return
  7966                           
  7967                           ;lcd.c: 295: {
  7968                           ;lcd.c: 296: LCD_Write_Char(46);
  7969  04D8  302E               	movlw	46
  7970  04D9  318D  25D5  3184   	fcall	_LCD_Write_Char
  7971                           
  7972                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  7973  04DC  0020               	movlb	0	; select bank0
  7974  04DD  082D               	movf	LCD_Write_Int@str+3,w
  7975  04DE  3E30               	addlw	48
  7976  04DF  318D  25D5  3184   	fcall	_LCD_Write_Char
  7977                           
  7978                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  7979  04E2  0020               	movlb	0	; select bank0
  7980  04E3  082E               	movf	LCD_Write_Int@str+4,w
  7981  04E4  3E30               	addlw	48
  7982  04E5  318D  25D5         	fcall	_LCD_Write_Char
  7983  04E7  0008               	return
  7984  04E8                     __end_of_LCD_Write_Int:	
  7985                           
  7986                           	psect	text23
  7987  0EA6                     __ptext23:	
  7988 ;; *************** function ___awmod *****************
  7989 ;; Defined at:
  7990 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  divisor         2    0[COMMON] int 
  7993 ;;  dividend        2    2[COMMON] int 
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;  sign            1    6[COMMON] unsigned char 
  7996 ;;  counter         1    5[COMMON] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  2    0[COMMON] int 
  7999 ;; Registers used:
  8000 ;;		wreg, status,2, status,0
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8007 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;Total ram usage:        7 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; This function calls:
  8013 ;;		Nothing
  8014 ;; This function is called by:
  8015 ;;		_LCD_Write_Int
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           
  8020                           ;psect for function ___awmod
  8021  0EA6                     ___awmod:	
  8022                           
  8023                           ;incstack = 0
  8024                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8025  0EA6  01F6               	clrf	___awmod@sign
  8026  0EA7  1FF3               	btfss	___awmod@dividend+1,7
  8027  0EA8  2EB0               	goto	l1925
  8028  0EA9  09F2               	comf	___awmod@dividend,f
  8029  0EAA  09F3               	comf	___awmod@dividend+1,f
  8030  0EAB  0AF2               	incf	___awmod@dividend,f
  8031  0EAC  1903               	skipnz
  8032  0EAD  0AF3               	incf	___awmod@dividend+1,f
  8033  0EAE  01F6               	clrf	___awmod@sign
  8034  0EAF  0AF6               	incf	___awmod@sign,f
  8035  0EB0                     l1925:	
  8036  0EB0  1FF1               	btfss	___awmod@divisor+1,7
  8037  0EB1  2EB7               	goto	l1929
  8038  0EB2  09F0               	comf	___awmod@divisor,f
  8039  0EB3  09F1               	comf	___awmod@divisor+1,f
  8040  0EB4  0AF0               	incf	___awmod@divisor,f
  8041  0EB5  1903               	skipnz
  8042  0EB6  0AF1               	incf	___awmod@divisor+1,f
  8043  0EB7                     l1929:	
  8044  0EB7  0870               	movf	___awmod@divisor,w
  8045  0EB8  0471               	iorwf	___awmod@divisor+1,w
  8046  0EB9  1903               	btfsc	3,2
  8047  0EBA  2EDE               	goto	l1947
  8048  0EBB  01F5               	clrf	___awmod@counter
  8049  0EBC  0AF5               	incf	___awmod@counter,f
  8050  0EBD                     l1937:	
  8051  0EBD  1BF1               	btfsc	___awmod@divisor+1,7
  8052  0EBE  2EC9               	goto	l1939
  8053  0EBF  3001               	movlw	1
  8054  0EC0                     u2155:	
  8055  0EC0  35F0               	lslf	___awmod@divisor,f
  8056  0EC1  0DF1               	rlf	___awmod@divisor+1,f
  8057  0EC2  0B89               	decfsz	9,f
  8058  0EC3  2EC0               	goto	u2155
  8059  0EC4  3001               	movlw	1
  8060  0EC5  00F4               	movwf	??___awmod
  8061  0EC6  0874               	movf	??___awmod,w
  8062  0EC7  07F5               	addwf	___awmod@counter,f
  8063  0EC8  2EBD               	goto	l1937
  8064  0EC9                     l1939:	
  8065  0EC9  0871               	movf	___awmod@divisor+1,w
  8066  0ECA  0273               	subwf	___awmod@dividend+1,w
  8067  0ECB  1D03               	skipz
  8068  0ECC  2ECF               	goto	u2175
  8069  0ECD  0870               	movf	___awmod@divisor,w
  8070  0ECE  0272               	subwf	___awmod@dividend,w
  8071  0ECF                     u2175:	
  8072  0ECF  1C03               	skipc
  8073  0ED0  2ED5               	goto	l1943
  8074  0ED1  0870               	movf	___awmod@divisor,w
  8075  0ED2  02F2               	subwf	___awmod@dividend,f
  8076  0ED3  0871               	movf	___awmod@divisor+1,w
  8077  0ED4  3BF3               	subwfb	___awmod@dividend+1,f
  8078  0ED5                     l1943:	
  8079  0ED5  3001               	movlw	1
  8080  0ED6                     u2185:	
  8081  0ED6  36F1               	lsrf	___awmod@divisor+1,f
  8082  0ED7  0CF0               	rrf	___awmod@divisor,f
  8083  0ED8  0B89               	decfsz	9,f
  8084  0ED9  2ED6               	goto	u2185
  8085  0EDA  3001               	movlw	1
  8086  0EDB  02F5               	subwf	___awmod@counter,f
  8087  0EDC  1D03               	btfss	3,2
  8088  0EDD  2EC9               	goto	l1939
  8089  0EDE                     l1947:	
  8090  0EDE  0876               	movf	___awmod@sign,w
  8091  0EDF  1903               	btfsc	3,2
  8092  0EE0  2EE6               	goto	l1951
  8093  0EE1  09F2               	comf	___awmod@dividend,f
  8094  0EE2  09F3               	comf	___awmod@dividend+1,f
  8095  0EE3  0AF2               	incf	___awmod@dividend,f
  8096  0EE4  1903               	skipnz
  8097  0EE5  0AF3               	incf	___awmod@dividend+1,f
  8098  0EE6                     l1951:	
  8099  0EE6  0873               	movf	___awmod@dividend+1,w
  8100  0EE7  00F1               	movwf	?___awmod+1
  8101  0EE8  0872               	movf	___awmod@dividend,w
  8102  0EE9  00F0               	movwf	?___awmod
  8103  0EEA  0008               	return
  8104  0EEB                     __end_of___awmod:	
  8105                           
  8106                           	psect	text24
  8107  0EEB                     __ptext24:	
  8108 ;; *************** function ___awdiv *****************
  8109 ;; Defined at:
  8110 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  divisor         2    0[COMMON] int 
  8113 ;;  dividend        2    2[COMMON] int 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;  quotient        2    7[COMMON] int 
  8116 ;;  sign            1    6[COMMON] unsigned char 
  8117 ;;  counter         1    5[COMMON] unsigned char 
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  2    0[COMMON] int 
  8120 ;; Registers used:
  8121 ;;		wreg, status,2, status,0
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;Total ram usage:        9 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_LCD_Write_Int
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           
  8141                           ;psect for function ___awdiv
  8142  0EEB                     ___awdiv:	
  8143                           
  8144                           ;incstack = 0
  8145                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8146  0EEB  01F6               	clrf	___awdiv@sign
  8147  0EEC  1FF1               	btfss	___awdiv@divisor+1,7
  8148  0EED  2EF5               	goto	l1881
  8149  0EEE  09F0               	comf	___awdiv@divisor,f
  8150  0EEF  09F1               	comf	___awdiv@divisor+1,f
  8151  0EF0  0AF0               	incf	___awdiv@divisor,f
  8152  0EF1  1903               	skipnz
  8153  0EF2  0AF1               	incf	___awdiv@divisor+1,f
  8154  0EF3  01F6               	clrf	___awdiv@sign
  8155  0EF4  0AF6               	incf	___awdiv@sign,f
  8156  0EF5                     l1881:	
  8157  0EF5  1FF3               	btfss	___awdiv@dividend+1,7
  8158  0EF6  2F00               	goto	l1887
  8159  0EF7  09F2               	comf	___awdiv@dividend,f
  8160  0EF8  09F3               	comf	___awdiv@dividend+1,f
  8161  0EF9  0AF2               	incf	___awdiv@dividend,f
  8162  0EFA  1903               	skipnz
  8163  0EFB  0AF3               	incf	___awdiv@dividend+1,f
  8164  0EFC  3001               	movlw	1
  8165  0EFD  00F4               	movwf	??___awdiv
  8166  0EFE  0874               	movf	??___awdiv,w
  8167  0EFF  06F6               	xorwf	___awdiv@sign,f
  8168  0F00                     l1887:	
  8169  0F00  01F7               	clrf	___awdiv@quotient
  8170  0F01  01F8               	clrf	___awdiv@quotient+1
  8171  0F02  0870               	movf	___awdiv@divisor,w
  8172  0F03  0471               	iorwf	___awdiv@divisor+1,w
  8173  0F04  1903               	btfsc	3,2
  8174  0F05  2F2F               	goto	l1909
  8175  0F06  01F5               	clrf	___awdiv@counter
  8176  0F07  0AF5               	incf	___awdiv@counter,f
  8177  0F08                     l1897:	
  8178  0F08  1BF1               	btfsc	___awdiv@divisor+1,7
  8179  0F09  2F14               	goto	l1899
  8180  0F0A  3001               	movlw	1
  8181  0F0B                     u2055:	
  8182  0F0B  35F0               	lslf	___awdiv@divisor,f
  8183  0F0C  0DF1               	rlf	___awdiv@divisor+1,f
  8184  0F0D  0B89               	decfsz	9,f
  8185  0F0E  2F0B               	goto	u2055
  8186  0F0F  3001               	movlw	1
  8187  0F10  00F4               	movwf	??___awdiv
  8188  0F11  0874               	movf	??___awdiv,w
  8189  0F12  07F5               	addwf	___awdiv@counter,f
  8190  0F13  2F08               	goto	l1897
  8191  0F14                     l1899:	
  8192  0F14  3001               	movlw	1
  8193  0F15                     u2075:	
  8194  0F15  35F7               	lslf	___awdiv@quotient,f
  8195  0F16  0DF8               	rlf	___awdiv@quotient+1,f
  8196  0F17  0B89               	decfsz	9,f
  8197  0F18  2F15               	goto	u2075
  8198  0F19  0871               	movf	___awdiv@divisor+1,w
  8199  0F1A  0273               	subwf	___awdiv@dividend+1,w
  8200  0F1B  1D03               	skipz
  8201  0F1C  2F1F               	goto	u2085
  8202  0F1D  0870               	movf	___awdiv@divisor,w
  8203  0F1E  0272               	subwf	___awdiv@dividend,w
  8204  0F1F                     u2085:	
  8205  0F1F  1C03               	skipc
  8206  0F20  2F26               	goto	l1905
  8207  0F21  0870               	movf	___awdiv@divisor,w
  8208  0F22  02F2               	subwf	___awdiv@dividend,f
  8209  0F23  0871               	movf	___awdiv@divisor+1,w
  8210  0F24  3BF3               	subwfb	___awdiv@dividend+1,f
  8211  0F25  1477               	bsf	___awdiv@quotient,0
  8212  0F26                     l1905:	
  8213  0F26  3001               	movlw	1
  8214  0F27                     u2095:	
  8215  0F27  36F1               	lsrf	___awdiv@divisor+1,f
  8216  0F28  0CF0               	rrf	___awdiv@divisor,f
  8217  0F29  0B89               	decfsz	9,f
  8218  0F2A  2F27               	goto	u2095
  8219  0F2B  3001               	movlw	1
  8220  0F2C  02F5               	subwf	___awdiv@counter,f
  8221  0F2D  1D03               	btfss	3,2
  8222  0F2E  2F14               	goto	l1899
  8223  0F2F                     l1909:	
  8224  0F2F  0876               	movf	___awdiv@sign,w
  8225  0F30  1903               	btfsc	3,2
  8226  0F31  2F37               	goto	l1913
  8227  0F32  09F7               	comf	___awdiv@quotient,f
  8228  0F33  09F8               	comf	___awdiv@quotient+1,f
  8229  0F34  0AF7               	incf	___awdiv@quotient,f
  8230  0F35  1903               	skipnz
  8231  0F36  0AF8               	incf	___awdiv@quotient+1,f
  8232  0F37                     l1913:	
  8233  0F37  0878               	movf	___awdiv@quotient+1,w
  8234  0F38  00F1               	movwf	?___awdiv+1
  8235  0F39  0877               	movf	___awdiv@quotient,w
  8236  0F3A  00F0               	movwf	?___awdiv
  8237  0F3B  0008               	return
  8238  0F3C                     __end_of___awdiv:	
  8239                           
  8240                           	psect	text25
  8241  008C                     __ptext25:	
  8242 ;; *************** function _LCD_Set_Cursor *****************
  8243 ;; Defined at:
  8244 ;;		line 82 in file "../PWMTest.X/lcd.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  x               1    wreg     unsigned char 
  8247 ;;  y               1    3[COMMON] unsigned char 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  x               1    6[COMMON] unsigned char 
  8250 ;;  temp            1    9[COMMON] unsigned char 
  8251 ;;  w               1    8[COMMON] unsigned char 
  8252 ;;  z               1    7[COMMON] unsigned char 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  1    wreg      void 
  8255 ;; Registers used:
  8256 ;;		wreg, status,2, status,0, pclath, cstack
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8262 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;Total ram usage:        7 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; Hardware stack levels required when called:    2
  8269 ;; This function calls:
  8270 ;;		_LCD_Cmd
  8271 ;; This function is called by:
  8272 ;;		_main
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           
  8277                           ;psect for function _LCD_Set_Cursor
  8278  008C                     _LCD_Set_Cursor:	
  8279                           
  8280                           ;incstack = 0
  8281                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8282                           ;LCD_Set_Cursor@x stored from wreg
  8283  008C  00F6               	movwf	LCD_Set_Cursor@x
  8284                           
  8285                           ;lcd.c: 109: char temp,z,w;
  8286                           ;lcd.c: 111: if(x == 0)
  8287  008D  0876               	movf	LCD_Set_Cursor@x,w
  8288  008E  1D03               	btfss	3,2
  8289  008F  28AC               	goto	l2069
  8290                           
  8291                           ;lcd.c: 112: {
  8292                           ;lcd.c: 113: temp = 0x80 + y;
  8293  0090  0873               	movf	LCD_Set_Cursor@y,w
  8294  0091  3E80               	addlw	128
  8295  0092  00F4               	movwf	??_LCD_Set_Cursor
  8296  0093  0874               	movf	??_LCD_Set_Cursor,w
  8297  0094  00F9               	movwf	LCD_Set_Cursor@temp
  8298                           
  8299                           ;lcd.c: 115: z = temp>>4;
  8300  0095  0879               	movf	LCD_Set_Cursor@temp,w
  8301  0096  00F4               	movwf	??_LCD_Set_Cursor
  8302  0097  3004               	movlw	4
  8303  0098                     u2325:	
  8304  0098  36F4               	lsrf	??_LCD_Set_Cursor,f
  8305  0099  0B89               	decfsz	9,f
  8306  009A  2898               	goto	u2325
  8307  009B  0874               	movf	??_LCD_Set_Cursor,w
  8308  009C  00F5               	movwf	??_LCD_Set_Cursor+1
  8309  009D  0875               	movf	??_LCD_Set_Cursor+1,w
  8310  009E  00F7               	movwf	LCD_Set_Cursor@z
  8311                           
  8312                           ;lcd.c: 116: w = temp & 0x0F;
  8313  009F  0879               	movf	LCD_Set_Cursor@temp,w
  8314  00A0  390F               	andlw	15
  8315  00A1  00F4               	movwf	??_LCD_Set_Cursor
  8316  00A2  0874               	movf	??_LCD_Set_Cursor,w
  8317  00A3  00F8               	movwf	LCD_Set_Cursor@w
  8318                           
  8319                           ;lcd.c: 117: LCD_Cmd(z);
  8320  00A4  0877               	movf	LCD_Set_Cursor@z,w
  8321  00A5  318C  24D4  3180   	fcall	_LCD_Cmd
  8322                           
  8323                           ;lcd.c: 118: LCD_Cmd(w);
  8324  00A8  0878               	movf	LCD_Set_Cursor@w,w
  8325  00A9  318C  24D4         	fcall	_LCD_Cmd
  8326                           
  8327                           ;lcd.c: 119: }
  8328  00AB  0008               	return
  8329  00AC                     l2069:	
  8330                           
  8331                           ;lcd.c: 121: else if(x == 1)
  8332  00AC  0376               	decf	LCD_Set_Cursor@x,w
  8333  00AD  1D03               	btfss	3,2
  8334  00AE  28CB               	goto	l2079
  8335                           
  8336                           ;lcd.c: 122: {
  8337                           ;lcd.c: 123: temp = 0xC0 + y;
  8338  00AF  0873               	movf	LCD_Set_Cursor@y,w
  8339  00B0  3EC0               	addlw	192
  8340  00B1  00F4               	movwf	??_LCD_Set_Cursor
  8341  00B2  0874               	movf	??_LCD_Set_Cursor,w
  8342  00B3  00F9               	movwf	LCD_Set_Cursor@temp
  8343                           
  8344                           ;lcd.c: 125: z = temp>>4;
  8345  00B4  0879               	movf	LCD_Set_Cursor@temp,w
  8346  00B5  00F4               	movwf	??_LCD_Set_Cursor
  8347  00B6  3004               	movlw	4
  8348  00B7                     u2345:	
  8349  00B7  36F4               	lsrf	??_LCD_Set_Cursor,f
  8350  00B8  0B89               	decfsz	9,f
  8351  00B9  28B7               	goto	u2345
  8352  00BA  0874               	movf	??_LCD_Set_Cursor,w
  8353  00BB  00F5               	movwf	??_LCD_Set_Cursor+1
  8354  00BC  0875               	movf	??_LCD_Set_Cursor+1,w
  8355  00BD  00F7               	movwf	LCD_Set_Cursor@z
  8356                           
  8357                           ;lcd.c: 126: w = temp & 0x0F;
  8358  00BE  0879               	movf	LCD_Set_Cursor@temp,w
  8359  00BF  390F               	andlw	15
  8360  00C0  00F4               	movwf	??_LCD_Set_Cursor
  8361  00C1  0874               	movf	??_LCD_Set_Cursor,w
  8362  00C2  00F8               	movwf	LCD_Set_Cursor@w
  8363                           
  8364                           ;lcd.c: 127: LCD_Cmd(z);
  8365  00C3  0877               	movf	LCD_Set_Cursor@z,w
  8366  00C4  318C  24D4  3180   	fcall	_LCD_Cmd
  8367                           
  8368                           ;lcd.c: 128: LCD_Cmd(w);
  8369  00C7  0878               	movf	LCD_Set_Cursor@w,w
  8370  00C8  318C  24D4         	fcall	_LCD_Cmd
  8371                           
  8372                           ;lcd.c: 129: }
  8373  00CA  0008               	return
  8374  00CB                     l2079:	
  8375                           
  8376                           ;lcd.c: 132: else if(x == 2)
  8377  00CB  3002               	movlw	2
  8378  00CC  0676               	xorwf	LCD_Set_Cursor@x,w
  8379  00CD  1D03               	btfss	3,2
  8380  00CE  28EB               	goto	l2089
  8381                           
  8382                           ;lcd.c: 133: {
  8383                           ;lcd.c: 134: temp = 0x94 + y;
  8384  00CF  0873               	movf	LCD_Set_Cursor@y,w
  8385  00D0  3E94               	addlw	148
  8386  00D1  00F4               	movwf	??_LCD_Set_Cursor
  8387  00D2  0874               	movf	??_LCD_Set_Cursor,w
  8388  00D3  00F9               	movwf	LCD_Set_Cursor@temp
  8389                           
  8390                           ;lcd.c: 136: z = temp>>4;
  8391  00D4  0879               	movf	LCD_Set_Cursor@temp,w
  8392  00D5  00F4               	movwf	??_LCD_Set_Cursor
  8393  00D6  3004               	movlw	4
  8394  00D7                     u2365:	
  8395  00D7  36F4               	lsrf	??_LCD_Set_Cursor,f
  8396  00D8  0B89               	decfsz	9,f
  8397  00D9  28D7               	goto	u2365
  8398  00DA  0874               	movf	??_LCD_Set_Cursor,w
  8399  00DB  00F5               	movwf	??_LCD_Set_Cursor+1
  8400  00DC  0875               	movf	??_LCD_Set_Cursor+1,w
  8401  00DD  00F7               	movwf	LCD_Set_Cursor@z
  8402                           
  8403                           ;lcd.c: 137: w = temp & 0x0F;
  8404  00DE  0879               	movf	LCD_Set_Cursor@temp,w
  8405  00DF  390F               	andlw	15
  8406  00E0  00F4               	movwf	??_LCD_Set_Cursor
  8407  00E1  0874               	movf	??_LCD_Set_Cursor,w
  8408  00E2  00F8               	movwf	LCD_Set_Cursor@w
  8409                           
  8410                           ;lcd.c: 138: LCD_Cmd(z);
  8411  00E3  0877               	movf	LCD_Set_Cursor@z,w
  8412  00E4  318C  24D4  3180   	fcall	_LCD_Cmd
  8413                           
  8414                           ;lcd.c: 139: LCD_Cmd(w);
  8415  00E7  0878               	movf	LCD_Set_Cursor@w,w
  8416  00E8  318C  24D4         	fcall	_LCD_Cmd
  8417                           
  8418                           ;lcd.c: 140: }
  8419  00EA  0008               	return
  8420  00EB                     l2089:	
  8421                           
  8422                           ;lcd.c: 142: else if(x == 3)
  8423  00EB  3003               	movlw	3
  8424  00EC  0676               	xorwf	LCD_Set_Cursor@x,w
  8425  00ED  1D03               	btfss	3,2
  8426  00EE  0008               	return
  8427                           
  8428                           ;lcd.c: 143: {
  8429                           ;lcd.c: 144: temp = 0xD4 + y;
  8430  00EF  0873               	movf	LCD_Set_Cursor@y,w
  8431  00F0  3ED4               	addlw	212
  8432  00F1  00F4               	movwf	??_LCD_Set_Cursor
  8433  00F2  0874               	movf	??_LCD_Set_Cursor,w
  8434  00F3  00F9               	movwf	LCD_Set_Cursor@temp
  8435                           
  8436                           ;lcd.c: 146: z = temp>>4;
  8437  00F4  0879               	movf	LCD_Set_Cursor@temp,w
  8438  00F5  00F4               	movwf	??_LCD_Set_Cursor
  8439  00F6  3004               	movlw	4
  8440  00F7                     u2385:	
  8441  00F7  36F4               	lsrf	??_LCD_Set_Cursor,f
  8442  00F8  0B89               	decfsz	9,f
  8443  00F9  28F7               	goto	u2385
  8444  00FA  0874               	movf	??_LCD_Set_Cursor,w
  8445  00FB  00F5               	movwf	??_LCD_Set_Cursor+1
  8446  00FC  0875               	movf	??_LCD_Set_Cursor+1,w
  8447  00FD  00F7               	movwf	LCD_Set_Cursor@z
  8448                           
  8449                           ;lcd.c: 147: w = temp & 0x0F;
  8450  00FE  0879               	movf	LCD_Set_Cursor@temp,w
  8451  00FF  390F               	andlw	15
  8452  0100  00F4               	movwf	??_LCD_Set_Cursor
  8453  0101  0874               	movf	??_LCD_Set_Cursor,w
  8454  0102  00F8               	movwf	LCD_Set_Cursor@w
  8455                           
  8456                           ;lcd.c: 148: LCD_Cmd(z);
  8457  0103  0877               	movf	LCD_Set_Cursor@z,w
  8458  0104  318C  24D4  3180   	fcall	_LCD_Cmd
  8459                           
  8460                           ;lcd.c: 149: LCD_Cmd(w);
  8461  0107  0878               	movf	LCD_Set_Cursor@w,w
  8462  0108  318C  24D4         	fcall	_LCD_Cmd
  8463  010A  0008               	return
  8464  010B                     __end_of_LCD_Set_Cursor:	
  8465                           
  8466                           	psect	text26
  8467  0011                     __ptext26:	
  8468 ;; *************** function _LCD_Init *****************
  8469 ;; Defined at:
  8470 ;;		line 154 in file "../PWMTest.X/lcd.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;  style           1    wreg     unsigned char 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;  style           1    5[COMMON] unsigned char 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      void 
  8477 ;; Registers used:
  8478 ;;		wreg, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;Total ram usage:        3 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    2
  8491 ;; This function calls:
  8492 ;;		_LCD_Cmd
  8493 ;;		_LCD_Port
  8494 ;; This function is called by:
  8495 ;;		_main
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           
  8500                           ;psect for function _LCD_Init
  8501  0011                     _LCD_Init:	
  8502                           
  8503                           ;incstack = 0
  8504                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8505                           ;LCD_Init@style stored from wreg
  8506  0011  00F5               	movwf	LCD_Init@style
  8507                           
  8508                           ;lcd.c: 156: LCD_Port(0x00);
  8509  0012  3000               	movlw	0
  8510  0013  318D  250F  3180   	fcall	_LCD_Port
  8511                           
  8512                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  8513  0016  3021               	movlw	33
  8514  0017  00F4               	movwf	??_LCD_Init+1
  8515  0018  3076               	movlw	118
  8516  0019  00F3               	movwf	??_LCD_Init
  8517  001A                     u2887:	
  8518  001A  0BF3               	decfsz	??_LCD_Init,f
  8519  001B  281A               	goto	u2887
  8520  001C  0BF4               	decfsz	??_LCD_Init+1,f
  8521  001D  281A               	goto	u2887
  8522  001E  0000               	nop
  8523                           
  8524                           ;lcd.c: 160: LCD_Cmd(0x03);
  8525  001F  3003               	movlw	3
  8526  0020  318C  24D4  3180   	fcall	_LCD_Cmd
  8527                           
  8528                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  8529  0023  3004               	movlw	4
  8530  0024  00F4               	movwf	??_LCD_Init+1
  8531  0025  303D               	movlw	61
  8532  0026  00F3               	movwf	??_LCD_Init
  8533  0027                     u2897:	
  8534  0027  0BF3               	decfsz	??_LCD_Init,f
  8535  0028  2827               	goto	u2897
  8536  0029  0BF4               	decfsz	??_LCD_Init+1,f
  8537  002A  2827               	goto	u2897
  8538  002B  3200               	nop2
  8539                           
  8540                           ;lcd.c: 164: LCD_Cmd(0x03);
  8541  002C  3003               	movlw	3
  8542  002D  318C  24D4  3180   	fcall	_LCD_Cmd
  8543                           
  8544                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8545  0030  3009               	movlw	9
  8546  0031  00F3               	movwf	??_LCD_Init
  8547  0032                     u2907:	
  8548  0032  0BF3               	decfsz	??_LCD_Init,f
  8549  0033  2832               	goto	u2907
  8550  0034  3200               	nop2	;nop
  8551                           
  8552                           ;lcd.c: 168: LCD_Cmd(0x03);
  8553  0035  3003               	movlw	3
  8554  0036  318C  24D4  3180   	fcall	_LCD_Cmd
  8555                           
  8556                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8557  0039  3009               	movlw	9
  8558  003A  00F3               	movwf	??_LCD_Init
  8559  003B                     u2917:	
  8560  003B  0BF3               	decfsz	??_LCD_Init,f
  8561  003C  283B               	goto	u2917
  8562  003D  3200               	nop2	;nop
  8563                           
  8564                           ;lcd.c: 172: LCD_Cmd(0x02);
  8565  003E  3002               	movlw	2
  8566  003F  318C  24D4  3180   	fcall	_LCD_Cmd
  8567                           
  8568                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8569  0042  3009               	movlw	9
  8570  0043  00F3               	movwf	??_LCD_Init
  8571  0044                     u2927:	
  8572  0044  0BF3               	decfsz	??_LCD_Init,f
  8573  0045  2844               	goto	u2927
  8574  0046  3200               	nop2	;nop
  8575                           
  8576                           ;lcd.c: 176: LCD_Cmd(0x2);
  8577  0047  3002               	movlw	2
  8578  0048  318C  24D4  3180   	fcall	_LCD_Cmd
  8579                           
  8580                           ;lcd.c: 178: LCD_Cmd(0x8);
  8581  004B  3008               	movlw	8
  8582  004C  318C  24D4  3180   	fcall	_LCD_Cmd
  8583                           
  8584                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8585  004F  3009               	movlw	9
  8586  0050  00F3               	movwf	??_LCD_Init
  8587  0051                     u2937:	
  8588  0051  0BF3               	decfsz	??_LCD_Init,f
  8589  0052  2851               	goto	u2937
  8590  0053  3200               	nop2	;nop
  8591                           
  8592                           ;lcd.c: 182: LCD_Cmd(0x0);
  8593  0054  3000               	movlw	0
  8594  0055  318C  24D4  3180   	fcall	_LCD_Cmd
  8595                           
  8596                           ;lcd.c: 184: LCD_Cmd(0x8);
  8597  0058  3008               	movlw	8
  8598  0059  318C  24D4  3180   	fcall	_LCD_Cmd
  8599                           
  8600                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8601  005C  3009               	movlw	9
  8602  005D  00F3               	movwf	??_LCD_Init
  8603  005E                     u2947:	
  8604  005E  0BF3               	decfsz	??_LCD_Init,f
  8605  005F  285E               	goto	u2947
  8606  0060  3200               	nop2	;nop
  8607                           
  8608                           ;lcd.c: 188: LCD_Cmd(0x0);
  8609  0061  3000               	movlw	0
  8610  0062  318C  24D4  3180   	fcall	_LCD_Cmd
  8611                           
  8612                           ;lcd.c: 190: LCD_Cmd(0x1);
  8613  0065  3001               	movlw	1
  8614  0066  318C  24D4  3180   	fcall	_LCD_Cmd
  8615                           
  8616                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  8617  0069  30F9               	movlw	249
  8618  006A  00F3               	movwf	??_LCD_Init
  8619  006B                     u2957:	
  8620  006B  3200               	nop2
  8621  006C  0BF3               	decfsz	??_LCD_Init,f
  8622  006D  286B               	goto	u2957
  8623  006E  3200               	nop2	;nop
  8624  006F  3200               	nop2	;nop
  8625                           
  8626                           ;lcd.c: 194: LCD_Cmd(0x0);
  8627  0070  3000               	movlw	0
  8628  0071  318C  24D4  3180   	fcall	_LCD_Cmd
  8629                           
  8630                           ;lcd.c: 196: LCD_Cmd(0x6);
  8631  0074  3006               	movlw	6
  8632  0075  318C  24D4  3180   	fcall	_LCD_Cmd
  8633                           
  8634                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8635  0078  3009               	movlw	9
  8636  0079  00F3               	movwf	??_LCD_Init
  8637  007A                     u2967:	
  8638  007A  0BF3               	decfsz	??_LCD_Init,f
  8639  007B  287A               	goto	u2967
  8640  007C  3200               	nop2	;nop
  8641                           
  8642                           ;lcd.c: 200: LCD_Cmd(0x0);
  8643  007D  3000               	movlw	0
  8644  007E  318C  24D4  3180   	fcall	_LCD_Cmd
  8645                           
  8646                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  8647  0081  0875               	movf	LCD_Init@style,w
  8648  0082  380C               	iorlw	12
  8649  0083  318C  24D4  3180   	fcall	_LCD_Cmd
  8650                           
  8651                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8652  0086  3009               	movlw	9
  8653  0087  00F3               	movwf	??_LCD_Init
  8654  0088                     u2977:	
  8655  0088  0BF3               	decfsz	??_LCD_Init,f
  8656  0089  2888               	goto	u2977
  8657  008A  3200               	nop2	;nop
  8658  008B  0008               	return
  8659  008C                     __end_of_LCD_Init:	
  8660                           
  8661                           	psect	text27
  8662  0C95                     __ptext27:	
  8663 ;; *************** function _LCD_Clear *****************
  8664 ;; Defined at:
  8665 ;;		line 75 in file "../PWMTest.X/lcd.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;		None
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;		None
  8670 ;; Return value:  Size  Location     Type
  8671 ;;                  1    wreg      void 
  8672 ;; Registers used:
  8673 ;;		wreg, status,2, status,0, pclath, cstack
  8674 ;; Tracked objects:
  8675 ;;		On entry : 0/0
  8676 ;;		On exit  : 0/0
  8677 ;;		Unchanged: 0/0
  8678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;Total ram usage:        0 bytes
  8684 ;; Hardware stack levels used:    1
  8685 ;; Hardware stack levels required when called:    2
  8686 ;; This function calls:
  8687 ;;		_LCD_Cmd
  8688 ;; This function is called by:
  8689 ;;		_main
  8690 ;; This function uses a non-reentrant model
  8691 ;;
  8692                           
  8693                           
  8694                           ;psect for function _LCD_Clear
  8695  0C95                     _LCD_Clear:	
  8696                           
  8697                           ;lcd.c: 77: LCD_Cmd(0);
  8698                           
  8699                           ;incstack = 0
  8700                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  8701  0C95  3000               	movlw	0
  8702  0C96  318C  24D4  318C   	fcall	_LCD_Cmd
  8703                           
  8704                           ;lcd.c: 78: LCD_Cmd(1);
  8705  0C99  3001               	movlw	1
  8706  0C9A  318C  24D4         	fcall	_LCD_Cmd
  8707  0C9C  0008               	return
  8708  0C9D                     __end_of_LCD_Clear:	
  8709                           
  8710                           	psect	text28
  8711  0DB0                     __ptext28:	
  8712 ;; *************** function _InitCustomChars *****************
  8713 ;; Defined at:
  8714 ;;		line 29 in file "../PWMTest.X/lcd.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;		None
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;  i               1    6[COMMON] unsigned char 
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8732 ;;Total ram usage:        2 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:    2
  8735 ;; This function calls:
  8736 ;;		_LCD_Cmd
  8737 ;;		_LCD_Write_Char
  8738 ;; This function is called by:
  8739 ;;		_main
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           
  8744                           ;psect for function _InitCustomChars
  8745  0DB0                     _InitCustomChars:	
  8746                           
  8747                           ;lcd.c: 31: uint8_t i;
  8748                           ;lcd.c: 32: LCD_Cmd(0x04);
  8749                           
  8750                           ;incstack = 0
  8751                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8752  0DB0  3004               	movlw	4
  8753  0DB1  318C  24D4  318D   	fcall	_LCD_Cmd
  8754                           
  8755                           ;lcd.c: 33: LCD_Cmd(0x00);
  8756  0DB4  3000               	movlw	0
  8757  0DB5  318C  24D4  318D   	fcall	_LCD_Cmd
  8758                           
  8759                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  8760  0DB8  01F6               	clrf	InitCustomChars@i
  8761  0DB9  3018               	movlw	24
  8762  0DBA  0276               	subwf	InitCustomChars@i,w
  8763  0DBB  1803               	btfsc	3,0
  8764  0DBC  2DCD               	goto	l2055
  8765  0DBD                     l2049:	
  8766                           
  8767                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  8768  0DBD  0876               	movf	InitCustomChars@i,w
  8769  0DBE  3EB9               	addlw	(low (___cgram| 0))& (0+255)
  8770  0DBF  0086               	movwf	6
  8771  0DC0  0187               	clrf	7
  8772  0DC1  0801               	movf	1,w
  8773  0DC2  318D  25D5  318D   	fcall	_LCD_Write_Char
  8774  0DC5  3001               	movlw	1
  8775  0DC6  00F5               	movwf	??_InitCustomChars
  8776  0DC7  0875               	movf	??_InitCustomChars,w
  8777  0DC8  07F6               	addwf	InitCustomChars@i,f
  8778  0DC9  3018               	movlw	24
  8779  0DCA  0276               	subwf	InitCustomChars@i,w
  8780  0DCB  1C03               	skipc
  8781  0DCC  2DBD               	goto	l2049
  8782  0DCD                     l2055:	
  8783                           
  8784                           ;lcd.c: 36: LCD_Cmd(0);
  8785  0DCD  3000               	movlw	0
  8786  0DCE  318C  24D4  318D   	fcall	_LCD_Cmd
  8787                           
  8788                           ;lcd.c: 37: LCD_Cmd(2);
  8789  0DD1  3002               	movlw	2
  8790  0DD2  318C  24D4         	fcall	_LCD_Cmd
  8791  0DD4  0008               	return
  8792  0DD5                     __end_of_InitCustomChars:	
  8793                           
  8794                           	psect	text29
  8795  0DD5                     __ptext29:	
  8796 ;; *************** function _LCD_Write_Char *****************
  8797 ;; Defined at:
  8798 ;;		line 223 in file "../PWMTest.X/lcd.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  a               1    wreg     unsigned char 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;  a               1    4[COMMON] unsigned char 
  8803 ;;  y               1    3[COMMON] unsigned char 
  8804 ;;  temp            1    2[COMMON] unsigned char 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  1    wreg      void 
  8807 ;; Registers used:
  8808 ;;		wreg, status,2, status,0, pclath, cstack
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;Total ram usage:        4 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    1
  8821 ;; This function calls:
  8822 ;;		_LCD_Port
  8823 ;; This function is called by:
  8824 ;;		_InitCustomChars
  8825 ;;		_LCD_Write_Int
  8826 ;;		_main
  8827 ;;		_LCD_Write_String
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           
  8832                           ;psect for function _LCD_Write_Char
  8833  0DD5                     _LCD_Write_Char:	
  8834                           
  8835                           ;incstack = 0
  8836                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8837                           ;LCD_Write_Char@a stored from wreg
  8838  0DD5  00F4               	movwf	LCD_Write_Char@a
  8839                           
  8840                           ;lcd.c: 225: char temp,y;
  8841                           ;lcd.c: 226: temp = a&0x0F;
  8842  0DD6  0874               	movf	LCD_Write_Char@a,w
  8843  0DD7  390F               	andlw	15
  8844  0DD8  00F1               	movwf	??_LCD_Write_Char
  8845  0DD9  0871               	movf	??_LCD_Write_Char,w
  8846  0DDA  00F2               	movwf	LCD_Write_Char@temp
  8847                           
  8848                           ;lcd.c: 227: y = a&0xF0;
  8849  0DDB  0874               	movf	LCD_Write_Char@a,w
  8850  0DDC  39F0               	andlw	240
  8851  0DDD  00F1               	movwf	??_LCD_Write_Char
  8852  0DDE  0871               	movf	??_LCD_Write_Char,w
  8853  0DDF  00F3               	movwf	LCD_Write_Char@y
  8854                           
  8855                           ;lcd.c: 228: RB0 = 1;
  8856  0DE0  0020               	movlb	0	; select bank0
  8857  0DE1  140D               	bsf	13,0	;volatile
  8858                           
  8859                           ;lcd.c: 229: LCD_Port(y>>4);
  8860  0DE2  0873               	movf	LCD_Write_Char@y,w
  8861  0DE3  00F1               	movwf	??_LCD_Write_Char
  8862  0DE4  3004               	movlw	4
  8863  0DE5                     u2015:	
  8864  0DE5  36F1               	lsrf	??_LCD_Write_Char,f
  8865  0DE6  0B89               	decfsz	9,f
  8866  0DE7  2DE5               	goto	u2015
  8867  0DE8  0871               	movf	??_LCD_Write_Char,w
  8868  0DE9  318D  250F  318D   	fcall	_LCD_Port
  8869                           
  8870                           ;lcd.c: 230: RB1 = 1;
  8871  0DEC  0020               	movlb	0	; select bank0
  8872  0DED  148D               	bsf	13,1	;volatile
  8873                           
  8874                           ;lcd.c: 231: RB1 = 0;
  8875  0DEE  108D               	bcf	13,1	;volatile
  8876                           
  8877                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  8878  0DEF  3003               	movlw	3
  8879  0DF0  00F1               	movwf	??_LCD_Write_Char
  8880  0DF1                     u2987:	
  8881  0DF1  0BF1               	decfsz	??_LCD_Write_Char,f
  8882  0DF2  2DF1               	goto	u2987
  8883                           
  8884                           ;lcd.c: 233: LCD_Port(temp);
  8885  0DF3  0872               	movf	LCD_Write_Char@temp,w
  8886  0DF4  318D  250F  318D   	fcall	_LCD_Port
  8887                           
  8888                           ;lcd.c: 234: RB1 = 1;
  8889  0DF7  0020               	movlb	0	; select bank0
  8890  0DF8  148D               	bsf	13,1	;volatile
  8891                           
  8892                           ;lcd.c: 235: RB1 = 0;
  8893  0DF9  108D               	bcf	13,1	;volatile
  8894                           
  8895                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  8896  0DFA  3003               	movlw	3
  8897  0DFB  00F1               	movwf	??_LCD_Write_Char
  8898  0DFC                     u2997:	
  8899  0DFC  0BF1               	decfsz	??_LCD_Write_Char,f
  8900  0DFD  2DFC               	goto	u2997
  8901  0DFE  0008               	return
  8902  0DFF                     __end_of_LCD_Write_Char:	
  8903                           
  8904                           	psect	text30
  8905  0CD4                     __ptext30:	
  8906 ;; *************** function _LCD_Cmd *****************
  8907 ;; Defined at:
  8908 ;;		line 65 in file "../PWMTest.X/lcd.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;  a               1    wreg     unsigned char 
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;  a               1    2[COMMON] unsigned char 
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  1    wreg      void 
  8915 ;; Registers used:
  8916 ;;		wreg, status,2, status,0, pclath, cstack
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8926 ;;Total ram usage:        2 bytes
  8927 ;; Hardware stack levels used:    1
  8928 ;; Hardware stack levels required when called:    1
  8929 ;; This function calls:
  8930 ;;		_LCD_Port
  8931 ;; This function is called by:
  8932 ;;		_InitCustomChars
  8933 ;;		_LCD_Clear
  8934 ;;		_LCD_Set_Cursor
  8935 ;;		_LCD_Init
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           
  8939                           
  8940                           ;psect for function _LCD_Cmd
  8941  0CD4                     _LCD_Cmd:	
  8942                           
  8943                           ;incstack = 0
  8944                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8945                           ;LCD_Cmd@a stored from wreg
  8946  0CD4  00F2               	movwf	LCD_Cmd@a
  8947                           
  8948                           ;lcd.c: 67: RB0 = 0;
  8949  0CD5  0020               	movlb	0	; select bank0
  8950  0CD6  100D               	bcf	13,0	;volatile
  8951                           
  8952                           ;lcd.c: 68: LCD_Port(a);
  8953  0CD7  0872               	movf	LCD_Cmd@a,w
  8954  0CD8  318D  250F  318C   	fcall	_LCD_Port
  8955                           
  8956                           ;lcd.c: 69: RB1 = 1;
  8957  0CDB  0020               	movlb	0	; select bank0
  8958  0CDC  148D               	bsf	13,1	;volatile
  8959                           
  8960                           ;lcd.c: 70: RB1 = 0;
  8961  0CDD  108D               	bcf	13,1	;volatile
  8962                           
  8963                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
  8964  0CDE  30F9               	movlw	249
  8965  0CDF  00F1               	movwf	??_LCD_Cmd
  8966  0CE0                     u3007:	
  8967  0CE0  0000               	nop
  8968  0CE1  0BF1               	decfsz	??_LCD_Cmd,f
  8969  0CE2  2CE0               	goto	u3007
  8970  0CE3  3200               	nop2	;nop
  8971  0CE4  0000               	nop
  8972  0CE5  0008               	return
  8973  0CE6                     __end_of_LCD_Cmd:	
  8974                           
  8975                           	psect	text31
  8976  0D0F                     __ptext31:	
  8977 ;; *************** function _LCD_Port *****************
  8978 ;; Defined at:
  8979 ;;		line 41 in file "../PWMTest.X/lcd.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  a               1    wreg     unsigned char 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  a               1    0[COMMON] unsigned char 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8997 ;;Total ram usage:        1 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_LCD_Cmd
  9003 ;;		_LCD_Init
  9004 ;;		_LCD_Write_Char
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           
  9009                           ;psect for function _LCD_Port
  9010  0D0F                     _LCD_Port:	
  9011                           
  9012                           ;incstack = 0
  9013                           ; Regs used in _LCD_Port: [wreg]
  9014                           ;LCD_Port@a stored from wreg
  9015  0D0F  00F0               	movwf	LCD_Port@a
  9016                           
  9017                           ;lcd.c: 43: if(a & 1)
  9018  0D10  1C70               	btfss	LCD_Port@a,0
  9019  0D11  2D15               	goto	l181
  9020                           
  9021                           ;lcd.c: 44: RB2 = 1;
  9022  0D12  0020               	movlb	0	; select bank0
  9023  0D13  150D               	bsf	13,2	;volatile
  9024  0D14  2D17               	goto	l1647
  9025  0D15                     l181:	
  9026                           
  9027                           ;lcd.c: 45: else
  9028                           ;lcd.c: 46: RB2 = 0;
  9029  0D15  0020               	movlb	0	; select bank0
  9030  0D16  110D               	bcf	13,2	;volatile
  9031  0D17                     l1647:	
  9032                           
  9033                           ;lcd.c: 48: if(a & 2)
  9034  0D17  1CF0               	btfss	LCD_Port@a,1
  9035  0D18  2D1B               	goto	l183
  9036                           
  9037                           ;lcd.c: 49: RB3 = 1;
  9038  0D19  158D               	bsf	13,3	;volatile
  9039  0D1A  2D1C               	goto	l1651
  9040  0D1B                     l183:	
  9041                           
  9042                           ;lcd.c: 50: else
  9043                           ;lcd.c: 51: RB3 = 0;
  9044  0D1B  118D               	bcf	13,3	;volatile
  9045  0D1C                     l1651:	
  9046                           
  9047                           ;lcd.c: 53: if(a & 4)
  9048  0D1C  1D70               	btfss	LCD_Port@a,2
  9049  0D1D  2D20               	goto	l185
  9050                           
  9051                           ;lcd.c: 54: RB4 = 1;
  9052  0D1E  160D               	bsf	13,4	;volatile
  9053  0D1F  2D21               	goto	l1655
  9054  0D20                     l185:	
  9055                           
  9056                           ;lcd.c: 55: else
  9057                           ;lcd.c: 56: RB4 = 0;
  9058  0D20  120D               	bcf	13,4	;volatile
  9059  0D21                     l1655:	
  9060                           
  9061                           ;lcd.c: 58: if(a & 8)
  9062  0D21  1DF0               	btfss	LCD_Port@a,3
  9063  0D22  2D25               	goto	l187
  9064                           
  9065                           ;lcd.c: 59: RB5 = 1;
  9066  0D23  168D               	bsf	13,5	;volatile
  9067  0D24  0008               	return
  9068  0D25                     l187:	
  9069                           
  9070                           ;lcd.c: 60: else
  9071                           ;lcd.c: 61: RB5 = 0;
  9072  0D25  128D               	bcf	13,5	;volatile
  9073  0D26  0008               	return
  9074  0D27                     __end_of_LCD_Port:	
  9075                           
  9076                           	psect	text32
  9077  0CA6                     __ptext32:	
  9078 ;; *************** function _ADCC_GetSingleConversion *****************
  9079 ;; Defined at:
  9080 ;;		line 78 in file "../PWMTest.X/adcc.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  channel         1    wreg     enum E13559
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;  channel         1    3[COMMON] enum E13559
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  2    0[COMMON] unsigned int 
  9087 ;; Registers used:
  9088 ;;		wreg
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9094 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;Total ram usage:        4 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		_main
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           
  9108                           ;psect for function _ADCC_GetSingleConversion
  9109  0CA6                     _ADCC_GetSingleConversion:	
  9110                           
  9111                           ;incstack = 0
  9112                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  9113                           ;ADCC_GetSingleConversion@channel stored from wreg
  9114  0CA6  00F3               	movwf	ADCC_GetSingleConversion@channel
  9115                           
  9116                           ;adcc.c: 81: ADPCH = channel;
  9117  0CA7  0873               	movf	ADCC_GetSingleConversion@channel,w
  9118  0CA8  0021               	movlb	1	; select bank1
  9119  0CA9  009E               	movwf	30	;volatile
  9120                           
  9121                           ;adcc.c: 84: ADCON0bits.ADON = 1;
  9122  0CAA  1793               	bsf	19,7	;volatile
  9123                           
  9124                           ;adcc.c: 87: ADCON0bits.ADCONT = 0;
  9125  0CAB  1313               	bcf	19,6	;volatile
  9126                           
  9127                           ;adcc.c: 90: ADCON0bits.ADGO = 1;
  9128  0CAC  1413               	bsf	19,0	;volatile
  9129  0CAD                     l50:	
  9130                           ;adcc.c: 94: {
  9131                           
  9132                           ;adcc.c: 93: while (ADCON0bits.ADGO)
  9133                           
  9134  0CAD  1813               	btfsc	19,0	;volatile
  9135  0CAE  2CAD               	goto	l50
  9136                           
  9137                           ;adcc.c: 95: }
  9138                           ;adcc.c: 98: return ((ADRESH << 8) + ADRESL);
  9139  0CAF  080D               	movf	13,w	;volatile
  9140  0CB0  00F1               	movwf	?_ADCC_GetSingleConversion+1
  9141  0CB1  080C               	movf	12,w	;volatile
  9142  0CB2  00F0               	movwf	?_ADCC_GetSingleConversion
  9143  0CB3  0008               	return
  9144  0CB4                     __end_of_ADCC_GetSingleConversion:	
  9145  007E                     btemp	set	126	;btemp
  9146  007E                     wtemp	set	126
  9147  007E                     wtemp0	set	126
  9148  0080                     wtemp1	set	128
  9149  0082                     wtemp2	set	130
  9150  0084                     wtemp3	set	132
  9151  0086                     wtemp4	set	134
  9152  0088                     wtemp5	set	136
  9153  007F                     wtemp6	set	127
  9154  007E                     ttemp	set	126
  9155  007E                     ttemp0	set	126
  9156  0081                     ttemp1	set	129
  9157  0084                     ttemp2	set	132
  9158  0087                     ttemp3	set	135
  9159  007F                     ttemp4	set	127
  9160  007E                     ltemp	set	126
  9161  007E                     ltemp0	set	126
  9162  0082                     ltemp1	set	130
  9163  0086                     ltemp2	set	134
  9164  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    27
    Data        24
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80      0      49
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _LCD_Write_Int->___fttol
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   30851
                                             45 BANK0     31    31      0
           _ADCC_GetSingleConversion
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftsub
                            ___fttol
                           ___lwtoft
                                _log
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   14825
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    6333
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2470
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1890
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1821
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3395
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3222
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2556
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    1911
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     756
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _InitCustomChars
     _LCD_Cmd
       _LCD_Port
     _LCD_Write_Char
       _LCD_Port
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Init
     _LCD_Cmd
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
   ___lwtoft
     ___ftpack
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      31       7       61.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      8F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Nov 03 01:47:53 2017

                      __CFG_CP$OFF 0000                                 l50 0CAD  
                     ___awdiv@sign 0076                ___wmul@multiplicand 0072  
      __size_of_PWM6_LoadDutyValue 0016                       ___ftadd@exp1 003C  
                     ___ftadd@exp2 003B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003A                                l181 0D15  
                              l270 06AF                                l183 0D1B  
                              l271 06CB                                l416 011C  
                              l185 0D20                                l361 0D5F  
                              l530 0FE9                                l522 0FCE  
                              l187 0D25                                l613 01F9  
                              l269 06A3                                l529 0FE1  
                              l553 0587                                _GIE 005F  
                              _RB0 0068                                _RB1 0069  
                              _RB2 006A                                _RB3 006B  
                              _RB4 006C                                _RB5 006D  
                     __CFG_CPD$OFF 0000                                _log 02BC  
                     ___awmod@sign 0076                    _TMR2_Initialize 0CB4  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCD_Cmd 0CE6                       __CFG_ZCD$OFF 0000  
                     ___ftdiv@cntr 002A                     _LCD_Set_Cursor 008C  
                     ___ftdiv@sign 002F                               l2013 0F95  
                             l2301 01A5                               l2055 0DCD  
                             l2223 013D                               l2215 012D  
                             l2049 0DBD                               l2161 0479  
                             l2145 043F                               l2241 0184  
                             l2233 016B                               l2225 014B  
                             l2321 01E3                               l2163 047D  
                             l2155 0446                               l2251 022A  
                             l2069 00AC                               l2173 0499  
                             l2165 0485                               l2157 0475  
                             l2237 0176                               l1621 0FB5  
                             l1701 0540                               l2333 020A  
                             l2079 00CB                               l2175 04C5  
                             l2167 0495                               l1631 0FDB  
                             l1623 0FBA                               l1615 0FA4  
                             l2271 0281                               l1711 0562  
                             l2327 01F0                               l2319 01D5  
                             l2089 00EB                               l2257 0240  
                             l1721 0583                               l1713 0566  
                             l2329 01FC                               l1651 0D1C  
                             l2179 04D3                               l1619 0FAB  
                             l1707 0553                               l2291 0D7A  
                             l2195 02EB                               l1629 0FD3  
                             l1725 0599                               l1709 055D  
                             l1661 0D59                               l2189 02DA  
                             l2373 067F                               l2365 060A  
                             l1655 0D21                               l1647 0D17  
                             l2279 029A                               l1719 0579  
                             l2391 06DF                               l1913 0F37  
                             l1905 0F26                               l1729 05AB  
                             l2393 06E1                               l2385 06C7  
                             l1739 05C6                               l1683 0517  
                             l1771 03D9                               l1755 0396  
                             l1909 0F2F                               l1925 0EB0  
                             l1749 0380                               l1951 0EE6  
                             l1943 0ED5                               l1679 0510  
                             l1783 03F5                               l1767 03D1  
                             l1881 0EF5                               l1937 0EBD  
                             l1929 0EB7                               l1689 0526  
                             l1939 0EC9                               l1947 0EDE  
                             l1963 0D9A                               l1971 0E46  
                             l1779 03ED                               l1887 0F00  
                             l1975 0E5C                               l1897 0F08  
                             l1899 0F14                               l1995 0E7D  
                             ?_log 0047                               u2015 0DE5  
                             _LATA 0016                               _LATB 0017  
                             u3007 0CE0                               u2055 0F0B  
                             _LATC 0018                               u1505 0FD6  
                             u2075 0F15                               u2155 0EC0  
                             u2325 0098                               u2085 0F1F  
                             u2095 0F27                               u2175 0ECF  
                             u1615 0D60                               u2345 00B7  
                             u2185 0ED6                               u1545 0FF0  
                             u1465 0FB0                               u1625 0D65  
                             _T2PR 028D                               u2365 00D7  
                             u2285 0D08                               u1485 0FC9  
                             u2390 0428                               u2455 04B3  
                             u2535 0140                               u1735 0541  
                             u2385 00F7                               u2625 0252  
                             u1825 057A                               u2705 01AC  
                             u1905 03B2                               u2555 014C  
                             u2635 0262                               u2565 0160  
                             u2645 0282                               u1765 0554  
                             u1925 03DA                               u2575 016C  
                             u2655 0291                               u2735 01D6  
                             u1935 03E0                               u2815 069D  
                             u2665 029B                               u2825 06A9  
                             u2907 0032                               u1795 0567  
                             u2835 06B9                               u2917 003B  
                             u2765 01F1                               u1965 03F6  
                             u1990 0E2E                               u2927 0044  
                             u1975 03FC                               u1895 03A2  
                             u2855 06D1                               u2937 0051  
                             u2947 005E                               u2957 006B  
                             u2877 05EA                               u2967 007A  
                             u2887 001A                               u2977 0088  
                             u2897 0027                               u2987 0DF1  
                             u2997 0DFC                               _WPUA 0F39  
                             _WPUB 0F44                               _WPUC 0F4F  
                             _WPUE 0F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                               _main 05DE  
                     ___ftpack@arg 0070                 __size_of_LCD_Clear 0008  
                     ___ftpack@exp 0073                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             log@x 0047                               ltemp 007E  
                             start 0002                               ttemp 007E  
                             wtemp 007E                      __CFG_CSWEN$ON 0000  
                    __CFG_MCLRE$ON 0000                       ___ftmul@cntr 002E  
                    _LCD_Write_Int 041D                       ___ftmul@sign 002F  
                     ___fttol@exp1 007D                              ??_log 004A  
                     ___fttol@lval 0079                   __end_of_LCD_Init 008C  
                 __end_of_LCD_Port 0D27     __size_of_OSCILLATOR_Initialize 0009  
    __end_of_OSCILLATOR_Initialize 0CA6                    __end_of___aldiv 018D  
                            _ADACQ 009D                              _ADCAP 009B  
                            _ADACT 0099                              ?_main 0070  
                            _ADCLK 0098                              _ADPCH 009E  
                            _ADREF 009A                    __end_of___awdiv 0F3C  
                            _ADPRE 009C                    __end_of___ftadd 05DE  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 0EEB  
                            _ADRPT 010D                    __end_of___ftdiv 02BC  
                  __end_of___ftmul 041D                    ___awdiv@divisor 0070  
                  __end_of___ftsub 0D90                    __end_of___fttol 0213  
                            _T2CON 028E                main@readTemperature 0067  
                            _T2HLT 028F                              _T2TMR 028C  
                            _T2RST 0291                    ___awdiv@counter 0075  
                            _OSCEN 0891                              _TRISA 0011  
                            _TRISB 0012                              _TRISC 0013  
                  _PWM6_Initialize 0004             __end_of_LCD_Set_Cursor 010B  
                    ___awtoft@sign 007D                              _frexp 0E6B  
                            _errno 006C                      ___ftpack@sign 0074  
                            main@R 005A                     __CFG_BOREN$OFF 0000  
                     main@setpoint 005D                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                 InitCustomChars@i 0076                     ?_LCD_Write_Int 0020  
                   _LCD_Write_Char 0DD5                    __initialization 07E6  
                      log@exponent 004B                       __end_of_main 07E6  
          __end_of_TMR2_Initialize 0CC3                             ??_main 004D  
                    ___fttol@sign1 0078                  __end_of_LCD_Clear 0C9D  
                        ??_LCD_Cmd 0071                    ?_LCD_Set_Cursor 0073  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0070                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0072  
                           _ADUTHL 0110                   __end_of___awtoft 0DB0  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 1000  
               __CFG_RSTOSC$HFINT1 0000                             _RA1PPS 0F11  
                   __CFG_WDTCCS$SC 0000                             _FVRCON 090C  
                 __end_of___lwtoft 0CF9                             _OSCFRQ 0893  
           __end_of_LCD_Write_Char 0DFF                     __CFG_PWRTE$OFF 0000  
                     _CCPTMRS1bits 021F                             ___ftge 0E30  
           LCD_Write_Int@numPlaces 0023                          ??___aldiv 0078  
                           ___wmul 0D57                          ??___awdiv 0074  
                        ??___ftadd 0036                     __CFG_STVREN$ON 0000  
                        ??___awmod 0074                          ??___ftdiv 0026  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0074            __end_of_PWM6_Initialize 0011  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075              ___ftmul@f3_as_product 002B  
                  _ADCC_Initialize 0D27  __size_of_ADCC_GetSingleConversion 000E  
        ?_ADCC_GetSingleConversion 0070                   LCD_Write_Int@str 002A  
                    main@steinhart 0069                    _InitCustomChars 0DB0  
                  LCD_Set_Cursor@w 0078                    LCD_Set_Cursor@x 0076  
                  LCD_Set_Cursor@y 0073                    LCD_Set_Cursor@z 0077  
                _SYSTEM_Initialize 0CC3                   __end_oflog@coeff 101B  
          __end_of__initialization 07FD                          ?_LCD_Init 0070  
                        ?_LCD_Port 0070                         ___ftadd@f1 0030  
                       ___ftadd@f2 0033                         ___ftge@ff1 0070  
                       ___ftge@ff2 0073                    ??_LCD_Write_Int 0025  
               ?_SYSTEM_Initialize 0070                       eval_poly@res 0044  
                       ___ftdiv@f1 0023                         ___ftdiv@f2 0020  
                       ___ftdiv@f3 002B                    ?_LCD_Write_Char 0070  
                    LCD_Init@style 0075                         ___awtoft@c 0078  
                       ___ftmul@f1 0020                         ___ftmul@f2 0023  
                       ___ftsub@f1 0040                         ___ftsub@f2 003D  
                       ___fttol@f1 0070                     __pcstackCOMMON 0070  
                        LCD_Port@a 0070                       __pidataBANK1 0D3F  
              ??_SYSTEM_Initialize 0071                      __end_of_frexp 0EA6  
                 ?_TMR2_Initialize 0070                         ___lwtoft@c 0078  
                          ??_frexp 0074          __end_of_SYSTEM_Initialize 0CD4  
                       __pbssBANK0 006C                         __pbssBANK1 00A0  
               __size_of_eval_poly 0060                         ??_LCD_Init 0073  
                       ??_LCD_Port 0070                         __pmaintext 05DE  
                          ?___ftge 0070                            ?___wmul 0070  
                  __CFG_PPS1WAY$ON 0000            __end_of_ADCC_Initialize 0D3F  
       __end_of_PWM6_LoadDutyValue 0D0F                   ?_PWM6_Initialize 0070  
                        ?___awtoft 0078                          ?___ftpack 0070  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078            __end_of_InitCustomChars 0DD5  
                          _LCD_Cmd 0CD4                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
                          _PWM6DCH 038D                            _PWM6DCL 038C  
                          _PWM6CON 038E                            _PPSLOCK 0E8F  
             __CFG_SCANE$available 0000                            ___aldiv 010B  
                          ___cgram 00B9                    __size_of___ftge 003B  
                          ___awdiv 0EEB                            ___ftadd 04E8  
                          ___awmod 0EA6                            ___ftdiv 0213  
                  __size_of___wmul 001B                            ___ftmul 0369  
                          ___ftsub 0D72                            ___fttol 018D  
                       ??___awtoft 007B                         ??___ftpack 0075  
                __end_of_eval_poly 0F9C                   ??_LCD_Set_Cursor 0074  
                          __ptext1 02BC                            __ptext2 0E6B  
                          __ptext3 0F3C                            __ptext4 0D57  
                          __ptext5 0369                            __ptext6 0E30  
                          __ptext7 0D90                            __ptext8 0CE6  
                          __ptext9 018D                         ??___lwtoft 007B  
            _OSCILLATOR_Initialize 0C9D                          _T2CONbits 028E  
                     __size_of_log 00AD                   ___awmod@dividend 0072  
                 ___aldiv@dividend 0074           ??_PIN_MANAGER_Initialize 0070  
                          _samples 00A0                          _LCD_Clear 0C95  
       __size_of_SYSTEM_Initialize 0011                            clrloop0 0C8A  
             end_of_initialization 07FD                     main@outCurrent 0065  
                          init_ram 0C8F                            initloop 0C90  
                 ___aldiv@quotient 0022                  LCD_Write_Int@sign 0024  
                     __pstringtext 1000                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 0CB4              __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_InitCustomChars 0070                         ?_LCD_Clear 0070  
                 __CFG_FEXTOSC$OFF 0000                   ??_LCD_Write_Char 0071  
                      ___ftdiv@exp 002E                  __size_of_LCD_Init 007B  
                __size_of_LCD_Port 0018                         main@totals 005F  
                      ___ftmul@exp 002A                     __end_of___ftge 0E6B  
                   __end_of___wmul 0D72             ?_OSCILLATOR_Initialize 0070  
              start_initialization 07E6                         eval_poly@d 0040  
                       eval_poly@n 0042                         eval_poly@x 003D  
  __size_of_PIN_MANAGER_Initialize 0031                        __end_of_log 0369  
                       frexp@value 0070           LCD_Write_Int@fieldLength 0022  
            __end_of_LCD_Write_Int 04E8                   __CFG_LPBOREN$OFF 0000  
                         ??___ftge 0076                           ??___wmul 0074  
                      __pdataBANK1 00B9                    LCD_Write_Char@a 0074  
                  LCD_Write_Char@y 0073                           ?_LCD_Cmd 0070  
                __size_of___awtoft 0020           _ADCC_GetSingleConversion 0CA6  
                __size_of___ftpack 0064                           LCD_Cmd@a 0072  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                 _PWM6_LoadDutyValue 0CF9  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0073  
              ?_PWM6_LoadDutyValue 0070             _PIN_MANAGER_Initialize 0DFF  
                         ?___aldiv 0070    ADCC_GetSingleConversion@channel 0073  
                         ?___awdiv 0070                           ?___ftadd 0030  
                         ?___awmod 0070                           ?___ftdiv 0020  
                         ?___ftmul 0020                           ?___ftsub 003D  
                         ?___fttol 0070               ??_PWM6_LoadDutyValue 0072  
                        _eval_poly 0F3C           __size_of_PWM6_Initialize 000D  
                   __size_of_frexp 003B                           _T2CLKCON 0290  
           main@readTemperatureOld 0063                    ___aldiv@divisor 0070  
                  ___aldiv@counter 0020                           _LCD_Init 0011  
                   ___wmul@product 0074                           _LCD_Port 0D0F  
                        clear_ram0 0C89                           _PIE0bits 0716  
                         _PIR4bits 0710                         _ADCON0bits 0093  
                ___wmul@multiplier 0070                         ?_eval_poly 003D  
                 __size_of_LCD_Cmd 0012                  ??_TMR2_Initialize 0070  
                        frexp@eptr 0073            ??_OSCILLATOR_Initialize 0070  
                   LCD_Write_Int@i 0031                     LCD_Write_Int@j 002F  
                 __size_of___aldiv 0082                   __size_of___awdiv 0051  
                 __size_of___ftadd 00F6                   __size_of___awmod 0045  
                 __size_of___ftdiv 00A9                   __size_of___ftmul 00B4  
                 __size_of___ftsub 001E                   __size_of___fttol 0086  
                         ___awtoft 0D90                           ___ftpack 0F9C  
                         ___lwtoft 0CE6           __size_of_ADCC_Initialize 0018  
                  main@sampleIndex 006E                           _main$923 0057  
                         __ptext10 0D72                           __ptext11 04E8  
                         __ptext20 0D27                           __ptext12 0213  
                         __ptext21 0CF9                           __ptext13 0F9C  
                         __ptext30 0CD4                           __ptext22 041D  
                         __ptext14 010B                           __ptext31 0D0F  
                         __ptext23 0EA6                           __ptext15 0CC3  
                         __ptext32 0CA6                           __ptext24 0EEB  
                         __ptext16 0CB4                           __ptext25 008C  
                         __ptext17 0004                           __ptext26 0011  
                         __ptext18 0DFF                           __ptext27 0C95  
                         __ptext19 0C9D                           __ptext28 0DB0  
                         __ptext29 0DD5            __size_of_LCD_Set_Cursor 007F  
         __size_of_InitCustomChars 0025                LCD_Write_Int@F13684 00B4  
                ??_PWM6_Initialize 0070                      __size_of_main 0208  
             __CFG_WDTCWS$WDTCWS_7 0000         ??_ADCC_GetSingleConversion 0073  
      PIN_MANAGER_Initialize@state 0070                           log@coeff 1000  
                      ??_eval_poly 007E                 LCD_Write_Char@temp 0072  
          ?_PIN_MANAGER_Initialize 0070                  __CFG_CLKOUTEN$OFF 0000  
                      _PPSLOCKbits 0E8F            __size_of_LCD_Write_Char 002A  
               LCD_Set_Cursor@temp 0079                 LCD_Write_Int@value 0020  
                     ___aldiv@sign 0021             __size_of_LCD_Write_Int 00CB  
      PWM6_LoadDutyValue@dutyValue 0070     __end_of_PIN_MANAGER_Initialize 0E30  
                ??_ADCC_Initialize 0070                  ??_InitCustomChars 0075  
