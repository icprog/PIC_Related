

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May 13 01:30:54 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5BC,52
    63                           	dabs	1,0x238C,0,_samples
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 1.41
    67                           ; Generated 25/01/2017 GMT
    68                           ; 
    69                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F18855 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  001C                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  008C                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0110                     	;# 
   155  0110                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0112                     	;# 
   159  0113                     	;# 
   160  0114                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0116                     	;# 
   165  0117                     	;# 
   166  0119                     	;# 
   167  0119                     	;# 
   168  0119                     	;# 
   169  011A                     	;# 
   170  011A                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011C                     	;# 
   178  011C                     	;# 
   179  011C                     	;# 
   180  011D                     	;# 
   181  011D                     	;# 
   182  011D                     	;# 
   183  011E                     	;# 
   184  011E                     	;# 
   185  011E                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  018E                     	;# 
   194  018F                     	;# 
   195  0190                     	;# 
   196  0191                     	;# 
   197  0192                     	;# 
   198  0196                     	;# 
   199  0197                     	;# 
   200  0198                     	;# 
   201  0199                     	;# 
   202  019A                     	;# 
   203  019B                     	;# 
   204  019C                     	;# 
   205  020C                     	;# 
   206  020C                     	;# 
   207  020D                     	;# 
   208  020E                     	;# 
   209  020F                     	;# 
   210  020F                     	;# 
   211  0210                     	;# 
   212  0210                     	;# 
   213  0211                     	;# 
   214  0211                     	;# 
   215  0212                     	;# 
   216  0212                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0216                     	;# 
   222  0216                     	;# 
   223  0217                     	;# 
   224  0217                     	;# 
   225  0218                     	;# 
   226  0218                     	;# 
   227  0219                     	;# 
   228  021A                     	;# 
   229  021B                     	;# 
   230  021B                     	;# 
   231  021C                     	;# 
   232  021C                     	;# 
   233  021D                     	;# 
   234  021D                     	;# 
   235  021E                     	;# 
   236  021F                     	;# 
   237  028C                     	;# 
   238  028C                     	;# 
   239  028D                     	;# 
   240  028D                     	;# 
   241  028E                     	;# 
   242  028F                     	;# 
   243  0290                     	;# 
   244  0290                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0292                     	;# 
   248  0293                     	;# 
   249  0293                     	;# 
   250  0294                     	;# 
   251  0295                     	;# 
   252  0296                     	;# 
   253  0296                     	;# 
   254  0297                     	;# 
   255  0298                     	;# 
   256  0298                     	;# 
   257  0299                     	;# 
   258  0299                     	;# 
   259  029A                     	;# 
   260  029B                     	;# 
   261  029C                     	;# 
   262  029C                     	;# 
   263  029D                     	;# 
   264  030C                     	;# 
   265  030C                     	;# 
   266  030D                     	;# 
   267  030E                     	;# 
   268  030F                     	;# 
   269  0310                     	;# 
   270  0310                     	;# 
   271  0311                     	;# 
   272  0312                     	;# 
   273  0313                     	;# 
   274  0314                     	;# 
   275  0314                     	;# 
   276  0315                     	;# 
   277  0316                     	;# 
   278  0317                     	;# 
   279  0318                     	;# 
   280  0318                     	;# 
   281  0319                     	;# 
   282  031A                     	;# 
   283  031B                     	;# 
   284  031C                     	;# 
   285  031C                     	;# 
   286  031D                     	;# 
   287  031E                     	;# 
   288  031F                     	;# 
   289  038C                     	;# 
   290  038D                     	;# 
   291  038E                     	;# 
   292  0390                     	;# 
   293  0391                     	;# 
   294  0392                     	;# 
   295  040C                     	;# 
   296  040D                     	;# 
   297  040E                     	;# 
   298  040F                     	;# 
   299  0410                     	;# 
   300  0411                     	;# 
   301  0416                     	;# 
   302  0416                     	;# 
   303  0417                     	;# 
   304  0418                     	;# 
   305  0418                     	;# 
   306  0419                     	;# 
   307  041A                     	;# 
   308  041A                     	;# 
   309  041B                     	;# 
   310  041C                     	;# 
   311  041C                     	;# 
   312  041D                     	;# 
   313  041E                     	;# 
   314  041F                     	;# 
   315  048C                     	;# 
   316  048C                     	;# 
   317  048D                     	;# 
   318  048E                     	;# 
   319  048F                     	;# 
   320  048F                     	;# 
   321  0490                     	;# 
   322  0491                     	;# 
   323  0492                     	;# 
   324  0492                     	;# 
   325  0493                     	;# 
   326  0494                     	;# 
   327  0495                     	;# 
   328  0495                     	;# 
   329  0496                     	;# 
   330  0497                     	;# 
   331  0498                     	;# 
   332  0499                     	;# 
   333  049A                     	;# 
   334  049B                     	;# 
   335  049C                     	;# 
   336  049D                     	;# 
   337  050C                     	;# 
   338  050C                     	;# 
   339  050D                     	;# 
   340  050E                     	;# 
   341  050F                     	;# 
   342  050F                     	;# 
   343  0510                     	;# 
   344  0511                     	;# 
   345  0512                     	;# 
   346  0512                     	;# 
   347  0513                     	;# 
   348  0514                     	;# 
   349  0515                     	;# 
   350  0515                     	;# 
   351  0516                     	;# 
   352  0517                     	;# 
   353  0518                     	;# 
   354  0519                     	;# 
   355  051A                     	;# 
   356  051B                     	;# 
   357  051C                     	;# 
   358  051D                     	;# 
   359  058C                     	;# 
   360  058C                     	;# 
   361  058D                     	;# 
   362  058E                     	;# 
   363  058F                     	;# 
   364  058F                     	;# 
   365  0590                     	;# 
   366  0591                     	;# 
   367  0592                     	;# 
   368  0593                     	;# 
   369  060C                     	;# 
   370  060D                     	;# 
   371  060E                     	;# 
   372  060F                     	;# 
   373  0610                     	;# 
   374  0611                     	;# 
   375  0612                     	;# 
   376  0613                     	;# 
   377  0614                     	;# 
   378  0616                     	;# 
   379  0617                     	;# 
   380  0618                     	;# 
   381  0619                     	;# 
   382  061A                     	;# 
   383  061B                     	;# 
   384  061C                     	;# 
   385  061D                     	;# 
   386  061E                     	;# 
   387  068C                     	;# 
   388  068D                     	;# 
   389  068E                     	;# 
   390  068F                     	;# 
   391  0690                     	;# 
   392  0691                     	;# 
   393  0692                     	;# 
   394  0693                     	;# 
   395  0694                     	;# 
   396  070C                     	;# 
   397  070D                     	;# 
   398  070E                     	;# 
   399  070F                     	;# 
   400  0710                     	;# 
   401  0711                     	;# 
   402  0712                     	;# 
   403  0713                     	;# 
   404  0714                     	;# 
   405  0716                     	;# 
   406  0717                     	;# 
   407  0718                     	;# 
   408  0719                     	;# 
   409  071A                     	;# 
   410  071B                     	;# 
   411  071C                     	;# 
   412  071D                     	;# 
   413  071E                     	;# 
   414  0796                     	;# 
   415  0797                     	;# 
   416  0798                     	;# 
   417  0799                     	;# 
   418  079A                     	;# 
   419  079B                     	;# 
   420  080C                     	;# 
   421  080D                     	;# 
   422  080E                     	;# 
   423  080F                     	;# 
   424  0810                     	;# 
   425  0811                     	;# 
   426  0812                     	;# 
   427  0813                     	;# 
   428  0814                     	;# 
   429  081A                     	;# 
   430  081B                     	;# 
   431  081C                     	;# 
   432  081D                     	;# 
   433  081E                     	;# 
   434  081F                     	;# 
   435  088C                     	;# 
   436  088D                     	;# 
   437  088E                     	;# 
   438  088F                     	;# 
   439  0890                     	;# 
   440  0891                     	;# 
   441  0892                     	;# 
   442  0893                     	;# 
   443  0895                     	;# 
   444  0896                     	;# 
   445  0897                     	;# 
   446  0898                     	;# 
   447  0899                     	;# 
   448  089A                     	;# 
   449  089B                     	;# 
   450  090C                     	;# 
   451  090E                     	;# 
   452  090F                     	;# 
   453  091F                     	;# 
   454  091F                     	;# 
   455  098F                     	;# 
   456  098F                     	;# 
   457  0990                     	;# 
   458  0991                     	;# 
   459  0992                     	;# 
   460  0993                     	;# 
   461  0994                     	;# 
   462  0995                     	;# 
   463  0996                     	;# 
   464  0997                     	;# 
   465  0E0F                     	;# 
   466  0E10                     	;# 
   467  0E11                     	;# 
   468  0E12                     	;# 
   469  0E13                     	;# 
   470  0E14                     	;# 
   471  0E15                     	;# 
   472  0E16                     	;# 
   473  0E17                     	;# 
   474  0E18                     	;# 
   475  0E19                     	;# 
   476  0E1A                     	;# 
   477  0E1B                     	;# 
   478  0E1C                     	;# 
   479  0E1D                     	;# 
   480  0E1E                     	;# 
   481  0E1F                     	;# 
   482  0E20                     	;# 
   483  0E21                     	;# 
   484  0E22                     	;# 
   485  0E23                     	;# 
   486  0E24                     	;# 
   487  0E25                     	;# 
   488  0E26                     	;# 
   489  0E27                     	;# 
   490  0E28                     	;# 
   491  0E29                     	;# 
   492  0E2A                     	;# 
   493  0E2B                     	;# 
   494  0E2C                     	;# 
   495  0E2D                     	;# 
   496  0E2E                     	;# 
   497  0E2F                     	;# 
   498  0E30                     	;# 
   499  0E31                     	;# 
   500  0E32                     	;# 
   501  0E33                     	;# 
   502  0E34                     	;# 
   503  0E35                     	;# 
   504  0E36                     	;# 
   505  0E37                     	;# 
   506  0E8F                     	;# 
   507  0E90                     	;# 
   508  0E91                     	;# 
   509  0E92                     	;# 
   510  0E93                     	;# 
   511  0E94                     	;# 
   512  0E95                     	;# 
   513  0E96                     	;# 
   514  0E97                     	;# 
   515  0E9C                     	;# 
   516  0E9D                     	;# 
   517  0E9E                     	;# 
   518  0EA1                     	;# 
   519  0EA2                     	;# 
   520  0EA3                     	;# 
   521  0EA4                     	;# 
   522  0EA5                     	;# 
   523  0EA9                     	;# 
   524  0EAA                     	;# 
   525  0EAB                     	;# 
   526  0EAC                     	;# 
   527  0EB1                     	;# 
   528  0EB2                     	;# 
   529  0EB3                     	;# 
   530  0EB8                     	;# 
   531  0EB9                     	;# 
   532  0EBA                     	;# 
   533  0EBB                     	;# 
   534  0EBC                     	;# 
   535  0EBD                     	;# 
   536  0EBE                     	;# 
   537  0EC3                     	;# 
   538  0EC5                     	;# 
   539  0EC6                     	;# 
   540  0EC7                     	;# 
   541  0EC8                     	;# 
   542  0EC9                     	;# 
   543  0ECA                     	;# 
   544  0ECB                     	;# 
   545  0ECC                     	;# 
   546  0F10                     	;# 
   547  0F11                     	;# 
   548  0F12                     	;# 
   549  0F13                     	;# 
   550  0F14                     	;# 
   551  0F15                     	;# 
   552  0F16                     	;# 
   553  0F17                     	;# 
   554  0F18                     	;# 
   555  0F19                     	;# 
   556  0F1A                     	;# 
   557  0F1B                     	;# 
   558  0F1C                     	;# 
   559  0F1D                     	;# 
   560  0F1E                     	;# 
   561  0F1F                     	;# 
   562  0F20                     	;# 
   563  0F21                     	;# 
   564  0F22                     	;# 
   565  0F23                     	;# 
   566  0F24                     	;# 
   567  0F25                     	;# 
   568  0F26                     	;# 
   569  0F27                     	;# 
   570  0F38                     	;# 
   571  0F39                     	;# 
   572  0F3A                     	;# 
   573  0F3B                     	;# 
   574  0F3C                     	;# 
   575  0F3D                     	;# 
   576  0F3E                     	;# 
   577  0F3F                     	;# 
   578  0F40                     	;# 
   579  0F41                     	;# 
   580  0F43                     	;# 
   581  0F44                     	;# 
   582  0F45                     	;# 
   583  0F46                     	;# 
   584  0F47                     	;# 
   585  0F48                     	;# 
   586  0F49                     	;# 
   587  0F4A                     	;# 
   588  0F4B                     	;# 
   589  0F4C                     	;# 
   590  0F4E                     	;# 
   591  0F4F                     	;# 
   592  0F50                     	;# 
   593  0F51                     	;# 
   594  0F52                     	;# 
   595  0F53                     	;# 
   596  0F54                     	;# 
   597  0F55                     	;# 
   598  0F56                     	;# 
   599  0F57                     	;# 
   600  0F65                     	;# 
   601  0F68                     	;# 
   602  0F69                     	;# 
   603  0F6A                     	;# 
   604  0F6B                     	;# 
   605  0FE4                     	;# 
   606  0FE5                     	;# 
   607  0FE6                     	;# 
   608  0FE7                     	;# 
   609  0FE8                     	;# 
   610  0FE9                     	;# 
   611  0FEA                     	;# 
   612  0FEB                     	;# 
   613  0FED                     	;# 
   614  0FEE                     	;# 
   615  0FEF                     	;# 
   616  0000                     	;# 
   617  0001                     	;# 
   618  0002                     	;# 
   619  0003                     	;# 
   620  0004                     	;# 
   621  0005                     	;# 
   622  0006                     	;# 
   623  0007                     	;# 
   624  0008                     	;# 
   625  0009                     	;# 
   626  000A                     	;# 
   627  000B                     	;# 
   628  000C                     	;# 
   629  000D                     	;# 
   630  000E                     	;# 
   631  0010                     	;# 
   632  0011                     	;# 
   633  0012                     	;# 
   634  0013                     	;# 
   635  0016                     	;# 
   636  0017                     	;# 
   637  0018                     	;# 
   638  001C                     	;# 
   639  001C                     	;# 
   640  001D                     	;# 
   641  001D                     	;# 
   642  001E                     	;# 
   643  001F                     	;# 
   644  008C                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  008E                     	;# 
   649  008F                     	;# 
   650  0090                     	;# 
   651  0090                     	;# 
   652  0091                     	;# 
   653  0093                     	;# 
   654  0094                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0097                     	;# 
   658  0098                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009C                     	;# 
   663  009D                     	;# 
   664  009E                     	;# 
   665  010C                     	;# 
   666  010D                     	;# 
   667  010E                     	;# 
   668  010E                     	;# 
   669  010F                     	;# 
   670  0110                     	;# 
   671  0110                     	;# 
   672  0111                     	;# 
   673  0112                     	;# 
   674  0112                     	;# 
   675  0113                     	;# 
   676  0114                     	;# 
   677  0114                     	;# 
   678  0115                     	;# 
   679  0116                     	;# 
   680  0116                     	;# 
   681  0117                     	;# 
   682  0119                     	;# 
   683  0119                     	;# 
   684  0119                     	;# 
   685  011A                     	;# 
   686  011A                     	;# 
   687  011A                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011B                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011C                     	;# 
   694  011C                     	;# 
   695  011C                     	;# 
   696  011D                     	;# 
   697  011D                     	;# 
   698  011D                     	;# 
   699  011E                     	;# 
   700  011E                     	;# 
   701  011E                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  011F                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709  018E                     	;# 
   710  018F                     	;# 
   711  0190                     	;# 
   712  0191                     	;# 
   713  0192                     	;# 
   714  0196                     	;# 
   715  0197                     	;# 
   716  0198                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019C                     	;# 
   721  020C                     	;# 
   722  020C                     	;# 
   723  020D                     	;# 
   724  020E                     	;# 
   725  020F                     	;# 
   726  020F                     	;# 
   727  0210                     	;# 
   728  0210                     	;# 
   729  0211                     	;# 
   730  0211                     	;# 
   731  0212                     	;# 
   732  0212                     	;# 
   733  0213                     	;# 
   734  0214                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0216                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0217                     	;# 
   741  0218                     	;# 
   742  0218                     	;# 
   743  0219                     	;# 
   744  021A                     	;# 
   745  021B                     	;# 
   746  021B                     	;# 
   747  021C                     	;# 
   748  021C                     	;# 
   749  021D                     	;# 
   750  021D                     	;# 
   751  021E                     	;# 
   752  021F                     	;# 
   753  028C                     	;# 
   754  028C                     	;# 
   755  028D                     	;# 
   756  028D                     	;# 
   757  028E                     	;# 
   758  028F                     	;# 
   759  0290                     	;# 
   760  0290                     	;# 
   761  0291                     	;# 
   762  0292                     	;# 
   763  0292                     	;# 
   764  0293                     	;# 
   765  0293                     	;# 
   766  0294                     	;# 
   767  0295                     	;# 
   768  0296                     	;# 
   769  0296                     	;# 
   770  0297                     	;# 
   771  0298                     	;# 
   772  0298                     	;# 
   773  0299                     	;# 
   774  0299                     	;# 
   775  029A                     	;# 
   776  029B                     	;# 
   777  029C                     	;# 
   778  029C                     	;# 
   779  029D                     	;# 
   780  030C                     	;# 
   781  030C                     	;# 
   782  030D                     	;# 
   783  030E                     	;# 
   784  030F                     	;# 
   785  0310                     	;# 
   786  0310                     	;# 
   787  0311                     	;# 
   788  0312                     	;# 
   789  0313                     	;# 
   790  0314                     	;# 
   791  0314                     	;# 
   792  0315                     	;# 
   793  0316                     	;# 
   794  0317                     	;# 
   795  0318                     	;# 
   796  0318                     	;# 
   797  0319                     	;# 
   798  031A                     	;# 
   799  031B                     	;# 
   800  031C                     	;# 
   801  031C                     	;# 
   802  031D                     	;# 
   803  031E                     	;# 
   804  031F                     	;# 
   805  038C                     	;# 
   806  038D                     	;# 
   807  038E                     	;# 
   808  0390                     	;# 
   809  0391                     	;# 
   810  0392                     	;# 
   811  040C                     	;# 
   812  040D                     	;# 
   813  040E                     	;# 
   814  040F                     	;# 
   815  0410                     	;# 
   816  0411                     	;# 
   817  0416                     	;# 
   818  0416                     	;# 
   819  0417                     	;# 
   820  0418                     	;# 
   821  0418                     	;# 
   822  0419                     	;# 
   823  041A                     	;# 
   824  041A                     	;# 
   825  041B                     	;# 
   826  041C                     	;# 
   827  041C                     	;# 
   828  041D                     	;# 
   829  041E                     	;# 
   830  041F                     	;# 
   831  048C                     	;# 
   832  048C                     	;# 
   833  048D                     	;# 
   834  048E                     	;# 
   835  048F                     	;# 
   836  048F                     	;# 
   837  0490                     	;# 
   838  0491                     	;# 
   839  0492                     	;# 
   840  0492                     	;# 
   841  0493                     	;# 
   842  0494                     	;# 
   843  0495                     	;# 
   844  0495                     	;# 
   845  0496                     	;# 
   846  0497                     	;# 
   847  0498                     	;# 
   848  0499                     	;# 
   849  049A                     	;# 
   850  049B                     	;# 
   851  049C                     	;# 
   852  049D                     	;# 
   853  050C                     	;# 
   854  050C                     	;# 
   855  050D                     	;# 
   856  050E                     	;# 
   857  050F                     	;# 
   858  050F                     	;# 
   859  0510                     	;# 
   860  0511                     	;# 
   861  0512                     	;# 
   862  0512                     	;# 
   863  0513                     	;# 
   864  0514                     	;# 
   865  0515                     	;# 
   866  0515                     	;# 
   867  0516                     	;# 
   868  0517                     	;# 
   869  0518                     	;# 
   870  0519                     	;# 
   871  051A                     	;# 
   872  051B                     	;# 
   873  051C                     	;# 
   874  051D                     	;# 
   875  058C                     	;# 
   876  058C                     	;# 
   877  058D                     	;# 
   878  058E                     	;# 
   879  058F                     	;# 
   880  058F                     	;# 
   881  0590                     	;# 
   882  0591                     	;# 
   883  0592                     	;# 
   884  0593                     	;# 
   885  060C                     	;# 
   886  060D                     	;# 
   887  060E                     	;# 
   888  060F                     	;# 
   889  0610                     	;# 
   890  0611                     	;# 
   891  0612                     	;# 
   892  0613                     	;# 
   893  0614                     	;# 
   894  0616                     	;# 
   895  0617                     	;# 
   896  0618                     	;# 
   897  0619                     	;# 
   898  061A                     	;# 
   899  061B                     	;# 
   900  061C                     	;# 
   901  061D                     	;# 
   902  061E                     	;# 
   903  068C                     	;# 
   904  068D                     	;# 
   905  068E                     	;# 
   906  068F                     	;# 
   907  0690                     	;# 
   908  0691                     	;# 
   909  0692                     	;# 
   910  0693                     	;# 
   911  0694                     	;# 
   912  070C                     	;# 
   913  070D                     	;# 
   914  070E                     	;# 
   915  070F                     	;# 
   916  0710                     	;# 
   917  0711                     	;# 
   918  0712                     	;# 
   919  0713                     	;# 
   920  0714                     	;# 
   921  0716                     	;# 
   922  0717                     	;# 
   923  0718                     	;# 
   924  0719                     	;# 
   925  071A                     	;# 
   926  071B                     	;# 
   927  071C                     	;# 
   928  071D                     	;# 
   929  071E                     	;# 
   930  0796                     	;# 
   931  0797                     	;# 
   932  0798                     	;# 
   933  0799                     	;# 
   934  079A                     	;# 
   935  079B                     	;# 
   936  080C                     	;# 
   937  080D                     	;# 
   938  080E                     	;# 
   939  080F                     	;# 
   940  0810                     	;# 
   941  0811                     	;# 
   942  0812                     	;# 
   943  0813                     	;# 
   944  0814                     	;# 
   945  081A                     	;# 
   946  081B                     	;# 
   947  081C                     	;# 
   948  081D                     	;# 
   949  081E                     	;# 
   950  081F                     	;# 
   951  088C                     	;# 
   952  088D                     	;# 
   953  088E                     	;# 
   954  088F                     	;# 
   955  0890                     	;# 
   956  0891                     	;# 
   957  0892                     	;# 
   958  0893                     	;# 
   959  0895                     	;# 
   960  0896                     	;# 
   961  0897                     	;# 
   962  0898                     	;# 
   963  0899                     	;# 
   964  089A                     	;# 
   965  089B                     	;# 
   966  090C                     	;# 
   967  090E                     	;# 
   968  090F                     	;# 
   969  091F                     	;# 
   970  091F                     	;# 
   971  098F                     	;# 
   972  098F                     	;# 
   973  0990                     	;# 
   974  0991                     	;# 
   975  0992                     	;# 
   976  0993                     	;# 
   977  0994                     	;# 
   978  0995                     	;# 
   979  0996                     	;# 
   980  0997                     	;# 
   981  0E0F                     	;# 
   982  0E10                     	;# 
   983  0E11                     	;# 
   984  0E12                     	;# 
   985  0E13                     	;# 
   986  0E14                     	;# 
   987  0E15                     	;# 
   988  0E16                     	;# 
   989  0E17                     	;# 
   990  0E18                     	;# 
   991  0E19                     	;# 
   992  0E1A                     	;# 
   993  0E1B                     	;# 
   994  0E1C                     	;# 
   995  0E1D                     	;# 
   996  0E1E                     	;# 
   997  0E1F                     	;# 
   998  0E20                     	;# 
   999  0E21                     	;# 
  1000  0E22                     	;# 
  1001  0E23                     	;# 
  1002  0E24                     	;# 
  1003  0E25                     	;# 
  1004  0E26                     	;# 
  1005  0E27                     	;# 
  1006  0E28                     	;# 
  1007  0E29                     	;# 
  1008  0E2A                     	;# 
  1009  0E2B                     	;# 
  1010  0E2C                     	;# 
  1011  0E2D                     	;# 
  1012  0E2E                     	;# 
  1013  0E2F                     	;# 
  1014  0E30                     	;# 
  1015  0E31                     	;# 
  1016  0E32                     	;# 
  1017  0E33                     	;# 
  1018  0E34                     	;# 
  1019  0E35                     	;# 
  1020  0E36                     	;# 
  1021  0E37                     	;# 
  1022  0E8F                     	;# 
  1023  0E90                     	;# 
  1024  0E91                     	;# 
  1025  0E92                     	;# 
  1026  0E93                     	;# 
  1027  0E94                     	;# 
  1028  0E95                     	;# 
  1029  0E96                     	;# 
  1030  0E97                     	;# 
  1031  0E9C                     	;# 
  1032  0E9D                     	;# 
  1033  0E9E                     	;# 
  1034  0EA1                     	;# 
  1035  0EA2                     	;# 
  1036  0EA3                     	;# 
  1037  0EA4                     	;# 
  1038  0EA5                     	;# 
  1039  0EA9                     	;# 
  1040  0EAA                     	;# 
  1041  0EAB                     	;# 
  1042  0EAC                     	;# 
  1043  0EB1                     	;# 
  1044  0EB2                     	;# 
  1045  0EB3                     	;# 
  1046  0EB8                     	;# 
  1047  0EB9                     	;# 
  1048  0EBA                     	;# 
  1049  0EBB                     	;# 
  1050  0EBC                     	;# 
  1051  0EBD                     	;# 
  1052  0EBE                     	;# 
  1053  0EC3                     	;# 
  1054  0EC5                     	;# 
  1055  0EC6                     	;# 
  1056  0EC7                     	;# 
  1057  0EC8                     	;# 
  1058  0EC9                     	;# 
  1059  0ECA                     	;# 
  1060  0ECB                     	;# 
  1061  0ECC                     	;# 
  1062  0F10                     	;# 
  1063  0F11                     	;# 
  1064  0F12                     	;# 
  1065  0F13                     	;# 
  1066  0F14                     	;# 
  1067  0F15                     	;# 
  1068  0F16                     	;# 
  1069  0F17                     	;# 
  1070  0F18                     	;# 
  1071  0F19                     	;# 
  1072  0F1A                     	;# 
  1073  0F1B                     	;# 
  1074  0F1C                     	;# 
  1075  0F1D                     	;# 
  1076  0F1E                     	;# 
  1077  0F1F                     	;# 
  1078  0F20                     	;# 
  1079  0F21                     	;# 
  1080  0F22                     	;# 
  1081  0F23                     	;# 
  1082  0F24                     	;# 
  1083  0F25                     	;# 
  1084  0F26                     	;# 
  1085  0F27                     	;# 
  1086  0F38                     	;# 
  1087  0F39                     	;# 
  1088  0F3A                     	;# 
  1089  0F3B                     	;# 
  1090  0F3C                     	;# 
  1091  0F3D                     	;# 
  1092  0F3E                     	;# 
  1093  0F3F                     	;# 
  1094  0F40                     	;# 
  1095  0F41                     	;# 
  1096  0F43                     	;# 
  1097  0F44                     	;# 
  1098  0F45                     	;# 
  1099  0F46                     	;# 
  1100  0F47                     	;# 
  1101  0F48                     	;# 
  1102  0F49                     	;# 
  1103  0F4A                     	;# 
  1104  0F4B                     	;# 
  1105  0F4C                     	;# 
  1106  0F4E                     	;# 
  1107  0F4F                     	;# 
  1108  0F50                     	;# 
  1109  0F51                     	;# 
  1110  0F52                     	;# 
  1111  0F53                     	;# 
  1112  0F54                     	;# 
  1113  0F55                     	;# 
  1114  0F56                     	;# 
  1115  0F57                     	;# 
  1116  0F65                     	;# 
  1117  0F68                     	;# 
  1118  0F69                     	;# 
  1119  0F6A                     	;# 
  1120  0F6B                     	;# 
  1121  0FE4                     	;# 
  1122  0FE5                     	;# 
  1123  0FE6                     	;# 
  1124  0FE7                     	;# 
  1125  0FE8                     	;# 
  1126  0FE9                     	;# 
  1127  0FEA                     	;# 
  1128  0FEB                     	;# 
  1129  0FED                     	;# 
  1130  0FEE                     	;# 
  1131  0FEF                     	;# 
  1132  0000                     	;# 
  1133  0001                     	;# 
  1134  0002                     	;# 
  1135  0003                     	;# 
  1136  0004                     	;# 
  1137  0005                     	;# 
  1138  0006                     	;# 
  1139  0007                     	;# 
  1140  0008                     	;# 
  1141  0009                     	;# 
  1142  000A                     	;# 
  1143  000B                     	;# 
  1144  000C                     	;# 
  1145  000D                     	;# 
  1146  000E                     	;# 
  1147  0010                     	;# 
  1148  0011                     	;# 
  1149  0012                     	;# 
  1150  0013                     	;# 
  1151  0016                     	;# 
  1152  0017                     	;# 
  1153  0018                     	;# 
  1154  001C                     	;# 
  1155  001C                     	;# 
  1156  001D                     	;# 
  1157  001D                     	;# 
  1158  001E                     	;# 
  1159  001F                     	;# 
  1160  008C                     	;# 
  1161  008C                     	;# 
  1162  008D                     	;# 
  1163  008E                     	;# 
  1164  008E                     	;# 
  1165  008F                     	;# 
  1166  0090                     	;# 
  1167  0090                     	;# 
  1168  0091                     	;# 
  1169  0093                     	;# 
  1170  0094                     	;# 
  1171  0095                     	;# 
  1172  0096                     	;# 
  1173  0097                     	;# 
  1174  0098                     	;# 
  1175  0099                     	;# 
  1176  009A                     	;# 
  1177  009B                     	;# 
  1178  009C                     	;# 
  1179  009D                     	;# 
  1180  009E                     	;# 
  1181  010C                     	;# 
  1182  010D                     	;# 
  1183  010E                     	;# 
  1184  010E                     	;# 
  1185  010F                     	;# 
  1186  0110                     	;# 
  1187  0110                     	;# 
  1188  0111                     	;# 
  1189  0112                     	;# 
  1190  0112                     	;# 
  1191  0113                     	;# 
  1192  0114                     	;# 
  1193  0114                     	;# 
  1194  0115                     	;# 
  1195  0116                     	;# 
  1196  0116                     	;# 
  1197  0117                     	;# 
  1198  0119                     	;# 
  1199  0119                     	;# 
  1200  0119                     	;# 
  1201  011A                     	;# 
  1202  011A                     	;# 
  1203  011A                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011B                     	;# 
  1207  011B                     	;# 
  1208  011B                     	;# 
  1209  011C                     	;# 
  1210  011C                     	;# 
  1211  011C                     	;# 
  1212  011D                     	;# 
  1213  011D                     	;# 
  1214  011D                     	;# 
  1215  011E                     	;# 
  1216  011E                     	;# 
  1217  011E                     	;# 
  1218  011F                     	;# 
  1219  011F                     	;# 
  1220  011F                     	;# 
  1221  011F                     	;# 
  1222  011F                     	;# 
  1223  018C                     	;# 
  1224  018D                     	;# 
  1225  018E                     	;# 
  1226  018F                     	;# 
  1227  0190                     	;# 
  1228  0191                     	;# 
  1229  0192                     	;# 
  1230  0196                     	;# 
  1231  0197                     	;# 
  1232  0198                     	;# 
  1233  0199                     	;# 
  1234  019A                     	;# 
  1235  019B                     	;# 
  1236  019C                     	;# 
  1237  020C                     	;# 
  1238  020C                     	;# 
  1239  020D                     	;# 
  1240  020E                     	;# 
  1241  020F                     	;# 
  1242  020F                     	;# 
  1243  0210                     	;# 
  1244  0210                     	;# 
  1245  0211                     	;# 
  1246  0211                     	;# 
  1247  0212                     	;# 
  1248  0212                     	;# 
  1249  0213                     	;# 
  1250  0214                     	;# 
  1251  0215                     	;# 
  1252  0215                     	;# 
  1253  0216                     	;# 
  1254  0216                     	;# 
  1255  0217                     	;# 
  1256  0217                     	;# 
  1257  0218                     	;# 
  1258  0218                     	;# 
  1259  0219                     	;# 
  1260  021A                     	;# 
  1261  021B                     	;# 
  1262  021B                     	;# 
  1263  021C                     	;# 
  1264  021C                     	;# 
  1265  021D                     	;# 
  1266  021D                     	;# 
  1267  021E                     	;# 
  1268  021F                     	;# 
  1269  028C                     	;# 
  1270  028C                     	;# 
  1271  028D                     	;# 
  1272  028D                     	;# 
  1273  028E                     	;# 
  1274  028F                     	;# 
  1275  0290                     	;# 
  1276  0290                     	;# 
  1277  0291                     	;# 
  1278  0292                     	;# 
  1279  0292                     	;# 
  1280  0293                     	;# 
  1281  0293                     	;# 
  1282  0294                     	;# 
  1283  0295                     	;# 
  1284  0296                     	;# 
  1285  0296                     	;# 
  1286  0297                     	;# 
  1287  0298                     	;# 
  1288  0298                     	;# 
  1289  0299                     	;# 
  1290  0299                     	;# 
  1291  029A                     	;# 
  1292  029B                     	;# 
  1293  029C                     	;# 
  1294  029C                     	;# 
  1295  029D                     	;# 
  1296  030C                     	;# 
  1297  030C                     	;# 
  1298  030D                     	;# 
  1299  030E                     	;# 
  1300  030F                     	;# 
  1301  0310                     	;# 
  1302  0310                     	;# 
  1303  0311                     	;# 
  1304  0312                     	;# 
  1305  0313                     	;# 
  1306  0314                     	;# 
  1307  0314                     	;# 
  1308  0315                     	;# 
  1309  0316                     	;# 
  1310  0317                     	;# 
  1311  0318                     	;# 
  1312  0318                     	;# 
  1313  0319                     	;# 
  1314  031A                     	;# 
  1315  031B                     	;# 
  1316  031C                     	;# 
  1317  031C                     	;# 
  1318  031D                     	;# 
  1319  031E                     	;# 
  1320  031F                     	;# 
  1321  038C                     	;# 
  1322  038D                     	;# 
  1323  038E                     	;# 
  1324  0390                     	;# 
  1325  0391                     	;# 
  1326  0392                     	;# 
  1327  040C                     	;# 
  1328  040D                     	;# 
  1329  040E                     	;# 
  1330  040F                     	;# 
  1331  0410                     	;# 
  1332  0411                     	;# 
  1333  0416                     	;# 
  1334  0416                     	;# 
  1335  0417                     	;# 
  1336  0418                     	;# 
  1337  0418                     	;# 
  1338  0419                     	;# 
  1339  041A                     	;# 
  1340  041A                     	;# 
  1341  041B                     	;# 
  1342  041C                     	;# 
  1343  041C                     	;# 
  1344  041D                     	;# 
  1345  041E                     	;# 
  1346  041F                     	;# 
  1347  048C                     	;# 
  1348  048C                     	;# 
  1349  048D                     	;# 
  1350  048E                     	;# 
  1351  048F                     	;# 
  1352  048F                     	;# 
  1353  0490                     	;# 
  1354  0491                     	;# 
  1355  0492                     	;# 
  1356  0492                     	;# 
  1357  0493                     	;# 
  1358  0494                     	;# 
  1359  0495                     	;# 
  1360  0495                     	;# 
  1361  0496                     	;# 
  1362  0497                     	;# 
  1363  0498                     	;# 
  1364  0499                     	;# 
  1365  049A                     	;# 
  1366  049B                     	;# 
  1367  049C                     	;# 
  1368  049D                     	;# 
  1369  050C                     	;# 
  1370  050C                     	;# 
  1371  050D                     	;# 
  1372  050E                     	;# 
  1373  050F                     	;# 
  1374  050F                     	;# 
  1375  0510                     	;# 
  1376  0511                     	;# 
  1377  0512                     	;# 
  1378  0512                     	;# 
  1379  0513                     	;# 
  1380  0514                     	;# 
  1381  0515                     	;# 
  1382  0515                     	;# 
  1383  0516                     	;# 
  1384  0517                     	;# 
  1385  0518                     	;# 
  1386  0519                     	;# 
  1387  051A                     	;# 
  1388  051B                     	;# 
  1389  051C                     	;# 
  1390  051D                     	;# 
  1391  058C                     	;# 
  1392  058C                     	;# 
  1393  058D                     	;# 
  1394  058E                     	;# 
  1395  058F                     	;# 
  1396  058F                     	;# 
  1397  0590                     	;# 
  1398  0591                     	;# 
  1399  0592                     	;# 
  1400  0593                     	;# 
  1401  060C                     	;# 
  1402  060D                     	;# 
  1403  060E                     	;# 
  1404  060F                     	;# 
  1405  0610                     	;# 
  1406  0611                     	;# 
  1407  0612                     	;# 
  1408  0613                     	;# 
  1409  0614                     	;# 
  1410  0616                     	;# 
  1411  0617                     	;# 
  1412  0618                     	;# 
  1413  0619                     	;# 
  1414  061A                     	;# 
  1415  061B                     	;# 
  1416  061C                     	;# 
  1417  061D                     	;# 
  1418  061E                     	;# 
  1419  068C                     	;# 
  1420  068D                     	;# 
  1421  068E                     	;# 
  1422  068F                     	;# 
  1423  0690                     	;# 
  1424  0691                     	;# 
  1425  0692                     	;# 
  1426  0693                     	;# 
  1427  0694                     	;# 
  1428  070C                     	;# 
  1429  070D                     	;# 
  1430  070E                     	;# 
  1431  070F                     	;# 
  1432  0710                     	;# 
  1433  0711                     	;# 
  1434  0712                     	;# 
  1435  0713                     	;# 
  1436  0714                     	;# 
  1437  0716                     	;# 
  1438  0717                     	;# 
  1439  0718                     	;# 
  1440  0719                     	;# 
  1441  071A                     	;# 
  1442  071B                     	;# 
  1443  071C                     	;# 
  1444  071D                     	;# 
  1445  071E                     	;# 
  1446  0796                     	;# 
  1447  0797                     	;# 
  1448  0798                     	;# 
  1449  0799                     	;# 
  1450  079A                     	;# 
  1451  079B                     	;# 
  1452  080C                     	;# 
  1453  080D                     	;# 
  1454  080E                     	;# 
  1455  080F                     	;# 
  1456  0810                     	;# 
  1457  0811                     	;# 
  1458  0812                     	;# 
  1459  0813                     	;# 
  1460  0814                     	;# 
  1461  081A                     	;# 
  1462  081B                     	;# 
  1463  081C                     	;# 
  1464  081D                     	;# 
  1465  081E                     	;# 
  1466  081F                     	;# 
  1467  088C                     	;# 
  1468  088D                     	;# 
  1469  088E                     	;# 
  1470  088F                     	;# 
  1471  0890                     	;# 
  1472  0891                     	;# 
  1473  0892                     	;# 
  1474  0893                     	;# 
  1475  0895                     	;# 
  1476  0896                     	;# 
  1477  0897                     	;# 
  1478  0898                     	;# 
  1479  0899                     	;# 
  1480  089A                     	;# 
  1481  089B                     	;# 
  1482  090C                     	;# 
  1483  090E                     	;# 
  1484  090F                     	;# 
  1485  091F                     	;# 
  1486  091F                     	;# 
  1487  098F                     	;# 
  1488  098F                     	;# 
  1489  0990                     	;# 
  1490  0991                     	;# 
  1491  0992                     	;# 
  1492  0993                     	;# 
  1493  0994                     	;# 
  1494  0995                     	;# 
  1495  0996                     	;# 
  1496  0997                     	;# 
  1497  0E0F                     	;# 
  1498  0E10                     	;# 
  1499  0E11                     	;# 
  1500  0E12                     	;# 
  1501  0E13                     	;# 
  1502  0E14                     	;# 
  1503  0E15                     	;# 
  1504  0E16                     	;# 
  1505  0E17                     	;# 
  1506  0E18                     	;# 
  1507  0E19                     	;# 
  1508  0E1A                     	;# 
  1509  0E1B                     	;# 
  1510  0E1C                     	;# 
  1511  0E1D                     	;# 
  1512  0E1E                     	;# 
  1513  0E1F                     	;# 
  1514  0E20                     	;# 
  1515  0E21                     	;# 
  1516  0E22                     	;# 
  1517  0E23                     	;# 
  1518  0E24                     	;# 
  1519  0E25                     	;# 
  1520  0E26                     	;# 
  1521  0E27                     	;# 
  1522  0E28                     	;# 
  1523  0E29                     	;# 
  1524  0E2A                     	;# 
  1525  0E2B                     	;# 
  1526  0E2C                     	;# 
  1527  0E2D                     	;# 
  1528  0E2E                     	;# 
  1529  0E2F                     	;# 
  1530  0E30                     	;# 
  1531  0E31                     	;# 
  1532  0E32                     	;# 
  1533  0E33                     	;# 
  1534  0E34                     	;# 
  1535  0E35                     	;# 
  1536  0E36                     	;# 
  1537  0E37                     	;# 
  1538  0E8F                     	;# 
  1539  0E90                     	;# 
  1540  0E91                     	;# 
  1541  0E92                     	;# 
  1542  0E93                     	;# 
  1543  0E94                     	;# 
  1544  0E95                     	;# 
  1545  0E96                     	;# 
  1546  0E97                     	;# 
  1547  0E9C                     	;# 
  1548  0E9D                     	;# 
  1549  0E9E                     	;# 
  1550  0EA1                     	;# 
  1551  0EA2                     	;# 
  1552  0EA3                     	;# 
  1553  0EA4                     	;# 
  1554  0EA5                     	;# 
  1555  0EA9                     	;# 
  1556  0EAA                     	;# 
  1557  0EAB                     	;# 
  1558  0EAC                     	;# 
  1559  0EB1                     	;# 
  1560  0EB2                     	;# 
  1561  0EB3                     	;# 
  1562  0EB8                     	;# 
  1563  0EB9                     	;# 
  1564  0EBA                     	;# 
  1565  0EBB                     	;# 
  1566  0EBC                     	;# 
  1567  0EBD                     	;# 
  1568  0EBE                     	;# 
  1569  0EC3                     	;# 
  1570  0EC5                     	;# 
  1571  0EC6                     	;# 
  1572  0EC7                     	;# 
  1573  0EC8                     	;# 
  1574  0EC9                     	;# 
  1575  0ECA                     	;# 
  1576  0ECB                     	;# 
  1577  0ECC                     	;# 
  1578  0F10                     	;# 
  1579  0F11                     	;# 
  1580  0F12                     	;# 
  1581  0F13                     	;# 
  1582  0F14                     	;# 
  1583  0F15                     	;# 
  1584  0F16                     	;# 
  1585  0F17                     	;# 
  1586  0F18                     	;# 
  1587  0F19                     	;# 
  1588  0F1A                     	;# 
  1589  0F1B                     	;# 
  1590  0F1C                     	;# 
  1591  0F1D                     	;# 
  1592  0F1E                     	;# 
  1593  0F1F                     	;# 
  1594  0F20                     	;# 
  1595  0F21                     	;# 
  1596  0F22                     	;# 
  1597  0F23                     	;# 
  1598  0F24                     	;# 
  1599  0F25                     	;# 
  1600  0F26                     	;# 
  1601  0F27                     	;# 
  1602  0F38                     	;# 
  1603  0F39                     	;# 
  1604  0F3A                     	;# 
  1605  0F3B                     	;# 
  1606  0F3C                     	;# 
  1607  0F3D                     	;# 
  1608  0F3E                     	;# 
  1609  0F3F                     	;# 
  1610  0F40                     	;# 
  1611  0F41                     	;# 
  1612  0F43                     	;# 
  1613  0F44                     	;# 
  1614  0F45                     	;# 
  1615  0F46                     	;# 
  1616  0F47                     	;# 
  1617  0F48                     	;# 
  1618  0F49                     	;# 
  1619  0F4A                     	;# 
  1620  0F4B                     	;# 
  1621  0F4C                     	;# 
  1622  0F4E                     	;# 
  1623  0F4F                     	;# 
  1624  0F50                     	;# 
  1625  0F51                     	;# 
  1626  0F52                     	;# 
  1627  0F53                     	;# 
  1628  0F54                     	;# 
  1629  0F55                     	;# 
  1630  0F56                     	;# 
  1631  0F57                     	;# 
  1632  0F65                     	;# 
  1633  0F68                     	;# 
  1634  0F69                     	;# 
  1635  0F6A                     	;# 
  1636  0F6B                     	;# 
  1637  0FE4                     	;# 
  1638  0FE5                     	;# 
  1639  0FE6                     	;# 
  1640  0FE7                     	;# 
  1641  0FE8                     	;# 
  1642  0FE9                     	;# 
  1643  0FEA                     	;# 
  1644  0FEB                     	;# 
  1645  0FED                     	;# 
  1646  0FEE                     	;# 
  1647  0FEF                     	;# 
  1648  0000                     	;# 
  1649  0001                     	;# 
  1650  0002                     	;# 
  1651  0003                     	;# 
  1652  0004                     	;# 
  1653  0005                     	;# 
  1654  0006                     	;# 
  1655  0007                     	;# 
  1656  0008                     	;# 
  1657  0009                     	;# 
  1658  000A                     	;# 
  1659  000B                     	;# 
  1660  000C                     	;# 
  1661  000D                     	;# 
  1662  000E                     	;# 
  1663  0010                     	;# 
  1664  0011                     	;# 
  1665  0012                     	;# 
  1666  0013                     	;# 
  1667  0016                     	;# 
  1668  0017                     	;# 
  1669  0018                     	;# 
  1670  001C                     	;# 
  1671  001C                     	;# 
  1672  001D                     	;# 
  1673  001D                     	;# 
  1674  001E                     	;# 
  1675  001F                     	;# 
  1676  008C                     	;# 
  1677  008C                     	;# 
  1678  008D                     	;# 
  1679  008E                     	;# 
  1680  008E                     	;# 
  1681  008F                     	;# 
  1682  0090                     	;# 
  1683  0090                     	;# 
  1684  0091                     	;# 
  1685  0093                     	;# 
  1686  0094                     	;# 
  1687  0095                     	;# 
  1688  0096                     	;# 
  1689  0097                     	;# 
  1690  0098                     	;# 
  1691  0099                     	;# 
  1692  009A                     	;# 
  1693  009B                     	;# 
  1694  009C                     	;# 
  1695  009D                     	;# 
  1696  009E                     	;# 
  1697  010C                     	;# 
  1698  010D                     	;# 
  1699  010E                     	;# 
  1700  010E                     	;# 
  1701  010F                     	;# 
  1702  0110                     	;# 
  1703  0110                     	;# 
  1704  0111                     	;# 
  1705  0112                     	;# 
  1706  0112                     	;# 
  1707  0113                     	;# 
  1708  0114                     	;# 
  1709  0114                     	;# 
  1710  0115                     	;# 
  1711  0116                     	;# 
  1712  0116                     	;# 
  1713  0117                     	;# 
  1714  0119                     	;# 
  1715  0119                     	;# 
  1716  0119                     	;# 
  1717  011A                     	;# 
  1718  011A                     	;# 
  1719  011A                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011B                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011C                     	;# 
  1726  011C                     	;# 
  1727  011C                     	;# 
  1728  011D                     	;# 
  1729  011D                     	;# 
  1730  011D                     	;# 
  1731  011E                     	;# 
  1732  011E                     	;# 
  1733  011E                     	;# 
  1734  011F                     	;# 
  1735  011F                     	;# 
  1736  011F                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  018C                     	;# 
  1740  018D                     	;# 
  1741  018E                     	;# 
  1742  018F                     	;# 
  1743  0190                     	;# 
  1744  0191                     	;# 
  1745  0192                     	;# 
  1746  0196                     	;# 
  1747  0197                     	;# 
  1748  0198                     	;# 
  1749  0199                     	;# 
  1750  019A                     	;# 
  1751  019B                     	;# 
  1752  019C                     	;# 
  1753  020C                     	;# 
  1754  020C                     	;# 
  1755  020D                     	;# 
  1756  020E                     	;# 
  1757  020F                     	;# 
  1758  020F                     	;# 
  1759  0210                     	;# 
  1760  0210                     	;# 
  1761  0211                     	;# 
  1762  0211                     	;# 
  1763  0212                     	;# 
  1764  0212                     	;# 
  1765  0213                     	;# 
  1766  0214                     	;# 
  1767  0215                     	;# 
  1768  0215                     	;# 
  1769  0216                     	;# 
  1770  0216                     	;# 
  1771  0217                     	;# 
  1772  0217                     	;# 
  1773  0218                     	;# 
  1774  0218                     	;# 
  1775  0219                     	;# 
  1776  021A                     	;# 
  1777  021B                     	;# 
  1778  021B                     	;# 
  1779  021C                     	;# 
  1780  021C                     	;# 
  1781  021D                     	;# 
  1782  021D                     	;# 
  1783  021E                     	;# 
  1784  021F                     	;# 
  1785  028C                     	;# 
  1786  028C                     	;# 
  1787  028D                     	;# 
  1788  028D                     	;# 
  1789  028E                     	;# 
  1790  028F                     	;# 
  1791  0290                     	;# 
  1792  0290                     	;# 
  1793  0291                     	;# 
  1794  0292                     	;# 
  1795  0292                     	;# 
  1796  0293                     	;# 
  1797  0293                     	;# 
  1798  0294                     	;# 
  1799  0295                     	;# 
  1800  0296                     	;# 
  1801  0296                     	;# 
  1802  0297                     	;# 
  1803  0298                     	;# 
  1804  0298                     	;# 
  1805  0299                     	;# 
  1806  0299                     	;# 
  1807  029A                     	;# 
  1808  029B                     	;# 
  1809  029C                     	;# 
  1810  029C                     	;# 
  1811  029D                     	;# 
  1812  030C                     	;# 
  1813  030C                     	;# 
  1814  030D                     	;# 
  1815  030E                     	;# 
  1816  030F                     	;# 
  1817  0310                     	;# 
  1818  0310                     	;# 
  1819  0311                     	;# 
  1820  0312                     	;# 
  1821  0313                     	;# 
  1822  0314                     	;# 
  1823  0314                     	;# 
  1824  0315                     	;# 
  1825  0316                     	;# 
  1826  0317                     	;# 
  1827  0318                     	;# 
  1828  0318                     	;# 
  1829  0319                     	;# 
  1830  031A                     	;# 
  1831  031B                     	;# 
  1832  031C                     	;# 
  1833  031C                     	;# 
  1834  031D                     	;# 
  1835  031E                     	;# 
  1836  031F                     	;# 
  1837  038C                     	;# 
  1838  038D                     	;# 
  1839  038E                     	;# 
  1840  0390                     	;# 
  1841  0391                     	;# 
  1842  0392                     	;# 
  1843  040C                     	;# 
  1844  040D                     	;# 
  1845  040E                     	;# 
  1846  040F                     	;# 
  1847  0410                     	;# 
  1848  0411                     	;# 
  1849  0416                     	;# 
  1850  0416                     	;# 
  1851  0417                     	;# 
  1852  0418                     	;# 
  1853  0418                     	;# 
  1854  0419                     	;# 
  1855  041A                     	;# 
  1856  041A                     	;# 
  1857  041B                     	;# 
  1858  041C                     	;# 
  1859  041C                     	;# 
  1860  041D                     	;# 
  1861  041E                     	;# 
  1862  041F                     	;# 
  1863  048C                     	;# 
  1864  048C                     	;# 
  1865  048D                     	;# 
  1866  048E                     	;# 
  1867  048F                     	;# 
  1868  048F                     	;# 
  1869  0490                     	;# 
  1870  0491                     	;# 
  1871  0492                     	;# 
  1872  0492                     	;# 
  1873  0493                     	;# 
  1874  0494                     	;# 
  1875  0495                     	;# 
  1876  0495                     	;# 
  1877  0496                     	;# 
  1878  0497                     	;# 
  1879  0498                     	;# 
  1880  0499                     	;# 
  1881  049A                     	;# 
  1882  049B                     	;# 
  1883  049C                     	;# 
  1884  049D                     	;# 
  1885  050C                     	;# 
  1886  050C                     	;# 
  1887  050D                     	;# 
  1888  050E                     	;# 
  1889  050F                     	;# 
  1890  050F                     	;# 
  1891  0510                     	;# 
  1892  0511                     	;# 
  1893  0512                     	;# 
  1894  0512                     	;# 
  1895  0513                     	;# 
  1896  0514                     	;# 
  1897  0515                     	;# 
  1898  0515                     	;# 
  1899  0516                     	;# 
  1900  0517                     	;# 
  1901  0518                     	;# 
  1902  0519                     	;# 
  1903  051A                     	;# 
  1904  051B                     	;# 
  1905  051C                     	;# 
  1906  051D                     	;# 
  1907  058C                     	;# 
  1908  058C                     	;# 
  1909  058D                     	;# 
  1910  058E                     	;# 
  1911  058F                     	;# 
  1912  058F                     	;# 
  1913  0590                     	;# 
  1914  0591                     	;# 
  1915  0592                     	;# 
  1916  0593                     	;# 
  1917  060C                     	;# 
  1918  060D                     	;# 
  1919  060E                     	;# 
  1920  060F                     	;# 
  1921  0610                     	;# 
  1922  0611                     	;# 
  1923  0612                     	;# 
  1924  0613                     	;# 
  1925  0614                     	;# 
  1926  0616                     	;# 
  1927  0617                     	;# 
  1928  0618                     	;# 
  1929  0619                     	;# 
  1930  061A                     	;# 
  1931  061B                     	;# 
  1932  061C                     	;# 
  1933  061D                     	;# 
  1934  061E                     	;# 
  1935  068C                     	;# 
  1936  068D                     	;# 
  1937  068E                     	;# 
  1938  068F                     	;# 
  1939  0690                     	;# 
  1940  0691                     	;# 
  1941  0692                     	;# 
  1942  0693                     	;# 
  1943  0694                     	;# 
  1944  070C                     	;# 
  1945  070D                     	;# 
  1946  070E                     	;# 
  1947  070F                     	;# 
  1948  0710                     	;# 
  1949  0711                     	;# 
  1950  0712                     	;# 
  1951  0713                     	;# 
  1952  0714                     	;# 
  1953  0716                     	;# 
  1954  0717                     	;# 
  1955  0718                     	;# 
  1956  0719                     	;# 
  1957  071A                     	;# 
  1958  071B                     	;# 
  1959  071C                     	;# 
  1960  071D                     	;# 
  1961  071E                     	;# 
  1962  0796                     	;# 
  1963  0797                     	;# 
  1964  0798                     	;# 
  1965  0799                     	;# 
  1966  079A                     	;# 
  1967  079B                     	;# 
  1968  080C                     	;# 
  1969  080D                     	;# 
  1970  080E                     	;# 
  1971  080F                     	;# 
  1972  0810                     	;# 
  1973  0811                     	;# 
  1974  0812                     	;# 
  1975  0813                     	;# 
  1976  0814                     	;# 
  1977  081A                     	;# 
  1978  081B                     	;# 
  1979  081C                     	;# 
  1980  081D                     	;# 
  1981  081E                     	;# 
  1982  081F                     	;# 
  1983  088C                     	;# 
  1984  088D                     	;# 
  1985  088E                     	;# 
  1986  088F                     	;# 
  1987  0890                     	;# 
  1988  0891                     	;# 
  1989  0892                     	;# 
  1990  0893                     	;# 
  1991  0895                     	;# 
  1992  0896                     	;# 
  1993  0897                     	;# 
  1994  0898                     	;# 
  1995  0899                     	;# 
  1996  089A                     	;# 
  1997  089B                     	;# 
  1998  090C                     	;# 
  1999  090E                     	;# 
  2000  090F                     	;# 
  2001  091F                     	;# 
  2002  091F                     	;# 
  2003  098F                     	;# 
  2004  098F                     	;# 
  2005  0990                     	;# 
  2006  0991                     	;# 
  2007  0992                     	;# 
  2008  0993                     	;# 
  2009  0994                     	;# 
  2010  0995                     	;# 
  2011  0996                     	;# 
  2012  0997                     	;# 
  2013  0E0F                     	;# 
  2014  0E10                     	;# 
  2015  0E11                     	;# 
  2016  0E12                     	;# 
  2017  0E13                     	;# 
  2018  0E14                     	;# 
  2019  0E15                     	;# 
  2020  0E16                     	;# 
  2021  0E17                     	;# 
  2022  0E18                     	;# 
  2023  0E19                     	;# 
  2024  0E1A                     	;# 
  2025  0E1B                     	;# 
  2026  0E1C                     	;# 
  2027  0E1D                     	;# 
  2028  0E1E                     	;# 
  2029  0E1F                     	;# 
  2030  0E20                     	;# 
  2031  0E21                     	;# 
  2032  0E22                     	;# 
  2033  0E23                     	;# 
  2034  0E24                     	;# 
  2035  0E25                     	;# 
  2036  0E26                     	;# 
  2037  0E27                     	;# 
  2038  0E28                     	;# 
  2039  0E29                     	;# 
  2040  0E2A                     	;# 
  2041  0E2B                     	;# 
  2042  0E2C                     	;# 
  2043  0E2D                     	;# 
  2044  0E2E                     	;# 
  2045  0E2F                     	;# 
  2046  0E30                     	;# 
  2047  0E31                     	;# 
  2048  0E32                     	;# 
  2049  0E33                     	;# 
  2050  0E34                     	;# 
  2051  0E35                     	;# 
  2052  0E36                     	;# 
  2053  0E37                     	;# 
  2054  0E8F                     	;# 
  2055  0E90                     	;# 
  2056  0E91                     	;# 
  2057  0E92                     	;# 
  2058  0E93                     	;# 
  2059  0E94                     	;# 
  2060  0E95                     	;# 
  2061  0E96                     	;# 
  2062  0E97                     	;# 
  2063  0E9C                     	;# 
  2064  0E9D                     	;# 
  2065  0E9E                     	;# 
  2066  0EA1                     	;# 
  2067  0EA2                     	;# 
  2068  0EA3                     	;# 
  2069  0EA4                     	;# 
  2070  0EA5                     	;# 
  2071  0EA9                     	;# 
  2072  0EAA                     	;# 
  2073  0EAB                     	;# 
  2074  0EAC                     	;# 
  2075  0EB1                     	;# 
  2076  0EB2                     	;# 
  2077  0EB3                     	;# 
  2078  0EB8                     	;# 
  2079  0EB9                     	;# 
  2080  0EBA                     	;# 
  2081  0EBB                     	;# 
  2082  0EBC                     	;# 
  2083  0EBD                     	;# 
  2084  0EBE                     	;# 
  2085  0EC3                     	;# 
  2086  0EC5                     	;# 
  2087  0EC6                     	;# 
  2088  0EC7                     	;# 
  2089  0EC8                     	;# 
  2090  0EC9                     	;# 
  2091  0ECA                     	;# 
  2092  0ECB                     	;# 
  2093  0ECC                     	;# 
  2094  0F10                     	;# 
  2095  0F11                     	;# 
  2096  0F12                     	;# 
  2097  0F13                     	;# 
  2098  0F14                     	;# 
  2099  0F15                     	;# 
  2100  0F16                     	;# 
  2101  0F17                     	;# 
  2102  0F18                     	;# 
  2103  0F19                     	;# 
  2104  0F1A                     	;# 
  2105  0F1B                     	;# 
  2106  0F1C                     	;# 
  2107  0F1D                     	;# 
  2108  0F1E                     	;# 
  2109  0F1F                     	;# 
  2110  0F20                     	;# 
  2111  0F21                     	;# 
  2112  0F22                     	;# 
  2113  0F23                     	;# 
  2114  0F24                     	;# 
  2115  0F25                     	;# 
  2116  0F26                     	;# 
  2117  0F27                     	;# 
  2118  0F38                     	;# 
  2119  0F39                     	;# 
  2120  0F3A                     	;# 
  2121  0F3B                     	;# 
  2122  0F3C                     	;# 
  2123  0F3D                     	;# 
  2124  0F3E                     	;# 
  2125  0F3F                     	;# 
  2126  0F40                     	;# 
  2127  0F41                     	;# 
  2128  0F43                     	;# 
  2129  0F44                     	;# 
  2130  0F45                     	;# 
  2131  0F46                     	;# 
  2132  0F47                     	;# 
  2133  0F48                     	;# 
  2134  0F49                     	;# 
  2135  0F4A                     	;# 
  2136  0F4B                     	;# 
  2137  0F4C                     	;# 
  2138  0F4E                     	;# 
  2139  0F4F                     	;# 
  2140  0F50                     	;# 
  2141  0F51                     	;# 
  2142  0F52                     	;# 
  2143  0F53                     	;# 
  2144  0F54                     	;# 
  2145  0F55                     	;# 
  2146  0F56                     	;# 
  2147  0F57                     	;# 
  2148  0F65                     	;# 
  2149  0F68                     	;# 
  2150  0F69                     	;# 
  2151  0F6A                     	;# 
  2152  0F6B                     	;# 
  2153  0FE4                     	;# 
  2154  0FE5                     	;# 
  2155  0FE6                     	;# 
  2156  0FE7                     	;# 
  2157  0FE8                     	;# 
  2158  0FE9                     	;# 
  2159  0FEA                     	;# 
  2160  0FEB                     	;# 
  2161  0FED                     	;# 
  2162  0FEE                     	;# 
  2163  0FEF                     	;# 
  2164  0000                     	;# 
  2165  0001                     	;# 
  2166  0002                     	;# 
  2167  0003                     	;# 
  2168  0004                     	;# 
  2169  0005                     	;# 
  2170  0006                     	;# 
  2171  0007                     	;# 
  2172  0008                     	;# 
  2173  0009                     	;# 
  2174  000A                     	;# 
  2175  000B                     	;# 
  2176  000C                     	;# 
  2177  000D                     	;# 
  2178  000E                     	;# 
  2179  0010                     	;# 
  2180  0011                     	;# 
  2181  0012                     	;# 
  2182  0013                     	;# 
  2183  0016                     	;# 
  2184  0017                     	;# 
  2185  0018                     	;# 
  2186  001C                     	;# 
  2187  001C                     	;# 
  2188  001D                     	;# 
  2189  001D                     	;# 
  2190  001E                     	;# 
  2191  001F                     	;# 
  2192  008C                     	;# 
  2193  008C                     	;# 
  2194  008D                     	;# 
  2195  008E                     	;# 
  2196  008E                     	;# 
  2197  008F                     	;# 
  2198  0090                     	;# 
  2199  0090                     	;# 
  2200  0091                     	;# 
  2201  0093                     	;# 
  2202  0094                     	;# 
  2203  0095                     	;# 
  2204  0096                     	;# 
  2205  0097                     	;# 
  2206  0098                     	;# 
  2207  0099                     	;# 
  2208  009A                     	;# 
  2209  009B                     	;# 
  2210  009C                     	;# 
  2211  009D                     	;# 
  2212  009E                     	;# 
  2213  010C                     	;# 
  2214  010D                     	;# 
  2215  010E                     	;# 
  2216  010E                     	;# 
  2217  010F                     	;# 
  2218  0110                     	;# 
  2219  0110                     	;# 
  2220  0111                     	;# 
  2221  0112                     	;# 
  2222  0112                     	;# 
  2223  0113                     	;# 
  2224  0114                     	;# 
  2225  0114                     	;# 
  2226  0115                     	;# 
  2227  0116                     	;# 
  2228  0116                     	;# 
  2229  0117                     	;# 
  2230  0119                     	;# 
  2231  0119                     	;# 
  2232  0119                     	;# 
  2233  011A                     	;# 
  2234  011A                     	;# 
  2235  011A                     	;# 
  2236  011B                     	;# 
  2237  011B                     	;# 
  2238  011B                     	;# 
  2239  011B                     	;# 
  2240  011B                     	;# 
  2241  011C                     	;# 
  2242  011C                     	;# 
  2243  011C                     	;# 
  2244  011D                     	;# 
  2245  011D                     	;# 
  2246  011D                     	;# 
  2247  011E                     	;# 
  2248  011E                     	;# 
  2249  011E                     	;# 
  2250  011F                     	;# 
  2251  011F                     	;# 
  2252  011F                     	;# 
  2253  011F                     	;# 
  2254  011F                     	;# 
  2255  018C                     	;# 
  2256  018D                     	;# 
  2257  018E                     	;# 
  2258  018F                     	;# 
  2259  0190                     	;# 
  2260  0191                     	;# 
  2261  0192                     	;# 
  2262  0196                     	;# 
  2263  0197                     	;# 
  2264  0198                     	;# 
  2265  0199                     	;# 
  2266  019A                     	;# 
  2267  019B                     	;# 
  2268  019C                     	;# 
  2269  020C                     	;# 
  2270  020C                     	;# 
  2271  020D                     	;# 
  2272  020E                     	;# 
  2273  020F                     	;# 
  2274  020F                     	;# 
  2275  0210                     	;# 
  2276  0210                     	;# 
  2277  0211                     	;# 
  2278  0211                     	;# 
  2279  0212                     	;# 
  2280  0212                     	;# 
  2281  0213                     	;# 
  2282  0214                     	;# 
  2283  0215                     	;# 
  2284  0215                     	;# 
  2285  0216                     	;# 
  2286  0216                     	;# 
  2287  0217                     	;# 
  2288  0217                     	;# 
  2289  0218                     	;# 
  2290  0218                     	;# 
  2291  0219                     	;# 
  2292  021A                     	;# 
  2293  021B                     	;# 
  2294  021B                     	;# 
  2295  021C                     	;# 
  2296  021C                     	;# 
  2297  021D                     	;# 
  2298  021D                     	;# 
  2299  021E                     	;# 
  2300  021F                     	;# 
  2301  028C                     	;# 
  2302  028C                     	;# 
  2303  028D                     	;# 
  2304  028D                     	;# 
  2305  028E                     	;# 
  2306  028F                     	;# 
  2307  0290                     	;# 
  2308  0290                     	;# 
  2309  0291                     	;# 
  2310  0292                     	;# 
  2311  0292                     	;# 
  2312  0293                     	;# 
  2313  0293                     	;# 
  2314  0294                     	;# 
  2315  0295                     	;# 
  2316  0296                     	;# 
  2317  0296                     	;# 
  2318  0297                     	;# 
  2319  0298                     	;# 
  2320  0298                     	;# 
  2321  0299                     	;# 
  2322  0299                     	;# 
  2323  029A                     	;# 
  2324  029B                     	;# 
  2325  029C                     	;# 
  2326  029C                     	;# 
  2327  029D                     	;# 
  2328  030C                     	;# 
  2329  030C                     	;# 
  2330  030D                     	;# 
  2331  030E                     	;# 
  2332  030F                     	;# 
  2333  0310                     	;# 
  2334  0310                     	;# 
  2335  0311                     	;# 
  2336  0312                     	;# 
  2337  0313                     	;# 
  2338  0314                     	;# 
  2339  0314                     	;# 
  2340  0315                     	;# 
  2341  0316                     	;# 
  2342  0317                     	;# 
  2343  0318                     	;# 
  2344  0318                     	;# 
  2345  0319                     	;# 
  2346  031A                     	;# 
  2347  031B                     	;# 
  2348  031C                     	;# 
  2349  031C                     	;# 
  2350  031D                     	;# 
  2351  031E                     	;# 
  2352  031F                     	;# 
  2353  038C                     	;# 
  2354  038D                     	;# 
  2355  038E                     	;# 
  2356  0390                     	;# 
  2357  0391                     	;# 
  2358  0392                     	;# 
  2359  040C                     	;# 
  2360  040D                     	;# 
  2361  040E                     	;# 
  2362  040F                     	;# 
  2363  0410                     	;# 
  2364  0411                     	;# 
  2365  0416                     	;# 
  2366  0416                     	;# 
  2367  0417                     	;# 
  2368  0418                     	;# 
  2369  0418                     	;# 
  2370  0419                     	;# 
  2371  041A                     	;# 
  2372  041A                     	;# 
  2373  041B                     	;# 
  2374  041C                     	;# 
  2375  041C                     	;# 
  2376  041D                     	;# 
  2377  041E                     	;# 
  2378  041F                     	;# 
  2379  048C                     	;# 
  2380  048C                     	;# 
  2381  048D                     	;# 
  2382  048E                     	;# 
  2383  048F                     	;# 
  2384  048F                     	;# 
  2385  0490                     	;# 
  2386  0491                     	;# 
  2387  0492                     	;# 
  2388  0492                     	;# 
  2389  0493                     	;# 
  2390  0494                     	;# 
  2391  0495                     	;# 
  2392  0495                     	;# 
  2393  0496                     	;# 
  2394  0497                     	;# 
  2395  0498                     	;# 
  2396  0499                     	;# 
  2397  049A                     	;# 
  2398  049B                     	;# 
  2399  049C                     	;# 
  2400  049D                     	;# 
  2401  050C                     	;# 
  2402  050C                     	;# 
  2403  050D                     	;# 
  2404  050E                     	;# 
  2405  050F                     	;# 
  2406  050F                     	;# 
  2407  0510                     	;# 
  2408  0511                     	;# 
  2409  0512                     	;# 
  2410  0512                     	;# 
  2411  0513                     	;# 
  2412  0514                     	;# 
  2413  0515                     	;# 
  2414  0515                     	;# 
  2415  0516                     	;# 
  2416  0517                     	;# 
  2417  0518                     	;# 
  2418  0519                     	;# 
  2419  051A                     	;# 
  2420  051B                     	;# 
  2421  051C                     	;# 
  2422  051D                     	;# 
  2423  058C                     	;# 
  2424  058C                     	;# 
  2425  058D                     	;# 
  2426  058E                     	;# 
  2427  058F                     	;# 
  2428  058F                     	;# 
  2429  0590                     	;# 
  2430  0591                     	;# 
  2431  0592                     	;# 
  2432  0593                     	;# 
  2433  060C                     	;# 
  2434  060D                     	;# 
  2435  060E                     	;# 
  2436  060F                     	;# 
  2437  0610                     	;# 
  2438  0611                     	;# 
  2439  0612                     	;# 
  2440  0613                     	;# 
  2441  0614                     	;# 
  2442  0616                     	;# 
  2443  0617                     	;# 
  2444  0618                     	;# 
  2445  0619                     	;# 
  2446  061A                     	;# 
  2447  061B                     	;# 
  2448  061C                     	;# 
  2449  061D                     	;# 
  2450  061E                     	;# 
  2451  068C                     	;# 
  2452  068D                     	;# 
  2453  068E                     	;# 
  2454  068F                     	;# 
  2455  0690                     	;# 
  2456  0691                     	;# 
  2457  0692                     	;# 
  2458  0693                     	;# 
  2459  0694                     	;# 
  2460  070C                     	;# 
  2461  070D                     	;# 
  2462  070E                     	;# 
  2463  070F                     	;# 
  2464  0710                     	;# 
  2465  0711                     	;# 
  2466  0712                     	;# 
  2467  0713                     	;# 
  2468  0714                     	;# 
  2469  0716                     	;# 
  2470  0717                     	;# 
  2471  0718                     	;# 
  2472  0719                     	;# 
  2473  071A                     	;# 
  2474  071B                     	;# 
  2475  071C                     	;# 
  2476  071D                     	;# 
  2477  071E                     	;# 
  2478  0796                     	;# 
  2479  0797                     	;# 
  2480  0798                     	;# 
  2481  0799                     	;# 
  2482  079A                     	;# 
  2483  079B                     	;# 
  2484  080C                     	;# 
  2485  080D                     	;# 
  2486  080E                     	;# 
  2487  080F                     	;# 
  2488  0810                     	;# 
  2489  0811                     	;# 
  2490  0812                     	;# 
  2491  0813                     	;# 
  2492  0814                     	;# 
  2493  081A                     	;# 
  2494  081B                     	;# 
  2495  081C                     	;# 
  2496  081D                     	;# 
  2497  081E                     	;# 
  2498  081F                     	;# 
  2499  088C                     	;# 
  2500  088D                     	;# 
  2501  088E                     	;# 
  2502  088F                     	;# 
  2503  0890                     	;# 
  2504  0891                     	;# 
  2505  0892                     	;# 
  2506  0893                     	;# 
  2507  0895                     	;# 
  2508  0896                     	;# 
  2509  0897                     	;# 
  2510  0898                     	;# 
  2511  0899                     	;# 
  2512  089A                     	;# 
  2513  089B                     	;# 
  2514  090C                     	;# 
  2515  090E                     	;# 
  2516  090F                     	;# 
  2517  091F                     	;# 
  2518  091F                     	;# 
  2519  098F                     	;# 
  2520  098F                     	;# 
  2521  0990                     	;# 
  2522  0991                     	;# 
  2523  0992                     	;# 
  2524  0993                     	;# 
  2525  0994                     	;# 
  2526  0995                     	;# 
  2527  0996                     	;# 
  2528  0997                     	;# 
  2529  0E0F                     	;# 
  2530  0E10                     	;# 
  2531  0E11                     	;# 
  2532  0E12                     	;# 
  2533  0E13                     	;# 
  2534  0E14                     	;# 
  2535  0E15                     	;# 
  2536  0E16                     	;# 
  2537  0E17                     	;# 
  2538  0E18                     	;# 
  2539  0E19                     	;# 
  2540  0E1A                     	;# 
  2541  0E1B                     	;# 
  2542  0E1C                     	;# 
  2543  0E1D                     	;# 
  2544  0E1E                     	;# 
  2545  0E1F                     	;# 
  2546  0E20                     	;# 
  2547  0E21                     	;# 
  2548  0E22                     	;# 
  2549  0E23                     	;# 
  2550  0E24                     	;# 
  2551  0E25                     	;# 
  2552  0E26                     	;# 
  2553  0E27                     	;# 
  2554  0E28                     	;# 
  2555  0E29                     	;# 
  2556  0E2A                     	;# 
  2557  0E2B                     	;# 
  2558  0E2C                     	;# 
  2559  0E2D                     	;# 
  2560  0E2E                     	;# 
  2561  0E2F                     	;# 
  2562  0E30                     	;# 
  2563  0E31                     	;# 
  2564  0E32                     	;# 
  2565  0E33                     	;# 
  2566  0E34                     	;# 
  2567  0E35                     	;# 
  2568  0E36                     	;# 
  2569  0E37                     	;# 
  2570  0E8F                     	;# 
  2571  0E90                     	;# 
  2572  0E91                     	;# 
  2573  0E92                     	;# 
  2574  0E93                     	;# 
  2575  0E94                     	;# 
  2576  0E95                     	;# 
  2577  0E96                     	;# 
  2578  0E97                     	;# 
  2579  0E9C                     	;# 
  2580  0E9D                     	;# 
  2581  0E9E                     	;# 
  2582  0EA1                     	;# 
  2583  0EA2                     	;# 
  2584  0EA3                     	;# 
  2585  0EA4                     	;# 
  2586  0EA5                     	;# 
  2587  0EA9                     	;# 
  2588  0EAA                     	;# 
  2589  0EAB                     	;# 
  2590  0EAC                     	;# 
  2591  0EB1                     	;# 
  2592  0EB2                     	;# 
  2593  0EB3                     	;# 
  2594  0EB8                     	;# 
  2595  0EB9                     	;# 
  2596  0EBA                     	;# 
  2597  0EBB                     	;# 
  2598  0EBC                     	;# 
  2599  0EBD                     	;# 
  2600  0EBE                     	;# 
  2601  0EC3                     	;# 
  2602  0EC5                     	;# 
  2603  0EC6                     	;# 
  2604  0EC7                     	;# 
  2605  0EC8                     	;# 
  2606  0EC9                     	;# 
  2607  0ECA                     	;# 
  2608  0ECB                     	;# 
  2609  0ECC                     	;# 
  2610  0F10                     	;# 
  2611  0F11                     	;# 
  2612  0F12                     	;# 
  2613  0F13                     	;# 
  2614  0F14                     	;# 
  2615  0F15                     	;# 
  2616  0F16                     	;# 
  2617  0F17                     	;# 
  2618  0F18                     	;# 
  2619  0F19                     	;# 
  2620  0F1A                     	;# 
  2621  0F1B                     	;# 
  2622  0F1C                     	;# 
  2623  0F1D                     	;# 
  2624  0F1E                     	;# 
  2625  0F1F                     	;# 
  2626  0F20                     	;# 
  2627  0F21                     	;# 
  2628  0F22                     	;# 
  2629  0F23                     	;# 
  2630  0F24                     	;# 
  2631  0F25                     	;# 
  2632  0F26                     	;# 
  2633  0F27                     	;# 
  2634  0F38                     	;# 
  2635  0F39                     	;# 
  2636  0F3A                     	;# 
  2637  0F3B                     	;# 
  2638  0F3C                     	;# 
  2639  0F3D                     	;# 
  2640  0F3E                     	;# 
  2641  0F3F                     	;# 
  2642  0F40                     	;# 
  2643  0F41                     	;# 
  2644  0F43                     	;# 
  2645  0F44                     	;# 
  2646  0F45                     	;# 
  2647  0F46                     	;# 
  2648  0F47                     	;# 
  2649  0F48                     	;# 
  2650  0F49                     	;# 
  2651  0F4A                     	;# 
  2652  0F4B                     	;# 
  2653  0F4C                     	;# 
  2654  0F4E                     	;# 
  2655  0F4F                     	;# 
  2656  0F50                     	;# 
  2657  0F51                     	;# 
  2658  0F52                     	;# 
  2659  0F53                     	;# 
  2660  0F54                     	;# 
  2661  0F55                     	;# 
  2662  0F56                     	;# 
  2663  0F57                     	;# 
  2664  0F65                     	;# 
  2665  0F68                     	;# 
  2666  0F69                     	;# 
  2667  0F6A                     	;# 
  2668  0F6B                     	;# 
  2669  0FE4                     	;# 
  2670  0FE5                     	;# 
  2671  0FE6                     	;# 
  2672  0FE7                     	;# 
  2673  0FE8                     	;# 
  2674  0FE9                     	;# 
  2675  0FEA                     	;# 
  2676  0FEB                     	;# 
  2677  0FED                     	;# 
  2678  0FEE                     	;# 
  2679  0FEF                     	;# 
  2680  0000                     	;# 
  2681  0001                     	;# 
  2682  0002                     	;# 
  2683  0003                     	;# 
  2684  0004                     	;# 
  2685  0005                     	;# 
  2686  0006                     	;# 
  2687  0007                     	;# 
  2688  0008                     	;# 
  2689  0009                     	;# 
  2690  000A                     	;# 
  2691  000B                     	;# 
  2692  000C                     	;# 
  2693  000D                     	;# 
  2694  000E                     	;# 
  2695  0010                     	;# 
  2696  0011                     	;# 
  2697  0012                     	;# 
  2698  0013                     	;# 
  2699  0016                     	;# 
  2700  0017                     	;# 
  2701  0018                     	;# 
  2702  001C                     	;# 
  2703  001C                     	;# 
  2704  001D                     	;# 
  2705  001D                     	;# 
  2706  001E                     	;# 
  2707  001F                     	;# 
  2708  008C                     	;# 
  2709  008C                     	;# 
  2710  008D                     	;# 
  2711  008E                     	;# 
  2712  008E                     	;# 
  2713  008F                     	;# 
  2714  0090                     	;# 
  2715  0090                     	;# 
  2716  0091                     	;# 
  2717  0093                     	;# 
  2718  0094                     	;# 
  2719  0095                     	;# 
  2720  0096                     	;# 
  2721  0097                     	;# 
  2722  0098                     	;# 
  2723  0099                     	;# 
  2724  009A                     	;# 
  2725  009B                     	;# 
  2726  009C                     	;# 
  2727  009D                     	;# 
  2728  009E                     	;# 
  2729  010C                     	;# 
  2730  010D                     	;# 
  2731  010E                     	;# 
  2732  010E                     	;# 
  2733  010F                     	;# 
  2734  0110                     	;# 
  2735  0110                     	;# 
  2736  0111                     	;# 
  2737  0112                     	;# 
  2738  0112                     	;# 
  2739  0113                     	;# 
  2740  0114                     	;# 
  2741  0114                     	;# 
  2742  0115                     	;# 
  2743  0116                     	;# 
  2744  0116                     	;# 
  2745  0117                     	;# 
  2746  0119                     	;# 
  2747  0119                     	;# 
  2748  0119                     	;# 
  2749  011A                     	;# 
  2750  011A                     	;# 
  2751  011A                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011B                     	;# 
  2755  011B                     	;# 
  2756  011B                     	;# 
  2757  011C                     	;# 
  2758  011C                     	;# 
  2759  011C                     	;# 
  2760  011D                     	;# 
  2761  011D                     	;# 
  2762  011D                     	;# 
  2763  011E                     	;# 
  2764  011E                     	;# 
  2765  011E                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  011F                     	;# 
  2769  011F                     	;# 
  2770  011F                     	;# 
  2771  018C                     	;# 
  2772  018D                     	;# 
  2773  018E                     	;# 
  2774  018F                     	;# 
  2775  0190                     	;# 
  2776  0191                     	;# 
  2777  0192                     	;# 
  2778  0196                     	;# 
  2779  0197                     	;# 
  2780  0198                     	;# 
  2781  0199                     	;# 
  2782  019A                     	;# 
  2783  019B                     	;# 
  2784  019C                     	;# 
  2785  020C                     	;# 
  2786  020C                     	;# 
  2787  020D                     	;# 
  2788  020E                     	;# 
  2789  020F                     	;# 
  2790  020F                     	;# 
  2791  0210                     	;# 
  2792  0210                     	;# 
  2793  0211                     	;# 
  2794  0211                     	;# 
  2795  0212                     	;# 
  2796  0212                     	;# 
  2797  0213                     	;# 
  2798  0214                     	;# 
  2799  0215                     	;# 
  2800  0215                     	;# 
  2801  0216                     	;# 
  2802  0216                     	;# 
  2803  0217                     	;# 
  2804  0217                     	;# 
  2805  0218                     	;# 
  2806  0218                     	;# 
  2807  0219                     	;# 
  2808  021A                     	;# 
  2809  021B                     	;# 
  2810  021B                     	;# 
  2811  021C                     	;# 
  2812  021C                     	;# 
  2813  021D                     	;# 
  2814  021D                     	;# 
  2815  021E                     	;# 
  2816  021F                     	;# 
  2817  028C                     	;# 
  2818  028C                     	;# 
  2819  028D                     	;# 
  2820  028D                     	;# 
  2821  028E                     	;# 
  2822  028F                     	;# 
  2823  0290                     	;# 
  2824  0290                     	;# 
  2825  0291                     	;# 
  2826  0292                     	;# 
  2827  0292                     	;# 
  2828  0293                     	;# 
  2829  0293                     	;# 
  2830  0294                     	;# 
  2831  0295                     	;# 
  2832  0296                     	;# 
  2833  0296                     	;# 
  2834  0297                     	;# 
  2835  0298                     	;# 
  2836  0298                     	;# 
  2837  0299                     	;# 
  2838  0299                     	;# 
  2839  029A                     	;# 
  2840  029B                     	;# 
  2841  029C                     	;# 
  2842  029C                     	;# 
  2843  029D                     	;# 
  2844  030C                     	;# 
  2845  030C                     	;# 
  2846  030D                     	;# 
  2847  030E                     	;# 
  2848  030F                     	;# 
  2849  0310                     	;# 
  2850  0310                     	;# 
  2851  0311                     	;# 
  2852  0312                     	;# 
  2853  0313                     	;# 
  2854  0314                     	;# 
  2855  0314                     	;# 
  2856  0315                     	;# 
  2857  0316                     	;# 
  2858  0317                     	;# 
  2859  0318                     	;# 
  2860  0318                     	;# 
  2861  0319                     	;# 
  2862  031A                     	;# 
  2863  031B                     	;# 
  2864  031C                     	;# 
  2865  031C                     	;# 
  2866  031D                     	;# 
  2867  031E                     	;# 
  2868  031F                     	;# 
  2869  038C                     	;# 
  2870  038D                     	;# 
  2871  038E                     	;# 
  2872  0390                     	;# 
  2873  0391                     	;# 
  2874  0392                     	;# 
  2875  040C                     	;# 
  2876  040D                     	;# 
  2877  040E                     	;# 
  2878  040F                     	;# 
  2879  0410                     	;# 
  2880  0411                     	;# 
  2881  0416                     	;# 
  2882  0416                     	;# 
  2883  0417                     	;# 
  2884  0418                     	;# 
  2885  0418                     	;# 
  2886  0419                     	;# 
  2887  041A                     	;# 
  2888  041A                     	;# 
  2889  041B                     	;# 
  2890  041C                     	;# 
  2891  041C                     	;# 
  2892  041D                     	;# 
  2893  041E                     	;# 
  2894  041F                     	;# 
  2895  048C                     	;# 
  2896  048C                     	;# 
  2897  048D                     	;# 
  2898  048E                     	;# 
  2899  048F                     	;# 
  2900  048F                     	;# 
  2901  0490                     	;# 
  2902  0491                     	;# 
  2903  0492                     	;# 
  2904  0492                     	;# 
  2905  0493                     	;# 
  2906  0494                     	;# 
  2907  0495                     	;# 
  2908  0495                     	;# 
  2909  0496                     	;# 
  2910  0497                     	;# 
  2911  0498                     	;# 
  2912  0499                     	;# 
  2913  049A                     	;# 
  2914  049B                     	;# 
  2915  049C                     	;# 
  2916  049D                     	;# 
  2917  050C                     	;# 
  2918  050C                     	;# 
  2919  050D                     	;# 
  2920  050E                     	;# 
  2921  050F                     	;# 
  2922  050F                     	;# 
  2923  0510                     	;# 
  2924  0511                     	;# 
  2925  0512                     	;# 
  2926  0512                     	;# 
  2927  0513                     	;# 
  2928  0514                     	;# 
  2929  0515                     	;# 
  2930  0515                     	;# 
  2931  0516                     	;# 
  2932  0517                     	;# 
  2933  0518                     	;# 
  2934  0519                     	;# 
  2935  051A                     	;# 
  2936  051B                     	;# 
  2937  051C                     	;# 
  2938  051D                     	;# 
  2939  058C                     	;# 
  2940  058C                     	;# 
  2941  058D                     	;# 
  2942  058E                     	;# 
  2943  058F                     	;# 
  2944  058F                     	;# 
  2945  0590                     	;# 
  2946  0591                     	;# 
  2947  0592                     	;# 
  2948  0593                     	;# 
  2949  060C                     	;# 
  2950  060D                     	;# 
  2951  060E                     	;# 
  2952  060F                     	;# 
  2953  0610                     	;# 
  2954  0611                     	;# 
  2955  0612                     	;# 
  2956  0613                     	;# 
  2957  0614                     	;# 
  2958  0616                     	;# 
  2959  0617                     	;# 
  2960  0618                     	;# 
  2961  0619                     	;# 
  2962  061A                     	;# 
  2963  061B                     	;# 
  2964  061C                     	;# 
  2965  061D                     	;# 
  2966  061E                     	;# 
  2967  068C                     	;# 
  2968  068D                     	;# 
  2969  068E                     	;# 
  2970  068F                     	;# 
  2971  0690                     	;# 
  2972  0691                     	;# 
  2973  0692                     	;# 
  2974  0693                     	;# 
  2975  0694                     	;# 
  2976  070C                     	;# 
  2977  070D                     	;# 
  2978  070E                     	;# 
  2979  070F                     	;# 
  2980  0710                     	;# 
  2981  0711                     	;# 
  2982  0712                     	;# 
  2983  0713                     	;# 
  2984  0714                     	;# 
  2985  0716                     	;# 
  2986  0717                     	;# 
  2987  0718                     	;# 
  2988  0719                     	;# 
  2989  071A                     	;# 
  2990  071B                     	;# 
  2991  071C                     	;# 
  2992  071D                     	;# 
  2993  071E                     	;# 
  2994  0796                     	;# 
  2995  0797                     	;# 
  2996  0798                     	;# 
  2997  0799                     	;# 
  2998  079A                     	;# 
  2999  079B                     	;# 
  3000  080C                     	;# 
  3001  080D                     	;# 
  3002  080E                     	;# 
  3003  080F                     	;# 
  3004  0810                     	;# 
  3005  0811                     	;# 
  3006  0812                     	;# 
  3007  0813                     	;# 
  3008  0814                     	;# 
  3009  081A                     	;# 
  3010  081B                     	;# 
  3011  081C                     	;# 
  3012  081D                     	;# 
  3013  081E                     	;# 
  3014  081F                     	;# 
  3015  088C                     	;# 
  3016  088D                     	;# 
  3017  088E                     	;# 
  3018  088F                     	;# 
  3019  0890                     	;# 
  3020  0891                     	;# 
  3021  0892                     	;# 
  3022  0893                     	;# 
  3023  0895                     	;# 
  3024  0896                     	;# 
  3025  0897                     	;# 
  3026  0898                     	;# 
  3027  0899                     	;# 
  3028  089A                     	;# 
  3029  089B                     	;# 
  3030  090C                     	;# 
  3031  090E                     	;# 
  3032  090F                     	;# 
  3033  091F                     	;# 
  3034  091F                     	;# 
  3035  098F                     	;# 
  3036  098F                     	;# 
  3037  0990                     	;# 
  3038  0991                     	;# 
  3039  0992                     	;# 
  3040  0993                     	;# 
  3041  0994                     	;# 
  3042  0995                     	;# 
  3043  0996                     	;# 
  3044  0997                     	;# 
  3045  0E0F                     	;# 
  3046  0E10                     	;# 
  3047  0E11                     	;# 
  3048  0E12                     	;# 
  3049  0E13                     	;# 
  3050  0E14                     	;# 
  3051  0E15                     	;# 
  3052  0E16                     	;# 
  3053  0E17                     	;# 
  3054  0E18                     	;# 
  3055  0E19                     	;# 
  3056  0E1A                     	;# 
  3057  0E1B                     	;# 
  3058  0E1C                     	;# 
  3059  0E1D                     	;# 
  3060  0E1E                     	;# 
  3061  0E1F                     	;# 
  3062  0E20                     	;# 
  3063  0E21                     	;# 
  3064  0E22                     	;# 
  3065  0E23                     	;# 
  3066  0E24                     	;# 
  3067  0E25                     	;# 
  3068  0E26                     	;# 
  3069  0E27                     	;# 
  3070  0E28                     	;# 
  3071  0E29                     	;# 
  3072  0E2A                     	;# 
  3073  0E2B                     	;# 
  3074  0E2C                     	;# 
  3075  0E2D                     	;# 
  3076  0E2E                     	;# 
  3077  0E2F                     	;# 
  3078  0E30                     	;# 
  3079  0E31                     	;# 
  3080  0E32                     	;# 
  3081  0E33                     	;# 
  3082  0E34                     	;# 
  3083  0E35                     	;# 
  3084  0E36                     	;# 
  3085  0E37                     	;# 
  3086  0E8F                     	;# 
  3087  0E90                     	;# 
  3088  0E91                     	;# 
  3089  0E92                     	;# 
  3090  0E93                     	;# 
  3091  0E94                     	;# 
  3092  0E95                     	;# 
  3093  0E96                     	;# 
  3094  0E97                     	;# 
  3095  0E9C                     	;# 
  3096  0E9D                     	;# 
  3097  0E9E                     	;# 
  3098  0EA1                     	;# 
  3099  0EA2                     	;# 
  3100  0EA3                     	;# 
  3101  0EA4                     	;# 
  3102  0EA5                     	;# 
  3103  0EA9                     	;# 
  3104  0EAA                     	;# 
  3105  0EAB                     	;# 
  3106  0EAC                     	;# 
  3107  0EB1                     	;# 
  3108  0EB2                     	;# 
  3109  0EB3                     	;# 
  3110  0EB8                     	;# 
  3111  0EB9                     	;# 
  3112  0EBA                     	;# 
  3113  0EBB                     	;# 
  3114  0EBC                     	;# 
  3115  0EBD                     	;# 
  3116  0EBE                     	;# 
  3117  0EC3                     	;# 
  3118  0EC5                     	;# 
  3119  0EC6                     	;# 
  3120  0EC7                     	;# 
  3121  0EC8                     	;# 
  3122  0EC9                     	;# 
  3123  0ECA                     	;# 
  3124  0ECB                     	;# 
  3125  0ECC                     	;# 
  3126  0F10                     	;# 
  3127  0F11                     	;# 
  3128  0F12                     	;# 
  3129  0F13                     	;# 
  3130  0F14                     	;# 
  3131  0F15                     	;# 
  3132  0F16                     	;# 
  3133  0F17                     	;# 
  3134  0F18                     	;# 
  3135  0F19                     	;# 
  3136  0F1A                     	;# 
  3137  0F1B                     	;# 
  3138  0F1C                     	;# 
  3139  0F1D                     	;# 
  3140  0F1E                     	;# 
  3141  0F1F                     	;# 
  3142  0F20                     	;# 
  3143  0F21                     	;# 
  3144  0F22                     	;# 
  3145  0F23                     	;# 
  3146  0F24                     	;# 
  3147  0F25                     	;# 
  3148  0F26                     	;# 
  3149  0F27                     	;# 
  3150  0F38                     	;# 
  3151  0F39                     	;# 
  3152  0F3A                     	;# 
  3153  0F3B                     	;# 
  3154  0F3C                     	;# 
  3155  0F3D                     	;# 
  3156  0F3E                     	;# 
  3157  0F3F                     	;# 
  3158  0F40                     	;# 
  3159  0F41                     	;# 
  3160  0F43                     	;# 
  3161  0F44                     	;# 
  3162  0F45                     	;# 
  3163  0F46                     	;# 
  3164  0F47                     	;# 
  3165  0F48                     	;# 
  3166  0F49                     	;# 
  3167  0F4A                     	;# 
  3168  0F4B                     	;# 
  3169  0F4C                     	;# 
  3170  0F4E                     	;# 
  3171  0F4F                     	;# 
  3172  0F50                     	;# 
  3173  0F51                     	;# 
  3174  0F52                     	;# 
  3175  0F53                     	;# 
  3176  0F54                     	;# 
  3177  0F55                     	;# 
  3178  0F56                     	;# 
  3179  0F57                     	;# 
  3180  0F65                     	;# 
  3181  0F68                     	;# 
  3182  0F69                     	;# 
  3183  0F6A                     	;# 
  3184  0F6B                     	;# 
  3185  0FE4                     	;# 
  3186  0FE5                     	;# 
  3187  0FE6                     	;# 
  3188  0FE7                     	;# 
  3189  0FE8                     	;# 
  3190  0FE9                     	;# 
  3191  0FEA                     	;# 
  3192  0FEB                     	;# 
  3193  0FED                     	;# 
  3194  0FEE                     	;# 
  3195  0FEF                     	;# 
  3196  0000                     	;# 
  3197  0001                     	;# 
  3198  0002                     	;# 
  3199  0003                     	;# 
  3200  0004                     	;# 
  3201  0005                     	;# 
  3202  0006                     	;# 
  3203  0007                     	;# 
  3204  0008                     	;# 
  3205  0009                     	;# 
  3206  000A                     	;# 
  3207  000B                     	;# 
  3208  000C                     	;# 
  3209  000D                     	;# 
  3210  000E                     	;# 
  3211  0010                     	;# 
  3212  0011                     	;# 
  3213  0012                     	;# 
  3214  0013                     	;# 
  3215  0016                     	;# 
  3216  0017                     	;# 
  3217  0018                     	;# 
  3218  001C                     	;# 
  3219  001C                     	;# 
  3220  001D                     	;# 
  3221  001D                     	;# 
  3222  001E                     	;# 
  3223  001F                     	;# 
  3224  008C                     	;# 
  3225  008C                     	;# 
  3226  008D                     	;# 
  3227  008E                     	;# 
  3228  008E                     	;# 
  3229  008F                     	;# 
  3230  0090                     	;# 
  3231  0090                     	;# 
  3232  0091                     	;# 
  3233  0093                     	;# 
  3234  0094                     	;# 
  3235  0095                     	;# 
  3236  0096                     	;# 
  3237  0097                     	;# 
  3238  0098                     	;# 
  3239  0099                     	;# 
  3240  009A                     	;# 
  3241  009B                     	;# 
  3242  009C                     	;# 
  3243  009D                     	;# 
  3244  009E                     	;# 
  3245  010C                     	;# 
  3246  010D                     	;# 
  3247  010E                     	;# 
  3248  010E                     	;# 
  3249  010F                     	;# 
  3250  0110                     	;# 
  3251  0110                     	;# 
  3252  0111                     	;# 
  3253  0112                     	;# 
  3254  0112                     	;# 
  3255  0113                     	;# 
  3256  0114                     	;# 
  3257  0114                     	;# 
  3258  0115                     	;# 
  3259  0116                     	;# 
  3260  0116                     	;# 
  3261  0117                     	;# 
  3262  0119                     	;# 
  3263  0119                     	;# 
  3264  0119                     	;# 
  3265  011A                     	;# 
  3266  011A                     	;# 
  3267  011A                     	;# 
  3268  011B                     	;# 
  3269  011B                     	;# 
  3270  011B                     	;# 
  3271  011B                     	;# 
  3272  011B                     	;# 
  3273  011C                     	;# 
  3274  011C                     	;# 
  3275  011C                     	;# 
  3276  011D                     	;# 
  3277  011D                     	;# 
  3278  011D                     	;# 
  3279  011E                     	;# 
  3280  011E                     	;# 
  3281  011E                     	;# 
  3282  011F                     	;# 
  3283  011F                     	;# 
  3284  011F                     	;# 
  3285  011F                     	;# 
  3286  011F                     	;# 
  3287  018C                     	;# 
  3288  018D                     	;# 
  3289  018E                     	;# 
  3290  018F                     	;# 
  3291  0190                     	;# 
  3292  0191                     	;# 
  3293  0192                     	;# 
  3294  0196                     	;# 
  3295  0197                     	;# 
  3296  0198                     	;# 
  3297  0199                     	;# 
  3298  019A                     	;# 
  3299  019B                     	;# 
  3300  019C                     	;# 
  3301  020C                     	;# 
  3302  020C                     	;# 
  3303  020D                     	;# 
  3304  020E                     	;# 
  3305  020F                     	;# 
  3306  020F                     	;# 
  3307  0210                     	;# 
  3308  0210                     	;# 
  3309  0211                     	;# 
  3310  0211                     	;# 
  3311  0212                     	;# 
  3312  0212                     	;# 
  3313  0213                     	;# 
  3314  0214                     	;# 
  3315  0215                     	;# 
  3316  0215                     	;# 
  3317  0216                     	;# 
  3318  0216                     	;# 
  3319  0217                     	;# 
  3320  0217                     	;# 
  3321  0218                     	;# 
  3322  0218                     	;# 
  3323  0219                     	;# 
  3324  021A                     	;# 
  3325  021B                     	;# 
  3326  021B                     	;# 
  3327  021C                     	;# 
  3328  021C                     	;# 
  3329  021D                     	;# 
  3330  021D                     	;# 
  3331  021E                     	;# 
  3332  021F                     	;# 
  3333  028C                     	;# 
  3334  028C                     	;# 
  3335  028D                     	;# 
  3336  028D                     	;# 
  3337  028E                     	;# 
  3338  028F                     	;# 
  3339  0290                     	;# 
  3340  0290                     	;# 
  3341  0291                     	;# 
  3342  0292                     	;# 
  3343  0292                     	;# 
  3344  0293                     	;# 
  3345  0293                     	;# 
  3346  0294                     	;# 
  3347  0295                     	;# 
  3348  0296                     	;# 
  3349  0296                     	;# 
  3350  0297                     	;# 
  3351  0298                     	;# 
  3352  0298                     	;# 
  3353  0299                     	;# 
  3354  0299                     	;# 
  3355  029A                     	;# 
  3356  029B                     	;# 
  3357  029C                     	;# 
  3358  029C                     	;# 
  3359  029D                     	;# 
  3360  030C                     	;# 
  3361  030C                     	;# 
  3362  030D                     	;# 
  3363  030E                     	;# 
  3364  030F                     	;# 
  3365  0310                     	;# 
  3366  0310                     	;# 
  3367  0311                     	;# 
  3368  0312                     	;# 
  3369  0313                     	;# 
  3370  0314                     	;# 
  3371  0314                     	;# 
  3372  0315                     	;# 
  3373  0316                     	;# 
  3374  0317                     	;# 
  3375  0318                     	;# 
  3376  0318                     	;# 
  3377  0319                     	;# 
  3378  031A                     	;# 
  3379  031B                     	;# 
  3380  031C                     	;# 
  3381  031C                     	;# 
  3382  031D                     	;# 
  3383  031E                     	;# 
  3384  031F                     	;# 
  3385  038C                     	;# 
  3386  038D                     	;# 
  3387  038E                     	;# 
  3388  0390                     	;# 
  3389  0391                     	;# 
  3390  0392                     	;# 
  3391  040C                     	;# 
  3392  040D                     	;# 
  3393  040E                     	;# 
  3394  040F                     	;# 
  3395  0410                     	;# 
  3396  0411                     	;# 
  3397  0416                     	;# 
  3398  0416                     	;# 
  3399  0417                     	;# 
  3400  0418                     	;# 
  3401  0418                     	;# 
  3402  0419                     	;# 
  3403  041A                     	;# 
  3404  041A                     	;# 
  3405  041B                     	;# 
  3406  041C                     	;# 
  3407  041C                     	;# 
  3408  041D                     	;# 
  3409  041E                     	;# 
  3410  041F                     	;# 
  3411  048C                     	;# 
  3412  048C                     	;# 
  3413  048D                     	;# 
  3414  048E                     	;# 
  3415  048F                     	;# 
  3416  048F                     	;# 
  3417  0490                     	;# 
  3418  0491                     	;# 
  3419  0492                     	;# 
  3420  0492                     	;# 
  3421  0493                     	;# 
  3422  0494                     	;# 
  3423  0495                     	;# 
  3424  0495                     	;# 
  3425  0496                     	;# 
  3426  0497                     	;# 
  3427  0498                     	;# 
  3428  0499                     	;# 
  3429  049A                     	;# 
  3430  049B                     	;# 
  3431  049C                     	;# 
  3432  049D                     	;# 
  3433  050C                     	;# 
  3434  050C                     	;# 
  3435  050D                     	;# 
  3436  050E                     	;# 
  3437  050F                     	;# 
  3438  050F                     	;# 
  3439  0510                     	;# 
  3440  0511                     	;# 
  3441  0512                     	;# 
  3442  0512                     	;# 
  3443  0513                     	;# 
  3444  0514                     	;# 
  3445  0515                     	;# 
  3446  0515                     	;# 
  3447  0516                     	;# 
  3448  0517                     	;# 
  3449  0518                     	;# 
  3450  0519                     	;# 
  3451  051A                     	;# 
  3452  051B                     	;# 
  3453  051C                     	;# 
  3454  051D                     	;# 
  3455  058C                     	;# 
  3456  058C                     	;# 
  3457  058D                     	;# 
  3458  058E                     	;# 
  3459  058F                     	;# 
  3460  058F                     	;# 
  3461  0590                     	;# 
  3462  0591                     	;# 
  3463  0592                     	;# 
  3464  0593                     	;# 
  3465  060C                     	;# 
  3466  060D                     	;# 
  3467  060E                     	;# 
  3468  060F                     	;# 
  3469  0610                     	;# 
  3470  0611                     	;# 
  3471  0612                     	;# 
  3472  0613                     	;# 
  3473  0614                     	;# 
  3474  0616                     	;# 
  3475  0617                     	;# 
  3476  0618                     	;# 
  3477  0619                     	;# 
  3478  061A                     	;# 
  3479  061B                     	;# 
  3480  061C                     	;# 
  3481  061D                     	;# 
  3482  061E                     	;# 
  3483  068C                     	;# 
  3484  068D                     	;# 
  3485  068E                     	;# 
  3486  068F                     	;# 
  3487  0690                     	;# 
  3488  0691                     	;# 
  3489  0692                     	;# 
  3490  0693                     	;# 
  3491  0694                     	;# 
  3492  070C                     	;# 
  3493  070D                     	;# 
  3494  070E                     	;# 
  3495  070F                     	;# 
  3496  0710                     	;# 
  3497  0711                     	;# 
  3498  0712                     	;# 
  3499  0713                     	;# 
  3500  0714                     	;# 
  3501  0716                     	;# 
  3502  0717                     	;# 
  3503  0718                     	;# 
  3504  0719                     	;# 
  3505  071A                     	;# 
  3506  071B                     	;# 
  3507  071C                     	;# 
  3508  071D                     	;# 
  3509  071E                     	;# 
  3510  0796                     	;# 
  3511  0797                     	;# 
  3512  0798                     	;# 
  3513  0799                     	;# 
  3514  079A                     	;# 
  3515  079B                     	;# 
  3516  080C                     	;# 
  3517  080D                     	;# 
  3518  080E                     	;# 
  3519  080F                     	;# 
  3520  0810                     	;# 
  3521  0811                     	;# 
  3522  0812                     	;# 
  3523  0813                     	;# 
  3524  0814                     	;# 
  3525  081A                     	;# 
  3526  081B                     	;# 
  3527  081C                     	;# 
  3528  081D                     	;# 
  3529  081E                     	;# 
  3530  081F                     	;# 
  3531  088C                     	;# 
  3532  088D                     	;# 
  3533  088E                     	;# 
  3534  088F                     	;# 
  3535  0890                     	;# 
  3536  0891                     	;# 
  3537  0892                     	;# 
  3538  0893                     	;# 
  3539  0895                     	;# 
  3540  0896                     	;# 
  3541  0897                     	;# 
  3542  0898                     	;# 
  3543  0899                     	;# 
  3544  089A                     	;# 
  3545  089B                     	;# 
  3546  090C                     	;# 
  3547  090E                     	;# 
  3548  090F                     	;# 
  3549  091F                     	;# 
  3550  091F                     	;# 
  3551  098F                     	;# 
  3552  098F                     	;# 
  3553  0990                     	;# 
  3554  0991                     	;# 
  3555  0992                     	;# 
  3556  0993                     	;# 
  3557  0994                     	;# 
  3558  0995                     	;# 
  3559  0996                     	;# 
  3560  0997                     	;# 
  3561  0E0F                     	;# 
  3562  0E10                     	;# 
  3563  0E11                     	;# 
  3564  0E12                     	;# 
  3565  0E13                     	;# 
  3566  0E14                     	;# 
  3567  0E15                     	;# 
  3568  0E16                     	;# 
  3569  0E17                     	;# 
  3570  0E18                     	;# 
  3571  0E19                     	;# 
  3572  0E1A                     	;# 
  3573  0E1B                     	;# 
  3574  0E1C                     	;# 
  3575  0E1D                     	;# 
  3576  0E1E                     	;# 
  3577  0E1F                     	;# 
  3578  0E20                     	;# 
  3579  0E21                     	;# 
  3580  0E22                     	;# 
  3581  0E23                     	;# 
  3582  0E24                     	;# 
  3583  0E25                     	;# 
  3584  0E26                     	;# 
  3585  0E27                     	;# 
  3586  0E28                     	;# 
  3587  0E29                     	;# 
  3588  0E2A                     	;# 
  3589  0E2B                     	;# 
  3590  0E2C                     	;# 
  3591  0E2D                     	;# 
  3592  0E2E                     	;# 
  3593  0E2F                     	;# 
  3594  0E30                     	;# 
  3595  0E31                     	;# 
  3596  0E32                     	;# 
  3597  0E33                     	;# 
  3598  0E34                     	;# 
  3599  0E35                     	;# 
  3600  0E36                     	;# 
  3601  0E37                     	;# 
  3602  0E8F                     	;# 
  3603  0E90                     	;# 
  3604  0E91                     	;# 
  3605  0E92                     	;# 
  3606  0E93                     	;# 
  3607  0E94                     	;# 
  3608  0E95                     	;# 
  3609  0E96                     	;# 
  3610  0E97                     	;# 
  3611  0E9C                     	;# 
  3612  0E9D                     	;# 
  3613  0E9E                     	;# 
  3614  0EA1                     	;# 
  3615  0EA2                     	;# 
  3616  0EA3                     	;# 
  3617  0EA4                     	;# 
  3618  0EA5                     	;# 
  3619  0EA9                     	;# 
  3620  0EAA                     	;# 
  3621  0EAB                     	;# 
  3622  0EAC                     	;# 
  3623  0EB1                     	;# 
  3624  0EB2                     	;# 
  3625  0EB3                     	;# 
  3626  0EB8                     	;# 
  3627  0EB9                     	;# 
  3628  0EBA                     	;# 
  3629  0EBB                     	;# 
  3630  0EBC                     	;# 
  3631  0EBD                     	;# 
  3632  0EBE                     	;# 
  3633  0EC3                     	;# 
  3634  0EC5                     	;# 
  3635  0EC6                     	;# 
  3636  0EC7                     	;# 
  3637  0EC8                     	;# 
  3638  0EC9                     	;# 
  3639  0ECA                     	;# 
  3640  0ECB                     	;# 
  3641  0ECC                     	;# 
  3642  0F10                     	;# 
  3643  0F11                     	;# 
  3644  0F12                     	;# 
  3645  0F13                     	;# 
  3646  0F14                     	;# 
  3647  0F15                     	;# 
  3648  0F16                     	;# 
  3649  0F17                     	;# 
  3650  0F18                     	;# 
  3651  0F19                     	;# 
  3652  0F1A                     	;# 
  3653  0F1B                     	;# 
  3654  0F1C                     	;# 
  3655  0F1D                     	;# 
  3656  0F1E                     	;# 
  3657  0F1F                     	;# 
  3658  0F20                     	;# 
  3659  0F21                     	;# 
  3660  0F22                     	;# 
  3661  0F23                     	;# 
  3662  0F24                     	;# 
  3663  0F25                     	;# 
  3664  0F26                     	;# 
  3665  0F27                     	;# 
  3666  0F38                     	;# 
  3667  0F39                     	;# 
  3668  0F3A                     	;# 
  3669  0F3B                     	;# 
  3670  0F3C                     	;# 
  3671  0F3D                     	;# 
  3672  0F3E                     	;# 
  3673  0F3F                     	;# 
  3674  0F40                     	;# 
  3675  0F41                     	;# 
  3676  0F43                     	;# 
  3677  0F44                     	;# 
  3678  0F45                     	;# 
  3679  0F46                     	;# 
  3680  0F47                     	;# 
  3681  0F48                     	;# 
  3682  0F49                     	;# 
  3683  0F4A                     	;# 
  3684  0F4B                     	;# 
  3685  0F4C                     	;# 
  3686  0F4E                     	;# 
  3687  0F4F                     	;# 
  3688  0F50                     	;# 
  3689  0F51                     	;# 
  3690  0F52                     	;# 
  3691  0F53                     	;# 
  3692  0F54                     	;# 
  3693  0F55                     	;# 
  3694  0F56                     	;# 
  3695  0F57                     	;# 
  3696  0F65                     	;# 
  3697  0F68                     	;# 
  3698  0F69                     	;# 
  3699  0F6A                     	;# 
  3700  0F6B                     	;# 
  3701  0FE4                     	;# 
  3702  0FE5                     	;# 
  3703  0FE6                     	;# 
  3704  0FE7                     	;# 
  3705  0FE8                     	;# 
  3706  0FE9                     	;# 
  3707  0FEA                     	;# 
  3708  0FEB                     	;# 
  3709  0FED                     	;# 
  3710  0FEE                     	;# 
  3711  0FEF                     	;# 
  3712  0000                     	;# 
  3713  0001                     	;# 
  3714  0002                     	;# 
  3715  0003                     	;# 
  3716  0004                     	;# 
  3717  0005                     	;# 
  3718  0006                     	;# 
  3719  0007                     	;# 
  3720  0008                     	;# 
  3721  0009                     	;# 
  3722  000A                     	;# 
  3723  000B                     	;# 
  3724  000C                     	;# 
  3725  000D                     	;# 
  3726  000E                     	;# 
  3727  0010                     	;# 
  3728  0011                     	;# 
  3729  0012                     	;# 
  3730  0013                     	;# 
  3731  0016                     	;# 
  3732  0017                     	;# 
  3733  0018                     	;# 
  3734  001C                     	;# 
  3735  001C                     	;# 
  3736  001D                     	;# 
  3737  001D                     	;# 
  3738  001E                     	;# 
  3739  001F                     	;# 
  3740  008C                     	;# 
  3741  008C                     	;# 
  3742  008D                     	;# 
  3743  008E                     	;# 
  3744  008E                     	;# 
  3745  008F                     	;# 
  3746  0090                     	;# 
  3747  0090                     	;# 
  3748  0091                     	;# 
  3749  0093                     	;# 
  3750  0094                     	;# 
  3751  0095                     	;# 
  3752  0096                     	;# 
  3753  0097                     	;# 
  3754  0098                     	;# 
  3755  0099                     	;# 
  3756  009A                     	;# 
  3757  009B                     	;# 
  3758  009C                     	;# 
  3759  009D                     	;# 
  3760  009E                     	;# 
  3761  010C                     	;# 
  3762  010D                     	;# 
  3763  010E                     	;# 
  3764  010E                     	;# 
  3765  010F                     	;# 
  3766  0110                     	;# 
  3767  0110                     	;# 
  3768  0111                     	;# 
  3769  0112                     	;# 
  3770  0112                     	;# 
  3771  0113                     	;# 
  3772  0114                     	;# 
  3773  0114                     	;# 
  3774  0115                     	;# 
  3775  0116                     	;# 
  3776  0116                     	;# 
  3777  0117                     	;# 
  3778  0119                     	;# 
  3779  0119                     	;# 
  3780  0119                     	;# 
  3781  011A                     	;# 
  3782  011A                     	;# 
  3783  011A                     	;# 
  3784  011B                     	;# 
  3785  011B                     	;# 
  3786  011B                     	;# 
  3787  011B                     	;# 
  3788  011B                     	;# 
  3789  011C                     	;# 
  3790  011C                     	;# 
  3791  011C                     	;# 
  3792  011D                     	;# 
  3793  011D                     	;# 
  3794  011D                     	;# 
  3795  011E                     	;# 
  3796  011E                     	;# 
  3797  011E                     	;# 
  3798  011F                     	;# 
  3799  011F                     	;# 
  3800  011F                     	;# 
  3801  011F                     	;# 
  3802  011F                     	;# 
  3803  018C                     	;# 
  3804  018D                     	;# 
  3805  018E                     	;# 
  3806  018F                     	;# 
  3807  0190                     	;# 
  3808  0191                     	;# 
  3809  0192                     	;# 
  3810  0196                     	;# 
  3811  0197                     	;# 
  3812  0198                     	;# 
  3813  0199                     	;# 
  3814  019A                     	;# 
  3815  019B                     	;# 
  3816  019C                     	;# 
  3817  020C                     	;# 
  3818  020C                     	;# 
  3819  020D                     	;# 
  3820  020E                     	;# 
  3821  020F                     	;# 
  3822  020F                     	;# 
  3823  0210                     	;# 
  3824  0210                     	;# 
  3825  0211                     	;# 
  3826  0211                     	;# 
  3827  0212                     	;# 
  3828  0212                     	;# 
  3829  0213                     	;# 
  3830  0214                     	;# 
  3831  0215                     	;# 
  3832  0215                     	;# 
  3833  0216                     	;# 
  3834  0216                     	;# 
  3835  0217                     	;# 
  3836  0217                     	;# 
  3837  0218                     	;# 
  3838  0218                     	;# 
  3839  0219                     	;# 
  3840  021A                     	;# 
  3841  021B                     	;# 
  3842  021B                     	;# 
  3843  021C                     	;# 
  3844  021C                     	;# 
  3845  021D                     	;# 
  3846  021D                     	;# 
  3847  021E                     	;# 
  3848  021F                     	;# 
  3849  028C                     	;# 
  3850  028C                     	;# 
  3851  028D                     	;# 
  3852  028D                     	;# 
  3853  028E                     	;# 
  3854  028F                     	;# 
  3855  0290                     	;# 
  3856  0290                     	;# 
  3857  0291                     	;# 
  3858  0292                     	;# 
  3859  0292                     	;# 
  3860  0293                     	;# 
  3861  0293                     	;# 
  3862  0294                     	;# 
  3863  0295                     	;# 
  3864  0296                     	;# 
  3865  0296                     	;# 
  3866  0297                     	;# 
  3867  0298                     	;# 
  3868  0298                     	;# 
  3869  0299                     	;# 
  3870  0299                     	;# 
  3871  029A                     	;# 
  3872  029B                     	;# 
  3873  029C                     	;# 
  3874  029C                     	;# 
  3875  029D                     	;# 
  3876  030C                     	;# 
  3877  030C                     	;# 
  3878  030D                     	;# 
  3879  030E                     	;# 
  3880  030F                     	;# 
  3881  0310                     	;# 
  3882  0310                     	;# 
  3883  0311                     	;# 
  3884  0312                     	;# 
  3885  0313                     	;# 
  3886  0314                     	;# 
  3887  0314                     	;# 
  3888  0315                     	;# 
  3889  0316                     	;# 
  3890  0317                     	;# 
  3891  0318                     	;# 
  3892  0318                     	;# 
  3893  0319                     	;# 
  3894  031A                     	;# 
  3895  031B                     	;# 
  3896  031C                     	;# 
  3897  031C                     	;# 
  3898  031D                     	;# 
  3899  031E                     	;# 
  3900  031F                     	;# 
  3901  038C                     	;# 
  3902  038D                     	;# 
  3903  038E                     	;# 
  3904  0390                     	;# 
  3905  0391                     	;# 
  3906  0392                     	;# 
  3907  040C                     	;# 
  3908  040D                     	;# 
  3909  040E                     	;# 
  3910  040F                     	;# 
  3911  0410                     	;# 
  3912  0411                     	;# 
  3913  0416                     	;# 
  3914  0416                     	;# 
  3915  0417                     	;# 
  3916  0418                     	;# 
  3917  0418                     	;# 
  3918  0419                     	;# 
  3919  041A                     	;# 
  3920  041A                     	;# 
  3921  041B                     	;# 
  3922  041C                     	;# 
  3923  041C                     	;# 
  3924  041D                     	;# 
  3925  041E                     	;# 
  3926  041F                     	;# 
  3927  048C                     	;# 
  3928  048C                     	;# 
  3929  048D                     	;# 
  3930  048E                     	;# 
  3931  048F                     	;# 
  3932  048F                     	;# 
  3933  0490                     	;# 
  3934  0491                     	;# 
  3935  0492                     	;# 
  3936  0492                     	;# 
  3937  0493                     	;# 
  3938  0494                     	;# 
  3939  0495                     	;# 
  3940  0495                     	;# 
  3941  0496                     	;# 
  3942  0497                     	;# 
  3943  0498                     	;# 
  3944  0499                     	;# 
  3945  049A                     	;# 
  3946  049B                     	;# 
  3947  049C                     	;# 
  3948  049D                     	;# 
  3949  050C                     	;# 
  3950  050C                     	;# 
  3951  050D                     	;# 
  3952  050E                     	;# 
  3953  050F                     	;# 
  3954  050F                     	;# 
  3955  0510                     	;# 
  3956  0511                     	;# 
  3957  0512                     	;# 
  3958  0512                     	;# 
  3959  0513                     	;# 
  3960  0514                     	;# 
  3961  0515                     	;# 
  3962  0515                     	;# 
  3963  0516                     	;# 
  3964  0517                     	;# 
  3965  0518                     	;# 
  3966  0519                     	;# 
  3967  051A                     	;# 
  3968  051B                     	;# 
  3969  051C                     	;# 
  3970  051D                     	;# 
  3971  058C                     	;# 
  3972  058C                     	;# 
  3973  058D                     	;# 
  3974  058E                     	;# 
  3975  058F                     	;# 
  3976  058F                     	;# 
  3977  0590                     	;# 
  3978  0591                     	;# 
  3979  0592                     	;# 
  3980  0593                     	;# 
  3981  060C                     	;# 
  3982  060D                     	;# 
  3983  060E                     	;# 
  3984  060F                     	;# 
  3985  0610                     	;# 
  3986  0611                     	;# 
  3987  0612                     	;# 
  3988  0613                     	;# 
  3989  0614                     	;# 
  3990  0616                     	;# 
  3991  0617                     	;# 
  3992  0618                     	;# 
  3993  0619                     	;# 
  3994  061A                     	;# 
  3995  061B                     	;# 
  3996  061C                     	;# 
  3997  061D                     	;# 
  3998  061E                     	;# 
  3999  068C                     	;# 
  4000  068D                     	;# 
  4001  068E                     	;# 
  4002  068F                     	;# 
  4003  0690                     	;# 
  4004  0691                     	;# 
  4005  0692                     	;# 
  4006  0693                     	;# 
  4007  0694                     	;# 
  4008  070C                     	;# 
  4009  070D                     	;# 
  4010  070E                     	;# 
  4011  070F                     	;# 
  4012  0710                     	;# 
  4013  0711                     	;# 
  4014  0712                     	;# 
  4015  0713                     	;# 
  4016  0714                     	;# 
  4017  0716                     	;# 
  4018  0717                     	;# 
  4019  0718                     	;# 
  4020  0719                     	;# 
  4021  071A                     	;# 
  4022  071B                     	;# 
  4023  071C                     	;# 
  4024  071D                     	;# 
  4025  071E                     	;# 
  4026  0796                     	;# 
  4027  0797                     	;# 
  4028  0798                     	;# 
  4029  0799                     	;# 
  4030  079A                     	;# 
  4031  079B                     	;# 
  4032  080C                     	;# 
  4033  080D                     	;# 
  4034  080E                     	;# 
  4035  080F                     	;# 
  4036  0810                     	;# 
  4037  0811                     	;# 
  4038  0812                     	;# 
  4039  0813                     	;# 
  4040  0814                     	;# 
  4041  081A                     	;# 
  4042  081B                     	;# 
  4043  081C                     	;# 
  4044  081D                     	;# 
  4045  081E                     	;# 
  4046  081F                     	;# 
  4047  088C                     	;# 
  4048  088D                     	;# 
  4049  088E                     	;# 
  4050  088F                     	;# 
  4051  0890                     	;# 
  4052  0891                     	;# 
  4053  0892                     	;# 
  4054  0893                     	;# 
  4055  0895                     	;# 
  4056  0896                     	;# 
  4057  0897                     	;# 
  4058  0898                     	;# 
  4059  0899                     	;# 
  4060  089A                     	;# 
  4061  089B                     	;# 
  4062  090C                     	;# 
  4063  090E                     	;# 
  4064  090F                     	;# 
  4065  091F                     	;# 
  4066  091F                     	;# 
  4067  098F                     	;# 
  4068  098F                     	;# 
  4069  0990                     	;# 
  4070  0991                     	;# 
  4071  0992                     	;# 
  4072  0993                     	;# 
  4073  0994                     	;# 
  4074  0995                     	;# 
  4075  0996                     	;# 
  4076  0997                     	;# 
  4077  0E0F                     	;# 
  4078  0E10                     	;# 
  4079  0E11                     	;# 
  4080  0E12                     	;# 
  4081  0E13                     	;# 
  4082  0E14                     	;# 
  4083  0E15                     	;# 
  4084  0E16                     	;# 
  4085  0E17                     	;# 
  4086  0E18                     	;# 
  4087  0E19                     	;# 
  4088  0E1A                     	;# 
  4089  0E1B                     	;# 
  4090  0E1C                     	;# 
  4091  0E1D                     	;# 
  4092  0E1E                     	;# 
  4093  0E1F                     	;# 
  4094  0E20                     	;# 
  4095  0E21                     	;# 
  4096  0E22                     	;# 
  4097  0E23                     	;# 
  4098  0E24                     	;# 
  4099  0E25                     	;# 
  4100  0E26                     	;# 
  4101  0E27                     	;# 
  4102  0E28                     	;# 
  4103  0E29                     	;# 
  4104  0E2A                     	;# 
  4105  0E2B                     	;# 
  4106  0E2C                     	;# 
  4107  0E2D                     	;# 
  4108  0E2E                     	;# 
  4109  0E2F                     	;# 
  4110  0E30                     	;# 
  4111  0E31                     	;# 
  4112  0E32                     	;# 
  4113  0E33                     	;# 
  4114  0E34                     	;# 
  4115  0E35                     	;# 
  4116  0E36                     	;# 
  4117  0E37                     	;# 
  4118  0E8F                     	;# 
  4119  0E90                     	;# 
  4120  0E91                     	;# 
  4121  0E92                     	;# 
  4122  0E93                     	;# 
  4123  0E94                     	;# 
  4124  0E95                     	;# 
  4125  0E96                     	;# 
  4126  0E97                     	;# 
  4127  0E9C                     	;# 
  4128  0E9D                     	;# 
  4129  0E9E                     	;# 
  4130  0EA1                     	;# 
  4131  0EA2                     	;# 
  4132  0EA3                     	;# 
  4133  0EA4                     	;# 
  4134  0EA5                     	;# 
  4135  0EA9                     	;# 
  4136  0EAA                     	;# 
  4137  0EAB                     	;# 
  4138  0EAC                     	;# 
  4139  0EB1                     	;# 
  4140  0EB2                     	;# 
  4141  0EB3                     	;# 
  4142  0EB8                     	;# 
  4143  0EB9                     	;# 
  4144  0EBA                     	;# 
  4145  0EBB                     	;# 
  4146  0EBC                     	;# 
  4147  0EBD                     	;# 
  4148  0EBE                     	;# 
  4149  0EC3                     	;# 
  4150  0EC5                     	;# 
  4151  0EC6                     	;# 
  4152  0EC7                     	;# 
  4153  0EC8                     	;# 
  4154  0EC9                     	;# 
  4155  0ECA                     	;# 
  4156  0ECB                     	;# 
  4157  0ECC                     	;# 
  4158  0F10                     	;# 
  4159  0F11                     	;# 
  4160  0F12                     	;# 
  4161  0F13                     	;# 
  4162  0F14                     	;# 
  4163  0F15                     	;# 
  4164  0F16                     	;# 
  4165  0F17                     	;# 
  4166  0F18                     	;# 
  4167  0F19                     	;# 
  4168  0F1A                     	;# 
  4169  0F1B                     	;# 
  4170  0F1C                     	;# 
  4171  0F1D                     	;# 
  4172  0F1E                     	;# 
  4173  0F1F                     	;# 
  4174  0F20                     	;# 
  4175  0F21                     	;# 
  4176  0F22                     	;# 
  4177  0F23                     	;# 
  4178  0F24                     	;# 
  4179  0F25                     	;# 
  4180  0F26                     	;# 
  4181  0F27                     	;# 
  4182  0F38                     	;# 
  4183  0F39                     	;# 
  4184  0F3A                     	;# 
  4185  0F3B                     	;# 
  4186  0F3C                     	;# 
  4187  0F3D                     	;# 
  4188  0F3E                     	;# 
  4189  0F3F                     	;# 
  4190  0F40                     	;# 
  4191  0F41                     	;# 
  4192  0F43                     	;# 
  4193  0F44                     	;# 
  4194  0F45                     	;# 
  4195  0F46                     	;# 
  4196  0F47                     	;# 
  4197  0F48                     	;# 
  4198  0F49                     	;# 
  4199  0F4A                     	;# 
  4200  0F4B                     	;# 
  4201  0F4C                     	;# 
  4202  0F4E                     	;# 
  4203  0F4F                     	;# 
  4204  0F50                     	;# 
  4205  0F51                     	;# 
  4206  0F52                     	;# 
  4207  0F53                     	;# 
  4208  0F54                     	;# 
  4209  0F55                     	;# 
  4210  0F56                     	;# 
  4211  0F57                     	;# 
  4212  0F65                     	;# 
  4213  0F68                     	;# 
  4214  0F69                     	;# 
  4215  0F6A                     	;# 
  4216  0F6B                     	;# 
  4217  0FE4                     	;# 
  4218  0FE5                     	;# 
  4219  0FE6                     	;# 
  4220  0FE7                     	;# 
  4221  0FE8                     	;# 
  4222  0FE9                     	;# 
  4223  0FEA                     	;# 
  4224  0FEB                     	;# 
  4225  0FED                     	;# 
  4226  0FEE                     	;# 
  4227  0FEF                     	;_samples
  4228                           
  4229                           	psect	idataBANK0
  4230  0005                     __pidataBANK0:	
  4231                           
  4232                           ;initializer for _setpoint
  4233  0005  3446               	retlw	70
  4234                           
  4235                           	psect	idataBANK1
  4236  17DF                     __pidataBANK1:	
  4237                           ;initializer for _presets
  4238                           
  4239  17DF  3400               	retlw	0
  4240  17E0  3446               	retlw	70
  4241  17E1  345F               	retlw	95
  4242  17E2  3469               	retlw	105
  4243  17E3  3478               	retlw	120
  4244                           
  4245                           	psect	idataBANK2
  4246  08A0                     __pidataBANK2:	
  4247                           
  4248                           ;initializer for ___cgram
  4249  08A0  340C               	retlw	12
  4250  08A1  3412               	retlw	18
  4251  08A2  3412               	retlw	18
  4252  08A3  340C               	retlw	12
  4253  08A4  3400               	retlw	0
  4254  08A5  3400               	retlw	0
  4255  08A6  3400               	retlw	0
  4256  08A7  3400               	retlw	0
  4257  08A8  340A               	retlw	10
  4258  08A9  3415               	retlw	21
  4259  08AA  3411               	retlw	17
  4260  08AB  340A               	retlw	10
  4261  08AC  3404               	retlw	4
  4262  08AD  3400               	retlw	0
  4263  08AE  3400               	retlw	0
  4264  08AF  3400               	retlw	0
  4265  08B0  340A               	retlw	10
  4266  08B1  341F               	retlw	31
  4267  08B2  341F               	retlw	31
  4268  08B3  340E               	retlw	14
  4269  08B4  3404               	retlw	4
  4270  08B5  3400               	retlw	0
  4271  08B6  3400               	retlw	0
  4272  08B7  3400               	retlw	0
  4273                           
  4274                           	psect	stringtext
  4275  1000                     __pstringtext:	
  4276  1000                     log@coeff:	
  4277  1000  3400               	retlw	0
  4278  1001  3400               	retlw	0
  4279  1002  3400               	retlw	0
  4280  1003  3400               	retlw	0
  4281  1004  3480               	retlw	128
  4282  1005  343F               	retlw	63
  4283  1006  34F0               	retlw	240
  4284  1007  34FF               	retlw	255
  4285  1008  34BE               	retlw	190
  4286  1009  34E2               	retlw	226
  4287  100A  34A9               	retlw	169
  4288  100B  343E               	retlw	62
  4289  100C  3483               	retlw	131
  4290  100D  3476               	retlw	118
  4291  100E  34BE               	retlw	190
  4292  100F  34AE               	retlw	174
  4293  1010  342B               	retlw	43
  4294  1011  343E               	retlw	62
  4295  1012  343C               	retlw	60
  4296  1013  34C3               	retlw	195
  4297  1014  34BD               	retlw	189
  4298  1015  34D2               	retlw	210
  4299  1016  3413               	retlw	19
  4300  1017  343D               	retlw	61
  4301  1018  3478               	retlw	120
  4302  1019  34D3               	retlw	211
  4303  101A  34BB               	retlw	187
  4304  101B                     __end_oflog@coeff:	
  4305  001E                     _T0CON0bits	set	30
  4306  001C                     _TMR0L	set	28
  4307  001D                     _TMR0H	set	29
  4308  001F                     _T0CON1	set	31
  4309  001E                     _T0CON0	set	30
  4310  0013                     _TRISC	set	19
  4311  0012                     _TRISB	set	18
  4312  0011                     _TRISA	set	17
  4313  0018                     _LATC	set	24
  4314  0017                     _LATB	set	23
  4315  0016                     _LATA	set	22
  4316  0064                     _RA4	set	100
  4317  0063                     _RA3	set	99
  4318  005F                     _GIE	set	95
  4319  0069                     _RB1	set	105
  4320  0068                     _RB0	set	104
  4321  006D                     _RB5	set	109
  4322  006C                     _RB4	set	108
  4323  006B                     _RB3	set	107
  4324  006A                     _RB2	set	106
  4325  008C                     _ADRESL	set	140
  4326  008D                     _ADRESH	set	141
  4327  0093                     _ADCON0bits	set	147
  4328  0093                     _ADCON0	set	147
  4329  009E                     _ADPCH	set	158
  4330  009D                     _ADACQ	set	157
  4331  009C                     _ADPRE	set	156
  4332  009B                     _ADCAP	set	155
  4333  009A                     _ADREF	set	154
  4334  0098                     _ADCLK	set	152
  4335  0097                     _ADSTAT	set	151
  4336  0099                     _ADACT	set	153
  4337  0096                     _ADCON3	set	150
  4338  0095                     _ADCON2	set	149
  4339  0094                     _ADCON1	set	148
  4340  0113                     _ADSTPTH	set	275
  4341  0112                     _ADSTPTL	set	274
  4342  0111                     _ADUTHH	set	273
  4343  0110                     _ADUTHL	set	272
  4344  010F                     _ADLTHH	set	271
  4345  010E                     _ADLTHL	set	270
  4346  010D                     _ADRPT	set	269
  4347  021F                     _CCPTMRS1bits	set	543
  4348  028E                     _T2CONbits	set	654
  4349  028C                     _T2TMR	set	652
  4350  028D                     _T2PR	set	653
  4351  0291                     _T2RST	set	657
  4352  028F                     _T2HLT	set	655
  4353  0290                     _T2CLKCON	set	656
  4354  028E                     _T2CON	set	654
  4355  038C                     _PWM6DCL	set	908
  4356  038D                     _PWM6DCH	set	909
  4357  038E                     _PWM6CON	set	910
  4358  0710                     _PIR4bits	set	1808
  4359  070C                     _PIR0bits	set	1804
  4360  0716                     _PIE0bits	set	1814
  4361  3865                     _TMR0IF	set	14437
  4362  0892                     _OSCTUNE	set	2194
  4363  0893                     _OSCFRQ	set	2195
  4364  0891                     _OSCEN	set	2193
  4365  088F                     _OSCCON3	set	2191
  4366  088D                     _OSCCON1	set	2189
  4367  090C                     _FVRCON	set	2316
  4368  0E8F                     _PPSLOCKbits	set	3727
  4369  0E8F                     _PPSLOCK	set	3727
  4370  0F11                     _RA1PPS	set	3857
  4371  0F4E                     _ANSELC	set	3918
  4372  0F43                     _ANSELB	set	3907
  4373  0F38                     _ANSELA	set	3896
  4374  0F65                     _WPUE	set	3941
  4375  0F4F                     _WPUC	set	3919
  4376  0F44                     _WPUB	set	3908
  4377  0F39                     _WPUA	set	3897
  4378  101B                     STR_1:	
  4379  101B  3453               	retlw	83	;'S'
  4380  101C  3465               	retlw	101	;'e'
  4381  101D  3474               	retlw	116	;'t'
  4382  101E  3470               	retlw	112	;'p'
  4383  101F  346F               	retlw	111	;'o'
  4384  1020  3469               	retlw	105	;'i'
  4385  1021  346E               	retlw	110	;'n'
  4386  1022  3474               	retlw	116	;'t'
  4387  1023  343F               	retlw	63	;'?'
  4388  1024  3400               	retlw	0
  4389  1025                     STR_4:	
  4390  1025  3454               	retlw	84	;'T'
  4391  1026  3469               	retlw	105	;'i'
  4392  1027  346D               	retlw	109	;'m'
  4393  1028  3465               	retlw	101	;'e'
  4394  1029  343A               	retlw	58	;':'
  4395  102A  3400               	retlw	0
  4396  101B                     
  4397                           ; #config settings
  4398  0000                     
  4399                           	psect	cinit
  4400  07C4                     start_initialization:	
  4401  07C4                     __initialization:		;BIGRAM
  4402                           
  4403                           ; Initialize objects allocated to BANK0
  4404  07C4  3180  2005  3187   	fcall	__pidataBANK0	;fetch initializer
  4405  07C7  00EF               	movwf	__pdataBANK0& (0+127)
  4406                           
  4407                           ; Initialize objects allocated to BANK1
  4408  07C8  30DF               	movlw	low __pidataBANK1
  4409  07C9  0084               	movwf	4
  4410  07CA  3097               	movlw	(high __pidataBANK1)| (0+128)
  4411  07CB  0085               	movwf	5
  4412  07CC  30E5               	movlw	low __pdataBANK1
  4413  07CD  0086               	movwf	6
  4414  07CE  3000               	movlw	high __pdataBANK1
  4415  07CF  0087               	movwf	7
  4416  07D0  3000               	movlw	0
  4417  07D1  00FF               	movwf	btemp+1
  4418  07D2  3005               	movlw	5
  4419  07D3  3188  200B  3187   	fcall	init_ram
  4420                           
  4421                           ; Initialize objects allocated to BANK2
  4422  07D6  30A0               	movlw	low __pidataBANK2
  4423  07D7  0084               	movwf	4
  4424  07D8  3088               	movlw	(high __pidataBANK2)| (0+128)
  4425  07D9  0085               	movwf	5
  4426  07DA  3020               	movlw	low __pdataBANK2
  4427  07DB  0086               	movwf	6
  4428  07DC  3001               	movlw	high __pdataBANK2
  4429  07DD  0087               	movwf	7
  4430  07DE  3000               	movlw	0
  4431  07DF  00FF               	movwf	btemp+1
  4432  07E0  3018               	movlw	24
  4433  07E1  3188  200B  3187   	fcall	init_ram
  4434                           
  4435                           ; Clear objects allocated to BIGRAM
  4436  07E4  308C               	movlw	low (0+9100)
  4437  07E5  0084               	movwf	4
  4438  07E6  3023               	movlw	high (0+9100)
  4439  07E7  0085               	movwf	5
  4440  07E8  3064               	movlw	100
  4441  07E9  00FE               	movwf	btemp
  4442  07EA  3000               	movlw	0
  4443  07EB  00FF               	movwf	btemp+1
  4444  07EC  3197  27F4  3187   	fcall	clear_ram0
  4445                           
  4446                           ; Clear objects allocated to BANK0
  4447  07EF  01EB               	clrf	__pbssBANK0& (0+127)
  4448  07F0  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  4449  07F1  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  4450  07F2  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  4451                           
  4452                           ; Clear objects allocated to BANK1
  4453  07F3  30C8               	movlw	low __pbssBANK1
  4454  07F4  0084               	movwf	4
  4455  07F5  3000               	movlw	high __pbssBANK1
  4456  07F6  0085               	movwf	5
  4457  07F7  301D               	movlw	29
  4458  07F8  00FE               	movwf	btemp
  4459  07F9  3000               	movlw	0
  4460  07FA  00FF               	movwf	btemp+1
  4461  07FB  3197  27F4         	fcall	clear_ram0
  4462  07FD                     end_of_initialization:	
  4463                           ;End of C runtime variable initialization code
  4464                           
  4465  07FD                     __end_of__initialization:	
  4466  07FD  0020               	movlb	0
  4467  07FE  3184  2CAD         	ljmp	_main	;jump to C main() function
  4468                           
  4469                           	psect	bssBANK0
  4470  006B                     __pbssBANK0:	
  4471  006B                     _x:	
  4472  006B                     	ds	1
  4473  006C                     _oldSetpoint:	
  4474  006C                     	ds	1
  4475  006D                     _upCount:	
  4476  006D                     	ds	1
  4477  006E                     _downCount:	
  4478  006E                     	ds	1
  4479                           
  4480                           	psect	dataBANK0
  4481  006F                     __pdataBANK0:	
  4482  006F                     _setpoint:	
  4483  006F                     	ds	1
  4484                           
  4485                           	psect	bssBANK1
  4486  00C8                     __pbssBANK1:	
  4487  00C8                     LCD_Write_Int@F14394:	
  4488  00C8                     	ds	5
  4489  00CD                     _pidPrevInput:	
  4490  00CD                     	ds	3
  4491  00D0                     _pidIntegrated:	
  4492  00D0                     	ds	3
  4493  00D3                     _PID_Kd:	
  4494  00D3                     	ds	3
  4495  00D6                     _PID_Ki:	
  4496  00D6                     	ds	3
  4497  00D9                     _PID_Kp:	
  4498  00D9                     	ds	3
  4499  00DC                     _errno:	
  4500  00DC                     	ds	2
  4501  00DE                     main@sampleIndex:	
  4502  00DE                     	ds	2
  4503  00E0                     _pidMaxOutput:	
  4504  00E0                     	ds	2
  4505  00E2                     _pidMinOutput:	
  4506  00E2                     	ds	2
  4507  00E4                     _toggleCount:	
  4508  00E4                     	ds	1
  4509                           
  4510                           	psect	dataBANK1
  4511  00E5                     __pdataBANK1:	
  4512  00E5                     _presets:	
  4513  00E5                     	ds	5
  4514                           
  4515                           	psect	dataBANK2
  4516  0120                     __pdataBANK2:	
  4517  0120                     ___cgram:	
  4518  0120                     	ds	24
  4519                           
  4520                           	psect	inittext
  4521  080B                     init_ram:	
  4522  080B  00FE               	movwf	126
  4523  080C                     initloop:	
  4524  080C  0012               	moviw fsr0++
  4525  080D  001E               	movwi fsr1++
  4526  080E  3001               	movlw	1
  4527  080F  02FE               	subwf	126,f
  4528  0810  3000               	movlw	0
  4529  0811  3BFF               	subwfb	127,f
  4530  0812  087F               	movf	127,w
  4531  0813  047E               	iorwf	126,w
  4532  0814  1903               	btfsc	3,2
  4533  0815  3400               	retlw	0
  4534  0816  280C               	goto	initloop
  4535                           
  4536                           	psect	clrtext
  4537  17F4                     clear_ram0:	
  4538                           ;	Called with FSR0 containing the base address, and
  4539                           ;	btemp/btemp+1 has the size to clear
  4540                           
  4541  17F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  4542  17F5                     clrloop0:	
  4543  17F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  4544  17F6  3101               	addfsr 0,1
  4545  17F7  3001               	movlw	1
  4546  17F8  02FE               	subwf	126,f
  4547  17F9  3000               	movlw	0
  4548  17FA  3BFF               	subwfb	127,f
  4549  17FB  087F               	movf	127,w
  4550  17FC  047E               	iorwf	126,w
  4551  17FD  1903               	btfsc	3,2
  4552  17FE  3400               	retlw	0	;all done for this memory range, return
  4553  17FF  2FF5               	goto	clrloop0	;have we reached the end yet?
  4554                           
  4555                           	psect	cstackBANK1
  4556  00A0                     __pcstackBANK1:	
  4557  00A0                     ??_main:	
  4558                           
  4559                           ; 1 bytes @ 0x0
  4560  00A0                     	ds	14
  4561  00AE                     main@R:	
  4562                           
  4563                           ; 3 bytes @ 0xE
  4564  00AE                     	ds	3
  4565  00B1                     _main$1062:	
  4566                           
  4567                           ; 3 bytes @ 0x11
  4568  00B1                     	ds	3
  4569  00B4                     main@PWM_Output:	
  4570                           
  4571                           ; 2 bytes @ 0x14
  4572  00B4                     	ds	2
  4573  00B6                     main@minutes:	
  4574                           
  4575                           ; 2 bytes @ 0x16
  4576  00B6                     	ds	2
  4577  00B8                     main@seconds:	
  4578                           
  4579                           ; 2 bytes @ 0x18
  4580  00B8                     	ds	2
  4581  00BA                     main@counter:	
  4582                           
  4583                           ; 2 bytes @ 0x1A
  4584  00BA                     	ds	2
  4585  00BC                     main@readTemperature:	
  4586                           
  4587                           ; 2 bytes @ 0x1C
  4588  00BC                     	ds	2
  4589  00BE                     main@toggle:	
  4590                           
  4591                           ; 1 bytes @ 0x1E
  4592  00BE                     	ds	1
  4593  00BF                     main@displayTemp:	
  4594                           
  4595                           ; 2 bytes @ 0x1F
  4596  00BF                     	ds	2
  4597  00C1                     main@totals:	
  4598                           
  4599                           ; 4 bytes @ 0x21
  4600  00C1                     	ds	4
  4601  00C5                     main@steinhart:	
  4602                           
  4603                           ; 3 bytes @ 0x25
  4604  00C5                     	ds	3
  4605                           
  4606                           	psect	cstackCOMMON
  4607  0070                     __pcstackCOMMON:	
  4608  0070                     ?_LCD_Cmd:	
  4609  0070                     ?_LCD_Write_Char:	
  4610                           ; 1 bytes @ 0x0
  4611                           
  4612  0070                     ?_OSCILLATOR_Initialize:	
  4613                           ; 1 bytes @ 0x0
  4614                           
  4615  0070                     ??_OSCILLATOR_Initialize:	
  4616                           ; 1 bytes @ 0x0
  4617                           
  4618  0070                     ?_ADCC_Initialize:	
  4619                           ; 1 bytes @ 0x0
  4620                           
  4621  0070                     ??_ADCC_Initialize:	
  4622                           ; 1 bytes @ 0x0
  4623                           
  4624  0070                     ?_PWM6_Initialize:	
  4625                           ; 1 bytes @ 0x0
  4626                           
  4627  0070                     ??_PWM6_Initialize:	
  4628                           ; 1 bytes @ 0x0
  4629                           
  4630  0070                     ?_TMR0_Initialize:	
  4631                           ; 1 bytes @ 0x0
  4632                           
  4633  0070                     ??_TMR0_Initialize:	
  4634                           ; 1 bytes @ 0x0
  4635                           
  4636  0070                     ?_TMR2_Initialize:	
  4637                           ; 1 bytes @ 0x0
  4638                           
  4639  0070                     ??_TMR2_Initialize:	
  4640                           ; 1 bytes @ 0x0
  4641                           
  4642  0070                     ?_Init_PID:	
  4643                           ; 1 bytes @ 0x0
  4644                           
  4645  0070                     ??_Init_PID:	
  4646                           ; 1 bytes @ 0x0
  4647                           
  4648  0070                     ?_readButtons:	
  4649                           ; 1 bytes @ 0x0
  4650                           
  4651  0070                     ?_InitCustomChars:	
  4652                           ; 1 bytes @ 0x0
  4653                           
  4654  0070                     ?_LCD_Port:	
  4655                           ; 1 bytes @ 0x0
  4656                           
  4657  0070                     ??_LCD_Port:	
  4658                           ; 1 bytes @ 0x0
  4659                           
  4660  0070                     ?_LCD_Clear:	
  4661                           ; 1 bytes @ 0x0
  4662                           
  4663  0070                     ?_LCD_Init:	
  4664                           ; 1 bytes @ 0x0
  4665                           
  4666  0070                     ?_PIN_MANAGER_Initialize:	
  4667                           ; 1 bytes @ 0x0
  4668                           
  4669  0070                     ??_PIN_MANAGER_Initialize:	
  4670                           ; 1 bytes @ 0x0
  4671                           
  4672  0070                     ?_SYSTEM_Initialize:	
  4673                           ; 1 bytes @ 0x0
  4674                           
  4675  0070                     ?_PWM6_LoadDutyValue:	
  4676                           ; 1 bytes @ 0x0
  4677                           
  4678  0070                     ?_tempSetpoint:	
  4679                           ; 1 bytes @ 0x0
  4680                           
  4681  0070                     ?_main:	
  4682                           ; 1 bytes @ 0x0
  4683                           
  4684  0070                     ?_ADCC_GetSingleConversion:	
  4685                           ; 1 bytes @ 0x0
  4686                           
  4687  0070                     ?___wmul:	
  4688                           ; 2 bytes @ 0x0
  4689                           
  4690  0070                     ?___awdiv:	
  4691                           ; 2 bytes @ 0x0
  4692                           
  4693  0070                     ?___awmod:	
  4694                           ; 2 bytes @ 0x0
  4695                           
  4696  0070                     ?___ftpack:	
  4697                           ; 2 bytes @ 0x0
  4698                           
  4699  0070                     ?_frexp:	
  4700                           ; 3 bytes @ 0x0
  4701                           
  4702  0070                     ?___ftneg:	
  4703                           ; 3 bytes @ 0x0
  4704                           
  4705  0070                     ?___aldiv:	
  4706                           ; 3 bytes @ 0x0
  4707                           
  4708  0070                     LCD_Port@a:	
  4709                           ; 4 bytes @ 0x0
  4710                           
  4711  0070                     PIN_MANAGER_Initialize@state:	
  4712                           ; 1 bytes @ 0x0
  4713                           
  4714  0070                     PWM6_LoadDutyValue@dutyValue:	
  4715                           ; 1 bytes @ 0x0
  4716                           
  4717  0070                     ___wmul@multiplier:	
  4718                           ; 2 bytes @ 0x0
  4719                           
  4720  0070                     ___awdiv@divisor:	
  4721                           ; 2 bytes @ 0x0
  4722                           
  4723  0070                     ___awmod@divisor:	
  4724                           ; 2 bytes @ 0x0
  4725                           
  4726  0070                     ___ftpack@arg:	
  4727                           ; 2 bytes @ 0x0
  4728                           
  4729  0070                     ___ftneg@f1:	
  4730                           ; 3 bytes @ 0x0
  4731                           
  4732  0070                     frexp@value:	
  4733                           ; 3 bytes @ 0x0
  4734                           
  4735  0070                     ___aldiv@divisor:	
  4736                           ; 3 bytes @ 0x0
  4737                           
  4738                           
  4739                           ; 4 bytes @ 0x0
  4740  0070                     	ds	1
  4741  0071                     ??_LCD_Cmd:	
  4742  0071                     ??_LCD_Write_Char:	
  4743                           ; 1 bytes @ 0x1
  4744                           
  4745  0071                     LCD_Cmd@a:	
  4746                           ; 1 bytes @ 0x1
  4747                           
  4748                           
  4749                           ; 1 bytes @ 0x1
  4750  0071                     	ds	1
  4751  0072                     ??_LCD_Clear:	
  4752  0072                     ?_LCD_Set_Cursor:	
  4753                           ; 1 bytes @ 0x2
  4754                           
  4755  0072                     ??_LCD_Init:	
  4756                           ; 1 bytes @ 0x2
  4757                           
  4758  0072                     ??_PWM6_LoadDutyValue:	
  4759                           ; 1 bytes @ 0x2
  4760                           
  4761  0072                     LCD_Set_Cursor@y:	
  4762                           ; 1 bytes @ 0x2
  4763                           
  4764  0072                     LCD_Write_Char@temp:	
  4765                           ; 1 bytes @ 0x2
  4766                           
  4767  0072                     ___wmul@multiplicand:	
  4768                           ; 1 bytes @ 0x2
  4769                           
  4770  0072                     ___awdiv@dividend:	
  4771                           ; 2 bytes @ 0x2
  4772                           
  4773  0072                     ___awmod@dividend:	
  4774                           ; 2 bytes @ 0x2
  4775                           
  4776                           
  4777                           ; 2 bytes @ 0x2
  4778  0072                     	ds	1
  4779  0073                     ??_LCD_Set_Cursor:	
  4780  0073                     ??_ADCC_GetSingleConversion:	
  4781                           ; 1 bytes @ 0x3
  4782                           
  4783  0073                     ??___ftneg:	
  4784                           ; 1 bytes @ 0x3
  4785                           
  4786  0073                     LCD_Init@style:	
  4787                           ; 1 bytes @ 0x3
  4788                           
  4789  0073                     LCD_Write_Char@y:	
  4790                           ; 1 bytes @ 0x3
  4791                           
  4792  0073                     ADCC_GetSingleConversion@channel:	
  4793                           ; 1 bytes @ 0x3
  4794                           
  4795  0073                     ___ftpack@exp:	
  4796                           ; 1 bytes @ 0x3
  4797                           
  4798  0073                     frexp@eptr:	
  4799                           ; 1 bytes @ 0x3
  4800                           
  4801                           
  4802                           ; 1 bytes @ 0x3
  4803  0073                     	ds	1
  4804  0074                     ??_frexp:	
  4805  0074                     ??___wmul:	
  4806                           ; 1 bytes @ 0x4
  4807                           
  4808  0074                     ??___awdiv:	
  4809                           ; 1 bytes @ 0x4
  4810                           
  4811  0074                     ??___awmod:	
  4812                           ; 1 bytes @ 0x4
  4813                           
  4814  0074                     LCD_Write_Char@a:	
  4815                           ; 1 bytes @ 0x4
  4816                           
  4817  0074                     ___ftpack@sign:	
  4818                           ; 1 bytes @ 0x4
  4819                           
  4820  0074                     ___wmul@product:	
  4821                           ; 1 bytes @ 0x4
  4822                           
  4823  0074                     ___aldiv@dividend:	
  4824                           ; 2 bytes @ 0x4
  4825                           
  4826                           
  4827                           ; 4 bytes @ 0x4
  4828  0074                     	ds	1
  4829  0075                     ??___ftpack:	
  4830  0075                     ??_InitCustomChars:	
  4831                           ; 1 bytes @ 0x5
  4832                           
  4833  0075                     ?_LCD_Write_String:	
  4834                           ; 1 bytes @ 0x5
  4835                           
  4836  0075                     LCD_Set_Cursor@x:	
  4837                           ; 1 bytes @ 0x5
  4838                           
  4839  0075                     ___awdiv@counter:	
  4840                           ; 1 bytes @ 0x5
  4841                           
  4842  0075                     ___awmod@counter:	
  4843                           ; 1 bytes @ 0x5
  4844                           
  4845  0075                     LCD_Write_String@a:	
  4846                           ; 1 bytes @ 0x5
  4847                           
  4848                           
  4849                           ; 2 bytes @ 0x5
  4850  0075                     	ds	1
  4851  0076                     ?___lwdiv:	
  4852  0076                     InitCustomChars@i:	
  4853                           ; 2 bytes @ 0x6
  4854                           
  4855  0076                     LCD_Set_Cursor@z:	
  4856                           ; 1 bytes @ 0x6
  4857                           
  4858  0076                     ___awdiv@sign:	
  4859                           ; 1 bytes @ 0x6
  4860                           
  4861  0076                     ___awmod@sign:	
  4862                           ; 1 bytes @ 0x6
  4863                           
  4864  0076                     ___lwdiv@divisor:	
  4865                           ; 1 bytes @ 0x6
  4866                           
  4867                           
  4868                           ; 2 bytes @ 0x6
  4869  0076                     	ds	1
  4870  0077                     ??_LCD_Write_String:	
  4871  0077                     ??_SYSTEM_Initialize:	
  4872                           ; 1 bytes @ 0x7
  4873                           
  4874  0077                     LCD_Set_Cursor@w:	
  4875                           ; 1 bytes @ 0x7
  4876                           
  4877  0077                     ___awdiv@quotient:	
  4878                           ; 1 bytes @ 0x7
  4879                           
  4880                           
  4881                           ; 2 bytes @ 0x7
  4882  0077                     	ds	1
  4883  0078                     ??___aldiv:	
  4884  0078                     ?___awtoft:	
  4885                           ; 1 bytes @ 0x8
  4886                           
  4887  0078                     ?___lbtoft:	
  4888                           ; 3 bytes @ 0x8
  4889                           
  4890  0078                     ?___lwtoft:	
  4891                           ; 3 bytes @ 0x8
  4892                           
  4893  0078                     LCD_Set_Cursor@temp:	
  4894                           ; 3 bytes @ 0x8
  4895                           
  4896  0078                     LCD_Write_String@i:	
  4897                           ; 1 bytes @ 0x8
  4898                           
  4899  0078                     ___awtoft@c:	
  4900                           ; 2 bytes @ 0x8
  4901                           
  4902  0078                     ___lwdiv@dividend:	
  4903                           ; 2 bytes @ 0x8
  4904                           
  4905  0078                     ___lwtoft@c:	
  4906                           ; 2 bytes @ 0x8
  4907                           
  4908                           
  4909                           ; 2 bytes @ 0x8
  4910  0078                     	ds	1
  4911  0079                     ?_LCD_Write_Int:	
  4912  0079                     LCD_Write_Int@value:	
  4913                           ; 1 bytes @ 0x9
  4914                           
  4915                           
  4916                           ; 2 bytes @ 0x9
  4917  0079                     	ds	1
  4918  007A                     ??___lwdiv:	
  4919                           
  4920                           ; 1 bytes @ 0xA
  4921  007A                     	ds	1
  4922  007B                     ??___awtoft:	
  4923  007B                     ??___lwtoft:	
  4924                           ; 1 bytes @ 0xB
  4925                           
  4926  007B                     LCD_Write_Int@fieldLength:	
  4927                           ; 1 bytes @ 0xB
  4928                           
  4929  007B                     ___lbtoft@c:	
  4930                           ; 1 bytes @ 0xB
  4931                           
  4932  007B                     ___lwdiv@quotient:	
  4933                           ; 1 bytes @ 0xB
  4934                           
  4935                           
  4936                           ; 2 bytes @ 0xB
  4937  007B                     	ds	1
  4938  007C                     LCD_Write_Int@numPlaces:	
  4939                           
  4940                           ; 1 bytes @ 0xC
  4941  007C                     	ds	1
  4942  007D                     LCD_Write_Int@sign:	
  4943  007D                     ___awtoft@sign:	
  4944                           ; 1 bytes @ 0xD
  4945                           
  4946  007D                     ___lwdiv@counter:	
  4947                           ; 1 bytes @ 0xD
  4948                           
  4949                           
  4950                           ; 1 bytes @ 0xD
  4951  007D                     	ds	1
  4952  007E                     ??_eval_poly:	
  4953  007E                     ??_PID_Calculate:	
  4954                           ; 1 bytes @ 0xE
  4955                           
  4956  007E                     ??___ftsub:	
  4957                           ; 1 bytes @ 0xE
  4958                           
  4959                           
  4960                           	psect	cstackBANK0
  4961  0020                     __pcstackBANK0:	
  4962                           ; 1 bytes @ 0xE
  4963                           
  4964  0020                     ??_LCD_Write_Int:	
  4965  0020                     ??___lbtoft:	
  4966                           ; 1 bytes @ 0x0
  4967                           
  4968  0020                     ?___ftdiv:	
  4969                           ; 1 bytes @ 0x0
  4970                           
  4971  0020                     ?___ftmul:	
  4972                           ; 3 bytes @ 0x0
  4973                           
  4974  0020                     ___aldiv@counter:	
  4975                           ; 3 bytes @ 0x0
  4976                           
  4977  0020                     ___ftdiv@f2:	
  4978                           ; 1 bytes @ 0x0
  4979                           
  4980  0020                     ___ftmul@f1:	
  4981                           ; 3 bytes @ 0x0
  4982                           
  4983                           
  4984                           ; 3 bytes @ 0x0
  4985  0020                     	ds	1
  4986  0021                     ___aldiv@sign:	
  4987                           
  4988                           ; 1 bytes @ 0x1
  4989  0021                     	ds	1
  4990  0022                     ___aldiv@quotient:	
  4991                           
  4992                           ; 4 bytes @ 0x2
  4993  0022                     	ds	1
  4994  0023                     ___ftdiv@f1:	
  4995  0023                     ___ftmul@f2:	
  4996                           ; 3 bytes @ 0x3
  4997                           
  4998                           
  4999                           ; 3 bytes @ 0x3
  5000  0023                     	ds	2
  5001  0025                     LCD_Write_Int@str:	
  5002                           
  5003                           ; 5 bytes @ 0x5
  5004  0025                     	ds	1
  5005  0026                     ??___ftdiv:	
  5006  0026                     ??___ftmul:	
  5007                           ; 1 bytes @ 0x6
  5008                           
  5009                           
  5010                           ; 1 bytes @ 0x6
  5011  0026                     	ds	4
  5012  002A                     ___ftdiv@cntr:	
  5013  002A                     ___ftmul@exp:	
  5014                           ; 1 bytes @ 0xA
  5015                           
  5016  002A                     LCD_Write_Int@j:	
  5017                           ; 1 bytes @ 0xA
  5018                           
  5019                           
  5020                           ; 2 bytes @ 0xA
  5021  002A                     	ds	1
  5022  002B                     ___ftdiv@f3:	
  5023  002B                     ___ftmul@f3_as_product:	
  5024                           ; 3 bytes @ 0xB
  5025                           
  5026                           
  5027                           ; 3 bytes @ 0xB
  5028  002B                     	ds	1
  5029  002C                     LCD_Write_Int@i:	
  5030                           
  5031                           ; 2 bytes @ 0xC
  5032  002C                     	ds	2
  5033  002E                     ??_readButtons:	
  5034  002E                     ___ftdiv@exp:	
  5035                           ; 1 bytes @ 0xE
  5036                           
  5037  002E                     ___ftmul@cntr:	
  5038                           ; 1 bytes @ 0xE
  5039                           
  5040                           
  5041                           ; 1 bytes @ 0xE
  5042  002E                     	ds	1
  5043  002F                     ___ftdiv@sign:	
  5044  002F                     ___ftmul@sign:	
  5045                           ; 1 bytes @ 0xF
  5046                           
  5047                           
  5048                           ; 1 bytes @ 0xF
  5049  002F                     	ds	1
  5050  0030                     ?___ftadd:	
  5051  0030                     ___ftadd@f1:	
  5052                           ; 3 bytes @ 0x10
  5053                           
  5054                           
  5055                           ; 3 bytes @ 0x10
  5056  0030                     	ds	1
  5057  0031                     ??_tempSetpoint:	
  5058                           
  5059                           ; 1 bytes @ 0x11
  5060  0031                     	ds	2
  5061  0033                     ___ftadd@f2:	
  5062                           
  5063                           ; 3 bytes @ 0x13
  5064  0033                     	ds	1
  5065  0034                     tempSetpoint@counter:	
  5066                           
  5067                           ; 1 bytes @ 0x14
  5068  0034                     	ds	2
  5069  0036                     ??___ftadd:	
  5070                           
  5071                           ; 1 bytes @ 0x16
  5072  0036                     	ds	4
  5073  003A                     ___ftadd@sign:	
  5074                           
  5075                           ; 1 bytes @ 0x1A
  5076  003A                     	ds	1
  5077  003B                     ___ftadd@exp2:	
  5078                           
  5079                           ; 1 bytes @ 0x1B
  5080  003B                     	ds	1
  5081  003C                     ___ftadd@exp1:	
  5082                           
  5083                           ; 1 bytes @ 0x1C
  5084  003C                     	ds	1
  5085  003D                     ?___ftge:	
  5086  003D                     ?_eval_poly:	
  5087                           ; 1 bit 
  5088                           
  5089  003D                     ?___ftsub:	
  5090                           ; 3 bytes @ 0x1D
  5091                           
  5092  003D                     ___ftge@ff1:	
  5093                           ; 3 bytes @ 0x1D
  5094                           
  5095  003D                     ___ftsub@f2:	
  5096                           ; 3 bytes @ 0x1D
  5097                           
  5098  003D                     eval_poly@x:	
  5099                           ; 3 bytes @ 0x1D
  5100                           
  5101                           
  5102                           ; 3 bytes @ 0x1D
  5103  003D                     	ds	3
  5104  0040                     eval_poly@d:	
  5105  0040                     ___ftge@ff2:	
  5106                           ; 2 bytes @ 0x20
  5107                           
  5108  0040                     ___ftsub@f1:	
  5109                           ; 3 bytes @ 0x20
  5110                           
  5111                           
  5112                           ; 3 bytes @ 0x20
  5113  0040                     	ds	2
  5114  0042                     eval_poly@n:	
  5115                           
  5116                           ; 2 bytes @ 0x22
  5117  0042                     	ds	1
  5118  0043                     ??___ftge:	
  5119                           
  5120                           ; 1 bytes @ 0x23
  5121  0043                     	ds	1
  5122  0044                     eval_poly@res:	
  5123                           
  5124                           ; 3 bytes @ 0x24
  5125  0044                     	ds	2
  5126  0046                     ?_PID_Calculate:	
  5127  0046                     PID_Calculate@setpoint:	
  5128                           ; 3 bytes @ 0x26
  5129                           
  5130                           
  5131                           ; 2 bytes @ 0x26
  5132  0046                     	ds	1
  5133  0047                     ?_log:	
  5134  0047                     log@x:	
  5135                           ; 3 bytes @ 0x27
  5136                           
  5137                           
  5138                           ; 3 bytes @ 0x27
  5139  0047                     	ds	1
  5140  0048                     PID_Calculate@temp:	
  5141                           
  5142                           ; 3 bytes @ 0x28
  5143  0048                     	ds	2
  5144  004A                     ??_log:	
  5145                           
  5146                           ; 1 bytes @ 0x2A
  5147  004A                     	ds	1
  5148  004B                     log@exponent:	
  5149  004B                     PID_Calculate@errorValue:	
  5150                           ; 2 bytes @ 0x2B
  5151                           
  5152                           
  5153                           ; 3 bytes @ 0x2B
  5154  004B                     	ds	3
  5155  004E                     _PID_Calculate$1061:	
  5156                           
  5157                           ; 3 bytes @ 0x2E
  5158  004E                     	ds	3
  5159  0051                     PID_Calculate@derivativeValue:	
  5160                           
  5161                           ; 3 bytes @ 0x31
  5162  0051                     	ds	3
  5163  0054                     PID_Calculate@pidPrevError:	
  5164                           
  5165                           ; 3 bytes @ 0x34
  5166  0054                     	ds	3
  5167  0057                     PID_Calculate@Result:	
  5168                           
  5169                           ; 3 bytes @ 0x37
  5170  0057                     	ds	3
  5171  005A                     PID_Calculate@error:	
  5172                           
  5173                           ; 3 bytes @ 0x3A
  5174  005A                     	ds	3
  5175  005D                     ?___fttol:	
  5176  005D                     ___fttol@f1:	
  5177                           ; 4 bytes @ 0x3D
  5178                           
  5179                           
  5180                           ; 3 bytes @ 0x3D
  5181  005D                     	ds	4
  5182  0061                     ??___fttol:	
  5183                           
  5184                           ; 1 bytes @ 0x41
  5185  0061                     	ds	4
  5186  0065                     ___fttol@sign1:	
  5187                           
  5188                           ; 1 bytes @ 0x45
  5189  0065                     	ds	1
  5190  0066                     ___fttol@lval:	
  5191                           
  5192                           ; 4 bytes @ 0x46
  5193  0066                     	ds	4
  5194  006A                     ___fttol@exp1:	
  5195                           
  5196                           ; 1 bytes @ 0x4A
  5197  006A                     	ds	1
  5198                           
  5199                           	psect	maintext
  5200  04AD                     __pmaintext:	
  5201 ;;
  5202 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
  5203 ;;
  5204 ;; *************** function _main *****************
  5205 ;; Defined at:
  5206 ;;		line 13 in file "main.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  totals          4   33[BANK1 ] long 
  5211 ;;  steinhart       3   37[BANK1 ] float 
  5212 ;;  R               3   14[BANK1 ] float 
  5213 ;;  displayTemp     2   31[BANK1 ] unsigned int 
  5214 ;;  readTemperat    2   28[BANK1 ] unsigned int 
  5215 ;;  counter         2   26[BANK1 ] unsigned int 
  5216 ;;  seconds         2   24[BANK1 ] unsigned int 
  5217 ;;  minutes         2   22[BANK1 ] unsigned int 
  5218 ;;  PWM_Output      2   20[BANK1 ] unsigned int 
  5219 ;;  readTemperat    2    0        unsigned int 
  5220 ;;  toggle          1   30[BANK1 ] unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : B1F/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
  5234 ;;Total ram usage:       40 bytes
  5235 ;; Hardware stack levels required when called:    5
  5236 ;; This function calls:
  5237 ;;		_ADCC_GetSingleConversion
  5238 ;;		_LCD_Set_Cursor
  5239 ;;		_LCD_Write_Char
  5240 ;;		_LCD_Write_Int
  5241 ;;		_LCD_Write_String
  5242 ;;		_PID_Calculate
  5243 ;;		_PWM6_LoadDutyValue
  5244 ;;		_SYSTEM_Initialize
  5245 ;;		___aldiv
  5246 ;;		___ftadd
  5247 ;;		___ftdiv
  5248 ;;		___ftge
  5249 ;;		___ftmul
  5250 ;;		___ftneg
  5251 ;;		___ftsub
  5252 ;;		___fttol
  5253 ;;		___lbtoft
  5254 ;;		___lwdiv
  5255 ;;		___lwtoft
  5256 ;;		___wmul
  5257 ;;		_log
  5258 ;;		_readButtons
  5259 ;;		_tempSetpoint
  5260 ;; This function is called by:
  5261 ;;		Startup code after reset
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           
  5266                           ;psect for function _main
  5267  04AD                     _main:	
  5268                           
  5269                           ;main.c: 15: SYSTEM_Initialize();
  5270                           
  5271                           ;incstack = 0
  5272                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5273  04AD  318A  223A  3184   	fcall	_SYSTEM_Initialize
  5274                           
  5275                           ;main.c: 17: uint16_t readTemperature, PWM_Output = 0, readTemperatureOld, displayTemp, 
      +                          seconds = 0, counter = 0, minutes = 0;
  5276  04B0  0021               	movlb	1	; select bank1
  5277  04B1  01B4               	clrf	main@PWM_Output^(0+128)
  5278  04B2  01B5               	clrf	(main@PWM_Output+1)^(0+128)
  5279  04B3  01B8               	clrf	main@seconds^(0+128)
  5280  04B4  01B9               	clrf	(main@seconds+1)^(0+128)
  5281  04B5  01BA               	clrf	main@counter^(0+128)
  5282  04B6  01BB               	clrf	(main@counter+1)^(0+128)
  5283  04B7  01B6               	clrf	main@minutes^(0+128)
  5284  04B8  01B7               	clrf	(main@minutes+1)^(0+128)
  5285                           
  5286                           ;main.c: 19: uint8_t toggle = 0;
  5287  04B9  01BE               	clrf	main@toggle^(0+128)
  5288                           
  5289                           ;main.c: 21: float R, steinhart;
  5290                           ;main.c: 23: static uint16_t sampleIndex = 0;
  5291                           ;main.c: 25: int32_t totals = 0;
  5292  04BA  3000               	movlw	0
  5293  04BB  00C4               	movwf	(main@totals+3)^(0+128)
  5294  04BC  3000               	movlw	0
  5295  04BD  00C3               	movwf	(main@totals+2)^(0+128)
  5296  04BE  3000               	movlw	0
  5297  04BF  00C2               	movwf	(main@totals+1)^(0+128)
  5298  04C0  3000               	movlw	0
  5299  04C1  00C1               	movwf	main@totals^(0+128)
  5300  04C2                     l3024:	
  5301                           ;main.c: 28: while (1)
  5302                           
  5303                           
  5304                           ;main.c: 29: {
  5305                           ;main.c: 30: readTemperature = ADCC_GetSingleConversion(2);
  5306  04C2  3002               	movlw	2
  5307  04C3  3188  2024  3184   	fcall	_ADCC_GetSingleConversion
  5308  04C6  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5309  04C7  0021               	movlb	1	; select bank1
  5310  04C8  00BD               	movwf	(main@readTemperature+1)^(0+128)
  5311  04C9  0870               	movf	?_ADCC_GetSingleConversion,w
  5312  04CA  00BC               	movwf	main@readTemperature^(0+128)
  5313                           
  5314                           ;main.c: 32: totals = totals - samples[sampleIndex];
  5315  04CB  0841               	movf	main@totals^(0+128),w
  5316  04CC  00A0               	movwf	??_main^(0+128)
  5317  04CD  0842               	movf	(main@totals+1)^(0+128),w
  5318  04CE  00A1               	movwf	(??_main^(0+128)+1)
  5319  04CF  0843               	movf	(main@totals+2)^(0+128),w
  5320  04D0  00A2               	movwf	(??_main^(0+128)+2)
  5321  04D1  0844               	movf	(main@totals+3)^(0+128),w
  5322  04D2  00A3               	movwf	(??_main^(0+128)+3)
  5323  04D3  085F               	movf	(main@sampleIndex+1)^(0+128),w
  5324  04D4  00A5               	movwf	((??_main+4)^(0+128)+1)
  5325  04D5  085E               	movf	main@sampleIndex^(0+128),w
  5326  04D6  00A4               	movwf	(??_main+4)^(0+128)
  5327  04D7  35A4               	lslf	(??_main+4)^(0+128),f
  5328  04D8  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5329  04D9  308C               	movlw	140
  5330  04DA  00A6               	movwf	(??_main+6)^(0+128)
  5331  04DB  3023               	movlw	35
  5332  04DC  00A7               	movwf	((??_main+6)^(0+128)+1)
  5333  04DD  0824               	movf	(??_main+4)^(0+128),w
  5334  04DE  0726               	addwf	(??_main+6)^(0+128),w
  5335  04DF  0086               	movwf	6
  5336  04E0  0825               	movf	(??_main+5)^(0+128),w
  5337  04E1  3D27               	addwfc	(??_main+7)^(0+128),w
  5338  04E2  0087               	movwf	7
  5339  04E3  3F40               	moviw [0]fsr1
  5340  04E4  00A8               	movwf	(??_main+8)^(0+128)
  5341  04E5  3F41               	moviw [1]fsr1
  5342  04E6  00A9               	movwf	((??_main+8)^(0+128)+1)
  5343  04E7  0828               	movf	(??_main+8)^(0+128),w
  5344  04E8  00AA               	movwf	(??_main+10)^(0+128)
  5345  04E9  0829               	movf	(??_main+9)^(0+128),w
  5346  04EA  00AB               	movwf	((??_main+10)^(0+128)+1)
  5347  04EB  01AC               	clrf	((??_main+10)^(0+128)+2)
  5348  04EC  01AD               	clrf	((??_main+10)^(0+128)+3)
  5349  04ED  09AA               	comf	(??_main+10)^(0+128),f
  5350  04EE  09AB               	comf	((??_main+10)^(0+128)+1),f
  5351  04EF  09AC               	comf	((??_main+10)^(0+128)+2),f
  5352  04F0  09AD               	comf	((??_main+10)^(0+128)+3),f
  5353  04F1  0AAA               	incf	(??_main+10)^(0+128),f
  5354  04F2  1903               	skipnz
  5355  04F3  0AAB               	incf	((??_main+10)^(0+128)+1),f
  5356  04F4  1903               	skipnz
  5357  04F5  0AAC               	incf	((??_main+10)^(0+128)+2),f
  5358  04F6  1903               	skipnz
  5359  04F7  0AAD               	incf	((??_main+10)^(0+128)+3),f
  5360  04F8  082A               	movf	(??_main+10)^(0+128),w
  5361  04F9  07A0               	addwf	??_main^(0+128),f
  5362  04FA  082B               	movf	(??_main+11)^(0+128),w
  5363  04FB  3DA1               	addwfc	(??_main^(0+128)+1),f
  5364  04FC  082C               	movf	(??_main+12)^(0+128),w
  5365  04FD  3DA2               	addwfc	(??_main^(0+128)+2),f
  5366  04FE  082D               	movf	(??_main+13)^(0+128),w
  5367  04FF  3DA3               	addwfc	(??_main^(0+128)+3),f
  5368  0500  0823               	movf	(??_main+3)^(0+128),w
  5369  0501  00C4               	movwf	(main@totals+3)^(0+128)
  5370  0502  0822               	movf	(??_main+2)^(0+128),w
  5371  0503  00C3               	movwf	(main@totals+2)^(0+128)
  5372  0504  0821               	movf	(??_main+1)^(0+128),w
  5373  0505  00C2               	movwf	(main@totals+1)^(0+128)
  5374  0506  0820               	movf	??_main^(0+128),w
  5375  0507  00C1               	movwf	main@totals^(0+128)
  5376                           
  5377                           ;main.c: 34: samples[sampleIndex] = readTemperature;
  5378  0508  085F               	movf	(main@sampleIndex+1)^(0+128),w
  5379  0509  00A1               	movwf	(??_main^(0+128)+1)
  5380  050A  085E               	movf	main@sampleIndex^(0+128),w
  5381  050B  00A0               	movwf	??_main^(0+128)
  5382  050C  35A0               	lslf	??_main^(0+128),f
  5383  050D  0DA1               	rlf	(??_main^(0+128)+1),f
  5384  050E  308C               	movlw	140
  5385  050F  00A2               	movwf	(??_main+2)^(0+128)
  5386  0510  3023               	movlw	35
  5387  0511  00A3               	movwf	((??_main+2)^(0+128)+1)
  5388  0512  0820               	movf	??_main^(0+128),w
  5389  0513  0722               	addwf	(??_main+2)^(0+128),w
  5390  0514  0086               	movwf	6
  5391  0515  0821               	movf	(??_main+1)^(0+128),w
  5392  0516  3D23               	addwfc	(??_main+3)^(0+128),w
  5393  0517  0087               	movwf	7
  5394  0518  083C               	movf	main@readTemperature^(0+128),w
  5395  0519  3FC0               	movwi [0]fsr1
  5396  051A  083D               	movf	(main@readTemperature+1)^(0+128),w
  5397  051B  3FC1               	movwi [1]fsr1
  5398                           
  5399                           ;main.c: 36: totals = totals + samples[sampleIndex];
  5400  051C  0841               	movf	main@totals^(0+128),w
  5401  051D  00A0               	movwf	??_main^(0+128)
  5402  051E  0842               	movf	(main@totals+1)^(0+128),w
  5403  051F  00A1               	movwf	(??_main^(0+128)+1)
  5404  0520  0843               	movf	(main@totals+2)^(0+128),w
  5405  0521  00A2               	movwf	(??_main^(0+128)+2)
  5406  0522  0844               	movf	(main@totals+3)^(0+128),w
  5407  0523  00A3               	movwf	(??_main^(0+128)+3)
  5408  0524  085F               	movf	(main@sampleIndex+1)^(0+128),w
  5409  0525  00A5               	movwf	((??_main+4)^(0+128)+1)
  5410  0526  085E               	movf	main@sampleIndex^(0+128),w
  5411  0527  00A4               	movwf	(??_main+4)^(0+128)
  5412  0528  35A4               	lslf	(??_main+4)^(0+128),f
  5413  0529  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5414  052A  308C               	movlw	140
  5415  052B  00A6               	movwf	(??_main+6)^(0+128)
  5416  052C  3023               	movlw	35
  5417  052D  00A7               	movwf	((??_main+6)^(0+128)+1)
  5418  052E  0824               	movf	(??_main+4)^(0+128),w
  5419  052F  0726               	addwf	(??_main+6)^(0+128),w
  5420  0530  0086               	movwf	6
  5421  0531  0825               	movf	(??_main+5)^(0+128),w
  5422  0532  3D27               	addwfc	(??_main+7)^(0+128),w
  5423  0533  0087               	movwf	7
  5424  0534  3F40               	moviw [0]fsr1
  5425  0535  00A8               	movwf	(??_main+8)^(0+128)
  5426  0536  3F41               	moviw [1]fsr1
  5427  0537  00A9               	movwf	((??_main+8)^(0+128)+1)
  5428  0538  0828               	movf	(??_main+8)^(0+128),w
  5429  0539  00AA               	movwf	(??_main+10)^(0+128)
  5430  053A  0829               	movf	(??_main+9)^(0+128),w
  5431  053B  00AB               	movwf	((??_main+10)^(0+128)+1)
  5432  053C  01AC               	clrf	((??_main+10)^(0+128)+2)
  5433  053D  01AD               	clrf	((??_main+10)^(0+128)+3)
  5434  053E  082A               	movf	(??_main+10)^(0+128),w
  5435  053F  07A0               	addwf	??_main^(0+128),f
  5436  0540  082B               	movf	(??_main+11)^(0+128),w
  5437  0541  3DA1               	addwfc	(??_main^(0+128)+1),f
  5438  0542  082C               	movf	(??_main+12)^(0+128),w
  5439  0543  3DA2               	addwfc	(??_main^(0+128)+2),f
  5440  0544  082D               	movf	(??_main+13)^(0+128),w
  5441  0545  3DA3               	addwfc	(??_main^(0+128)+3),f
  5442  0546  0823               	movf	(??_main+3)^(0+128),w
  5443  0547  00C4               	movwf	(main@totals+3)^(0+128)
  5444  0548  0822               	movf	(??_main+2)^(0+128),w
  5445  0549  00C3               	movwf	(main@totals+2)^(0+128)
  5446  054A  0821               	movf	(??_main+1)^(0+128),w
  5447  054B  00C2               	movwf	(main@totals+1)^(0+128)
  5448  054C  0820               	movf	??_main^(0+128),w
  5449  054D  00C1               	movwf	main@totals^(0+128)
  5450                           
  5451                           ;main.c: 38: sampleIndex += 1;
  5452  054E  3001               	movlw	1
  5453  054F  07DE               	addwf	main@sampleIndex^(0+128),f
  5454  0550  3000               	movlw	0
  5455  0551  3DDF               	addwfc	(main@sampleIndex+1)^(0+128),f
  5456                           
  5457                           ;main.c: 40: if(sampleIndex >= 50)
  5458  0552  3000               	movlw	0
  5459  0553  025F               	subwf	(main@sampleIndex+1)^(0+128),w
  5460  0554  3032               	movlw	50
  5461  0555  1903               	skipnz
  5462  0556  025E               	subwf	main@sampleIndex^(0+128),w
  5463  0557  1C03               	skipc
  5464  0558  2D5B               	goto	l3038
  5465                           
  5466                           ;main.c: 41: {
  5467                           ;main.c: 42: sampleIndex = 0;
  5468  0559  01DE               	clrf	main@sampleIndex^(0+128)
  5469  055A  01DF               	clrf	(main@sampleIndex+1)^(0+128)
  5470  055B                     l3038:	
  5471                           
  5472                           ;main.c: 43: }
  5473                           ;main.c: 45: readTemperature = totals / 50;
  5474  055B  3000               	movlw	0
  5475  055C  00F3               	movwf	___aldiv@divisor+3
  5476  055D  3000               	movlw	0
  5477  055E  00F2               	movwf	___aldiv@divisor+2
  5478  055F  3000               	movlw	0
  5479  0560  00F1               	movwf	___aldiv@divisor+1
  5480  0561  3032               	movlw	50
  5481  0562  00F0               	movwf	___aldiv@divisor
  5482  0563  0844               	movf	(main@totals+3)^(0+128),w
  5483  0564  00F7               	movwf	___aldiv@dividend+3
  5484  0565  0843               	movf	(main@totals+2)^(0+128),w
  5485  0566  00F6               	movwf	___aldiv@dividend+2
  5486  0567  0842               	movf	(main@totals+1)^(0+128),w
  5487  0568  00F5               	movwf	___aldiv@dividend+1
  5488  0569  0841               	movf	main@totals^(0+128),w
  5489  056A  00F4               	movwf	___aldiv@dividend
  5490  056B  318C  24EA  3184   	fcall	___aldiv
  5491  056E  0871               	movf	?___aldiv+1,w
  5492  056F  0021               	movlb	1	; select bank1
  5493  0570  00BD               	movwf	(main@readTemperature+1)^(0+128)
  5494  0571  0870               	movf	?___aldiv,w
  5495  0572  00BC               	movwf	main@readTemperature^(0+128)
  5496                           
  5497                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  5498  0573  3000               	movlw	0
  5499  0574  0020               	movlb	0	; select bank0
  5500  0575  00B0               	movwf	___ftadd@f1
  5501  0576  3080               	movlw	128
  5502  0577  00B1               	movwf	___ftadd@f1+1
  5503  0578  30BF               	movlw	191
  5504  0579  00B2               	movwf	___ftadd@f1+2
  5505  057A  0021               	movlb	1	; select bank1
  5506  057B  083D               	movf	(main@readTemperature+1)^(0+128),w
  5507  057C  00F9               	movwf	___lwtoft@c+1
  5508  057D  083C               	movf	main@readTemperature^(0+128),w
  5509  057E  00F8               	movwf	___lwtoft@c
  5510  057F  3188  205F  3184   	fcall	___lwtoft
  5511  0582  0878               	movf	?___lwtoft,w
  5512  0583  0020               	movlb	0	; select bank0
  5513  0584  00A0               	movwf	___ftdiv@f2
  5514  0585  0879               	movf	?___lwtoft+1,w
  5515  0586  00A1               	movwf	___ftdiv@f2+1
  5516  0587  087A               	movf	?___lwtoft+2,w
  5517  0588  00A2               	movwf	___ftdiv@f2+2
  5518  0589  30C0               	movlw	192
  5519  058A  00A3               	movwf	___ftdiv@f1
  5520  058B  307F               	movlw	127
  5521  058C  00A4               	movwf	___ftdiv@f1+1
  5522  058D  3044               	movlw	68
  5523  058E  00A5               	movwf	___ftdiv@f1+2
  5524  058F  318D  25F3  3184   	fcall	___ftdiv
  5525  0592  0020               	movlb	0	; select bank0
  5526  0593  0820               	movf	?___ftdiv,w
  5527  0594  00B3               	movwf	___ftadd@f2
  5528  0595  0821               	movf	?___ftdiv+1,w
  5529  0596  00B4               	movwf	___ftadd@f2+1
  5530  0597  0822               	movf	?___ftdiv+2,w
  5531  0598  00B5               	movwf	___ftadd@f2+2
  5532  0599  3182  220B  3184   	fcall	___ftadd
  5533  059C  0020               	movlb	0	; select bank0
  5534  059D  0830               	movf	?___ftadd,w
  5535  059E  0021               	movlb	1	; select bank1
  5536  059F  00B1               	movwf	_main$1062^(0+128)
  5537  05A0  0020               	movlb	0	; select bank0
  5538  05A1  0831               	movf	?___ftadd+1,w
  5539  05A2  0021               	movlb	1	; select bank1
  5540  05A3  00B2               	movwf	(_main$1062+1)^(0+128)
  5541  05A4  0020               	movlb	0	; select bank0
  5542  05A5  0832               	movf	?___ftadd+2,w
  5543  05A6  0021               	movlb	1	; select bank1
  5544  05A7  00B3               	movwf	(_main$1062+2)^(0+128)
  5545                           
  5546                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  5547  05A8  0831               	movf	_main$1062^(0+128),w
  5548  05A9  0020               	movlb	0	; select bank0
  5549  05AA  00A0               	movwf	___ftdiv@f2
  5550  05AB  0021               	movlb	1	; select bank1
  5551  05AC  0832               	movf	(_main$1062+1)^(0+128),w
  5552  05AD  0020               	movlb	0	; select bank0
  5553  05AE  00A1               	movwf	___ftdiv@f2+1
  5554  05AF  0021               	movlb	1	; select bank1
  5555  05B0  0833               	movf	(_main$1062+2)^(0+128),w
  5556  05B1  0020               	movlb	0	; select bank0
  5557  05B2  00A2               	movwf	___ftdiv@f2+2
  5558  05B3  3060               	movlw	96
  5559  05B4  00A3               	movwf	___ftdiv@f1
  5560  05B5  301F               	movlw	31
  5561  05B6  00A4               	movwf	___ftdiv@f1+1
  5562  05B7  3046               	movlw	70
  5563  05B8  00A5               	movwf	___ftdiv@f1+2
  5564  05B9  318D  25F3  3184   	fcall	___ftdiv
  5565  05BC  0020               	movlb	0	; select bank0
  5566  05BD  0820               	movf	?___ftdiv,w
  5567  05BE  0021               	movlb	1	; select bank1
  5568  05BF  00AE               	movwf	main@R^(0+128)
  5569  05C0  0020               	movlb	0	; select bank0
  5570  05C1  0821               	movf	?___ftdiv+1,w
  5571  05C2  0021               	movlb	1	; select bank1
  5572  05C3  00AF               	movwf	(main@R+1)^(0+128)
  5573  05C4  0020               	movlb	0	; select bank0
  5574  05C5  0822               	movf	?___ftdiv+2,w
  5575  05C6  0021               	movlb	1	; select bank1
  5576  05C7  00B0               	movwf	(main@R+2)^(0+128)
  5577                           
  5578                           ;main.c: 50: steinhart = R /10061;
  5579  05C8  3034               	movlw	52
  5580  05C9  0020               	movlb	0	; select bank0
  5581  05CA  00A0               	movwf	___ftdiv@f2
  5582  05CB  301D               	movlw	29
  5583  05CC  00A1               	movwf	___ftdiv@f2+1
  5584  05CD  3046               	movlw	70
  5585  05CE  00A2               	movwf	___ftdiv@f2+2
  5586  05CF  0021               	movlb	1	; select bank1
  5587  05D0  082E               	movf	main@R^(0+128),w
  5588  05D1  0020               	movlb	0	; select bank0
  5589  05D2  00A3               	movwf	___ftdiv@f1
  5590  05D3  0021               	movlb	1	; select bank1
  5591  05D4  082F               	movf	(main@R+1)^(0+128),w
  5592  05D5  0020               	movlb	0	; select bank0
  5593  05D6  00A4               	movwf	___ftdiv@f1+1
  5594  05D7  0021               	movlb	1	; select bank1
  5595  05D8  0830               	movf	(main@R+2)^(0+128),w
  5596  05D9  0020               	movlb	0	; select bank0
  5597  05DA  00A5               	movwf	___ftdiv@f1+2
  5598  05DB  318D  25F3  3184   	fcall	___ftdiv
  5599  05DE  0020               	movlb	0	; select bank0
  5600  05DF  0820               	movf	?___ftdiv,w
  5601  05E0  0021               	movlb	1	; select bank1
  5602  05E1  00C5               	movwf	main@steinhart^(0+128)
  5603  05E2  0020               	movlb	0	; select bank0
  5604  05E3  0821               	movf	?___ftdiv+1,w
  5605  05E4  0021               	movlb	1	; select bank1
  5606  05E5  00C6               	movwf	(main@steinhart+1)^(0+128)
  5607  05E6  0020               	movlb	0	; select bank0
  5608  05E7  0822               	movf	?___ftdiv+2,w
  5609  05E8  0021               	movlb	1	; select bank1
  5610  05E9  00C7               	movwf	(main@steinhart+2)^(0+128)
  5611                           
  5612                           ;main.c: 51: steinhart = log(steinhart);
  5613  05EA  0845               	movf	main@steinhart^(0+128),w
  5614  05EB  0020               	movlb	0	; select bank0
  5615  05EC  00C7               	movwf	log@x
  5616  05ED  0021               	movlb	1	; select bank1
  5617  05EE  0846               	movf	(main@steinhart+1)^(0+128),w
  5618  05EF  0020               	movlb	0	; select bank0
  5619  05F0  00C8               	movwf	log@x+1
  5620  05F1  0021               	movlb	1	; select bank1
  5621  05F2  0847               	movf	(main@steinhart+2)^(0+128),w
  5622  05F3  0020               	movlb	0	; select bank0
  5623  05F4  00C9               	movwf	log@x+2
  5624  05F5  318E  269C  3184   	fcall	_log
  5625  05F8  0020               	movlb	0	; select bank0
  5626  05F9  0847               	movf	?_log,w
  5627  05FA  0021               	movlb	1	; select bank1
  5628  05FB  00C5               	movwf	main@steinhart^(0+128)
  5629  05FC  0020               	movlb	0	; select bank0
  5630  05FD  0848               	movf	?_log+1,w
  5631  05FE  0021               	movlb	1	; select bank1
  5632  05FF  00C6               	movwf	(main@steinhart+1)^(0+128)
  5633  0600  0020               	movlb	0	; select bank0
  5634  0601  0849               	movf	?_log+2,w
  5635  0602  0021               	movlb	1	; select bank1
  5636  0603  00C7               	movwf	(main@steinhart+2)^(0+128)
  5637                           
  5638                           ;main.c: 52: steinhart /= 3995;
  5639  0604  30B0               	movlw	176
  5640  0605  0020               	movlb	0	; select bank0
  5641  0606  00A0               	movwf	___ftdiv@f2
  5642  0607  3079               	movlw	121
  5643  0608  00A1               	movwf	___ftdiv@f2+1
  5644  0609  3045               	movlw	69
  5645  060A  00A2               	movwf	___ftdiv@f2+2
  5646  060B  0021               	movlb	1	; select bank1
  5647  060C  0845               	movf	main@steinhart^(0+128),w
  5648  060D  0020               	movlb	0	; select bank0
  5649  060E  00A3               	movwf	___ftdiv@f1
  5650  060F  0021               	movlb	1	; select bank1
  5651  0610  0846               	movf	(main@steinhart+1)^(0+128),w
  5652  0611  0020               	movlb	0	; select bank0
  5653  0612  00A4               	movwf	___ftdiv@f1+1
  5654  0613  0021               	movlb	1	; select bank1
  5655  0614  0847               	movf	(main@steinhart+2)^(0+128),w
  5656  0615  0020               	movlb	0	; select bank0
  5657  0616  00A5               	movwf	___ftdiv@f1+2
  5658  0617  318D  25F3  3184   	fcall	___ftdiv
  5659  061A  0020               	movlb	0	; select bank0
  5660  061B  0820               	movf	?___ftdiv,w
  5661  061C  0021               	movlb	1	; select bank1
  5662  061D  00C5               	movwf	main@steinhart^(0+128)
  5663  061E  0020               	movlb	0	; select bank0
  5664  061F  0821               	movf	?___ftdiv+1,w
  5665  0620  0021               	movlb	1	; select bank1
  5666  0621  00C6               	movwf	(main@steinhart+1)^(0+128)
  5667  0622  0020               	movlb	0	; select bank0
  5668  0623  0822               	movf	?___ftdiv+2,w
  5669  0624  0021               	movlb	1	; select bank1
  5670  0625  00C7               	movwf	(main@steinhart+2)^(0+128)
  5671                           
  5672                           ;main.c: 53: steinhart += 1.0 / (25 + 273.15);
  5673  0626  30CF               	movlw	207
  5674  0627  0020               	movlb	0	; select bank0
  5675  0628  00B0               	movwf	___ftadd@f1
  5676  0629  305B               	movlw	91
  5677  062A  00B1               	movwf	___ftadd@f1+1
  5678  062B  303B               	movlw	59
  5679  062C  00B2               	movwf	___ftadd@f1+2
  5680  062D  0021               	movlb	1	; select bank1
  5681  062E  0845               	movf	main@steinhart^(0+128),w
  5682  062F  0020               	movlb	0	; select bank0
  5683  0630  00B3               	movwf	___ftadd@f2
  5684  0631  0021               	movlb	1	; select bank1
  5685  0632  0846               	movf	(main@steinhart+1)^(0+128),w
  5686  0633  0020               	movlb	0	; select bank0
  5687  0634  00B4               	movwf	___ftadd@f2+1
  5688  0635  0021               	movlb	1	; select bank1
  5689  0636  0847               	movf	(main@steinhart+2)^(0+128),w
  5690  0637  0020               	movlb	0	; select bank0
  5691  0638  00B5               	movwf	___ftadd@f2+2
  5692  0639  3182  220B  3184   	fcall	___ftadd
  5693  063C  0020               	movlb	0	; select bank0
  5694  063D  0830               	movf	?___ftadd,w
  5695  063E  0021               	movlb	1	; select bank1
  5696  063F  00C5               	movwf	main@steinhart^(0+128)
  5697  0640  0020               	movlb	0	; select bank0
  5698  0641  0831               	movf	?___ftadd+1,w
  5699  0642  0021               	movlb	1	; select bank1
  5700  0643  00C6               	movwf	(main@steinhart+1)^(0+128)
  5701  0644  0020               	movlb	0	; select bank0
  5702  0645  0832               	movf	?___ftadd+2,w
  5703  0646  0021               	movlb	1	; select bank1
  5704  0647  00C7               	movwf	(main@steinhart+2)^(0+128)
  5705                           
  5706                           ;main.c: 54: steinhart = 1.0 / steinhart;
  5707  0648  0845               	movf	main@steinhart^(0+128),w
  5708  0649  0020               	movlb	0	; select bank0
  5709  064A  00A0               	movwf	___ftdiv@f2
  5710  064B  0021               	movlb	1	; select bank1
  5711  064C  0846               	movf	(main@steinhart+1)^(0+128),w
  5712  064D  0020               	movlb	0	; select bank0
  5713  064E  00A1               	movwf	___ftdiv@f2+1
  5714  064F  0021               	movlb	1	; select bank1
  5715  0650  0847               	movf	(main@steinhart+2)^(0+128),w
  5716  0651  0020               	movlb	0	; select bank0
  5717  0652  00A2               	movwf	___ftdiv@f2+2
  5718  0653  3000               	movlw	0
  5719  0654  00A3               	movwf	___ftdiv@f1
  5720  0655  3080               	movlw	128
  5721  0656  00A4               	movwf	___ftdiv@f1+1
  5722  0657  303F               	movlw	63
  5723  0658  00A5               	movwf	___ftdiv@f1+2
  5724  0659  318D  25F3  3184   	fcall	___ftdiv
  5725  065C  0020               	movlb	0	; select bank0
  5726  065D  0820               	movf	?___ftdiv,w
  5727  065E  0021               	movlb	1	; select bank1
  5728  065F  00C5               	movwf	main@steinhart^(0+128)
  5729  0660  0020               	movlb	0	; select bank0
  5730  0661  0821               	movf	?___ftdiv+1,w
  5731  0662  0021               	movlb	1	; select bank1
  5732  0663  00C6               	movwf	(main@steinhart+1)^(0+128)
  5733  0664  0020               	movlb	0	; select bank0
  5734  0665  0822               	movf	?___ftdiv+2,w
  5735  0666  0021               	movlb	1	; select bank1
  5736  0667  00C7               	movwf	(main@steinhart+2)^(0+128)
  5737                           
  5738                           ;main.c: 55: steinhart -= 273.15;
  5739  0668  3093               	movlw	147
  5740  0669  0020               	movlb	0	; select bank0
  5741  066A  00BD               	movwf	___ftsub@f2
  5742  066B  3088               	movlw	136
  5743  066C  00BE               	movwf	___ftsub@f2+1
  5744  066D  3043               	movlw	67
  5745  066E  00BF               	movwf	___ftsub@f2+2
  5746  066F  0021               	movlb	1	; select bank1
  5747  0670  0845               	movf	main@steinhart^(0+128),w
  5748  0671  0020               	movlb	0	; select bank0
  5749  0672  00C0               	movwf	___ftsub@f1
  5750  0673  0021               	movlb	1	; select bank1
  5751  0674  0846               	movf	(main@steinhart+1)^(0+128),w
  5752  0675  0020               	movlb	0	; select bank0
  5753  0676  00C1               	movwf	___ftsub@f1+1
  5754  0677  0021               	movlb	1	; select bank1
  5755  0678  0847               	movf	(main@steinhart+2)^(0+128),w
  5756  0679  0020               	movlb	0	; select bank0
  5757  067A  00C2               	movwf	___ftsub@f1+2
  5758  067B  3189  2120  3184   	fcall	___ftsub
  5759  067E  0020               	movlb	0	; select bank0
  5760  067F  083D               	movf	?___ftsub,w
  5761  0680  0021               	movlb	1	; select bank1
  5762  0681  00C5               	movwf	main@steinhart^(0+128)
  5763  0682  0020               	movlb	0	; select bank0
  5764  0683  083E               	movf	?___ftsub+1,w
  5765  0684  0021               	movlb	1	; select bank1
  5766  0685  00C6               	movwf	(main@steinhart+1)^(0+128)
  5767  0686  0020               	movlb	0	; select bank0
  5768  0687  083F               	movf	?___ftsub+2,w
  5769  0688  0021               	movlb	1	; select bank1
  5770  0689  00C7               	movwf	(main@steinhart+2)^(0+128)
  5771                           
  5772                           ;main.c: 58: displayTemp = (uint16_t)(steinhart*10);
  5773  068A  0845               	movf	main@steinhart^(0+128),w
  5774  068B  0020               	movlb	0	; select bank0
  5775  068C  00A3               	movwf	___ftmul@f2
  5776  068D  0021               	movlb	1	; select bank1
  5777  068E  0846               	movf	(main@steinhart+1)^(0+128),w
  5778  068F  0020               	movlb	0	; select bank0
  5779  0690  00A4               	movwf	___ftmul@f2+1
  5780  0691  0021               	movlb	1	; select bank1
  5781  0692  0847               	movf	(main@steinhart+2)^(0+128),w
  5782  0693  0020               	movlb	0	; select bank0
  5783  0694  00A5               	movwf	___ftmul@f2+2
  5784  0695  3000               	movlw	0
  5785  0696  00A0               	movwf	___ftmul@f1
  5786  0697  3020               	movlw	32
  5787  0698  00A1               	movwf	___ftmul@f1+1
  5788  0699  3041               	movlw	65
  5789  069A  00A2               	movwf	___ftmul@f1+2
  5790  069B  318F  274C  3184   	fcall	___ftmul
  5791  069E  0020               	movlb	0	; select bank0
  5792  069F  0820               	movf	?___ftmul,w
  5793  06A0  00DD               	movwf	___fttol@f1
  5794  06A1  0821               	movf	?___ftmul+1,w
  5795  06A2  00DE               	movwf	___fttol@f1+1
  5796  06A3  0822               	movf	?___ftmul+2,w
  5797  06A4  00DF               	movwf	___fttol@f1+2
  5798  06A5  318D  256C  3184   	fcall	___fttol
  5799  06A8  0020               	movlb	0	; select bank0
  5800  06A9  085E               	movf	?___fttol+1,w
  5801  06AA  0021               	movlb	1	; select bank1
  5802  06AB  00C0               	movwf	(main@displayTemp+1)^(0+128)
  5803  06AC  0020               	movlb	0	; select bank0
  5804  06AD  085D               	movf	?___fttol,w
  5805  06AE  0021               	movlb	1	; select bank1
  5806  06AF  00BF               	movwf	main@displayTemp^(0+128)
  5807                           
  5808                           ;main.c: 60: if(toggle == 1)
  5809  06B0  033E               	decf	main@toggle^(0+128),w
  5810  06B1  1D03               	btfss	3,2
  5811  06B2  2EE8               	goto	l3070
  5812                           
  5813                           ;main.c: 61: {
  5814                           ;main.c: 62: displayTemp = displayTemp*9/5+320;
  5815  06B3  3005               	movlw	5
  5816  06B4  00F6               	movwf	___lwdiv@divisor
  5817  06B5  3000               	movlw	0
  5818  06B6  00F7               	movwf	___lwdiv@divisor+1
  5819  06B7  0840               	movf	(main@displayTemp+1)^(0+128),w
  5820  06B8  00F1               	movwf	___wmul@multiplier+1
  5821  06B9  083F               	movf	main@displayTemp^(0+128),w
  5822  06BA  00F0               	movwf	___wmul@multiplier
  5823  06BB  3009               	movlw	9
  5824  06BC  00F2               	movwf	___wmul@multiplicand
  5825  06BD  3000               	movlw	0
  5826  06BE  00F3               	movwf	___wmul@multiplicand+1
  5827  06BF  3189  2105  3184   	fcall	___wmul
  5828  06C2  0871               	movf	?___wmul+1,w
  5829  06C3  00F9               	movwf	___lwdiv@dividend+1
  5830  06C4  0870               	movf	?___wmul,w
  5831  06C5  00F8               	movwf	___lwdiv@dividend
  5832  06C6  318A  2206  3184   	fcall	___lwdiv
  5833  06C9  0876               	movf	?___lwdiv,w
  5834  06CA  3E40               	addlw	64
  5835  06CB  0021               	movlb	1	; select bank1
  5836  06CC  00BF               	movwf	main@displayTemp^(0+128)
  5837  06CD  3001               	movlw	1
  5838  06CE  3D77               	addwfc	?___lwdiv+1,w
  5839  06CF  00C0               	movwf	(main@displayTemp+1)^(0+128)
  5840                           
  5841                           ;main.c: 64: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5842  06D0  01F2               	clrf	LCD_Set_Cursor@y
  5843  06D1  3000               	movlw	0
  5844  06D2  318A  22EA  3184   	fcall	_LCD_Set_Cursor
  5845  06D5  0021               	movlb	1	; select bank1
  5846  06D6  0840               	movf	(main@displayTemp+1)^(0+128),w
  5847  06D7  00FA               	movwf	LCD_Write_Int@value+1
  5848  06D8  083F               	movf	main@displayTemp^(0+128),w
  5849  06D9  00F9               	movwf	LCD_Write_Int@value
  5850  06DA  01FB               	clrf	LCD_Write_Int@fieldLength
  5851  06DB  03FB               	decf	LCD_Write_Int@fieldLength,f
  5852  06DC  01FC               	clrf	LCD_Write_Int@numPlaces
  5853  06DD  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5854  06DE  01FD               	clrf	LCD_Write_Int@sign
  5855  06DF  3181  2142  3184   	fcall	_LCD_Write_Int
  5856                           
  5857                           ;main.c: 65: LCD_Write_Char(0);
  5858  06E2  3000               	movlw	0
  5859  06E3  3189  21AA  3184   	fcall	_LCD_Write_Char
  5860                           
  5861                           ;main.c: 66: LCD_Write_Char('F');
  5862  06E6  3046               	movlw	70
  5863  06E7  2EFF               	goto	L1
  5864  06E8                     l3070:	
  5865                           ;main.c: 68: }
  5866                           
  5867                           ;main.c: 67: LCD_Write_Char(' ');
  5868                           
  5869                           
  5870                           ;main.c: 69: else
  5871                           ;main.c: 70: {
  5872                           ;main.c: 71: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5873  06E8  01F2               	clrf	LCD_Set_Cursor@y
  5874  06E9  3000               	movlw	0
  5875  06EA  318A  22EA  3184   	fcall	_LCD_Set_Cursor
  5876  06ED  0021               	movlb	1	; select bank1
  5877  06EE  0840               	movf	(main@displayTemp+1)^(0+128),w
  5878  06EF  00FA               	movwf	LCD_Write_Int@value+1
  5879  06F0  083F               	movf	main@displayTemp^(0+128),w
  5880  06F1  00F9               	movwf	LCD_Write_Int@value
  5881  06F2  01FB               	clrf	LCD_Write_Int@fieldLength
  5882  06F3  03FB               	decf	LCD_Write_Int@fieldLength,f
  5883  06F4  01FC               	clrf	LCD_Write_Int@numPlaces
  5884  06F5  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5885  06F6  01FD               	clrf	LCD_Write_Int@sign
  5886  06F7  3181  2142  3184   	fcall	_LCD_Write_Int
  5887                           
  5888                           ;main.c: 72: LCD_Write_Char(0);
  5889  06FA  3000               	movlw	0
  5890  06FB  3189  21AA  3184   	fcall	_LCD_Write_Char
  5891                           
  5892                           ;main.c: 73: LCD_Write_Char('C');
  5893  06FE  3043               	movlw	67
  5894  06FF                     L1:	
  5895  06FF  3189  21AA  3184   	fcall	_LCD_Write_Char
  5896                           
  5897                           ;main.c: 74: LCD_Write_Char(' ');
  5898  0702  3020               	movlw	32
  5899  0703  3189  21AA  3184   	fcall	_LCD_Write_Char
  5900                           
  5901                           ;main.c: 75: }
  5902                           ;main.c: 77: { LCD_Set_Cursor(1,0); LCD_Write_String("Time:");}
  5903  0706  01F2               	clrf	LCD_Set_Cursor@y
  5904  0707  3001               	movlw	1
  5905  0708  318A  22EA  3184   	fcall	_LCD_Set_Cursor
  5906  070B  3025               	movlw	low (STR_4| (0+32768))
  5907  070C  00F5               	movwf	LCD_Write_String@a
  5908  070D  3090               	movlw	high (STR_4| (0+32768))
  5909  070E  00F6               	movwf	LCD_Write_String@a+1
  5910  070F  3188  20EB  3184   	fcall	_LCD_Write_String
  5911                           
  5912                           ;main.c: 78: { LCD_Set_Cursor(1,5); LCD_Write_Int(minutes,3, 0, 0);};
  5913  0712  3005               	movlw	5
  5914  0713  0021               	movlb	1	; select bank1
  5915  0714  00A0               	movwf	??_main^(0+128)
  5916  0715  0820               	movf	??_main^(0+128),w
  5917  0716  00F2               	movwf	LCD_Set_Cursor@y
  5918  0717  3001               	movlw	1
  5919  0718  318A  22EA  3184   	fcall	_LCD_Set_Cursor
  5920  071B  0021               	movlb	1	; select bank1
  5921  071C  0837               	movf	(main@minutes+1)^(0+128),w
  5922  071D  00FA               	movwf	LCD_Write_Int@value+1
  5923  071E  0836               	movf	main@minutes^(0+128),w
  5924  071F  00F9               	movwf	LCD_Write_Int@value
  5925  0720  3003               	movlw	3
  5926  0721  00A0               	movwf	??_main^(0+128)
  5927  0722  0820               	movf	??_main^(0+128),w
  5928  0723  00FB               	movwf	LCD_Write_Int@fieldLength
  5929  0724  01FC               	clrf	LCD_Write_Int@numPlaces
  5930  0725  01FD               	clrf	LCD_Write_Int@sign
  5931  0726  3181  2142  3184   	fcall	_LCD_Write_Int
  5932                           
  5933                           ;main.c: 81: counter +=1;
  5934  0729  3001               	movlw	1
  5935  072A  0021               	movlb	1	; select bank1
  5936  072B  07BA               	addwf	main@counter^(0+128),f
  5937  072C  3000               	movlw	0
  5938  072D  3DBB               	addwfc	(main@counter+1)^(0+128),f
  5939                           
  5940                           ;main.c: 83: if(counter>12)
  5941  072E  3000               	movlw	0
  5942  072F  023B               	subwf	(main@counter+1)^(0+128),w
  5943  0730  300D               	movlw	13
  5944  0731  1903               	skipnz
  5945  0732  023A               	subwf	main@counter^(0+128),w
  5946  0733  1C03               	skipc
  5947  0734  2F6F               	goto	l3100
  5948                           
  5949                           ;main.c: 84: {
  5950                           ;main.c: 85: toggle = 1-toggle;
  5951  0735  033E               	decf	main@toggle^(0+128),w
  5952  0736  3AFF               	xorlw	255
  5953  0737  3E01               	addlw	1
  5954  0738  00A0               	movwf	??_main^(0+128)
  5955  0739  0820               	movf	??_main^(0+128),w
  5956  073A  00BE               	movwf	main@toggle^(0+128)
  5957                           
  5958                           ;main.c: 86: counter = 0;
  5959  073B  01BA               	clrf	main@counter^(0+128)
  5960  073C  01BB               	clrf	(main@counter+1)^(0+128)
  5961                           
  5962                           ;main.c: 87: PWM_Output = (int)PID_Calculate(setpoint, steinhart);
  5963  073D  0845               	movf	main@steinhart^(0+128),w
  5964  073E  0020               	movlb	0	; select bank0
  5965  073F  00C8               	movwf	PID_Calculate@temp
  5966  0740  0021               	movlb	1	; select bank1
  5967  0741  0846               	movf	(main@steinhart+1)^(0+128),w
  5968  0742  0020               	movlb	0	; select bank0
  5969  0743  00C9               	movwf	PID_Calculate@temp+1
  5970  0744  0021               	movlb	1	; select bank1
  5971  0745  0847               	movf	(main@steinhart+2)^(0+128),w
  5972  0746  0020               	movlb	0	; select bank0
  5973  0747  00CA               	movwf	PID_Calculate@temp+2
  5974  0748  086F               	movf	_setpoint,w
  5975  0749  0021               	movlb	1	; select bank1
  5976  074A  00A0               	movwf	??_main^(0+128)
  5977  074B  01A1               	clrf	(??_main^(0+128)+1)
  5978  074C  0820               	movf	??_main^(0+128),w
  5979  074D  0020               	movlb	0	; select bank0
  5980  074E  00C6               	movwf	PID_Calculate@setpoint
  5981  074F  0021               	movlb	1	; select bank1
  5982  0750  0821               	movf	(??_main+1)^(0+128),w
  5983  0751  0020               	movlb	0	; select bank0
  5984  0752  00C7               	movwf	PID_Calculate@setpoint+1
  5985  0753  3183  2301  3184   	fcall	_PID_Calculate
  5986  0756  0020               	movlb	0	; select bank0
  5987  0757  0846               	movf	?_PID_Calculate,w
  5988  0758  00DD               	movwf	___fttol@f1
  5989  0759  0847               	movf	?_PID_Calculate+1,w
  5990  075A  00DE               	movwf	___fttol@f1+1
  5991  075B  0848               	movf	?_PID_Calculate+2,w
  5992  075C  00DF               	movwf	___fttol@f1+2
  5993  075D  318D  256C  3184   	fcall	___fttol
  5994  0760  0020               	movlb	0	; select bank0
  5995  0761  085E               	movf	?___fttol+1,w
  5996  0762  0021               	movlb	1	; select bank1
  5997  0763  00B5               	movwf	(main@PWM_Output+1)^(0+128)
  5998  0764  0020               	movlb	0	; select bank0
  5999  0765  085D               	movf	?___fttol,w
  6000  0766  0021               	movlb	1	; select bank1
  6001  0767  00B4               	movwf	main@PWM_Output^(0+128)
  6002                           
  6003                           ;main.c: 88: PWM6_LoadDutyValue(PWM_Output);
  6004  0768  0835               	movf	(main@PWM_Output+1)^(0+128),w
  6005  0769  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  6006  076A  0834               	movf	main@PWM_Output^(0+128),w
  6007  076B  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  6008  076C  3188  2072  3184   	fcall	_PWM6_LoadDutyValue
  6009  076F                     l3100:	
  6010                           
  6011                           ;main.c: 89: }
  6012                           ;main.c: 92: if(TMR0IF)
  6013  076F  002E               	movlb	14	; select bank14
  6014  0770  1E8C               	btfss	12,5	;volatile
  6015  0771  2F7E               	goto	l3106
  6016                           
  6017                           ;main.c: 93: {
  6018                           ;main.c: 94: TMR0H = 0x24;
  6019  0772  3024               	movlw	36
  6020  0773  0020               	movlb	0	; select bank0
  6021  0774  009D               	movwf	29	;volatile
  6022                           
  6023                           ;main.c: 95: TMR0L = 0x9F;
  6024  0775  309F               	movlw	159
  6025  0776  009C               	movwf	28	;volatile
  6026                           
  6027                           ;main.c: 96: TMR0IF = 0;
  6028  0777  002E               	movlb	14	; select bank14
  6029  0778  128C               	bcf	12,5	;volatile
  6030                           
  6031                           ;main.c: 97: seconds+=1;
  6032  0779  3001               	movlw	1
  6033  077A  0021               	movlb	1	; select bank1
  6034  077B  07B8               	addwf	main@seconds^(0+128),f
  6035  077C  3000               	movlw	0
  6036  077D  3DB9               	addwfc	(main@seconds+1)^(0+128),f
  6037  077E                     l3106:	
  6038                           
  6039                           ;main.c: 98: }
  6040                           ;main.c: 100: if(setpoint - steinhart < 2)
  6041  077E  0021               	movlb	1	; select bank1
  6042  077F  0845               	movf	main@steinhart^(0+128),w
  6043  0780  00F0               	movwf	___ftneg@f1
  6044  0781  0846               	movf	(main@steinhart+1)^(0+128),w
  6045  0782  00F1               	movwf	___ftneg@f1+1
  6046  0783  0847               	movf	(main@steinhart+2)^(0+128),w
  6047  0784  00F2               	movwf	___ftneg@f1+2
  6048  0785  3197  27E4  3184   	fcall	___ftneg
  6049  0788  0870               	movf	?___ftneg,w
  6050  0789  0020               	movlb	0	; select bank0
  6051  078A  00B0               	movwf	___ftadd@f1
  6052  078B  0871               	movf	?___ftneg+1,w
  6053  078C  00B1               	movwf	___ftadd@f1+1
  6054  078D  0872               	movf	?___ftneg+2,w
  6055  078E  00B2               	movwf	___ftadd@f1+2
  6056  078F  086F               	movf	_setpoint,w
  6057  0790  3188  20D1  3184   	fcall	___lbtoft
  6058  0793  0878               	movf	?___lbtoft,w
  6059  0794  0020               	movlb	0	; select bank0
  6060  0795  00B3               	movwf	___ftadd@f2
  6061  0796  0879               	movf	?___lbtoft+1,w
  6062  0797  00B4               	movwf	___ftadd@f2+1
  6063  0798  087A               	movf	?___lbtoft+2,w
  6064  0799  00B5               	movwf	___ftadd@f2+2
  6065  079A  3182  220B  3184   	fcall	___ftadd
  6066  079D  0020               	movlb	0	; select bank0
  6067  079E  0830               	movf	?___ftadd,w
  6068  079F  00BD               	movwf	___ftge@ff1
  6069  07A0  0831               	movf	?___ftadd+1,w
  6070  07A1  00BE               	movwf	___ftge@ff1+1
  6071  07A2  0832               	movf	?___ftadd+2,w
  6072  07A3  00BF               	movwf	___ftge@ff1+2
  6073  07A4  3000               	movlw	0
  6074  07A5  00C0               	movwf	___ftge@ff2
  6075  07A6  3000               	movlw	0
  6076  07A7  00C1               	movwf	___ftge@ff2+1
  6077  07A8  3040               	movlw	64
  6078  07A9  00C2               	movwf	___ftge@ff2+2
  6079  07AA  318A  22AE  3184   	fcall	___ftge
  6080  07AD  1803               	btfsc	3,0
  6081  07AE  2FBD               	goto	l3114
  6082                           
  6083                           ;main.c: 101: {
  6084                           ;main.c: 102: if(seconds>63)
  6085  07AF  3000               	movlw	0
  6086  07B0  0021               	movlb	1	; select bank1
  6087  07B1  0239               	subwf	(main@seconds+1)^(0+128),w
  6088  07B2  3040               	movlw	64
  6089  07B3  1903               	skipnz
  6090  07B4  0238               	subwf	main@seconds^(0+128),w
  6091  07B5  1C03               	skipc
  6092  07B6  2FBD               	goto	l3114
  6093                           
  6094                           ;main.c: 103: {
  6095                           ;main.c: 104: minutes+=1;
  6096  07B7  3001               	movlw	1
  6097  07B8  07B6               	addwf	main@minutes^(0+128),f
  6098  07B9  3000               	movlw	0
  6099  07BA  3DB7               	addwfc	(main@minutes+1)^(0+128),f
  6100                           
  6101                           ;main.c: 105: seconds = 0;
  6102  07BB  01B8               	clrf	main@seconds^(0+128)
  6103  07BC  01B9               	clrf	(main@seconds+1)^(0+128)
  6104  07BD                     l3114:	
  6105                           
  6106                           ;main.c: 106: }
  6107                           ;main.c: 107: }
  6108                           ;main.c: 109: readButtons();
  6109  07BD  3180  2006  3184   	fcall	_readButtons
  6110                           
  6111                           ;main.c: 110: tempSetpoint();
  6112  07C0  3180  208A  3184   	fcall	_tempSetpoint
  6113  07C3  2CC2               	goto	l3024
  6114  07C4                     __end_of_main:	
  6115                           
  6116                           	psect	text1
  6117  008A                     __ptext1:	
  6118 ;; *************** function _tempSetpoint *****************
  6119 ;; Defined at:
  6120 ;;		line 12 in file "buttons.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;		None
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;  counter         1   20[BANK0 ] unsigned char 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  1    wreg      void 
  6127 ;; Registers used:
  6128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;Total ram usage:        4 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    4
  6141 ;; This function calls:
  6142 ;;		_LCD_Clear
  6143 ;;		_LCD_Set_Cursor
  6144 ;;		_LCD_Write_Char
  6145 ;;		_LCD_Write_Int
  6146 ;;		_LCD_Write_String
  6147 ;;		_readButtons
  6148 ;; This function is called by:
  6149 ;;		_main
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           
  6154                           ;psect for function _tempSetpoint
  6155  008A                     _tempSetpoint:	
  6156                           
  6157                           ;buttons.c: 14: uint8_t counter = 0;
  6158                           
  6159                           ;incstack = 0
  6160                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6161  008A  0020               	movlb	0	; select bank0
  6162  008B  01B4               	clrf	tempSetpoint@counter
  6163                           
  6164                           ;buttons.c: 16: oldSetpoint = setpoint;
  6165  008C  086F               	movf	_setpoint,w
  6166  008D  00B1               	movwf	??_tempSetpoint
  6167  008E  0831               	movf	??_tempSetpoint,w
  6168  008F  00EC               	movwf	_oldSetpoint
  6169  0090                     l2784:	
  6170                           ;buttons.c: 18: while(downCount >= 5)
  6171                           
  6172  0090  3005               	movlw	5
  6173  0091  0020               	movlb	0	; select bank0
  6174  0092  026E               	subwf	_downCount,w
  6175  0093  1C03               	btfss	3,0
  6176  0094  2928               	goto	l2812
  6177                           
  6178                           ;buttons.c: 19: {
  6179                           ;buttons.c: 20: counter+=1;
  6180  0095  3001               	movlw	1
  6181  0096  00B1               	movwf	??_tempSetpoint
  6182  0097  0831               	movf	??_tempSetpoint,w
  6183  0098  07B4               	addwf	tempSetpoint@counter,f
  6184                           
  6185                           ;buttons.c: 21: if(counter<=1)
  6186  0099  3002               	movlw	2
  6187  009A  0234               	subwf	tempSetpoint@counter,w
  6188  009B  1803               	skipnc
  6189  009C  28A0               	goto	l2764
  6190                           
  6191                           ;buttons.c: 22: {
  6192                           ;buttons.c: 23: LCD_Clear();
  6193  009D  3197  27EC  3180   	fcall	_LCD_Clear
  6194  00A0                     l2764:	
  6195                           
  6196                           ;buttons.c: 24: }
  6197                           ;buttons.c: 25: setpoint-=1;
  6198  00A0  3001               	movlw	1
  6199  00A1  0020               	movlb	0	; select bank0
  6200  00A2  02EF               	subwf	_setpoint,f
  6201                           
  6202                           ;buttons.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6203  00A3  01F2               	clrf	LCD_Set_Cursor@y
  6204  00A4  3000               	movlw	0
  6205  00A5  318A  22EA  3180   	fcall	_LCD_Set_Cursor
  6206  00A8  301B               	movlw	low (STR_1| (0+32768))
  6207  00A9  00F5               	movwf	LCD_Write_String@a
  6208  00AA  3090               	movlw	high (STR_1| (0+32768))
  6209  00AB  00F6               	movwf	LCD_Write_String@a+1
  6210  00AC  3188  20EB  3180   	fcall	_LCD_Write_String
  6211                           
  6212                           ;buttons.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6213  00AF  01F2               	clrf	LCD_Set_Cursor@y
  6214  00B0  3001               	movlw	1
  6215  00B1  318A  22EA  3180   	fcall	_LCD_Set_Cursor
  6216  00B4  0020               	movlb	0	; select bank0
  6217  00B5  086F               	movf	_setpoint,w
  6218  00B6  00B1               	movwf	??_tempSetpoint
  6219  00B7  01B2               	clrf	??_tempSetpoint+1
  6220  00B8  0831               	movf	??_tempSetpoint,w
  6221  00B9  00F9               	movwf	LCD_Write_Int@value
  6222  00BA  0832               	movf	??_tempSetpoint+1,w
  6223  00BB  00FA               	movwf	LCD_Write_Int@value+1
  6224  00BC  3003               	movlw	3
  6225  00BD  00B3               	movwf	??_tempSetpoint+2
  6226  00BE  0833               	movf	??_tempSetpoint+2,w
  6227  00BF  00FB               	movwf	LCD_Write_Int@fieldLength
  6228  00C0  01FC               	clrf	LCD_Write_Int@numPlaces
  6229  00C1  01FD               	clrf	LCD_Write_Int@sign
  6230  00C2  3181  2142  3180   	fcall	_LCD_Write_Int
  6231                           
  6232                           ;buttons.c: 28: LCD_Write_Char(0);
  6233  00C5  3000               	movlw	0
  6234  00C6  3189  21AA  3180   	fcall	_LCD_Write_Char
  6235                           
  6236                           ;buttons.c: 29: LCD_Write_Char('C');
  6237  00C9  3043               	movlw	67
  6238  00CA  3189  21AA  3180   	fcall	_LCD_Write_Char
  6239                           
  6240                           ;buttons.c: 30: LCD_Write_Char(' ');
  6241  00CD  3020               	movlw	32
  6242  00CE  3189  21AA  3180   	fcall	_LCD_Write_Char
  6243                           
  6244                           ;buttons.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6245  00D1  3072               	movlw	114
  6246  00D2  0020               	movlb	0	; select bank0
  6247  00D3  00B1               	movwf	??_tempSetpoint
  6248  00D4  30A1               	movlw	161
  6249  00D5                     u3277:	
  6250  00D5  0B89               	decfsz	9,f
  6251  00D6  28D5               	goto	u3277
  6252  00D7  0BB1               	decfsz	??_tempSetpoint,f
  6253  00D8  28D5               	goto	u3277
  6254  00D9  3200               	nop2
  6255                           
  6256                           ;buttons.c: 32: readButtons();
  6257  00DA  3180  2006  3180   	fcall	_readButtons
  6258  00DD  2890               	goto	l2784
  6259  00DE                     l2786:	
  6260                           ;buttons.c: 33: }
  6261                           ;buttons.c: 35: while(upCount >= 5)
  6262                           
  6263                           
  6264                           ;buttons.c: 36: {
  6265                           ;buttons.c: 37: counter+=1;
  6266  00DE  3001               	movlw	1
  6267  00DF  00B1               	movwf	??_tempSetpoint
  6268  00E0  0831               	movf	??_tempSetpoint,w
  6269  00E1  07B4               	addwf	tempSetpoint@counter,f
  6270                           
  6271                           ;buttons.c: 38: if(counter<=1)
  6272  00E2  3002               	movlw	2
  6273  00E3  0234               	subwf	tempSetpoint@counter,w
  6274  00E4  1803               	skipnc
  6275  00E5  28E9               	goto	l2792
  6276                           
  6277                           ;buttons.c: 39: {
  6278                           ;buttons.c: 40: LCD_Clear();
  6279  00E6  3197  27EC  3180   	fcall	_LCD_Clear
  6280  00E9                     l2792:	
  6281                           
  6282                           ;buttons.c: 41: }
  6283                           ;buttons.c: 42: setpoint+=1;
  6284  00E9  3001               	movlw	1
  6285  00EA  0020               	movlb	0	; select bank0
  6286  00EB  00B1               	movwf	??_tempSetpoint
  6287  00EC  0831               	movf	??_tempSetpoint,w
  6288  00ED  07EF               	addwf	_setpoint,f
  6289                           
  6290                           ;buttons.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6291  00EE  01F2               	clrf	LCD_Set_Cursor@y
  6292  00EF  3000               	movlw	0
  6293  00F0  318A  22EA  3180   	fcall	_LCD_Set_Cursor
  6294  00F3  301B               	movlw	low (STR_1| (0+32768))
  6295  00F4  00F5               	movwf	LCD_Write_String@a
  6296  00F5  3090               	movlw	high (STR_1| (0+32768))
  6297  00F6  00F6               	movwf	LCD_Write_String@a+1
  6298  00F7  3188  20EB  3180   	fcall	_LCD_Write_String
  6299                           
  6300                           ;buttons.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6301  00FA  01F2               	clrf	LCD_Set_Cursor@y
  6302  00FB  3001               	movlw	1
  6303  00FC  318A  22EA  3180   	fcall	_LCD_Set_Cursor
  6304  00FF  0020               	movlb	0	; select bank0
  6305  0100  086F               	movf	_setpoint,w
  6306  0101  00B1               	movwf	??_tempSetpoint
  6307  0102  01B2               	clrf	??_tempSetpoint+1
  6308  0103  0831               	movf	??_tempSetpoint,w
  6309  0104  00F9               	movwf	LCD_Write_Int@value
  6310  0105  0832               	movf	??_tempSetpoint+1,w
  6311  0106  00FA               	movwf	LCD_Write_Int@value+1
  6312  0107  3003               	movlw	3
  6313  0108  00B3               	movwf	??_tempSetpoint+2
  6314  0109  0833               	movf	??_tempSetpoint+2,w
  6315  010A  00FB               	movwf	LCD_Write_Int@fieldLength
  6316  010B  01FC               	clrf	LCD_Write_Int@numPlaces
  6317  010C  01FD               	clrf	LCD_Write_Int@sign
  6318  010D  3181  2142  3180   	fcall	_LCD_Write_Int
  6319                           
  6320                           ;buttons.c: 45: LCD_Write_Char(0);
  6321  0110  3000               	movlw	0
  6322  0111  3189  21AA  3180   	fcall	_LCD_Write_Char
  6323                           
  6324                           ;buttons.c: 46: LCD_Write_Char('C');
  6325  0114  3043               	movlw	67
  6326  0115  3189  21AA  3180   	fcall	_LCD_Write_Char
  6327                           
  6328                           ;buttons.c: 47: LCD_Write_Char(' ');
  6329  0118  3020               	movlw	32
  6330  0119  3189  21AA  3180   	fcall	_LCD_Write_Char
  6331                           
  6332                           ;buttons.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6333  011C  3072               	movlw	114
  6334  011D  0020               	movlb	0	; select bank0
  6335  011E  00B1               	movwf	??_tempSetpoint
  6336  011F  30A1               	movlw	161
  6337  0120                     u3287:	
  6338  0120  0B89               	decfsz	9,f
  6339  0121  2920               	goto	u3287
  6340  0122  0BB1               	decfsz	??_tempSetpoint,f
  6341  0123  2920               	goto	u3287
  6342  0124  3200               	nop2
  6343                           
  6344                           ;buttons.c: 49: readButtons();
  6345  0125  3180  2006  3180   	fcall	_readButtons
  6346  0128                     l2812:	
  6347  0128  3005               	movlw	5
  6348  0129  0020               	movlb	0	; select bank0
  6349  012A  026D               	subwf	_upCount,w
  6350  012B  1803               	skipnc
  6351  012C  28DE               	goto	l2786
  6352                           
  6353                           ;buttons.c: 50: }
  6354                           ;buttons.c: 52: counter = 0;
  6355  012D  01B4               	clrf	tempSetpoint@counter
  6356                           
  6357                           ;buttons.c: 54: if(oldSetpoint!=setpoint)
  6358  012E  086C               	movf	_oldSetpoint,w
  6359  012F  066F               	xorwf	_setpoint,w
  6360  0130  1903               	skipnz
  6361  0131  0008               	return
  6362                           
  6363                           ;buttons.c: 55: {
  6364                           ;buttons.c: 56: _delay((unsigned long)((2000)*(1000000/4000.0)));
  6365  0132  3003               	movlw	3
  6366  0133  0020               	movlb	0	; select bank0
  6367  0134  00B2               	movwf	??_tempSetpoint+1
  6368  0135  308A               	movlw	138
  6369  0136  00B1               	movwf	??_tempSetpoint
  6370  0137  3055               	movlw	85
  6371  0138                     u3297:	
  6372  0138  0B89               	decfsz	9,f
  6373  0139  2938               	goto	u3297
  6374  013A  0BB1               	decfsz	??_tempSetpoint,f
  6375  013B  2938               	goto	u3297
  6376  013C  0BB2               	decfsz	??_tempSetpoint+1,f
  6377  013D  2938               	goto	u3297
  6378  013E  3200               	nop2
  6379                           
  6380                           ;buttons.c: 57: LCD_Clear();
  6381  013F  3197  27EC         	fcall	_LCD_Clear
  6382  0141  0008               	return
  6383  0142                     __end_of_tempSetpoint:	
  6384                           
  6385                           	psect	text2
  6386  0006                     __ptext2:	
  6387 ;; *************** function _readButtons *****************
  6388 ;; Defined at:
  6389 ;;		line 62 in file "buttons.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6406 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6407 ;;Total ram usage:        3 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    3
  6410 ;; This function calls:
  6411 ;;		_LCD_Clear
  6412 ;;		_LCD_Set_Cursor
  6413 ;;		_LCD_Write_Char
  6414 ;;		_LCD_Write_Int
  6415 ;;		_LCD_Write_String
  6416 ;; This function is called by:
  6417 ;;		_tempSetpoint
  6418 ;;		_main
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           
  6423                           ;psect for function _readButtons
  6424  0006                     _readButtons:	
  6425                           
  6426                           ;buttons.c: 64: while(RA3 == 0 && RA4 == 0)
  6427                           
  6428                           ;incstack = 0
  6429                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6430  0006  2864               	goto	l2592
  6431  0007                     l2558:	
  6432                           
  6433                           ;buttons.c: 65: {
  6434                           ;buttons.c: 66: downCount = 0;
  6435  0007  0020               	movlb	0	; select bank0
  6436  0008  01EE               	clrf	_downCount
  6437                           
  6438                           ;buttons.c: 67: upCount = 0;
  6439  0009  01ED               	clrf	_upCount
  6440                           
  6441                           ;buttons.c: 68: toggleCount+=1;
  6442  000A  3001               	movlw	1
  6443  000B  00AE               	movwf	??_readButtons
  6444  000C  082E               	movf	??_readButtons,w
  6445  000D  0021               	movlb	1	; select bank1
  6446  000E  07E4               	addwf	_toggleCount^(0+128),f
  6447                           
  6448                           ;buttons.c: 69: if(toggleCount >=6)
  6449  000F  3006               	movlw	6
  6450  0010  0264               	subwf	_toggleCount^(0+128),w
  6451  0011  1C03               	skipc
  6452  0012  2864               	goto	l2592
  6453                           
  6454                           ;buttons.c: 70: {
  6455                           ;buttons.c: 71: x+=1;
  6456  0013  3001               	movlw	1
  6457  0014  0020               	movlb	0	; select bank0
  6458  0015  00AE               	movwf	??_readButtons
  6459  0016  082E               	movf	??_readButtons,w
  6460  0017  07EB               	addwf	_x,f
  6461                           
  6462                           ;buttons.c: 72: if(x>4)
  6463  0018  3005               	movlw	5
  6464  0019  026B               	subwf	_x,w
  6465  001A  1803               	btfsc	3,0
  6466                           
  6467                           ;buttons.c: 73: {
  6468                           ;buttons.c: 74: x=0;
  6469  001B  01EB               	clrf	_x
  6470                           
  6471                           ;buttons.c: 75: }
  6472                           ;buttons.c: 76: setpoint = presets[x];
  6473  001C  086B               	movf	_x,w
  6474  001D  3EE5               	addlw	(low (_presets| 0))& (0+255)
  6475  001E  0086               	movwf	6
  6476  001F  0187               	clrf	7
  6477  0020  0801               	movf	1,w
  6478  0021  00AE               	movwf	??_readButtons
  6479  0022  082E               	movf	??_readButtons,w
  6480  0023  00EF               	movwf	_setpoint
  6481                           
  6482                           ;buttons.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6483  0024  01F2               	clrf	LCD_Set_Cursor@y
  6484  0025  3000               	movlw	0
  6485  0026  318A  22EA  3180   	fcall	_LCD_Set_Cursor
  6486  0029  301B               	movlw	low (STR_1| (0+32768))
  6487  002A  00F5               	movwf	LCD_Write_String@a
  6488  002B  3090               	movlw	high (STR_1| (0+32768))
  6489  002C  00F6               	movwf	LCD_Write_String@a+1
  6490  002D  3188  20EB  3180   	fcall	_LCD_Write_String
  6491                           
  6492                           ;buttons.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6493  0030  01F2               	clrf	LCD_Set_Cursor@y
  6494  0031  3001               	movlw	1
  6495  0032  318A  22EA  3180   	fcall	_LCD_Set_Cursor
  6496  0035  0020               	movlb	0	; select bank0
  6497  0036  086F               	movf	_setpoint,w
  6498  0037  00AE               	movwf	??_readButtons
  6499  0038  01AF               	clrf	??_readButtons+1
  6500  0039  082E               	movf	??_readButtons,w
  6501  003A  00F9               	movwf	LCD_Write_Int@value
  6502  003B  082F               	movf	??_readButtons+1,w
  6503  003C  00FA               	movwf	LCD_Write_Int@value+1
  6504  003D  3003               	movlw	3
  6505  003E  00B0               	movwf	??_readButtons+2
  6506  003F  0830               	movf	??_readButtons+2,w
  6507  0040  00FB               	movwf	LCD_Write_Int@fieldLength
  6508  0041  01FC               	clrf	LCD_Write_Int@numPlaces
  6509  0042  01FD               	clrf	LCD_Write_Int@sign
  6510  0043  3181  2142  3180   	fcall	_LCD_Write_Int
  6511                           
  6512                           ;buttons.c: 79: LCD_Write_Char(0);
  6513  0046  3000               	movlw	0
  6514  0047  3189  21AA  3180   	fcall	_LCD_Write_Char
  6515                           
  6516                           ;buttons.c: 80: LCD_Write_Char('C');
  6517  004A  3043               	movlw	67
  6518  004B  3189  21AA  3180   	fcall	_LCD_Write_Char
  6519                           
  6520                           ;buttons.c: 81: LCD_Write_Char(' ');
  6521  004E  3020               	movlw	32
  6522  004F  3189  21AA  3180   	fcall	_LCD_Write_Char
  6523                           
  6524                           ;buttons.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  6525  0052  3002               	movlw	2
  6526  0053  0020               	movlb	0	; select bank0
  6527  0054  00AF               	movwf	??_readButtons+1
  6528  0055  30E7               	movlw	231
  6529  0056  00AE               	movwf	??_readButtons
  6530  0057  3000               	movlw	0
  6531  0058                     u3307:	
  6532  0058  0B89               	decfsz	9,f
  6533  0059  2858               	goto	u3307
  6534  005A  0BAE               	decfsz	??_readButtons,f
  6535  005B  2858               	goto	u3307
  6536  005C  0BAF               	decfsz	??_readButtons+1,f
  6537  005D  2858               	goto	u3307
  6538  005E  0000               	nop
  6539                           
  6540                           ;buttons.c: 83: toggleCount = 0;
  6541  005F  0021               	movlb	1	; select bank1
  6542  0060  01E4               	clrf	_toggleCount^(0+128)
  6543                           
  6544                           ;buttons.c: 84: LCD_Clear();
  6545  0061  3197  27EC  3180   	fcall	_LCD_Clear
  6546  0064                     l2592:	
  6547  0064  0020               	movlb	0	; select bank0
  6548  0065  198C               	btfsc	12,3	;volatile
  6549  0066  2869               	goto	l340
  6550  0067  1E0C               	btfss	12,4	;volatile
  6551  0068  2807               	goto	l2558
  6552  0069                     l340:	
  6553                           
  6554                           ;buttons.c: 85: }
  6555                           ;buttons.c: 86: }
  6556                           ;buttons.c: 88: if(RA3 == 0)
  6557  0069  198C               	btfsc	12,3	;volatile
  6558  006A  2878               	goto	l2602
  6559                           
  6560                           ;buttons.c: 89: {
  6561                           ;buttons.c: 90: downCount +=1;
  6562  006B  3001               	movlw	1
  6563  006C  00AE               	movwf	??_readButtons
  6564  006D  082E               	movf	??_readButtons,w
  6565  006E  07EE               	addwf	_downCount,f
  6566                           
  6567                           ;buttons.c: 91: if(downCount>5)
  6568  006F  3006               	movlw	6
  6569  0070  026E               	subwf	_downCount,w
  6570  0071  1C03               	skipc
  6571  0072  2879               	goto	l2604
  6572                           
  6573                           ;buttons.c: 92: {
  6574                           ;buttons.c: 93: downCount = 5;
  6575  0073  3005               	movlw	5
  6576  0074  00AE               	movwf	??_readButtons
  6577  0075  082E               	movf	??_readButtons,w
  6578  0076  00EE               	movwf	_downCount
  6579                           
  6580                           ;buttons.c: 94: }
  6581                           ;buttons.c: 95: }
  6582  0077  2879               	goto	l2604
  6583  0078                     l2602:	
  6584                           
  6585                           ;buttons.c: 96: else
  6586                           ;buttons.c: 97: {
  6587                           ;buttons.c: 98: downCount = 0;
  6588  0078  01EE               	clrf	_downCount
  6589  0079                     l2604:	
  6590                           
  6591                           ;buttons.c: 99: }
  6592                           ;buttons.c: 101: if(RA4 == 0)
  6593  0079  1A0C               	btfsc	12,4	;volatile
  6594  007A  2888               	goto	l2612
  6595                           
  6596                           ;buttons.c: 102: {
  6597                           ;buttons.c: 103: upCount +=1;
  6598  007B  3001               	movlw	1
  6599  007C  00AE               	movwf	??_readButtons
  6600  007D  082E               	movf	??_readButtons,w
  6601  007E  07ED               	addwf	_upCount,f
  6602                           
  6603                           ;buttons.c: 104: if(upCount>5)
  6604  007F  3006               	movlw	6
  6605  0080  026D               	subwf	_upCount,w
  6606  0081  1C03               	skipc
  6607  0082  0008               	return
  6608                           
  6609                           ;buttons.c: 105: {
  6610                           ;buttons.c: 106: upCount = 5;
  6611  0083  3005               	movlw	5
  6612  0084  00AE               	movwf	??_readButtons
  6613  0085  082E               	movf	??_readButtons,w
  6614  0086  00ED               	movwf	_upCount
  6615                           
  6616                           ;buttons.c: 107: }
  6617                           ;buttons.c: 108: }
  6618  0087  0008               	return
  6619  0088                     l2612:	
  6620                           
  6621                           ;buttons.c: 109: else
  6622                           ;buttons.c: 110: {
  6623                           ;buttons.c: 111: upCount = 0;
  6624  0088  01ED               	clrf	_upCount
  6625  0089  0008               	return
  6626  008A                     __end_of_readButtons:	
  6627                           
  6628                           	psect	text3
  6629  08EB                     __ptext3:	
  6630 ;; *************** function _LCD_Write_String *****************
  6631 ;; Defined at:
  6632 ;;		line 239 in file "lcd.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  a               2    5[COMMON] PTR const unsigned char 
  6635 ;;		 -> STR_4(6), STR_3(10), STR_2(10), STR_1(10), 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  i               2    8[COMMON] int 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;Total ram usage:        5 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    2
  6654 ;; This function calls:
  6655 ;;		_LCD_Write_Char
  6656 ;; This function is called by:
  6657 ;;		_tempSetpoint
  6658 ;;		_readButtons
  6659 ;;		_main
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           
  6664                           ;psect for function _LCD_Write_String
  6665  08EB                     _LCD_Write_String:	
  6666                           
  6667                           ;lcd.c: 241: int i;
  6668                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  6669                           
  6670                           ;incstack = 0
  6671                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6672  08EB  01F8               	clrf	LCD_Write_String@i
  6673  08EC  01F9               	clrf	LCD_Write_String@i+1
  6674  08ED                     l2206:	
  6675  08ED  0875               	movf	LCD_Write_String@a,w
  6676  08EE  0778               	addwf	LCD_Write_String@i,w
  6677  08EF  0084               	movwf	4
  6678  08F0  0876               	movf	LCD_Write_String@a+1,w
  6679  08F1  3D79               	addwfc	LCD_Write_String@i+1,w
  6680  08F2  0085               	movwf	5
  6681  08F3  0012               	moviw fsr0++
  6682  08F4  1903               	btfsc	3,2
  6683  08F5  0008               	return
  6684                           
  6685                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  6686  08F6  0875               	movf	LCD_Write_String@a,w
  6687  08F7  0778               	addwf	LCD_Write_String@i,w
  6688  08F8  0084               	movwf	4
  6689  08F9  0876               	movf	LCD_Write_String@a+1,w
  6690  08FA  3D79               	addwfc	LCD_Write_String@i+1,w
  6691  08FB  0085               	movwf	5
  6692  08FC  0800               	movf	0,w	;code access
  6693  08FD  3189  21AA  3188   	fcall	_LCD_Write_Char
  6694  0900  3001               	movlw	1
  6695  0901  07F8               	addwf	LCD_Write_String@i,f
  6696  0902  3000               	movlw	0
  6697  0903  3DF9               	addwfc	LCD_Write_String@i+1,f
  6698  0904  28ED               	goto	l2206
  6699  0905                     __end_of_LCD_Write_String:	
  6700                           
  6701                           	psect	text4
  6702  0142                     __ptext4:	
  6703 ;; *************** function _LCD_Write_Int *****************
  6704 ;; Defined at:
  6705 ;;		line 246 in file "lcd.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  value           2    9[COMMON] int 
  6708 ;;  fieldLength     1   11[COMMON] char 
  6709 ;;  numPlaces       1   12[COMMON] char 
  6710 ;;  sign            1   13[COMMON] char 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  str             5    5[BANK0 ] unsigned char [5]
  6713 ;;  i               2   12[BANK0 ] int 
  6714 ;;  j               2   10[BANK0 ] int 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6724 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6725 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6726 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;Total ram usage:       19 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    2
  6731 ;; This function calls:
  6732 ;;		_LCD_Write_Char
  6733 ;;		___awdiv
  6734 ;;		___awmod
  6735 ;; This function is called by:
  6736 ;;		_tempSetpoint
  6737 ;;		_readButtons
  6738 ;;		_main
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           
  6743                           ;psect for function _LCD_Write_Int
  6744  0142                     _LCD_Write_Int:	
  6745                           
  6746                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  6747                           
  6748                           ;incstack = 0
  6749                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6750  0142  30C8               	movlw	low LCD_Write_Int@F14394
  6751  0143  0086               	movwf	6
  6752  0144  3000               	movlw	high LCD_Write_Int@F14394
  6753  0145  0087               	movwf	7
  6754  0146  3025               	movlw	low LCD_Write_Int@str
  6755  0147  0084               	movwf	4
  6756  0148  3000               	movlw	high LCD_Write_Int@str
  6757  0149  0085               	movwf	5
  6758  014A  3005               	movlw	5
  6759  014B  0020               	movlb	0	; select bank0
  6760  014C  00A0               	movwf	??_LCD_Write_Int
  6761  014D                     u2050:	
  6762  014D  0016               	moviw fsr1++
  6763  014E  001A               	movwi fsr0++
  6764  014F  0BA0               	decfsz	??_LCD_Write_Int,f
  6765  0150  294D               	goto	u2050
  6766                           
  6767                           ;lcd.c: 249: int i=4,j=0;
  6768  0151  3004               	movlw	4
  6769  0152  00AC               	movwf	LCD_Write_Int@i
  6770  0153  3000               	movlw	0
  6771  0154  00AD               	movwf	LCD_Write_Int@i+1
  6772  0155  01AA               	clrf	LCD_Write_Int@j
  6773  0156  01AB               	clrf	LCD_Write_Int@j+1
  6774                           
  6775                           ;lcd.c: 251: if(value<0)
  6776  0157  1FFA               	btfss	LCD_Write_Int@value+1,7
  6777  0158  2963               	goto	l2220
  6778                           
  6779                           ;lcd.c: 252: {
  6780                           ;lcd.c: 253: LCD_Write_Char('-');
  6781  0159  302D               	movlw	45
  6782  015A  3189  21AA  3181   	fcall	_LCD_Write_Char
  6783                           
  6784                           ;lcd.c: 254: value=value*-1;
  6785  015D  09F9               	comf	LCD_Write_Int@value,f
  6786  015E  09FA               	comf	LCD_Write_Int@value+1,f
  6787  015F  0AF9               	incf	LCD_Write_Int@value,f
  6788  0160  1903               	skipnz
  6789  0161  0AFA               	incf	LCD_Write_Int@value+1,f
  6790                           
  6791                           ;lcd.c: 255: }
  6792  0162  296A               	goto	l2230
  6793  0163                     l2220:	
  6794                           
  6795                           ;lcd.c: 257: else
  6796                           ;lcd.c: 258: {
  6797                           ;lcd.c: 259: if(sign == 1)
  6798  0163  037D               	decf	LCD_Write_Int@sign,w
  6799  0164  1D03               	btfss	3,2
  6800  0165  296A               	goto	l2230
  6801                           
  6802                           ;lcd.c: 260: {
  6803                           ;lcd.c: 261: LCD_Write_Char('+');
  6804  0166  302B               	movlw	43
  6805  0167  3189  21AA  3181   	fcall	_LCD_Write_Char
  6806  016A                     l2230:	
  6807                           ;lcd.c: 262: }
  6808                           ;lcd.c: 263: }
  6809                           ;lcd.c: 265: while(value)
  6810                           
  6811  016A  0879               	movf	LCD_Write_Int@value,w
  6812  016B  047A               	iorwf	LCD_Write_Int@value+1,w
  6813  016C  1903               	btfsc	3,2
  6814  016D  2997               	goto	l2232
  6815                           
  6816                           ;lcd.c: 266: {
  6817                           ;lcd.c: 267: str[i]=value%10;
  6818  016E  300A               	movlw	10
  6819  016F  00F0               	movwf	___awmod@divisor
  6820  0170  3000               	movlw	0
  6821  0171  00F1               	movwf	___awmod@divisor+1
  6822  0172  087A               	movf	LCD_Write_Int@value+1,w
  6823  0173  00F3               	movwf	___awmod@dividend+1
  6824  0174  0879               	movf	LCD_Write_Int@value,w
  6825  0175  00F2               	movwf	___awmod@dividend
  6826  0176  318B  2329  3181   	fcall	___awmod
  6827  0179  0870               	movf	?___awmod,w
  6828  017A  0020               	movlb	0	; select bank0
  6829  017B  00A0               	movwf	??_LCD_Write_Int
  6830  017C  082C               	movf	LCD_Write_Int@i,w
  6831  017D  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6832  017E  0086               	movwf	6
  6833  017F  0187               	clrf	7
  6834  0180  0820               	movf	??_LCD_Write_Int,w
  6835  0181  0081               	movwf	1
  6836                           
  6837                           ;lcd.c: 268: value=value/10;
  6838  0182  300A               	movlw	10
  6839  0183  00F0               	movwf	___awdiv@divisor
  6840  0184  3000               	movlw	0
  6841  0185  00F1               	movwf	___awdiv@divisor+1
  6842  0186  087A               	movf	LCD_Write_Int@value+1,w
  6843  0187  00F3               	movwf	___awdiv@dividend+1
  6844  0188  0879               	movf	LCD_Write_Int@value,w
  6845  0189  00F2               	movwf	___awdiv@dividend
  6846  018A  318B  236E  3181   	fcall	___awdiv
  6847  018D  0871               	movf	?___awdiv+1,w
  6848  018E  00FA               	movwf	LCD_Write_Int@value+1
  6849  018F  0870               	movf	?___awdiv,w
  6850  0190  00F9               	movwf	LCD_Write_Int@value
  6851                           
  6852                           ;lcd.c: 269: i--;
  6853  0191  30FF               	movlw	255
  6854  0192  0020               	movlb	0	; select bank0
  6855  0193  07AC               	addwf	LCD_Write_Int@i,f
  6856  0194  30FF               	movlw	255
  6857  0195  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6858  0196  296A               	goto	l2230
  6859  0197                     l2232:	
  6860                           
  6861                           ;lcd.c: 270: }
  6862                           ;lcd.c: 271: if(fieldLength==-1)
  6863  0197  0A7B               	incf	LCD_Write_Int@fieldLength,w
  6864  0198  1903               	btfsc	3,2
  6865  0199  29A0               	goto	l2238
  6866  019A  29A9               	goto	l2240
  6867  019B                     l2236:	
  6868                           ;lcd.c: 272: {
  6869                           ;lcd.c: 273: while(str[j]==0)
  6870                           
  6871                           
  6872                           ;lcd.c: 274: {
  6873                           ;lcd.c: 275: j++;
  6874  019B  3001               	movlw	1
  6875  019C  0020               	movlb	0	; select bank0
  6876  019D  07AA               	addwf	LCD_Write_Int@j,f
  6877  019E  3000               	movlw	0
  6878  019F  3DAB               	addwfc	LCD_Write_Int@j+1,f
  6879  01A0                     l2238:	
  6880  01A0  0020               	movlb	0	; select bank0
  6881  01A1  082A               	movf	LCD_Write_Int@j,w
  6882  01A2  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6883  01A3  0086               	movwf	6
  6884  01A4  0187               	clrf	7
  6885  01A5  0801               	movf	1,w
  6886  01A6  1D03               	btfss	3,2
  6887  01A7  29BA               	goto	l2242
  6888  01A8  299B               	goto	l2236
  6889  01A9                     l2240:	
  6890                           ;lcd.c: 276: }
  6891                           ;lcd.c: 277: }
  6892                           
  6893                           
  6894                           ;lcd.c: 278: else
  6895                           ;lcd.c: 279: {
  6896                           ;lcd.c: 280: j=5-fieldLength;
  6897  01A9  087B               	movf	LCD_Write_Int@fieldLength,w
  6898  01AA  0020               	movlb	0	; select bank0
  6899  01AB  00A0               	movwf	??_LCD_Write_Int
  6900  01AC  01A1               	clrf	??_LCD_Write_Int+1
  6901  01AD  1BA0               	btfsc	??_LCD_Write_Int,7
  6902  01AE  03A1               	decf	??_LCD_Write_Int+1,f
  6903  01AF  09A0               	comf	??_LCD_Write_Int,f
  6904  01B0  09A1               	comf	??_LCD_Write_Int+1,f
  6905  01B1  0AA0               	incf	??_LCD_Write_Int,f
  6906  01B2  1903               	skipnz
  6907  01B3  0AA1               	incf	??_LCD_Write_Int+1,f
  6908  01B4  0820               	movf	??_LCD_Write_Int,w
  6909  01B5  3E05               	addlw	5
  6910  01B6  00AA               	movwf	LCD_Write_Int@j
  6911  01B7  3000               	movlw	0
  6912  01B8  3D21               	addwfc	??_LCD_Write_Int+1,w
  6913  01B9  00AB               	movwf	LCD_Write_Int@j+1
  6914  01BA                     l2242:	
  6915                           
  6916                           ;lcd.c: 281: }
  6917                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  6918  01BA  082B               	movf	LCD_Write_Int@j+1,w
  6919  01BB  00AD               	movwf	LCD_Write_Int@i+1
  6920  01BC  082A               	movf	LCD_Write_Int@j,w
  6921  01BD  00AC               	movwf	LCD_Write_Int@i
  6922  01BE                     l2248:	
  6923  01BE  087C               	movf	LCD_Write_Int@numPlaces,w
  6924  01BF  00A0               	movwf	??_LCD_Write_Int
  6925  01C0  01A1               	clrf	??_LCD_Write_Int+1
  6926  01C1  1BA0               	btfsc	??_LCD_Write_Int,7
  6927  01C2  03A1               	decf	??_LCD_Write_Int+1,f
  6928  01C3  09A0               	comf	??_LCD_Write_Int,f
  6929  01C4  09A1               	comf	??_LCD_Write_Int+1,f
  6930  01C5  0AA0               	incf	??_LCD_Write_Int,f
  6931  01C6  1903               	skipnz
  6932  01C7  0AA1               	incf	??_LCD_Write_Int+1,f
  6933  01C8  0820               	movf	??_LCD_Write_Int,w
  6934  01C9  3E05               	addlw	5
  6935  01CA  00A2               	movwf	??_LCD_Write_Int+2
  6936  01CB  3000               	movlw	0
  6937  01CC  3D21               	addwfc	??_LCD_Write_Int+1,w
  6938  01CD  00A3               	movwf	??_LCD_Write_Int+3
  6939  01CE  082D               	movf	LCD_Write_Int@i+1,w
  6940  01CF  3A80               	xorlw	128
  6941  01D0  00A4               	movwf	??_LCD_Write_Int+4
  6942  01D1  0823               	movf	??_LCD_Write_Int+3,w
  6943  01D2  3A80               	xorlw	128
  6944  01D3  0224               	subwf	??_LCD_Write_Int+4,w
  6945  01D4  1D03               	skipz
  6946  01D5  29D8               	goto	u2115
  6947  01D6  0822               	movf	??_LCD_Write_Int+2,w
  6948  01D7  022C               	subwf	LCD_Write_Int@i,w
  6949  01D8                     u2115:	
  6950  01D8  1803               	btfsc	3,0
  6951  01D9  29EA               	goto	l2250
  6952                           
  6953                           ;lcd.c: 284: {
  6954                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  6955  01DA  0020               	movlb	0	; select bank0
  6956  01DB  082C               	movf	LCD_Write_Int@i,w
  6957  01DC  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6958  01DD  0086               	movwf	6
  6959  01DE  0187               	clrf	7
  6960  01DF  0801               	movf	1,w
  6961  01E0  3E30               	addlw	48
  6962  01E1  3189  21AA  3181   	fcall	_LCD_Write_Char
  6963  01E4  3001               	movlw	1
  6964  01E5  0020               	movlb	0	; select bank0
  6965  01E6  07AC               	addwf	LCD_Write_Int@i,f
  6966  01E7  3000               	movlw	0
  6967  01E8  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6968  01E9  29BE               	goto	l2248
  6969  01EA                     l2250:	
  6970                           
  6971                           ;lcd.c: 286: }
  6972                           ;lcd.c: 288: if(numPlaces == 1)
  6973  01EA  037C               	decf	LCD_Write_Int@numPlaces,w
  6974  01EB  1D03               	btfss	3,2
  6975  01EC  29F7               	goto	l2254
  6976                           
  6977                           ;lcd.c: 289: {
  6978                           ;lcd.c: 290: LCD_Write_Char(46);
  6979  01ED  302E               	movlw	46
  6980  01EE  3189  21AA  3181   	fcall	_LCD_Write_Char
  6981                           
  6982                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  6983  01F1  0020               	movlb	0	; select bank0
  6984  01F2  0829               	movf	LCD_Write_Int@str+4,w
  6985  01F3  3E30               	addlw	48
  6986  01F4  3189  21AA  3181   	fcall	_LCD_Write_Char
  6987  01F7                     l2254:	
  6988                           
  6989                           ;lcd.c: 292: }
  6990                           ;lcd.c: 294: if(numPlaces == 2)
  6991  01F7  3002               	movlw	2
  6992  01F8  067C               	xorwf	LCD_Write_Int@numPlaces,w
  6993  01F9  1D03               	btfss	3,2
  6994  01FA  0008               	return
  6995                           
  6996                           ;lcd.c: 295: {
  6997                           ;lcd.c: 296: LCD_Write_Char(46);
  6998  01FB  302E               	movlw	46
  6999  01FC  3189  21AA  3181   	fcall	_LCD_Write_Char
  7000                           
  7001                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  7002  01FF  0020               	movlb	0	; select bank0
  7003  0200  0828               	movf	LCD_Write_Int@str+3,w
  7004  0201  3E30               	addlw	48
  7005  0202  3189  21AA  3181   	fcall	_LCD_Write_Char
  7006                           
  7007                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  7008  0205  0020               	movlb	0	; select bank0
  7009  0206  0829               	movf	LCD_Write_Int@str+4,w
  7010  0207  3E30               	addlw	48
  7011  0208  3189  21AA         	fcall	_LCD_Write_Char
  7012  020A  0008               	return
  7013  020B                     __end_of_LCD_Write_Int:	
  7014                           
  7015                           	psect	text5
  7016  0B29                     __ptext5:	
  7017 ;; *************** function ___awmod *****************
  7018 ;; Defined at:
  7019 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  divisor         2    0[COMMON] int 
  7022 ;;  dividend        2    2[COMMON] int 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  sign            1    6[COMMON] unsigned char 
  7025 ;;  counter         1    5[COMMON] unsigned char 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  2    0[COMMON] int 
  7028 ;; Registers used:
  7029 ;;		wreg, status,2, status,0
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;Total ram usage:        7 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_LCD_Write_Int
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           
  7049                           ;psect for function ___awmod
  7050  0B29                     ___awmod:	
  7051                           
  7052                           ;incstack = 0
  7053                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7054  0B29  01F6               	clrf	___awmod@sign
  7055  0B2A  1FF3               	btfss	___awmod@dividend+1,7
  7056  0B2B  2B33               	goto	l2148
  7057  0B2C  09F2               	comf	___awmod@dividend,f
  7058  0B2D  09F3               	comf	___awmod@dividend+1,f
  7059  0B2E  0AF2               	incf	___awmod@dividend,f
  7060  0B2F  1903               	skipnz
  7061  0B30  0AF3               	incf	___awmod@dividend+1,f
  7062  0B31  01F6               	clrf	___awmod@sign
  7063  0B32  0AF6               	incf	___awmod@sign,f
  7064  0B33                     l2148:	
  7065  0B33  1FF1               	btfss	___awmod@divisor+1,7
  7066  0B34  2B3A               	goto	l2152
  7067  0B35  09F0               	comf	___awmod@divisor,f
  7068  0B36  09F1               	comf	___awmod@divisor+1,f
  7069  0B37  0AF0               	incf	___awmod@divisor,f
  7070  0B38  1903               	skipnz
  7071  0B39  0AF1               	incf	___awmod@divisor+1,f
  7072  0B3A                     l2152:	
  7073  0B3A  0870               	movf	___awmod@divisor,w
  7074  0B3B  0471               	iorwf	___awmod@divisor+1,w
  7075  0B3C  1903               	btfsc	3,2
  7076  0B3D  2B61               	goto	l2170
  7077  0B3E  01F5               	clrf	___awmod@counter
  7078  0B3F  0AF5               	incf	___awmod@counter,f
  7079  0B40                     l2160:	
  7080  0B40  1BF1               	btfsc	___awmod@divisor+1,7
  7081  0B41  2B4C               	goto	l2162
  7082  0B42  3001               	movlw	1
  7083  0B43                     u1945:	
  7084  0B43  35F0               	lslf	___awmod@divisor,f
  7085  0B44  0DF1               	rlf	___awmod@divisor+1,f
  7086  0B45  0B89               	decfsz	9,f
  7087  0B46  2B43               	goto	u1945
  7088  0B47  3001               	movlw	1
  7089  0B48  00F4               	movwf	??___awmod
  7090  0B49  0874               	movf	??___awmod,w
  7091  0B4A  07F5               	addwf	___awmod@counter,f
  7092  0B4B  2B40               	goto	l2160
  7093  0B4C                     l2162:	
  7094  0B4C  0871               	movf	___awmod@divisor+1,w
  7095  0B4D  0273               	subwf	___awmod@dividend+1,w
  7096  0B4E  1D03               	skipz
  7097  0B4F  2B52               	goto	u1965
  7098  0B50  0870               	movf	___awmod@divisor,w
  7099  0B51  0272               	subwf	___awmod@dividend,w
  7100  0B52                     u1965:	
  7101  0B52  1C03               	skipc
  7102  0B53  2B58               	goto	l2166
  7103  0B54  0870               	movf	___awmod@divisor,w
  7104  0B55  02F2               	subwf	___awmod@dividend,f
  7105  0B56  0871               	movf	___awmod@divisor+1,w
  7106  0B57  3BF3               	subwfb	___awmod@dividend+1,f
  7107  0B58                     l2166:	
  7108  0B58  3001               	movlw	1
  7109  0B59                     u1975:	
  7110  0B59  36F1               	lsrf	___awmod@divisor+1,f
  7111  0B5A  0CF0               	rrf	___awmod@divisor,f
  7112  0B5B  0B89               	decfsz	9,f
  7113  0B5C  2B59               	goto	u1975
  7114  0B5D  3001               	movlw	1
  7115  0B5E  02F5               	subwf	___awmod@counter,f
  7116  0B5F  1D03               	btfss	3,2
  7117  0B60  2B4C               	goto	l2162
  7118  0B61                     l2170:	
  7119  0B61  0876               	movf	___awmod@sign,w
  7120  0B62  1903               	btfsc	3,2
  7121  0B63  2B69               	goto	l2174
  7122  0B64  09F2               	comf	___awmod@dividend,f
  7123  0B65  09F3               	comf	___awmod@dividend+1,f
  7124  0B66  0AF2               	incf	___awmod@dividend,f
  7125  0B67  1903               	skipnz
  7126  0B68  0AF3               	incf	___awmod@dividend+1,f
  7127  0B69                     l2174:	
  7128  0B69  0873               	movf	___awmod@dividend+1,w
  7129  0B6A  00F1               	movwf	?___awmod+1
  7130  0B6B  0872               	movf	___awmod@dividend,w
  7131  0B6C  00F0               	movwf	?___awmod
  7132  0B6D  0008               	return
  7133  0B6E                     __end_of___awmod:	
  7134                           
  7135                           	psect	text6
  7136  0B6E                     __ptext6:	
  7137 ;; *************** function ___awdiv *****************
  7138 ;; Defined at:
  7139 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  divisor         2    0[COMMON] int 
  7142 ;;  dividend        2    2[COMMON] int 
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;  quotient        2    7[COMMON] int 
  7145 ;;  sign            1    6[COMMON] unsigned char 
  7146 ;;  counter         1    5[COMMON] unsigned char 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  2    0[COMMON] int 
  7149 ;; Registers used:
  7150 ;;		wreg, status,2, status,0
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;Total ram usage:        9 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_LCD_Write_Int
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           
  7170                           ;psect for function ___awdiv
  7171  0B6E                     ___awdiv:	
  7172                           
  7173                           ;incstack = 0
  7174                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7175  0B6E  01F6               	clrf	___awdiv@sign
  7176  0B6F  1FF1               	btfss	___awdiv@divisor+1,7
  7177  0B70  2B78               	goto	l2104
  7178  0B71  09F0               	comf	___awdiv@divisor,f
  7179  0B72  09F1               	comf	___awdiv@divisor+1,f
  7180  0B73  0AF0               	incf	___awdiv@divisor,f
  7181  0B74  1903               	skipnz
  7182  0B75  0AF1               	incf	___awdiv@divisor+1,f
  7183  0B76  01F6               	clrf	___awdiv@sign
  7184  0B77  0AF6               	incf	___awdiv@sign,f
  7185  0B78                     l2104:	
  7186  0B78  1FF3               	btfss	___awdiv@dividend+1,7
  7187  0B79  2B83               	goto	l2110
  7188  0B7A  09F2               	comf	___awdiv@dividend,f
  7189  0B7B  09F3               	comf	___awdiv@dividend+1,f
  7190  0B7C  0AF2               	incf	___awdiv@dividend,f
  7191  0B7D  1903               	skipnz
  7192  0B7E  0AF3               	incf	___awdiv@dividend+1,f
  7193  0B7F  3001               	movlw	1
  7194  0B80  00F4               	movwf	??___awdiv
  7195  0B81  0874               	movf	??___awdiv,w
  7196  0B82  06F6               	xorwf	___awdiv@sign,f
  7197  0B83                     l2110:	
  7198  0B83  01F7               	clrf	___awdiv@quotient
  7199  0B84  01F8               	clrf	___awdiv@quotient+1
  7200  0B85  0870               	movf	___awdiv@divisor,w
  7201  0B86  0471               	iorwf	___awdiv@divisor+1,w
  7202  0B87  1903               	btfsc	3,2
  7203  0B88  2BB2               	goto	l2132
  7204  0B89  01F5               	clrf	___awdiv@counter
  7205  0B8A  0AF5               	incf	___awdiv@counter,f
  7206  0B8B                     l2120:	
  7207  0B8B  1BF1               	btfsc	___awdiv@divisor+1,7
  7208  0B8C  2B97               	goto	l2122
  7209  0B8D  3001               	movlw	1
  7210  0B8E                     u1845:	
  7211  0B8E  35F0               	lslf	___awdiv@divisor,f
  7212  0B8F  0DF1               	rlf	___awdiv@divisor+1,f
  7213  0B90  0B89               	decfsz	9,f
  7214  0B91  2B8E               	goto	u1845
  7215  0B92  3001               	movlw	1
  7216  0B93  00F4               	movwf	??___awdiv
  7217  0B94  0874               	movf	??___awdiv,w
  7218  0B95  07F5               	addwf	___awdiv@counter,f
  7219  0B96  2B8B               	goto	l2120
  7220  0B97                     l2122:	
  7221  0B97  3001               	movlw	1
  7222  0B98                     u1865:	
  7223  0B98  35F7               	lslf	___awdiv@quotient,f
  7224  0B99  0DF8               	rlf	___awdiv@quotient+1,f
  7225  0B9A  0B89               	decfsz	9,f
  7226  0B9B  2B98               	goto	u1865
  7227  0B9C  0871               	movf	___awdiv@divisor+1,w
  7228  0B9D  0273               	subwf	___awdiv@dividend+1,w
  7229  0B9E  1D03               	skipz
  7230  0B9F  2BA2               	goto	u1875
  7231  0BA0  0870               	movf	___awdiv@divisor,w
  7232  0BA1  0272               	subwf	___awdiv@dividend,w
  7233  0BA2                     u1875:	
  7234  0BA2  1C03               	skipc
  7235  0BA3  2BA9               	goto	l2128
  7236  0BA4  0870               	movf	___awdiv@divisor,w
  7237  0BA5  02F2               	subwf	___awdiv@dividend,f
  7238  0BA6  0871               	movf	___awdiv@divisor+1,w
  7239  0BA7  3BF3               	subwfb	___awdiv@dividend+1,f
  7240  0BA8  1477               	bsf	___awdiv@quotient,0
  7241  0BA9                     l2128:	
  7242  0BA9  3001               	movlw	1
  7243  0BAA                     u1885:	
  7244  0BAA  36F1               	lsrf	___awdiv@divisor+1,f
  7245  0BAB  0CF0               	rrf	___awdiv@divisor,f
  7246  0BAC  0B89               	decfsz	9,f
  7247  0BAD  2BAA               	goto	u1885
  7248  0BAE  3001               	movlw	1
  7249  0BAF  02F5               	subwf	___awdiv@counter,f
  7250  0BB0  1D03               	btfss	3,2
  7251  0BB1  2B97               	goto	l2122
  7252  0BB2                     l2132:	
  7253  0BB2  0876               	movf	___awdiv@sign,w
  7254  0BB3  1903               	btfsc	3,2
  7255  0BB4  2BBA               	goto	l2136
  7256  0BB5  09F7               	comf	___awdiv@quotient,f
  7257  0BB6  09F8               	comf	___awdiv@quotient+1,f
  7258  0BB7  0AF7               	incf	___awdiv@quotient,f
  7259  0BB8  1903               	skipnz
  7260  0BB9  0AF8               	incf	___awdiv@quotient+1,f
  7261  0BBA                     l2136:	
  7262  0BBA  0878               	movf	___awdiv@quotient+1,w
  7263  0BBB  00F1               	movwf	?___awdiv+1
  7264  0BBC  0877               	movf	___awdiv@quotient,w
  7265  0BBD  00F0               	movwf	?___awdiv
  7266  0BBE  0008               	return
  7267  0BBF                     __end_of___awdiv:	
  7268                           
  7269                           	psect	text7
  7270  0AEA                     __ptext7:	
  7271 ;; *************** function _LCD_Set_Cursor *****************
  7272 ;; Defined at:
  7273 ;;		line 82 in file "lcd.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  x               1    wreg     unsigned char 
  7276 ;;  y               1    2[COMMON] unsigned char 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  x               1    5[COMMON] unsigned char 
  7279 ;;  temp            1    8[COMMON] unsigned char 
  7280 ;;  w               1    7[COMMON] unsigned char 
  7281 ;;  z               1    6[COMMON] unsigned char 
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		wreg, status,2, status,0, pclath, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7291 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7292 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;Total ram usage:        7 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    2
  7298 ;; This function calls:
  7299 ;;		_LCD_Cmd
  7300 ;; This function is called by:
  7301 ;;		_tempSetpoint
  7302 ;;		_readButtons
  7303 ;;		_main
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           
  7308                           ;psect for function _LCD_Set_Cursor
  7309  0AEA                     _LCD_Set_Cursor:	
  7310                           
  7311                           ;incstack = 0
  7312                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7313                           ;LCD_Set_Cursor@x stored from wreg
  7314  0AEA  00F5               	movwf	LCD_Set_Cursor@x
  7315                           
  7316                           ;lcd.c: 86: char temp,z,w;
  7317                           ;lcd.c: 88: if(x == 0)
  7318  0AEB  0875               	movf	LCD_Set_Cursor@x,w
  7319  0AEC  1D03               	btfss	3,2
  7320  0AED  2B0A               	goto	l2190
  7321                           
  7322                           ;lcd.c: 89: {
  7323                           ;lcd.c: 90: temp = 0x80 + y;
  7324  0AEE  0872               	movf	LCD_Set_Cursor@y,w
  7325  0AEF  3E80               	addlw	128
  7326  0AF0  00F3               	movwf	??_LCD_Set_Cursor
  7327  0AF1  0873               	movf	??_LCD_Set_Cursor,w
  7328  0AF2  00F8               	movwf	LCD_Set_Cursor@temp
  7329                           
  7330                           ;lcd.c: 91: z = temp>>4;
  7331  0AF3  0878               	movf	LCD_Set_Cursor@temp,w
  7332  0AF4  00F3               	movwf	??_LCD_Set_Cursor
  7333  0AF5  3004               	movlw	4
  7334  0AF6                     u2015:	
  7335  0AF6  36F3               	lsrf	??_LCD_Set_Cursor,f
  7336  0AF7  0B89               	decfsz	9,f
  7337  0AF8  2AF6               	goto	u2015
  7338  0AF9  0873               	movf	??_LCD_Set_Cursor,w
  7339  0AFA  00F4               	movwf	??_LCD_Set_Cursor+1
  7340  0AFB  0874               	movf	??_LCD_Set_Cursor+1,w
  7341  0AFC  00F6               	movwf	LCD_Set_Cursor@z
  7342                           
  7343                           ;lcd.c: 92: w = temp & 0x0F;
  7344  0AFD  0878               	movf	LCD_Set_Cursor@temp,w
  7345  0AFE  390F               	andlw	15
  7346  0AFF  00F3               	movwf	??_LCD_Set_Cursor
  7347  0B00  0873               	movf	??_LCD_Set_Cursor,w
  7348  0B01  00F7               	movwf	LCD_Set_Cursor@w
  7349                           
  7350                           ;lcd.c: 93: LCD_Cmd(z);
  7351  0B02  0876               	movf	LCD_Set_Cursor@z,w
  7352  0B03  3188  2032  318A   	fcall	_LCD_Cmd
  7353                           
  7354                           ;lcd.c: 94: LCD_Cmd(w);
  7355  0B06  0877               	movf	LCD_Set_Cursor@w,w
  7356  0B07  3188  2032         	fcall	_LCD_Cmd
  7357                           
  7358                           ;lcd.c: 95: }
  7359  0B09  0008               	return
  7360  0B0A                     l2190:	
  7361                           
  7362                           ;lcd.c: 97: else if(x == 1)
  7363  0B0A  0375               	decf	LCD_Set_Cursor@x,w
  7364  0B0B  1D03               	btfss	3,2
  7365  0B0C  0008               	return
  7366                           
  7367                           ;lcd.c: 98: {
  7368                           ;lcd.c: 99: temp = 0xC0 + y;
  7369  0B0D  0872               	movf	LCD_Set_Cursor@y,w
  7370  0B0E  3EC0               	addlw	192
  7371  0B0F  00F3               	movwf	??_LCD_Set_Cursor
  7372  0B10  0873               	movf	??_LCD_Set_Cursor,w
  7373  0B11  00F8               	movwf	LCD_Set_Cursor@temp
  7374                           
  7375                           ;lcd.c: 100: z = temp>>4;
  7376  0B12  0878               	movf	LCD_Set_Cursor@temp,w
  7377  0B13  00F3               	movwf	??_LCD_Set_Cursor
  7378  0B14  3004               	movlw	4
  7379  0B15                     u2035:	
  7380  0B15  36F3               	lsrf	??_LCD_Set_Cursor,f
  7381  0B16  0B89               	decfsz	9,f
  7382  0B17  2B15               	goto	u2035
  7383  0B18  0873               	movf	??_LCD_Set_Cursor,w
  7384  0B19  00F4               	movwf	??_LCD_Set_Cursor+1
  7385  0B1A  0874               	movf	??_LCD_Set_Cursor+1,w
  7386  0B1B  00F6               	movwf	LCD_Set_Cursor@z
  7387                           
  7388                           ;lcd.c: 101: w = temp & 0x0F;
  7389  0B1C  0878               	movf	LCD_Set_Cursor@temp,w
  7390  0B1D  390F               	andlw	15
  7391  0B1E  00F3               	movwf	??_LCD_Set_Cursor
  7392  0B1F  0873               	movf	??_LCD_Set_Cursor,w
  7393  0B20  00F7               	movwf	LCD_Set_Cursor@w
  7394                           
  7395                           ;lcd.c: 102: LCD_Cmd(z);
  7396  0B21  0876               	movf	LCD_Set_Cursor@z,w
  7397  0B22  3188  2032  318A   	fcall	_LCD_Cmd
  7398                           
  7399                           ;lcd.c: 103: LCD_Cmd(w);
  7400  0B25  0877               	movf	LCD_Set_Cursor@w,w
  7401  0B26  3188  2032         	fcall	_LCD_Cmd
  7402  0B28  0008               	return
  7403  0B29                     __end_of_LCD_Set_Cursor:	
  7404                           
  7405                           	psect	text8
  7406  0E9C                     __ptext8:	
  7407 ;; *************** function _log *****************
  7408 ;; Defined at:
  7409 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\log.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  x               3   39[BANK0 ] void 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  exponent        2   43[BANK0 ] int 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  3   39[BANK0 ] int 
  7416 ;; Registers used:
  7417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7423 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;Total ram usage:        6 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:    3
  7430 ;; This function calls:
  7431 ;;		___awtoft
  7432 ;;		___ftadd
  7433 ;;		___ftge
  7434 ;;		___ftmul
  7435 ;;		_eval_poly
  7436 ;;		_frexp
  7437 ;; This function is called by:
  7438 ;;		_main
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           
  7443                           ;psect for function _log
  7444  0E9C                     _log:	
  7445                           
  7446                           ;incstack = 0
  7447                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7448  0E9C  0020               	movlb	0	; select bank0
  7449  0E9D  0847               	movf	log@x,w
  7450  0E9E  00BD               	movwf	___ftge@ff1
  7451  0E9F  0848               	movf	log@x+1,w
  7452  0EA0  00BE               	movwf	___ftge@ff1+1
  7453  0EA1  0849               	movf	log@x+2,w
  7454  0EA2  00BF               	movwf	___ftge@ff1+2
  7455  0EA3  3000               	movlw	0
  7456  0EA4  00C0               	movwf	___ftge@ff2
  7457  0EA5  3000               	movlw	0
  7458  0EA6  00C1               	movwf	___ftge@ff2+1
  7459  0EA7  3000               	movlw	0
  7460  0EA8  00C2               	movwf	___ftge@ff2+2
  7461  0EA9  318A  22AE  318E   	fcall	___ftge
  7462  0EAC  1803               	btfsc	3,0
  7463  0EAD  2EBB               	goto	l2828
  7464  0EAE  3021               	movlw	33
  7465  0EAF  0021               	movlb	1	; select bank1
  7466  0EB0  00DC               	movwf	_errno^(0+128)
  7467  0EB1  3000               	movlw	0
  7468  0EB2  00DD               	movwf	(_errno^(0+128)+1)
  7469  0EB3  3000               	movlw	0
  7470  0EB4  0020               	movlb	0	; select bank0
  7471  0EB5  00C7               	movwf	?_log
  7472  0EB6  3000               	movlw	0
  7473  0EB7  00C8               	movwf	?_log+1
  7474  0EB8  3000               	movlw	0
  7475  0EB9  00C9               	movwf	?_log+2
  7476  0EBA  0008               	return
  7477  0EBB                     l2828:	
  7478  0EBB  0020               	movlb	0	; select bank0
  7479  0EBC  0849               	movf	log@x+2,w
  7480  0EBD  0448               	iorwf	log@x+1,w
  7481  0EBE  0447               	iorwf	log@x,w
  7482  0EBF  1D03               	skipz
  7483  0EC0  2ECE               	goto	l2834
  7484  0EC1  3022               	movlw	34
  7485  0EC2  0021               	movlb	1	; select bank1
  7486  0EC3  00DC               	movwf	_errno^(0+128)
  7487  0EC4  3000               	movlw	0
  7488  0EC5  00DD               	movwf	(_errno^(0+128)+1)
  7489  0EC6  3000               	movlw	0
  7490  0EC7  0020               	movlb	0	; select bank0
  7491  0EC8  00C7               	movwf	?_log
  7492  0EC9  3000               	movlw	0
  7493  0ECA  00C8               	movwf	?_log+1
  7494  0ECB  3000               	movlw	0
  7495  0ECC  00C9               	movwf	?_log+2
  7496  0ECD  0008               	return
  7497  0ECE                     l2834:	
  7498  0ECE  3000               	movlw	0
  7499  0ECF  00B0               	movwf	___ftadd@f1
  7500  0ED0  3080               	movlw	128
  7501  0ED1  00B1               	movwf	___ftadd@f1+1
  7502  0ED2  30BF               	movlw	191
  7503  0ED3  00B2               	movwf	___ftadd@f1+2
  7504  0ED4  3000               	movlw	0
  7505  0ED5  00A0               	movwf	___ftmul@f1
  7506  0ED6  3000               	movlw	0
  7507  0ED7  00A1               	movwf	___ftmul@f1+1
  7508  0ED8  3040               	movlw	64
  7509  0ED9  00A2               	movwf	___ftmul@f1+2
  7510  0EDA  304B               	movlw	(low (log@exponent| 0))& (0+255)
  7511  0EDB  00CA               	movwf	??_log
  7512  0EDC  084A               	movf	??_log,w
  7513  0EDD  00F3               	movwf	frexp@eptr
  7514  0EDE  0847               	movf	log@x,w
  7515  0EDF  00F0               	movwf	frexp@value
  7516  0EE0  0848               	movf	log@x+1,w
  7517  0EE1  00F1               	movwf	frexp@value+1
  7518  0EE2  0849               	movf	log@x+2,w
  7519  0EE3  00F2               	movwf	frexp@value+2
  7520  0EE4  318A  2273  318E   	fcall	_frexp
  7521  0EE7  0870               	movf	?_frexp,w
  7522  0EE8  0020               	movlb	0	; select bank0
  7523  0EE9  00A3               	movwf	___ftmul@f2
  7524  0EEA  0871               	movf	?_frexp+1,w
  7525  0EEB  00A4               	movwf	___ftmul@f2+1
  7526  0EEC  0872               	movf	?_frexp+2,w
  7527  0EED  00A5               	movwf	___ftmul@f2+2
  7528  0EEE  318F  274C  318E   	fcall	___ftmul
  7529  0EF1  0020               	movlb	0	; select bank0
  7530  0EF2  0820               	movf	?___ftmul,w
  7531  0EF3  00B3               	movwf	___ftadd@f2
  7532  0EF4  0821               	movf	?___ftmul+1,w
  7533  0EF5  00B4               	movwf	___ftadd@f2+1
  7534  0EF6  0822               	movf	?___ftmul+2,w
  7535  0EF7  00B5               	movwf	___ftadd@f2+2
  7536  0EF8  3182  220B  318E   	fcall	___ftadd
  7537  0EFB  0020               	movlb	0	; select bank0
  7538  0EFC  0830               	movf	?___ftadd,w
  7539  0EFD  00C7               	movwf	log@x
  7540  0EFE  0831               	movf	?___ftadd+1,w
  7541  0EFF  00C8               	movwf	log@x+1
  7542  0F00  0832               	movf	?___ftadd+2,w
  7543  0F01  00C9               	movwf	log@x+2
  7544  0F02  30FF               	movlw	255
  7545  0F03  07CB               	addwf	log@exponent,f
  7546  0F04  30FF               	movlw	255
  7547  0F05  3DCC               	addwfc	log@exponent+1,f
  7548  0F06  0847               	movf	log@x,w
  7549  0F07  00BD               	movwf	eval_poly@x
  7550  0F08  0848               	movf	log@x+1,w
  7551  0F09  00BE               	movwf	eval_poly@x+1
  7552  0F0A  0849               	movf	log@x+2,w
  7553  0F0B  00BF               	movwf	eval_poly@x+2
  7554  0F0C  3000               	movlw	low (log@coeff| (0+32768))
  7555  0F0D  00C0               	movwf	eval_poly@d
  7556  0F0E  3090               	movlw	high (log@coeff| (0+32768))
  7557  0F0F  00C1               	movwf	eval_poly@d+1
  7558  0F10  3008               	movlw	8
  7559  0F11  00C2               	movwf	eval_poly@n
  7560  0F12  3000               	movlw	0
  7561  0F13  00C3               	movwf	eval_poly@n+1
  7562  0F14  318B  23BF  318E   	fcall	_eval_poly
  7563  0F17  0020               	movlb	0	; select bank0
  7564  0F18  083D               	movf	?_eval_poly,w
  7565  0F19  00C7               	movwf	log@x
  7566  0F1A  083E               	movf	?_eval_poly+1,w
  7567  0F1B  00C8               	movwf	log@x+1
  7568  0F1C  083F               	movf	?_eval_poly+2,w
  7569  0F1D  00C9               	movwf	log@x+2
  7570  0F1E  0847               	movf	log@x,w
  7571  0F1F  00B0               	movwf	___ftadd@f1
  7572  0F20  0848               	movf	log@x+1,w
  7573  0F21  00B1               	movwf	___ftadd@f1+1
  7574  0F22  0849               	movf	log@x+2,w
  7575  0F23  00B2               	movwf	___ftadd@f1+2
  7576  0F24  3072               	movlw	114
  7577  0F25  00A0               	movwf	___ftmul@f1
  7578  0F26  3031               	movlw	49
  7579  0F27  00A1               	movwf	___ftmul@f1+1
  7580  0F28  303F               	movlw	63
  7581  0F29  00A2               	movwf	___ftmul@f1+2
  7582  0F2A  084C               	movf	log@exponent+1,w
  7583  0F2B  00F9               	movwf	___awtoft@c+1
  7584  0F2C  084B               	movf	log@exponent,w
  7585  0F2D  00F8               	movwf	___awtoft@c
  7586  0F2E  3189  213E  318E   	fcall	___awtoft
  7587  0F31  0878               	movf	?___awtoft,w
  7588  0F32  0020               	movlb	0	; select bank0
  7589  0F33  00A3               	movwf	___ftmul@f2
  7590  0F34  0879               	movf	?___awtoft+1,w
  7591  0F35  00A4               	movwf	___ftmul@f2+1
  7592  0F36  087A               	movf	?___awtoft+2,w
  7593  0F37  00A5               	movwf	___ftmul@f2+2
  7594  0F38  318F  274C  318E   	fcall	___ftmul
  7595  0F3B  0020               	movlb	0	; select bank0
  7596  0F3C  0820               	movf	?___ftmul,w
  7597  0F3D  00B3               	movwf	___ftadd@f2
  7598  0F3E  0821               	movf	?___ftmul+1,w
  7599  0F3F  00B4               	movwf	___ftadd@f2+1
  7600  0F40  0822               	movf	?___ftmul+2,w
  7601  0F41  00B5               	movwf	___ftadd@f2+2
  7602  0F42  3182  220B         	fcall	___ftadd
  7603  0F44  0020               	movlb	0	; select bank0
  7604  0F45  0830               	movf	?___ftadd,w
  7605  0F46  00C7               	movwf	?_log
  7606  0F47  0831               	movf	?___ftadd+1,w
  7607  0F48  00C8               	movwf	?_log+1
  7608  0F49  0832               	movf	?___ftadd+2,w
  7609  0F4A  00C9               	movwf	?_log+2
  7610  0F4B  0008               	return
  7611  0F4C                     __end_of_log:	
  7612                           
  7613                           	psect	text9
  7614  0A73                     __ptext9:	
  7615 ;; *************** function _frexp *****************
  7616 ;; Defined at:
  7617 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\frexp.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  value           3    0[COMMON] int 
  7620 ;;  eptr            1    3[COMMON] PTR int 
  7621 ;;		 -> log@exponent(2), 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;		None
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  3    0[COMMON] PTR int 
  7626 ;; Registers used:
  7627 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7637 ;;Total ram usage:        6 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_log
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           
  7647                           ;psect for function _frexp
  7648  0A73                     _frexp:	
  7649                           
  7650                           ;incstack = 0
  7651                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7652  0A73  0872               	movf	frexp@value+2,w
  7653  0A74  0471               	iorwf	frexp@value+1,w
  7654  0A75  0470               	iorwf	frexp@value,w
  7655  0A76  1D03               	skipz
  7656  0A77  2A85               	goto	l2662
  7657  0A78  0873               	movf	frexp@eptr,w
  7658  0A79  0086               	movwf	6
  7659  0A7A  0187               	clrf	7
  7660  0A7B  3000               	movlw	0
  7661  0A7C  3FC0               	movwi [0]fsr1
  7662  0A7D  3FC1               	movwi [1]fsr1
  7663  0A7E  3000               	movlw	0
  7664  0A7F  00F0               	movwf	?_frexp
  7665  0A80  3000               	movlw	0
  7666  0A81  00F1               	movwf	?_frexp+1
  7667  0A82  3000               	movlw	0
  7668  0A83  00F2               	movwf	?_frexp+2
  7669  0A84  0008               	return
  7670  0A85                     l2662:	
  7671  0A85  0872               	movf	frexp@value+2,w
  7672  0A86  397F               	andlw	127
  7673  0A87  00F4               	movwf	??_frexp
  7674  0A88  01F5               	clrf	??_frexp+1
  7675  0A89  35F4               	lslf	??_frexp,f
  7676  0A8A  0DF5               	rlf	??_frexp+1,f
  7677  0A8B  0873               	movf	frexp@eptr,w
  7678  0A8C  0086               	movwf	6
  7679  0A8D  0187               	clrf	7
  7680  0A8E  0874               	movf	??_frexp,w
  7681  0A8F  3FC0               	movwi [0]fsr1
  7682  0A90  0875               	movf	??_frexp+1,w
  7683  0A91  3FC1               	movwi [1]fsr1
  7684  0A92  0D71               	rlf	frexp@value+1,w
  7685  0A93  0D71               	rlf	frexp@value+1,w
  7686  0A94  3901               	andlw	1
  7687  0A95  00F4               	movwf	??_frexp
  7688  0A96  01F5               	clrf	??_frexp+1
  7689  0A97  0873               	movf	frexp@eptr,w
  7690  0A98  0086               	movwf	6
  7691  0A99  0187               	clrf	7
  7692  0A9A  0874               	movf	??_frexp,w
  7693  0A9B  0481               	iorwf	1,f
  7694  0A9C  3141               	addfsr 1,1
  7695  0A9D  0875               	movf	??_frexp+1,w
  7696  0A9E  0481               	iorwf	1,f
  7697  0A9F  0873               	movf	frexp@eptr,w
  7698  0AA0  0086               	movwf	6
  7699  0AA1  0187               	clrf	7
  7700  0AA2  3082               	movlw	130
  7701  0AA3  0781               	addwf	1,f
  7702  0AA4  3141               	addfsr 1,1
  7703  0AA5  30FF               	movlw	255
  7704  0AA6  3D81               	addwfc	1,f
  7705  0AA7  317F               	addfsr 1,-1
  7706  0AA8  0872               	movf	frexp@value+2,w
  7707  0AA9  3980               	andlw	-128
  7708  0AAA  383F               	iorlw	63
  7709  0AAB  00F2               	movwf	frexp@value+2
  7710  0AAC  13F1               	bcf	frexp@value+1,7
  7711  0AAD  0008               	return
  7712  0AAE                     __end_of_frexp:	
  7713                           
  7714                           	psect	text10
  7715  0BBF                     __ptext10:	
  7716 ;; *************** function _eval_poly *****************
  7717 ;; Defined at:
  7718 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\evalpoly.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  x               3   29[BANK0 ] PTR int 
  7721 ;;  d               2   32[BANK0 ] PTR const 
  7722 ;;		 -> log@coeff(27), 
  7723 ;;  n               2   34[BANK0 ] int 
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  res             3   36[BANK0 ] int 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  3   29[BANK0 ] int 
  7728 ;; Registers used:
  7729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7735 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;Total ram usage:       10 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    2
  7742 ;; This function calls:
  7743 ;;		___ftadd
  7744 ;;		___ftmul
  7745 ;;		___wmul
  7746 ;; This function is called by:
  7747 ;;		_log
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           
  7752                           ;psect for function _eval_poly
  7753  0BBF                     _eval_poly:	
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7757  0BBF  0020               	movlb	0	; select bank0
  7758  0BC0  0843               	movf	eval_poly@n+1,w
  7759  0BC1  00F1               	movwf	___wmul@multiplier+1
  7760  0BC2  0842               	movf	eval_poly@n,w
  7761  0BC3  00F0               	movwf	___wmul@multiplier
  7762  0BC4  3003               	movlw	3
  7763  0BC5  00F2               	movwf	___wmul@multiplicand
  7764  0BC6  3000               	movlw	0
  7765  0BC7  00F3               	movwf	___wmul@multiplicand+1
  7766  0BC8  3189  2105  318B   	fcall	___wmul
  7767  0BCB  0020               	movlb	0	; select bank0
  7768  0BCC  0840               	movf	eval_poly@d,w
  7769  0BCD  0770               	addwf	?___wmul,w
  7770  0BCE  0084               	movwf	4
  7771  0BCF  0841               	movf	eval_poly@d+1,w
  7772  0BD0  3D71               	addwfc	?___wmul+1,w
  7773  0BD1  0085               	movwf	5
  7774  0BD2  3F00               	moviw [0]fsr0
  7775  0BD3  00C4               	movwf	eval_poly@res
  7776  0BD4  3F01               	moviw [1]fsr0
  7777  0BD5  00C5               	movwf	eval_poly@res+1
  7778  0BD6  3F02               	moviw [2]fsr0
  7779  0BD7                     L2:	
  7780  0BD7  00C6               	movwf	eval_poly@res+2
  7781  0BD8  0842               	movf	eval_poly@n,w
  7782  0BD9  0443               	iorwf	eval_poly@n+1,w
  7783  0BDA  1903               	btfsc	3,2
  7784  0BDB  2C18               	goto	l2680
  7785  0BDC  30FF               	movlw	255
  7786  0BDD  07C2               	addwf	eval_poly@n,f
  7787  0BDE  30FF               	movlw	255
  7788  0BDF  3DC3               	addwfc	eval_poly@n+1,f
  7789  0BE0  0843               	movf	eval_poly@n+1,w
  7790  0BE1  00F1               	movwf	___wmul@multiplier+1
  7791  0BE2  0842               	movf	eval_poly@n,w
  7792  0BE3  00F0               	movwf	___wmul@multiplier
  7793  0BE4  3003               	movlw	3
  7794  0BE5  00F2               	movwf	___wmul@multiplicand
  7795  0BE6  3000               	movlw	0
  7796  0BE7  00F3               	movwf	___wmul@multiplicand+1
  7797  0BE8  3189  2105  318B   	fcall	___wmul
  7798  0BEB  0020               	movlb	0	; select bank0
  7799  0BEC  0840               	movf	eval_poly@d,w
  7800  0BED  0770               	addwf	?___wmul,w
  7801  0BEE  0084               	movwf	4
  7802  0BEF  0841               	movf	eval_poly@d+1,w
  7803  0BF0  3D71               	addwfc	?___wmul+1,w
  7804  0BF1  0085               	movwf	5
  7805  0BF2  3F00               	moviw [0]fsr0
  7806  0BF3  00B0               	movwf	___ftadd@f1
  7807  0BF4  3F01               	moviw [1]fsr0
  7808  0BF5  00B1               	movwf	___ftadd@f1+1
  7809  0BF6  3F02               	moviw [2]fsr0
  7810  0BF7  00B2               	movwf	___ftadd@f1+2
  7811  0BF8  0844               	movf	eval_poly@res,w
  7812  0BF9  00A0               	movwf	___ftmul@f1
  7813  0BFA  0845               	movf	eval_poly@res+1,w
  7814  0BFB  00A1               	movwf	___ftmul@f1+1
  7815  0BFC  0846               	movf	eval_poly@res+2,w
  7816  0BFD  00A2               	movwf	___ftmul@f1+2
  7817  0BFE  083D               	movf	eval_poly@x,w
  7818  0BFF  00A3               	movwf	___ftmul@f2
  7819  0C00  083E               	movf	eval_poly@x+1,w
  7820  0C01  00A4               	movwf	___ftmul@f2+1
  7821  0C02  083F               	movf	eval_poly@x+2,w
  7822  0C03  00A5               	movwf	___ftmul@f2+2
  7823  0C04  318F  274C  318B   	fcall	___ftmul
  7824  0C07  0020               	movlb	0	; select bank0
  7825  0C08  0820               	movf	?___ftmul,w
  7826  0C09  00B3               	movwf	___ftadd@f2
  7827  0C0A  0821               	movf	?___ftmul+1,w
  7828  0C0B  00B4               	movwf	___ftadd@f2+1
  7829  0C0C  0822               	movf	?___ftmul+2,w
  7830  0C0D  00B5               	movwf	___ftadd@f2+2
  7831  0C0E  3182  220B  318B   	fcall	___ftadd
  7832  0C11  0020               	movlb	0	; select bank0
  7833  0C12  0830               	movf	?___ftadd,w
  7834  0C13  00C4               	movwf	eval_poly@res
  7835  0C14  0831               	movf	?___ftadd+1,w
  7836  0C15  00C5               	movwf	eval_poly@res+1
  7837  0C16  0832               	movf	?___ftadd+2,w
  7838  0C17  2BD7               	goto	L2
  7839  0C18                     l2680:	
  7840  0C18  0844               	movf	eval_poly@res,w
  7841  0C19  00BD               	movwf	?_eval_poly
  7842  0C1A  0845               	movf	eval_poly@res+1,w
  7843  0C1B  00BE               	movwf	?_eval_poly+1
  7844  0C1C  0846               	movf	eval_poly@res+2,w
  7845  0C1D  00BF               	movwf	?_eval_poly+2
  7846  0C1E  0008               	return
  7847  0C1F                     __end_of_eval_poly:	
  7848                           
  7849                           	psect	text11
  7850  0905                     __ptext11:	
  7851 ;; *************** function ___wmul *****************
  7852 ;; Defined at:
  7853 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  multiplier      2    0[COMMON] unsigned int 
  7856 ;;  multiplicand    2    2[COMMON] unsigned int 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  product         2    4[COMMON] unsigned int 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  2    0[COMMON] unsigned int 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;Total ram usage:        6 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_main
  7878 ;;		_eval_poly
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function ___wmul
  7884  0905                     ___wmul:	
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7888  0905  01F4               	clrf	___wmul@product
  7889  0906  01F5               	clrf	___wmul@product+1
  7890  0907                     l2260:	
  7891  0907  1C70               	btfss	___wmul@multiplier,0
  7892  0908  290D               	goto	l478
  7893  0909  0872               	movf	___wmul@multiplicand,w
  7894  090A  07F4               	addwf	___wmul@product,f
  7895  090B  0873               	movf	___wmul@multiplicand+1,w
  7896  090C  3DF5               	addwfc	___wmul@product+1,f
  7897  090D                     l478:	
  7898  090D  3001               	movlw	1
  7899  090E                     u2155:	
  7900  090E  35F2               	lslf	___wmul@multiplicand,f
  7901  090F  0DF3               	rlf	___wmul@multiplicand+1,f
  7902  0910  0B89               	decfsz	9,f
  7903  0911  290E               	goto	u2155
  7904  0912  3001               	movlw	1
  7905  0913                     u2165:	
  7906  0913  36F1               	lsrf	___wmul@multiplier+1,f
  7907  0914  0CF0               	rrf	___wmul@multiplier,f
  7908  0915  0B89               	decfsz	9,f
  7909  0916  2913               	goto	u2165
  7910  0917  0870               	movf	___wmul@multiplier,w
  7911  0918  0471               	iorwf	___wmul@multiplier+1,w
  7912  0919  1D03               	btfss	3,2
  7913  091A  2907               	goto	l2260
  7914  091B  0875               	movf	___wmul@product+1,w
  7915  091C  00F1               	movwf	?___wmul+1
  7916  091D  0874               	movf	___wmul@product,w
  7917  091E  00F0               	movwf	?___wmul
  7918  091F  0008               	return
  7919  0920                     __end_of___wmul:	
  7920                           
  7921                           	psect	text12
  7922  085F                     __ptext12:	
  7923 ;; *************** function ___lwtoft *****************
  7924 ;; Defined at:
  7925 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  c               2    8[COMMON] unsigned int 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;		None
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  3    8[COMMON] float 
  7932 ;; Registers used:
  7933 ;;		wreg, status,2, status,0, pclath, cstack
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7939 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7943 ;;Total ram usage:        4 bytes
  7944 ;; Hardware stack levels used:    1
  7945 ;; Hardware stack levels required when called:    1
  7946 ;; This function calls:
  7947 ;;		___ftpack
  7948 ;; This function is called by:
  7949 ;;		_main
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           
  7954                           ;psect for function ___lwtoft
  7955  085F                     ___lwtoft:	
  7956                           
  7957                           ;incstack = 0
  7958                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7959  085F  0878               	movf	___lwtoft@c,w
  7960  0860  00F0               	movwf	___ftpack@arg
  7961  0861  0879               	movf	___lwtoft@c+1,w
  7962  0862  00F1               	movwf	___ftpack@arg+1
  7963  0863  01F2               	clrf	___ftpack@arg+2
  7964  0864  308E               	movlw	142
  7965  0865  00FB               	movwf	??___lwtoft
  7966  0866  087B               	movf	??___lwtoft,w
  7967  0867  00F3               	movwf	___ftpack@exp
  7968  0868  01F4               	clrf	___ftpack@sign
  7969  0869  318C  241F         	fcall	___ftpack
  7970  086B  0870               	movf	?___ftpack,w
  7971  086C  00F8               	movwf	?___lwtoft
  7972  086D  0871               	movf	?___ftpack+1,w
  7973  086E  00F9               	movwf	?___lwtoft+1
  7974  086F  0872               	movf	?___ftpack+2,w
  7975  0870  00FA               	movwf	?___lwtoft+2
  7976  0871  0008               	return
  7977  0872                     __end_of___lwtoft:	
  7978                           
  7979                           	psect	text13
  7980  0A06                     __ptext13:	
  7981 ;; *************** function ___lwdiv *****************
  7982 ;; Defined at:
  7983 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;  divisor         2    6[COMMON] unsigned int 
  7986 ;;  dividend        2    8[COMMON] unsigned int 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  quotient        2   11[COMMON] unsigned int 
  7989 ;;  counter         1   13[COMMON] unsigned char 
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  2    6[COMMON] unsigned int 
  7992 ;; Registers used:
  7993 ;;		wreg, status,2, status,0
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;Total ram usage:        8 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; This function calls:
  8006 ;;		Nothing
  8007 ;; This function is called by:
  8008 ;;		_main
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           
  8013                           ;psect for function ___lwdiv
  8014  0A06                     ___lwdiv:	
  8015                           
  8016                           ;incstack = 0
  8017                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8018  0A06  01FB               	clrf	___lwdiv@quotient
  8019  0A07  01FC               	clrf	___lwdiv@quotient+1
  8020  0A08  0876               	movf	___lwdiv@divisor,w
  8021  0A09  0477               	iorwf	___lwdiv@divisor+1,w
  8022  0A0A  1903               	btfsc	3,2
  8023  0A0B  2A35               	goto	l3002
  8024  0A0C  01FD               	clrf	___lwdiv@counter
  8025  0A0D  0AFD               	incf	___lwdiv@counter,f
  8026  0A0E                     l2990:	
  8027  0A0E  1BF7               	btfsc	___lwdiv@divisor+1,7
  8028  0A0F  2A1A               	goto	l2992
  8029  0A10  3001               	movlw	1
  8030  0A11                     u3155:	
  8031  0A11  35F6               	lslf	___lwdiv@divisor,f
  8032  0A12  0DF7               	rlf	___lwdiv@divisor+1,f
  8033  0A13  0B89               	decfsz	9,f
  8034  0A14  2A11               	goto	u3155
  8035  0A15  3001               	movlw	1
  8036  0A16  00FA               	movwf	??___lwdiv
  8037  0A17  087A               	movf	??___lwdiv,w
  8038  0A18  07FD               	addwf	___lwdiv@counter,f
  8039  0A19  2A0E               	goto	l2990
  8040  0A1A                     l2992:	
  8041  0A1A  3001               	movlw	1
  8042  0A1B                     u3175:	
  8043  0A1B  35FB               	lslf	___lwdiv@quotient,f
  8044  0A1C  0DFC               	rlf	___lwdiv@quotient+1,f
  8045  0A1D  0B89               	decfsz	9,f
  8046  0A1E  2A1B               	goto	u3175
  8047  0A1F  0877               	movf	___lwdiv@divisor+1,w
  8048  0A20  0279               	subwf	___lwdiv@dividend+1,w
  8049  0A21  1D03               	skipz
  8050  0A22  2A25               	goto	u3185
  8051  0A23  0876               	movf	___lwdiv@divisor,w
  8052  0A24  0278               	subwf	___lwdiv@dividend,w
  8053  0A25                     u3185:	
  8054  0A25  1C03               	skipc
  8055  0A26  2A2C               	goto	l2998
  8056  0A27  0876               	movf	___lwdiv@divisor,w
  8057  0A28  02F8               	subwf	___lwdiv@dividend,f
  8058  0A29  0877               	movf	___lwdiv@divisor+1,w
  8059  0A2A  3BF9               	subwfb	___lwdiv@dividend+1,f
  8060  0A2B  147B               	bsf	___lwdiv@quotient,0
  8061  0A2C                     l2998:	
  8062  0A2C  3001               	movlw	1
  8063  0A2D                     u3195:	
  8064  0A2D  36F7               	lsrf	___lwdiv@divisor+1,f
  8065  0A2E  0CF6               	rrf	___lwdiv@divisor,f
  8066  0A2F  0B89               	decfsz	9,f
  8067  0A30  2A2D               	goto	u3195
  8068  0A31  3001               	movlw	1
  8069  0A32  02FD               	subwf	___lwdiv@counter,f
  8070  0A33  1D03               	btfss	3,2
  8071  0A34  2A1A               	goto	l2992
  8072  0A35                     l3002:	
  8073  0A35  087C               	movf	___lwdiv@quotient+1,w
  8074  0A36  00F7               	movwf	?___lwdiv+1
  8075  0A37  087B               	movf	___lwdiv@quotient,w
  8076  0A38  00F6               	movwf	?___lwdiv
  8077  0A39  0008               	return
  8078  0A3A                     __end_of___lwdiv:	
  8079                           
  8080                           	psect	text14
  8081  08D1                     __ptext14:	
  8082 ;; *************** function ___lbtoft *****************
  8083 ;; Defined at:
  8084 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbtoft.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  c               1    wreg     unsigned char 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  c               1   11[COMMON] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  3    8[COMMON] float 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0, pclath, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8098 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;Total ram usage:        8 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    1
  8105 ;; This function calls:
  8106 ;;		___ftpack
  8107 ;; This function is called by:
  8108 ;;		_main
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           
  8113                           ;psect for function ___lbtoft
  8114  08D1                     ___lbtoft:	
  8115                           
  8116                           ;incstack = 0
  8117                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8118                           ;___lbtoft@c stored from wreg
  8119  08D1  00FB               	movwf	___lbtoft@c
  8120  08D2  087B               	movf	___lbtoft@c,w
  8121  08D3  0020               	movlb	0	; select bank0
  8122  08D4  00A0               	movwf	??___lbtoft
  8123  08D5  01A1               	clrf	??___lbtoft+1
  8124  08D6  01A2               	clrf	??___lbtoft+2
  8125  08D7  0820               	movf	??___lbtoft,w
  8126  08D8  00F0               	movwf	___ftpack@arg
  8127  08D9  0821               	movf	??___lbtoft+1,w
  8128  08DA  00F1               	movwf	___ftpack@arg+1
  8129  08DB  0822               	movf	??___lbtoft+2,w
  8130  08DC  00F2               	movwf	___ftpack@arg+2
  8131  08DD  308E               	movlw	142
  8132  08DE  00A3               	movwf	??___lbtoft+3
  8133  08DF  0823               	movf	??___lbtoft+3,w
  8134  08E0  00F3               	movwf	___ftpack@exp
  8135  08E1  01F4               	clrf	___ftpack@sign
  8136  08E2  318C  241F         	fcall	___ftpack
  8137  08E4  0870               	movf	?___ftpack,w
  8138  08E5  00F8               	movwf	?___lbtoft
  8139  08E6  0871               	movf	?___ftpack+1,w
  8140  08E7  00F9               	movwf	?___lbtoft+1
  8141  08E8  0872               	movf	?___ftpack+2,w
  8142  08E9  00FA               	movwf	?___lbtoft+2
  8143  08EA  0008               	return
  8144  08EB                     __end_of___lbtoft:	
  8145                           
  8146                           	psect	text15
  8147  0D6C                     __ptext15:	
  8148 ;; *************** function ___fttol *****************
  8149 ;; Defined at:
  8150 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  f1              3   61[BANK0 ] float 
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  lval            4   70[BANK0 ] unsigned long 
  8155 ;;  exp1            1   74[BANK0 ] unsigned char 
  8156 ;;  sign1           1   69[BANK0 ] unsigned char 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  4   61[BANK0 ] long 
  8159 ;; Registers used:
  8160 ;;		wreg, status,2, status,0
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;Total ram usage:       14 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_main
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           
  8180                           ;psect for function ___fttol
  8181  0D6C                     ___fttol:	
  8182                           
  8183                           ;incstack = 0
  8184                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8185  0D6C  0020               	movlb	0	; select bank0
  8186  0D6D  085D               	movf	___fttol@f1,w
  8187  0D6E  00E1               	movwf	??___fttol
  8188  0D6F  085E               	movf	___fttol@f1+1,w
  8189  0D70  00E2               	movwf	??___fttol+1
  8190  0D71  085F               	movf	___fttol@f1+2,w
  8191  0D72  00E3               	movwf	??___fttol+2
  8192  0D73  1003               	clrc
  8193  0D74  0D62               	rlf	??___fttol+1,w
  8194  0D75  0D63               	rlf	??___fttol+2,w
  8195  0D76  00E4               	movwf	??___fttol+3
  8196  0D77  0864               	movf	??___fttol+3,w
  8197  0D78  00EA               	movwf	___fttol@exp1
  8198  0D79  086A               	movf	___fttol@exp1,w
  8199  0D7A  1D03               	btfss	3,2
  8200  0D7B  2D85               	goto	l2940
  8201  0D7C  3000               	movlw	0
  8202  0D7D  00E0               	movwf	?___fttol+3
  8203  0D7E  3000               	movlw	0
  8204  0D7F  00DF               	movwf	?___fttol+2
  8205  0D80  3000               	movlw	0
  8206  0D81  00DE               	movwf	?___fttol+1
  8207  0D82  3000               	movlw	0
  8208  0D83  00DD               	movwf	?___fttol
  8209  0D84  0008               	return
  8210  0D85                     l2940:	
  8211  0D85  085D               	movf	___fttol@f1,w
  8212  0D86  00E1               	movwf	??___fttol
  8213  0D87  085E               	movf	___fttol@f1+1,w
  8214  0D88  00E2               	movwf	??___fttol+1
  8215  0D89  085F               	movf	___fttol@f1+2,w
  8216  0D8A  00E3               	movwf	??___fttol+2
  8217  0D8B  3017               	movlw	23
  8218  0D8C                     u3055:	
  8219  0D8C  36E3               	lsrf	??___fttol+2,f
  8220  0D8D  0CE2               	rrf	??___fttol+1,f
  8221  0D8E  0CE1               	rrf	??___fttol,f
  8222  0D8F  0B89               	decfsz	9,f
  8223  0D90  2D8C               	goto	u3055
  8224  0D91  0861               	movf	??___fttol,w
  8225  0D92  00E4               	movwf	??___fttol+3
  8226  0D93  0864               	movf	??___fttol+3,w
  8227  0D94  00E5               	movwf	___fttol@sign1
  8228  0D95  17DE               	bsf	___fttol@f1+1,7
  8229  0D96  30FF               	movlw	255
  8230  0D97  05DD               	andwf	___fttol@f1,f
  8231  0D98  30FF               	movlw	255
  8232  0D99  05DE               	andwf	___fttol@f1+1,f
  8233  0D9A  3000               	movlw	0
  8234  0D9B  05DF               	andwf	___fttol@f1+2,f
  8235  0D9C  085D               	movf	___fttol@f1,w
  8236  0D9D  00E6               	movwf	___fttol@lval
  8237  0D9E  085E               	movf	___fttol@f1+1,w
  8238  0D9F  00E7               	movwf	___fttol@lval+1
  8239  0DA0  085F               	movf	___fttol@f1+2,w
  8240  0DA1  00E8               	movwf	___fttol@lval+2
  8241  0DA2  01E9               	clrf	___fttol@lval+3
  8242  0DA3  308E               	movlw	142
  8243  0DA4  02EA               	subwf	___fttol@exp1,f
  8244  0DA5  1FEA               	btfss	___fttol@exp1,7
  8245  0DA6  2DC3               	goto	l2960
  8246  0DA7  086A               	movf	___fttol@exp1,w
  8247  0DA8  3A80               	xorlw	128
  8248  0DA9  3E8F               	addlw	143
  8249  0DAA  1803               	skipnc
  8250  0DAB  2DB5               	goto	l2958
  8251  0DAC  3000               	movlw	0
  8252  0DAD  00E0               	movwf	?___fttol+3
  8253  0DAE  3000               	movlw	0
  8254  0DAF  00DF               	movwf	?___fttol+2
  8255  0DB0  3000               	movlw	0
  8256  0DB1  00DE               	movwf	?___fttol+1
  8257  0DB2  3000               	movlw	0
  8258  0DB3  00DD               	movwf	?___fttol
  8259  0DB4  0008               	return
  8260  0DB5                     l2958:	
  8261  0DB5  3001               	movlw	1
  8262  0DB6                     u3085:	
  8263  0DB6  36E9               	lsrf	___fttol@lval+3,f
  8264  0DB7  0CE8               	rrf	___fttol@lval+2,f
  8265  0DB8  0CE7               	rrf	___fttol@lval+1,f
  8266  0DB9  0CE6               	rrf	___fttol@lval,f
  8267  0DBA  0B89               	decfsz	9,f
  8268  0DBB  2DB6               	goto	u3085
  8269  0DBC  3001               	movlw	1
  8270  0DBD  00E1               	movwf	??___fttol
  8271  0DBE  0861               	movf	??___fttol,w
  8272  0DBF  07EA               	addwf	___fttol@exp1,f
  8273  0DC0  1903               	btfsc	3,2
  8274  0DC1  2DDC               	goto	l2968
  8275  0DC2  2DB5               	goto	l2958
  8276  0DC3                     l2960:	
  8277  0DC3  3018               	movlw	24
  8278  0DC4  026A               	subwf	___fttol@exp1,w
  8279  0DC5  1C03               	skipc
  8280  0DC6  2DD9               	goto	l730
  8281  0DC7  3000               	movlw	0
  8282  0DC8  00E0               	movwf	?___fttol+3
  8283  0DC9  3000               	movlw	0
  8284  0DCA  00DF               	movwf	?___fttol+2
  8285  0DCB  3000               	movlw	0
  8286  0DCC  00DE               	movwf	?___fttol+1
  8287  0DCD  3000               	movlw	0
  8288  0DCE  00DD               	movwf	?___fttol
  8289  0DCF  0008               	return
  8290  0DD0                     l2966:	
  8291  0DD0  3001               	movlw	1
  8292  0DD1                     u3115:	
  8293  0DD1  35E6               	lslf	___fttol@lval,f
  8294  0DD2  0DE7               	rlf	___fttol@lval+1,f
  8295  0DD3  0DE8               	rlf	___fttol@lval+2,f
  8296  0DD4  0DE9               	rlf	___fttol@lval+3,f
  8297  0DD5  0B89               	decfsz	9,f
  8298  0DD6  2DD1               	goto	u3115
  8299  0DD7  3001               	movlw	1
  8300  0DD8  02EA               	subwf	___fttol@exp1,f
  8301  0DD9                     l730:	
  8302  0DD9  086A               	movf	___fttol@exp1,w
  8303  0DDA  1D03               	btfss	3,2
  8304  0DDB  2DD0               	goto	l2966
  8305  0DDC                     l2968:	
  8306  0DDC  0865               	movf	___fttol@sign1,w
  8307  0DDD  1903               	btfsc	3,2
  8308  0DDE  2DEA               	goto	l2972
  8309  0DDF  09E6               	comf	___fttol@lval,f
  8310  0DE0  09E7               	comf	___fttol@lval+1,f
  8311  0DE1  09E8               	comf	___fttol@lval+2,f
  8312  0DE2  09E9               	comf	___fttol@lval+3,f
  8313  0DE3  0AE6               	incf	___fttol@lval,f
  8314  0DE4  1903               	skipnz
  8315  0DE5  0AE7               	incf	___fttol@lval+1,f
  8316  0DE6  1903               	skipnz
  8317  0DE7  0AE8               	incf	___fttol@lval+2,f
  8318  0DE8  1903               	skipnz
  8319  0DE9  0AE9               	incf	___fttol@lval+3,f
  8320  0DEA                     l2972:	
  8321  0DEA  0869               	movf	___fttol@lval+3,w
  8322  0DEB  00E0               	movwf	?___fttol+3
  8323  0DEC  0868               	movf	___fttol@lval+2,w
  8324  0DED  00DF               	movwf	?___fttol+2
  8325  0DEE  0867               	movf	___fttol@lval+1,w
  8326  0DEF  00DE               	movwf	?___fttol+1
  8327  0DF0  0866               	movf	___fttol@lval,w
  8328  0DF1  00DD               	movwf	?___fttol
  8329  0DF2  0008               	return
  8330  0DF3                     __end_of___fttol:	
  8331                           
  8332                           	psect	text16
  8333  0920                     __ptext16:	
  8334 ;; *************** function ___ftsub *****************
  8335 ;; Defined at:
  8336 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  f2              3   29[BANK0 ] float 
  8339 ;;  f1              3   32[BANK0 ] float 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;		None
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  3   29[BANK0 ] float 
  8344 ;; Registers used:
  8345 ;;		wreg, status,2, status,0, pclath, cstack
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8351 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;Total ram usage:        6 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; Hardware stack levels required when called:    2
  8358 ;; This function calls:
  8359 ;;		___ftadd
  8360 ;; This function is called by:
  8361 ;;		_main
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           
  8366                           ;psect for function ___ftsub
  8367  0920                     ___ftsub:	
  8368                           
  8369                           ;incstack = 0
  8370                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8371  0920  0020               	movlb	0	; select bank0
  8372  0921  083F               	movf	___ftsub@f2+2,w
  8373  0922  043E               	iorwf	___ftsub@f2+1,w
  8374  0923  043D               	iorwf	___ftsub@f2,w
  8375  0924  1903               	skipnz
  8376  0925  2928               	goto	l2930
  8377  0926  3080               	movlw	128
  8378  0927  06BF               	xorwf	___ftsub@f2+2,f
  8379  0928                     l2930:	
  8380  0928  0840               	movf	___ftsub@f1,w
  8381  0929  00B0               	movwf	___ftadd@f1
  8382  092A  0841               	movf	___ftsub@f1+1,w
  8383  092B  00B1               	movwf	___ftadd@f1+1
  8384  092C  0842               	movf	___ftsub@f1+2,w
  8385  092D  00B2               	movwf	___ftadd@f1+2
  8386  092E  083D               	movf	___ftsub@f2,w
  8387  092F  00B3               	movwf	___ftadd@f2
  8388  0930  083E               	movf	___ftsub@f2+1,w
  8389  0931  00B4               	movwf	___ftadd@f2+1
  8390  0932  083F               	movf	___ftsub@f2+2,w
  8391  0933  00B5               	movwf	___ftadd@f2+2
  8392  0934  3182  220B         	fcall	___ftadd
  8393  0936  0020               	movlb	0	; select bank0
  8394  0937  0830               	movf	?___ftadd,w
  8395  0938  00BD               	movwf	?___ftsub
  8396  0939  0831               	movf	?___ftadd+1,w
  8397  093A  00BE               	movwf	?___ftsub+1
  8398  093B  0832               	movf	?___ftadd+2,w
  8399  093C  00BF               	movwf	?___ftsub+2
  8400  093D  0008               	return
  8401  093E                     __end_of___ftsub:	
  8402                           
  8403                           	psect	text17
  8404  0DF3                     __ptext17:	
  8405 ;; *************** function ___ftdiv *****************
  8406 ;; Defined at:
  8407 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  f2              3    0[BANK0 ] float 
  8410 ;;  f1              3    3[BANK0 ] float 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  f3              3   11[BANK0 ] float 
  8413 ;;  sign            1   15[BANK0 ] unsigned char 
  8414 ;;  exp             1   14[BANK0 ] unsigned char 
  8415 ;;  cntr            1   10[BANK0 ] unsigned char 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  3    0[BANK0 ] float 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0, pclath, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8425 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;Total ram usage:       16 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    1
  8432 ;; This function calls:
  8433 ;;		___ftpack
  8434 ;; This function is called by:
  8435 ;;		_main
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           
  8440                           ;psect for function ___ftdiv
  8441  0DF3                     ___ftdiv:	
  8442                           
  8443                           ;incstack = 0
  8444                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8445  0DF3  0020               	movlb	0	; select bank0
  8446  0DF4  0823               	movf	___ftdiv@f1,w
  8447  0DF5  00A6               	movwf	??___ftdiv
  8448  0DF6  0824               	movf	___ftdiv@f1+1,w
  8449  0DF7  00A7               	movwf	??___ftdiv+1
  8450  0DF8  0825               	movf	___ftdiv@f1+2,w
  8451  0DF9  00A8               	movwf	??___ftdiv+2
  8452  0DFA  1003               	clrc
  8453  0DFB  0D27               	rlf	??___ftdiv+1,w
  8454  0DFC  0D28               	rlf	??___ftdiv+2,w
  8455  0DFD  00A9               	movwf	??___ftdiv+3
  8456  0DFE  0829               	movf	??___ftdiv+3,w
  8457  0DFF  00AE               	movwf	___ftdiv@exp
  8458  0E00  082E               	movf	___ftdiv@exp,w
  8459  0E01  1D03               	btfss	3,2
  8460  0E02  2E0A               	goto	l2890
  8461  0E03  3000               	movlw	0
  8462  0E04  00A0               	movwf	?___ftdiv
  8463  0E05  3000               	movlw	0
  8464  0E06  00A1               	movwf	?___ftdiv+1
  8465  0E07  3000               	movlw	0
  8466  0E08  00A2               	movwf	?___ftdiv+2
  8467  0E09  0008               	return
  8468  0E0A                     l2890:	
  8469  0E0A  0820               	movf	___ftdiv@f2,w
  8470  0E0B  00A6               	movwf	??___ftdiv
  8471  0E0C  0821               	movf	___ftdiv@f2+1,w
  8472  0E0D  00A7               	movwf	??___ftdiv+1
  8473  0E0E  0822               	movf	___ftdiv@f2+2,w
  8474  0E0F  00A8               	movwf	??___ftdiv+2
  8475  0E10  1003               	clrc
  8476  0E11  0D27               	rlf	??___ftdiv+1,w
  8477  0E12  0D28               	rlf	??___ftdiv+2,w
  8478  0E13  00A9               	movwf	??___ftdiv+3
  8479  0E14  0829               	movf	??___ftdiv+3,w
  8480  0E15  00AF               	movwf	___ftdiv@sign
  8481  0E16  082F               	movf	___ftdiv@sign,w
  8482  0E17  1D03               	btfss	3,2
  8483  0E18  2E20               	goto	l2896
  8484  0E19  3000               	movlw	0
  8485  0E1A  00A0               	movwf	?___ftdiv
  8486  0E1B  3000               	movlw	0
  8487  0E1C  00A1               	movwf	?___ftdiv+1
  8488  0E1D  3000               	movlw	0
  8489  0E1E  00A2               	movwf	?___ftdiv+2
  8490  0E1F  0008               	return
  8491  0E20                     l2896:	
  8492  0E20  3000               	movlw	0
  8493  0E21  00AB               	movwf	___ftdiv@f3
  8494  0E22  3000               	movlw	0
  8495  0E23  00AC               	movwf	___ftdiv@f3+1
  8496  0E24  3000               	movlw	0
  8497  0E25  00AD               	movwf	___ftdiv@f3+2
  8498  0E26  3089               	movlw	137
  8499  0E27  072F               	addwf	___ftdiv@sign,w
  8500  0E28  00A6               	movwf	??___ftdiv
  8501  0E29  0826               	movf	??___ftdiv,w
  8502  0E2A  02AE               	subwf	___ftdiv@exp,f
  8503  0E2B  0823               	movf	___ftdiv@f1,w
  8504  0E2C  00A6               	movwf	??___ftdiv
  8505  0E2D  0824               	movf	___ftdiv@f1+1,w
  8506  0E2E  00A7               	movwf	??___ftdiv+1
  8507  0E2F  0825               	movf	___ftdiv@f1+2,w
  8508  0E30  00A8               	movwf	??___ftdiv+2
  8509  0E31  3010               	movlw	16
  8510  0E32                     u2975:	
  8511  0E32  36A8               	lsrf	??___ftdiv+2,f
  8512  0E33  0CA7               	rrf	??___ftdiv+1,f
  8513  0E34  0CA6               	rrf	??___ftdiv,f
  8514  0E35  0B89               	decfsz	9,f
  8515  0E36  2E32               	goto	u2975
  8516  0E37  0826               	movf	??___ftdiv,w
  8517  0E38  00A9               	movwf	??___ftdiv+3
  8518  0E39  0829               	movf	??___ftdiv+3,w
  8519  0E3A  00AF               	movwf	___ftdiv@sign
  8520  0E3B  0820               	movf	___ftdiv@f2,w
  8521  0E3C  00A6               	movwf	??___ftdiv
  8522  0E3D  0821               	movf	___ftdiv@f2+1,w
  8523  0E3E  00A7               	movwf	??___ftdiv+1
  8524  0E3F  0822               	movf	___ftdiv@f2+2,w
  8525  0E40  00A8               	movwf	??___ftdiv+2
  8526  0E41  3010               	movlw	16
  8527  0E42                     u2985:	
  8528  0E42  36A8               	lsrf	??___ftdiv+2,f
  8529  0E43  0CA7               	rrf	??___ftdiv+1,f
  8530  0E44  0CA6               	rrf	??___ftdiv,f
  8531  0E45  0B89               	decfsz	9,f
  8532  0E46  2E42               	goto	u2985
  8533  0E47  0826               	movf	??___ftdiv,w
  8534  0E48  00A9               	movwf	??___ftdiv+3
  8535  0E49  0829               	movf	??___ftdiv+3,w
  8536  0E4A  06AF               	xorwf	___ftdiv@sign,f
  8537  0E4B  3080               	movlw	128
  8538  0E4C  00A6               	movwf	??___ftdiv
  8539  0E4D  0826               	movf	??___ftdiv,w
  8540  0E4E  05AF               	andwf	___ftdiv@sign,f
  8541  0E4F  17A4               	bsf	___ftdiv@f1+1,7
  8542  0E50  30FF               	movlw	255
  8543  0E51  05A3               	andwf	___ftdiv@f1,f
  8544  0E52  30FF               	movlw	255
  8545  0E53  05A4               	andwf	___ftdiv@f1+1,f
  8546  0E54  3000               	movlw	0
  8547  0E55  05A5               	andwf	___ftdiv@f1+2,f
  8548  0E56  17A1               	bsf	___ftdiv@f2+1,7
  8549  0E57  30FF               	movlw	255
  8550  0E58  05A0               	andwf	___ftdiv@f2,f
  8551  0E59  30FF               	movlw	255
  8552  0E5A  05A1               	andwf	___ftdiv@f2+1,f
  8553  0E5B  3000               	movlw	0
  8554  0E5C  05A2               	andwf	___ftdiv@f2+2,f
  8555  0E5D  3018               	movlw	24
  8556  0E5E  00A6               	movwf	??___ftdiv
  8557  0E5F  0826               	movf	??___ftdiv,w
  8558  0E60  00AA               	movwf	___ftdiv@cntr
  8559  0E61                     l2910:	
  8560  0E61  3001               	movlw	1
  8561  0E62                     u2995:	
  8562  0E62  35AB               	lslf	___ftdiv@f3,f
  8563  0E63  0DAC               	rlf	___ftdiv@f3+1,f
  8564  0E64  0DAD               	rlf	___ftdiv@f3+2,f
  8565  0E65  0B89               	decfsz	9,f
  8566  0E66  2E62               	goto	u2995
  8567  0E67  0822               	movf	___ftdiv@f2+2,w
  8568  0E68  0225               	subwf	___ftdiv@f1+2,w
  8569  0E69  1D03               	skipz
  8570  0E6A  2E71               	goto	u3005
  8571  0E6B  0821               	movf	___ftdiv@f2+1,w
  8572  0E6C  0224               	subwf	___ftdiv@f1+1,w
  8573  0E6D  1D03               	skipz
  8574  0E6E  2E71               	goto	u3005
  8575  0E6F  0820               	movf	___ftdiv@f2,w
  8576  0E70  0223               	subwf	___ftdiv@f1,w
  8577  0E71                     u3005:	
  8578  0E71  1C03               	skipc
  8579  0E72  2E7A               	goto	l2918
  8580  0E73  0820               	movf	___ftdiv@f2,w
  8581  0E74  02A3               	subwf	___ftdiv@f1,f
  8582  0E75  0821               	movf	___ftdiv@f2+1,w
  8583  0E76  3BA4               	subwfb	___ftdiv@f1+1,f
  8584  0E77  0822               	movf	___ftdiv@f2+2,w
  8585  0E78  3BA5               	subwfb	___ftdiv@f1+2,f
  8586  0E79  142B               	bsf	___ftdiv@f3,0
  8587  0E7A                     l2918:	
  8588  0E7A  3001               	movlw	1
  8589  0E7B                     u3015:	
  8590  0E7B  35A3               	lslf	___ftdiv@f1,f
  8591  0E7C  0DA4               	rlf	___ftdiv@f1+1,f
  8592  0E7D  0DA5               	rlf	___ftdiv@f1+2,f
  8593  0E7E  0B89               	decfsz	9,f
  8594  0E7F  2E7B               	goto	u3015
  8595  0E80  3001               	movlw	1
  8596  0E81  02AA               	subwf	___ftdiv@cntr,f
  8597  0E82  1D03               	btfss	3,2
  8598  0E83  2E61               	goto	l2910
  8599  0E84  082B               	movf	___ftdiv@f3,w
  8600  0E85  00F0               	movwf	___ftpack@arg
  8601  0E86  082C               	movf	___ftdiv@f3+1,w
  8602  0E87  00F1               	movwf	___ftpack@arg+1
  8603  0E88  082D               	movf	___ftdiv@f3+2,w
  8604  0E89  00F2               	movwf	___ftpack@arg+2
  8605  0E8A  082E               	movf	___ftdiv@exp,w
  8606  0E8B  00A6               	movwf	??___ftdiv
  8607  0E8C  0826               	movf	??___ftdiv,w
  8608  0E8D  00F3               	movwf	___ftpack@exp
  8609  0E8E  082F               	movf	___ftdiv@sign,w
  8610  0E8F  00A7               	movwf	??___ftdiv+1
  8611  0E90  0827               	movf	??___ftdiv+1,w
  8612  0E91  00F4               	movwf	___ftpack@sign
  8613  0E92  318C  241F         	fcall	___ftpack
  8614  0E94  0870               	movf	?___ftpack,w
  8615  0E95  0020               	movlb	0	; select bank0
  8616  0E96  00A0               	movwf	?___ftdiv
  8617  0E97  0871               	movf	?___ftpack+1,w
  8618  0E98  00A1               	movwf	?___ftdiv+1
  8619  0E99  0872               	movf	?___ftpack+2,w
  8620  0E9A  00A2               	movwf	?___ftdiv+2
  8621  0E9B  0008               	return
  8622  0E9C                     __end_of___ftdiv:	
  8623                           
  8624                           	psect	text18
  8625  0CEA                     __ptext18:	
  8626 ;; *************** function ___aldiv *****************
  8627 ;; Defined at:
  8628 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  divisor         4    0[COMMON] long 
  8631 ;;  dividend        4    4[COMMON] long 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;  quotient        4    2[BANK0 ] long 
  8634 ;;  sign            1    1[BANK0 ] unsigned char 
  8635 ;;  counter         1    0[BANK0 ] unsigned char 
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  4    0[COMMON] long 
  8638 ;; Registers used:
  8639 ;;		wreg, status,2, status,0
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8645 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8646 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;Total ram usage:       15 bytes
  8650 ;; Hardware stack levels used:    1
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_main
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           
  8659                           ;psect for function ___aldiv
  8660  0CEA                     ___aldiv:	
  8661                           
  8662                           ;incstack = 0
  8663                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8664  0CEA  0020               	movlb	0	; select bank0
  8665  0CEB  01A1               	clrf	___aldiv@sign
  8666  0CEC  1FF3               	btfss	___aldiv@divisor+3,7
  8667  0CED  2CFB               	goto	l533
  8668  0CEE  09F0               	comf	___aldiv@divisor,f
  8669  0CEF  09F1               	comf	___aldiv@divisor+1,f
  8670  0CF0  09F2               	comf	___aldiv@divisor+2,f
  8671  0CF1  09F3               	comf	___aldiv@divisor+3,f
  8672  0CF2  0AF0               	incf	___aldiv@divisor,f
  8673  0CF3  1903               	skipnz
  8674  0CF4  0AF1               	incf	___aldiv@divisor+1,f
  8675  0CF5  1903               	skipnz
  8676  0CF6  0AF2               	incf	___aldiv@divisor+2,f
  8677  0CF7  1903               	skipnz
  8678  0CF8  0AF3               	incf	___aldiv@divisor+3,f
  8679  0CF9  01A1               	clrf	___aldiv@sign
  8680  0CFA  0AA1               	incf	___aldiv@sign,f
  8681  0CFB                     l533:	
  8682  0CFB  1FF7               	btfss	___aldiv@dividend+3,7
  8683  0CFC  2D0C               	goto	l2854
  8684  0CFD  09F4               	comf	___aldiv@dividend,f
  8685  0CFE  09F5               	comf	___aldiv@dividend+1,f
  8686  0CFF  09F6               	comf	___aldiv@dividend+2,f
  8687  0D00  09F7               	comf	___aldiv@dividend+3,f
  8688  0D01  0AF4               	incf	___aldiv@dividend,f
  8689  0D02  1903               	skipnz
  8690  0D03  0AF5               	incf	___aldiv@dividend+1,f
  8691  0D04  1903               	skipnz
  8692  0D05  0AF6               	incf	___aldiv@dividend+2,f
  8693  0D06  1903               	skipnz
  8694  0D07  0AF7               	incf	___aldiv@dividend+3,f
  8695  0D08  3001               	movlw	1
  8696  0D09  00F8               	movwf	??___aldiv
  8697  0D0A  0878               	movf	??___aldiv,w
  8698  0D0B  06A1               	xorwf	___aldiv@sign,f
  8699  0D0C                     l2854:	
  8700  0D0C  3000               	movlw	0
  8701  0D0D  00A5               	movwf	___aldiv@quotient+3
  8702  0D0E  3000               	movlw	0
  8703  0D0F  00A4               	movwf	___aldiv@quotient+2
  8704  0D10  3000               	movlw	0
  8705  0D11  00A3               	movwf	___aldiv@quotient+1
  8706  0D12  3000               	movlw	0
  8707  0D13  00A2               	movwf	___aldiv@quotient
  8708  0D14  0873               	movf	___aldiv@divisor+3,w
  8709  0D15  0472               	iorwf	___aldiv@divisor+2,w
  8710  0D16  0471               	iorwf	___aldiv@divisor+1,w
  8711  0D17  0470               	iorwf	___aldiv@divisor,w
  8712  0D18  1903               	skipnz
  8713  0D19  2D55               	goto	l2876
  8714  0D1A  01A0               	clrf	___aldiv@counter
  8715  0D1B  0AA0               	incf	___aldiv@counter,f
  8716  0D1C                     l2862:	
  8717  0D1C  1BF3               	btfsc	___aldiv@divisor+3,7
  8718  0D1D  2D2A               	goto	l2864
  8719  0D1E  3001               	movlw	1
  8720  0D1F                     u2885:	
  8721  0D1F  35F0               	lslf	___aldiv@divisor,f
  8722  0D20  0DF1               	rlf	___aldiv@divisor+1,f
  8723  0D21  0DF2               	rlf	___aldiv@divisor+2,f
  8724  0D22  0DF3               	rlf	___aldiv@divisor+3,f
  8725  0D23  0B89               	decfsz	9,f
  8726  0D24  2D1F               	goto	u2885
  8727  0D25  3001               	movlw	1
  8728  0D26  00F8               	movwf	??___aldiv
  8729  0D27  0878               	movf	??___aldiv,w
  8730  0D28  07A0               	addwf	___aldiv@counter,f
  8731  0D29  2D1C               	goto	l2862
  8732  0D2A                     l2864:	
  8733  0D2A  3001               	movlw	1
  8734  0D2B                     u2905:	
  8735  0D2B  35A2               	lslf	___aldiv@quotient,f
  8736  0D2C  0DA3               	rlf	___aldiv@quotient+1,f
  8737  0D2D  0DA4               	rlf	___aldiv@quotient+2,f
  8738  0D2E  0DA5               	rlf	___aldiv@quotient+3,f
  8739  0D2F  0B89               	decfsz	9,f
  8740  0D30  2D2B               	goto	u2905
  8741  0D31  0873               	movf	___aldiv@divisor+3,w
  8742  0D32  0277               	subwf	___aldiv@dividend+3,w
  8743  0D33  1D03               	skipz
  8744  0D34  2D3F               	goto	u2915
  8745  0D35  0872               	movf	___aldiv@divisor+2,w
  8746  0D36  0276               	subwf	___aldiv@dividend+2,w
  8747  0D37  1D03               	skipz
  8748  0D38  2D3F               	goto	u2915
  8749  0D39  0871               	movf	___aldiv@divisor+1,w
  8750  0D3A  0275               	subwf	___aldiv@dividend+1,w
  8751  0D3B  1D03               	skipz
  8752  0D3C  2D3F               	goto	u2915
  8753  0D3D  0870               	movf	___aldiv@divisor,w
  8754  0D3E  0274               	subwf	___aldiv@dividend,w
  8755  0D3F                     u2915:	
  8756  0D3F  1C03               	skipc
  8757  0D40  2D4A               	goto	l2872
  8758  0D41  0870               	movf	___aldiv@divisor,w
  8759  0D42  02F4               	subwf	___aldiv@dividend,f
  8760  0D43  0871               	movf	___aldiv@divisor+1,w
  8761  0D44  3BF5               	subwfb	___aldiv@dividend+1,f
  8762  0D45  0872               	movf	___aldiv@divisor+2,w
  8763  0D46  3BF6               	subwfb	___aldiv@dividend+2,f
  8764  0D47  0873               	movf	___aldiv@divisor+3,w
  8765  0D48  3BF7               	subwfb	___aldiv@dividend+3,f
  8766  0D49  1422               	bsf	___aldiv@quotient,0
  8767  0D4A                     l2872:	
  8768  0D4A  3001               	movlw	1
  8769  0D4B                     u2925:	
  8770  0D4B  36F3               	lsrf	___aldiv@divisor+3,f
  8771  0D4C  0CF2               	rrf	___aldiv@divisor+2,f
  8772  0D4D  0CF1               	rrf	___aldiv@divisor+1,f
  8773  0D4E  0CF0               	rrf	___aldiv@divisor,f
  8774  0D4F  0B89               	decfsz	9,f
  8775  0D50  2D4B               	goto	u2925
  8776  0D51  3001               	movlw	1
  8777  0D52  02A0               	subwf	___aldiv@counter,f
  8778  0D53  1D03               	btfss	3,2
  8779  0D54  2D2A               	goto	l2864
  8780  0D55                     l2876:	
  8781  0D55  0821               	movf	___aldiv@sign,w
  8782  0D56  1903               	btfsc	3,2
  8783  0D57  2D63               	goto	l2880
  8784  0D58  09A2               	comf	___aldiv@quotient,f
  8785  0D59  09A3               	comf	___aldiv@quotient+1,f
  8786  0D5A  09A4               	comf	___aldiv@quotient+2,f
  8787  0D5B  09A5               	comf	___aldiv@quotient+3,f
  8788  0D5C  0AA2               	incf	___aldiv@quotient,f
  8789  0D5D  1903               	skipnz
  8790  0D5E  0AA3               	incf	___aldiv@quotient+1,f
  8791  0D5F  1903               	skipnz
  8792  0D60  0AA4               	incf	___aldiv@quotient+2,f
  8793  0D61  1903               	skipnz
  8794  0D62  0AA5               	incf	___aldiv@quotient+3,f
  8795  0D63                     l2880:	
  8796  0D63  0825               	movf	___aldiv@quotient+3,w
  8797  0D64  00F3               	movwf	?___aldiv+3
  8798  0D65  0824               	movf	___aldiv@quotient+2,w
  8799  0D66  00F2               	movwf	?___aldiv+2
  8800  0D67  0823               	movf	___aldiv@quotient+1,w
  8801  0D68  00F1               	movwf	?___aldiv+1
  8802  0D69  0822               	movf	___aldiv@quotient,w
  8803  0D6A  00F0               	movwf	?___aldiv
  8804  0D6B  0008               	return
  8805  0D6C                     __end_of___aldiv:	
  8806                           
  8807                           	psect	text19
  8808  0A3A                     __ptext19:	
  8809 ;; *************** function _SYSTEM_Initialize *****************
  8810 ;; Defined at:
  8811 ;;		line 37 in file "system.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;		None
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;		None
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  1    wreg      void 
  8818 ;; Registers used:
  8819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8829 ;;Total ram usage:        1 bytes
  8830 ;; Hardware stack levels used:    1
  8831 ;; Hardware stack levels required when called:    3
  8832 ;; This function calls:
  8833 ;;		_ADCC_Initialize
  8834 ;;		_InitCustomChars
  8835 ;;		_Init_PID
  8836 ;;		_LCD_Clear
  8837 ;;		_LCD_Init
  8838 ;;		_OSCILLATOR_Initialize
  8839 ;;		_PIN_MANAGER_Initialize
  8840 ;;		_PWM6_Initialize
  8841 ;;		_TMR0_Initialize
  8842 ;;		_TMR2_Initialize
  8843 ;; This function is called by:
  8844 ;;		_main
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           
  8849                           ;psect for function _SYSTEM_Initialize
  8850  0A3A                     _SYSTEM_Initialize:	
  8851                           
  8852                           ;system.c: 39: PIN_MANAGER_Initialize();
  8853                           
  8854                           ;incstack = 0
  8855                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8856  0A3A  3189  21D4  318A   	fcall	_PIN_MANAGER_Initialize
  8857                           
  8858                           ;system.c: 40: OSCILLATOR_Initialize();
  8859  0A3D  3188  2003  318A   	fcall	_OSCILLATOR_Initialize
  8860                           
  8861                           ;system.c: 41: FVRCON = 0x00;
  8862  0A40  0032               	movlb	18	; select bank18
  8863  0A41  018C               	clrf	12	;volatile
  8864                           
  8865                           ;system.c: 42: ADCC_Initialize();
  8866  0A42  3188  20B8  318A   	fcall	_ADCC_Initialize
  8867                           
  8868                           ;system.c: 43: PWM6_Initialize();
  8869  0A45  3188  2017  318A   	fcall	_PWM6_Initialize
  8870                           
  8871                           ;system.c: 44: TMR0_Initialize();
  8872  0A48  3188  2041  318A   	fcall	_TMR0_Initialize
  8873                           
  8874                           ;system.c: 45: TMR2_Initialize();
  8875  0A4B  3188  2050  318A   	fcall	_TMR2_Initialize
  8876                           
  8877                           ;system.c: 46: LCD_Init(0X00);
  8878  0A4E  3000               	movlw	0
  8879  0A4F  318C  2483  318A   	fcall	_LCD_Init
  8880                           
  8881                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  8882  0A52  3041               	movlw	65
  8883  0A53  00F7               	movwf	??_SYSTEM_Initialize
  8884  0A54  30EE               	movlw	238
  8885  0A55                     u3317:	
  8886  0A55  0B89               	decfsz	9,f
  8887  0A56  2A55               	goto	u3317
  8888  0A57  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8889  0A58  2A55               	goto	u3317
  8890  0A59  3200               	nop2
  8891                           
  8892                           ;system.c: 48: LCD_Clear();
  8893  0A5A  3197  27EC  318A   	fcall	_LCD_Clear
  8894                           
  8895                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  8896  0A5D  3021               	movlw	33
  8897  0A5E  00F7               	movwf	??_SYSTEM_Initialize
  8898  0A5F  3076               	movlw	118
  8899  0A60                     u3327:	
  8900  0A60  0B89               	decfsz	9,f
  8901  0A61  2A60               	goto	u3327
  8902  0A62  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8903  0A63  2A60               	goto	u3327
  8904  0A64  3200               	nop2
  8905                           
  8906                           ;system.c: 50: InitCustomChars();
  8907  0A65  3189  215E  318A   	fcall	_InitCustomChars
  8908                           
  8909                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  8910  0A68  3041               	movlw	65
  8911  0A69  00F7               	movwf	??_SYSTEM_Initialize
  8912  0A6A  30EE               	movlw	238
  8913  0A6B                     u3337:	
  8914  0A6B  0B89               	decfsz	9,f
  8915  0A6C  2A6B               	goto	u3337
  8916  0A6D  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8917  0A6E  2A6B               	goto	u3337
  8918  0A6F  3200               	nop2
  8919                           
  8920                           ;system.c: 52: Init_PID();
  8921  0A70  3189  2184         	fcall	_Init_PID
  8922  0A72  0008               	return
  8923  0A73                     __end_of_SYSTEM_Initialize:	
  8924                           
  8925                           	psect	text20
  8926  0850                     __ptext20:	
  8927 ;; *************** function _TMR2_Initialize *****************
  8928 ;; Defined at:
  8929 ;;		line 15 in file "timers.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;		None
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  1    wreg      void 
  8936 ;; Registers used:
  8937 ;;		wreg, status,2
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8947 ;;Total ram usage:        0 bytes
  8948 ;; Hardware stack levels used:    1
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_SYSTEM_Initialize
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           
  8957                           ;psect for function _TMR2_Initialize
  8958  0850                     _TMR2_Initialize:	
  8959                           
  8960                           ;timers.c: 17: T2CON = 0x7F;
  8961                           
  8962                           ;incstack = 0
  8963                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8964  0850  307F               	movlw	127
  8965  0851  0025               	movlb	5	; select bank5
  8966  0852  008E               	movwf	14	;volatile
  8967                           
  8968                           ;timers.c: 18: T2CLKCON = 0x01;
  8969  0853  3001               	movlw	1
  8970  0854  0090               	movwf	16	;volatile
  8971                           
  8972                           ;timers.c: 19: T2HLT = 0x00;
  8973  0855  018F               	clrf	15	;volatile
  8974                           
  8975                           ;timers.c: 20: T2RST = 0x00;
  8976  0856  0191               	clrf	17	;volatile
  8977                           
  8978                           ;timers.c: 21: T2PR = 0xFF;
  8979  0857  30FF               	movlw	255
  8980  0858  008D               	movwf	13	;volatile
  8981                           
  8982                           ;timers.c: 22: T2TMR = 0x00;
  8983  0859  018C               	clrf	12	;volatile
  8984                           
  8985                           ;timers.c: 23: PIR4bits.TMR2IF = 0;
  8986  085A  002E               	movlb	14	; select bank14
  8987  085B  1090               	bcf	16,1	;volatile
  8988                           
  8989                           ;timers.c: 24: T2CONbits.TMR2ON = 1;
  8990  085C  0025               	movlb	5	; select bank5
  8991  085D  178E               	bsf	14,7	;volatile
  8992  085E  0008               	return
  8993  085F                     __end_of_TMR2_Initialize:	
  8994                           
  8995                           	psect	text21
  8996  0841                     __ptext21:	
  8997 ;; *************** function _TMR0_Initialize *****************
  8998 ;; Defined at:
  8999 ;;		line 3 in file "timers.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;		None
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		wreg
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;Total ram usage:        0 bytes
  9018 ;; Hardware stack levels used:    1
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_SYSTEM_Initialize
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           
  9027                           ;psect for function _TMR0_Initialize
  9028  0841                     _TMR0_Initialize:	
  9029                           
  9030                           ;timers.c: 5: T0CON0 = 0x10;
  9031                           
  9032                           ;incstack = 0
  9033                           ; Regs used in _TMR0_Initialize: [wreg]
  9034  0841  3010               	movlw	16
  9035  0842  0020               	movlb	0	; select bank0
  9036  0843  009E               	movwf	30	;volatile
  9037                           
  9038                           ;timers.c: 6: T0CON1 = 0x42;
  9039  0844  3042               	movlw	66
  9040  0845  009F               	movwf	31	;volatile
  9041                           
  9042                           ;timers.c: 7: TMR0H = 0x24;
  9043  0846  3024               	movlw	36
  9044  0847  009D               	movwf	29	;volatile
  9045                           
  9046                           ;timers.c: 8: TMR0L = 0x9F;
  9047  0848  309F               	movlw	159
  9048  0849  009C               	movwf	28	;volatile
  9049                           
  9050                           ;timers.c: 9: PIE0bits.TMR0IE = 1;
  9051  084A  002E               	movlb	14	; select bank14
  9052  084B  1696               	bsf	22,5	;volatile
  9053                           
  9054                           ;timers.c: 10: PIR0bits.TMR0IF = 0;
  9055  084C  128C               	bcf	12,5	;volatile
  9056                           
  9057                           ;timers.c: 11: T0CON0bits.T0EN = 1;
  9058  084D  0020               	movlb	0	; select bank0
  9059  084E  179E               	bsf	30,7	;volatile
  9060  084F  0008               	return
  9061  0850                     __end_of_TMR0_Initialize:	
  9062                           
  9063                           	psect	text22
  9064  0817                     __ptext22:	
  9065 ;; *************** function _PWM6_Initialize *****************
  9066 ;; Defined at:
  9067 ;;		line 4 in file "pwm6.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_SYSTEM_Initialize
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           
  9095                           ;psect for function _PWM6_Initialize
  9096  0817                     _PWM6_Initialize:	
  9097                           
  9098                           ;pwm6.c: 6: PWM6CON = 0x80;
  9099                           
  9100                           ;incstack = 0
  9101                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9102  0817  3080               	movlw	128
  9103  0818  0027               	movlb	7	; select bank7
  9104  0819  008E               	movwf	14	;volatile
  9105                           
  9106                           ;pwm6.c: 8: PWM6DCH = 0xFF;
  9107  081A  30FF               	movlw	255
  9108  081B  008D               	movwf	13	;volatile
  9109                           
  9110                           ;pwm6.c: 10: PWM6DCL = 0xC0;
  9111  081C  30C0               	movlw	192
  9112  081D  008C               	movwf	12	;volatile
  9113                           
  9114                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  9115  081E  0024               	movlb	4	; select bank4
  9116  081F  081F               	movf	31,w	;volatile
  9117  0820  39F3               	andlw	-13
  9118  0821  3804               	iorlw	4
  9119  0822  009F               	movwf	31	;volatile
  9120  0823  0008               	return
  9121  0824                     __end_of_PWM6_Initialize:	
  9122                           
  9123                           	psect	text23
  9124  09D4                     __ptext23:	
  9125 ;; *************** function _PIN_MANAGER_Initialize *****************
  9126 ;; Defined at:
  9127 ;;		line 5 in file "pin_manager.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;		None
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;  state           1    0[COMMON] unsigned char 
  9132 ;; Return value:  Size  Location     Type
  9133 ;;                  1    wreg      void 
  9134 ;; Registers used:
  9135 ;;		wreg, status,2
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 0/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;Total ram usage:        1 bytes
  9146 ;; Hardware stack levels used:    1
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_SYSTEM_Initialize
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           
  9155                           ;psect for function _PIN_MANAGER_Initialize
  9156  09D4                     _PIN_MANAGER_Initialize:	
  9157                           
  9158                           ;pin_manager.c: 7: LATA = 0x00;
  9159                           
  9160                           ;incstack = 0
  9161                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9162  09D4  0020               	movlb	0	; select bank0
  9163  09D5  0196               	clrf	22	;volatile
  9164                           
  9165                           ;pin_manager.c: 8: LATB = 0x0;
  9166  09D6  0197               	clrf	23	;volatile
  9167                           
  9168                           ;pin_manager.c: 9: LATC = 0x0;
  9169  09D7  0198               	clrf	24	;volatile
  9170                           
  9171                           ;pin_manager.c: 11: WPUA = 0x18;
  9172  09D8  3018               	movlw	24
  9173  09D9  003E               	movlb	30	; select bank30
  9174  09DA  00B9               	movwf	57	;volatile
  9175                           
  9176                           ;pin_manager.c: 12: WPUB = 0x00;
  9177  09DB  01C4               	clrf	68	;volatile
  9178                           
  9179                           ;pin_manager.c: 13: WPUC = 0x00;
  9180  09DC  01CF               	clrf	79	;volatile
  9181                           
  9182                           ;pin_manager.c: 14: WPUE = 0x8;
  9183  09DD  3008               	movlw	8
  9184  09DE  00E5               	movwf	101	;volatile
  9185                           
  9186                           ;pin_manager.c: 16: TRISA = 0x1C;
  9187  09DF  301C               	movlw	28
  9188  09E0  0020               	movlb	0	; select bank0
  9189  09E1  0091               	movwf	17	;volatile
  9190                           
  9191                           ;pin_manager.c: 17: TRISB = 0x00;
  9192  09E2  0192               	clrf	18	;volatile
  9193                           
  9194                           ;pin_manager.c: 18: TRISC = 0x10;
  9195  09E3  3010               	movlw	16
  9196  09E4  0093               	movwf	19	;volatile
  9197                           
  9198                           ;pin_manager.c: 20: ANSELA = 0x04;
  9199  09E5  3004               	movlw	4
  9200  09E6  003E               	movlb	30	; select bank30
  9201  09E7  00B8               	movwf	56	;volatile
  9202                           
  9203                           ;pin_manager.c: 21: ANSELB = 0x00;
  9204  09E8  01C3               	clrf	67	;volatile
  9205                           
  9206                           ;pin_manager.c: 22: ANSELC = 0x00;
  9207  09E9  01CE               	clrf	78	;volatile
  9208                           
  9209                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9210  09EA  002E               	movlb	14	; select bank14
  9211  09EB  1216               	bcf	22,4	;volatile
  9212                           
  9213                           ;pin_manager.c: 25: bool state = GIE;
  9214  09EC  3000               	movlw	0
  9215  09ED  1B8B               	btfsc	11,7	;volatile
  9216  09EE  3001               	movlw	1
  9217  09EF  00F0               	movwf	PIN_MANAGER_Initialize@state
  9218                           
  9219                           ;pin_manager.c: 26: GIE = 0;
  9220  09F0  138B               	bcf	11,7	;volatile
  9221                           
  9222                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9223  09F1  3055               	movlw	85
  9224  09F2  003D               	movlb	29	; select bank29
  9225  09F3  008F               	movwf	15	;volatile
  9226                           
  9227                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9228  09F4  30AA               	movlw	170
  9229  09F5  008F               	movwf	15	;volatile
  9230                           
  9231                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9232  09F6  100F               	bcf	15,0	;volatile
  9233                           
  9234                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  9235  09F7  300E               	movlw	14
  9236  09F8  003E               	movlb	30	; select bank30
  9237  09F9  0091               	movwf	17	;volatile
  9238                           
  9239                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  9240  09FA  3055               	movlw	85
  9241  09FB  003D               	movlb	29	; select bank29
  9242  09FC  008F               	movwf	15	;volatile
  9243                           
  9244                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  9245  09FD  30AA               	movlw	170
  9246  09FE  008F               	movwf	15	;volatile
  9247                           
  9248                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  9249  09FF  140F               	bsf	15,0	;volatile
  9250                           
  9251                           ;pin_manager.c: 39: GIE = state;
  9252  0A00  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9253  0A01  2A04               	goto	u2550
  9254  0A02  178B               	bsf	11,7	;volatile
  9255  0A03  0008               	return
  9256  0A04                     u2550:	
  9257  0A04  138B               	bcf	11,7	;volatile
  9258  0A05  0008               	return
  9259  0A06                     __end_of_PIN_MANAGER_Initialize:	
  9260                           
  9261                           	psect	text24
  9262  0803                     __ptext24:	
  9263 ;; *************** function _OSCILLATOR_Initialize *****************
  9264 ;; Defined at:
  9265 ;;		line 55 in file "system.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;		None
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;		None
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		wreg, status,2
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;Total ram usage:        0 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_SYSTEM_Initialize
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           
  9293                           ;psect for function _OSCILLATOR_Initialize
  9294  0803                     _OSCILLATOR_Initialize:	
  9295                           
  9296                           ;system.c: 57: OSCCON1 = 0x60;
  9297                           
  9298                           ;incstack = 0
  9299                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9300  0803  3060               	movlw	96
  9301  0804  0031               	movlb	17	; select bank17
  9302  0805  008D               	movwf	13	;volatile
  9303                           
  9304                           ;system.c: 58: OSCCON3 = 0x00;
  9305  0806  018F               	clrf	15	;volatile
  9306                           
  9307                           ;system.c: 59: OSCEN = 0x00;
  9308  0807  0191               	clrf	17	;volatile
  9309                           
  9310                           ;system.c: 60: OSCFRQ = 0x00;
  9311  0808  0193               	clrf	19	;volatile
  9312                           
  9313                           ;system.c: 61: OSCTUNE = 0x00;
  9314  0809  0192               	clrf	18	;volatile
  9315  080A  0008               	return
  9316  080B                     __end_of_OSCILLATOR_Initialize:	
  9317                           
  9318                           	psect	text25
  9319  0C83                     __ptext25:	
  9320 ;; *************** function _LCD_Init *****************
  9321 ;; Defined at:
  9322 ;;		line 154 in file "lcd.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;  style           1    wreg     unsigned char 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  style           1    3[COMMON] unsigned char 
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  1    wreg      void 
  9329 ;; Registers used:
  9330 ;;		wreg, status,2, status,0, pclath, cstack
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;Total ram usage:        2 bytes
  9341 ;; Hardware stack levels used:    1
  9342 ;; Hardware stack levels required when called:    2
  9343 ;; This function calls:
  9344 ;;		_LCD_Cmd
  9345 ;;		_LCD_Port
  9346 ;; This function is called by:
  9347 ;;		_SYSTEM_Initialize
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           
  9352                           ;psect for function _LCD_Init
  9353  0C83                     _LCD_Init:	
  9354                           
  9355                           ;incstack = 0
  9356                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9357                           ;LCD_Init@style stored from wreg
  9358  0C83  00F3               	movwf	LCD_Init@style
  9359                           
  9360                           ;lcd.c: 156: LCD_Port(0x00);
  9361  0C84  3000               	movlw	0
  9362  0C85  3188  2088  318C   	fcall	_LCD_Port
  9363                           
  9364                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  9365  0C88  3021               	movlw	33
  9366  0C89  00F2               	movwf	??_LCD_Init
  9367  0C8A  3076               	movlw	118
  9368  0C8B                     u3347:	
  9369  0C8B  0B89               	decfsz	9,f
  9370  0C8C  2C8B               	goto	u3347
  9371  0C8D  0BF2               	decfsz	??_LCD_Init,f
  9372  0C8E  2C8B               	goto	u3347
  9373  0C8F  3200               	nop2
  9374                           
  9375                           ;lcd.c: 160: LCD_Cmd(0x03);
  9376  0C90  3003               	movlw	3
  9377  0C91  3188  2032  318C   	fcall	_LCD_Cmd
  9378                           
  9379                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  9380  0C94  3004               	movlw	4
  9381  0C95  00F2               	movwf	??_LCD_Init
  9382  0C96  303E               	movlw	62
  9383  0C97                     u3357:	
  9384  0C97  0B89               	decfsz	9,f
  9385  0C98  2C97               	goto	u3357
  9386  0C99  0BF2               	decfsz	??_LCD_Init,f
  9387  0C9A  2C97               	goto	u3357
  9388                           
  9389                           ;lcd.c: 164: LCD_Cmd(0x03);
  9390  0C9B  3003               	movlw	3
  9391  0C9C  3188  2032  318C   	fcall	_LCD_Cmd
  9392                           
  9393                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9394  0C9F  300A               	movlw	10
  9395  0CA0                     u3367:	
  9396  0CA0  0B89               	decfsz	9,f
  9397  0CA1  2CA0               	goto	u3367
  9398                           
  9399                           ;lcd.c: 168: LCD_Cmd(0x03);
  9400  0CA2  3003               	movlw	3
  9401  0CA3  3188  2032  318C   	fcall	_LCD_Cmd
  9402                           
  9403                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9404  0CA6  300A               	movlw	10
  9405  0CA7                     u3377:	
  9406  0CA7  0B89               	decfsz	9,f
  9407  0CA8  2CA7               	goto	u3377
  9408                           
  9409                           ;lcd.c: 172: LCD_Cmd(0x02);
  9410  0CA9  3002               	movlw	2
  9411  0CAA  3188  2032  318C   	fcall	_LCD_Cmd
  9412                           
  9413                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9414  0CAD  300A               	movlw	10
  9415  0CAE                     u3387:	
  9416  0CAE  0B89               	decfsz	9,f
  9417  0CAF  2CAE               	goto	u3387
  9418                           
  9419                           ;lcd.c: 176: LCD_Cmd(0x2);
  9420  0CB0  3002               	movlw	2
  9421  0CB1  3188  2032  318C   	fcall	_LCD_Cmd
  9422                           
  9423                           ;lcd.c: 178: LCD_Cmd(0x8);
  9424  0CB4  3008               	movlw	8
  9425  0CB5  3188  2032  318C   	fcall	_LCD_Cmd
  9426                           
  9427                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9428  0CB8  300A               	movlw	10
  9429  0CB9                     u3397:	
  9430  0CB9  0B89               	decfsz	9,f
  9431  0CBA  2CB9               	goto	u3397
  9432                           
  9433                           ;lcd.c: 182: LCD_Cmd(0x0);
  9434  0CBB  3000               	movlw	0
  9435  0CBC  3188  2032  318C   	fcall	_LCD_Cmd
  9436                           
  9437                           ;lcd.c: 184: LCD_Cmd(0x8);
  9438  0CBF  3008               	movlw	8
  9439  0CC0  3188  2032  318C   	fcall	_LCD_Cmd
  9440                           
  9441                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9442  0CC3  300A               	movlw	10
  9443  0CC4                     u3407:	
  9444  0CC4  0B89               	decfsz	9,f
  9445  0CC5  2CC4               	goto	u3407
  9446                           
  9447                           ;lcd.c: 188: LCD_Cmd(0x0);
  9448  0CC6  3000               	movlw	0
  9449  0CC7  3188  2032  318C   	fcall	_LCD_Cmd
  9450                           
  9451                           ;lcd.c: 190: LCD_Cmd(0x1);
  9452  0CCA  3001               	movlw	1
  9453  0CCB  3188  2032  318C   	fcall	_LCD_Cmd
  9454                           
  9455                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  9456  0CCE  30FA               	movlw	250
  9457  0CCF                     u3417:	
  9458  0CCF  3200               	nop2
  9459  0CD0  0B89               	decfsz	9,f
  9460  0CD1  2CCF               	goto	u3417
  9461                           
  9462                           ;lcd.c: 194: LCD_Cmd(0x0);
  9463  0CD2  3000               	movlw	0
  9464  0CD3  3188  2032  318C   	fcall	_LCD_Cmd
  9465                           
  9466                           ;lcd.c: 196: LCD_Cmd(0x6);
  9467  0CD6  3006               	movlw	6
  9468  0CD7  3188  2032  318C   	fcall	_LCD_Cmd
  9469                           
  9470                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9471  0CDA  300A               	movlw	10
  9472  0CDB                     u3427:	
  9473  0CDB  0B89               	decfsz	9,f
  9474  0CDC  2CDB               	goto	u3427
  9475                           
  9476                           ;lcd.c: 200: LCD_Cmd(0x0);
  9477  0CDD  3000               	movlw	0
  9478  0CDE  3188  2032  318C   	fcall	_LCD_Cmd
  9479                           
  9480                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9481  0CE1  0873               	movf	LCD_Init@style,w
  9482  0CE2  380C               	iorlw	12
  9483  0CE3  3188  2032  318C   	fcall	_LCD_Cmd
  9484                           
  9485                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9486  0CE6  300A               	movlw	10
  9487  0CE7                     u3437:	
  9488  0CE7  0B89               	decfsz	9,f
  9489  0CE8  2CE7               	goto	u3437
  9490  0CE9  0008               	return
  9491  0CEA                     __end_of_LCD_Init:	
  9492                           
  9493                           	psect	text26
  9494  17EC                     __ptext26:	
  9495 ;; *************** function _LCD_Clear *****************
  9496 ;; Defined at:
  9497 ;;		line 75 in file "lcd.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;		None
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;		None
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  1    wreg      void 
  9504 ;; Registers used:
  9505 ;;		wreg, status,2, status,0, pclath, cstack
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;Total ram usage:        0 bytes
  9516 ;; Hardware stack levels used:    1
  9517 ;; Hardware stack levels required when called:    2
  9518 ;; This function calls:
  9519 ;;		_LCD_Cmd
  9520 ;; This function is called by:
  9521 ;;		_SYSTEM_Initialize
  9522 ;;		_tempSetpoint
  9523 ;;		_readButtons
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           
  9528                           ;psect for function _LCD_Clear
  9529  17EC                     _LCD_Clear:	
  9530                           
  9531                           ;lcd.c: 77: LCD_Cmd(0);
  9532                           
  9533                           ;incstack = 0
  9534                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  9535  17EC  3000               	movlw	0
  9536  17ED  3188  2032  3197   	fcall	_LCD_Cmd
  9537                           
  9538                           ;lcd.c: 78: LCD_Cmd(1);
  9539  17F0  3001               	movlw	1
  9540  17F1  3188  2032         	fcall	_LCD_Cmd
  9541  17F3  0008               	return
  9542  17F4                     __end_of_LCD_Clear:	
  9543                           
  9544                           	psect	text27
  9545  0984                     __ptext27:	
  9546 ;; *************** function _Init_PID *****************
  9547 ;; Defined at:
  9548 ;;		line 12 in file "pid.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;		None
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;		None
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      void 
  9555 ;; Registers used:
  9556 ;;		wreg, status,2
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;Total ram usage:        0 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; This function calls:
  9569 ;;		Nothing
  9570 ;; This function is called by:
  9571 ;;		_SYSTEM_Initialize
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           
  9576                           ;psect for function _Init_PID
  9577  0984                     _Init_PID:	
  9578                           
  9579                           ;pid.c: 14: PID_Kp = 50;
  9580                           
  9581                           ;incstack = 0
  9582                           ; Regs used in _Init_PID: [wreg+status,2]
  9583  0984  3000               	movlw	0
  9584  0985  0021               	movlb	1	; select bank1
  9585  0986  00D9               	movwf	_PID_Kp^(0+128)
  9586  0987  3048               	movlw	72
  9587  0988  00DA               	movwf	(_PID_Kp+1)^(0+128)
  9588  0989  3042               	movlw	66
  9589  098A  00DB               	movwf	(_PID_Kp+2)^(0+128)
  9590                           
  9591                           ;pid.c: 15: PID_Ki = 1;
  9592  098B  3000               	movlw	0
  9593  098C  00D6               	movwf	_PID_Ki^(0+128)
  9594  098D  3080               	movlw	128
  9595  098E  00D7               	movwf	(_PID_Ki+1)^(0+128)
  9596  098F  303F               	movlw	63
  9597  0990  00D8               	movwf	(_PID_Ki+2)^(0+128)
  9598                           
  9599                           ;pid.c: 16: PID_Kd = 300;
  9600  0991  3000               	movlw	0
  9601  0992  00D3               	movwf	_PID_Kd^(0+128)
  9602  0993  3096               	movlw	150
  9603  0994  00D4               	movwf	(_PID_Kd+1)^(0+128)
  9604  0995  3043               	movlw	67
  9605  0996  00D5               	movwf	(_PID_Kd+2)^(0+128)
  9606                           
  9607                           ;pid.c: 17: pidMinOutput = 0;
  9608  0997  01E2               	clrf	_pidMinOutput^(0+128)
  9609  0998  01E3               	clrf	(_pidMinOutput+1)^(0+128)
  9610                           
  9611                           ;pid.c: 18: pidMaxOutput = 1023;
  9612  0999  30FF               	movlw	255
  9613  099A  00E0               	movwf	_pidMaxOutput^(0+128)
  9614  099B  3003               	movlw	3
  9615  099C  00E1               	movwf	(_pidMaxOutput^(0+128)+1)
  9616                           
  9617                           ;pid.c: 19: pidIntegrated = 0;
  9618  099D  3000               	movlw	0
  9619  099E  00D0               	movwf	_pidIntegrated^(0+128)
  9620  099F  3000               	movlw	0
  9621  09A0  00D1               	movwf	(_pidIntegrated+1)^(0+128)
  9622  09A1  3000               	movlw	0
  9623  09A2  00D2               	movwf	(_pidIntegrated+2)^(0+128)
  9624                           
  9625                           ;pid.c: 20: pidPrevInput = 0;
  9626  09A3  3000               	movlw	0
  9627  09A4  00CD               	movwf	_pidPrevInput^(0+128)
  9628  09A5  3000               	movlw	0
  9629  09A6  00CE               	movwf	(_pidPrevInput+1)^(0+128)
  9630  09A7  3000               	movlw	0
  9631  09A8  00CF               	movwf	(_pidPrevInput+2)^(0+128)
  9632  09A9  0008               	return
  9633  09AA                     __end_of_Init_PID:	
  9634                           
  9635                           	psect	text28
  9636  095E                     __ptext28:	
  9637 ;; *************** function _InitCustomChars *****************
  9638 ;; Defined at:
  9639 ;;		line 29 in file "lcd.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;		None
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;  i               1    6[COMMON] unsigned char 
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      void 
  9646 ;; Registers used:
  9647 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;Total ram usage:        2 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; Hardware stack levels required when called:    2
  9660 ;; This function calls:
  9661 ;;		_LCD_Cmd
  9662 ;;		_LCD_Write_Char
  9663 ;; This function is called by:
  9664 ;;		_SYSTEM_Initialize
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           
  9669                           ;psect for function _InitCustomChars
  9670  095E                     _InitCustomChars:	
  9671                           
  9672                           ;lcd.c: 31: uint8_t i;
  9673                           ;lcd.c: 32: LCD_Cmd(0x04);
  9674                           
  9675                           ;incstack = 0
  9676                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9677  095E  3004               	movlw	4
  9678  095F  3188  2032  3189   	fcall	_LCD_Cmd
  9679                           
  9680                           ;lcd.c: 33: LCD_Cmd(0x00);
  9681  0962  3000               	movlw	0
  9682  0963  3188  2032  3189   	fcall	_LCD_Cmd
  9683                           
  9684                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  9685  0966  01F6               	clrf	InitCustomChars@i
  9686  0967  3018               	movlw	24
  9687  0968  0276               	subwf	InitCustomChars@i,w
  9688  0969  1803               	btfsc	3,0
  9689  096A  297C               	goto	l2406
  9690  096B                     l2400:	
  9691                           
  9692                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  9693  096B  0876               	movf	InitCustomChars@i,w
  9694  096C  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
  9695  096D  0086               	movwf	6
  9696  096E  3001               	movlw	1	; select bank2/3
  9697  096F  0087               	movwf	7
  9698  0970  0801               	movf	1,w
  9699  0971  3189  21AA  3189   	fcall	_LCD_Write_Char
  9700  0974  3001               	movlw	1
  9701  0975  00F5               	movwf	??_InitCustomChars
  9702  0976  0875               	movf	??_InitCustomChars,w
  9703  0977  07F6               	addwf	InitCustomChars@i,f
  9704  0978  3018               	movlw	24
  9705  0979  0276               	subwf	InitCustomChars@i,w
  9706  097A  1C03               	skipc
  9707  097B  296B               	goto	l2400
  9708  097C                     l2406:	
  9709                           
  9710                           ;lcd.c: 36: LCD_Cmd(0);
  9711  097C  3000               	movlw	0
  9712  097D  3188  2032  3189   	fcall	_LCD_Cmd
  9713                           
  9714                           ;lcd.c: 37: LCD_Cmd(2);
  9715  0980  3002               	movlw	2
  9716  0981  3188  2032         	fcall	_LCD_Cmd
  9717  0983  0008               	return
  9718  0984                     __end_of_InitCustomChars:	
  9719                           
  9720                           	psect	text29
  9721  09AA                     __ptext29:	
  9722 ;; *************** function _LCD_Write_Char *****************
  9723 ;; Defined at:
  9724 ;;		line 223 in file "lcd.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  a               1    wreg     const unsigned char 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  a               1    4[COMMON] const unsigned char 
  9729 ;;  y               1    3[COMMON] unsigned char 
  9730 ;;  temp            1    2[COMMON] unsigned char 
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      void 
  9733 ;; Registers used:
  9734 ;;		wreg, status,2, status,0, pclath, cstack
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;Total ram usage:        4 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; Hardware stack levels required when called:    1
  9747 ;; This function calls:
  9748 ;;		_LCD_Port
  9749 ;; This function is called by:
  9750 ;;		_InitCustomChars
  9751 ;;		_LCD_Write_String
  9752 ;;		_LCD_Write_Int
  9753 ;;		_tempSetpoint
  9754 ;;		_readButtons
  9755 ;;		_main
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           
  9760                           ;psect for function _LCD_Write_Char
  9761  09AA                     _LCD_Write_Char:	
  9762                           
  9763                           ;incstack = 0
  9764                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9765                           ;LCD_Write_Char@a stored from wreg
  9766  09AA  00F4               	movwf	LCD_Write_Char@a
  9767                           
  9768                           ;lcd.c: 225: char temp,y;
  9769                           ;lcd.c: 226: temp = a&0x0F;
  9770  09AB  0874               	movf	LCD_Write_Char@a,w
  9771  09AC  390F               	andlw	15
  9772  09AD  00F1               	movwf	??_LCD_Write_Char
  9773  09AE  0871               	movf	??_LCD_Write_Char,w
  9774  09AF  00F2               	movwf	LCD_Write_Char@temp
  9775                           
  9776                           ;lcd.c: 227: y = a&0xF0;
  9777  09B0  0874               	movf	LCD_Write_Char@a,w
  9778  09B1  39F0               	andlw	240
  9779  09B2  00F1               	movwf	??_LCD_Write_Char
  9780  09B3  0871               	movf	??_LCD_Write_Char,w
  9781  09B4  00F3               	movwf	LCD_Write_Char@y
  9782                           
  9783                           ;lcd.c: 228: RB0 = 1;
  9784  09B5  0020               	movlb	0	; select bank0
  9785  09B6  140D               	bsf	13,0	;volatile
  9786                           
  9787                           ;lcd.c: 229: LCD_Port(y>>4);
  9788  09B7  0873               	movf	LCD_Write_Char@y,w
  9789  09B8  00F1               	movwf	??_LCD_Write_Char
  9790  09B9  3004               	movlw	4
  9791  09BA                     u1685:	
  9792  09BA  36F1               	lsrf	??_LCD_Write_Char,f
  9793  09BB  0B89               	decfsz	9,f
  9794  09BC  29BA               	goto	u1685
  9795  09BD  0871               	movf	??_LCD_Write_Char,w
  9796  09BE  3188  2088  3189   	fcall	_LCD_Port
  9797                           
  9798                           ;lcd.c: 230: RB1 = 1;
  9799  09C1  0020               	movlb	0	; select bank0
  9800  09C2  148D               	bsf	13,1	;volatile
  9801                           
  9802                           ;lcd.c: 231: RB1 = 0;
  9803  09C3  108D               	bcf	13,1	;volatile
  9804                           
  9805                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9806  09C4  3003               	movlw	3
  9807  09C5                     u3447:	
  9808  09C5  0B89               	decfsz	9,f
  9809  09C6  29C5               	goto	u3447
  9810  09C7  0000               	nop
  9811                           
  9812                           ;lcd.c: 233: LCD_Port(temp);
  9813  09C8  0872               	movf	LCD_Write_Char@temp,w
  9814  09C9  3188  2088  3189   	fcall	_LCD_Port
  9815                           
  9816                           ;lcd.c: 234: RB1 = 1;
  9817  09CC  0020               	movlb	0	; select bank0
  9818  09CD  148D               	bsf	13,1	;volatile
  9819                           
  9820                           ;lcd.c: 235: RB1 = 0;
  9821  09CE  108D               	bcf	13,1	;volatile
  9822                           
  9823                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9824  09CF  3003               	movlw	3
  9825  09D0                     u3457:	
  9826  09D0  0B89               	decfsz	9,f
  9827  09D1  29D0               	goto	u3457
  9828  09D2  0000               	nop
  9829  09D3  0008               	return
  9830  09D4                     __end_of_LCD_Write_Char:	
  9831                           
  9832                           	psect	text30
  9833  0832                     __ptext30:	
  9834 ;; *************** function _LCD_Cmd *****************
  9835 ;; Defined at:
  9836 ;;		line 65 in file "lcd.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;  a               1    wreg     unsigned char 
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;  a               1    1[COMMON] unsigned char 
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  1    wreg      void 
  9843 ;; Registers used:
  9844 ;;		wreg, status,2, status,0, pclath, cstack
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9854 ;;Total ram usage:        1 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; Hardware stack levels required when called:    1
  9857 ;; This function calls:
  9858 ;;		_LCD_Port
  9859 ;; This function is called by:
  9860 ;;		_InitCustomChars
  9861 ;;		_LCD_Clear
  9862 ;;		_LCD_Set_Cursor
  9863 ;;		_LCD_Init
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           
  9868                           ;psect for function _LCD_Cmd
  9869  0832                     _LCD_Cmd:	
  9870                           
  9871                           ;incstack = 0
  9872                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9873                           ;LCD_Cmd@a stored from wreg
  9874  0832  00F1               	movwf	LCD_Cmd@a
  9875                           
  9876                           ;lcd.c: 67: RB0 = 0;
  9877  0833  0020               	movlb	0	; select bank0
  9878  0834  100D               	bcf	13,0	;volatile
  9879                           
  9880                           ;lcd.c: 68: LCD_Port(a);
  9881  0835  0871               	movf	LCD_Cmd@a,w
  9882  0836  3188  2088  3188   	fcall	_LCD_Port
  9883                           
  9884                           ;lcd.c: 69: RB1 = 1;
  9885  0839  0020               	movlb	0	; select bank0
  9886  083A  148D               	bsf	13,1	;volatile
  9887                           
  9888                           ;lcd.c: 70: RB1 = 0;
  9889  083B  108D               	bcf	13,1	;volatile
  9890                           
  9891                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
  9892  083C  30C8               	movlw	200
  9893  083D                     u3467:	
  9894  083D  3200               	nop2
  9895  083E  0B89               	decfsz	9,f
  9896  083F  283D               	goto	u3467
  9897  0840  0008               	return
  9898  0841                     __end_of_LCD_Cmd:	
  9899                           
  9900                           	psect	text31
  9901  0888                     __ptext31:	
  9902 ;; *************** function _LCD_Port *****************
  9903 ;; Defined at:
  9904 ;;		line 41 in file "lcd.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  a               1    wreg     unsigned char 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;  a               1    0[COMMON] unsigned char 
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1    wreg      void 
  9911 ;; Registers used:
  9912 ;;		wreg
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;Total ram usage:        1 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_LCD_Cmd
  9928 ;;		_LCD_Init
  9929 ;;		_LCD_Write_Char
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           
  9934                           ;psect for function _LCD_Port
  9935  0888                     _LCD_Port:	
  9936                           
  9937                           ;incstack = 0
  9938                           ; Regs used in _LCD_Port: [wreg]
  9939                           ;LCD_Port@a stored from wreg
  9940  0888  00F0               	movwf	LCD_Port@a
  9941                           
  9942                           ;lcd.c: 43: if(a & 1)
  9943  0889  1C70               	btfss	LCD_Port@a,0
  9944  088A  288E               	goto	l28
  9945                           
  9946                           ;lcd.c: 44: RB2 = 1;
  9947  088B  0020               	movlb	0	; select bank0
  9948  088C  150D               	bsf	13,2	;volatile
  9949  088D  2890               	goto	l2022
  9950  088E                     l28:	
  9951                           
  9952                           ;lcd.c: 45: else
  9953                           ;lcd.c: 46: RB2 = 0;
  9954  088E  0020               	movlb	0	; select bank0
  9955  088F  110D               	bcf	13,2	;volatile
  9956  0890                     l2022:	
  9957                           
  9958                           ;lcd.c: 48: if(a & 2)
  9959  0890  1CF0               	btfss	LCD_Port@a,1
  9960  0891  2894               	goto	l30
  9961                           
  9962                           ;lcd.c: 49: RB3 = 1;
  9963  0892  158D               	bsf	13,3	;volatile
  9964  0893  2895               	goto	l2026
  9965  0894                     l30:	
  9966                           
  9967                           ;lcd.c: 50: else
  9968                           ;lcd.c: 51: RB3 = 0;
  9969  0894  118D               	bcf	13,3	;volatile
  9970  0895                     l2026:	
  9971                           
  9972                           ;lcd.c: 53: if(a & 4)
  9973  0895  1D70               	btfss	LCD_Port@a,2
  9974  0896  2899               	goto	l32
  9975                           
  9976                           ;lcd.c: 54: RB4 = 1;
  9977  0897  160D               	bsf	13,4	;volatile
  9978  0898  289A               	goto	l2030
  9979  0899                     l32:	
  9980                           
  9981                           ;lcd.c: 55: else
  9982                           ;lcd.c: 56: RB4 = 0;
  9983  0899  120D               	bcf	13,4	;volatile
  9984  089A                     l2030:	
  9985                           
  9986                           ;lcd.c: 58: if(a & 8)
  9987  089A  1DF0               	btfss	LCD_Port@a,3
  9988  089B  289E               	goto	l34
  9989                           
  9990                           ;lcd.c: 59: RB5 = 1;
  9991  089C  168D               	bsf	13,5	;volatile
  9992  089D  0008               	return
  9993  089E                     l34:	
  9994                           
  9995                           ;lcd.c: 60: else
  9996                           ;lcd.c: 61: RB5 = 0;
  9997  089E  128D               	bcf	13,5	;volatile
  9998  089F  0008               	return
  9999  08A0                     __end_of_LCD_Port:	
 10000                           
 10001                           	psect	text32
 10002  08B8                     __ptext32:	
 10003 ;; *************** function _ADCC_Initialize *****************
 10004 ;; Defined at:
 10005 ;;		line 5 in file "adcc.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		wreg, status,2
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;Total ram usage:        0 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; This function calls:
 10026 ;;		Nothing
 10027 ;; This function is called by:
 10028 ;;		_SYSTEM_Initialize
 10029 ;; This function uses a non-reentrant model
 10030 ;;
 10031                           
 10032                           
 10033                           ;psect for function _ADCC_Initialize
 10034  08B8                     _ADCC_Initialize:	
 10035                           
 10036                           ;adcc.c: 8: ADCON1 = 0x00;
 10037                           
 10038                           ;incstack = 0
 10039                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10040  08B8  0021               	movlb	1	; select bank1
 10041  08B9  0194               	clrf	20	;volatile
 10042                           
 10043                           ;adcc.c: 10: ADCON2 = 0x00;
 10044  08BA  0195               	clrf	21	;volatile
 10045                           
 10046                           ;adcc.c: 12: ADCON3 = 0x00;
 10047  08BB  0196               	clrf	22	;volatile
 10048                           
 10049                           ;adcc.c: 14: ADACT = 0x00;
 10050  08BC  0199               	clrf	25	;volatile
 10051                           
 10052                           ;adcc.c: 16: ADSTAT = 0x00;
 10053  08BD  0197               	clrf	23	;volatile
 10054                           
 10055                           ;adcc.c: 18: ADCLK = 0x0F;
 10056  08BE  300F               	movlw	15
 10057  08BF  0098               	movwf	24	;volatile
 10058                           
 10059                           ;adcc.c: 21: ADREF = 0x00;
 10060  08C0  019A               	clrf	26	;volatile
 10061                           
 10062                           ;adcc.c: 23: ADCAP = 0x00;
 10063  08C1  019B               	clrf	27	;volatile
 10064                           
 10065                           ;adcc.c: 25: ADPRE = 0x00;
 10066  08C2  019C               	clrf	28	;volatile
 10067                           
 10068                           ;adcc.c: 27: ADACQ = 0x00;
 10069  08C3  019D               	clrf	29	;volatile
 10070                           
 10071                           ;adcc.c: 29: ADPCH = 0x00;
 10072  08C4  019E               	clrf	30	;volatile
 10073                           
 10074                           ;adcc.c: 31: ADRPT = 0x00;
 10075  08C5  0022               	movlb	2	; select bank2
 10076  08C6  018D               	clrf	13	;volatile
 10077                           
 10078                           ;adcc.c: 33: ADLTHL = 0x00;
 10079  08C7  018E               	clrf	14	;volatile
 10080                           
 10081                           ;adcc.c: 35: ADLTHH = 0x00;
 10082  08C8  018F               	clrf	15	;volatile
 10083                           
 10084                           ;adcc.c: 37: ADUTHL = 0x00;
 10085  08C9  0190               	clrf	16	;volatile
 10086                           
 10087                           ;adcc.c: 39: ADUTHH = 0x00;
 10088  08CA  0191               	clrf	17	;volatile
 10089                           
 10090                           ;adcc.c: 41: ADSTPTL = 0x00;
 10091  08CB  0192               	clrf	18	;volatile
 10092                           
 10093                           ;adcc.c: 43: ADSTPTH = 0x00;
 10094  08CC  0193               	clrf	19	;volatile
 10095                           
 10096                           ;adcc.c: 46: ADCON0 = 0x84;
 10097  08CD  3084               	movlw	132
 10098  08CE  0021               	movlb	1	; select bank1
 10099  08CF  0093               	movwf	19	;volatile
 10100  08D0  0008               	return
 10101  08D1                     __end_of_ADCC_Initialize:	
 10102                           
 10103                           	psect	text33
 10104  0872                     __ptext33:	
 10105 ;; *************** function _PWM6_LoadDutyValue *****************
 10106 ;; Defined at:
 10107 ;;		line 15 in file "pwm6.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  dutyValue       2    0[COMMON] unsigned int 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;		None
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  1    wreg      void 
 10114 ;; Registers used:
 10115 ;;		wreg, status,2, status,0
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10123 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;Total ram usage:        4 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; This function calls:
 10128 ;;		Nothing
 10129 ;; This function is called by:
 10130 ;;		_main
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           
 10135                           ;psect for function _PWM6_LoadDutyValue
 10136  0872                     _PWM6_LoadDutyValue:	
 10137                           
 10138                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 10139                           
 10140                           ;incstack = 0
 10141                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10142  0872  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 10143  0873  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10144  0874  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10145  0875  00F2               	movwf	??_PWM6_LoadDutyValue
 10146  0876  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10147  0877  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10148  0878  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10149  0879  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10150  087A  0872               	movf	??_PWM6_LoadDutyValue,w
 10151  087B  0027               	movlb	7	; select bank7
 10152  087C  008D               	movwf	13	;volatile
 10153                           
 10154                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 10155  087D  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10156  087E  3903               	andlw	3
 10157  087F  00F2               	movwf	??_PWM6_LoadDutyValue
 10158  0880  3005               	movlw	5
 10159  0881                     u2735:	
 10160  0881  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10161  0882  3EFF               	addlw	-1
 10162  0883  1D03               	skipz
 10163  0884  2881               	goto	u2735
 10164  0885  3572               	lslf	??_PWM6_LoadDutyValue,w
 10165  0886  008C               	movwf	12	;volatile
 10166  0887  0008               	return
 10167  0888                     __end_of_PWM6_LoadDutyValue:	
 10168                           
 10169                           	psect	text34
 10170  0301                     __ptext34:	
 10171 ;; *************** function _PID_Calculate *****************
 10172 ;; Defined at:
 10173 ;;		line 24 in file "pid.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;  setpoint        2   38[BANK0 ] const int 
 10176 ;;  temp            3   40[BANK0 ] float 
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;  error           3   58[BANK0 ] float 
 10179 ;;  Result          3   55[BANK0 ] float 
 10180 ;;  pidPrevError    3   52[BANK0 ] float 
 10181 ;;  derivativeVa    3   49[BANK0 ] float 
 10182 ;;  errorValue      3   43[BANK0 ] float 
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  3   38[BANK0 ] float 
 10185 ;; Registers used:
 10186 ;;		wreg, status,2, status,0, pclath, cstack
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10192 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10193 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10195 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;Total ram usage:       23 bytes
 10197 ;; Hardware stack levels used:    1
 10198 ;; Hardware stack levels required when called:    2
 10199 ;; This function calls:
 10200 ;;		___awtoft
 10201 ;;		___ftadd
 10202 ;;		___ftge
 10203 ;;		___ftmul
 10204 ;;		___ftneg
 10205 ;; This function is called by:
 10206 ;;		_main
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           
 10211                           ;psect for function _PID_Calculate
 10212  0301                     _PID_Calculate:	
 10213                           
 10214                           ;pid.c: 26: float error, errorValue, derivativeValue = 0, pidPrevError = 0, Result;
 10215                           
 10216                           ;incstack = 0
 10217                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10218  0301  3000               	movlw	0
 10219  0302  0020               	movlb	0	; select bank0
 10220  0303  00D1               	movwf	PID_Calculate@derivativeValue
 10221  0304  3000               	movlw	0
 10222  0305  00D2               	movwf	PID_Calculate@derivativeValue+1
 10223  0306  3000               	movlw	0
 10224  0307  00D3               	movwf	PID_Calculate@derivativeValue+2
 10225  0308  3000               	movlw	0
 10226  0309  00D4               	movwf	PID_Calculate@pidPrevError
 10227  030A  3000               	movlw	0
 10228  030B  00D5               	movwf	PID_Calculate@pidPrevError+1
 10229  030C  3000               	movlw	0
 10230  030D  00D6               	movwf	PID_Calculate@pidPrevError+2
 10231                           
 10232                           ;pid.c: 29: error = setpoint - temp;
 10233  030E  0848               	movf	PID_Calculate@temp,w
 10234  030F  00F0               	movwf	___ftneg@f1
 10235  0310  0849               	movf	PID_Calculate@temp+1,w
 10236  0311  00F1               	movwf	___ftneg@f1+1
 10237  0312  084A               	movf	PID_Calculate@temp+2,w
 10238  0313  00F2               	movwf	___ftneg@f1+2
 10239  0314  3197  27E4  3183   	fcall	___ftneg
 10240  0317  0870               	movf	?___ftneg,w
 10241  0318  0020               	movlb	0	; select bank0
 10242  0319  00B0               	movwf	___ftadd@f1
 10243  031A  0871               	movf	?___ftneg+1,w
 10244  031B  00B1               	movwf	___ftadd@f1+1
 10245  031C  0872               	movf	?___ftneg+2,w
 10246  031D  00B2               	movwf	___ftadd@f1+2
 10247  031E  0847               	movf	PID_Calculate@setpoint+1,w
 10248  031F  00F9               	movwf	___awtoft@c+1
 10249  0320  0846               	movf	PID_Calculate@setpoint,w
 10250  0321  00F8               	movwf	___awtoft@c
 10251  0322  3189  213E  3183   	fcall	___awtoft
 10252  0325  0878               	movf	?___awtoft,w
 10253  0326  0020               	movlb	0	; select bank0
 10254  0327  00B3               	movwf	___ftadd@f2
 10255  0328  0879               	movf	?___awtoft+1,w
 10256  0329  00B4               	movwf	___ftadd@f2+1
 10257  032A  087A               	movf	?___awtoft+2,w
 10258  032B  00B5               	movwf	___ftadd@f2+2
 10259  032C  3182  220B  3183   	fcall	___ftadd
 10260  032F  0020               	movlb	0	; select bank0
 10261  0330  0830               	movf	?___ftadd,w
 10262  0331  00DA               	movwf	PID_Calculate@error
 10263  0332  0831               	movf	?___ftadd+1,w
 10264  0333  00DB               	movwf	PID_Calculate@error+1
 10265  0334  0832               	movf	?___ftadd+2,w
 10266  0335  00DC               	movwf	PID_Calculate@error+2
 10267                           
 10268                           ;pid.c: 31: errorValue = error * PID_Kp;
 10269  0336  0021               	movlb	1	; select bank1
 10270  0337  0859               	movf	_PID_Kp^(0+128),w
 10271  0338  0020               	movlb	0	; select bank0
 10272  0339  00A0               	movwf	___ftmul@f1
 10273  033A  0021               	movlb	1	; select bank1
 10274  033B  085A               	movf	(_PID_Kp+1)^(0+128),w
 10275  033C  0020               	movlb	0	; select bank0
 10276  033D  00A1               	movwf	___ftmul@f1+1
 10277  033E  0021               	movlb	1	; select bank1
 10278  033F  085B               	movf	(_PID_Kp+2)^(0+128),w
 10279  0340  0020               	movlb	0	; select bank0
 10280  0341  00A2               	movwf	___ftmul@f1+2
 10281  0342  085A               	movf	PID_Calculate@error,w
 10282  0343  00A3               	movwf	___ftmul@f2
 10283  0344  085B               	movf	PID_Calculate@error+1,w
 10284  0345  00A4               	movwf	___ftmul@f2+1
 10285  0346  085C               	movf	PID_Calculate@error+2,w
 10286  0347  00A5               	movwf	___ftmul@f2+2
 10287  0348  318F  274C  3183   	fcall	___ftmul
 10288  034B  0020               	movlb	0	; select bank0
 10289  034C  0820               	movf	?___ftmul,w
 10290  034D  00CB               	movwf	PID_Calculate@errorValue
 10291  034E  0821               	movf	?___ftmul+1,w
 10292  034F  00CC               	movwf	PID_Calculate@errorValue+1
 10293  0350  0822               	movf	?___ftmul+2,w
 10294  0351  00CD               	movwf	PID_Calculate@errorValue+2
 10295                           
 10296                           ;pid.c: 34: pidIntegrated = pidIntegrated + (error * PID_Ki);
 10297  0352  0021               	movlb	1	; select bank1
 10298  0353  0850               	movf	_pidIntegrated^(0+128),w
 10299  0354  0020               	movlb	0	; select bank0
 10300  0355  00B0               	movwf	___ftadd@f1
 10301  0356  0021               	movlb	1	; select bank1
 10302  0357  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10303  0358  0020               	movlb	0	; select bank0
 10304  0359  00B1               	movwf	___ftadd@f1+1
 10305  035A  0021               	movlb	1	; select bank1
 10306  035B  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10307  035C  0020               	movlb	0	; select bank0
 10308  035D  00B2               	movwf	___ftadd@f1+2
 10309  035E  0021               	movlb	1	; select bank1
 10310  035F  0856               	movf	_PID_Ki^(0+128),w
 10311  0360  0020               	movlb	0	; select bank0
 10312  0361  00A0               	movwf	___ftmul@f1
 10313  0362  0021               	movlb	1	; select bank1
 10314  0363  0857               	movf	(_PID_Ki+1)^(0+128),w
 10315  0364  0020               	movlb	0	; select bank0
 10316  0365  00A1               	movwf	___ftmul@f1+1
 10317  0366  0021               	movlb	1	; select bank1
 10318  0367  0858               	movf	(_PID_Ki+2)^(0+128),w
 10319  0368  0020               	movlb	0	; select bank0
 10320  0369  00A2               	movwf	___ftmul@f1+2
 10321  036A  085A               	movf	PID_Calculate@error,w
 10322  036B  00A3               	movwf	___ftmul@f2
 10323  036C  085B               	movf	PID_Calculate@error+1,w
 10324  036D  00A4               	movwf	___ftmul@f2+1
 10325  036E  085C               	movf	PID_Calculate@error+2,w
 10326  036F  00A5               	movwf	___ftmul@f2+2
 10327  0370  318F  274C  3183   	fcall	___ftmul
 10328  0373  0020               	movlb	0	; select bank0
 10329  0374  0820               	movf	?___ftmul,w
 10330  0375  00B3               	movwf	___ftadd@f2
 10331  0376  0821               	movf	?___ftmul+1,w
 10332  0377  00B4               	movwf	___ftadd@f2+1
 10333  0378  0822               	movf	?___ftmul+2,w
 10334  0379  00B5               	movwf	___ftadd@f2+2
 10335  037A  3182  220B  3183   	fcall	___ftadd
 10336  037D  0020               	movlb	0	; select bank0
 10337  037E  0830               	movf	?___ftadd,w
 10338  037F  0021               	movlb	1	; select bank1
 10339  0380  00D0               	movwf	_pidIntegrated^(0+128)
 10340  0381  0020               	movlb	0	; select bank0
 10341  0382  0831               	movf	?___ftadd+1,w
 10342  0383  0021               	movlb	1	; select bank1
 10343  0384  00D1               	movwf	(_pidIntegrated+1)^(0+128)
 10344  0385  0020               	movlb	0	; select bank0
 10345  0386  0832               	movf	?___ftadd+2,w
 10346  0387  0021               	movlb	1	; select bank1
 10347  0388  00D2               	movwf	(_pidIntegrated+2)^(0+128)
 10348                           
 10349                           ;pid.c: 36: if (pidIntegrated< pidMinOutput)
 10350  0389  0850               	movf	_pidIntegrated^(0+128),w
 10351  038A  0020               	movlb	0	; select bank0
 10352  038B  00BD               	movwf	___ftge@ff1
 10353  038C  0021               	movlb	1	; select bank1
 10354  038D  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10355  038E  0020               	movlb	0	; select bank0
 10356  038F  00BE               	movwf	___ftge@ff1+1
 10357  0390  0021               	movlb	1	; select bank1
 10358  0391  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10359  0392  0020               	movlb	0	; select bank0
 10360  0393  00BF               	movwf	___ftge@ff1+2
 10361  0394  0021               	movlb	1	; select bank1
 10362  0395  0863               	movf	(_pidMinOutput+1)^(0+128),w
 10363  0396  00F9               	movwf	___awtoft@c+1
 10364  0397  0862               	movf	_pidMinOutput^(0+128),w
 10365  0398  00F8               	movwf	___awtoft@c
 10366  0399  3189  213E  3183   	fcall	___awtoft
 10367  039C  0878               	movf	?___awtoft,w
 10368  039D  0020               	movlb	0	; select bank0
 10369  039E  00C0               	movwf	___ftge@ff2
 10370  039F  0879               	movf	?___awtoft+1,w
 10371  03A0  00C1               	movwf	___ftge@ff2+1
 10372  03A1  087A               	movf	?___awtoft+2,w
 10373  03A2  00C2               	movwf	___ftge@ff2+2
 10374  03A3  318A  22AE  3183   	fcall	___ftge
 10375  03A6  1803               	btfsc	3,0
 10376  03A7  2BB7               	goto	l283
 10377                           
 10378                           ;pid.c: 37: {
 10379                           ;pid.c: 38: pidIntegrated= pidMinOutput;
 10380  03A8  0021               	movlb	1	; select bank1
 10381  03A9  0863               	movf	(_pidMinOutput+1)^(0+128),w
 10382  03AA  00F9               	movwf	___awtoft@c+1
 10383  03AB  0862               	movf	_pidMinOutput^(0+128),w
 10384  03AC  00F8               	movwf	___awtoft@c
 10385  03AD  3189  213E  3183   	fcall	___awtoft
 10386  03B0  0878               	movf	?___awtoft,w
 10387  03B1  0021               	movlb	1	; select bank1
 10388  03B2  00D0               	movwf	_pidIntegrated^(0+128)
 10389  03B3  0879               	movf	?___awtoft+1,w
 10390  03B4  00D1               	movwf	(_pidIntegrated+1)^(0+128)
 10391  03B5  087A               	movf	?___awtoft+2,w
 10392  03B6  00D2               	movwf	(_pidIntegrated+2)^(0+128)
 10393  03B7                     l283:	
 10394                           
 10395                           ;pid.c: 39: }
 10396                           ;pid.c: 41: if (pidIntegrated> pidMaxOutput)
 10397  03B7  0021               	movlb	1	; select bank1
 10398  03B8  0861               	movf	(_pidMaxOutput+1)^(0+128),w
 10399  03B9  00F9               	movwf	___awtoft@c+1
 10400  03BA  0860               	movf	_pidMaxOutput^(0+128),w
 10401  03BB  00F8               	movwf	___awtoft@c
 10402  03BC  3189  213E  3183   	fcall	___awtoft
 10403  03BF  0878               	movf	?___awtoft,w
 10404  03C0  0020               	movlb	0	; select bank0
 10405  03C1  00BD               	movwf	___ftge@ff1
 10406  03C2  0879               	movf	?___awtoft+1,w
 10407  03C3  00BE               	movwf	___ftge@ff1+1
 10408  03C4  087A               	movf	?___awtoft+2,w
 10409  03C5  00BF               	movwf	___ftge@ff1+2
 10410  03C6  0021               	movlb	1	; select bank1
 10411  03C7  0850               	movf	_pidIntegrated^(0+128),w
 10412  03C8  0020               	movlb	0	; select bank0
 10413  03C9  00C0               	movwf	___ftge@ff2
 10414  03CA  0021               	movlb	1	; select bank1
 10415  03CB  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10416  03CC  0020               	movlb	0	; select bank0
 10417  03CD  00C1               	movwf	___ftge@ff2+1
 10418  03CE  0021               	movlb	1	; select bank1
 10419  03CF  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10420  03D0  0020               	movlb	0	; select bank0
 10421  03D1  00C2               	movwf	___ftge@ff2+2
 10422  03D2  318A  22AE  3183   	fcall	___ftge
 10423  03D5  1803               	btfsc	3,0
 10424  03D6  2BE6               	goto	l284
 10425                           
 10426                           ;pid.c: 42: {
 10427                           ;pid.c: 43: pidIntegrated= pidMaxOutput;
 10428  03D7  0021               	movlb	1	; select bank1
 10429  03D8  0861               	movf	(_pidMaxOutput+1)^(0+128),w
 10430  03D9  00F9               	movwf	___awtoft@c+1
 10431  03DA  0860               	movf	_pidMaxOutput^(0+128),w
 10432  03DB  00F8               	movwf	___awtoft@c
 10433  03DC  3189  213E  3183   	fcall	___awtoft
 10434  03DF  0878               	movf	?___awtoft,w
 10435  03E0  0021               	movlb	1	; select bank1
 10436  03E1  00D0               	movwf	_pidIntegrated^(0+128)
 10437  03E2  0879               	movf	?___awtoft+1,w
 10438  03E3  00D1               	movwf	(_pidIntegrated+1)^(0+128)
 10439  03E4  087A               	movf	?___awtoft+2,w
 10440  03E5  00D2               	movwf	(_pidIntegrated+2)^(0+128)
 10441  03E6                     l284:	
 10442                           
 10443                           ;pid.c: 44: }
 10444                           ;pid.c: 47: derivativeValue=(error-pidPrevError)*PID_Kd;
 10445  03E6  0021               	movlb	1	; select bank1
 10446  03E7  0853               	movf	_PID_Kd^(0+128),w
 10447  03E8  0020               	movlb	0	; select bank0
 10448  03E9  00A0               	movwf	___ftmul@f1
 10449  03EA  0021               	movlb	1	; select bank1
 10450  03EB  0854               	movf	(_PID_Kd+1)^(0+128),w
 10451  03EC  0020               	movlb	0	; select bank0
 10452  03ED  00A1               	movwf	___ftmul@f1+1
 10453  03EE  0021               	movlb	1	; select bank1
 10454  03EF  0855               	movf	(_PID_Kd+2)^(0+128),w
 10455  03F0  0020               	movlb	0	; select bank0
 10456  03F1  00A2               	movwf	___ftmul@f1+2
 10457  03F2  085A               	movf	PID_Calculate@error,w
 10458  03F3  00B0               	movwf	___ftadd@f1
 10459  03F4  085B               	movf	PID_Calculate@error+1,w
 10460  03F5  00B1               	movwf	___ftadd@f1+1
 10461  03F6  085C               	movf	PID_Calculate@error+2,w
 10462  03F7  00B2               	movwf	___ftadd@f1+2
 10463  03F8  0854               	movf	PID_Calculate@pidPrevError,w
 10464  03F9  00F0               	movwf	___ftneg@f1
 10465  03FA  0855               	movf	PID_Calculate@pidPrevError+1,w
 10466  03FB  00F1               	movwf	___ftneg@f1+1
 10467  03FC  0856               	movf	PID_Calculate@pidPrevError+2,w
 10468  03FD  00F2               	movwf	___ftneg@f1+2
 10469  03FE  3197  27E4  3183   	fcall	___ftneg
 10470  0401  0870               	movf	?___ftneg,w
 10471  0402  0020               	movlb	0	; select bank0
 10472  0403  00B3               	movwf	___ftadd@f2
 10473  0404  0871               	movf	?___ftneg+1,w
 10474  0405  00B4               	movwf	___ftadd@f2+1
 10475  0406  0872               	movf	?___ftneg+2,w
 10476  0407  00B5               	movwf	___ftadd@f2+2
 10477  0408  3182  220B  3183   	fcall	___ftadd
 10478  040B  0020               	movlb	0	; select bank0
 10479  040C  0830               	movf	?___ftadd,w
 10480  040D  00A3               	movwf	___ftmul@f2
 10481  040E  0831               	movf	?___ftadd+1,w
 10482  040F  00A4               	movwf	___ftmul@f2+1
 10483  0410  0832               	movf	?___ftadd+2,w
 10484  0411  00A5               	movwf	___ftmul@f2+2
 10485  0412  318F  274C  3183   	fcall	___ftmul
 10486  0415  0020               	movlb	0	; select bank0
 10487  0416  0820               	movf	?___ftmul,w
 10488  0417  00D1               	movwf	PID_Calculate@derivativeValue
 10489  0418  0821               	movf	?___ftmul+1,w
 10490  0419  00D2               	movwf	PID_Calculate@derivativeValue+1
 10491  041A  0822               	movf	?___ftmul+2,w
 10492  041B  00D3               	movwf	PID_Calculate@derivativeValue+2
 10493                           
 10494                           ;pid.c: 48: pidPrevError = error;
 10495  041C  085A               	movf	PID_Calculate@error,w
 10496  041D  00D4               	movwf	PID_Calculate@pidPrevError
 10497  041E  085B               	movf	PID_Calculate@error+1,w
 10498  041F  00D5               	movwf	PID_Calculate@pidPrevError+1
 10499  0420  085C               	movf	PID_Calculate@error+2,w
 10500  0421  00D6               	movwf	PID_Calculate@pidPrevError+2
 10501                           
 10502                           ;pid.c: 51: Result = errorValue + pidIntegrated+ derivativeValue;
 10503  0422  0021               	movlb	1	; select bank1
 10504  0423  0850               	movf	_pidIntegrated^(0+128),w
 10505  0424  0020               	movlb	0	; select bank0
 10506  0425  00B0               	movwf	___ftadd@f1
 10507  0426  0021               	movlb	1	; select bank1
 10508  0427  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10509  0428  0020               	movlb	0	; select bank0
 10510  0429  00B1               	movwf	___ftadd@f1+1
 10511  042A  0021               	movlb	1	; select bank1
 10512  042B  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10513  042C  0020               	movlb	0	; select bank0
 10514  042D  00B2               	movwf	___ftadd@f1+2
 10515  042E  084B               	movf	PID_Calculate@errorValue,w
 10516  042F  00B3               	movwf	___ftadd@f2
 10517  0430  084C               	movf	PID_Calculate@errorValue+1,w
 10518  0431  00B4               	movwf	___ftadd@f2+1
 10519  0432  084D               	movf	PID_Calculate@errorValue+2,w
 10520  0433  00B5               	movwf	___ftadd@f2+2
 10521  0434  3182  220B  3183   	fcall	___ftadd
 10522  0437  0020               	movlb	0	; select bank0
 10523  0438  0830               	movf	?___ftadd,w
 10524  0439  00CE               	movwf	_PID_Calculate$1061
 10525  043A  0831               	movf	?___ftadd+1,w
 10526  043B  00CF               	movwf	_PID_Calculate$1061+1
 10527  043C  0832               	movf	?___ftadd+2,w
 10528  043D  00D0               	movwf	_PID_Calculate$1061+2
 10529                           
 10530                           ;pid.c: 51: Result = errorValue + pidIntegrated+ derivativeValue;
 10531  043E  0851               	movf	PID_Calculate@derivativeValue,w
 10532  043F  00B0               	movwf	___ftadd@f1
 10533  0440  0852               	movf	PID_Calculate@derivativeValue+1,w
 10534  0441  00B1               	movwf	___ftadd@f1+1
 10535  0442  0853               	movf	PID_Calculate@derivativeValue+2,w
 10536  0443  00B2               	movwf	___ftadd@f1+2
 10537  0444  084E               	movf	_PID_Calculate$1061,w
 10538  0445  00B3               	movwf	___ftadd@f2
 10539  0446  084F               	movf	_PID_Calculate$1061+1,w
 10540  0447  00B4               	movwf	___ftadd@f2+1
 10541  0448  0850               	movf	_PID_Calculate$1061+2,w
 10542  0449  00B5               	movwf	___ftadd@f2+2
 10543  044A  3182  220B  3183   	fcall	___ftadd
 10544  044D  0020               	movlb	0	; select bank0
 10545  044E  0830               	movf	?___ftadd,w
 10546  044F  00D7               	movwf	PID_Calculate@Result
 10547  0450  0831               	movf	?___ftadd+1,w
 10548  0451  00D8               	movwf	PID_Calculate@Result+1
 10549  0452  0832               	movf	?___ftadd+2,w
 10550  0453  00D9               	movwf	PID_Calculate@Result+2
 10551                           
 10552                           ;pid.c: 53: if (Result < pidMinOutput)
 10553  0454  0857               	movf	PID_Calculate@Result,w
 10554  0455  00BD               	movwf	___ftge@ff1
 10555  0456  0858               	movf	PID_Calculate@Result+1,w
 10556  0457  00BE               	movwf	___ftge@ff1+1
 10557  0458  0859               	movf	PID_Calculate@Result+2,w
 10558  0459  00BF               	movwf	___ftge@ff1+2
 10559  045A  0021               	movlb	1	; select bank1
 10560  045B  0863               	movf	(_pidMinOutput+1)^(0+128),w
 10561  045C  00F9               	movwf	___awtoft@c+1
 10562  045D  0862               	movf	_pidMinOutput^(0+128),w
 10563  045E  00F8               	movwf	___awtoft@c
 10564  045F  3189  213E  3183   	fcall	___awtoft
 10565  0462  0878               	movf	?___awtoft,w
 10566  0463  0020               	movlb	0	; select bank0
 10567  0464  00C0               	movwf	___ftge@ff2
 10568  0465  0879               	movf	?___awtoft+1,w
 10569  0466  00C1               	movwf	___ftge@ff2+1
 10570  0467  087A               	movf	?___awtoft+2,w
 10571  0468  00C2               	movwf	___ftge@ff2+2
 10572  0469  318A  22AE  3183   	fcall	___ftge
 10573  046C  1803               	btfsc	3,0
 10574  046D  2C7D               	goto	l285
 10575                           
 10576                           ;pid.c: 54: {
 10577                           ;pid.c: 55: Result = pidMinOutput;
 10578  046E  0021               	movlb	1	; select bank1
 10579  046F  0863               	movf	(_pidMinOutput+1)^(0+128),w
 10580  0470  00F9               	movwf	___awtoft@c+1
 10581  0471  0862               	movf	_pidMinOutput^(0+128),w
 10582  0472  00F8               	movwf	___awtoft@c
 10583  0473  3189  213E  3183   	fcall	___awtoft
 10584  0476  0878               	movf	?___awtoft,w
 10585  0477  0020               	movlb	0	; select bank0
 10586  0478  00D7               	movwf	PID_Calculate@Result
 10587  0479  0879               	movf	?___awtoft+1,w
 10588  047A  00D8               	movwf	PID_Calculate@Result+1
 10589  047B  087A               	movf	?___awtoft+2,w
 10590  047C  00D9               	movwf	PID_Calculate@Result+2
 10591  047D                     l285:	
 10592                           
 10593                           ;pid.c: 56: }
 10594                           ;pid.c: 58: if (Result > pidMaxOutput)
 10595  047D  0021               	movlb	1	; select bank1
 10596  047E  0861               	movf	(_pidMaxOutput+1)^(0+128),w
 10597  047F  00F9               	movwf	___awtoft@c+1
 10598  0480  0860               	movf	_pidMaxOutput^(0+128),w
 10599  0481  00F8               	movwf	___awtoft@c
 10600  0482  3189  213E  3183   	fcall	___awtoft
 10601  0485  0878               	movf	?___awtoft,w
 10602  0486  0020               	movlb	0	; select bank0
 10603  0487  00BD               	movwf	___ftge@ff1
 10604  0488  0879               	movf	?___awtoft+1,w
 10605  0489  00BE               	movwf	___ftge@ff1+1
 10606  048A  087A               	movf	?___awtoft+2,w
 10607  048B  00BF               	movwf	___ftge@ff1+2
 10608  048C  0857               	movf	PID_Calculate@Result,w
 10609  048D  00C0               	movwf	___ftge@ff2
 10610  048E  0858               	movf	PID_Calculate@Result+1,w
 10611  048F  00C1               	movwf	___ftge@ff2+1
 10612  0490  0859               	movf	PID_Calculate@Result+2,w
 10613  0491  00C2               	movwf	___ftge@ff2+2
 10614  0492  318A  22AE  3183   	fcall	___ftge
 10615  0495  1803               	btfsc	3,0
 10616  0496  2CA5               	goto	l2750
 10617                           
 10618                           ;pid.c: 59: {
 10619                           ;pid.c: 60: Result = pidMaxOutput;
 10620  0497  0021               	movlb	1	; select bank1
 10621  0498  0861               	movf	(_pidMaxOutput+1)^(0+128),w
 10622  0499  00F9               	movwf	___awtoft@c+1
 10623  049A  0860               	movf	_pidMaxOutput^(0+128),w
 10624  049B  00F8               	movwf	___awtoft@c
 10625  049C  3189  213E         	fcall	___awtoft
 10626  049E  0878               	movf	?___awtoft,w
 10627  049F  0020               	movlb	0	; select bank0
 10628  04A0  00D7               	movwf	PID_Calculate@Result
 10629  04A1  0879               	movf	?___awtoft+1,w
 10630  04A2  00D8               	movwf	PID_Calculate@Result+1
 10631  04A3  087A               	movf	?___awtoft+2,w
 10632  04A4  00D9               	movwf	PID_Calculate@Result+2
 10633  04A5                     l2750:	
 10634                           
 10635                           ;pid.c: 61: }
 10636                           ;pid.c: 63: return (Result);
 10637  04A5  0020               	movlb	0	; select bank0
 10638  04A6  0857               	movf	PID_Calculate@Result,w
 10639  04A7  00C6               	movwf	?_PID_Calculate
 10640  04A8  0858               	movf	PID_Calculate@Result+1,w
 10641  04A9  00C7               	movwf	?_PID_Calculate+1
 10642  04AA  0859               	movf	PID_Calculate@Result+2,w
 10643  04AB  00C8               	movwf	?_PID_Calculate+2
 10644  04AC  0008               	return
 10645  04AD                     __end_of_PID_Calculate:	
 10646                           
 10647                           	psect	text35
 10648  17E4                     __ptext35:	
 10649 ;; *************** function ___ftneg *****************
 10650 ;; Defined at:
 10651 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;  f1              3    0[COMMON] float 
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  3    0[COMMON] float 
 10658 ;; Registers used:
 10659 ;;		wreg
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10665 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;Total ram usage:        3 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; This function calls:
 10672 ;;		Nothing
 10673 ;; This function is called by:
 10674 ;;		_PID_Calculate
 10675 ;;		_main
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           
 10680                           ;psect for function ___ftneg
 10681  17E4                     ___ftneg:	
 10682                           
 10683                           ;incstack = 0
 10684                           ; Regs used in ___ftneg: [wreg]
 10685  17E4  0872               	movf	___ftneg@f1+2,w
 10686  17E5  0471               	iorwf	___ftneg@f1+1,w
 10687  17E6  0470               	iorwf	___ftneg@f1,w
 10688  17E7  1903               	skipnz
 10689  17E8  0008               	return
 10690  17E9  3080               	movlw	128
 10691  17EA  06F2               	xorwf	___ftneg@f1+2,f
 10692  17EB  0008               	return
 10693  17EC                     __end_of___ftneg:	
 10694                           
 10695                           	psect	text36
 10696  0F4C                     __ptext36:	
 10697 ;; *************** function ___ftmul *****************
 10698 ;; Defined at:
 10699 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
 10700 ;; Parameters:    Size  Location     Type
 10701 ;;  f1              3    0[BANK0 ] float 
 10702 ;;  f2              3    3[BANK0 ] float 
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 10705 ;;  sign            1   15[BANK0 ] unsigned char 
 10706 ;;  cntr            1   14[BANK0 ] unsigned char 
 10707 ;;  exp             1   10[BANK0 ] unsigned char 
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  3    0[BANK0 ] float 
 10710 ;; Registers used:
 10711 ;;		wreg, status,2, status,0, pclath, cstack
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10717 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10718 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;Total ram usage:       16 bytes
 10722 ;; Hardware stack levels used:    1
 10723 ;; Hardware stack levels required when called:    1
 10724 ;; This function calls:
 10725 ;;		___ftpack
 10726 ;; This function is called by:
 10727 ;;		_PID_Calculate
 10728 ;;		_main
 10729 ;;		_log
 10730 ;;		_eval_poly
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734                           
 10735                           ;psect for function ___ftmul
 10736  0F4C                     ___ftmul:	
 10737                           
 10738                           ;incstack = 0
 10739                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 10740  0F4C  0020               	movlb	0	; select bank0
 10741  0F4D  0820               	movf	___ftmul@f1,w
 10742  0F4E  00A6               	movwf	??___ftmul
 10743  0F4F  0821               	movf	___ftmul@f1+1,w
 10744  0F50  00A7               	movwf	??___ftmul+1
 10745  0F51  0822               	movf	___ftmul@f1+2,w
 10746  0F52  00A8               	movwf	??___ftmul+2
 10747  0F53  1003               	clrc
 10748  0F54  0D27               	rlf	??___ftmul+1,w
 10749  0F55  0D28               	rlf	??___ftmul+2,w
 10750  0F56  00A9               	movwf	??___ftmul+3
 10751  0F57  0829               	movf	??___ftmul+3,w
 10752  0F58  00AA               	movwf	___ftmul@exp
 10753  0F59  082A               	movf	___ftmul@exp,w
 10754  0F5A  1D03               	btfss	3,2
 10755  0F5B  2F63               	goto	l2348
 10756  0F5C  3000               	movlw	0
 10757  0F5D  00A0               	movwf	?___ftmul
 10758  0F5E  3000               	movlw	0
 10759  0F5F  00A1               	movwf	?___ftmul+1
 10760  0F60  3000               	movlw	0
 10761  0F61  00A2               	movwf	?___ftmul+2
 10762  0F62  0008               	return
 10763  0F63                     l2348:	
 10764  0F63  0823               	movf	___ftmul@f2,w
 10765  0F64  00A6               	movwf	??___ftmul
 10766  0F65  0824               	movf	___ftmul@f2+1,w
 10767  0F66  00A7               	movwf	??___ftmul+1
 10768  0F67  0825               	movf	___ftmul@f2+2,w
 10769  0F68  00A8               	movwf	??___ftmul+2
 10770  0F69  1003               	clrc
 10771  0F6A  0D27               	rlf	??___ftmul+1,w
 10772  0F6B  0D28               	rlf	??___ftmul+2,w
 10773  0F6C  00A9               	movwf	??___ftmul+3
 10774  0F6D  0829               	movf	??___ftmul+3,w
 10775  0F6E  00AF               	movwf	___ftmul@sign
 10776  0F6F  082F               	movf	___ftmul@sign,w
 10777  0F70  1D03               	btfss	3,2
 10778  0F71  2F79               	goto	l2354
 10779  0F72  3000               	movlw	0
 10780  0F73  00A0               	movwf	?___ftmul
 10781  0F74  3000               	movlw	0
 10782  0F75  00A1               	movwf	?___ftmul+1
 10783  0F76  3000               	movlw	0
 10784  0F77  00A2               	movwf	?___ftmul+2
 10785  0F78  0008               	return
 10786  0F79                     l2354:	
 10787  0F79  082F               	movf	___ftmul@sign,w
 10788  0F7A  3E7B               	addlw	123
 10789  0F7B  00A6               	movwf	??___ftmul
 10790  0F7C  0826               	movf	??___ftmul,w
 10791  0F7D  07AA               	addwf	___ftmul@exp,f
 10792  0F7E  0820               	movf	___ftmul@f1,w
 10793  0F7F  00A6               	movwf	??___ftmul
 10794  0F80  0821               	movf	___ftmul@f1+1,w
 10795  0F81  00A7               	movwf	??___ftmul+1
 10796  0F82  0822               	movf	___ftmul@f1+2,w
 10797  0F83  00A8               	movwf	??___ftmul+2
 10798  0F84  3010               	movlw	16
 10799  0F85                     u2435:	
 10800  0F85  36A8               	lsrf	??___ftmul+2,f
 10801  0F86  0CA7               	rrf	??___ftmul+1,f
 10802  0F87  0CA6               	rrf	??___ftmul,f
 10803  0F88  0B89               	decfsz	9,f
 10804  0F89  2F85               	goto	u2435
 10805  0F8A  0826               	movf	??___ftmul,w
 10806  0F8B  00A9               	movwf	??___ftmul+3
 10807  0F8C  0829               	movf	??___ftmul+3,w
 10808  0F8D  00AF               	movwf	___ftmul@sign
 10809  0F8E  0823               	movf	___ftmul@f2,w
 10810  0F8F  00A6               	movwf	??___ftmul
 10811  0F90  0824               	movf	___ftmul@f2+1,w
 10812  0F91  00A7               	movwf	??___ftmul+1
 10813  0F92  0825               	movf	___ftmul@f2+2,w
 10814  0F93  00A8               	movwf	??___ftmul+2
 10815  0F94  3010               	movlw	16
 10816  0F95                     u2445:	
 10817  0F95  36A8               	lsrf	??___ftmul+2,f
 10818  0F96  0CA7               	rrf	??___ftmul+1,f
 10819  0F97  0CA6               	rrf	??___ftmul,f
 10820  0F98  0B89               	decfsz	9,f
 10821  0F99  2F95               	goto	u2445
 10822  0F9A  0826               	movf	??___ftmul,w
 10823  0F9B  00A9               	movwf	??___ftmul+3
 10824  0F9C  0829               	movf	??___ftmul+3,w
 10825  0F9D  06AF               	xorwf	___ftmul@sign,f
 10826  0F9E  3080               	movlw	128
 10827  0F9F  00A6               	movwf	??___ftmul
 10828  0FA0  0826               	movf	??___ftmul,w
 10829  0FA1  05AF               	andwf	___ftmul@sign,f
 10830  0FA2  17A1               	bsf	___ftmul@f1+1,7
 10831  0FA3  17A4               	bsf	___ftmul@f2+1,7
 10832  0FA4  30FF               	movlw	255
 10833  0FA5  05A3               	andwf	___ftmul@f2,f
 10834  0FA6  30FF               	movlw	255
 10835  0FA7  05A4               	andwf	___ftmul@f2+1,f
 10836  0FA8  3000               	movlw	0
 10837  0FA9  05A5               	andwf	___ftmul@f2+2,f
 10838  0FAA  3000               	movlw	0
 10839  0FAB  00AB               	movwf	___ftmul@f3_as_product
 10840  0FAC  3000               	movlw	0
 10841  0FAD  00AC               	movwf	___ftmul@f3_as_product+1
 10842  0FAE  3000               	movlw	0
 10843  0FAF  00AD               	movwf	___ftmul@f3_as_product+2
 10844  0FB0  3007               	movlw	7
 10845  0FB1  00A6               	movwf	??___ftmul
 10846  0FB2  0826               	movf	??___ftmul,w
 10847  0FB3  00AE               	movwf	___ftmul@cntr
 10848  0FB4                     l2366:	
 10849  0FB4  1C20               	btfss	___ftmul@f1,0
 10850  0FB5  2FBC               	goto	l2370
 10851  0FB6  0823               	movf	___ftmul@f2,w
 10852  0FB7  07AB               	addwf	___ftmul@f3_as_product,f
 10853  0FB8  0824               	movf	___ftmul@f2+1,w
 10854  0FB9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 10855  0FBA  0825               	movf	___ftmul@f2+2,w
 10856  0FBB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 10857  0FBC                     l2370:	
 10858  0FBC  3001               	movlw	1
 10859  0FBD                     u2465:	
 10860  0FBD  36A2               	lsrf	___ftmul@f1+2,f
 10861  0FBE  0CA1               	rrf	___ftmul@f1+1,f
 10862  0FBF  0CA0               	rrf	___ftmul@f1,f
 10863  0FC0  0B89               	decfsz	9,f
 10864  0FC1  2FBD               	goto	u2465
 10865  0FC2  3001               	movlw	1
 10866  0FC3                     u2475:	
 10867  0FC3  35A3               	lslf	___ftmul@f2,f
 10868  0FC4  0DA4               	rlf	___ftmul@f2+1,f
 10869  0FC5  0DA5               	rlf	___ftmul@f2+2,f
 10870  0FC6  0B89               	decfsz	9,f
 10871  0FC7  2FC3               	goto	u2475
 10872  0FC8  3001               	movlw	1
 10873  0FC9  02AE               	subwf	___ftmul@cntr,f
 10874  0FCA  1D03               	btfss	3,2
 10875  0FCB  2FB4               	goto	l2366
 10876  0FCC  3009               	movlw	9
 10877  0FCD  00A6               	movwf	??___ftmul
 10878  0FCE  0826               	movf	??___ftmul,w
 10879  0FCF  00AE               	movwf	___ftmul@cntr
 10880  0FD0                     l2378:	
 10881  0FD0  1C20               	btfss	___ftmul@f1,0
 10882  0FD1  2FD8               	goto	l2382
 10883  0FD2  0823               	movf	___ftmul@f2,w
 10884  0FD3  07AB               	addwf	___ftmul@f3_as_product,f
 10885  0FD4  0824               	movf	___ftmul@f2+1,w
 10886  0FD5  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 10887  0FD6  0825               	movf	___ftmul@f2+2,w
 10888  0FD7  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 10889  0FD8                     l2382:	
 10890  0FD8  3001               	movlw	1
 10891  0FD9                     u2505:	
 10892  0FD9  36A2               	lsrf	___ftmul@f1+2,f
 10893  0FDA  0CA1               	rrf	___ftmul@f1+1,f
 10894  0FDB  0CA0               	rrf	___ftmul@f1,f
 10895  0FDC  0B89               	decfsz	9,f
 10896  0FDD  2FD9               	goto	u2505
 10897  0FDE  3001               	movlw	1
 10898  0FDF                     u2515:	
 10899  0FDF  36AD               	lsrf	___ftmul@f3_as_product+2,f
 10900  0FE0  0CAC               	rrf	___ftmul@f3_as_product+1,f
 10901  0FE1  0CAB               	rrf	___ftmul@f3_as_product,f
 10902  0FE2  0B89               	decfsz	9,f
 10903  0FE3  2FDF               	goto	u2515
 10904  0FE4  3001               	movlw	1
 10905  0FE5  02AE               	subwf	___ftmul@cntr,f
 10906  0FE6  1D03               	btfss	3,2
 10907  0FE7  2FD0               	goto	l2378
 10908  0FE8  082B               	movf	___ftmul@f3_as_product,w
 10909  0FE9  00F0               	movwf	___ftpack@arg
 10910  0FEA  082C               	movf	___ftmul@f3_as_product+1,w
 10911  0FEB  00F1               	movwf	___ftpack@arg+1
 10912  0FEC  082D               	movf	___ftmul@f3_as_product+2,w
 10913  0FED  00F2               	movwf	___ftpack@arg+2
 10914  0FEE  082A               	movf	___ftmul@exp,w
 10915  0FEF  00A6               	movwf	??___ftmul
 10916  0FF0  0826               	movf	??___ftmul,w
 10917  0FF1  00F3               	movwf	___ftpack@exp
 10918  0FF2  082F               	movf	___ftmul@sign,w
 10919  0FF3  00A7               	movwf	??___ftmul+1
 10920  0FF4  0827               	movf	??___ftmul+1,w
 10921  0FF5  00F4               	movwf	___ftpack@sign
 10922  0FF6  318C  241F         	fcall	___ftpack
 10923  0FF8  0870               	movf	?___ftpack,w
 10924  0FF9  0020               	movlb	0	; select bank0
 10925  0FFA  00A0               	movwf	?___ftmul
 10926  0FFB  0871               	movf	?___ftpack+1,w
 10927  0FFC  00A1               	movwf	?___ftmul+1
 10928  0FFD  0872               	movf	?___ftpack+2,w
 10929  0FFE  00A2               	movwf	?___ftmul+2
 10930  0FFF  0008               	return
 10931  1000                     __end_of___ftmul:	
 10932                           
 10933                           	psect	text37
 10934  0AAE                     __ptext37:	
 10935 ;; *************** function ___ftge *****************
 10936 ;; Defined at:
 10937 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  ff1             3   29[BANK0 ] float 
 10940 ;;  ff2             3   32[BANK0 ] float 
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;		None
 10943 ;; Return value:  Size  Location     Type
 10944 ;;		None               void
 10945 ;; Registers used:
 10946 ;;		wreg, status,2, status,0
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10952 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;Total ram usage:        9 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; This function calls:
 10959 ;;		Nothing
 10960 ;; This function is called by:
 10961 ;;		_PID_Calculate
 10962 ;;		_main
 10963 ;;		_log
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           
 10968                           ;psect for function ___ftge
 10969  0AAE                     ___ftge:	
 10970                           
 10971                           ;incstack = 0
 10972                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10973  0AAE  0020               	movlb	0	; select bank0
 10974  0AAF  1FBF               	btfss	___ftge@ff1+2,7
 10975  0AB0  2AC5               	goto	l2630
 10976  0AB1  093D               	comf	___ftge@ff1,w
 10977  0AB2  00C3               	movwf	??___ftge
 10978  0AB3  093E               	comf	___ftge@ff1+1,w
 10979  0AB4  00C4               	movwf	??___ftge+1
 10980  0AB5  093F               	comf	___ftge@ff1+2,w
 10981  0AB6  00C5               	movwf	??___ftge+2
 10982  0AB7  0AC3               	incf	??___ftge,f
 10983  0AB8  1903               	skipnz
 10984  0AB9  0AC4               	incf	??___ftge+1,f
 10985  0ABA  1903               	skipnz
 10986  0ABB  0AC5               	incf	??___ftge+2,f
 10987  0ABC  3000               	movlw	0
 10988  0ABD  0743               	addwf	??___ftge,w
 10989  0ABE  00BD               	movwf	___ftge@ff1
 10990  0ABF  3000               	movlw	0
 10991  0AC0  3D44               	addwfc	??___ftge+1,w
 10992  0AC1  00BE               	movwf	___ftge@ff1+1
 10993  0AC2  3080               	movlw	128
 10994  0AC3  3D45               	addwfc	??___ftge+2,w
 10995  0AC4  00BF               	movwf	___ftge@ff1+2
 10996  0AC5                     l2630:	
 10997  0AC5  1FC2               	btfss	___ftge@ff2+2,7
 10998  0AC6  2ADB               	goto	l2634
 10999  0AC7  0940               	comf	___ftge@ff2,w
 11000  0AC8  00C3               	movwf	??___ftge
 11001  0AC9  0941               	comf	___ftge@ff2+1,w
 11002  0ACA  00C4               	movwf	??___ftge+1
 11003  0ACB  0942               	comf	___ftge@ff2+2,w
 11004  0ACC  00C5               	movwf	??___ftge+2
 11005  0ACD  0AC3               	incf	??___ftge,f
 11006  0ACE  1903               	skipnz
 11007  0ACF  0AC4               	incf	??___ftge+1,f
 11008  0AD0  1903               	skipnz
 11009  0AD1  0AC5               	incf	??___ftge+2,f
 11010  0AD2  3000               	movlw	0
 11011  0AD3  0743               	addwf	??___ftge,w
 11012  0AD4  00C0               	movwf	___ftge@ff2
 11013  0AD5  3000               	movlw	0
 11014  0AD6  3D44               	addwfc	??___ftge+1,w
 11015  0AD7  00C1               	movwf	___ftge@ff2+1
 11016  0AD8  3080               	movlw	128
 11017  0AD9  3D45               	addwfc	??___ftge+2,w
 11018  0ADA  00C2               	movwf	___ftge@ff2+2
 11019  0ADB                     l2634:	
 11020  0ADB  3080               	movlw	128
 11021  0ADC  06BF               	xorwf	___ftge@ff1+2,f
 11022  0ADD  3080               	movlw	128
 11023  0ADE  06C2               	xorwf	___ftge@ff2+2,f
 11024  0ADF  0842               	movf	___ftge@ff2+2,w
 11025  0AE0  023F               	subwf	___ftge@ff1+2,w
 11026  0AE1  1D03               	skipz
 11027  0AE2  0008               	return
 11028  0AE3  0841               	movf	___ftge@ff2+1,w
 11029  0AE4  023E               	subwf	___ftge@ff1+1,w
 11030  0AE5  1D03               	skipz
 11031  0AE6  0008               	return
 11032  0AE7  0840               	movf	___ftge@ff2,w
 11033  0AE8  023D               	subwf	___ftge@ff1,w
 11034  0AE9  0008               	return
 11035  0AEA                     __end_of___ftge:	
 11036                           
 11037                           	psect	text38
 11038  020B                     __ptext38:	
 11039 ;; *************** function ___ftadd *****************
 11040 ;; Defined at:
 11041 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;  f1              3   16[BANK0 ] float 
 11044 ;;  f2              3   19[BANK0 ] float 
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;  exp1            1   28[BANK0 ] unsigned char 
 11047 ;;  exp2            1   27[BANK0 ] unsigned char 
 11048 ;;  sign            1   26[BANK0 ] unsigned char 
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  3   16[BANK0 ] float 
 11051 ;; Registers used:
 11052 ;;		wreg, status,2, status,0, pclath, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11058 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;Total ram usage:       13 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; Hardware stack levels required when called:    1
 11065 ;; This function calls:
 11066 ;;		___ftpack
 11067 ;; This function is called by:
 11068 ;;		_PID_Calculate
 11069 ;;		_main
 11070 ;;		___ftsub
 11071 ;;		_log
 11072 ;;		_eval_poly
 11073 ;; This function uses a non-reentrant model
 11074 ;;
 11075                           
 11076                           
 11077                           ;psect for function ___ftadd
 11078  020B                     ___ftadd:	
 11079                           
 11080                           ;incstack = 0
 11081                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 11082  020B  0020               	movlb	0	; select bank0
 11083  020C  0830               	movf	___ftadd@f1,w
 11084  020D  00B6               	movwf	??___ftadd
 11085  020E  0831               	movf	___ftadd@f1+1,w
 11086  020F  00B7               	movwf	??___ftadd+1
 11087  0210  0832               	movf	___ftadd@f1+2,w
 11088  0211  00B8               	movwf	??___ftadd+2
 11089  0212  1003               	clrc
 11090  0213  0D37               	rlf	??___ftadd+1,w
 11091  0214  0D38               	rlf	??___ftadd+2,w
 11092  0215  00B9               	movwf	??___ftadd+3
 11093  0216  0839               	movf	??___ftadd+3,w
 11094  0217  00BC               	movwf	___ftadd@exp1
 11095  0218  0833               	movf	___ftadd@f2,w
 11096  0219  00B6               	movwf	??___ftadd
 11097  021A  0834               	movf	___ftadd@f2+1,w
 11098  021B  00B7               	movwf	??___ftadd+1
 11099  021C  0835               	movf	___ftadd@f2+2,w
 11100  021D  00B8               	movwf	??___ftadd+2
 11101  021E  1003               	clrc
 11102  021F  0D37               	rlf	??___ftadd+1,w
 11103  0220  0D38               	rlf	??___ftadd+2,w
 11104  0221  00B9               	movwf	??___ftadd+3
 11105  0222  0839               	movf	??___ftadd+3,w
 11106  0223  00BB               	movwf	___ftadd@exp2
 11107  0224  083C               	movf	___ftadd@exp1,w
 11108  0225  1903               	btfsc	3,2
 11109  0226  2A33               	goto	l2278
 11110  0227  083B               	movf	___ftadd@exp2,w
 11111  0228  023C               	subwf	___ftadd@exp1,w
 11112  0229  1803               	skipnc
 11113  022A  2A3A               	goto	l2282
 11114  022B  033C               	decf	___ftadd@exp1,w
 11115  022C  3AFF               	xorlw	255
 11116  022D  073B               	addwf	___ftadd@exp2,w
 11117  022E  00B6               	movwf	??___ftadd
 11118  022F  3019               	movlw	25
 11119  0230  0236               	subwf	??___ftadd,w
 11120  0231  1C03               	skipc
 11121  0232  2A3A               	goto	l2282
 11122  0233                     l2278:	
 11123  0233  0833               	movf	___ftadd@f2,w
 11124  0234  00B0               	movwf	?___ftadd
 11125  0235  0834               	movf	___ftadd@f2+1,w
 11126  0236  00B1               	movwf	?___ftadd+1
 11127  0237  0835               	movf	___ftadd@f2+2,w
 11128  0238  00B2               	movwf	?___ftadd+2
 11129  0239  0008               	return
 11130  023A                     l2282:	
 11131  023A  083B               	movf	___ftadd@exp2,w
 11132  023B  1903               	btfsc	3,2
 11133  023C  0008               	return
 11134  023D  083C               	movf	___ftadd@exp1,w
 11135  023E  023B               	subwf	___ftadd@exp2,w
 11136  023F  1803               	skipnc
 11137  0240  2A49               	goto	l2288
 11138  0241  033B               	decf	___ftadd@exp2,w
 11139  0242  3AFF               	xorlw	255
 11140  0243  073C               	addwf	___ftadd@exp1,w
 11141  0244  00B6               	movwf	??___ftadd
 11142  0245  3019               	movlw	25
 11143  0246  0236               	subwf	??___ftadd,w
 11144  0247  1803               	btfsc	3,0
 11145  0248  0008               	return
 11146  0249                     l2288:	
 11147  0249  3006               	movlw	6
 11148  024A  00B6               	movwf	??___ftadd
 11149  024B  0836               	movf	??___ftadd,w
 11150  024C  00BA               	movwf	___ftadd@sign
 11151  024D  1BB2               	btfsc	___ftadd@f1+2,7
 11152  024E  17BA               	bsf	___ftadd@sign,7
 11153  024F  1BB5               	btfsc	___ftadd@f2+2,7
 11154  0250  173A               	bsf	___ftadd@sign,6
 11155  0251  17B1               	bsf	___ftadd@f1+1,7
 11156  0252  30FF               	movlw	255
 11157  0253  05B0               	andwf	___ftadd@f1,f
 11158  0254  30FF               	movlw	255
 11159  0255  05B1               	andwf	___ftadd@f1+1,f
 11160  0256  3000               	movlw	0
 11161  0257  05B2               	andwf	___ftadd@f1+2,f
 11162  0258  17B4               	bsf	___ftadd@f2+1,7
 11163  0259  30FF               	movlw	255
 11164  025A  05B3               	andwf	___ftadd@f2,f
 11165  025B  30FF               	movlw	255
 11166  025C  05B4               	andwf	___ftadd@f2+1,f
 11167  025D  3000               	movlw	0
 11168  025E  05B5               	andwf	___ftadd@f2+2,f
 11169  025F  083B               	movf	___ftadd@exp2,w
 11170  0260  023C               	subwf	___ftadd@exp1,w
 11171  0261  1803               	skipnc
 11172  0262  2A85               	goto	l2310
 11173  0263                     l2300:	
 11174  0263  3001               	movlw	1
 11175  0264                     u2275:	
 11176  0264  35B3               	lslf	___ftadd@f2,f
 11177  0265  0DB4               	rlf	___ftadd@f2+1,f
 11178  0266  0DB5               	rlf	___ftadd@f2+2,f
 11179  0267  0B89               	decfsz	9,f
 11180  0268  2A64               	goto	u2275
 11181  0269  3001               	movlw	1
 11182  026A  02BB               	subwf	___ftadd@exp2,f
 11183  026B  083B               	movf	___ftadd@exp2,w
 11184  026C  063C               	xorwf	___ftadd@exp1,w
 11185  026D  1903               	skipnz
 11186  026E  2A80               	goto	l2308
 11187  026F  3001               	movlw	1
 11188  0270  02BA               	subwf	___ftadd@sign,f
 11189  0271  083A               	movf	___ftadd@sign,w
 11190  0272  3907               	andlw	7
 11191  0273  1903               	btfsc	3,2
 11192  0274  2A80               	goto	l2308
 11193  0275  2A63               	goto	l2300
 11194  0276                     l2306:	
 11195  0276  3001               	movlw	1
 11196  0277                     u2305:	
 11197  0277  36B2               	lsrf	___ftadd@f1+2,f
 11198  0278  0CB1               	rrf	___ftadd@f1+1,f
 11199  0279  0CB0               	rrf	___ftadd@f1,f
 11200  027A  0B89               	decfsz	9,f
 11201  027B  2A77               	goto	u2305
 11202  027C  3001               	movlw	1
 11203  027D  00B6               	movwf	??___ftadd
 11204  027E  0836               	movf	??___ftadd,w
 11205  027F  07BC               	addwf	___ftadd@exp1,f
 11206  0280                     l2308:	
 11207  0280  083C               	movf	___ftadd@exp1,w
 11208  0281  063B               	xorwf	___ftadd@exp2,w
 11209  0282  1903               	btfsc	3,2
 11210  0283  2AAA               	goto	l670
 11211  0284  2A76               	goto	l2306
 11212  0285                     l2310:	
 11213  0285  083C               	movf	___ftadd@exp1,w
 11214  0286  023B               	subwf	___ftadd@exp2,w
 11215  0287  1803               	skipnc
 11216  0288  2AAA               	goto	l670
 11217  0289                     l2312:	
 11218  0289  3001               	movlw	1
 11219  028A                     u2335:	
 11220  028A  35B0               	lslf	___ftadd@f1,f
 11221  028B  0DB1               	rlf	___ftadd@f1+1,f
 11222  028C  0DB2               	rlf	___ftadd@f1+2,f
 11223  028D  0B89               	decfsz	9,f
 11224  028E  2A8A               	goto	u2335
 11225  028F  3001               	movlw	1
 11226  0290  02BC               	subwf	___ftadd@exp1,f
 11227  0291  083B               	movf	___ftadd@exp2,w
 11228  0292  063C               	xorwf	___ftadd@exp1,w
 11229  0293  1903               	skipnz
 11230  0294  2AA6               	goto	l2320
 11231  0295  3001               	movlw	1
 11232  0296  02BA               	subwf	___ftadd@sign,f
 11233  0297  083A               	movf	___ftadd@sign,w
 11234  0298  3907               	andlw	7
 11235  0299  1903               	btfsc	3,2
 11236  029A  2AA6               	goto	l2320
 11237  029B  2A89               	goto	l2312
 11238  029C                     l2318:	
 11239  029C  3001               	movlw	1
 11240  029D                     u2365:	
 11241  029D  36B5               	lsrf	___ftadd@f2+2,f
 11242  029E  0CB4               	rrf	___ftadd@f2+1,f
 11243  029F  0CB3               	rrf	___ftadd@f2,f
 11244  02A0  0B89               	decfsz	9,f
 11245  02A1  2A9D               	goto	u2365
 11246  02A2  3001               	movlw	1
 11247  02A3  00B6               	movwf	??___ftadd
 11248  02A4  0836               	movf	??___ftadd,w
 11249  02A5  07BB               	addwf	___ftadd@exp2,f
 11250  02A6                     l2320:	
 11251  02A6  083C               	movf	___ftadd@exp1,w
 11252  02A7  063B               	xorwf	___ftadd@exp2,w
 11253  02A8  1D03               	skipz
 11254  02A9  2A9C               	goto	l2318
 11255  02AA                     l670:	
 11256  02AA  1FBA               	btfss	___ftadd@sign,7
 11257  02AB  2ABC               	goto	l2324
 11258  02AC  30FF               	movlw	255
 11259  02AD  06B0               	xorwf	___ftadd@f1,f
 11260  02AE  30FF               	movlw	255
 11261  02AF  06B1               	xorwf	___ftadd@f1+1,f
 11262  02B0  30FF               	movlw	255
 11263  02B1  06B2               	xorwf	___ftadd@f1+2,f
 11264  02B2  3001               	movlw	1
 11265  02B3  07B0               	addwf	___ftadd@f1,f
 11266  02B4  3000               	movlw	0
 11267  02B5  1803               	skipnc
 11268  02B6  3001               	movlw	1
 11269  02B7  07B1               	addwf	___ftadd@f1+1,f
 11270  02B8  3000               	movlw	0
 11271  02B9  1803               	skipnc
 11272  02BA  3001               	movlw	1
 11273  02BB  07B2               	addwf	___ftadd@f1+2,f
 11274  02BC                     l2324:	
 11275  02BC  1F3A               	btfss	___ftadd@sign,6
 11276  02BD  2ACE               	goto	l2328
 11277  02BE  30FF               	movlw	255
 11278  02BF  06B3               	xorwf	___ftadd@f2,f
 11279  02C0  30FF               	movlw	255
 11280  02C1  06B4               	xorwf	___ftadd@f2+1,f
 11281  02C2  30FF               	movlw	255
 11282  02C3  06B5               	xorwf	___ftadd@f2+2,f
 11283  02C4  3001               	movlw	1
 11284  02C5  07B3               	addwf	___ftadd@f2,f
 11285  02C6  3000               	movlw	0
 11286  02C7  1803               	skipnc
 11287  02C8  3001               	movlw	1
 11288  02C9  07B4               	addwf	___ftadd@f2+1,f
 11289  02CA  3000               	movlw	0
 11290  02CB  1803               	skipnc
 11291  02CC  3001               	movlw	1
 11292  02CD  07B5               	addwf	___ftadd@f2+2,f
 11293  02CE                     l2328:	
 11294  02CE  01BA               	clrf	___ftadd@sign
 11295  02CF  0830               	movf	___ftadd@f1,w
 11296  02D0  07B3               	addwf	___ftadd@f2,f
 11297  02D1  0831               	movf	___ftadd@f1+1,w
 11298  02D2  3DB4               	addwfc	___ftadd@f2+1,f
 11299  02D3  0832               	movf	___ftadd@f1+2,w
 11300  02D4  3DB5               	addwfc	___ftadd@f2+2,f
 11301  02D5  1FB5               	btfss	___ftadd@f2+2,7
 11302  02D6  2AE9               	goto	l2338
 11303  02D7  30FF               	movlw	255
 11304  02D8  06B3               	xorwf	___ftadd@f2,f
 11305  02D9  30FF               	movlw	255
 11306  02DA  06B4               	xorwf	___ftadd@f2+1,f
 11307  02DB  30FF               	movlw	255
 11308  02DC  06B5               	xorwf	___ftadd@f2+2,f
 11309  02DD  3001               	movlw	1
 11310  02DE  07B3               	addwf	___ftadd@f2,f
 11311  02DF  3000               	movlw	0
 11312  02E0  1803               	skipnc
 11313  02E1  3001               	movlw	1
 11314  02E2  07B4               	addwf	___ftadd@f2+1,f
 11315  02E3  3000               	movlw	0
 11316  02E4  1803               	skipnc
 11317  02E5  3001               	movlw	1
 11318  02E6  07B5               	addwf	___ftadd@f2+2,f
 11319  02E7  01BA               	clrf	___ftadd@sign
 11320  02E8  0ABA               	incf	___ftadd@sign,f
 11321  02E9                     l2338:	
 11322  02E9  0833               	movf	___ftadd@f2,w
 11323  02EA  00F0               	movwf	___ftpack@arg
 11324  02EB  0834               	movf	___ftadd@f2+1,w
 11325  02EC  00F1               	movwf	___ftpack@arg+1
 11326  02ED  0835               	movf	___ftadd@f2+2,w
 11327  02EE  00F2               	movwf	___ftpack@arg+2
 11328  02EF  083C               	movf	___ftadd@exp1,w
 11329  02F0  00B6               	movwf	??___ftadd
 11330  02F1  0836               	movf	??___ftadd,w
 11331  02F2  00F3               	movwf	___ftpack@exp
 11332  02F3  083A               	movf	___ftadd@sign,w
 11333  02F4  00B7               	movwf	??___ftadd+1
 11334  02F5  0837               	movf	??___ftadd+1,w
 11335  02F6  00F4               	movwf	___ftpack@sign
 11336  02F7  318C  241F         	fcall	___ftpack
 11337  02F9  0870               	movf	?___ftpack,w
 11338  02FA  0020               	movlb	0	; select bank0
 11339  02FB  00B0               	movwf	?___ftadd
 11340  02FC  0871               	movf	?___ftpack+1,w
 11341  02FD  00B1               	movwf	?___ftadd+1
 11342  02FE  0872               	movf	?___ftpack+2,w
 11343  02FF  00B2               	movwf	?___ftadd+2
 11344  0300  0008               	return
 11345  0301                     __end_of___ftadd:	
 11346                           
 11347                           	psect	text39
 11348  093E                     __ptext39:	
 11349 ;; *************** function ___awtoft *****************
 11350 ;; Defined at:
 11351 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  c               2    8[COMMON] int 
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;  sign            1   13[COMMON] unsigned char 
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  3    8[COMMON] float 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2, status,0, pclath, cstack
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11365 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;Total ram usage:        6 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; Hardware stack levels required when called:    1
 11372 ;; This function calls:
 11373 ;;		___ftpack
 11374 ;; This function is called by:
 11375 ;;		_PID_Calculate
 11376 ;;		_log
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           
 11381                           ;psect for function ___awtoft
 11382  093E                     ___awtoft:	
 11383                           
 11384                           ;incstack = 0
 11385                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11386  093E  01FD               	clrf	___awtoft@sign
 11387  093F  1FF9               	btfss	___awtoft@c+1,7
 11388  0940  2948               	goto	l2622
 11389  0941  09F8               	comf	___awtoft@c,f
 11390  0942  09F9               	comf	___awtoft@c+1,f
 11391  0943  0AF8               	incf	___awtoft@c,f
 11392  0944  1903               	skipnz
 11393  0945  0AF9               	incf	___awtoft@c+1,f
 11394  0946  01FD               	clrf	___awtoft@sign
 11395  0947  0AFD               	incf	___awtoft@sign,f
 11396  0948                     l2622:	
 11397  0948  0878               	movf	___awtoft@c,w
 11398  0949  00F0               	movwf	___ftpack@arg
 11399  094A  0879               	movf	___awtoft@c+1,w
 11400  094B  00F1               	movwf	___ftpack@arg+1
 11401  094C  01F2               	clrf	___ftpack@arg+2
 11402  094D  308E               	movlw	142
 11403  094E  00FB               	movwf	??___awtoft
 11404  094F  087B               	movf	??___awtoft,w
 11405  0950  00F3               	movwf	___ftpack@exp
 11406  0951  087D               	movf	___awtoft@sign,w
 11407  0952  00FC               	movwf	??___awtoft+1
 11408  0953  087C               	movf	??___awtoft+1,w
 11409  0954  00F4               	movwf	___ftpack@sign
 11410  0955  318C  241F         	fcall	___ftpack
 11411  0957  0870               	movf	?___ftpack,w
 11412  0958  00F8               	movwf	?___awtoft
 11413  0959  0871               	movf	?___ftpack+1,w
 11414  095A  00F9               	movwf	?___awtoft+1
 11415  095B  0872               	movf	?___ftpack+2,w
 11416  095C  00FA               	movwf	?___awtoft+2
 11417  095D  0008               	return
 11418  095E                     __end_of___awtoft:	
 11419                           
 11420                           	psect	text40
 11421  0C1F                     __ptext40:	
 11422 ;; *************** function ___ftpack *****************
 11423 ;; Defined at:
 11424 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 11425 ;; Parameters:    Size  Location     Type
 11426 ;;  arg             3    0[COMMON] unsigned um
 11427 ;;  exp             1    3[COMMON] unsigned char 
 11428 ;;  sign            1    4[COMMON] unsigned char 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;		None
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  3    0[COMMON] float 
 11433 ;; Registers used:
 11434 ;;		wreg, status,2, status,0
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11440 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;Total ram usage:        8 bytes
 11445 ;; Hardware stack levels used:    1
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		___awtoft
 11450 ;;		___ftadd
 11451 ;;		___ftdiv
 11452 ;;		___ftmul
 11453 ;;		___lbtoft
 11454 ;;		___lwtoft
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           
 11459                           ;psect for function ___ftpack
 11460  0C1F                     ___ftpack:	
 11461                           
 11462                           ;incstack = 0
 11463                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11464  0C1F  0873               	movf	___ftpack@exp,w
 11465  0C20  1903               	btfsc	3,2
 11466  0C21  2C27               	goto	l2068
 11467  0C22  0872               	movf	___ftpack@arg+2,w
 11468  0C23  0471               	iorwf	___ftpack@arg+1,w
 11469  0C24  0470               	iorwf	___ftpack@arg,w
 11470  0C25  1D03               	skipz
 11471  0C26  2C38               	goto	l2074
 11472  0C27                     l2068:	
 11473  0C27  3000               	movlw	0
 11474  0C28  00F0               	movwf	?___ftpack
 11475  0C29  3000               	movlw	0
 11476  0C2A  00F1               	movwf	?___ftpack+1
 11477  0C2B  3000               	movlw	0
 11478  0C2C  00F2               	movwf	?___ftpack+2
 11479  0C2D  0008               	return
 11480  0C2E                     l2072:	
 11481  0C2E  3001               	movlw	1
 11482  0C2F  00F5               	movwf	??___ftpack
 11483  0C30  0875               	movf	??___ftpack,w
 11484  0C31  07F3               	addwf	___ftpack@exp,f
 11485  0C32  3001               	movlw	1
 11486  0C33                     u1715:	
 11487  0C33  36F2               	lsrf	___ftpack@arg+2,f
 11488  0C34  0CF1               	rrf	___ftpack@arg+1,f
 11489  0C35  0CF0               	rrf	___ftpack@arg,f
 11490  0C36  0B89               	decfsz	9,f
 11491  0C37  2C33               	goto	u1715
 11492  0C38                     l2074:	
 11493  0C38  30FE               	movlw	254
 11494  0C39  0572               	andwf	___ftpack@arg+2,w
 11495  0C3A  1903               	btfsc	3,2
 11496  0C3B  2C51               	goto	l639
 11497  0C3C  2C2E               	goto	l2072
 11498  0C3D                     l2076:	
 11499  0C3D  3001               	movlw	1
 11500  0C3E  00F5               	movwf	??___ftpack
 11501  0C3F  0875               	movf	??___ftpack,w
 11502  0C40  07F3               	addwf	___ftpack@exp,f
 11503  0C41  3001               	movlw	1
 11504  0C42  07F0               	addwf	___ftpack@arg,f
 11505  0C43  3000               	movlw	0
 11506  0C44  1803               	skipnc
 11507  0C45  3001               	movlw	1
 11508  0C46  07F1               	addwf	___ftpack@arg+1,f
 11509  0C47  3000               	movlw	0
 11510  0C48  1803               	skipnc
 11511  0C49  3001               	movlw	1
 11512  0C4A  07F2               	addwf	___ftpack@arg+2,f
 11513  0C4B  3001               	movlw	1
 11514  0C4C                     u1735:	
 11515  0C4C  36F2               	lsrf	___ftpack@arg+2,f
 11516  0C4D  0CF1               	rrf	___ftpack@arg+1,f
 11517  0C4E  0CF0               	rrf	___ftpack@arg,f
 11518  0C4F  0B89               	decfsz	9,f
 11519  0C50  2C4C               	goto	u1735
 11520  0C51                     l639:	
 11521  0C51  30FF               	movlw	255
 11522  0C52  0572               	andwf	___ftpack@arg+2,w
 11523  0C53  1903               	btfsc	3,2
 11524  0C54  2C5E               	goto	l2084
 11525  0C55  2C3D               	goto	l2076
 11526  0C56                     l2082:	
 11527  0C56  3001               	movlw	1
 11528  0C57  02F3               	subwf	___ftpack@exp,f
 11529  0C58  3001               	movlw	1
 11530  0C59                     u1755:	
 11531  0C59  35F0               	lslf	___ftpack@arg,f
 11532  0C5A  0DF1               	rlf	___ftpack@arg+1,f
 11533  0C5B  0DF2               	rlf	___ftpack@arg+2,f
 11534  0C5C  0B89               	decfsz	9,f
 11535  0C5D  2C59               	goto	u1755
 11536  0C5E                     l2084:	
 11537  0C5E  1BF1               	btfsc	___ftpack@arg+1,7
 11538  0C5F  2C64               	goto	l646
 11539  0C60  3002               	movlw	2
 11540  0C61  0273               	subwf	___ftpack@exp,w
 11541  0C62  1803               	skipnc
 11542  0C63  2C56               	goto	l2082
 11543  0C64                     l646:	
 11544  0C64  1873               	btfsc	___ftpack@exp,0
 11545  0C65  2C6C               	goto	l647
 11546  0C66  30FF               	movlw	255
 11547  0C67  05F0               	andwf	___ftpack@arg,f
 11548  0C68  307F               	movlw	127
 11549  0C69  05F1               	andwf	___ftpack@arg+1,f
 11550  0C6A  30FF               	movlw	255
 11551  0C6B  05F2               	andwf	___ftpack@arg+2,f
 11552  0C6C                     l647:	
 11553  0C6C  1003               	clrc
 11554  0C6D  0CF3               	rrf	___ftpack@exp,f
 11555  0C6E  0873               	movf	___ftpack@exp,w
 11556  0C6F  00F5               	movwf	??___ftpack
 11557  0C70  01F6               	clrf	??___ftpack+1
 11558  0C71  01F7               	clrf	??___ftpack+2
 11559  0C72  3010               	movlw	16
 11560  0C73                     u1795:	
 11561  0C73  35F5               	lslf	??___ftpack,f
 11562  0C74  0DF6               	rlf	??___ftpack+1,f
 11563  0C75  0DF7               	rlf	??___ftpack+2,f
 11564  0C76  0B89               	decfsz	9,f
 11565  0C77  2C73               	goto	u1795
 11566  0C78  0875               	movf	??___ftpack,w
 11567  0C79  04F0               	iorwf	___ftpack@arg,f
 11568  0C7A  0876               	movf	??___ftpack+1,w
 11569  0C7B  04F1               	iorwf	___ftpack@arg+1,f
 11570  0C7C  0877               	movf	??___ftpack+2,w
 11571  0C7D  04F2               	iorwf	___ftpack@arg+2,f
 11572  0C7E  0874               	movf	___ftpack@sign,w
 11573  0C7F  1903               	btfsc	3,2
 11574  0C80  0008               	return
 11575  0C81  17F2               	bsf	___ftpack@arg+2,7
 11576  0C82  0008               	return
 11577  0C83                     __end_of___ftpack:	
 11578                           
 11579                           	psect	text41
 11580  0824                     __ptext41:	
 11581 ;; *************** function _ADCC_GetSingleConversion *****************
 11582 ;; Defined at:
 11583 ;;		line 52 in file "adcc.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;  channel         1    wreg     enum E14259
 11586 ;; Auto vars:     Size  Location     Type
 11587 ;;  channel         1    3[COMMON] enum E14259
 11588 ;; Return value:  Size  Location     Type
 11589 ;;                  2    0[COMMON] unsigned int 
 11590 ;; Registers used:
 11591 ;;		wreg
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11597 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;Total ram usage:        4 bytes
 11602 ;; Hardware stack levels used:    1
 11603 ;; This function calls:
 11604 ;;		Nothing
 11605 ;; This function is called by:
 11606 ;;		_main
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           
 11611                           ;psect for function _ADCC_GetSingleConversion
 11612  0824                     _ADCC_GetSingleConversion:	
 11613                           
 11614                           ;incstack = 0
 11615                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11616                           ;ADCC_GetSingleConversion@channel stored from wreg
 11617  0824  00F3               	movwf	ADCC_GetSingleConversion@channel
 11618                           
 11619                           ;adcc.c: 55: ADPCH = channel;
 11620  0825  0873               	movf	ADCC_GetSingleConversion@channel,w
 11621  0826  0021               	movlb	1	; select bank1
 11622  0827  009E               	movwf	30	;volatile
 11623                           
 11624                           ;adcc.c: 58: ADCON0bits.ADON = 1;
 11625  0828  1793               	bsf	19,7	;volatile
 11626                           
 11627                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
 11628  0829  1313               	bcf	19,6	;volatile
 11629                           
 11630                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
 11631  082A  1413               	bsf	19,0	;volatile
 11632  082B                     l210:	
 11633                           ;adcc.c: 68: {
 11634                           
 11635                           ;adcc.c: 67: while (ADCON0bits.ADGO)
 11636                           
 11637  082B  1813               	btfsc	19,0	;volatile
 11638  082C  282B               	goto	l210
 11639                           
 11640                           ;adcc.c: 69: }
 11641                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
 11642  082D  080D               	movf	13,w	;volatile
 11643  082E  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11644  082F  080C               	movf	12,w	;volatile
 11645  0830  00F0               	movwf	?_ADCC_GetSingleConversion
 11646  0831  0008               	return
 11647  0832                     __end_of_ADCC_GetSingleConversion:	
 11648  007E                     btemp	set	126	;btemp
 11649  007E                     wtemp0	set	126


Data Sizes:
    Strings     16
    Constant    27
    Data        30
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      80
    BANK1            80     40      74
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___lwdiv
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___lbtoft->___ftpack
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___awtoft
    ___ftmul->___awtoft
    ___ftge->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->___fttol
    _tempSetpoint->_readButtons
    _readButtons->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___fttol->_PID_Calculate
    ___ftsub->___ftadd
    _PID_Calculate->___ftge
    ___ftge->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0   67756
                                              0 BANK1     40    40      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    8922
                                             17 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4437
                                             14 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     480
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     910
                                              2 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   18253
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7577
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             61 BANK0     14    10      4
                      _PID_Calculate (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4070
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0     709
                                              7 COMMON     1     1      0
                    _ADCC_Initialize
                    _InitCustomChars
                           _Init_PID
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0     220
                                              2 COMMON     2     2      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _Init_PID                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              1     1      0     110
                                              1 COMMON     1     1      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                       23    18      5   10734
                                             38 BANK0     23    18      5
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     244
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2933
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     852
                                             29 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3897
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2406
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _Init_PID
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     28      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May 13 01:30:54 2018

                                _x 006B                        __CFG_CP$OFF 0000  
                               l30 0894                                 l32 0899  
                               l34 089E                                 l28 088E  
                     ___awdiv@sign 0076                ___wmul@multiplicand 0072  
      __size_of_PWM6_LoadDutyValue 0016                       ___ftadd@exp1 003C  
                     ___ftadd@exp2 003B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003A                                l210 082B  
                              l340 0069                                l283 03B7  
                              l284 03E6                                l285 047D  
                              l533 0CFB                                l730 0DD9  
                              l646 0C64                                l670 02AA  
                              l478 090D                                l647 0C6C  
                              l639 0C51                                _GIE 005F  
                              _RB0 0068                                _RB1 0069  
                              _RA3 0063                                _RB2 006A  
                              _RA4 0064                                _RB3 006B  
                              _RB4 006C                                _RB5 006D  
                     __CFG_CPD$OFF 0000                                _log 0E9C  
                     ___awmod@sign 0076                    _TMR2_Initialize 0850  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCD_Cmd 0841                       __CFG_ZCD$OFF 0000  
                     ___ftdiv@cntr 002A                     _LCD_Set_Cursor 0AEA  
                     ___ftdiv@sign 002F                               l2030 089A  
                             l2022 0890                               l2110 0B83  
                             l2120 0B8B                               l2104 0B78  
                             l2026 0895                               l3002 0A35  
                             l2122 0B97                               l2300 0263  
                             l2132 0BB2                               l2220 0163  
                             l3100 076F                               l2310 0285  
                             l2230 016A                               l2206 08ED  
                             l2072 0C2E                               l2320 02A6  
                             l2312 0289                               l2400 096B  
                             l2136 0BBA                               l2128 0BA9  
                             l2160 0B40                               l2152 0B3A  
                             l2240 01A9                               l2232 0197  
                             l3024 04C2                               l2082 0C56  
                             l2074 0C38                               l2306 0276  
                             l2162 0B4C                               l2170 0B61  
                             l2250 01EA                               l2242 01BA  
                             l3114 07BD                               l3106 077E  
                             l2084 0C5E                               l2076 0C3D  
                             l2068 0C27                               l2324 02BC  
                             l2308 0280                               l2260 0907  
                             l2148 0B33                               l2236 019B  
                             l2318 029C                               l2406 097C  
                             l2190 0B0A                               l2174 0B69  
                             l2166 0B58                               l2254 01F7  
                             l2238 01A0                               l3070 06E8  
                             l3038 055B                               l2328 02CE  
                             l2248 01BE                               l2338 02E9  
                             l2282 023A                               l2370 0FBC  
                             l2354 0F79                               l2602 0078  
                             l2348 0F63                               l2612 0088  
                             l2604 0079                               l2622 0948  
                             l2278 0233                               l2630 0AC5  
                             l2382 0FD8                               l2366 0FB4  
                             l2288 0249                               l2634 0ADB  
                             l2378 0FD0                               l2812 0128  
                             l2750 04A5                               l2910 0E61  
                             l2662 0A85                               l2558 0007  
                             l2680 0C18                               l2592 0064  
                             l2930 0928                               l2834 0ECE  
                             l2940 0D85                               l2828 0EBB  
                             l2764 00A0                               l2862 0D1C  
                             l2854 0D0C                               l2918 0E7A  
                             l2880 0D63                               l2872 0D4A  
                             l2864 0D2A                               l2960 0DC3  
                             l2792 00E9                               l2784 0090  
                             l2890 0E0A                               l2786 00DE  
                             l2876 0D55                               l2972 0DEA  
                             l2966 0DD0                               l2958 0DB5  
                             l2990 0A0E                               l2896 0E20  
                             l2968 0DDC                               l2992 0A1A  
                             ?_log 0047                               l2998 0A2C  
                             STR_1 101B                               STR_2 101B  
                             STR_3 101B                               STR_4 1025  
                             u2015 0AF6                               u2050 014D  
                             u2035 0B15                               u2115 01D8  
                             u3005 0E71                               _LATA 0016  
                             _LATB 0017                               u3015 0E7B  
                             _LATC 0018                               u2305 0277  
                             u3115 0DD1                               u2155 090E  
                             u2165 0913                               u2335 028A  
                             u3055 0D8C                               u2505 0FD9  
                             _T2PR 028D                               u1715 0C33  
                             u2275 0264                               u2515 0FDF  
                             u2435 0F85                               u3155 0A11  
                             u3307 0058                               u2365 029D  
                             u2445 0F95                               u3317 0A55  
                             u3085 0DB6                               u2550 0A04  
                             u1735 0C4C                               u3407 0CC4  
                             u3327 0A60                               u3175 0A1B  
                             u2465 0FBD                               u3417 0CCF  
                             u3337 0A6B                               u3185 0A25  
                      main@counter 00BA                               u1755 0C59  
                             u2475 0FC3                               u3427 0CDB  
                             u3347 0C8B                               u3195 0A2D  
                             u1685 09BA                               u3437 0CE7  
                             u3357 0C97                               u1845 0B8E  
                             u3277 00D5                               u2735 0881  
                             u3447 09C5                               u3367 0CA0  
                             u3287 0120                               u3457 09D0  
                             u3377 0CA7                               u2905 0D2B  
                             u1865 0B98                               u1945 0B43  
                             u3297 0138                               u1795 0C73  
                             u3467 083D                               u3387 0CAE  
                             u2915 0D3F                               u1875 0BA2  
                             u3397 0CB9                               u2925 0D4B  
                             u1885 0BAA                               u1965 0B52  
                             u1975 0B59                               u2885 0D1F  
                             u2975 0E32                               u2985 0E42  
                             u2995 0E62                               _WPUA 0F39  
                             _WPUB 0F44                               _WPUC 0F4F  
                             _WPUE 0F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                  ?_LCD_Write_String 0075  
                      main@minutes 00B6                        main@seconds 00B8  
                             _main 04AD                       ___ftpack@arg 0070  
               __size_of_LCD_Clear 0008                       ___ftpack@exp 0073  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               log@x 0047  
                             start 0002                 ??_LCD_Write_String 0077  
                    __CFG_CSWEN$ON 0000                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                      _LCD_Write_Int 0142  
                     ___ftmul@sign 002F                       ___fttol@exp1 006A  
                     ___fttol@lval 0066                              ??_log 004A  
          __end_of_TMR0_Initialize 0850                   __end_of_LCD_Init 0CEA  
                 __end_of_LCD_Port 08A0                       ?_readButtons 0070  
   __size_of_OSCILLATOR_Initialize 0008      __end_of_OSCILLATOR_Initialize 080B  
                  __end_of___aldiv 0D6C                              _ADACQ 009D  
                            _ADACT 0099                              _ADCAP 009B  
                            ?_main 0070                              _ADCLK 0098  
                            _ADPCH 009E                              _ADREF 009A  
                  __end_of___awdiv 0BBF                              _ADPRE 009C  
                  __end_of___ftadd 0301                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0B6E                              _ADRPT 010D  
                  __end_of___ftdiv 0E9C                    __end_of___ftneg 17EC  
                  __end_of___ftmul 1000                    ___awdiv@divisor 0070  
                  __end_of___ftsub 093E                    __end_of___fttol 0DF3  
                            _T2CON 028E                main@readTemperature 00BC  
                            _T2HLT 028F                    __end_of___lwdiv 0A3A  
                            _T2TMR 028C                              _T2RST 0291  
                  ___awdiv@counter 0075                              _OSCEN 0891  
                            _TMR0H 001D                              _TMR0L 001C  
                            _TRISA 0011                              _TRISB 0012  
                            _TRISC 0013                    _PWM6_Initialize 0817  
           __end_of_LCD_Set_Cursor 0B29                      ___awtoft@sign 007D  
                            _frexp 0A73                              _errno 00DC  
                    ___ftpack@sign 0074                              main@R 00AE  
                   __CFG_BOREN$OFF 0000                              status 0003  
                            wtemp0 007E                   InitCustomChars@i 0076  
                   ?_LCD_Write_Int 0079                     _LCD_Write_Char 09AA  
                  __initialization 07C4                        log@exponent 004B  
                     __end_of_main 07C4                   __end_of_Init_PID 09AA  
          __end_of_TMR2_Initialize 085F                             ??_main 00A0  
                    ___fttol@sign1 0065                  __end_of_LCD_Clear 17F4  
                        ??_LCD_Cmd 0071                    ?_LCD_Set_Cursor 0072  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0070                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0072  
                           _ADUTHL 0110                   __end_of___awtoft 095E  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 0C83  
                 __end_of___lbtoft 08EB                 __CFG_RSTOSC$HFINT1 0000  
                           _T0CON0 001E                             _T0CON1 001F  
                           _RA1PPS 0F11                     __CFG_WDTCCS$SC 0000  
                           _FVRCON 090C                   __end_of___lwtoft 0872  
                           _PID_Kd 00D3                             _PID_Ki 00D6  
                           _PID_Kp 00D9                             _OSCFRQ 0893  
                           _TMR0IF 3865             __end_of_LCD_Write_Char 09D4  
                   __CFG_PWRTE$OFF 0000                       _CCPTMRS1bits 021F  
                           ___ftge 0AAE             LCD_Write_Int@numPlaces 007C  
                        ??___aldiv 0078                             ___wmul 0905  
                        ??___awdiv 0074                          ??___ftadd 0036  
                   __CFG_STVREN$ON 0000                          ??___awmod 0074  
                        ??___ftdiv 0026                          ??___ftneg 0073  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0061                          ??___lwdiv 007A  
                 ?_TMR0_Initialize 0070            __end_of_PWM6_Initialize 0824  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075              ___ftmul@f3_as_product 002B  
                  _ADCC_Initialize 08B8  __size_of_ADCC_GetSingleConversion 000E  
        ?_ADCC_GetSingleConversion 0070                   LCD_Write_Int@str 0025  
                    main@steinhart 00C5                    _InitCustomChars 095E  
                  LCD_Set_Cursor@w 0077                    LCD_Set_Cursor@x 0075  
                  LCD_Set_Cursor@y 0072                    LCD_Set_Cursor@z 0076  
                    _pidIntegrated 00D0                  _SYSTEM_Initialize 0A3A  
                 __end_oflog@coeff 101B            __end_of__initialization 07FD  
                        ?_LCD_Init 0070                          ?_LCD_Port 0070  
                       ___ftadd@f1 0030                         ___ftadd@f2 0033  
                       ___ftge@ff1 003D                         ___ftge@ff2 0040  
                  ??_LCD_Write_Int 0020                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0044                         ___ftdiv@f1 0023  
                       ___ftdiv@f2 0020                         ___ftdiv@f3 002B  
                  ?_LCD_Write_Char 0070                         ___ftneg@f1 0070  
                    LCD_Init@style 0073                         ___awtoft@c 0078  
                       ___lbtoft@c 007B                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0040  
                       ___ftsub@f2 003D                         ___fttol@f1 005D  
                   __pcstackCOMMON 0070                          LCD_Port@a 0070  
                     __pidataBANK0 0005                       __pidataBANK1 17DF  
                     __pidataBANK2 08A0                ??_SYSTEM_Initialize 0077  
                    __end_of_frexp 0AAE                   ?_TMR2_Initialize 0070  
                       ___lwtoft@c 0078               __size_of_readButtons 0084  
                          ??_frexp 0074          __end_of_SYSTEM_Initialize 0A73  
                       __pbssBANK0 006B                         __pbssBANK1 00C8  
               __size_of_eval_poly 0060                          ?_Init_PID 0070  
                       ??_LCD_Init 0072                         ??_LCD_Port 0070  
           __size_of_PID_Calculate 01AC                PID_Calculate@Result 0057  
                       __pmaintext 04AD                            ?___ftge 003D  
                          ?___wmul 0070                    __CFG_PPS1WAY$ON 0000  
          __end_of_ADCC_Initialize 08D1         __end_of_PWM6_LoadDutyValue 0888  
        __size_of_LCD_Write_String 001A                   ?_PWM6_Initialize 0070  
                        ?___awtoft 0078                          ?___ftpack 0070  
                        ?___lbtoft 0078                            _ADSTPTH 0113  
                          _ADSTPTL 0112                          ?___lwtoft 0078  
          __end_of_InitCustomChars 0984                            _LCD_Cmd 0832  
                          _OSCCON1 088D                            _OSCCON3 088F  
                          _OSCTUNE 0892                            _PWM6DCH 038D  
                          _PWM6DCL 038C                            _PWM6CON 038E  
                          _PPSLOCK 0E8F                         ??_Init_PID 0070  
            PID_Calculate@setpoint 0046                      ?_tempSetpoint 0070  
             __CFG_SCANE$available 0000                            ___aldiv 0CEA  
                          ___cgram 0120                    __size_of___ftge 003C  
                          ___awdiv 0B6E                            ___ftadd 020B  
                          ___awmod 0B29                            ___ftdiv 0DF3  
                          ___ftneg 17E4                    __size_of___wmul 001B  
                          ___ftmul 0F4C                            ___ftsub 0920  
                          ___fttol 0D6C                            ___lwdiv 0A06  
                       ??___awtoft 007B                         ??___ftpack 0075  
                       ??___lbtoft 0020                  __end_of_eval_poly 0C1F  
                 ??_LCD_Set_Cursor 0073                            __ptext1 008A  
                          __ptext2 0006                            __ptext3 08EB  
                          __ptext4 0142                            __ptext5 0B29  
                          __ptext6 0B6E                            __ptext7 0AEA  
                          __ptext8 0E9C                            __ptext9 0A73  
                       ??___lwtoft 007B                      _PID_Calculate 0301  
     PID_Calculate@derivativeValue 0051              _OSCILLATOR_Initialize 0803  
                        _T2CONbits 028E                       __size_of_log 00B0  
                 ___awmod@dividend 0072                   ___aldiv@dividend 0074  
         ??_PIN_MANAGER_Initialize 0070                            _upCount 006D  
                          _samples 238C                          _LCD_Clear 17EC  
                          _presets 00E5         __size_of_SYSTEM_Initialize 0039  
                          clrloop0 17F5               end_of_initialization 07FD  
                          init_ram 080B                            initloop 080C  
                   ??_tempSetpoint 0031          PID_Calculate@pidPrevError 0054  
                 ___aldiv@quotient 0022            PID_Calculate@errorValue 004B  
                LCD_Write_Int@sign 007D                tempSetpoint@counter 0034  
                     __pstringtext 1000                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 0832              __CFG_WDTCPS$WDTCPS_31 0000  
                   ?_PID_Calculate 0046                 _PID_Calculate$1061 004E  
                 ?_InitCustomChars 0070                         ?_LCD_Clear 0070  
                 __CFG_FEXTOSC$OFF 0000                  LCD_Write_String@a 0075  
                LCD_Write_String@i 0078                   ??_LCD_Write_Char 0071  
                      ___ftdiv@exp 002E                  __size_of_LCD_Init 0067  
                       main@toggle 00BE                  __size_of_LCD_Port 0018  
                       main@totals 00C1                        ___ftmul@exp 002A  
                   __end_of___ftge 0AEA                     __end_of___wmul 0920  
                 _LCD_Write_String 08EB             ?_OSCILLATOR_Initialize 0070  
              start_initialization 07C4                         eval_poly@d 0040  
                       eval_poly@n 0042                         eval_poly@x 003D  
         __size_of_TMR0_Initialize 000F    __size_of_PIN_MANAGER_Initialize 0032  
                      __end_of_log 0F4C                         frexp@value 0070  
         LCD_Write_Int@fieldLength 007B                  __size_of_Init_PID 0026  
            __end_of_LCD_Write_Int 020B                   __CFG_LPBOREN$OFF 0000  
                         ??___ftge 0043                           ??___wmul 0074  
                     _pidMaxOutput 00E0                        __pdataBANK0 006F  
                      __pdataBANK1 00E5                        __pdataBANK2 0120  
                  ??_PID_Calculate 007E                      ??_readButtons 002E  
                  LCD_Write_Char@a 0074                    LCD_Write_Char@y 0073  
                     _pidMinOutput 00E2                           ?_LCD_Cmd 0070  
                __size_of___awtoft 0020           _ADCC_GetSingleConversion 0824  
                __size_of___ftpack 0064                  __size_of___lbtoft 001A  
                      __pbssBIGRAM 238C                           LCD_Cmd@a 0071  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
             __end_of_tempSetpoint 0142                 _PWM6_LoadDutyValue 0872  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0072  
                     _pidPrevInput 00CD                ?_PWM6_LoadDutyValue 0070  
                        _main$1062 00B1                   ___lwdiv@dividend 0078  
           _PIN_MANAGER_Initialize 09D4                 PID_Calculate@error 005A  
                         ?___aldiv 0070    ADCC_GetSingleConversion@channel 0073  
                         ?___awdiv 0070                           ?___ftadd 0030  
                         ?___awmod 0070                           ?___ftdiv 0020  
                         ?___ftneg 0070                           ?___ftmul 0020  
                         ?___ftsub 003D                           ?___fttol 005D  
                         ?___lwdiv 0076                    main@displayTemp 00BF  
             ??_PWM6_LoadDutyValue 0072                          _downCount 006E  
                        _eval_poly 0BBF                __end_of_readButtons 008A  
         __size_of_PWM6_Initialize 000D                   ___lwdiv@quotient 007B  
                   __size_of_frexp 003B                           _T2CLKCON 0290  
                  ___aldiv@divisor 0070                  ??_TMR0_Initialize 0070  
                  ___aldiv@counter 0020                           _LCD_Init 0C83  
                   ___wmul@product 0074                           _LCD_Port 0888  
                        clear_ram0 17F4                           _PIE0bits 0716  
                         _PIR0bits 070C                           _PIR4bits 0710  
                       _ADCON0bits 0093                  ___wmul@multiplier 0070  
                       ?_eval_poly 003D                   __size_of_LCD_Cmd 000F  
         __end_of_LCD_Write_String 0905                           _Init_PID 0984  
                ??_TMR2_Initialize 0070                          frexp@eptr 0073  
          ??_OSCILLATOR_Initialize 0070                     LCD_Write_Int@i 002C  
                   LCD_Write_Int@j 002A                   __size_of___aldiv 0082  
                 __size_of___awdiv 0051                   __size_of___ftadd 00F6  
                 __size_of___awmod 0045                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0008                   __size_of___ftmul 00B4  
                 __size_of___ftsub 001E                   __size_of___fttol 0087  
                 __size_of___lwdiv 0034                        _readButtons 0006  
                         ___awtoft 093E                           ___ftpack 0C1F  
                         ___lbtoft 08D1              __size_of_tempSetpoint 00B8  
                         ___lwtoft 085F                         _T0CON0bits 001E  
         __size_of_ADCC_Initialize 0019                    main@sampleIndex 00DE  
                  ___lwdiv@divisor 0076                        _oldSetpoint 006C  
                  ___lwdiv@counter 007D                  PID_Calculate@temp 0048  
                         __ptext10 0BBF                           __ptext11 0905  
                         __ptext20 0850                           __ptext12 085F  
                         __ptext21 0841                           __ptext13 0A06  
                         __ptext30 0832                           __ptext22 0817  
                         __ptext14 08D1                           __ptext31 0888  
                         __ptext23 09D4                           __ptext15 0D6C  
                         __ptext40 0C1F                           __ptext32 08B8  
                         __ptext24 0803                           __ptext16 0920  
                         __ptext41 0824                           __ptext33 0872  
                         __ptext25 0C83                           __ptext17 0DF3  
                         __ptext34 0301                           __ptext26 17EC  
                         __ptext18 0CEA                           __ptext35 17E4  
                         __ptext27 0984                           __ptext19 0A3A  
                         __ptext36 0F4C                           __ptext28 095E  
                         __ptext37 0AAE                           __ptext29 09AA  
                         __ptext38 020B                           __ptext39 093E  
          __size_of_LCD_Set_Cursor 003F           __size_of_InitCustomChars 0026  
              LCD_Write_Int@F14394 00C8                  ??_PWM6_Initialize 0070  
                    __size_of_main 0317               __CFG_WDTCWS$WDTCWS_7 0000  
                     _tempSetpoint 008A         ??_ADCC_GetSingleConversion 0073  
                         _setpoint 006F        PIN_MANAGER_Initialize@state 0070  
                         log@coeff 1000                        ??_eval_poly 007E  
               LCD_Write_Char@temp 0072            ?_PIN_MANAGER_Initialize 0070  
                __CFG_CLKOUTEN$OFF 0000                        _PPSLOCKbits 0E8F  
          __size_of_LCD_Write_Char 002A                 LCD_Set_Cursor@temp 0078  
               LCD_Write_Int@value 0079              __end_of_PID_Calculate 04AD  
                  _TMR0_Initialize 0841                       ___aldiv@sign 0021  
           __size_of_LCD_Write_Int 00C9        PWM6_LoadDutyValue@dutyValue 0070  
   __end_of_PIN_MANAGER_Initialize 0A06                  ??_ADCC_Initialize 0070  
                   main@PWM_Output 00B4                        _toggleCount 00E4  
                ??_InitCustomChars 0075  
